Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 91, 99, 100, 102, 103, 104, 105, 106, 109, 112, 116, 118, 119, 121, 124, 126, 127, 130, 136, 137, 141, 142, 143, 144, 146, 154, 155, 156, 157, 158, 159, 161, 164, 165, 167, 168, 178, 179, 181, 182, 183, 184, 191, 193, 195, 197, 198, 199, 200, 204, 205, 206, 210, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 246, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 303, 307, 312, 313, 317, 318, 321, 330, 331, 332, 333, 336, 337, 338, 342, 343, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360], "open": [0, 5, 7, 11, 56, 343, 354, 359], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "reinforc": [0, 3, 9, 53, 119, 181, 182, 183, 184, 188, 232, 236, 250, 251, 255, 256, 257, 259, 263, 264, 270, 271, 272, 335, 341, 343, 346, 347, 352, 355, 358, 359], "learn": [0, 3, 7, 8, 9, 17, 31, 53, 54, 55, 57, 58, 102, 119, 181, 182, 183, 184, 188, 201, 207, 232, 236, 250, 251, 255, 256, 257, 259, 263, 264, 269, 270, 271, 272, 335, 337, 338, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 358, 359, 360], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 51, 99, 154, 207, 225, 237, 245, 250, 252, 265, 266, 268, 270, 308, 334, 336, 337, 338, 339, 342, 343, 344, 349, 352, 354, 356, 357, 360], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 17, 18, 19, 36, 42, 83, 84, 93, 100, 171, 335, 336, 337, 340, 342, 343, 344, 346, 347, 349, 354, 355, 360], "pytorch": [0, 1, 2, 3, 54, 110, 111, 157, 168, 191, 195, 206, 207, 317, 334, 336, 339, 342, 344, 345, 348, 352, 354, 355, 356, 357, 359, 360], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 42, 53, 85, 89, 93, 98, 103, 104, 105, 107, 108, 109, 110, 111, 115, 165, 167, 195, 307, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 71, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 103, 104, 105, 107, 108, 109, 110, 111, 115, 116, 118, 119, 122, 123, 124, 126, 127, 128, 136, 137, 141, 142, 146, 149, 153, 154, 155, 158, 159, 161, 163, 165, 167, 168, 176, 177, 178, 179, 181, 191, 193, 194, 195, 197, 200, 201, 204, 205, 207, 208, 221, 223, 225, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 307, 313, 326, 331, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "directli": [0, 3, 4, 8, 22, 51, 67, 81, 82, 85, 88, 89, 99, 103, 109, 146, 164, 266, 333, 337, 343, 344, 346, 354, 355, 357], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 172, 175, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 213, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 273, 275, 279, 280, 281, 282, 283, 284, 287, 299, 300, 308, 314, 317, 320, 321, 326, 327, 329, 330, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360], "pypi": [0, 2, 359], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 85, 89, 92, 100, 103, 104, 105, 106, 109, 110, 111, 123, 141, 155, 157, 158, 159, 161, 163, 166, 167, 178, 179, 191, 194, 195, 199, 205, 206, 213, 221, 222, 226, 228, 240, 241, 300, 307, 314, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 357, 360], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 76, 85, 89, 92, 93, 103, 104, 105, 106, 109, 110, 111, 157, 161, 166, 167, 188, 195, 199, 206, 208, 225, 229, 231, 232, 240, 245, 250, 259, 266, 268, 281, 286, 294, 307, 312, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 360], "about": [0, 3, 5, 7, 9, 17, 18, 19, 42, 54, 57, 58, 338, 342, 343, 344, 346, 347, 348, 349, 350, 351, 354, 355, 357, 359, 360], "instruct": [0, 6, 7, 10, 21, 52, 126, 128, 342, 343, 344, 345, 354, 357], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 103, 109, 226, 227, 228, 337, 342, 346, 348, 349, 351, 353, 354], "section": [0, 2, 3, 4, 191, 195, 343, 346, 351, 354], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 59, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 178, 179, 191, 194, 195, 199, 205, 221, 240, 314, 342, 343, 344, 345, 346, 355], "pip": [0, 10, 55, 346, 347, 348, 349, 350, 351, 354, 359, 360], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 34, 37, 40, 41, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 70, 72, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 118, 119, 120, 121, 122, 124, 127, 131, 136, 137, 139, 141, 142, 145, 146, 149, 150, 154, 155, 156, 159, 161, 163, 164, 165, 167, 176, 178, 179, 185, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 223, 225, 229, 232, 233, 234, 236, 237, 238, 239, 244, 250, 251, 252, 253, 254, 256, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 308, 314, 321, 326, 329, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360], "python": [0, 3, 5, 6, 7, 10, 20, 101, 115, 191, 192, 193, 195, 196, 197, 202, 203, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 51, 52, 53, 54, 56, 57, 58, 61, 62, 65, 72, 73, 76, 78, 85, 89, 103, 109, 119, 120, 131, 137, 141, 142, 157, 159, 161, 179, 191, 193, 195, 197, 199, 204, 205, 206, 210, 225, 230, 231, 232, 237, 238, 240, 241, 252, 261, 265, 266, 268, 299, 300, 316, 337, 341, 342, 343, 344, 345, 346, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360], "low": [0, 24, 85, 89, 103, 109, 122, 126, 172, 232, 237, 244, 342, 343, 344, 354, 355, 359, 360], "high": [0, 9, 24, 40, 85, 89, 103, 109, 122, 126, 136, 172, 232, 237, 244, 281, 286, 294, 342, 343, 344, 354, 355, 357, 359, 360], "level": [0, 2, 3, 4, 21, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 119, 153, 265, 342, 343, 349, 359], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 43, 45, 46, 79, 85, 138, 200, 285, 309, 318, 339, 344, 355, 359], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 70, 71, 73, 74, 75, 76, 78, 85, 86, 88, 89, 90, 98, 99, 102, 103, 104, 105, 106, 109, 110, 111, 118, 119, 122, 123, 124, 126, 127, 128, 130, 131, 135, 136, 139, 141, 146, 149, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 172, 176, 177, 184, 186, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 207, 211, 213, 216, 230, 231, 233, 236, 237, 238, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 285, 307, 314, 329, 333, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 44, 118, 126, 223, 266, 337, 359], "effici": [0, 1, 2, 4, 8, 191, 207, 337, 342, 343, 344, 345, 348, 349, 351, 353, 354, 356, 357, 359], "modular": [0, 51, 243, 357, 359], "document": [0, 2, 5, 7, 17, 18, 20, 31, 56, 85, 89, 103, 109, 159, 167, 334, 343, 345, 346, 349, 352, 359], "properli": [0, 85, 89, 103, 109, 344, 350, 354, 355, 359], "test": [0, 3, 5, 81, 82, 94, 95, 161, 168, 193, 197, 198, 313, 329, 344, 345, 359], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 70, 72, 73, 74, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 118, 119, 123, 124, 127, 128, 129, 137, 139, 141, 146, 148, 149, 150, 153, 154, 155, 158, 159, 161, 163, 164, 167, 168, 175, 176, 177, 181, 182, 183, 184, 185, 188, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 214, 215, 216, 225, 226, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 287, 300, 302, 305, 306, 307, 308, 312, 329, 331, 332, 335, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 359, 360], "code": [0, 3, 5, 7, 8, 56, 85, 89, 103, 109, 141, 159, 161, 191, 192, 193, 195, 196, 197, 243, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360], "aim": [0, 2, 3, 7, 27, 28, 141, 161, 163, 199, 320, 336, 337, 338, 342, 343, 359], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 55, 58, 59, 61, 62, 74, 75, 78, 80, 81, 82, 90, 94, 95, 100, 102, 103, 104, 106, 119, 128, 137, 155, 156, 158, 171, 188, 223, 231, 232, 237, 240, 243, 259, 281, 282, 283, 284, 305, 335, 337, 339, 344, 345, 346, 347, 354, 355, 357, 359], "research": [0, 7, 9, 359], "most": [0, 2, 3, 7, 8, 31, 72, 73, 85, 89, 103, 109, 126, 164, 168, 342, 344, 346, 347, 348, 349, 350, 351, 355, 357, 359, 360], "written": [0, 3, 11, 33, 35, 38, 44, 52, 53, 56, 61, 65, 67, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 119, 128, 135, 149, 153, 156, 164, 167, 175, 176, 225, 236, 237, 240, 241, 245, 250, 252, 265, 268, 270, 280, 299, 300, 337, 338, 339, 342, 345, 347, 353, 355, 359], "highli": [0, 2, 346, 359, 360], "wai": [0, 2, 3, 4, 51, 54, 67, 76, 93, 141, 144, 163, 164, 195, 268, 281, 282, 283, 284, 337, 342, 343, 344, 346, 348, 349, 353, 354, 355, 356, 357, 359, 360], "easili": [0, 2, 3, 7, 85, 89, 103, 109, 326, 338, 342, 343, 344, 346, 347, 348, 351, 354, 359, 360], "swap": [0, 3, 88, 164, 344, 356, 359], "compon": [0, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 67, 74, 75, 78, 188, 214, 231, 232, 239, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 312, 317, 342, 343, 344, 345, 347, 348, 351, 353, 354, 355, 356, 359], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 67, 75, 85, 86, 89, 103, 104, 105, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 180, 181, 185, 188, 189, 212, 213, 214, 222, 230, 235, 244, 247, 249, 255, 267, 300, 314, 326, 333, 335, 341, 343, 345, 347, 349, 350, 351, 352, 356, 358], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 80, 85, 86, 89, 93, 98, 103, 104, 105, 109, 110, 111, 124, 127, 159, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 222, 223, 229, 230, 232, 233, 236, 239, 244, 247, 265, 300, 342, 343, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360], "write": [0, 2, 3, 8, 22, 31, 33, 35, 36, 38, 44, 67, 75, 80, 85, 89, 122, 139, 140, 149, 151, 153, 157, 176, 225, 240, 241, 243, 245, 253, 254, 256, 257, 258, 264, 269, 271, 273, 280, 285, 300, 337, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 71, 85, 89, 100, 103, 107, 108, 109, 149, 158, 165, 167, 175, 176, 191, 193, 197, 236, 240, 241, 246, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 307, 342, 344, 345, 346, 348, 354, 355, 359, 360], "ones": [0, 2, 22, 25, 31, 34, 37, 40, 41, 85, 89, 103, 109, 120, 123, 124, 125, 127, 137, 141, 146, 155, 158, 159, 161, 163, 167, 202, 203, 223, 240, 250, 251, 253, 264, 268, 269, 271, 273, 287, 342, 344, 354, 355, 357, 359, 360], "littl": [0, 3, 42, 85, 89, 103, 109, 159, 250, 252, 265, 268, 270, 344, 345, 349, 357, 359, 360], "effort": [0, 3, 355, 357, 359], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 88, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 109, 110, 111, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 141, 142, 143, 144, 146, 149, 150, 151, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 285, 299, 307, 308, 310, 313, 314, 317, 319, 320, 321, 326, 329, 333, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "repo": [0, 6, 52, 119, 156, 161, 336, 354, 359], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 72, 73, 83, 84, 88, 90, 91, 106, 229, 234, 236, 254, 257, 264, 279, 348, 359], "align": [0, 191, 195, 359], "exist": [0, 3, 4, 11, 17, 20, 31, 33, 35, 38, 44, 85, 89, 103, 109, 120, 125, 159, 167, 271, 321, 333, 354, 359, 360], "ecosystem": [0, 349, 359], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 45, 46, 51, 56, 61, 62, 67, 70, 72, 76, 78, 85, 86, 89, 93, 103, 109, 110, 111, 119, 153, 154, 155, 156, 159, 167, 191, 193, 195, 197, 204, 229, 232, 234, 236, 241, 265, 342, 343, 344, 345, 346, 349, 350, 353, 354, 355, 356, 357, 359, 360], "dataset": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 67, 70, 72, 73, 102, 165, 335, 342, 343, 346, 356, 357, 359, 360], "pillar": [0, 359], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 119, 120, 124, 125, 126, 127, 132, 136, 137, 141, 142, 143, 146, 149, 153, 154, 155, 156, 158, 159, 161, 164, 165, 168, 177, 193, 197, 198, 200, 201, 229, 236, 256, 260, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 310, 313, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 335, 336, 337, 341, 347, 348, 349, 350, 352, 356, 357, 358], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 44, 85, 89, 99, 103, 109, 124, 141, 155, 161, 163, 166, 167, 178, 179, 180, 185, 187, 193, 197, 199, 200, 201, 205, 212, 213, 222, 226, 227, 228, 235, 240, 246, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 279, 317, 322, 323, 324, 325, 326, 335, 336, 339, 341, 344, 346, 349, 352, 354, 355, 357, 358, 360], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 116, 118, 119, 124, 125, 127, 129, 135, 137, 143, 146, 153, 164, 167, 168, 172, 176, 177, 188, 193, 197, 198, 201, 204, 205, 214, 223, 225, 231, 233, 234, 236, 237, 238, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 307, 308, 314, 317, 319, 322, 329, 331, 332, 333, 335, 337, 338, 339, 341, 345, 346, 347, 348, 352, 355, 356, 357, 358, 360], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 37, 39, 82, 85, 89, 94, 95, 103, 104, 105, 109, 112, 119, 141, 146, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 185, 191, 195, 247, 248, 249, 266, 329, 335, 340, 342, 344, 347, 348, 349, 354, 355, 357, 359, 360], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 32, 61, 62, 64, 65, 76, 78, 85, 86, 89, 103, 109, 110, 118, 120, 123, 131, 137, 141, 149, 155, 158, 159, 161, 163, 167, 168, 191, 193, 194, 195, 197, 201, 205, 208, 214, 220, 221, 230, 232, 237, 239, 240, 241, 271, 280, 281, 282, 283, 284, 308, 320, 332, 337, 343, 344, 347, 348, 350, 354, 356, 357, 359, 360], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 76, 85, 86, 89, 103, 109, 110, 118, 120, 123, 131, 137, 141, 149, 155, 158, 159, 161, 163, 167, 168, 191, 193, 194, 195, 196, 197, 201, 205, 220, 221, 230, 237, 240, 241, 271, 280, 290, 291, 292, 293, 295, 296, 297, 298, 332, 337, 343, 344, 347, 350, 354, 355, 356, 357, 359, 360], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 39, 51, 56, 119, 146, 153, 167, 236, 314, 317, 319, 322, 323, 329, 331, 332, 335, 339, 357, 360], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 67, 68, 70, 72, 73, 74, 77, 79, 80, 85, 89, 99, 103, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 164, 165, 167, 175, 176, 177, 178, 179, 191, 192, 195, 196, 199, 201, 205, 225, 231, 232, 237, 239, 240, 245, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 287, 304, 308, 320, 326, 329, 330, 331, 332, 333, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 359, 360], "etc": [0, 2, 3, 7, 8, 11, 31, 45, 46, 56, 85, 89, 103, 109, 135, 159, 167, 199, 205, 343, 344, 349, 357, 359, 360], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 74, 85, 89, 103, 104, 105, 109, 119, 124, 127, 128, 135, 136, 137, 153, 158, 159, 165, 167, 168, 176, 178, 179, 198, 199, 204, 205, 223, 242, 243, 250, 252, 265, 268, 270, 276, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 317, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "few": [0, 2, 8, 89, 300, 308, 344, 345, 347, 354, 357, 359, 360], "depend": [0, 1, 2, 3, 4, 7, 8, 33, 35, 88, 90, 91, 106, 110, 111, 124, 127, 245, 268, 337, 342, 344, 345, 354, 355, 359, 360], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 32, 53, 56, 58, 76, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 178, 179, 191, 192, 195, 196, 240, 313, 317, 337, 342, 344, 345, 347, 349, 350, 354, 355, 357, 359, 360], "standard": [0, 3, 137, 148, 165, 177, 189, 201, 206, 207, 212, 229, 230, 273, 281, 282, 283, 284, 342, 343, 346, 347, 354, 357, 359], "numpi": [0, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109, 157, 317, 355, 357, 359, 360], "common": [0, 2, 3, 4, 89, 94, 116, 226, 227, 228, 235, 250, 251, 252, 257, 258, 264, 265, 268, 269, 270, 271, 273, 329, 336, 337, 339, 342, 344, 347, 350, 353, 354, 355, 356, 359, 360], "openai": [0, 7, 88, 90, 106, 344, 355, 359, 360], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 85, 86, 88, 89, 90, 91, 93, 100, 101, 103, 106, 109, 110, 111, 113, 115, 119, 122, 128, 134, 135, 137, 139, 144, 146, 149, 155, 158, 164, 165, 167, 326, 329, 336, 342, 343, 344, 345, 346, 350, 351, 355, 356, 357, 359], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 78, 83, 84, 85, 88, 89, 90, 91, 93, 100, 101, 103, 104, 105, 106, 109, 119, 120, 122, 123, 124, 126, 127, 131, 137, 141, 142, 146, 153, 154, 155, 156, 158, 159, 161, 163, 165, 167, 195, 197, 198, 204, 205, 225, 230, 231, 237, 238, 240, 241, 242, 243, 250, 252, 253, 257, 258, 264, 265, 266, 268, 269, 270, 271, 272, 273, 281, 282, 283, 284, 285, 307, 321, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 357, 359, 360], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 141, 142, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 221, 223, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 305, 307, 308, 310, 311, 312, 313, 314, 315, 317, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 337, 345, 346, 349, 354, 355, 357, 359], "On": [0, 3, 7, 17, 18, 19, 20, 25, 53, 192, 196, 337, 343, 354], "end": [0, 2, 3, 13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 71, 72, 73, 85, 89, 103, 109, 128, 139, 153, 154, 159, 167, 178, 179, 191, 192, 195, 196, 200, 271, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "come": [0, 1, 2, 3, 8, 31, 76, 85, 89, 98, 103, 109, 124, 127, 225, 226, 227, 228, 237, 245, 250, 252, 265, 268, 270, 342, 343, 344, 345, 348, 349, 350, 351, 354, 357, 359, 360], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 71, 74, 78, 85, 87, 89, 99, 103, 104, 105, 109, 110, 111, 115, 116, 119, 120, 123, 124, 127, 134, 135, 141, 146, 153, 154, 155, 156, 158, 159, 161, 163, 165, 167, 168, 173, 174, 176, 191, 193, 195, 197, 200, 204, 205, 229, 230, 240, 258, 266, 268, 271, 285, 308, 313, 314, 323, 333, 336, 337, 338, 340, 342, 343, 344, 345, 347, 348, 349, 353, 354, 355, 356, 357, 359, 360], "re": [0, 3, 8, 31, 71, 85, 89, 103, 109, 167, 197, 202, 203, 237, 241, 307, 339, 342, 344, 345, 346, 348, 353, 355, 359, 360], "usabl": [0, 339, 345, 359], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 42, 43, 44, 45, 46, 48, 61, 62, 63, 67, 74, 75, 78, 85, 86, 89, 103, 109, 115, 124, 127, 159, 165, 167, 168, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 208, 209, 210, 211, 212, 215, 216, 218, 221, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 326, 329, 335, 337, 342, 345, 346, 347, 350, 353, 355, 357, 360], "cost": [0, 2, 26, 56, 250, 252, 265, 268, 270, 342, 343, 354, 355, 357], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 67, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 211, 212, 213, 215, 216, 219, 220, 221, 222, 225, 226, 227, 228, 230, 237, 239, 240, 241, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 304, 317, 320, 322, 326, 329, 330, 331, 332, 333, 335, 337, 339, 342, 343, 344, 345, 347, 348, 350, 353, 354, 355, 356, 357, 359, 360], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 42, 44, 51, 53, 57, 58, 64, 85, 86, 89, 93, 98, 100, 103, 104, 105, 109, 118, 124, 127, 157, 165, 167, 204, 205, 232, 236, 239, 335, 339, 342, 343, 345, 346, 354, 355, 356, 357, 359, 360], "good": [0, 1, 4, 9, 103, 342, 344, 345, 347, 354, 359, 360], "runtim": [0, 3, 31, 85, 89, 103, 109, 167, 355], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 112, 124, 127, 136, 159, 167, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 252, 261, 268, 271, 313, 317, 338, 342, 343, 344, 345, 346, 349, 351, 353, 354, 355, 360], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 75, 80, 81, 82, 85, 88, 89, 90, 94, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 153, 165, 167, 226, 227, 228, 236, 258, 266, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 359, 360], "read": [0, 2, 3, 7, 22, 36, 39, 56, 61, 62, 63, 64, 67, 74, 75, 78, 85, 88, 89, 90, 103, 109, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 139, 140, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 158, 161, 162, 164, 165, 167, 176, 211, 225, 226, 227, 228, 231, 237, 240, 241, 243, 245, 246, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 313, 317, 326, 337, 342, 343, 344, 346, 347, 353, 354, 355, 356, 360], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 339, 342, 346, 349, 353, 356, 360], "beyond": 0, "api": [0, 2, 3, 5, 104, 105, 106, 141, 163, 338, 339, 346, 347, 348, 349, 350, 354, 355, 357, 359, 360], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 45, 46, 47, 49, 72, 85, 86, 89, 99, 103, 109, 112, 119, 120, 130, 135, 142, 157, 167, 168, 193, 197, 225, 231, 232, 237, 238, 239, 240, 241, 300, 334, 337, 338, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360], "paper": [0, 53, 56, 81, 82, 83, 84, 91, 94, 95, 100, 101, 106, 110, 111, 141, 161, 163, 191, 213, 222, 256, 263, 326, 342, 344, 354], "releas": [0, 4, 7, 10, 31, 85, 89, 103, 109, 159, 167, 271, 359], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 319, 329, 339, 342, 359], "so": [0, 2, 3, 4, 6, 7, 10, 31, 33, 35, 38, 39, 85, 89, 103, 109, 155, 165, 167, 242, 243, 342, 344, 345, 348, 351, 354, 355, 360], "make": [0, 2, 3, 4, 7, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 70, 74, 75, 80, 85, 89, 90, 93, 95, 97, 101, 103, 109, 129, 137, 141, 142, 146, 153, 161, 167, 168, 191, 192, 195, 196, 204, 205, 206, 231, 241, 250, 252, 265, 268, 270, 281, 282, 283, 284, 314, 323, 333, 337, 338, 342, 343, 344, 345, 346, 347, 348, 350, 351, 353, 354, 355, 356, 357, 359, 360], "sure": [0, 3, 4, 7, 55, 74, 89, 93, 146, 231, 333, 337, 342, 344, 345, 348, 354, 355, 357, 359, 360], "alwai": [0, 2, 3, 19, 25, 27, 31, 51, 59, 85, 89, 103, 109, 135, 136, 167, 259, 266, 337, 338, 343, 344, 345, 354, 355, 357], "enjoi": [0, 2, 3, 56, 349], "latest": [0, 2, 3, 10, 100, 104, 105, 314, 344, 354, 355, 359], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 32, 44, 54, 65, 72, 73, 85, 89, 98, 103, 104, 105, 107, 108, 109, 119, 131, 135, 139, 155, 156, 160, 165, 168, 178, 179, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 206, 207, 241, 250, 252, 265, 268, 270, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 333, 337, 342, 343, 344, 345, 347, 348, 349, 351, 355, 357, 360], "recent": [0, 7, 11, 164, 342, 357, 360], "version": [0, 1, 2, 3, 6, 11, 31, 33, 35, 39, 53, 58, 72, 85, 88, 89, 90, 91, 100, 101, 103, 104, 106, 109, 110, 111, 164, 167, 228, 250, 252, 265, 266, 268, 270, 271, 281, 284, 336, 337, 342, 344, 345, 346, 348, 351, 354, 355, 356, 360], "although": [0, 1, 8, 85, 89, 103, 109, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 339, 342, 343, 349, 357], "core": [0, 3, 8, 326, 339, 345, 347, 359], "guarante": [0, 2, 31, 33, 35, 38, 61, 62, 63, 74, 75, 78, 85, 89, 103, 109, 165, 167, 349, 359], "backward": [0, 8, 31, 81, 82, 85, 89, 103, 109, 165, 167, 191, 192, 195, 196, 250, 251, 253, 257, 258, 264, 268, 269, 270, 271, 273, 342, 344, 345, 348, 349, 351, 354, 355], "compat": [0, 2, 3, 7, 11, 31, 52, 67, 70, 72, 73, 74, 76, 85, 89, 91, 102, 103, 109, 119, 153, 161, 165, 167, 191, 192, 193, 195, 196, 197, 238, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 276, 342, 345, 357, 359], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 137, 139, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 247, 250, 251, 252, 253, 254, 256, 257, 258, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 287, 289, 290, 291, 295, 296, 298, 308, 313, 314, 315, 326, 329, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360], "13": [0, 2, 5, 10, 11, 72, 73, 106, 164, 167, 341, 343, 345, 350, 351, 355, 357, 358], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 34, 37, 40, 41, 52, 54, 55, 56, 57, 58, 89, 103, 141, 158, 163, 255, 266, 338, 339, 342, 343, 344, 345, 347, 349, 357, 360], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 70, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 172, 175, 176, 177, 187, 188, 193, 197, 198, 200, 201, 213, 214, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 299, 308, 312, 313, 314, 316, 317, 326, 335, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 360], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 135, 143, 226, 227, 228, 240, 257, 264, 326, 335, 342, 355, 359], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 85, 89, 103, 109, 115, 141, 163, 167, 201, 302, 307, 317, 339, 343, 351], "root": [0, 2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 103, 119, 156, 175, 194, 220, 221, 345, 346, 354, 355, 356, 357, 360], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 34, 42, 51, 53, 54, 55, 56, 57, 58, 64, 65, 81, 82, 83, 84, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 110, 111, 119, 141, 161, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 201, 202, 203, 207, 209, 210, 213, 215, 216, 222, 232, 236, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 281, 286, 294, 326, 334, 352, 356, 359], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 51, 53, 54, 56, 81, 82, 83, 84, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 161, 347, 351, 359], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 53, 56, 57, 81, 82, 83, 84, 91, 93, 94, 95, 100, 101, 104, 105, 106, 110, 111, 356, 359], "setup": [0, 7, 81, 82, 93, 94, 95], "py": [0, 3, 115, 213, 222, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360], "develop": [0, 3, 4, 7, 93, 342, 359], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 85, 87, 89, 91, 92, 103, 106, 109, 118, 122, 126, 132, 135, 141, 142, 144, 151, 155, 158, 159, 161, 162, 164, 165, 166, 167, 168, 175, 177, 178, 179, 188, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 207, 208, 223, 229, 230, 231, 232, 233, 237, 238, 241, 243, 244, 247, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 287, 301, 302, 305, 307, 310, 317, 319, 326, 329, 338, 341, 342, 344, 347, 348, 349, 352, 354, 355, 358, 360], "seri": [0, 2, 7, 8, 32, 60, 68, 76, 77, 79, 80, 109, 136, 158, 300, 337, 338, 342, 343, 344, 350, 351, 354, 357, 360], "quick": [0, 51], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 39, 52, 58, 85, 89, 103, 109, 118, 156, 158, 167, 268, 336, 337, 338, 342, 343, 344, 345, 347, 351, 354, 355, 357, 360], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 70, 71, 72, 73, 76, 78, 83, 84, 85, 86, 88, 89, 90, 91, 93, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 113, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 135, 136, 137, 141, 142, 145, 146, 149, 150, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 175, 176, 178, 179, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 223, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 298, 304, 307, 312, 314, 317, 319, 321, 326, 329, 333, 336, 342, 343, 344, 345, 346, 348, 351, 353, 354, 355, 357, 359, 360], "hurri": [0, 346], "last": [0, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 43, 45, 46, 52, 71, 72, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 118, 131, 137, 142, 154, 156, 157, 178, 179, 191, 193, 195, 197, 198, 199, 202, 203, 209, 217, 223, 229, 230, 233, 241, 281, 283, 284, 342, 343, 344, 345, 346, 347, 354, 355, 356, 357, 359, 360], "item": [0, 8, 13, 25, 27, 37, 44, 59, 71, 76, 130, 202, 203, 253, 254, 256, 308, 338, 339, 342, 344, 345, 348, 349, 354, 355, 357], "navig": [0, 354], "previou": [0, 3, 4, 10, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 155, 167, 176, 191, 195, 216, 230, 344, 345, 346, 347, 351, 355, 360], "whenev": [0, 1, 2, 3, 22, 31, 34, 37, 40, 41, 51, 56, 65, 72, 73, 83, 84, 88, 90, 91, 106, 110, 111, 115, 134, 159, 164, 266, 281, 282, 283, 284, 319, 337, 357], "want": [0, 2, 3, 6, 7, 8, 73, 137, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 337, 342, 343, 344, 345, 346, 348, 349, 350, 354, 355, 356, 357, 359, 360], "ted": [0, 51, 52, 53, 54, 55, 56, 57, 58, 335, 341, 352, 358], "s": [0, 1, 2, 3, 6, 7, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 72, 73, 76, 81, 82, 85, 89, 93, 94, 95, 100, 103, 104, 105, 109, 110, 111, 119, 123, 141, 153, 155, 157, 158, 159, 161, 163, 165, 167, 168, 178, 179, 193, 197, 203, 204, 205, 207, 213, 222, 226, 228, 229, 232, 233, 237, 240, 241, 244, 251, 257, 264, 266, 271, 281, 282, 283, 284, 285, 326, 337, 341, 342, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 76, 81, 82, 85, 89, 98, 99, 102, 103, 109, 115, 118, 123, 126, 128, 135, 141, 142, 154, 155, 158, 159, 161, 163, 165, 166, 167, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 281, 282, 283, 284, 285, 317, 324, 325, 329, 335, 338, 339, 341, 343, 344, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 360], "optim": [0, 1, 2, 8, 31, 39, 81, 82, 85, 89, 103, 109, 159, 167, 177, 201, 206, 207, 251, 266, 267, 268, 271, 312, 317, 329, 338, 339, 341, 344, 345, 346, 347, 349, 352, 354, 355, 358], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 85, 89, 103, 106, 109, 119, 137, 141, 163, 168, 236, 251, 253, 256, 258, 269, 271, 273, 308, 314, 317, 319, 320, 321, 329, 339, 341, 342, 345, 346, 347, 348, 351, 352, 354, 355, 356, 357, 358, 359, 360], "storag": [0, 1, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 71, 72, 73, 75, 76, 78, 85, 87, 89, 103, 109, 118, 119, 124, 127, 146, 167, 335, 339, 341, 343, 344, 345, 346, 348, 351, 352, 354, 356, 358], "log": [0, 3, 4, 8, 39, 186, 187, 188, 202, 203, 211, 221, 231, 232, 237, 241, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 307, 310, 311, 313, 317, 329, 337, 338, 339, 341, 342, 343, 344, 346, 347, 351, 352, 354, 355, 358, 359], "your": [0, 2, 3, 7, 8, 10, 17, 31, 85, 89, 93, 98, 103, 104, 105, 109, 165, 167, 333, 336, 337, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 357, 358, 359], "own": [0, 3, 13, 14, 16, 21, 31, 85, 89, 103, 104, 105, 109, 167, 300, 341, 343, 344, 346, 352, 354, 355, 358], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 35, 38, 39, 44, 51, 53, 59, 85, 89, 103, 104, 105, 109, 124, 132, 141, 154, 159, 161, 163, 167, 168, 181, 183, 193, 197, 229, 233, 234, 236, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 317, 319, 329, 335, 339, 341, 343, 346, 349, 350, 352, 356, 357, 358, 360], "loop": [0, 8, 33, 35, 38, 85, 89, 103, 109, 175, 229, 233, 234, 236, 268, 317, 339, 341, 342, 343, 346, 348, 349, 350, 352, 353, 357, 358], "ppo": [0, 4, 8, 237, 241, 252, 265, 268, 335, 337, 341, 342, 343, 347, 348, 352, 358], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 76, 83, 84, 85, 86, 88, 89, 90, 100, 103, 109, 119, 122, 123, 129, 134, 135, 137, 144, 146, 151, 153, 155, 156, 158, 159, 165, 167, 193, 197, 329, 337, 341, 343, 344, 346, 347, 348, 352, 358, 359, 360], "introduct": [0, 338, 341, 346, 352, 354, 358, 360], "multi": [0, 7, 9, 27, 28, 31, 34, 37, 40, 41, 85, 89, 103, 107, 108, 109, 159, 167, 191, 193, 195, 197, 198, 199, 204, 205, 279, 281, 282, 283, 284, 335, 341, 342, 343, 344, 345, 346, 347, 352, 355, 358, 359], "agent": [0, 9, 27, 28, 98, 104, 105, 107, 108, 110, 111, 112, 153, 154, 202, 203, 204, 205, 207, 213, 222, 279, 335, 341, 346, 352, 355, 358], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 39, 52, 54, 56, 57, 58, 67, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 193, 197, 200, 201, 240, 266, 299, 300, 321, 322, 323, 326, 329, 331, 332, 333, 335, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 72, 73, 76, 78, 81, 82, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 211, 212, 213, 214, 220, 221, 222, 223, 225, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 294, 300, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 327, 329, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 360], "pretrain": [0, 341, 352, 358], "recurr": [0, 2, 118, 191, 192, 193, 195, 197, 216, 341, 343, 347, 352, 357, 358], "dqn": [0, 2, 51, 128, 188, 231, 232, 250, 251, 253, 254, 256, 258, 259, 260, 263, 264, 266, 268, 269, 270, 271, 272, 273, 279, 324, 335, 337, 341, 347, 348, 351, 352, 358], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 81, 82, 85, 89, 99, 103, 109, 126, 135, 154, 173, 174, 188, 193, 197, 204, 205, 207, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 250, 251, 252, 253, 257, 258, 264, 265, 267, 268, 269, 270, 271, 273, 313, 319, 322, 323, 329, 331, 332, 337, 338, 339, 341, 343, 346, 348, 349, 352, 356, 357, 358, 359, 360], "replai": [0, 8, 15, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 80, 118, 119, 126, 142, 146, 155, 167, 253, 254, 256, 257, 258, 264, 269, 271, 273, 314, 317, 327, 329, 335, 339, 341, 352, 355, 356, 358], "buffer": [0, 1, 3, 4, 8, 15, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 85, 89, 99, 103, 109, 118, 119, 123, 126, 141, 142, 146, 155, 158, 159, 161, 163, 167, 240, 243, 253, 254, 256, 257, 258, 264, 269, 271, 273, 314, 317, 327, 329, 335, 339, 341, 350, 352, 355, 356, 358, 360], "task": [0, 2, 3, 9, 27, 28, 39, 44, 53, 56, 83, 84, 85, 89, 92, 103, 104, 105, 106, 109, 110, 111, 141, 153, 159, 161, 163, 257, 264, 341, 342, 343, 344, 345, 346, 347, 352, 354, 355, 358, 359, 360], "specif": [0, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 89, 110, 185, 230, 317, 335, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 44, 61, 62, 63, 67, 70, 74, 75, 78, 80, 85, 89, 94, 103, 109, 124, 127, 128, 137, 141, 158, 159, 161, 165, 167, 201, 213, 222, 225, 226, 237, 240, 241, 242, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 321, 322, 323, 328, 329, 333, 335, 337, 339, 341, 343, 344, 345, 349, 351, 352, 354, 355, 357, 358, 360], "ddpg": [0, 181, 182, 183, 184, 253, 263, 272, 335, 337, 341, 343, 348, 352, 358], "loss": [0, 3, 8, 35, 128, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 312, 317, 324, 325, 326, 329, 338, 339, 341, 346, 348, 349, 350, 352, 355, 357, 358, 359], "trainer": [0, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 341, 342, 352, 358], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137, 139, 141, 143, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 208, 211, 212, 213, 214, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 275, 279, 281, 282, 283, 284, 287, 300, 308, 309, 310, 311, 312, 314, 315, 316, 319, 326, 329, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360], "packag": [0, 6, 7, 10, 115, 335, 336, 342, 357, 360], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 85, 88, 89, 103, 109, 110, 111, 119, 120, 141, 146, 163, 167, 178, 179, 191, 192, 193, 195, 196, 197, 198, 199, 205, 239, 243, 252, 254, 256, 258, 259, 265, 268, 269, 273, 281, 282, 283, 284, 290, 291, 292, 293, 295, 296, 297, 298, 326, 333, 335, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357], "node": [0, 2, 17, 18, 19, 20, 21, 58, 326, 335, 349], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 104, 105, 135, 137, 177, 186, 187, 188, 189, 194, 201, 202, 203, 208, 211, 212, 215, 216, 219, 220, 221, 229, 230, 231, 232, 237, 241, 242, 250, 251, 252, 257, 258, 259, 264, 265, 268, 269, 270, 271, 273, 335, 339, 343, 344, 347, 349, 354, 355, 359, 360], "helper": [0, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 342, 343, 345, 355], "compos": [0, 3, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 76, 77, 85, 89, 103, 109, 119, 145, 158, 159, 165, 167, 235, 261, 271, 300, 326, 335, 342, 343, 344, 345, 349, 353, 354, 357, 359, 360], "episod": [0, 51, 52, 56, 57, 58, 65, 72, 73, 85, 89, 103, 109, 146, 149, 154, 177, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 335, 343, 346, 351, 354, 357], "format": [0, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 70, 76, 85, 89, 103, 104, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 300, 335, 342, 343, 346, 348, 350, 360], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 45, 46, 47, 48, 49, 85, 89, 99, 103, 109, 110, 111, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 176, 216, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 251, 254, 257, 258, 269, 271, 273, 279, 335, 355], "human": [0, 54, 335, 355], "feedback": [0, 335, 351, 359], "rlhf": [0, 39, 44, 59, 135, 335, 337], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 86, 89, 103, 109, 116, 124, 127, 136, 143, 144, 158, 159, 165, 167, 168, 177, 200, 201, 313, 321, 322, 323, 326, 329, 331, 332, 333, 335, 346], "gymlikeenv": [0, 88, 90, 335], "envmetadata": [0, 335], "vector": [0, 1, 8, 23, 26, 32, 81, 82, 94, 95, 98, 104, 105, 106, 110, 111, 126, 164, 181, 183, 191, 192, 195, 196, 199, 281, 284, 294, 295, 296, 297, 298, 335, 342, 343, 345, 353, 354, 355, 356, 360], "mask": [0, 1, 4, 22, 26, 29, 30, 32, 104, 105, 116, 142, 167, 188, 202, 203, 214, 230, 231, 232, 233, 234, 238, 239, 314, 335, 343, 345, 360], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 32, 39, 43, 51, 54, 56, 57, 58, 64, 65, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 122, 124, 126, 127, 128, 129, 132, 135, 136, 139, 143, 144, 146, 150, 153, 159, 164, 172, 175, 177, 180, 181, 182, 183, 184, 185, 187, 188, 189, 193, 197, 199, 200, 201, 202, 203, 204, 212, 213, 214, 216, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 329, 333, 335, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 350, 353, 354, 356, 357, 359, 360], "record": [0, 2, 31, 85, 89, 103, 109, 135, 167, 268, 299, 300, 301, 302, 303, 304, 305, 306, 307, 329, 335, 343, 344, 347, 351], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109, 126, 155, 172, 225, 231, 232, 237, 238, 239, 240, 241, 242, 243, 335, 344, 345, 347, 348, 354, 355, 359, 360], "actor": [0, 3, 4, 20, 135, 177, 180, 181, 183, 188, 189, 201, 212, 214, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 279, 326, 335, 338, 343, 345, 346, 348, 351, 356, 359], "explor": [0, 1, 166, 207, 225, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 250, 313, 322, 323, 329, 335, 344, 345, 346, 348, 349, 351, 354, 355], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 73, 76, 85, 89, 98, 103, 109, 115, 117, 119, 120, 122, 124, 126, 127, 128, 136, 137, 141, 142, 145, 146, 147, 149, 151, 155, 156, 158, 159, 163, 165, 167, 172, 176, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 310, 311, 312, 313, 314, 317, 326, 329, 335, 339, 343, 348, 349, 350, 353, 354, 355, 357, 359, 360], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 39, 53, 69, 71, 85, 86, 89, 99, 102, 103, 104, 105, 107, 108, 109, 123, 124, 125, 129, 135, 137, 143, 144, 149, 150, 153, 158, 164, 167, 176, 186, 202, 203, 211, 225, 237, 241, 245, 246, 269, 275, 281, 286, 294, 303, 317, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "hook": [0, 31, 85, 89, 103, 109, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 214, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 335], "planner": [0, 177, 201, 335], "sac": [0, 258, 269, 271, 335], "redq": [0, 269, 325, 326, 335], "iql": [0, 257, 264, 335, 342, 354], "cql": [0, 251, 256, 335], "dt": [0, 236, 335, 355], "td3": [0, 273, 335], "a2c": [0, 250, 335], "dreamer": [0, 114, 189, 260, 261, 262, 335, 337], "checkpoint": [0, 335, 356], "builder": [0, 335, 343, 360], "logger": [0, 300, 302, 303, 304, 305, 306, 307, 311, 317, 329, 333, 335, 343], "_util": [0, 3, 11, 335, 351], "implement_for": [0, 3, 335], "thing": [0, 3, 7, 8, 85, 89, 103, 109, 336, 344, 345, 346, 347, 348, 349, 350, 354, 357, 360], "consid": [0, 1, 2, 3, 8, 19, 31, 34, 37, 40, 41, 61, 62, 78, 85, 89, 103, 109, 126, 165, 167, 186, 204, 219, 281, 283, 284, 336, 342, 346, 347, 348, 355, 357], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 78, 85, 86, 89, 98, 100, 102, 103, 104, 105, 109, 110, 111, 116, 118, 119, 123, 124, 126, 127, 135, 136, 137, 141, 142, 149, 155, 158, 159, 161, 163, 164, 165, 167, 173, 174, 177, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 206, 214, 220, 237, 240, 241, 243, 247, 252, 254, 259, 265, 268, 271, 274, 279, 280, 281, 282, 283, 284, 299, 300, 314, 333, 336, 337, 339, 342, 343, 344, 345, 347, 349, 350, 354, 355, 356, 357, 360], "debug": [0, 6, 8, 39, 336, 360], "work": [0, 2, 3, 4, 8, 11, 31, 37, 65, 70, 72, 73, 75, 80, 85, 88, 89, 90, 93, 103, 106, 109, 120, 135, 141, 161, 164, 165, 167, 178, 179, 198, 199, 232, 239, 244, 252, 265, 268, 317, 336, 337, 342, 343, 344, 345, 346, 349, 353, 354, 355, 356, 357, 359, 360], "habitat": [0, 3, 91, 336, 356], "lab": [0, 3, 83, 84, 91, 336], "mujoco": [0, 6, 8, 106, 336, 342, 344, 345], "error": [0, 1, 3, 7, 10, 11, 28, 31, 85, 89, 103, 109, 112, 142, 167, 168, 336, 342, 344, 354, 360], "solut": [0, 2, 3, 6, 7, 9, 20, 336, 337, 339, 359], "resourc": [0, 1, 20, 91, 336, 342, 344, 354], "issu": [0, 4, 5, 8, 51, 54, 61, 62, 78, 93, 119, 142, 156, 225, 231, 232, 237, 238, 239, 240, 241, 336, 359], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 70, 75, 76, 77, 78, 79, 80, 85, 89, 103, 109, 110, 111, 119, 126, 175, 202, 203, 335, 346, 353, 354, 357, 359], "search": [0, 102, 176, 343], "page": [0, 7, 307, 348], "somewhat": [1, 2, 338, 347, 360], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 52, 54, 56, 57, 58, 59, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 125, 128, 159, 167, 188, 195, 199, 214, 231, 232, 238, 239, 268, 314, 349, 359, 360], "dataload": [1, 59, 71, 73, 343, 349, 357], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 56, 85, 89, 103, 109, 119, 130, 146, 154, 155, 156, 159, 167, 191, 193, 195, 197, 211, 229, 233, 234, 236, 271, 300, 337, 343, 346, 357, 359, 360], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 85, 89, 98, 103, 104, 105, 109, 110, 111, 118, 130, 135, 141, 150, 158, 159, 163, 167, 197, 198, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 314, 317, 337, 338, 339, 342, 343, 344, 345, 348, 353, 354, 355, 356, 357, 359, 360], "over": [1, 2, 3, 4, 8, 31, 37, 41, 42, 44, 50, 51, 56, 71, 85, 89, 103, 109, 126, 137, 149, 156, 167, 175, 223, 243, 259, 261, 266, 287, 320, 339, 342, 343, 344, 346, 347, 348, 349, 354, 355, 360], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 38, 40, 41, 56, 63, 85, 89, 103, 104, 105, 109, 117, 123, 131, 141, 155, 158, 159, 160, 161, 163, 167, 175, 191, 193, 195, 197, 204, 240, 241, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 337, 342, 345, 354, 355, 357, 360], "static": [1, 11, 39, 44, 65, 72, 73, 91, 165, 264, 346, 355, 357], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 44, 51, 56, 57, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 85, 86, 89, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120, 123, 124, 125, 126, 127, 135, 137, 139, 141, 143, 146, 149, 153, 154, 155, 158, 159, 161, 163, 165, 167, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 208, 212, 223, 230, 231, 232, 233, 234, 236, 240, 244, 245, 250, 251, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 337, 338, 341, 342, 343, 344, 345, 347, 348, 349, 350, 353, 354, 355, 357, 358, 359, 360], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 34, 37, 40, 41, 44, 63, 67, 73, 85, 89, 91, 98, 103, 104, 105, 109, 128, 157, 167, 168, 191, 195, 205, 235, 250, 252, 265, 268, 269, 270, 338, 342, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 360], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 59, 76, 85, 88, 89, 90, 91, 103, 106, 109, 118, 124, 126, 127, 136, 144, 159, 167, 173, 174, 193, 197, 233, 236, 252, 265, 268, 271, 300, 314, 319, 331, 332, 333, 337, 342, 343, 344, 345, 349, 354, 355, 357], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 53, 54, 57, 58, 59, 85, 89, 99, 103, 109, 119, 123, 131, 141, 149, 155, 158, 159, 160, 161, 163, 167, 199, 223, 240, 241, 242, 271, 300, 339, 344, 346, 350, 357, 360], "two": [1, 2, 3, 4, 8, 10, 31, 34, 37, 39, 40, 41, 56, 67, 71, 73, 85, 89, 103, 109, 137, 141, 163, 167, 184, 191, 193, 195, 197, 217, 241, 265, 276, 313, 317, 326, 338, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 357, 359, 360], "main": [1, 2, 3, 5, 19, 21, 58, 86, 241, 317, 337, 338, 342, 343, 353, 360], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 53, 54, 56, 57, 58, 59, 62, 65, 67, 70, 71, 72, 73, 75, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 104, 106, 109, 110, 111, 120, 122, 123, 141, 150, 153, 155, 157, 158, 159, 161, 163, 167, 175, 178, 179, 191, 193, 195, 197, 198, 199, 202, 203, 204, 205, 206, 223, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 271, 273, 275, 279, 281, 282, 283, 284, 285, 289, 299, 307, 310, 320, 326, 329, 330, 333, 342, 343, 344, 345, 346, 347, 349, 354, 355, 357, 360], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67, 70, 71, 72, 73, 74, 75, 83, 84, 85, 88, 89, 90, 91, 99, 102, 103, 104, 105, 106, 109, 110, 111, 112, 117, 118, 122, 124, 127, 135, 137, 139, 141, 149, 151, 157, 159, 161, 163, 165, 167, 175, 178, 179, 181, 187, 190, 193, 197, 199, 202, 203, 209, 214, 232, 238, 239, 241, 243, 244, 245, 266, 271, 278, 281, 284, 299, 313, 314, 331, 332, 337, 342, 344, 346, 347, 348, 349, 353, 355, 356, 357, 359, 360], "constructor": [1, 2, 15, 17, 18, 19, 20, 37, 44, 56, 64, 76, 85, 89, 100, 103, 109, 110, 158, 178, 179, 199, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 326, 330, 333, 337, 342, 343, 344, 346, 349, 354, 357], "iter": [1, 2, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 67, 71, 81, 82, 85, 89, 94, 95, 103, 109, 129, 137, 150, 167, 178, 179, 199, 204, 205, 218, 225, 231, 237, 238, 240, 242, 243, 245, 266, 278, 313, 316, 317, 326, 338, 339, 342, 344, 345, 349, 351, 354, 355], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 85, 86, 89, 90, 91, 93, 94, 95, 99, 100, 103, 106, 109, 116, 159, 167, 191, 193, 195, 197, 233, 242, 243, 321, 333, 337, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 354, 357, 358, 360], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 51, 65, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 116, 118, 131, 134, 137, 153, 154, 155, 156, 159, 164, 167, 175, 176, 177, 189, 191, 193, 195, 197, 198, 200, 201, 229, 233, 234, 236, 237, 241, 250, 260, 268, 280, 281, 282, 283, 284, 287, 288, 289, 299, 302, 308, 313, 317, 339, 343, 345, 347, 348, 350, 351, 353, 355, 356, 359], "queri": [1, 3, 13, 31, 33, 35, 38, 85, 89, 103, 109, 141, 158, 161, 165, 167, 243, 342, 348, 355, 359], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 85, 89, 103, 109, 142, 154, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 254, 256, 266, 281, 282, 283, 284, 285, 299, 330, 342, 343, 345, 348, 351, 355, 357, 360], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 72, 73, 78, 81, 82, 85, 88, 89, 90, 94, 95, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 119, 126, 132, 136, 137, 148, 153, 156, 159, 165, 167, 177, 178, 179, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 205, 208, 209, 210, 213, 215, 216, 219, 220, 221, 222, 225, 229, 230, 233, 234, 236, 237, 240, 241, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 267, 268, 269, 270, 271, 273, 308, 310, 313, 317, 319, 320, 321, 331, 332, 333, 337, 342, 343, 344, 345, 346, 347, 349, 351, 354, 355, 356, 357, 360], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 44, 55, 71, 76, 85, 89, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 168, 191, 193, 197, 199, 206, 207, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 282, 283, 284, 314, 342, 344, 345, 349, 350, 354, 355, 357, 360], "deliv": [1, 2, 15, 56, 342, 343, 346, 349, 359], "stack": [1, 2, 3, 7, 8, 17, 19, 20, 27, 28, 34, 37, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 58, 64, 67, 85, 89, 98, 103, 104, 105, 109, 165, 191, 193, 195, 196, 197, 242, 243, 299, 308, 337, 343, 346, 353, 355, 357, 359], "user": [1, 2, 3, 5, 8, 31, 51, 52, 56, 58, 73, 85, 89, 103, 109, 120, 154, 159, 167, 168, 185, 198, 268, 271, 300, 330, 338, 339, 342, 343, 346, 348, 349, 355, 359, 360], "reset": [1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 119, 128, 131, 134, 136, 141, 149, 153, 154, 155, 156, 158, 161, 164, 165, 167, 168, 176, 191, 193, 197, 224, 236, 299, 326, 342, 343, 344, 345, 346, 349, 353, 354, 359], "reach": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 71, 85, 89, 103, 109, 110, 111, 153, 229, 233, 234, 236, 342, 344, 351, 354, 359, 360], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 51, 52, 54, 56, 57, 58, 65, 67, 72, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 124, 125, 127, 128, 129, 136, 137, 139, 143, 144, 146, 148, 150, 153, 155, 156, 158, 159, 165, 167, 175, 176, 177, 191, 193, 197, 201, 250, 251, 252, 253, 254, 256, 257, 258, 264, 265, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 338, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 103, 104, 105, 106, 107, 108, 109, 118, 119, 120, 122, 128, 137, 144, 153, 154, 158, 159, 165, 167, 168, 175, 176, 177, 180, 185, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 209, 212, 213, 215, 216, 222, 226, 240, 246, 250, 252, 256, 265, 266, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 333, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 360], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 39, 51, 67, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 109, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 175, 191, 193, 197, 206, 229, 231, 233, 238, 261, 271, 343, 344, 345, 346, 347, 349, 351, 354, 355, 356, 357, 360], "predefin": [1, 343, 345, 349, 357], "becaus": [1, 3, 4, 7, 33, 35, 38, 39, 51, 85, 89, 103, 109, 128, 135, 153, 158, 164, 167, 184, 198, 205, 225, 231, 232, 237, 238, 239, 240, 241, 342, 343, 345, 347, 348, 349, 353, 354, 355, 357, 360], "potenti": [1, 2, 355, 357], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 39, 81, 82, 85, 89, 94, 95, 103, 109, 137, 151, 159, 162, 167, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 226, 229, 230, 232, 233, 236, 237, 239, 241, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 321, 338, 342, 344, 345, 346, 347, 353, 354, 356, 357], "heavi": [1, 8, 51, 357], "crucial": [1, 2, 229, 233, 234, 236, 257, 264, 266, 342, 343, 344, 345, 346, 348, 350, 354, 355, 360], "configur": [1, 8, 20, 21, 39, 135, 180, 185, 212, 266, 268, 326, 337, 342, 343, 344, 348, 354, 355], "hyperparamet": [1, 70, 167, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342, 355, 357], "appropri": [1, 3, 4, 7, 60, 68, 76, 77, 79, 80, 103, 109, 128, 330, 333, 342, 350, 357], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 337, 338, 342, 345, 347, 351, 354, 355, 356, 359], "take": [1, 2, 3, 8, 22, 39, 53, 81, 82, 85, 89, 94, 95, 103, 109, 122, 153, 156, 158, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 234, 235, 236, 237, 239, 244, 247, 249, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 319, 337, 339, 342, 343, 344, 346, 347, 348, 354, 355, 357, 360], "consider": [1, 2, 3, 8, 343, 354, 357], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 99, 103, 104, 105, 109, 110, 111, 124, 127, 154, 159, 167, 176, 178, 179, 193, 197, 199, 245, 250, 251, 252, 253, 254, 256, 258, 259, 265, 266, 268, 269, 270, 271, 273, 279, 281, 284, 342, 343, 344, 346, 354, 355, 360], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 67, 72, 73, 74, 76, 83, 84, 85, 88, 89, 90, 91, 98, 99, 103, 104, 105, 109, 110, 111, 119, 122, 123, 124, 125, 128, 129, 131, 135, 137, 142, 143, 144, 146, 149, 150, 153, 154, 156, 158, 159, 164, 165, 167, 168, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 237, 239, 240, 241, 244, 247, 250, 252, 258, 263, 265, 266, 268, 269, 270, 272, 280, 281, 282, 283, 284, 285, 300, 302, 312, 313, 314, 317, 329, 331, 332, 333, 337, 339, 342, 343, 344, 345, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360], "occur": [1, 8, 14, 27, 28, 51, 85, 89, 91, 103, 109, 120, 137, 142, 164, 176, 225, 231, 232, 237, 238, 239, 240, 241, 261, 357, 360], "serial": [1, 2, 3, 31, 85, 89, 103, 109, 165, 167], "parallel": [1, 3, 8, 85, 88, 89, 90, 103, 104, 105, 109, 159, 164, 168, 250, 330, 331, 332, 333, 343, 344, 354], "syncdatacollector": [1, 2, 13, 14, 16, 17, 18, 19, 20, 31, 119, 146, 329, 332, 335, 342, 343, 344, 345, 349, 351, 354, 357], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 98, 99, 102, 103, 104, 105, 106, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 331, 332, 333, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 357, 360], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 35, 44, 53, 58, 59, 86, 100, 103, 109, 165, 331, 332, 333, 342, 344, 359, 360], "multisyncdatacollector": [1, 17, 18, 19, 20, 332, 335, 344, 349, 359], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 44, 51, 52, 54, 56, 57, 58, 59, 65, 72, 73, 98, 104, 105, 191, 195, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 337, 339, 344, 347, 357, 359], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 65, 72, 73, 81, 82, 83, 84, 88, 90, 91, 93, 94, 95, 100, 101, 103, 106, 165, 167, 204, 236, 319, 335, 337, 342, 346, 350, 354, 355], "aggreg": [1, 3, 51, 76, 176, 178, 179, 181, 182, 243], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 71, 72, 73, 85, 86, 89, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 175, 176, 191, 193, 195, 197, 199, 204, 214, 230, 232, 233, 239, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 319, 337, 343, 345, 346, 347, 350, 351, 355, 356, 359, 360], "final": [1, 2, 3, 4, 20, 33, 35, 38, 39, 164, 191, 193, 195, 197, 204, 229, 233, 234, 235, 236, 242, 281, 313, 337, 342, 343, 344, 350, 351, 354, 355, 360], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 331, 335, 342, 343, 344, 349, 359], "sever": [1, 2, 8, 29, 31, 44, 53, 85, 89, 103, 109, 120, 122, 159, 167, 268, 342, 344, 350, 351, 357, 360], "batch": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 71, 72, 73, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 102, 103, 109, 110, 111, 119, 131, 137, 139, 142, 146, 155, 159, 160, 164, 165, 176, 186, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 211, 213, 219, 223, 236, 240, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 311, 314, 315, 316, 317, 319, 331, 332, 333, 339, 343, 344, 345, 346, 349, 351, 353, 354, 356, 359, 360], "gather": [1, 3, 17, 19, 20, 44, 59, 61, 62, 78, 142, 203, 211, 280, 321, 336, 343, 344, 345, 349, 354, 355, 357, 360], "continu": [1, 9, 24, 45, 73, 85, 89, 103, 104, 105, 109, 110, 111, 172, 181, 182, 183, 184, 236, 243, 250, 251, 258, 264, 268, 269, 270, 271, 272, 273, 281, 286, 294, 337, 342, 344, 345, 347, 354, 355, 357, 359, 360], "concomitantli": 1, "network": [1, 4, 8, 31, 85, 89, 98, 103, 104, 105, 109, 167, 178, 179, 181, 182, 183, 184, 187, 189, 190, 195, 199, 204, 205, 207, 209, 210, 213, 215, 216, 217, 222, 226, 227, 228, 230, 240, 244, 251, 252, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 277, 279, 281, 282, 283, 284, 285, 328, 329, 337, 338, 339, 348, 351, 353, 355, 360], "impli": [1, 360], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 39, 65, 67, 70, 81, 82, 85, 89, 103, 107, 108, 109, 123, 141, 155, 158, 159, 161, 163, 167, 191, 192, 193, 195, 196, 197, 204, 207, 240, 250, 251, 252, 258, 261, 271, 319, 328, 337, 339, 342, 343, 344, 345, 353, 355, 357, 359], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 52, 58, 85, 88, 89, 90, 91, 103, 106, 109, 135, 137, 150, 159, 160, 165, 167, 168, 199, 204, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 357, 359, 360], "slightli": [1, 51, 337, 338, 345, 355, 356, 357, 360], "lag": [1, 342, 343, 344], "therefor": [1, 2, 3, 7, 34, 37, 40, 41, 57, 58, 85, 89, 103, 109, 146, 268, 279, 348, 360], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 72, 73, 76, 78, 85, 89, 98, 99, 102, 103, 104, 105, 109, 116, 119, 128, 135, 141, 146, 149, 153, 154, 156, 158, 160, 163, 164, 175, 176, 191, 192, 195, 196, 198, 202, 203, 204, 229, 233, 234, 236, 237, 240, 241, 249, 250, 251, 252, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 338, 339, 342, 343, 344, 346, 353, 354, 355, 357, 360], "asynchron": [1, 9, 14, 20, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 250, 331, 342, 343, 344], "off": [1, 2, 4, 194, 221, 231, 271, 313, 322, 337, 339, 342, 343, 344, 347, 348, 354, 356, 360], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 78, 85, 89, 103, 104, 105, 109, 110, 124, 127, 131, 137, 154, 159, 164, 167, 168, 188, 191, 193, 195, 197, 205, 206, 226, 228, 230, 232, 238, 250, 257, 259, 264, 268, 313, 337, 339, 342, 343, 344, 345, 346, 347, 349, 350, 354, 355, 356, 357, 360], "remot": [1, 2, 17, 18, 19, 20, 103, 109, 360], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 39, 76, 81, 82, 85, 89, 91, 92, 94, 95, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 122, 124, 127, 128, 129, 135, 139, 143, 144, 149, 150, 151, 153, 154, 156, 167, 168, 177, 193, 197, 201, 236, 250, 300, 321, 337, 342, 344, 345, 347, 348, 349, 350, 351, 356, 357, 359], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 54, 56, 57, 58, 85, 89, 103, 109, 110, 111, 150, 269, 281, 282, 283, 284, 285, 338, 342, 344, 347, 348, 349], "synchronis": [1, 86, 354], "either": [1, 2, 5, 21, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 103, 109, 153, 154, 167, 246, 273, 304, 339, 342, 343, 345, 356, 357, 359, 360], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 342, 354, 359], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 126, 131, 134, 135, 136, 137, 141, 142, 144, 145, 148, 150, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 168, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 220, 221, 225, 226, 227, 228, 229, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 281, 282, 283, 284, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 307, 310, 311, 313, 314, 317, 333, 337, 338, 339, 342, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 359, 360], "second": [1, 3, 8, 51, 53, 76, 191, 193, 195, 197, 232, 252, 265, 268, 271, 302, 316, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 54, 56, 57, 58, 59, 61, 62, 64, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 127, 128, 129, 135, 139, 140, 141, 143, 144, 146, 150, 153, 155, 157, 158, 159, 161, 163, 167, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 212, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 314, 319, 326, 327, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 44, 45, 46, 85, 89, 103, 109, 131, 135, 158, 167, 187, 188, 192, 196, 208, 226, 227, 228, 231, 232, 235, 240, 246, 250, 252, 253, 254, 259, 265, 268, 270, 279, 280, 281, 282, 283, 284, 317, 326, 335, 339, 342, 343, 344, 345, 346, 347, 353, 354, 355, 360], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 78, 84, 85, 86, 89, 99, 103, 109, 119, 137, 155, 158, 159, 165, 167, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242, 243, 244, 247, 254, 257, 258, 266, 279, 281, 282, 283, 284, 300, 304, 313, 321, 322, 323, 326, 329, 331, 332, 337, 338, 339, 342, 344, 345, 346, 347, 355, 357, 360], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 33, 35, 36, 39, 40, 41, 42, 44, 51, 54, 56, 57, 58, 59, 61, 62, 64, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 127, 128, 129, 139, 141, 143, 144, 146, 150, 153, 155, 158, 159, 161, 163, 167, 172, 175, 177, 187, 191, 192, 193, 195, 196, 197, 201, 206, 207, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 314, 326, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "slower": [1, 198], "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 56, 65, 70, 72, 73, 75, 76, 85, 89, 93, 103, 106, 109, 144, 184, 193, 195, 197, 199, 208, 223, 225, 229, 231, 240, 245, 266, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 336, 338, 342, 343, 344, 346, 348, 349, 354, 355, 357, 359, 360], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 119, 122, 124, 125, 126, 127, 136, 137, 141, 146, 149, 152, 154, 155, 156, 158, 159, 160, 163, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 205, 208, 209, 210, 211, 212, 214, 215, 216, 218, 223, 225, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 288, 289, 302, 310, 312, 313, 317, 321, 326, 333, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 360], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 85, 89, 91, 92, 93, 103, 109, 123, 135, 140, 141, 155, 158, 159, 161, 163, 167, 191, 192, 195, 196, 240, 309, 342, 343, 344, 345, 354, 356, 360], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 42, 67, 81, 82, 94, 95, 103, 109, 120, 122, 126, 136, 146, 149, 153, 158, 165, 191, 195, 197, 198, 204, 206, 207, 225, 231, 237, 238, 240, 241, 244, 252, 258, 265, 268, 269, 273, 287, 326, 333, 337, 339, 342, 343, 344, 346, 348, 349, 354, 355, 357, 359], "infer": [1, 103, 109, 119, 165, 193, 197, 206, 230, 256, 342, 344, 349, 351, 357], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 51, 53, 65, 72, 73, 81, 82, 83, 84, 85, 88, 89, 94, 95, 99, 100, 101, 103, 109, 136, 137, 159, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 242, 243, 244, 247, 271, 300, 307, 313, 331, 332, 333, 336, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359], "dispatch": [1, 17, 18, 19, 20, 223, 300, 342], "avail": [1, 3, 4, 6, 20, 34, 37, 40, 41, 51, 53, 58, 65, 71, 72, 73, 83, 84, 93, 103, 104, 105, 106, 110, 111, 118, 135, 188, 214, 237, 241, 266, 300, 331, 332, 337, 342, 343, 344, 345, 346, 347, 354, 355, 357, 360], "speed": [1, 2, 4, 8, 26, 85, 89, 103, 109, 338, 342, 343, 344, 345, 354, 355, 357], "avoid": [1, 2, 31, 61, 62, 78, 85, 89, 103, 109, 115, 159, 165, 167, 225, 240, 245, 252, 265, 268, 271, 320, 344, 354], "oom": [1, 61, 62, 78], "choic": [1, 2, 52, 58, 103, 208, 337, 338, 342, 343, 348, 354], "size": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 120, 124, 127, 128, 129, 131, 139, 141, 143, 144, 146, 150, 152, 153, 155, 157, 158, 159, 160, 163, 165, 167, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 216, 219, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 300, 308, 314, 326, 337, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 34, 37, 39, 40, 41, 44, 51, 53, 54, 56, 57, 58, 61, 62, 67, 76, 78, 85, 86, 87, 89, 98, 100, 103, 104, 105, 109, 110, 124, 127, 144, 158, 160, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 218, 222, 223, 225, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 252, 265, 266, 268, 281, 282, 283, 284, 285, 314, 331, 332, 333, 337, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 357, 360], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 43, 44, 45, 46, 56, 64, 73, 85, 89, 93, 102, 103, 109, 119, 131, 160, 165, 176, 193, 197, 230, 250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 281, 282, 283, 284, 337, 338, 343, 354], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 76, 78, 85, 89, 103, 109, 164, 165, 167, 177, 198, 201, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 307, 326, 335, 339, 342, 344, 345, 347, 349, 351, 354, 356, 360], "while": [1, 2, 3, 7, 8, 31, 85, 89, 103, 109, 146, 159, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 257, 264, 265, 268, 271, 337, 342, 344, 345, 347, 349, 350, 354, 355, 356, 357, 359], "wait": [1, 19, 20, 21, 345, 355], "also": [1, 2, 3, 8, 9, 11, 22, 31, 37, 40, 51, 53, 54, 56, 57, 58, 59, 61, 62, 67, 76, 78, 85, 89, 103, 104, 105, 109, 110, 111, 115, 118, 119, 126, 137, 144, 146, 149, 150, 153, 155, 159, 167, 178, 179, 191, 195, 216, 237, 242, 243, 244, 250, 251, 253, 254, 256, 257, 258, 264, 268, 271, 281, 288, 289, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 357, 360], "impact": [1, 56, 124, 127, 250, 252, 265, 268, 270, 343, 345, 354], "memori": [1, 3, 8, 20, 26, 31, 33, 35, 38, 44, 51, 52, 53, 54, 56, 57, 58, 61, 85, 86, 89, 93, 103, 109, 119, 123, 141, 155, 158, 159, 161, 163, 165, 167, 195, 196, 240, 333, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "manag": [1, 8, 277, 278, 281, 282, 283, 284, 313, 348], "kei": [1, 2, 3, 7, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 64, 65, 67, 70, 72, 73, 76, 85, 89, 94, 95, 103, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 175, 176, 177, 187, 188, 193, 197, 200, 201, 214, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 300, 311, 312, 313, 315, 316, 317, 321, 326, 338, 339, 342, 344, 345, 346, 348, 353, 354, 355, 357, 359, 360], "control": [1, 3, 5, 8, 15, 83, 84, 85, 89, 98, 103, 104, 105, 109, 126, 175, 181, 182, 183, 184, 193, 197, 200, 201, 216, 223, 236, 240, 241, 242, 250, 252, 265, 268, 272, 281, 286, 294, 337, 339, 342, 343, 344, 346, 347, 348, 354, 355, 357], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 70, 71, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 109, 110, 111, 119, 120, 124, 127, 132, 135, 136, 137, 141, 142, 153, 155, 156, 158, 159, 161, 167, 168, 187, 191, 192, 194, 195, 196, 197, 202, 203, 204, 221, 226, 227, 228, 230, 237, 240, 241, 243, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 300, 308, 312, 326, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 360], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 343, 354], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 35, 37, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 67, 70, 85, 89, 103, 104, 105, 109, 119, 122, 124, 127, 132, 139, 151, 159, 167, 193, 197, 205, 281, 283, 284, 313, 317, 338, 342, 343, 344, 345, 347, 348, 349, 351, 354, 355, 357, 360], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 236, 342, 349, 360], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 70, 76, 81, 82, 85, 89, 94, 95, 103, 109, 207, 268, 281, 282, 283, 284, 285, 299, 326, 336, 337, 339, 342, 343, 344, 345, 347, 349, 350, 354, 357, 360], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 33, 35, 38, 42, 44, 52, 56, 71, 72, 75, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 119, 124, 126, 127, 132, 136, 137, 158, 159, 165, 167, 178, 179, 192, 193, 196, 197, 199, 202, 203, 204, 205, 230, 236, 244, 271, 342, 343, 344, 346, 347, 349, 353, 354, 356, 357, 360], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 70, 71, 72, 73, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 117, 118, 119, 120, 124, 126, 127, 128, 131, 135, 136, 137, 139, 141, 142, 146, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 167, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 218, 219, 220, 221, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 329, 333, 339, 342, 343, 344, 345, 347, 356, 357, 359, 360], "behaviour": [1, 3, 20, 56, 89, 120, 124, 127, 137, 142, 154, 175, 193, 194, 197, 221, 313, 337, 343, 357], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 85, 89, 103, 109, 119, 124, 127, 137, 155, 156, 197, 237, 241, 242, 243, 319, 331, 332, 337, 342, 343, 346, 347, 354, 355, 360], "choos": [1, 98, 193, 197, 268, 335, 337, 338, 342, 343, 344, 354, 357], "follow": [1, 2, 3, 6, 7, 8, 31, 33, 35, 36, 38, 39, 51, 52, 53, 54, 55, 56, 57, 58, 65, 81, 82, 85, 89, 94, 95, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 135, 141, 161, 167, 178, 179, 191, 193, 195, 197, 199, 232, 238, 239, 249, 250, 251, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 300, 317, 326, 337, 338, 339, 342, 343, 344, 345, 348, 349, 353, 354, 355, 357, 359, 360], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 320, 342, 344, 359], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 119, 132, 167, 229, 233, 236, 299, 300, 302, 310, 313, 317, 320, 321, 342, 343, 344, 345, 347, 354, 357, 359, 360], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 74, 75, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 106, 109, 119, 122, 123, 126, 131, 134, 135, 137, 139, 140, 141, 149, 151, 155, 158, 159, 161, 163, 164, 165, 167, 168, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 205, 206, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 234, 236, 239, 240, 241, 243, 244, 247, 252, 265, 268, 271, 280, 281, 282, 283, 284, 299, 313, 339, 343, 344, 345, 346, 347, 349, 350, 354, 355, 357, 359, 360], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 119, 146, 320, 342, 343, 344, 345, 349, 351, 354, 357, 359], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 37, 39, 40, 51, 52, 53, 56, 67, 70, 72, 73, 76, 85, 86, 89, 103, 104, 105, 109, 110, 111, 141, 146, 149, 153, 154, 155, 156, 163, 165, 167, 188, 191, 192, 193, 195, 197, 204, 205, 209, 213, 214, 222, 229, 231, 232, 233, 239, 243, 287, 290, 291, 292, 293, 295, 296, 297, 298, 313, 314, 331, 332, 337, 342, 343, 344, 345, 347, 348, 349, 351, 354, 355, 356, 357, 359, 360], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 320, 342, 343, 351], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 45, 46, 56, 58, 66, 76, 85, 89, 99, 103, 109, 126, 136, 137, 155, 168, 191, 193, 195, 197, 233, 237, 240, 241, 251, 269, 313, 321, 337, 342, 343, 344, 345, 346, 347, 349, 355, 356, 357, 359, 360], "rand_step": [1, 3, 83, 84, 85, 86, 88, 89, 90, 96, 97, 99, 100, 101, 103, 109, 134, 155, 165, 355, 359, 360], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 342], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 52, 54, 56, 57, 58, 342, 343, 344], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 40, 51, 52, 53, 54, 56, 57, 58, 64, 65, 72, 73, 76, 81, 82, 85, 89, 94, 95, 103, 109, 142, 153, 158, 167, 177, 197, 201, 236, 268, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 308, 335, 338, 342, 343, 344, 345, 346, 349, 351, 355, 359, 360], "pad": [1, 2, 3, 22, 36, 42, 52, 54, 56, 57, 58, 119, 178, 179, 181, 182, 197, 198, 202, 203, 204, 314], "along": [1, 2, 3, 22, 27, 28, 33, 35, 38, 39, 44, 52, 54, 56, 57, 58, 62, 65, 67, 72, 73, 76, 78, 118, 119, 120, 137, 139, 142, 149, 157, 197, 199, 202, 203, 207, 231, 237, 240, 241, 266, 337, 342, 343, 345, 346, 348, 354, 355, 357], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 55, 60, 64, 65, 68, 76, 77, 79, 80, 85, 89, 103, 109, 118, 119, 123, 141, 154, 155, 157, 158, 159, 161, 163, 167, 200, 240, 249, 259, 317, 336, 343, 344, 353, 354, 355, 357, 360], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 65, 72, 73, 89, 142, 153, 176, 202, 203, 229, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 339, 345], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 40, 54, 83, 84, 85, 89, 103, 109, 110, 111, 132, 142, 165, 167, 188, 202, 203, 214, 231, 232, 238, 239, 241, 276, 281, 314, 342, 344, 345, 346, 347, 348, 354], "valid": [1, 2, 3, 22, 33, 35, 36, 44, 59, 76, 112, 142, 159, 167, 178, 179, 199, 202, 203, 229, 236, 265, 281, 282, 283, 284, 314, 339, 360], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 313, 335, 342, 343], "strategi": [1, 2, 15, 56, 70, 98, 203, 211, 233, 337, 339, 342, 343, 347, 354, 357], "reset_when_don": [1, 13, 14, 15, 16], "These": [1, 2, 7, 31, 39, 53, 58, 85, 89, 103, 109, 110, 141, 163, 167, 337, 338, 342, 344, 354, 355, 357, 360], "tool": [1, 2, 3, 5, 345, 346, 355, 357, 360], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 85, 88, 89, 103, 109, 113, 115, 198, 339, 342, 344, 345, 346, 349, 350, 355], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 335], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 335], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 135, 137, 139, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 308, 315, 316, 326, 329, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "multiprocess": [1, 2, 3, 17, 18, 19, 51, 58, 86, 87, 103, 109, 165, 342, 343, 344, 345, 354, 355, 356, 360], "synchron": [1, 13, 18, 20, 100, 331, 332, 343, 344], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 85, 89, 100, 103, 109, 124, 127, 154, 159, 165, 167, 169, 173, 174, 186, 193, 194, 197, 211, 219, 220, 221, 237, 241, 266, 313, 342, 343, 345, 354, 359, 360], "find": [1, 4, 6, 7, 17, 18, 19, 34, 36, 42, 72, 73, 195, 229, 236, 311, 315, 342, 343, 347, 348, 354], "folder": [1, 2, 110, 343], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 51, 56, 65, 72, 76, 85, 89, 103, 109, 142, 242, 243, 308, 317, 337, 342, 343, 344, 349, 353, 359, 360], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 67, 83, 84, 85, 86, 88, 89, 90, 91, 99, 103, 104, 105, 109, 110, 111, 112, 118, 119, 122, 123, 124, 125, 127, 130, 135, 136, 137, 141, 149, 151, 155, 156, 158, 159, 161, 163, 165, 167, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 240, 241, 243, 244, 247, 261, 266, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 312, 317, 320, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 359, 360], "variou": [1, 2, 3, 193, 197, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 279, 300, 331, 332, 342, 343, 344, 346, 347, 348, 350, 354, 357, 360], "machin": [1, 2, 7, 17, 18, 19, 31, 55, 93, 354], "One": [1, 2, 4, 8, 30, 32, 44, 76, 81, 82, 119, 146, 161, 211, 229, 240, 244, 272, 276, 304, 342, 343, 357, 360], "wonder": 1, "why": [1, 2, 3, 355, 360], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 76, 85, 89, 100, 104, 105, 106, 109, 330, 335, 342, 343, 344, 346, 353, 359, 360], "instead": [1, 4, 7, 8, 11, 26, 31, 56, 85, 89, 103, 109, 131, 155, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 250, 252, 254, 257, 258, 259, 264, 265, 268, 269, 270, 271, 279, 281, 285, 289, 333, 337, 346, 347, 351, 355, 357, 360], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 51, 52, 54, 56, 57, 58, 81, 82, 85, 89, 94, 95, 103, 104, 105, 109, 123, 124, 125, 127, 141, 146, 150, 154, 155, 157, 158, 159, 161, 163, 164, 167, 191, 194, 195, 199, 204, 216, 220, 221, 240, 243, 249, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 319, 331, 332, 333, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 360], "lower": [1, 2, 3, 20, 24, 122, 165, 215, 216, 244, 344, 355], "io": [1, 51, 56, 94, 95, 100, 195, 196], "footprint": [1, 2, 357], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 33, 35, 74, 76, 85, 89, 93, 98, 103, 104, 105, 109, 119, 122, 131, 141, 144, 156, 159, 163, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 206, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 238, 239, 240, 244, 247, 249, 258, 269, 270, 271, 273, 280, 285, 300, 317, 333, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 357, 359, 360], "commun": [1, 2, 3, 103, 336, 344, 360], "yet": [1, 81, 82, 94, 95, 356], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 47, 48, 49, 52, 81, 82, 85, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 106, 109, 110, 111, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 168, 172, 176, 188, 214, 216, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 326, 337, 342, 343, 344, 345, 346, 347, 353, 354, 359], "plai": [1, 3, 104, 105, 119, 343, 344, 348, 357, 360], "role": [1, 3, 343, 348, 360], "opposit": 1, "direct": [1, 2, 31, 85, 89, 103, 109, 167, 191, 195, 266, 343, 348], "sinc": [1, 2, 3, 4, 5, 7, 31, 34, 37, 40, 41, 51, 58, 73, 76, 85, 89, 103, 104, 105, 106, 109, 167, 168, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 231, 232, 233, 234, 236, 238, 239, 244, 247, 342, 343, 344, 345, 346, 347, 348, 355, 356, 357, 359, 360], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 57, 58, 100, 281, 282, 283, 284, 345, 354], "share": [1, 3, 6, 8, 22, 33, 35, 38, 61, 62, 63, 74, 75, 78, 86, 103, 109, 165, 193, 197, 204, 205, 226, 227, 228, 250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 333, 335, 337, 344, 345, 351, 353, 354, 359, 360], "among": [1, 3, 104, 105, 354], "achiev": [1, 2, 3, 4, 31, 85, 89, 93, 103, 109, 154, 167, 176, 314, 339, 342, 343, 344, 345, 354, 355, 357, 360], "prohibit": [1, 3, 76], "slow": [1, 3, 4, 33, 35, 38], "compar": [1, 3, 56, 76, 313, 338, 342, 344, 347, 348, 354, 357, 360], "gpu": [1, 7, 8, 31, 61, 62, 78, 85, 89, 93, 103, 109, 167, 342, 344, 345, 354, 360], "nativ": [1, 7, 9, 54, 85, 89, 103, 109, 119, 300, 345, 357], "driver": [1, 7], "practic": [1, 2, 3, 4, 5, 8, 51, 194, 220, 221, 249, 336, 342, 343, 344, 345, 348, 354, 356, 360], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 40, 51, 64, 65, 76, 81, 82, 89, 137, 165, 177, 186, 189, 191, 193, 195, 197, 198, 201, 212, 219, 229, 237, 241, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 267, 268, 269, 270, 271, 273, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 337, 338, 342, 343, 344, 347, 354, 355, 357, 359, 360], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 53, 54, 56, 57, 58, 59, 62, 65, 70, 72, 73, 75, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 110, 111, 120, 122, 123, 141, 150, 155, 157, 158, 159, 161, 163, 167, 193, 197, 198, 202, 203, 204, 225, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 244, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 271, 273, 275, 279, 281, 282, 283, 284, 285, 289, 307, 330, 342, 343, 344, 347, 350, 354, 357, 360], "build": [1, 3, 7, 22, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 85, 89, 90, 91, 94, 95, 100, 103, 106, 109, 110, 111, 146, 165, 167, 177, 193, 197, 201, 235, 237, 241, 317, 324, 325, 327, 328, 337, 339, 344, 345, 347, 348, 349, 350, 354, 355, 356, 359, 360], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 85, 89, 99, 103, 109, 123, 126, 137, 141, 155, 158, 159, 161, 163, 167, 175, 177, 188, 189, 191, 195, 201, 214, 218, 225, 231, 232, 233, 236, 239, 240, 241, 242, 243, 245, 249, 253, 254, 256, 280, 281, 282, 283, 284, 285, 287, 309, 313, 329, 337, 339, 342, 343, 344, 346, 347, 348, 349, 350, 354, 355, 360], "mani": [1, 2, 3, 4, 37, 81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 100, 101, 106, 250, 252, 258, 265, 268, 269, 273, 337, 342, 343, 344, 346, 347, 349, 351, 354, 355, 357, 360], "eg": [1, 2, 3, 11, 33, 35, 38, 61, 62, 63, 74, 75, 78, 83, 84, 85, 88, 89, 90, 91, 93, 103, 106, 109, 126, 153, 159, 204, 230, 300], "gymnasium": [1, 3, 5, 11, 85, 88, 89, 90, 96, 97, 103, 109, 113, 115, 129, 150, 153, 164, 343, 344, 355, 359], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 40, 41, 44, 51, 52, 54, 56, 57, 58, 61, 62, 63, 67, 70, 71, 72, 73, 74, 75, 78, 85, 88, 89, 90, 99, 103, 109, 122, 125, 126, 143, 150, 157, 161, 165, 167, 191, 193, 197, 207, 208, 230, 232, 233, 239, 241, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 314, 326, 331, 332, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 359, 360], "warn": [1, 3, 229, 233, 234, 236, 343], "quickli": [1, 3, 343, 354, 360], "becom": [1, 3, 4, 20, 191, 195, 354, 360], "quit": [1, 3, 51, 85, 89, 103, 109, 337, 342, 343, 344, 347, 354, 360], "annoi": [1, 3], "By": [1, 2, 3, 32, 83, 84, 85, 88, 89, 90, 91, 103, 104, 105, 106, 109, 110, 111, 223, 241, 266, 313, 333, 342, 356, 357, 360], "filter": [1, 2, 3, 4, 44, 65, 72, 73, 250, 251, 253, 257, 258, 264, 268, 269, 271, 346], "out": [1, 2, 3, 4, 5, 9, 20, 31, 44, 52, 56, 65, 72, 73, 85, 89, 103, 104, 105, 109, 155, 167, 168, 191, 192, 195, 202, 203, 206, 207, 225, 230, 231, 232, 236, 237, 238, 239, 240, 241, 277, 278, 339, 342, 343, 344, 345, 346, 347, 349, 354, 355, 357, 359, 360], "still": [1, 2, 3, 9, 56, 81, 82, 85, 89, 94, 95, 103, 109, 229, 265, 266, 342, 343, 345, 353, 355, 357, 360], "wish": [1, 3, 13, 14, 16, 56, 115, 348, 357], "displai": [1, 3, 7, 85, 89, 103, 109, 317, 339, 342, 343, 354, 355], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 70, 71, 72, 73, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 120, 123, 124, 127, 128, 129, 131, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 148, 150, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 168, 175, 176, 177, 178, 179, 181, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 213, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 290, 291, 292, 293, 295, 296, 297, 298, 307, 310, 311, 313, 314, 315, 317, 326, 333, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "central": [2, 204, 342, 343, 346, 354, 357], "part": [2, 4, 8, 31, 39, 51, 53, 54, 56, 57, 58, 81, 85, 89, 94, 103, 109, 118, 137, 146, 149, 167, 193, 197, 245, 308, 333, 342, 344, 345, 351, 355, 360], "algorithm": [2, 3, 8, 9, 13, 14, 99, 132, 250, 268, 269, 270, 271, 308, 322, 335, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 354, 356, 357, 359], "implement": [2, 3, 9, 11, 15, 31, 74, 85, 89, 100, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 165, 167, 178, 191, 192, 193, 194, 195, 196, 197, 219, 220, 221, 250, 251, 255, 256, 257, 264, 266, 267, 268, 271, 326, 337, 339, 342, 343, 344, 345, 355, 359], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 34, 37, 39, 40, 41, 51, 52, 56, 58, 71, 73, 76, 81, 82, 85, 86, 89, 93, 94, 95, 103, 109, 119, 135, 141, 144, 161, 164, 165, 167, 168, 177, 197, 198, 204, 205, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "give": [2, 3, 7, 40, 53, 85, 89, 99, 103, 109, 119, 336, 338, 342, 343, 354, 355, 356, 359], "abil": [2, 266, 355, 357], "panel": [2, 344], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 52, 58, 76, 119, 128, 193, 197, 257, 264, 271, 274, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "includ": [2, 3, 4, 7, 9, 20, 31, 58, 61, 62, 63, 74, 75, 78, 85, 89, 99, 103, 109, 154, 159, 165, 167, 266, 271, 320, 337, 339, 342, 343, 344, 345, 354, 355, 357, 360], "almost": [2, 345], "ani": [2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 89, 100, 103, 104, 105, 109, 110, 111, 116, 131, 141, 142, 146, 159, 161, 165, 167, 168, 176, 178, 179, 185, 199, 207, 230, 240, 241, 242, 243, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 281, 283, 284, 305, 317, 336, 342, 343, 344, 347, 348, 354, 355, 357, 359, 360], "physic": [2, 6, 7, 103, 106, 339, 342, 354, 355], "theori": 2, "t": [2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 45, 46, 56, 64, 65, 71, 76, 85, 86, 88, 89, 100, 101, 103, 109, 119, 124, 127, 128, 141, 145, 146, 154, 156, 163, 165, 167, 168, 175, 191, 195, 231, 236, 240, 272, 281, 282, 283, 284, 285, 287, 307, 317, 319, 333, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "crude": 2, "made": [2, 3, 31, 37, 51, 61, 62, 63, 74, 75, 78, 85, 89, 103, 109, 167, 236, 254, 279, 342, 343, 345, 354, 356, 357], "replaybuff": [2, 34, 40, 41, 64, 67, 79, 119, 142, 146, 167, 254, 259, 279, 327, 329, 335, 344, 349, 351, 354, 356, 357, 359], "liststorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 357], "veri": [2, 3, 94, 95, 343, 346, 349, 355, 357, 359, 360], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 32, 51, 56, 65, 67, 70, 72, 73, 81, 82, 85, 89, 94, 95, 103, 109, 144, 167, 175, 199, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 276, 279, 337, 339, 342, 344, 345, 346, 347, 348, 354, 355, 357, 360], "complex": [2, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 342, 343, 346, 347], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 134, 137, 139, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 250, 251, 253, 254, 256, 257, 258, 261, 262, 264, 266, 268, 269, 270, 271, 273, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 326, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 359, 360], "contigu": [2, 8, 53, 56, 57, 85, 89, 103, 109, 172, 344, 354, 355, 357, 359, 360], "tensorstorag": [2, 37, 76, 349, 357], "lazytensorstorag": [2, 34, 37, 40, 41, 64, 76, 146, 167, 344, 351, 354, 357], "lazymemmapstorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 118, 119, 342, 343, 345, 349, 356, 357], "citizen": 2, "pytre": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67, 75, 76, 83, 84, 85, 89, 103, 109, 116, 126, 128, 134, 135, 137, 142, 150, 167, 175, 181, 187, 188, 193, 196, 197, 198, 199, 208, 212, 213, 214, 231, 232, 238, 239, 244, 250, 251, 253, 257, 258, 260, 264, 266, 268, 269, 270, 271, 273, 281, 282, 283, 284, 300, 311, 313, 315, 324, 325, 357], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 35, 38, 44, 65, 70, 72, 73, 85, 88, 89, 90, 103, 109, 110, 111, 155, 159, 167, 237, 241, 271, 313, 331, 332, 333, 339, 343, 344, 346, 348, 355, 360], "nest": [2, 3, 25, 27, 31, 33, 35, 37, 38, 47, 61, 62, 67, 78, 85, 88, 89, 90, 103, 109, 119, 153, 156, 167, 176, 281, 282, 283, 284, 285, 339, 343, 344, 354, 355, 357, 359], "construct": [2, 5, 31, 34, 37, 40, 41, 51, 67, 85, 88, 89, 103, 104, 109, 124, 127, 167, 168, 193, 197, 216, 241, 317, 337, 343, 344, 345, 347, 355, 357, 360], "time": [2, 3, 4, 7, 8, 14, 15, 17, 18, 19, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 81, 82, 85, 86, 89, 94, 95, 98, 102, 103, 104, 105, 106, 109, 115, 118, 120, 142, 149, 155, 156, 165, 167, 175, 189, 191, 195, 197, 198, 236, 252, 258, 261, 265, 266, 268, 269, 273, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "wherea": [2, 21, 56, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 126, 167, 266, 339, 350], "ram": [2, 88, 90, 357, 360], "prealloc": [2, 3, 355], "ve": [2, 39, 342, 345, 351], "been": [2, 3, 5, 7, 8, 17, 19, 20, 39, 67, 71, 85, 89, 93, 103, 109, 135, 153, 154, 158, 191, 195, 229, 234, 236, 342, 343, 344, 345, 353, 354, 355, 357, 360], "extend": [2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 67, 68, 72, 73, 75, 76, 77, 79, 80, 118, 146, 167, 314, 339, 342, 343, 344, 345, 349, 351, 354, 356, 357, 359], "here": [2, 3, 4, 7, 8, 9, 10, 57, 58, 76, 83, 84, 85, 89, 93, 103, 104, 105, 109, 119, 307, 337, 338, 342, 343, 344, 345, 346, 347, 349, 351, 354, 355, 357, 359, 360], "start": [2, 3, 4, 5, 13, 20, 44, 58, 65, 72, 73, 86, 98, 103, 109, 175, 312, 341, 342, 343, 352, 354, 355, 357, 358, 360], "replay_buff": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 314, 329, 342, 343, 344, 349, 354, 357], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 31, 34, 36, 37, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 122, 128, 129, 134, 135, 137, 139, 141, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 158, 163, 165, 167, 172, 175, 176, 177, 181, 182, 183, 184, 187, 188, 190, 191, 192, 193, 195, 196, 197, 199, 201, 204, 205, 208, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 300, 310, 313, 326, 329, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "rb": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 72, 73, 76, 119, 146, 167, 343, 345, 349, 351, 354, 356, 357, 359], "10": [2, 7, 21, 22, 25, 31, 34, 37, 39, 40, 41, 42, 44, 61, 62, 64, 67, 72, 73, 76, 78, 81, 82, 85, 86, 89, 94, 95, 99, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 119, 154, 156, 157, 167, 177, 180, 181, 183, 185, 187, 191, 192, 195, 196, 198, 201, 212, 223, 233, 234, 236, 237, 244, 251, 254, 256, 258, 268, 269, 270, 273, 279, 281, 282, 283, 284, 287, 308, 339, 341, 342, 343, 344, 345, 346, 347, 351, 354, 355, 357, 358, 359, 360], "add": [2, 3, 4, 6, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 67, 68, 76, 77, 79, 80, 85, 89, 103, 109, 119, 135, 167, 193, 197, 206, 235, 250, 312, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 357, 359], "string": [2, 17, 18, 19, 31, 36, 44, 59, 85, 89, 103, 109, 115, 141, 153, 163, 167, 193, 197, 231, 237, 238, 249, 299, 316, 326, 338, 342, 344, 345, 357], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 72, 73, 76, 78, 102, 119, 142, 151, 154, 178, 179, 191, 192, 195, 225, 229, 231, 240, 241, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 267, 268, 269, 270, 271, 273, 308, 342, 344, 347, 349, 357, 360], "30": [2, 37, 54, 136, 215, 216, 302, 343, 344, 349, 354, 355, 356, 357], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 78, 85, 86, 87, 88, 89, 98, 99, 103, 104, 105, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 311, 312, 313, 314, 315, 316, 317, 321, 322, 323, 326, 329, 331, 332, 333, 337, 339, 342, 343, 344, 345, 348, 349, 354, 355, 357, 359, 360], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 118, 119, 120, 121, 126, 131, 132, 136, 137, 139, 141, 142, 145, 152, 153, 156, 159, 160, 161, 163, 167, 168, 172, 177, 178, 179, 180, 181, 183, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 250, 251, 252, 258, 260, 261, 265, 266, 267, 268, 269, 273, 281, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 308, 309, 310, 313, 314, 317, 319, 326, 327, 331, 332, 333, 355, 357], "tell": [2, 3, 4, 7, 104, 105, 342, 345, 349, 354], "our": [2, 3, 7, 8, 17, 37, 119, 300, 337, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 356, 357, 359], "far": [2, 39, 194, 220, 221, 351, 355, 360], "restrict": [2, 3, 343, 356, 357, 360], "empti": [2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67, 85, 89, 102, 103, 109, 124, 127, 141, 143, 156, 159, 161, 163, 304, 342, 355, 357], "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 76, 78, 83, 84, 85, 88, 89, 90, 91, 92, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 116, 119, 123, 126, 128, 129, 135, 137, 139, 141, 143, 144, 146, 149, 150, 153, 154, 155, 157, 158, 159, 161, 163, 167, 172, 177, 178, 179, 181, 182, 183, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 208, 211, 213, 223, 225, 226, 227, 228, 231, 232, 237, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 287, 290, 291, 292, 293, 295, 296, 297, 298, 300, 316, 337, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 354, 355, 356, 357, 358, 359, 360], "64": [2, 3, 33, 35, 38, 51, 56, 67, 119, 145, 181, 182, 190, 193, 197, 205, 213, 279, 342, 343, 344, 345, 347, 351, 353, 355, 356, 357, 359, 360], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 54, 56, 57, 58, 59, 61, 62, 64, 65, 72, 73, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 117, 123, 124, 125, 126, 127, 128, 129, 135, 137, 139, 141, 143, 144, 146, 150, 153, 155, 157, 158, 159, 161, 163, 167, 168, 172, 175, 176, 177, 187, 188, 191, 192, 193, 195, 196, 197, 201, 206, 207, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 287, 326, 337, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "unit8": 2, "img": 2, "randint": [2, 44, 67, 157, 357], "255": [2, 67, 157, 355, 357], "uint8": [2, 3, 33, 35, 38, 46, 51, 56, 83, 84, 128, 139, 157, 343, 350, 356, 357, 359], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 99, 103, 107, 108, 109, 110, 111, 118, 119, 124, 127, 128, 129, 134, 135, 139, 143, 144, 146, 149, 150, 153, 155, 164, 165, 167, 172, 175, 177, 192, 193, 196, 197, 201, 216, 246, 250, 251, 253, 254, 256, 257, 258, 259, 264, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 311, 313, 315, 343, 345, 347, 350, 351, 353, 355, 356, 359, 360], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 44, 56, 58, 59, 76, 85, 86, 89, 93, 103, 104, 109, 110, 111, 119, 141, 158, 159, 161, 164, 165, 167, 172, 175, 178, 179, 181, 182, 183, 184, 185, 190, 193, 197, 199, 200, 204, 205, 230, 241, 254, 259, 269, 271, 279, 300, 314, 321, 322, 323, 329, 331, 332, 337, 342, 343, 344, 345, 347, 350, 354, 355, 356, 357, 359, 360], "ask": [2, 8, 51, 56, 65, 72, 73, 300, 344, 345, 346, 347, 354, 356, 360], "do": [2, 3, 4, 7, 58, 85, 89, 103, 109, 110, 111, 142, 164, 165, 175, 205, 206, 227, 281, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 359, 360], "automat": [2, 3, 5, 58, 61, 62, 67, 78, 85, 88, 89, 90, 103, 104, 105, 109, 124, 127, 137, 164, 178, 225, 237, 337, 342, 344, 346, 347, 354, 355, 357, 359], "hand": [2, 3, 7, 20, 25, 354, 355], "look": [2, 3, 5, 7, 8, 31, 85, 89, 98, 103, 104, 105, 109, 141, 142, 161, 167, 237, 241, 242, 243, 338, 344, 345, 346, 347, 348, 349, 351, 354, 355, 356, 357, 359, 360], "assum": [2, 3, 6, 25, 32, 39, 40, 41, 52, 54, 56, 57, 58, 72, 85, 89, 103, 109, 118, 121, 131, 141, 142, 149, 155, 159, 161, 163, 172, 193, 197, 198, 223, 244, 254, 259, 271, 279, 290, 291, 292, 293, 295, 296, 297, 298, 300, 342, 344, 345, 353, 355], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 34, 37, 40, 41, 52, 71, 83, 84, 85, 88, 90, 91, 155, 194, 213, 220, 221, 342, 345, 354, 355, 357, 359], "dimens": [2, 3, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 52, 54, 56, 57, 58, 61, 62, 65, 72, 73, 76, 78, 83, 84, 85, 88, 89, 90, 91, 103, 109, 110, 111, 118, 119, 120, 131, 137, 139, 142, 149, 152, 157, 160, 165, 178, 179, 180, 185, 193, 195, 197, 199, 202, 203, 204, 206, 207, 212, 213, 217, 218, 219, 220, 223, 231, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 333, 337, 342, 343, 344, 345, 346, 354, 355, 357], "leav": [2, 25, 37, 85, 168, 176, 342, 349, 357], "tree": [2, 33, 35, 38, 85, 89, 103, 109, 357], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 75, 83, 84, 85, 86, 88, 89, 90, 91, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 178, 179, 186, 193, 197, 199, 204, 205, 219, 225, 230, 231, 237, 238, 240, 241, 244, 245, 251, 258, 265, 267, 269, 271, 314, 319, 337, 342, 344, 353, 354, 355, 357, 360], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 119, 343, 344, 349, 357, 359, 360], "throw": [2, 31, 33, 35, 38, 85, 89, 103, 109, 167, 360], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 158, 159, 167, 175, 176, 177, 185, 187, 188, 193, 197, 201, 213, 214, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 308, 314, 326, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "max": [2, 22, 32, 35, 40, 44, 59, 64, 65, 76, 126, 156, 219, 220, 221, 230, 236, 251, 252, 258, 267, 269, 271, 342, 344, 345, 351, 354], "label": [2, 35, 36, 39, 44, 342, 357], "100": [2, 13, 14, 15, 16, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 76, 81, 82, 85, 89, 94, 95, 103, 109, 122, 128, 137, 146, 151, 153, 167, 204, 232, 300, 309, 329, 343, 344, 345, 346, 348, 351, 353, 354, 355, 356, 357, 359, 360], "rb_pytre": 2, "dim": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 72, 119, 120, 139, 155, 160, 165, 196, 198, 218, 223, 333, 343, 344, 355, 357], "b": [2, 3, 7, 8, 22, 25, 27, 33, 35, 37, 38, 39, 40, 41, 76, 191, 192, 195, 196, 204, 205, 206, 207, 213, 222, 244, 281, 282, 283, 284, 285, 287, 300, 337, 343, 356, 357], "randn": [2, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 78, 118, 137, 172, 180, 181, 185, 187, 188, 191, 192, 195, 196, 198, 202, 203, 204, 208, 211, 212, 214, 225, 226, 227, 228, 230, 231, 237, 238, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284, 316, 337, 357, 359, 360], "c": [2, 3, 6, 7, 25, 37, 40, 41, 55, 137, 157, 195, 196, 343, 357], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 52, 62, 72, 73, 76, 78, 85, 89, 103, 109, 118, 120, 124, 126, 127, 137, 143, 146, 167, 172, 175, 177, 182, 183, 184, 190, 191, 192, 193, 195, 196, 197, 198, 202, 203, 205, 213, 222, 233, 234, 236, 239, 247, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 287, 345, 357, 359], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 89, 92, 103, 109, 115, 119, 122, 124, 127, 135, 144, 151, 165, 168, 172, 205, 208, 223, 281, 282, 283, 284, 308, 316, 349, 353, 357, 360], "len": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 78, 139, 178, 179, 199, 205, 342, 349, 351, 355, 356, 357, 359], "ambigu": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 75, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 338, 342, 346, 355], "deal": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 342, 344, 354, 357], "interpret": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 343], "put": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 89, 110, 111, 165, 307, 333, 337, 343, 344, 345, 346, 355], "slice": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 118, 357], "solv": [2, 4, 9, 10, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 336, 342, 343, 344, 349, 351, 354, 355, 357], "clear": [2, 25, 27, 28, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 93, 103, 109, 167, 309, 346, 349], "cut": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "distinct": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 348, 353], "between": [2, 3, 4, 5, 13, 14, 16, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 73, 85, 89, 103, 109, 110, 111, 126, 136, 147, 159, 167, 168, 178, 179, 187, 191, 193, 197, 199, 204, 205, 232, 237, 241, 250, 252, 253, 256, 257, 258, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 281, 313, 317, 338, 342, 343, 345, 349, 354, 355, 357, 360], "view": [2, 3, 8, 26, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 116, 167, 188, 191, 195, 199, 346, 355, 357, 359, 360], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 110, 111, 119, 120, 153, 154, 155, 156, 159, 167, 176, 178, 179, 199, 202, 203, 205, 236, 238, 239, 247, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 321, 333, 336, 339, 344, 345, 349, 350, 351, 355, 357, 360], "through": [2, 3, 4, 5, 8, 11, 15, 17, 19, 20, 25, 27, 56, 81, 82, 93, 94, 95, 98, 103, 104, 105, 109, 124, 127, 142, 199, 213, 237, 241, 242, 243, 247, 281, 282, 283, 284, 337, 342, 343, 344, 346, 348, 353, 354, 355, 356, 357, 360], "collate_fn": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 357, 359], "__init__": [2, 3, 7, 85, 99, 115, 116, 124, 127, 143, 177, 188, 191, 195, 201, 245, 251, 253, 258, 264, 269, 271, 273, 339, 355, 360], "expect": [2, 3, 4, 7, 25, 31, 37, 43, 44, 71, 85, 89, 99, 102, 103, 109, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 168, 191, 192, 193, 195, 196, 197, 204, 205, 232, 236, 240, 243, 250, 251, 252, 253, 254, 256, 257, 258, 264, 265, 266, 268, 269, 270, 271, 273, 279, 321, 336, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 354, 355, 357, 360], "major": 2, "worri": [2, 42], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 61, 62, 63, 74, 75, 78, 85, 86, 89, 93, 103, 109, 176, 342, 344, 346, 354, 355, 360], "though": [2, 4, 85, 89, 103, 109, 199, 344, 354], "regular": [2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 64, 70, 85, 89, 103, 109, 159, 187, 214, 232, 238, 239, 240, 241, 259, 319, 335, 339, 342, 343, 346, 347, 351, 357, 360], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 39, 43, 45, 46, 85, 89, 103, 109, 136, 155, 194, 220, 221, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 343, 347, 350, 355, 357, 360], "latter": [2, 17, 18, 19, 31, 52, 85, 89, 103, 109, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 268, 331, 332], "inv": [2, 3, 122, 126, 139, 146, 151, 355], "method": [2, 3, 4, 11, 15, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 76, 78, 85, 88, 89, 90, 91, 103, 106, 109, 119, 123, 124, 125, 128, 129, 131, 135, 137, 141, 143, 144, 145, 146, 150, 153, 155, 158, 159, 161, 163, 167, 177, 198, 225, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 285, 299, 330, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 355, 357, 360], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 45, 46, 85, 89, 103, 109, 126, 129, 150, 157, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 281, 357], "preprocess": [2, 44, 51, 53, 343], "multithread": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 100, 101, 349, 357], "thread": [2, 13, 14, 16, 33, 35, 38, 81, 82, 94, 95, 103, 109], "prefetch": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 342, 343, 345, 357], "advis": [2, 53, 360], "benchmark": [2, 3, 9, 82, 94, 95, 354], "techniqu": [2, 8, 343, 349, 357], "real": [2, 5, 56, 241, 338, 345, 355], "life": [2, 128], "adopt": [2, 3, 5, 342, 360], "throughput": [2, 9, 342], "constant": [2, 119, 137, 154, 339, 342, 344, 345, 360], "throughout": [2, 3, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 344, 360], "further": [2, 3, 5, 342, 344, 346], "refin": [2, 56, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279], "sampler": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 142, 254, 259, 279, 342, 344, 354, 357], "coupl": [2, 345, 347, 348, 355, 357], "how": [2, 3, 17, 18, 19, 31, 34, 40, 56, 64, 65, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 167, 250, 252, 263, 265, 268, 300, 302, 317, 336, 337, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360], "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 33, 34, 35, 37, 38, 51, 52, 56, 61, 62, 65, 72, 73, 74, 75, 76, 78, 85, 86, 89, 103, 109, 116, 118, 120, 124, 126, 127, 135, 137, 142, 154, 155, 157, 165, 225, 233, 234, 237, 238, 241, 281, 282, 283, 284, 285, 304, 337, 341, 342, 343, 344, 345, 352, 354, 355, 357, 358, 359, 360], "first_elt": 2, "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 78, 81, 82, 85, 88, 89, 91, 92, 94, 95, 99, 100, 101, 103, 106, 107, 108, 109, 116, 117, 119, 120, 122, 123, 125, 126, 135, 136, 137, 141, 146, 149, 151, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 167, 177, 178, 179, 181, 182, 183, 184, 185, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 211, 215, 216, 219, 220, 221, 223, 225, 229, 230, 232, 233, 234, 236, 239, 240, 243, 244, 247, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 279, 280, 281, 282, 283, 284, 287, 288, 289, 308, 315, 329, 333, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360], "128": [2, 51, 52, 56, 73, 81, 82, 94, 95, 182, 185, 343, 345, 351, 355, 356, 357], "wa": [2, 3, 5, 7, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 85, 89, 103, 109, 159, 168, 176, 195, 250, 252, 263, 265, 268, 270, 272, 287, 338, 343, 344, 346, 347, 353, 357, 359], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 51, 53, 56, 58, 59, 64, 65, 67, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 119, 120, 124, 125, 126, 127, 134, 137, 143, 144, 146, 149, 153, 155, 156, 157, 165, 167, 172, 175, 176, 178, 179, 181, 182, 183, 184, 185, 188, 190, 193, 199, 202, 203, 204, 205, 208, 211, 214, 225, 226, 227, 228, 230, 231, 233, 234, 236, 238, 240, 243, 245, 266, 326, 329, 337, 339, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 120], "larger": [2, 4, 257, 264], "volum": 2, "due": [2, 3, 5, 348, 356, 357, 360], "serialis": [2, 33, 35, 38], "memorymappedtensor": [2, 33, 35, 44, 51, 61, 302, 349, 356], "well": [2, 3, 8, 20, 22, 31, 34, 36, 37, 40, 41, 70, 74, 85, 89, 103, 109, 167, 181, 195, 215, 216, 266, 285, 342, 343, 345, 346, 347, 348, 350, 356, 357, 359, 360], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 104, 105, 109, 110, 111, 124, 125, 127, 149, 152, 154, 160, 167, 177, 195, 240, 241, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 307, 337, 342, 344, 345, 349], "file": [2, 6, 7, 8, 33, 35, 38, 51, 52, 53, 54, 56, 57, 58, 110, 299, 300, 302, 339, 341, 342, 343, 357, 358, 360], "locat": [2, 7, 33, 35, 38, 44, 58, 85, 89, 103, 109, 128, 137, 148, 194, 208, 220, 221, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 342, 343, 344, 350, 354, 357], "improv": [2, 4, 132, 250, 338, 354, 357], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 103, 109, 344, 357], "found": [2, 3, 6, 7, 10, 20, 22, 25, 31, 33, 35, 38, 44, 51, 52, 53, 54, 56, 57, 58, 72, 73, 83, 84, 85, 88, 89, 90, 93, 103, 109, 116, 119, 146, 149, 156, 165, 167, 176, 233, 234, 237, 241, 265, 266, 268, 342, 343, 345, 346, 348, 350, 357], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 43, 45, 46, 65, 126, 195, 196, 257, 345, 349, 357], "sharabl": [2, 103, 109], "popul": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 134, 155, 342, 344, 345, 347, 349, 355, 357], "collabor": [2, 56], "rather": [2, 4, 75, 144, 342, 343, 344, 346, 348, 354, 357], "incur": [2, 81, 82, 94, 95], "some": [2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 46, 52, 58, 61, 62, 67, 76, 78, 81, 82, 85, 89, 94, 95, 103, 104, 105, 109, 110, 111, 141, 159, 161, 167, 168, 181, 193, 197, 218, 241, 242, 243, 300, 308, 320, 337, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 357, 359, 360], "transmiss": 2, "overhead": [2, 81, 82, 94, 95, 103, 109], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 67, 85, 89, 103, 109, 158, 164, 168, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 240, 241, 242, 244, 247, 266, 268, 343, 345, 349, 355, 357], "instanti": [2, 3, 20, 33, 34, 35, 37, 38, 40, 41, 93, 158, 198, 205, 342, 343, 347, 348, 350, 354, 355, 357, 360], "content": [2, 8, 15, 25, 27, 33, 34, 35, 37, 38, 40, 41, 71, 85, 88, 89, 90, 100, 103, 109, 143, 178, 179, 199, 204, 205, 237, 266, 344, 355, 359], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 85, 89, 98, 103, 104, 105, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 167, 172, 188, 208, 225, 226, 227, 228, 231, 237, 238, 240, 241, 243, 244, 245, 246, 271, 279, 313, 335, 337, 338, 342, 343, 344, 345, 347, 348, 356, 359], "writer": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 68, 76, 77, 80, 344, 357], "tensordictroundrobinwrit": [2, 67], "current": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 73, 85, 89, 91, 100, 103, 109, 119, 142, 154, 155, 156, 158, 159, 167, 169, 170, 175, 189, 198, 216, 236, 250, 252, 259, 265, 268, 270, 271, 303, 339, 342, 343, 344, 345, 348, 354, 355, 357, 359, 360], "goe": [2, 4, 104, 105, 342, 344, 354, 360], "prioritizedsampl": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 254, 259, 279, 342, 357], "access": [2, 3, 7, 8, 31, 34, 53, 55, 85, 89, 103, 109, 141, 161, 167, 333, 336, 342, 346, 354, 355, 357], "show": [2, 31, 85, 89, 103, 109, 167, 205, 300, 337, 342, 344, 345, 354, 355, 357, 359], "tensordictreplaybuff": [2, 34, 37, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 72, 73, 76, 118, 119, 314, 329, 335, 342, 343, 345, 357], "mp": [2, 17, 18, 19, 86, 165], "def": [2, 3, 11, 21, 31, 37, 85, 86, 89, 99, 103, 109, 115, 116, 124, 127, 143, 167, 177, 188, 191, 192, 195, 196, 201, 237, 245, 251, 253, 258, 264, 266, 269, 271, 273, 339, 342, 343, 353, 354, 355, 357, 359, 360], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 39, 40, 64, 65, 85, 89, 99, 103, 104, 105, 109, 116, 124, 126, 127, 143, 153, 154, 159, 162, 165, 167, 176, 177, 191, 193, 197, 201, 229, 233, 234, 236, 237, 238, 239, 240, 241, 250, 251, 252, 253, 254, 256, 258, 259, 260, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 285, 313, 317, 319, 322, 323, 328, 329, 339, 343, 344, 345, 348, 351, 354, 355, 357, 359, 360], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 96, 97, 103, 109, 116, 118, 120, 124, 125, 126, 127, 134, 135, 137, 146, 149, 155, 157, 159, 165, 175, 177, 187, 188, 193, 197, 200, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 240, 243, 245, 279, 282, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 308, 316, 326, 337, 338, 342, 345, 354, 355, 359, 360], "__name__": [2, 21, 86, 343], "__main__": [2, 21, 86], "21": [2, 56, 57, 73, 103, 104, 105, 109, 341, 343, 345, 351, 353, 354, 355, 356, 358], "proc": 2, "target": [2, 4, 8, 20, 31, 85, 86, 89, 103, 109, 154, 158, 167, 240, 241, 250, 251, 252, 253, 254, 256, 258, 259, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 320, 328, 329, 338, 339, 345, 351, 355], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 51, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 123, 141, 143, 152, 155, 158, 159, 160, 162, 163, 167, 177, 178, 179, 187, 193, 197, 199, 200, 201, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 307, 310, 314, 317, 333, 342, 343, 357, 360], "join": [2, 86, 335, 343, 344], "now": [2, 3, 7, 34, 103, 119, 205, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 357, 360], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 42, 43, 44, 45, 46, 51, 56, 59, 65, 72, 73, 75, 85, 89, 94, 95, 103, 109, 142, 165, 177, 178, 179, 181, 183, 185, 191, 195, 199, 201, 204, 205, 225, 240, 245, 308, 314, 342, 344, 345, 349, 351, 355, 357, 360], "20": [2, 44, 57, 72, 73, 76, 85, 89, 93, 103, 109, 154, 167, 190, 191, 192, 195, 196, 230, 308, 341, 343, 344, 345, 354, 355, 357, 358, 359, 360], "_data": [2, 355], "It": [2, 3, 4, 7, 22, 31, 36, 39, 40, 42, 44, 52, 58, 67, 70, 76, 80, 85, 89, 91, 99, 100, 103, 104, 105, 109, 110, 111, 118, 128, 135, 137, 142, 154, 159, 164, 167, 168, 181, 183, 189, 204, 205, 213, 215, 216, 222, 223, 232, 233, 236, 239, 241, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 280, 281, 307, 313, 326, 336, 337, 338, 342, 343, 345, 346, 354, 355, 356, 357, 359, 360], "difficult": [2, 4, 103, 350], "pai": [2, 8, 342, 345], "attent": [2, 8, 342, 345, 360], "word": [2, 3, 39, 51, 52, 54, 56, 57, 58, 266, 342, 349, 355, 360], "1m": [2, 51, 56, 320, 342, 344, 345], "multidimension": [2, 40, 64, 65, 357], "doe": [2, 3, 17, 33, 34, 35, 38, 40, 44, 51, 52, 56, 64, 65, 74, 75, 80, 85, 89, 103, 109, 110, 111, 185, 191, 192, 193, 195, 196, 197, 206, 223, 230, 242, 243, 250, 252, 259, 265, 268, 280, 317, 337, 339, 342, 343, 344, 345, 346, 349, 355, 357, 360], "howev": [2, 3, 5, 7, 31, 85, 89, 103, 109, 119, 149, 154, 159, 167, 250, 252, 265, 268, 270, 271, 337, 342, 343, 345, 348, 355, 357, 360], "flatten": [2, 33, 35, 38, 76, 131, 314, 345, 354], "capac": [2, 34, 37, 40, 41, 61, 62, 64, 72, 78, 344, 349], "There": [2, 10, 67, 193, 197, 337, 339, 344, 345, 347, 349, 354, 355, 357, 360], "circumv": 2, "account": [2, 61, 62, 78, 119, 202, 203, 337, 343, 345, 357, 360], "save": [2, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 164, 167, 299, 300, 302, 307, 317, 339, 349, 350, 351, 354], "ndim": [2, 34, 37, 40, 41, 61, 62, 76, 78, 85, 89, 103, 109, 167], "convent": [2, 3, 51, 52, 53, 54, 55, 56, 57, 58, 85, 89, 103, 109, 110, 111, 338, 342, 345, 354, 355], "overridden": [2, 3, 51, 53, 54, 56, 57, 58, 85, 89, 103, 109, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 281, 283, 284, 345], "dim_extend": [2, 34, 37, 40, 41], "recommend": [2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 76, 93, 349, 354], "obtain": [2, 7, 39, 51, 85, 89, 103, 109, 118, 141, 154, 163, 177, 213, 314, 342, 344, 346, 347, 348, 354], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 43, 45, 46, 48, 67, 85, 89, 99, 103, 104, 105, 109, 110, 112, 118, 119, 128, 135, 153, 154, 158, 159, 164, 165, 167, 178, 179, 202, 203, 204, 205, 229, 231, 237, 238, 241, 244, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 300, 317, 329, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 360], "counterpart": 2, "desir": [2, 3, 31, 85, 89, 103, 109, 123, 137, 139, 141, 142, 155, 158, 159, 161, 163, 167, 173, 174, 178, 179, 199, 205, 225, 231, 232, 237, 238, 239, 240, 241, 337, 342, 354, 355, 357], "diversifi": 2, "offer": [2, 3, 7, 81, 82, 85, 89, 94, 95, 103, 109, 337, 342, 343, 346, 348, 349, 355, 357, 360], "accomplish": [2, 168, 346], "slicesampl": [2, 51, 65, 357], "anoth": [2, 3, 8, 56, 85, 88, 89, 90, 93, 103, 109, 124, 125, 127, 155, 158, 199, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 337, 338, 342, 344, 345, 347, 348, 353, 354, 355, 360], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 119, 168, 251, 256, 257, 264, 307, 339, 346, 356, 357, 359], "reshap": [2, 31, 56, 72, 76, 193, 197, 199, 344, 354], "docstr": [2, 31, 85, 89, 103, 109, 167, 346, 347], "extens": [2, 34, 37, 40, 41, 73, 339, 357], "detail": [2, 3, 5, 6, 7, 31, 85, 89, 103, 104, 105, 109, 157, 159, 167, 188, 191, 195, 232, 250, 259, 268, 336, 343, 349, 353, 357], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 85, 89, 103, 109, 124, 127, 165, 167, 176, 191, 193, 195, 197, 236, 237, 241, 259, 343, 347, 353, 354, 360], "without": [2, 3, 7, 9, 31, 39, 51, 52, 56, 72, 73, 85, 89, 103, 109, 110, 111, 116, 124, 127, 157, 167, 191, 192, 195, 196, 227, 228, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 285, 329, 336, 337, 342, 343, 344, 346, 347, 348, 349, 354, 355, 357, 360], "scenario": [2, 103, 110, 111, 342, 347, 354, 355], "happi": 2, "concaten": [2, 8, 20, 29, 30, 56, 119, 120, 137, 158, 195, 199, 243, 342, 343, 347, 354, 355, 357, 360], "interrupt": [2, 89, 287], "introduc": [2, 103, 109, 191, 193, 195, 197, 236, 342], "schedul": [2, 4, 7, 39, 313, 344, 355], "transformedenv": [2, 3, 13, 31, 85, 86, 89, 103, 109, 116, 119, 122, 123, 124, 127, 128, 129, 131, 134, 135, 136, 137, 139, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 158, 165, 167, 193, 197, 300, 326, 342, 343, 344, 345, 346, 350, 351, 353, 354, 355, 356, 357, 359, 360], "stepcount": [2, 13, 31, 85, 89, 103, 109, 110, 111, 158, 167, 342, 343, 344, 345, 346, 351, 354, 359], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 31, 76, 85, 86, 89, 91, 103, 109, 119, 122, 123, 128, 134, 135, 137, 139, 144, 145, 146, 149, 151, 154, 155, 156, 158, 159, 165, 167, 193, 197, 300, 326, 329, 335, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 356, 357, 359, 360], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 119, 146, 349, 357], "cartpol": [2, 31, 83, 84, 85, 89, 103, 109, 119, 149, 154, 167, 343, 345, 347, 349, 350, 351, 357, 360], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 31, 52, 54, 76, 85, 86, 88, 89, 90, 94, 95, 100, 103, 109, 119, 122, 129, 134, 135, 137, 144, 146, 149, 151, 153, 154, 155, 156, 158, 167, 193, 197, 276, 290, 291, 292, 293, 295, 296, 297, 298, 337, 343, 345, 346, 347, 348, 349, 350, 351, 355, 357, 359, 360], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 81, 82, 85, 89, 94, 95, 99, 103, 104, 105, 109, 116, 119, 124, 127, 135, 143, 146, 177, 188, 201, 214, 216, 225, 231, 237, 238, 251, 254, 256, 269, 271, 273, 329, 337, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354, 355, 356, 357, 359, 360], "total_fram": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 119, 146, 317, 320, 329, 339, 342, 343, 344, 345, 349, 351, 354, 357, 359], "num_slic": [2, 51, 56, 65, 72, 73, 357], "8": [2, 6, 7, 31, 37, 56, 57, 64, 65, 72, 73, 81, 82, 83, 84, 85, 89, 103, 109, 154, 178, 179, 181, 182, 190, 199, 226, 227, 228, 237, 240, 243, 264, 341, 342, 343, 345, 347, 349, 354, 355, 356, 357, 358, 359, 360], "traj_kei": [2, 65, 72, 73, 357], "traj_id": [2, 3, 13, 14, 15, 22, 146, 345, 349, 357, 359], "truncated_kei": [2, 65, 72, 73, 146, 153], "strict_length": [2, 51, 56, 65, 72, 73], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 37, 41, 42, 61, 62, 64, 65, 73, 78, 85, 89, 103, 109, 141, 146, 149, 159, 163, 167, 192, 196, 208, 214, 232, 237, 239, 240, 241, 281, 282, 283, 284, 308, 320, 342, 343, 344, 345, 347, 348, 349, 351, 354, 355, 357, 359, 360], "enumer": [2, 13, 14, 15, 20, 31, 37, 41, 73, 85, 89, 103, 109, 167, 274, 338, 342, 343, 344, 345, 351, 357, 359], "break": [2, 5, 13, 14, 15, 20, 31, 37, 41, 51, 53, 54, 56, 57, 58, 59, 65, 72, 73, 76, 85, 89, 103, 109, 119, 146, 165, 167, 343, 349, 351, 357, 359], "step_count": [2, 13, 14, 15, 31, 85, 89, 94, 95, 103, 109, 153, 167, 344, 345, 346, 351, 359], "32": [2, 21, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 73, 107, 108, 110, 111, 178, 179, 180, 181, 182, 184, 185, 190, 199, 204, 205, 209, 210, 212, 213, 222, 279, 341, 342, 343, 344, 345, 347, 348, 355, 356, 357, 358, 359, 360], "33": [2, 25, 31, 67, 85, 89, 103, 109, 167, 178, 179, 199, 343, 345, 355], "34": [2, 178, 179, 199, 341, 343, 344, 345, 355, 358], "35": [2, 178, 179, 199, 343, 354, 355], "36": [2, 343, 345, 355, 356], "37": [2, 118, 343, 355], "38": [2, 7, 343, 355], "39": [2, 54, 94, 95, 341, 343, 345, 354, 355, 356, 358], "40": [2, 94, 95, 343, 344, 354, 355], "41": [2, 343, 355, 357], "11": [2, 10, 22, 26, 32, 44, 61, 62, 64, 73, 78, 86, 157, 167, 177, 201, 341, 343, 344, 345, 354, 355, 357, 358], "12": [2, 10, 57, 61, 62, 73, 78, 94, 95, 103, 107, 108, 109, 167, 341, 343, 344, 354, 355, 356, 357, 358], "14": [2, 6, 11, 58, 72, 73, 85, 89, 103, 109, 137, 167, 341, 343, 344, 345, 354, 355, 357, 358, 359], "15": [2, 22, 57, 73, 85, 89, 103, 109, 167, 230, 236, 260, 343, 355, 356, 357], "16": [2, 3, 31, 57, 65, 73, 81, 82, 85, 89, 94, 95, 103, 109, 119, 167, 343, 344, 345, 355, 356, 357], "17": [2, 57, 73, 103, 167, 326, 341, 343, 345, 355, 358], "could": [2, 3, 4, 6, 22, 343, 344, 350, 354, 356, 360], "sai": [2, 31, 85, 89, 103, 109, 167, 204, 356, 360], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 32, 63, 65, 72, 73, 85, 88, 89, 90, 93, 103, 109, 124, 127, 142, 149, 238, 343, 344, 345, 354, 355], "handl": [2, 3, 20, 31, 85, 89, 103, 109, 164, 165, 167, 197, 199, 317, 331, 332, 342, 343, 344, 346, 348, 354, 357], "suggest": [2, 279, 342, 354], "serialenv": [2, 3, 85, 89, 103, 155, 167, 335, 360], "lambda": [2, 11, 13, 14, 15, 16, 20, 21, 37, 76, 85, 86, 89, 103, 109, 115, 135, 155, 167, 223, 231, 238, 260, 262, 281, 284, 292, 293, 297, 298, 329, 338, 342, 343, 354, 357, 359, 360], "squeez": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 119, 152, 154, 178, 179, 217, 218, 342, 355, 357], "6": [2, 7, 13, 14, 15, 16, 22, 31, 37, 51, 57, 58, 65, 73, 83, 84, 103, 107, 108, 137, 139, 154, 178, 179, 181, 182, 183, 186, 190, 192, 198, 199, 204, 205, 209, 219, 237, 245, 326, 341, 343, 345, 349, 354, 355, 357, 358, 359], "5": [2, 3, 22, 23, 25, 27, 31, 34, 37, 40, 41, 51, 67, 72, 73, 76, 86, 94, 95, 100, 107, 108, 110, 111, 118, 146, 153, 154, 167, 177, 178, 179, 181, 182, 187, 188, 189, 190, 191, 194, 195, 198, 199, 201, 204, 205, 209, 214, 220, 221, 230, 231, 238, 244, 265, 268, 270, 273, 337, 341, 342, 343, 345, 347, 349, 351, 354, 355, 357, 358, 359, 360], "4": [2, 3, 7, 23, 25, 26, 27, 31, 32, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 72, 73, 78, 81, 82, 83, 84, 85, 89, 94, 95, 96, 97, 98, 99, 101, 103, 107, 108, 109, 116, 119, 128, 146, 153, 154, 165, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 198, 199, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 299, 337, 341, 342, 343, 344, 345, 347, 349, 350, 354, 355, 356, 357, 358, 359, 360], "7": [2, 6, 10, 26, 31, 32, 34, 37, 40, 65, 73, 85, 89, 103, 109, 154, 177, 178, 179, 182, 198, 199, 201, 204, 287, 341, 342, 343, 349, 354, 355, 357, 358, 359], "9": [2, 3, 7, 22, 31, 34, 37, 40, 57, 58, 65, 73, 76, 83, 84, 98, 104, 105, 154, 165, 167, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279, 338, 341, 342, 343, 344, 346, 349, 353, 354, 355, 357, 358], "18": [2, 57, 73, 107, 108, 110, 111, 167, 205, 341, 343, 344, 345, 349, 354, 355, 356, 358], "19": [2, 57, 72, 73, 76, 167, 343, 344, 345, 355], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 53, 103, 109, 158, 160, 205, 338, 339, 342, 343, 354, 357, 359], "differ": [2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 52, 53, 56, 70, 81, 82, 85, 89, 94, 95, 98, 103, 104, 105, 109, 119, 126, 137, 144, 159, 160, 167, 188, 191, 192, 193, 195, 196, 197, 199, 201, 204, 205, 214, 264, 268, 276, 281, 282, 283, 287, 288, 289, 313, 317, 319, 331, 332, 337, 338, 339, 342, 343, 344, 346, 348, 350, 353, 354, 355, 356, 357, 360], "congruent": 2, "shape": [2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 67, 76, 78, 83, 84, 85, 88, 89, 90, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120, 124, 127, 128, 129, 135, 137, 139, 143, 144, 146, 150, 153, 155, 157, 165, 166, 167, 168, 172, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 219, 222, 225, 226, 227, 228, 230, 231, 232, 237, 238, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 314, 317, 329, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 359, 360], "custom": [2, 3, 5, 31, 85, 89, 103, 109, 161, 167, 204, 205, 244, 259, 268, 274, 333, 337, 342, 343, 344, 345, 347, 348, 350, 354], "name": [2, 3, 6, 7, 11, 15, 31, 33, 35, 38, 44, 51, 53, 55, 58, 59, 81, 83, 85, 89, 94, 98, 100, 103, 104, 105, 106, 109, 110, 111, 112, 126, 129, 144, 149, 150, 153, 159, 161, 164, 167, 176, 193, 197, 231, 238, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 283, 284, 285, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 326, 339, 342, 343, 344, 345, 348, 350, 354, 355, 360], "randomcroptensordict": [2, 342], "unlik": [2, 71, 110, 111, 259, 268, 343, 347, 349, 359], "stop": [2, 3, 15, 20, 39, 58, 65, 72, 73, 85, 89, 103, 109, 344, 349, 354, 359, 360], "signal": [2, 3, 22, 51, 52, 54, 56, 57, 58, 65, 72, 73, 76, 89, 110, 111, 119, 128, 153, 156, 176, 338, 342, 344, 354, 357, 360], "isn": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 56, 64, 76, 128, 168, 231, 240, 347, 348, 350, 354], "separ": [2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 51, 53, 141, 163, 251, 253, 256, 258, 269, 271, 273, 342, 343, 347, 348, 354, 357, 360], "disk": [2, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 317, 339, 342, 343, 345, 349, 350, 357], "dump": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 299, 300, 350, 351], "load": [2, 6, 7, 13, 14, 15, 16, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 84, 85, 89, 103, 109, 115, 165, 167, 333, 339, 342, 344, 357], "json": 2, "metadata": [2, 51, 52, 344, 346, 348, 349, 354, 360], "anticip": [2, 124, 127], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 56], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 43, 45, 46, 52, 164, 168, 225, 231, 232, 237, 238, 239, 240, 241, 344, 354, 355, 357], "exact": [2, 3, 103, 195], "statu": [2, 3, 85], "prioriti": [2, 4, 34, 40, 41, 61, 62, 63, 64, 65, 74, 75, 78, 253, 254, 256, 257, 258, 259, 264, 269, 271, 273, 279, 339, 342, 343, 357], "heap": 2, "under": [2, 3, 4, 20, 31, 39, 51, 52, 53, 54, 56, 57, 58, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 167, 225, 231, 232, 237, 238, 239, 240, 241, 266, 281, 282, 283, 284, 285, 300, 338, 342, 343, 347, 355, 360], "hood": [2, 20, 51, 85, 89, 103, 109, 355], "just": [2, 3, 4, 11, 75, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 122, 176, 205, 308, 337, 339, 342, 343, 344, 345, 346, 347, 349, 354, 355, 357, 359, 360], "public": [2, 55, 141, 163], "serializ": 2, "altern": [2, 4, 26, 100, 185, 202, 203, 204, 249, 342, 344, 354], "state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 85, 89, 103, 109, 159, 165, 167, 271, 333, 339, 342, 343, 360], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 85, 89, 103, 109, 159, 165, 167, 271, 339, 342], "drawback": 2, "struggl": 2, "big": [2, 344, 349, 357, 360], "sequenti": [2, 9, 31, 85, 89, 103, 109, 118, 135, 167, 242, 243, 268, 337, 344, 345, 347, 354, 355, 356, 360], "consist": [2, 3, 31, 34, 37, 40, 41, 53, 56, 85, 89, 103, 109, 135, 164, 167, 179, 199, 342, 343, 344, 355, 356, 360], "known": [2, 3, 5, 7, 8, 288, 289, 342, 343, 346], "seamless": [2, 199], "integr": [2, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 184, 193, 197, 201, 240, 337, 346, 347, 349, 354, 355, 356], "within": [2, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 43, 45, 46, 56, 85, 89, 103, 106, 109, 119, 124, 127, 128, 146, 153, 164, 165, 167, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 254, 259, 279, 337, 343, 346, 347, 348, 349, 350, 351, 355, 359], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 342, 343, 348], "essenti": [2, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 343, 346, 355, 357], "understand": [2, 3, 8, 342, 343, 346, 347, 354], "purpos": [2, 3, 7, 85, 89, 103, 109, 119, 191, 250, 252, 265, 268, 270, 329, 342, 344, 345, 348, 350, 354, 356, 360], "interact": [2, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 56, 85, 89, 103, 109, 159, 237, 241, 342, 344, 346, 347, 349, 354, 355, 360], "guid": [2, 104, 105, 107, 108, 154, 336, 342, 354], "explan": [2, 31, 85, 89, 103, 109, 167], "effect": [2, 3, 25, 31, 34, 37, 40, 41, 51, 56, 65, 67, 70, 72, 73, 85, 89, 103, 109, 119, 159, 167, 317, 342, 347, 357, 360], "realm": [2, 347], "As": [2, 3, 4, 31, 51, 85, 89, 98, 103, 104, 105, 109, 146, 241, 281, 337, 342, 343, 344, 345, 346, 348, 349, 354, 355, 356, 357, 359, 360], "practition": 2, "often": [2, 3, 8, 263, 317, 342, 343, 346, 348, 355, 357, 360], "encount": [2, 4, 56, 336, 343, 347, 355], "situat": 2, "sometim": [2, 3, 345, 360], "discard": [2, 3, 44, 52, 54, 89, 161, 175, 299, 357, 360], "variabl": [2, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 53, 54, 57, 58, 81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 101, 102, 106, 110, 111, 191, 192, 193, 195, 196, 197, 201, 226, 227, 228, 266, 269, 339, 343], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 43, 51, 52, 54, 56, 57, 58, 65, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 175, 180, 181, 182, 183, 184, 185, 188, 193, 197, 198, 204, 209, 210, 212, 214, 215, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 245, 246, 250, 251, 252, 253, 254, 256, 257, 258, 261, 264, 265, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 326, 329, 337, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 357, 359, 360], "immedi": [2, 25, 27, 31, 85, 89, 103, 109, 167, 280, 354], "200": [2, 13, 14, 15, 20, 31, 51, 85, 88, 89, 90, 103, 109, 110, 111, 146, 167, 181, 182, 189, 215, 216, 342, 345, 349, 351, 355, 357], "199": [2, 355], "info": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 70, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 104, 105, 107, 108, 109, 110, 111, 161, 164, 166, 307, 346, 351, 354, 357], "At": [2, 200, 233, 343, 344, 345, 349, 353, 355, 356], "glanc": [2, 346], "seem": [2, 342, 345, 346], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 39, 85, 89, 98, 103, 104, 105, 109, 119, 142, 191, 193, 195, 197, 222, 226, 227, 228, 246, 337, 343, 345, 346], "less": [2, 100, 223, 331, 332, 338, 344, 345, 357, 359], "must": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 72, 73, 74, 75, 76, 78, 81, 85, 86, 89, 94, 103, 104, 105, 106, 109, 110, 119, 122, 128, 132, 135, 137, 139, 150, 154, 155, 156, 159, 160, 165, 167, 178, 179, 188, 193, 197, 199, 202, 203, 204, 205, 214, 225, 231, 232, 237, 238, 239, 240, 241, 244, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 342, 343, 344, 345, 347, 353, 355, 357], "omit": [2, 312, 344, 348, 355, 357], "proper": [2, 3, 4, 6, 7, 281, 282, 283, 284, 343, 344, 354, 357], "imposs": [2, 76, 168, 250, 252, 265, 268, 270], "determin": [2, 34, 40, 52, 64, 65, 85, 89, 103, 109, 110, 111, 141, 163, 204, 236, 343, 347, 354], "correspond": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 46, 53, 56, 58, 64, 65, 85, 89, 99, 103, 109, 141, 155, 159, 163, 165, 167, 193, 195, 197, 202, 203, 233, 234, 236, 237, 241, 254, 257, 258, 271, 279, 281, 282, 283, 284, 285, 342, 343, 344, 346, 348, 349, 350, 354, 355, 356], "complic": [2, 355, 357, 360], "matter": [2, 349], "inconsist": [2, 360], "miss": [2, 3, 4, 6, 7, 11, 25, 31, 85, 89, 103, 109, 159, 167, 175, 242, 243, 271, 336, 342, 345], "behavior": [2, 4, 31, 85, 89, 103, 109, 159, 167, 257, 264, 345, 354, 355], "primari": [2, 349], "elimin": [2, 3, 346], "represent": [2, 27, 28, 31, 85, 89, 103, 109, 141, 161, 163, 167, 342, 355, 356, 360], "built": [2, 3, 5, 7, 67, 81, 82, 88, 94, 95, 102, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279, 327, 329, 330, 333, 342, 343, 344, 345, 348, 350, 357, 360], "upon": [2, 8, 355], "canon": 2, "definit": [2, 32, 74, 204], "markov": [2, 3, 346, 360], "decis": [2, 3, 180, 212, 230, 255, 267, 345, 346, 347, 354, 357, 360], "mdp": [2, 346, 355], "context": [2, 3, 5, 8, 31, 85, 86, 89, 102, 103, 109, 155, 160, 167, 205, 206, 230, 277, 278, 281, 282, 283, 284, 286, 294, 300, 313, 337, 338, 342, 343, 344, 354, 355, 356, 357], "condit": [2, 44, 154, 231, 232, 238, 239, 249, 342, 355, 357], "complet": [2, 7, 9, 71, 89, 119, 153, 336, 338, 342, 344, 346, 353], "termin": [2, 3, 7, 31, 39, 51, 52, 54, 56, 57, 58, 83, 84, 85, 88, 89, 90, 94, 95, 103, 104, 105, 107, 108, 109, 110, 111, 128, 143, 167, 176, 177, 193, 197, 201, 242, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360], "truncat": [2, 3, 13, 14, 15, 16, 31, 36, 42, 44, 51, 52, 54, 56, 57, 58, 65, 72, 73, 83, 84, 85, 88, 89, 90, 103, 104, 105, 109, 110, 111, 128, 129, 136, 143, 146, 153, 167, 176, 193, 197, 221, 287, 342, 344, 345, 346, 347, 349, 350, 353, 356, 357, 359, 360], "reward": [2, 3, 13, 14, 15, 31, 33, 38, 39, 43, 44, 51, 54, 56, 57, 58, 59, 64, 65, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 116, 117, 122, 123, 124, 125, 127, 128, 129, 135, 139, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 158, 159, 160, 162, 163, 165, 167, 172, 175, 177, 193, 201, 230, 246, 250, 251, 253, 254, 256, 257, 258, 261, 264, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 310, 311, 313, 315, 333, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360], "imit": [2, 3], "addit": [2, 3, 4, 31, 52, 85, 89, 103, 109, 110, 123, 141, 155, 158, 159, 161, 163, 167, 191, 229, 230, 240, 249, 266, 281, 338, 342, 343, 346, 354, 357], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 42, 56, 85, 86, 89, 92, 103, 109, 167, 178, 179, 199, 205, 338, 339, 342, 343, 344, 345, 346, 354, 355, 357], "stateless": [2, 3, 85, 89, 103, 109, 158, 266, 342, 346, 355, 360], "simul": [2, 3, 5, 7, 8, 81, 82, 91, 94, 95, 106, 110, 111, 114, 177, 201, 337, 342, 344, 346, 350, 354], "furthermor": [2, 354], "certain": [2, 4, 17, 18, 19, 20, 31, 44, 85, 89, 103, 109, 115, 132, 153, 159, 167, 192, 196, 233, 265, 337, 342, 343, 344, 351, 354, 360], "organ": [2, 355, 357], "composit": [2, 3, 25, 27, 70, 75, 80, 85, 89, 103, 109, 344, 347, 355], "accommod": [2, 3, 346, 347], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 43, 45, 46, 64, 65], "unambigu": 2, "distinguish": [2, 110, 111], "happen": [2, 3, 85, 89, 103, 109, 229, 343, 348, 349, 350, 356, 360], "limit": [2, 39, 85, 89, 99, 103, 109, 119, 135, 250, 252, 265, 268, 270, 342, 343, 345, 354, 355], "everyth": [2, 343, 344, 345, 350, 351], "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 56, 164, 165, 337, 342, 349, 354], "rule": [2, 103, 124, 127, 241, 337, 344], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 33, 35, 36, 38, 44, 48, 52, 53, 54, 55, 57, 58, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 110, 111, 119, 121, 122, 124, 127, 128, 131, 134, 137, 139, 141, 144, 146, 149, 151, 153, 154, 155, 163, 165, 167, 175, 176, 193, 202, 203, 230, 231, 238, 239, 251, 271, 281, 282, 283, 284, 337, 342, 344, 345, 346, 347, 348, 350, 354, 355, 356, 357, 360], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 36, 39, 40, 41, 42, 44, 51, 54, 56, 57, 58, 61, 62, 64, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 159, 167, 175, 177, 187, 188, 193, 197, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 321, 326, 336, 337, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "taken": [2, 3, 85, 89, 103, 109, 145, 202, 203, 234, 338, 342, 344, 345, 347, 354, 355], "is_shar": [2, 3, 13, 14, 15, 22, 25, 33, 35, 36, 39, 40, 41, 42, 44, 51, 54, 56, 57, 58, 59, 61, 62, 64, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 165, 175, 177, 187, 188, 193, 197, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 326, 337, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "brought": [2, 344, 345, 347], "step_mdp": [2, 3, 85, 89, 103, 109, 193, 197, 335, 345, 346, 355, 359, 360], "count": [2, 3, 31, 85, 86, 153, 236, 313, 317, 320, 342, 343, 344, 345, 357, 360], "trigger": [2, 7], "partial": [2, 3, 85, 89, 103, 109, 118, 119, 154, 155, 156, 317, 345], "turn": [2, 17, 18, 19, 20, 33, 35, 38, 133, 160, 164, 231, 313, 338, 342, 343, 345, 347, 355, 356], "retain": 2, "regard": [2, 52, 58, 188, 232, 250, 259, 268, 342, 344, 355], "posit": [2, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 83, 84, 85, 89, 103, 109, 131, 132, 152, 153, 156, 159, 160, 167, 208, 271, 338, 344, 354, 355, 357], "both": [2, 3, 7, 31, 34, 37, 40, 41, 56, 85, 86, 88, 89, 103, 104, 105, 109, 119, 144, 159, 167, 176, 178, 179, 193, 196, 197, 199, 204, 205, 226, 227, 228, 232, 239, 250, 252, 253, 257, 258, 264, 265, 266, 268, 269, 270, 271, 273, 313, 337, 342, 344, 346, 348, 354, 355, 356, 357, 360], "ensur": [2, 3, 31, 34, 40, 64, 65, 71, 85, 89, 103, 109, 119, 141, 153, 161, 165, 167, 231, 337, 343, 344, 355, 357], "clearli": 2, "mark": [2, 3, 15, 58, 85, 89, 103, 109, 193, 197, 281, 283, 284, 349, 357], "identifi": [2, 36], "marl": [2, 98, 112, 119, 156, 204, 346, 354], "abov": [2, 3, 7, 31, 85, 89, 103, 109, 167, 194, 220, 221, 249, 338, 339, 342, 344, 346, 347, 354, 355, 360], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 72, 73, 83, 84, 85, 88, 89, 90, 91, 99, 102, 103, 104, 105, 106, 109, 110, 111, 117, 119, 122, 123, 124, 125, 127, 129, 135, 137, 141, 143, 144, 149, 150, 153, 156, 158, 161, 163, 164, 167, 168, 176, 178, 179, 180, 181, 182, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 214, 223, 225, 226, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 308, 337, 338, 342, 343, 344, 345, 346, 347, 350, 353, 354, 355, 356, 357, 359, 360], "typic": [2, 3, 4, 8, 31, 85, 89, 103, 109, 128, 154, 167, 237, 251, 266, 268, 271, 337, 338, 339, 344, 346, 348, 349, 354, 355], "adjust": [2, 342, 354, 355], "grumodul": [2, 118], "lstmmodul": [2, 345], "skip": [2, 31, 51, 85, 89, 103, 109, 132, 159, 167, 168, 237, 241, 266, 271, 281, 282, 283, 284, 299, 300, 310, 313, 342, 343, 355], "accumul": [2, 8, 167], "upcom": [2, 266, 290, 291, 292, 293, 295, 296, 297, 298, 342], "n": [2, 3, 6, 7, 23, 26, 31, 32, 39, 85, 89, 103, 109, 119, 126, 131, 160, 167, 191, 192, 195, 201, 236, 241, 250, 258, 266, 280, 314, 337, 339, 343, 345, 347, 354, 357, 360], "popular": [2, 3, 337, 345, 348, 354], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 167, 335, 343], "fail": [2, 7, 21, 25, 27, 103, 116, 168], "shift": [2, 31, 247, 281, 282, 283, 284, 344], "naiv": [2, 161, 346], "consum": [2, 71, 73, 343, 344, 349, 354, 357], "approxim": [2, 354, 360], "twice": [2, 8], "flat": [2, 76], "would": [2, 3, 31, 39, 85, 89, 103, 109, 167, 191, 193, 195, 197, 199, 204, 339, 343, 344, 345, 346, 348, 349, 355, 357, 360], "intens": [2, 3, 8], "ataridqnexperiencereplai": [2, 335], "onlin": [2, 8, 13, 16, 119, 185, 212, 250, 255, 267, 268, 308, 333, 344, 345, 354, 357], "2x": 2, "small": [2, 161, 342, 344, 354, 360], "clearer": [2, 347], "lazi": [2, 27, 28, 48, 49, 85, 89, 103, 109, 110, 111, 141, 161, 178, 204, 206, 242, 243, 342, 343, 347, 349, 353, 357, 360], "certainli": 2, "benefici": 2, "welcom": [2, 346], "wrapper": [2, 3, 11, 16, 33, 35, 38, 39, 40, 41, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 164, 208, 223, 229, 230, 234, 236, 241, 246, 281, 305, 306, 307, 333, 335, 344, 345, 346, 354, 356, 360], "around": [2, 5, 7, 16, 40, 41, 99, 241, 281, 342, 343, 354, 360], "selecttransform": [2, 85, 89, 103, 109], "excludetransform": [2, 57, 150, 357], "promptli": 2, "virtual": [2, 3, 88], "instal": [2, 3, 5, 10, 17, 18, 19, 52, 55, 85, 89, 103, 104, 105, 107, 108, 109, 302, 317, 336, 342, 344, 345, 346, 347, 348, 349, 350, 351, 354, 360], "respons": [2, 3, 8, 317, 348, 349, 360], "d4rl": [2, 52, 58], "repositori": [2, 7, 53, 54, 55, 58, 111], "wheel": [2, 344], "publish": 2, "openml": [2, 55, 102], "scikit": [2, 55, 102], "panda": [2, 55], "customari": [2, 337], "moreov": [2, 3], "fine": [2, 85, 89, 103, 109, 135, 349, 356], "grain": [2, 85, 89, 103, 109], "nomenclatur": 2, "compact": 2, "propos": [2, 119, 128, 200, 263, 272, 326, 337, 345, 357], "replaybufferensembl": [2, 51, 70, 75, 80], "primit": [2, 3, 4, 56, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 56, 67, 85, 89, 103, 109, 146, 159, 167, 229, 234, 236, 315, 339, 343, 344, 345, 347, 350, 355, 357, 360], "individu": [2, 4, 17, 18, 19, 20, 31, 44, 67, 76, 85, 89, 103, 109, 167, 342, 354], "dummi": [2, 326, 342, 349, 360], "semant": [2, 27, 28, 337], "ident": [2, 3, 13, 14, 15, 31, 33, 35, 38, 72, 85, 89, 100, 103, 109, 128, 204, 205, 281, 282, 283, 284, 331, 332, 343, 346, 354], "another_kei": [2, 67], "renam": [2, 33, 35, 38, 67, 144, 146, 175, 342], "resiz": [2, 3, 58, 67, 119, 343, 345, 346, 357, 360], "imag": [2, 4, 7, 56, 121, 141, 157, 163, 199, 300, 342, 343, 346, 350, 354, 356, 360], "comops": 2, "totensorimag": [2, 3, 58, 67, 119, 145, 343, 345, 357, 359, 360], "renametransform": [2, 67, 85, 89, 103, 109], "rb0": [2, 67], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 67, 81, 82, 85, 89, 99, 103, 109, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 161, 163, 165, 177, 187, 193, 197, 201, 213, 222, 223, 225, 226, 227, 228, 230, 231, 237, 238, 240, 241, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 264, 265, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 299, 300, 326, 329, 337, 342, 343, 344, 345, 347, 348, 351, 353, 354, 355, 356, 357, 359, 360], "pixel": [2, 3, 7, 25, 58, 67, 83, 84, 88, 90, 91, 106, 119, 121, 128, 131, 133, 137, 139, 141, 145, 157, 161, 163, 181, 209, 210, 300, 326, 337, 342, 343, 345, 350, 356, 357, 359, 360], "rb1": [2, 67], "p": [2, 4, 67, 70, 86, 107, 108], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 67, 81, 82, 85, 89, 99, 103, 109, 117, 118, 119, 120, 121, 122, 124, 127, 131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 161, 163, 165, 177, 187, 188, 193, 197, 201, 213, 214, 222, 223, 225, 226, 227, 228, 230, 232, 237, 238, 239, 240, 241, 243, 244, 245, 250, 251, 252, 257, 258, 264, 265, 268, 269, 270, 271, 279, 281, 282, 283, 284, 300, 313, 329, 337, 342, 343, 344, 345, 347, 351, 353, 354, 355, 356, 357, 359, 360], "pixels33": [2, 67], "data0": [2, 67], "244": [2, 67, 141, 163, 355], "data1": [2, 67], "_": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 86, 93, 110, 111, 120, 124, 126, 127, 135, 137, 144, 157, 165, 167, 225, 240, 245, 249, 250, 251, 253, 257, 258, 264, 268, 269, 271, 273, 281, 282, 283, 284, 302, 342, 343, 344, 345, 351, 354, 355, 357, 359], "rang": [2, 3, 4, 8, 11, 26, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 76, 85, 86, 89, 103, 109, 146, 157, 165, 167, 192, 196, 265, 273, 338, 339, 342, 344, 345, 348, 349, 351, 354, 355, 357, 359], "parent": [2, 3, 20, 25, 27, 43, 67, 75, 80, 85, 89, 103, 109, 119, 120, 123, 125, 128, 131, 132, 137, 141, 149, 153, 154, 155, 156, 158, 160, 161, 167, 226, 266, 268, 285, 342, 349, 355, 359, 360], "basic": [2, 99, 337, 344, 348, 349, 351, 360], "properti": [2, 3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 99, 103, 109, 158, 159, 167, 186, 194, 206, 211, 219, 220, 221, 266, 271, 347, 349, 355, 357], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 45, 46, 85, 89, 99, 102, 103, 104, 105, 109, 110, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 175, 176, 178, 179, 181, 182, 183, 184, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 207, 214, 215, 216, 217, 218, 223, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 311, 315, 320, 329, 337, 338, 339, 342, 343, 344, 345, 346, 354, 355, 359, 360], "send": [2, 3, 8, 307, 359], "receiv": [2, 3, 31, 39, 85, 89, 103, 109, 158, 167, 199, 287, 338, 342, 344, 348, 353, 355], "spawn": [2, 3, 4, 17, 21, 93, 100, 103, 109, 343, 354], "check_env_spec": [2, 3, 89, 103, 143, 335, 344, 354, 355], "saniti": [2, 3, 7, 168, 344], "utmost": 2, "commonli": [2, 65, 72, 73, 360], "emploi": [2, 207], "languag": [2, 39], "scarc": 2, "address": [2, 357], "subdomain": 2, "facilit": [2, 3, 7, 140, 141, 161, 163, 226, 227, 228, 337, 342, 345, 347, 355], "extern": [2, 3, 124, 127, 360], "token": [2, 35, 36, 39, 42, 44, 59], "manner": [2, 89, 141, 161, 337, 342, 343, 344, 349, 353, 355, 357], "dm": [3, 342, 360], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 44, 56, 69, 76, 77, 79, 81, 82, 85, 89, 93, 94, 95, 99, 100, 101, 103, 109, 110, 146, 155, 161, 162, 204, 226, 235, 250, 251, 253, 254, 256, 257, 258, 260, 264, 268, 269, 270, 271, 273, 307, 317, 326, 337, 338, 339, 342, 343, 345, 346, 347, 348, 354, 355, 357, 360], "goal": [3, 4, 154, 342, 343, 344, 345, 354, 355], "abl": [3, 98, 104, 105, 342, 344, 345, 347, 353, 354, 355, 357, 359], "experi": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 168, 302, 303, 304, 305, 306, 307, 336, 343, 344, 349, 350, 354, 357], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 85, 86, 89, 103, 104, 105, 107, 108, 109, 119, 122, 128, 134, 135, 137, 139, 144, 146, 149, 155, 158, 164, 165, 167, 326, 329, 342, 343, 344, 345, 353, 354, 356, 357, 359, 360], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 81, 82, 85, 89, 99, 103, 109, 123, 126, 128, 135, 141, 155, 158, 159, 161, 163, 167, 177, 178, 179, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 205, 208, 213, 214, 222, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 326, 329, 337, 338, 342, 343, 344, 345, 347, 348, 351, 353, 354, 355, 356, 357, 359, 360], "organis": [3, 57, 85, 89, 103, 109, 159, 343], "arbitrari": [3, 32, 37, 85, 89, 103, 109, 337, 342, 343, 355, 357], "structur": [3, 7, 33, 34, 35, 37, 38, 39, 40, 41, 44, 76, 85, 89, 103, 109, 124, 127, 176, 204, 236, 281, 282, 283, 284, 285, 335, 338, 342, 344, 345, 346, 349, 354, 355, 356], "attribut": [3, 4, 31, 33, 35, 38, 44, 56, 85, 88, 89, 90, 103, 109, 128, 141, 161, 167, 193, 197, 241, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342, 345, 355], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 99, 103, 109, 128, 167], "actual": [3, 4, 7, 51, 52, 53, 54, 56, 57, 58, 85, 89, 103, 109, 164, 320, 338, 342, 344, 354, 355], "retriev": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 70, 85, 88, 89, 90, 103, 109, 120, 125, 128, 137, 175, 177, 178, 198, 201, 237, 241, 244, 250, 251, 252, 254, 265, 268, 269, 271, 273, 279, 281, 282, 283, 284, 326, 333, 339, 343, 344, 347, 355, 360], "care": [3, 8, 85, 89, 103, 109, 158, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 300, 342, 344, 354, 355, 357], "parametr": [3, 207, 241, 251, 257, 264, 271, 342, 344], "hardwar": 3, "observation_spec": [3, 85, 89, 99, 103, 109, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 133, 134, 135, 137, 139, 141, 143, 145, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 164, 167, 177, 193, 197, 201, 321, 329, 342, 344, 348, 353, 354, 355, 360], "compositespec": [3, 27, 28, 48, 85, 87, 89, 99, 103, 109, 116, 124, 125, 126, 127, 129, 135, 143, 144, 150, 153, 155, 158, 167, 172, 176, 177, 201, 225, 229, 237, 243, 244, 335, 342, 344, 345, 354, 355, 360], "pair": [3, 31, 33, 35, 38, 52, 83, 84, 85, 89, 103, 109, 146, 155, 193, 226, 237, 241, 266, 281, 282, 283, 284, 285, 337, 338, 342, 343, 344, 347, 348, 353, 355, 360], "state_spec": [3, 85, 89, 99, 103, 109, 116, 177, 201, 355, 360], "reward_spec": [3, 85, 89, 99, 103, 109, 116, 117, 122, 123, 124, 125, 127, 143, 147, 148, 149, 151, 158, 160, 167, 177, 201, 344, 354, 355, 360], "done_spec": [3, 85, 89, 103, 109, 124, 125, 127, 128, 143, 158, 167, 176, 354, 355, 360], "flag": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 110, 111, 236, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 337, 354, 355, 356], "input_spec": [3, 85, 89, 99, 103, 109, 123, 124, 125, 126, 137, 139, 143, 144, 149, 150, 153, 154, 155, 158, 159, 160, 162, 167, 344, 355], "full_action_spec": [3, 85, 89, 103, 109, 177, 201, 344, 354], "full_state_spec": [3, 85, 89, 103, 109, 177, 201, 344], "lock": [3, 25, 27, 33, 35, 38, 85, 89, 103, 109, 155, 165, 355], "modifi": [3, 7, 8, 25, 27, 31, 44, 85, 89, 103, 109, 123, 131, 135, 141, 155, 158, 159, 161, 163, 167, 230, 236, 240, 320, 326, 342, 343, 344, 346, 354, 355], "output_spec": [3, 85, 89, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 159, 167, 355], "full_observation_spec": [3, 85, 89, 103, 109, 177, 201], "full_reward_spec": [3, 85, 89, 103, 109, 143, 354], "full_done_spec": [3, 85, 89, 103, 109, 143, 176, 354], "importantli": [3, 237, 241], "action_s": 3, "help": [3, 4, 31, 85, 89, 103, 109, 128, 167, 250, 252, 265, 268, 270, 336, 338, 342, 343, 344, 345, 354], "With": [3, 94, 95, 98, 154, 339, 343, 354, 357, 360], "necessarili": [3, 85, 89, 103, 109, 360], "requir": [3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 52, 54, 56, 65, 72, 73, 85, 89, 93, 100, 103, 106, 109, 123, 141, 155, 158, 159, 161, 163, 167, 199, 223, 240, 242, 243, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 300, 302, 337, 339, 342, 343, 344, 345, 346, 347, 348, 350, 354, 355, 357, 360], "present": [3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 71, 85, 88, 89, 103, 109, 129, 146, 150, 175, 176, 180, 181, 182, 183, 184, 190, 195, 207, 212, 236, 240, 241, 242, 243, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 333, 339, 342, 351, 353, 354, 357, 359], "0s": [3, 51, 56, 155, 345], "step_and_maybe_reset": [3, 85, 89, 103, 109, 346], "done_kei": [3, 22, 85, 89, 103, 109, 119, 128, 146, 153, 167, 175, 354], "assign": [3, 4, 13, 14, 16, 31, 33, 35, 38, 85, 89, 103, 109, 159, 167, 253, 254, 256, 271, 344, 347, 354, 357], "_reset": [3, 85, 89, 99, 103, 109, 116, 119, 124, 127, 143, 176, 177, 201], "data_": [3, 85, 89, 103, 109], "append": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 86, 89, 103, 109, 122, 146, 155, 164, 192, 193, 196, 197, 231, 238, 342, 343, 344, 345, 354, 355, 356, 357, 359], "set_se": [3, 13, 14, 15, 16, 20, 31, 81, 82, 85, 89, 94, 95, 99, 103, 109, 137, 144, 149, 154, 156, 159, 167, 349, 351, 355, 359, 360], "seed": [3, 13, 14, 15, 16, 20, 57, 85, 89, 99, 103, 104, 105, 109, 110, 111, 116, 124, 127, 143, 159, 168, 317], "determinist": [3, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 180, 189, 209, 216, 225, 234, 240, 241, 244, 251, 337, 342, 343, 345, 347, 348, 351, 355, 360], "preced": [3, 31, 198, 345], "risk": [3, 142], "overlap": [3, 40, 76], "consecut": [3, 51, 71, 93, 197, 236, 345, 346, 349, 354, 357, 360], "reproduc": [3, 119, 168, 342, 344, 354], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 36, 39, 42, 44, 59, 61, 62, 63, 64, 78, 85, 89, 103, 109, 126, 147, 153, 154, 156, 219, 220, 221, 244, 251, 257, 258, 264, 266, 267, 271, 314, 342, 343, 344, 345, 347, 354, 357], "max_step": [3, 13, 76, 85, 89, 99, 103, 109, 110, 111, 153, 167, 346, 347, 348, 350, 351, 354, 359, 360], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 39, 81, 82, 85, 89, 99, 103, 109, 118, 135, 188, 193, 197, 201, 213, 214, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 251, 253, 257, 258, 260, 261, 262, 264, 266, 269, 271, 273, 279, 280, 281, 282, 283, 284, 313, 329, 337, 342, 344, 345, 348, 351, 353, 354, 355, 356], "trail": [3, 165], "treat": [3, 31, 347, 348], "figur": [3, 342, 344, 345, 354, 355, 360], "summar": [3, 355], "brief": [3, 344, 346, 348, 357], "deliveri": 3, "design": [3, 31, 32, 70, 75, 80, 85, 89, 103, 109, 119, 142, 159, 167, 230, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 357, 360], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 32, 74, 85, 89, 103, 109, 153, 154, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 317, 339, 342, 343, 344, 345, 346, 347, 354, 355], "flank": [3, 345], "dual": 3, "strictli": [3, 8, 31, 85, 89, 103, 109, 159, 167, 271, 342, 344], "refer": [3, 7, 8, 9, 20, 31, 39, 85, 88, 89, 90, 103, 109, 159, 165, 167, 177, 188, 189, 201, 202, 203, 204, 209, 210, 215, 216, 232, 250, 259, 260, 261, 262, 268, 271, 281, 286, 294, 341, 342, 344, 347, 348, 349, 350, 354, 357, 360], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 64, 65, 85, 89, 103, 109, 116, 126, 128, 134, 137, 141, 142, 146, 148, 150, 161, 163, 165, 167, 175, 179, 186, 188, 202, 203, 204, 205, 206, 207, 211, 213, 214, 219, 220, 221, 222, 240, 256, 258, 263, 269, 272, 294, 300, 311, 313, 314, 322, 323, 326, 327, 329, 330, 331, 332, 333], "carri": [3, 20, 44, 85, 89, 103, 109, 155, 266, 343, 345, 354, 355, 357], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 112, 342], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 56, 65, 72, 73, 335], "adjac": [3, 22, 131], "reli": [3, 191, 192, 195, 196, 250, 338, 342, 344, 347, 349, 355, 360], "junction": 3, "inittrack": [3, 193, 197, 342, 345], "tutori": [3, 334, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360], "scratch": [3, 8, 343, 355], "better": [3, 8, 9, 193, 197, 338, 344, 346, 355], "gym3": 3, "envpool": [3, 100, 101], "interfac": [3, 92, 102, 199, 206, 337, 342, 344, 350, 355, 357], "simultan": [3, 19, 100, 101, 103, 109, 355], "competit": [3, 354], "advantag": [3, 8, 190, 250, 252, 265, 268, 270, 281, 282, 283, 284, 285, 286, 288, 290, 292, 294, 295, 297, 338, 339, 342, 343, 344, 345, 354, 355, 360], "scale": [3, 4, 52, 119, 135, 137, 148, 154, 157, 189, 194, 208, 215, 216, 220, 221, 226, 227, 228, 237, 241, 243, 250, 251, 264, 268, 269, 270, 271, 315, 321, 326, 333, 337, 342, 343, 344, 345, 347, 354, 359], "varieti": 3, "inherit": [3, 85, 89, 103, 109, 200, 266, 339, 344, 354], "Of": [3, 7, 336, 355, 360], "cours": [3, 4, 336, 355, 360], "make_env": [3, 103, 109, 111, 165, 322, 323, 342, 343, 360], "from_pixel": [3, 81, 82, 83, 84, 88, 90, 91, 94, 95, 106, 119, 145, 300, 326, 342, 343, 345, 346, 350, 351, 356, 357, 359, 360], "81": [3, 343, 355, 356], "simpli": [3, 6, 33, 35, 38, 44, 75, 76, 80, 129, 150, 164, 266, 337, 338, 342, 344, 348, 354, 360], "d": [3, 34, 37, 40, 41, 53, 55, 57, 58, 59, 64, 65, 191, 195, 237, 241, 359], "forc": [3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 51, 53, 54, 56, 57, 58, 343, 354, 355], "privat": [3, 85, 89, 103, 109, 164, 355, 360], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 51, 73, 76, 252, 265, 268, 308, 310, 313, 317, 320, 321, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360], "unless": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 71, 85, 89, 103, 109, 159, 167, 271, 344], "behav": [3, 91, 99, 191, 195, 211, 257, 264, 356], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 39, 67, 70, 137, 148, 194, 206, 215, 220, 221, 279, 337, 347, 348, 355, 357], "inner": [3, 85, 89, 103, 109, 126, 339, 343, 344, 354, 360], "logic": 3, "nevertheless": [3, 344, 346, 357], "kept": [3, 22, 71, 73, 126, 150, 158, 168, 175, 194, 220, 221, 348], "mind": [3, 51, 56, 65, 72, 73, 85, 89, 103, 109, 354], "desig": 3, "wherev": 3, "expos": [3, 106, 124, 127, 242, 343], "modif": [3, 5, 25, 27, 31, 85, 89, 103, 109, 131, 167, 176, 266, 344, 355], "lost": [3, 8, 164], "eras": [3, 85, 89, 103, 109, 159], "intern": [3, 340], "face": [3, 5, 8, 9, 346, 360], "NOT": [3, 142], "outsid": [3, 15, 350, 354, 355], "keep": [3, 4, 7, 8, 14, 34, 37, 40, 41, 71, 76, 103, 109, 137, 141, 163, 165, 167, 175, 236, 310, 317, 342, 343, 344, 345, 349, 350, 351, 354, 355, 357, 359, 360], "right": [3, 6, 7, 22, 39, 198, 343, 344, 354, 355, 360], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 85, 89, 103, 109, 158, 159, 167, 168, 281, 282, 283, 284], "assumpt": [3, 355, 357], "preclud": 3, "presenc": [3, 348], "annihil": 3, "reason": [3, 4, 8, 31, 56, 85, 89, 103, 104, 105, 109, 141, 161, 167, 197, 338, 342, 343, 344, 348, 349, 355, 357], "advanc": [3, 20, 34, 37, 40, 41, 346, 349, 357], "explicitli": [3, 4, 343, 345, 349, 354, 357], "place": [3, 25, 27, 31, 33, 35, 38, 61, 62, 67, 70, 78, 85, 86, 89, 103, 109, 110, 111, 123, 128, 141, 155, 158, 159, 161, 163, 164, 165, 167, 176, 230, 240, 314, 319, 320, 343, 344, 347, 350, 354, 355, 357], "superse": 3, "pettingzoowrapp": [3, 335], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 85, 89, 98, 103, 104, 105, 109, 110, 111, 112, 337, 343, 347, 349, 354, 357], "associ": [3, 31, 33, 35, 38, 85, 89, 103, 109, 167, 215, 333, 342, 357], "environemtn": 3, "__not__": 3, "constrain": [3, 135, 193, 197, 268], "li": 3, "fact": [3, 7, 8, 342, 344, 346, 354, 355, 356, 357, 360], "predict": [3, 31, 39, 187, 189, 200, 201, 230, 246, 250, 252, 256, 259, 261, 262, 265, 268, 270, 280, 337, 342, 343, 348], "know": [3, 4, 9, 34, 37, 40, 41, 229, 269, 313, 342, 343, 344, 345, 346, 347, 348, 349, 354, 357], "meaning": 3, "perfectli": [3, 339, 342, 355], "case": [3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 76, 85, 89, 103, 109, 124, 125, 127, 157, 159, 168, 197, 199, 205, 237, 240, 241, 243, 244, 249, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284, 308, 319, 331, 332, 333, 335, 337, 339, 342, 343, 344, 345, 346, 347, 349, 350, 354, 355, 357, 360], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 348, 359], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 43, 45, 46, 51, 85, 89, 103, 109, 333, 337], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 120, 124, 126, 127, 128, 129, 131, 135, 136, 137, 139, 141, 143, 144, 146, 148, 150, 153, 155, 157, 159, 160, 161, 163, 165, 167, 168, 175, 176, 177, 178, 179, 181, 182, 191, 192, 193, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 220, 221, 225, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 307, 310, 311, 313, 314, 315, 317, 326, 333, 343, 344, 345, 346, 347, 349, 350, 353, 354, 355, 356, 357, 359, 360], "500": [3, 342, 343, 355, 359], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 51, 53, 103, 109], "bottleneck": [3, 8], "great": [3, 7, 8, 359], "speedup": [3, 8, 360], "precis": [3, 124, 127, 175, 192, 196, 342, 344], "misspecifi": 3, "caus": [3, 7, 8, 61, 62, 78, 85, 89, 93, 103, 109, 142, 360], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 56, 85, 89, 103, 109, 112, 119, 130, 136, 146, 154, 155, 156, 159, 167, 168, 229, 233, 234, 236, 271, 342, 344, 354, 357, 360], "mismatch": [3, 343], "mostli": [3, 16, 300, 338, 350, 357, 360], "subprocess": [3, 13, 14, 16, 86, 103, 109], "multithreadedenv": [3, 335], "underneath": 3, "higher": [3, 4, 122, 244, 342, 343, 344, 357, 360], "flexibl": [3, 9, 100, 274, 338, 339, 342, 357, 360], "cover": [3, 336, 344, 346, 349, 350, 355, 359], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 58, 59, 67, 85, 89, 98, 99, 102, 103, 104, 105, 109, 123, 124, 125, 128, 129, 135, 141, 143, 144, 150, 153, 155, 158, 159, 161, 163, 165, 167, 170, 174, 178, 179, 199, 204, 205, 207, 213, 222, 229, 231, 237, 240, 241, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 287, 326, 331, 335, 337, 342, 343, 344, 349, 354, 355, 357, 360], "atari": [3, 4, 51, 119, 300, 350, 360], "classic": [3, 99, 105, 343], "benchmark_batched_env": 3, "pipelin": [3, 7, 337, 344], "seamlessli": [3, 355], "infrastructur": [3, 354], "act": [3, 4, 72, 73, 104, 105, 187, 205, 251, 253, 264, 269, 271, 273, 345, 354, 357], "world": [3, 5, 99, 246, 261, 350, 354, 355, 360], "paradigm": [3, 16, 354], "decpodp": 3, "game": [3, 4, 5, 51, 300, 350], "per": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 53, 76, 93, 94, 95, 103, 104, 105, 122, 149, 178, 179, 189, 204, 205, 233, 302, 317, 331, 332, 342, 343, 344, 345, 347, 348, 351, 354, 357, 359], "thank": [3, 342, 346], "carrier": [3, 344, 345, 346, 357], "particular": [3, 31, 44, 52, 53, 85, 89, 103, 109, 159, 167, 338, 339, 343, 345, 346, 353, 354, 357], "thu": [3, 265, 354], "let": [3, 6, 7, 31, 34, 37, 40, 41, 42, 85, 89, 103, 104, 105, 109, 119, 167, 193, 197, 204, 205, 231, 313, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "go": [3, 7, 98, 103, 142, 146, 230, 287, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "vma": [3, 110, 111, 354], "robot": [3, 5, 7, 56, 141, 161, 163, 354], "what": [3, 8, 34, 43, 51, 85, 89, 103, 109, 128, 155, 168, 175, 238, 336, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 351, 354, 355, 356, 357, 359, 360], "vmasenv": [3, 335, 354], "balanc": [3, 83, 84, 342, 343], "num_env": [3, 20, 88, 92, 101, 110, 111, 354], "n_agent": [3, 110, 111, 204, 205, 213, 222, 279, 354], "ground_rew": 3, "pos_rew": [3, 354], "style": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58], "relat": [3, 4, 10, 34, 103, 131, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 343, 351, 355], "vari": [3, 88, 90, 91, 104, 105, 106, 110, 142, 354], "creation": [3, 103, 109, 360], "info_spec": [3, 103], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 32, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 116, 143, 176, 254, 257, 258, 279, 335, 354, 360], "simpl": [3, 9, 31, 32, 85, 89, 103, 109, 167, 181, 241, 254, 256, 266, 270, 281, 337, 338, 342, 343, 344, 346, 347, 348, 354, 357, 360], "prefix": [3, 22, 31, 33, 35, 38, 44, 85, 89, 103, 109, 159, 167, 266, 271, 299, 345, 348, 360], "exactli": [3, 31, 85, 89, 91, 103, 109, 159, 167, 191, 195, 271, 342, 345, 349, 354], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 85, 89, 103, 109, 116, 126, 175, 177, 200, 201, 229, 233, 234, 236, 354], "reward_kei": [3, 85, 89, 103, 109, 167, 175, 177, 201, 311, 315, 354], "set_kei": [3, 128, 250, 252, 254, 257, 258, 259, 264, 265, 266, 268, 269, 270, 271, 279, 285, 342, 354], "awai": [3, 344, 346, 354], "eas": [3, 354], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109, 153, 241], "full": [3, 85, 89, 103, 109, 193, 197, 232, 308, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "raw": [3, 4, 39, 194, 220, 221, 343, 349, 355], "torchvis": [3, 141, 163, 302, 359, 360], "base_env": [3, 82, 85, 89, 90, 95, 103, 109, 116, 122, 124, 126, 127, 135, 139, 143, 145, 151, 153, 155, 156, 167, 300, 342, 343, 344, 356, 359, 360], "appar": [3, 310], "bring": [3, 344, 346, 360], "signific": [3, 5, 8, 344, 360], "kind": [3, 37, 43, 175, 348, 357], "consult": 3, "interest": [3, 237, 241, 337, 343, 344, 346, 354, 355, 360], "resize_par": 3, "easi": [3, 5, 51, 55, 83, 84, 85, 89, 94, 95, 103, 109, 229, 233, 234, 236, 337, 338, 342, 343, 344, 354, 356, 357, 360], "graph": [3, 4, 8, 81, 82, 94, 95, 277, 278, 342, 355], "appli": [3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 164, 165, 167, 191, 195, 220, 231, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 267, 268, 269, 270, 271, 273, 281, 312, 339, 342, 343, 344, 349, 355, 359, 360], "revers": [3, 195], "order": [3, 15, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 73, 85, 89, 103, 109, 120, 124, 127, 139, 159, 167, 225, 231, 240, 242, 243, 245, 250, 251, 253, 257, 258, 264, 268, 269, 270, 271, 273, 343, 354], "chain": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 123, 126, 178, 179, 243, 360], "invers": [3, 4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 119, 124, 127, 137, 146, 167, 248, 257, 264, 355], "in_keys_inv": [3, 122, 124, 127, 137, 138, 139, 143, 144, 146, 151, 158, 342, 353, 355, 360], "append_transform": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 118, 141, 155, 161, 342, 345, 355, 357, 359, 360], "doubletofloat": [3, 326, 342, 344, 353], "float32": [3, 13, 14, 15, 25, 34, 39, 40, 41, 43, 44, 51, 54, 56, 58, 61, 62, 64, 65, 78, 81, 82, 85, 88, 89, 90, 94, 95, 99, 102, 103, 107, 108, 109, 110, 111, 124, 127, 128, 129, 137, 139, 143, 144, 146, 150, 153, 155, 157, 172, 175, 177, 187, 188, 193, 197, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 326, 337, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 359, 360], "float64": [3, 31, 54, 56, 57, 83, 84, 85, 89, 103, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 167, 240, 353], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 53, 85, 88, 89, 90, 103, 109, 124, 127, 128, 159, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 339, 342, 344, 346, 357], "manipul": [3, 4, 8, 83, 84, 141, 161], "third_transform": 3, "replac": [3, 6, 7, 25, 27, 31, 51, 56, 65, 72, 73, 126, 128, 175, 233, 337, 357], "unexpect": [3, 31, 85, 89, 103, 109, 159, 167, 271, 360], "behviour": 3, "fortun": [3, 345, 346, 347, 350], "alreadi": [3, 8, 11, 31, 33, 35, 38, 44, 51, 85, 89, 103, 109, 155, 167, 176, 241, 281, 282, 283, 284, 342, 344, 350, 354], "chang": [3, 5, 7, 31, 34, 37, 40, 41, 51, 61, 62, 63, 71, 74, 75, 78, 85, 89, 103, 109, 123, 124, 125, 127, 129, 135, 143, 144, 150, 153, 158, 159, 165, 167, 195, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 338, 342, 345, 354, 355, 356, 357, 360], "catfram": [3, 343], "hold": [3, 277, 278, 355, 357], "notic": [3, 76, 119, 344, 351, 355], "parenthood": 3, "henc": [3, 34, 142, 176, 204, 337, 342, 344, 354, 355], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 103, 109, 355], "discret": [3, 23, 26, 29, 30, 32, 46, 85, 89, 103, 104, 105, 109, 110, 111, 126, 211, 214, 256, 257, 258, 259, 337, 343, 347, 354, 355, 360], "might": [3, 33, 35, 36, 38, 304, 336, 342, 346, 360], "action_mask": [3, 94, 95, 104, 105, 107, 108, 116], "unavail": [3, 104, 105], "probabl": [3, 4, 8, 39, 67, 70, 186, 188, 191, 193, 195, 197, 199, 202, 203, 211, 221, 233, 237, 241, 337, 343, 347, 359], "categor": [3, 26, 30, 32, 81, 82, 88, 90, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 116, 128, 188, 211, 214, 231, 232, 237, 238, 239, 254, 257, 258, 279, 345], "probabilistictensordictmodul": [3, 135, 241, 242, 359], "tensordictsequenti": [3, 193, 197, 231, 233, 242, 337, 342, 343, 345, 347, 351, 353, 356, 359], "maskedcategor": [3, 203, 335], "linear": [3, 13, 14, 15, 16, 20, 31, 81, 82, 85, 89, 99, 103, 109, 123, 135, 141, 155, 158, 159, 161, 163, 167, 177, 178, 179, 181, 182, 183, 184, 188, 190, 199, 201, 204, 205, 206, 207, 208, 214, 215, 216, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 329, 337, 343, 353, 356, 359], "in_feat": 3, "out_feat": 3, "logit": [3, 35, 39, 187, 202, 203, 211, 232, 237, 257, 258, 337], "dist": [3, 10, 202, 203, 211, 347], "distribution_class": [3, 135, 226, 227, 228, 230, 237, 241, 243, 250, 251, 257, 258, 264, 268, 269, 270, 271, 337, 342, 344, 347, 354, 359], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 54, 81, 82, 85, 89, 90, 94, 95, 101, 103, 104, 105, 109, 111, 167, 168, 193, 197, 223, 226, 227, 228, 229, 234, 236, 238, 246, 279, 337, 342, 343, 344, 345, 348, 351, 354, 360], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 116, 142, 167], "enviorn": [3, 104, 105, 110, 111, 354], "itself": [3, 31, 85, 89, 103, 109, 113, 167, 266, 344, 346], "mission": 3, "irrespect": [3, 240, 241], "dmcontrol": [3, 85, 89, 103, 109], "jumanji": [3, 85, 89, 94, 95, 103, 109], "natur": [3, 342, 345, 347, 348, 349, 357], "special": [3, 335, 337, 342, 345, 360], "framework": [3, 4, 9, 21, 81, 82, 85, 89, 94, 95, 99, 103, 109, 191, 359, 360], "Its": [3, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 165, 167, 240, 285], "success": [3, 54, 119, 158, 233, 343, 349, 351, 355, 357, 359], "foundat": [3, 5, 104, 105, 344, 354], "inspir": [3, 355], "gone": [3, 4, 5], "hard": [3, 7, 76, 83, 84, 103, 263, 343, 360], "prefer": [3, 16, 19, 22, 34, 37, 40, 41, 142, 150, 268, 314, 337, 344, 354, 357], "maintain": [3, 5, 9, 355], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 343, 344, 345, 349, 354, 355, 357, 360], "decor": [3, 8, 11, 115, 266, 281, 282, 283, 284], "set_gym_backend": [3, 85, 88, 89, 103, 109, 113, 335, 346], "relev": [3, 39, 281, 282, 283, 284, 285, 307, 355], "gym_backend": [3, 115, 335], "env1": [3, 353], "venv": 3, "python3": [3, 6, 7, 10, 342, 357, 360], "site": [3, 6, 7, 57, 115, 342, 357, 360], "env2": [3, 353], "_env": [3, 6, 88, 360], "classic_control": 3, "pendulumenv": [3, 355], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 97, 113], "handi": [3, 85, 89, 103, 109, 350], "side": [3, 4, 360], "v0": [3, 85, 89, 91, 94, 95, 96, 97, 103, 109, 123, 159, 165, 329], "26": [3, 85, 89, 103, 109, 343, 355], "fun": [3, 11, 115, 344, 354, 357], "reveal": 4, "bug": [4, 359], "curv": 4, "won": [4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 56, 85, 86, 88, 89, 100, 101, 103, 109, 141, 163, 167, 317, 333, 343, 344, 346, 347], "exploit": [4, 347], "video": [4, 9, 300, 302, 313, 333, 351, 354], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 135, 354, 356], "coeffici": [4, 39, 135, 354], "bonu": [4, 250, 252, 265, 268], "beta": [4, 34, 40, 64, 65, 257, 264, 265, 342, 343, 357, 359], "reduc": [4, 6, 26, 76, 154, 343], "downstream": [4, 342], "formul": [4, 354], "ob": [4, 8, 22, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 67, 72, 73, 76, 85, 89, 103, 109, 116, 124, 125, 127, 137, 151, 157, 172, 175, 181, 182, 183, 184, 204, 205, 238, 245, 251, 253, 258, 264, 269, 271, 273, 281, 282, 283, 284, 343, 353, 355, 357, 359, 360], "rate": [4, 51, 165, 280, 343, 344, 354], "gradient": [4, 31, 85, 89, 103, 109, 159, 167, 194, 203, 207, 211, 220, 221, 250, 252, 253, 257, 258, 264, 265, 266, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 317, 342, 344, 354, 355], "norm": [4, 8, 81, 82, 317, 342, 343, 344, 354, 355], "easier": [4, 337, 342], "local": [4, 7, 10, 15, 20, 31, 85, 89, 103, 109, 159, 167, 204, 205, 213, 222, 279, 305, 307, 350, 351, 354], "optima": 4, "sens": [4, 349, 355], "product": [4, 9, 191, 192, 195, 196, 331, 332], "sum": [4, 20, 30, 32, 76, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 118, 149, 202, 203, 222, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 264, 265, 267, 268, 269, 270, 271, 273, 280, 287, 338, 342, 343, 344, 345, 348, 351, 354, 355, 360], "track": [4, 13, 14, 15, 16, 17, 18, 19, 20, 41, 71, 149, 165, 167, 236, 305, 310, 343, 345, 346, 349, 354, 355, 357], "stat": [4, 137, 321, 333, 343, 344], "w": [4, 67, 119, 121, 145, 157, 191, 236, 300, 343, 345, 357], "r": [4, 31, 116, 122, 137, 151, 192, 241, 249, 280, 337, 343, 355, 360], "yield": [4, 15, 20, 31, 85, 89, 103, 109, 167, 266, 342, 348], "insight": 4, "auxiliari": [4, 348], "credit": 4, "futur": [4, 31, 33, 35, 38, 85, 89, 103, 109, 141, 159, 163, 167, 199, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 336, 359], "past": [4, 343, 357], "spars": [4, 345], "ad": [4, 15, 22, 31, 34, 37, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 85, 89, 103, 109, 149, 159, 167, 206, 207, 236, 250, 252, 254, 259, 265, 268, 271, 279, 343, 345, 347, 357, 360], "intermedi": [4, 118, 193, 197, 232, 342, 356], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 342], "discov": 4, "score": [4, 39], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 359], "select": [4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 104, 105, 110, 111, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 161, 162, 164, 165, 167, 177, 193, 197, 231, 238, 316, 342, 346, 357], "fall": [4, 52], "explicit": [4, 11, 44, 67, 198, 357], "mechan": [4, 31, 85, 89, 103, 109, 159, 167, 343, 348, 355], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 85, 89, 103, 109, 195, 257, 264, 344, 354], "addition": 4, "timestep": [4, 39, 52, 146, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 354], "realli": 4, "larg": [4, 26, 33, 35, 38, 124, 127, 161, 250, 252, 265, 268, 270, 343, 344, 354, 357], "huge": [4, 205, 345], "std": [4, 137, 165, 208, 212, 229, 342, 360], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 341, 345, 346, 348, 349, 350, 351, 352, 353, 356, 357, 358], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 39, 76, 85, 89, 103, 109, 118, 137, 141, 155, 158, 159, 161, 166, 167, 177, 191, 192, 195, 196, 201, 206, 207, 229, 233, 234, 236, 250, 251, 253, 254, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 326, 333, 342, 343, 345, 346, 347, 349, 355, 360], "estim": [4, 51, 65, 72, 73, 128, 135, 181, 226, 227, 228, 250, 251, 252, 253, 254, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 216, 261, 354], "freshli": 4, "doesn": [4, 11, 76, 100, 124, 127, 346], "drop": [4, 71, 73, 175], "meant": [4, 31, 99], "encourag": [4, 103, 342, 343, 357], "measur": [4, 61, 62, 78, 81, 82, 94, 95, 344, 349], "novelti": 4, "revisit": 4, "previous": [4, 344, 360], "diminish": 4, "decreas": [4, 347], "ideal": [4, 137, 355], "down": [4, 13, 14, 15, 16, 345, 346], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 33, 35, 38, 343, 344, 345, 348, 349, 354, 355, 359, 360], "distil": 4, "nois": [4, 166, 207, 224, 236, 269, 273, 313, 333, 342], "exploratori": [4, 250, 252, 265, 268], "misalign": 4, "trade": [4, 347], "unavoid": 4, "divers": [4, 103, 109], "bootstrap": [4, 259, 282, 288, 289, 342, 345], "noisi": [4, 206, 207, 224, 337], "unstabl": [4, 194, 220, 221], "inher": 4, "stochast": [4, 135, 189, 207, 209, 216, 251, 255, 257, 258, 264, 267, 269, 271, 337, 344, 347, 354], "enemi": 4, "pomdp": [4, 357], "loos": [4, 337, 343, 344], "nonexist": 4, "architectur": [4, 185, 348, 354], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 34, 36, 37, 39, 42, 44, 56, 59, 60, 67, 68, 70, 75, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 117, 118, 119, 120, 121, 124, 126, 127, 131, 133, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 154, 156, 157, 158, 165, 178, 179, 186, 188, 191, 195, 199, 202, 203, 204, 205, 211, 214, 218, 230, 242, 243, 255, 299, 300, 312, 313, 314, 316, 317, 326, 337, 342, 344, 345, 353, 354, 360], "lstm": [4, 196, 197, 198, 208], "rel": [4, 67, 155, 186, 219, 342, 343, 354, 357], "tend": 4, "stabl": [4, 9, 10, 102], "compens": 4, "descent": [4, 207], "1000": [4, 37, 64, 72, 73, 85, 89, 103, 109, 119, 165, 233, 236, 237, 241, 263, 342, 343, 344, 345, 347, 349, 351, 356, 357], "minimum": [4, 103, 109, 147, 189, 208, 219, 220, 221, 244, 247, 249, 251, 258, 266, 267, 271, 308, 342, 344, 351, 354], "manual": [4, 17, 19, 20, 89, 342, 345, 357], "deviat": [4, 137, 165, 177, 189, 201, 206, 207, 212, 229, 268, 273, 342, 347, 354], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 72, 191, 192, 195, 196, 346, 347, 348, 349, 350, 351], "stabil": [4, 132, 250, 252, 265, 268, 270], "stage": [4, 342, 355], "never": [4, 13, 14, 16, 349], "prevent": [4, 25, 27, 194, 220, 221, 250, 252, 265, 268, 270, 315, 357], "entir": [4, 56, 85, 89, 103, 109, 204, 344, 346, 355, 357], "submit": [4, 336, 359], "suffici": [4, 342], "system": [4, 5, 344, 354, 355], "adequ": [4, 168, 344, 354], "infeas": 4, "allevi": [4, 337], "prune": 4, "fire": [4, 31, 85, 89, 103, 109, 167], "illeg": 4, "move": [4, 31, 58, 85, 89, 103, 109, 123, 125, 141, 155, 158, 159, 161, 163, 165, 167, 175, 199, 240, 315, 342, 343, 345, 346, 359, 360], "chess": 4, "combin": [4, 158, 343, 350, 357], "grasp": 4, "top": [4, 76, 81, 82, 94, 95, 177, 201, 347], "sampl": [4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 85, 89, 99, 102, 103, 109, 118, 119, 142, 146, 169, 170, 173, 174, 177, 186, 194, 201, 202, 203, 211, 212, 215, 220, 221, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 251, 252, 253, 254, 256, 265, 267, 268, 273, 308, 314, 317, 320, 335, 337, 342, 343, 344, 345, 346, 347, 349, 351, 354, 356, 359, 360], "wherein": 4, "cumul": [4, 149, 154, 177, 287, 344], "q": [4, 9, 85, 89, 103, 109, 181, 182, 183, 184, 187, 188, 190, 213, 214, 222, 228, 232, 238, 239, 251, 253, 254, 256, 257, 258, 259, 263, 264, 269, 271, 273, 279, 326, 335, 342, 348], "flow": [4, 342, 344, 354, 355, 357], "reparameter": [4, 186, 203, 211], "soft": [4, 263, 271, 272], "critic": [4, 8, 226, 235, 250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 342, 348], "clip": [4, 39, 122, 147, 250, 252, 265, 268, 270, 273, 317, 344, 354, 355], "oppos": [4, 44], "incorrect": 4, "thought": [4, 85, 89, 103, 109], "bound": [4, 20, 24, 25, 31, 85, 89, 103, 109, 122, 136, 165, 167, 215, 216, 225, 231, 232, 236, 237, 238, 239, 240, 241, 244, 273, 337, 342, 343, 344, 360], "region": 4, "squash": [4, 345, 359], "tanh": [4, 178, 179, 191, 192, 194, 195, 196, 199, 205, 219, 220, 221, 244, 344, 347, 354, 355, 356, 359], "correct": [4, 33, 35, 38, 85, 89, 103, 109, 135, 320, 344, 345], "prob": [4, 202, 203, 211, 344, 354], "rememb": 4, "remap": 4, "origin": [4, 8, 33, 35, 38, 39, 93, 125, 126, 135, 141, 159, 163, 167, 191, 237, 240, 241, 263, 266, 268, 326, 342, 353, 355, 360], "histor": 5, "ceas": 5, "fork": [5, 342, 343, 344, 345, 354, 356], "farama": [5, 54, 96, 97, 104, 105, 344, 355], "bc": [5, 359], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 85, 89, 103, 109, 167, 168, 225, 231, 232, 237, 238, 239, 240, 241, 344, 354], "best": [5, 9, 93, 193, 197, 354, 357, 359], "gymwrapp": [5, 85, 89, 103, 109, 129, 150, 153, 164, 335, 344, 359], "feel": [5, 336, 351, 359], "free": [5, 7, 124, 127, 250, 261, 268, 339, 344, 351, 354, 359], "gladli": 5, "prepar": [6, 53, 344], "conda": [6, 7, 336], "cmake": 6, "activ": [6, 7, 9, 178, 179, 185, 189, 199, 204, 205, 252, 265, 268, 337, 355, 359], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 53, 336], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 91], "y": [6, 7, 37, 102, 190, 198, 204, 223, 342, 354, 357], "facebookresearch": [6, 53, 91], "subdirectori": 6, "verbos": [6, 351], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 48, 85, 89, 103, 109, 143, 152, 167, 266, 354, 360], "command": [6, 7, 10, 344, 354, 355, 360], "readm": [6, 7, 110], "md": [6, 7], "habitatenv": [6, 335], "_has_habitat": 6, "available_env": [6, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 102, 103, 106, 107, 108, 109, 110, 111, 360], "startswith": [6, 338, 342, 348], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 86, 266, 342], "env_nam": [6, 81, 83, 85, 88, 89, 91, 94, 96, 100, 103, 106, 109, 342, 344, 360], "llvmlite": 6, "config": [6, 7, 141, 163, 180, 185, 212, 321, 322, 323, 326, 327, 330], "var": [6, 7, 31, 85, 89, 103, 109, 159, 167, 266, 271], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 231], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 85, 89, 103, 109, 159, 167, 266, 271, 357], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 85, 343, 351], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 83, 84, 103, 109, 353, 355], "joint": [7, 343], "dynam": [7, 53, 56, 58, 167, 257, 264, 344, 346, 355], "contact": [7, 36], "engin": [7, 106, 355], "biomechan": 7, "graphic": 7, "anim": [7, 354], "area": 7, "demand": [7, 350, 360], "fast": [7, 9, 81, 82, 144, 269, 342, 343, 344], "accur": [7, 52, 58, 343, 355, 357], "articul": 7, "acquir": [7, 344], "deepmind": [7, 8, 9, 56, 83, 84, 85, 89, 103, 109, 128, 344, 346], "whomev": 7, "licenc": 7, "incorpor": [7, 85, 89, 103, 109, 229, 233, 234, 236, 345, 347, 355], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 336], "tip": [7, 336], "glfw": [7, 342], "osmesa": 7, "egl": 7, "advic": [7, 56, 360], "sudo": [7, 336], "enabl": [7, 8, 52, 61, 62, 71, 78, 193, 197, 236, 313, 344, 346, 354, 355, 357], "apt": [7, 354], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 61, 62, 63, 74, 75, 78, 343, 345], "workflow": [7, 226, 227, 228], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 21, 31, 44, 56, 62, 85, 89, 103, 109, 141, 161, 163, 167, 360], "binari": [7, 23, 26, 32, 117, 188, 214, 231, 232, 238, 239, 254, 257, 258, 279], "mkdir": 7, "tag": [7, 300, 302, 305, 333, 350, 351], "earlier": [7, 342, 344, 345, 354, 357], "roboti": 7, "download": [7, 10, 51, 52, 53, 54, 56, 57, 58, 93, 141, 163, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "html": [7, 100, 102], "wget": 7, "mujoco210": 7, "tar": [7, 53], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 103, 109], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 33, 35, 44, 59], "bin": [7, 188, 232, 337], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 184, 237, 241, 342, 344, 357], "nvidia": [7, 93], "older": [7, 11], "hack": [7, 342], "line": [7, 31, 51, 85, 89, 103, 109, 167, 342, 343, 350, 354, 357, 360], "adatp": 7, "script": [7, 53, 168, 326, 329, 333, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "unnot": [7, 142], "until": [7, 20, 156, 158, 167, 344, 345, 351, 354], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 343, 357], "troubleshoot": 7, "gl": 7, "h": [7, 67, 119, 121, 145, 157, 191, 192, 193, 195, 196, 197, 201, 300, 343, 345, 357], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 33, 35, 38, 44, 51, 52, 53, 54, 56, 57, 58, 61, 305, 307, 339, 342, 347, 350], "devel": 7, "ubuntu": [7, 93], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 343, 345, 353], "libstdc": 7, "glibcxx_3": 7, "29": [7, 343, 355], "compil": [7, 31, 85, 89, 103, 109, 167, 191, 192, 195, 196, 198], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 164, 344, 353], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 85, 89, 103, 109, 136, 159, 167, 271, 357, 360], "job": [7, 17, 18, 19, 21, 37, 357], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 81, 82, 343, 355], "114": [7, 355], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 355], "offscreenopenglcontext": 7, "opengl": [7, 354], "global": [7, 31, 85, 89, 103, 104, 105, 109, 167, 213, 222, 237, 241, 279, 339, 342, 354], "cuda_visible_devic": 7, "id": [7, 22, 39, 65, 67, 72, 73, 85, 88, 89, 103, 109, 236, 269, 303, 307, 326, 349, 357], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 355], "correctli": [7, 31, 85, 89, 103, 109, 167], "lgl": 7, "libegl": 7, "x11": [7, 354], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 339], "n_training_step": 8, "datapoint": [8, 44, 357], "n_data_per_train": 8, "no_grad": [8, 31, 85, 89, 103, 109, 135, 167, 191, 192, 195, 196, 281, 282, 283, 284, 344, 345, 354], "loss_fn": [8, 345, 348, 349, 359], "zero_grad": [8, 31, 85, 89, 103, 109, 167, 339, 342, 344, 345, 348, 351, 354, 355], "backpropag": [8, 81, 82, 94, 95, 103, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 348, 354, 355], "differenti": [8, 44, 81, 82, 135, 281, 282, 283, 284, 345, 347, 348, 354, 355], "denomin": 8, "artifact": 8, "numer": [8, 37, 89, 165, 194, 220, 221, 225, 231, 232, 237, 238, 239, 240, 241, 315, 344, 357, 360], "misconcept": 8, "freed": 8, "appear": [8, 32, 51, 56, 65, 72, 73, 355, 357], "compuat": 8, "fix": [8, 103, 155, 251, 267, 271, 343, 351, 355, 360], "retain_graph": [8, 81, 82], "discuss": [8, 9, 349, 354], "inplac": [8, 31, 33, 35, 38, 85, 89, 103, 109, 167, 342], "onto": [8, 32, 33, 35, 38, 172, 225, 229, 231, 232, 236, 237, 238, 239, 240, 241, 345, 355], "exclud": [8, 52, 57, 85, 89, 103, 109, 119, 129, 175, 213, 354, 357], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 85, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 161, 162, 164, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 218, 222, 223, 229, 230, 232, 233, 236, 237, 239, 240, 241, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 338, 355, 357, 359, 360], "submodul": [8, 31, 85, 89, 103, 109, 113, 167, 266], "param": [8, 31, 39, 85, 89, 99, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 167, 186, 188, 219, 230, 237, 240, 243, 266, 275, 278, 281, 282, 283, 284, 285, 342, 351, 354, 355, 356, 359], "grad": [8, 31, 81, 82, 85, 89, 103, 109, 167, 342, 344], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 85, 89, 103, 104, 105, 109, 123, 141, 155, 158, 159, 161, 163, 167, 208, 213, 240], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 40, 64, 65, 119, 131, 142, 160, 260, 281, 283, 284, 338, 344, 354, 355], "much": [8, 13, 14, 16, 34, 40, 56, 64, 65, 103, 109, 265, 268, 344, 346, 350, 354, 355, 357, 360], "render": [8, 110, 300, 313, 342, 343, 344, 346, 350], "factor": [8, 31, 146, 167, 194, 207, 220, 221, 229, 233, 234, 236, 251, 256, 259, 260, 262, 272, 287, 342, 343, 347, 351, 354, 357, 360], "fit": [8, 11, 137, 338, 339, 342], "bottlneck": 8, "brax": [8, 81, 82, 85, 89, 103, 109, 144, 346, 360], "jax": [8, 11, 81, 82, 94, 95], "improperli": 8, "underli": [8, 85, 89, 103, 109, 266, 346, 348, 350, 355], "tedeiou": 8, "priorit": [8, 34, 40, 64, 65, 253, 254, 256, 257, 258, 264, 269, 271, 273, 342, 343, 349], "amount": [8, 236, 343, 357], "costli": [8, 355], "constitut": [8, 343, 354, 355], "plain": [8, 346], "profil": 8, "fulli": [8, 31, 85, 89, 103, 109, 167, 192, 196, 343, 348, 355, 357], "frequent": [8, 357], "program": [8, 257, 264, 360], "functorch": [8, 10], "incl": 8, "suit": [8, 84, 344, 346, 360], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 72, 73, 240, 243, 266, 354, 355, 357, 359], "new_shap": 8, "permut": [8, 71, 139, 359, 360], "idea": [9, 269, 339, 345, 347, 354], "introductori": 9, "intro": [9, 344, 345], "dai": [9, 359], "2022": [9, 10, 355, 359], "spin": [9, 83, 84], "deep": [9, 119, 181, 182, 183, 184, 187, 236, 250, 263, 271, 272, 342], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 347], "summari": [9, 137, 165, 342, 343, 344, 345], "reddit": 9, "reagent": 9, "orient": [9, 58, 360], "baselines3": 9, "tf": 9, "bandit": [9, 102], "tensorflow": [9, 202, 203], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 351], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 359], "grade": 9, "factori": [9, 42, 342], "cherri": 9, "jaxrl": 9, "space": [9, 32, 43, 85, 89, 103, 109, 122, 126, 172, 185, 188, 204, 210, 214, 225, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 254, 256, 257, 258, 273, 279, 337, 343, 344, 345, 346, 347, 348, 354, 355, 359, 360], "mbrl": [9, 99, 337], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 355], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 344, 345, 354], "notebook": [10, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "24": [10, 57, 73, 88, 100, 101, 343, 344, 355, 356], "pip3": [10, 342, 344, 345, 354], "extra": [10, 31, 85, 89, 103, 109, 119, 165, 167, 175, 307, 337, 344, 345, 357], "url": [10, 91], "org": [10, 34, 53, 54, 56, 58, 64, 65, 81, 82, 83, 84, 91, 94, 95, 100, 101, 102, 106, 110, 111, 119, 141, 161, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 201, 202, 203, 207, 209, 210, 213, 215, 216, 222, 232, 236, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 270, 271, 272, 281, 286, 294, 334, 352, 356], "whl": 10, "u": [10, 55, 191, 192, 195, 196, 355], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 266], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 76, 81, 83, 84, 85, 87, 88, 89, 90, 91, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 119, 126, 128, 134, 135, 137, 141, 142, 145, 150, 153, 154, 159, 161, 163, 164, 165, 167, 169, 173, 175, 176, 177, 187, 188, 193, 197, 198, 200, 201, 204, 205, 206, 207, 208, 213, 214, 222, 225, 231, 232, 237, 238, 239, 240, 241, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 326, 327, 333, 343, 344], "callabl": [11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 86, 89, 99, 103, 109, 115, 128, 167, 178, 179, 199, 249, 322, 323, 331, 332, 333, 343, 357], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 193, 197, 198, 359], "longer": [11, 343, 351, 354, 357], "self": [11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 85, 89, 99, 103, 109, 116, 123, 124, 127, 141, 143, 155, 158, 159, 161, 163, 167, 177, 188, 201, 213, 222, 229, 233, 237, 240, 245, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 339, 342, 355, 357, 359, 360], "x": [11, 22, 25, 31, 37, 39, 56, 73, 135, 157, 179, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 223, 231, 237, 238, 247, 249, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 317, 342, 355, 357, 359], "23": [11, 57, 73, 341, 343, 348, 355, 357, 358], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 57, 81, 82, 89, 94, 95, 196, 249, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 342, 343, 344, 345, 351, 354, 355, 357, 360], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 73, 81, 82, 85, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 110, 111, 119, 120, 126, 137, 154, 155, 156, 159, 165, 167, 191, 194, 195, 204, 205, 220, 221, 231, 238, 244, 251, 261, 266, 267, 271, 281, 283, 284, 313, 314, 339, 342, 343, 344, 345, 355, 360], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 85, 89, 103, 109, 161, 180, 212], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 57, 85, 86, 87, 89, 100, 103, 104, 105, 109, 110, 111, 112, 135, 155, 159, 164, 165, 167, 178, 179, 180, 181, 182, 183, 184, 185, 190, 198, 199, 212, 237, 241, 271, 304, 305, 313, 322, 323, 326, 331, 332, 333, 342, 343, 344, 357, 360], "setter": 11, "setter_dict": 11, "copi": [11, 17, 18, 19, 20, 31, 33, 35, 38, 39, 44, 56, 85, 89, 103, 109, 144, 154, 159, 167, 175, 193, 197, 230, 266, 271, 338, 342, 343, 345, 346, 357], "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "tensordictbas": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 76, 85, 87, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 134, 135, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 164, 165, 167, 175, 176, 177, 193, 197, 200, 201, 229, 230, 232, 233, 236, 239, 240, 241, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 317, 342, 355], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 86, 103, 109, 342, 359], "device_typ": [13, 15, 16, 26, 29, 32, 178, 179, 180, 181, 182, 183, 184, 190, 198, 199, 204, 205, 206, 207, 212], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 343], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 343], "create_env_kwarg": [13, 14, 15, 16, 20, 86, 100, 103, 109, 342, 360], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 31, 146, 343, 357], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 266, 313, 342, 343, 344, 345, 347, 359], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 170, 174, 237, 241, 313], "exploration_mod": [13, 15, 16, 17, 18, 19, 335, 337], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 32, 34, 39, 40, 45, 56, 64, 65, 67, 85, 89, 103, 109, 119, 123, 124, 127, 135, 137, 141, 146, 147, 148, 154, 155, 157, 158, 159, 161, 163, 165, 167, 186, 189, 191, 194, 195, 199, 202, 203, 206, 207, 215, 216, 219, 221, 229, 240, 244, 247, 248, 249, 250, 251, 252, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 315, 342, 343, 357, 360], "num_thread": [13, 14, 16, 33, 35, 38, 103, 109], "num_sub_thread": [13, 14, 16, 103, 109], "datacollector": [13, 14, 15, 16, 31, 241, 268, 344, 349, 357], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 225, 229, 231, 232, 236, 237, 238, 239, 240, 241, 243, 337, 359], "env_mak": [13, 14, 15, 20, 329, 360], "50": [13, 14, 15, 20, 36, 39, 51, 58, 72, 73, 167, 341, 343, 344, 345, 354, 355, 356, 357, 358], "2000": [13, 14, 15, 31, 44, 92, 344, 357], "int64": [13, 14, 15, 22, 26, 29, 33, 35, 36, 38, 39, 40, 42, 44, 51, 54, 56, 57, 58, 59, 64, 85, 89, 98, 102, 103, 104, 105, 107, 108, 109, 128, 139, 146, 153, 188, 214, 231, 232, 236, 237, 238, 239, 337, 344, 345, 346, 347, 349, 350, 355, 357, 359], "shutdown": [13, 14, 15, 16, 20, 342, 359], "del": [13, 14, 15, 342, 344, 353, 359, 360], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 118, 223, 231, 238, 345], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 44], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 343], "divis": [13, 14, 15, 16, 17, 18, 19, 51, 56, 65, 72, 73, 354], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 89, 155, 164, 197, 345, 355, 356], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 319, 343], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 59, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 100, 101, 103, 106, 109, 123, 124, 127, 135, 141, 155, 158, 159, 161, 163, 165, 167, 240, 326, 360], "span": [13, 14, 15, 16, 17, 18, 19, 20, 56, 72], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 167, 343, 344, 354], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 39, 307, 337, 354, 355], "round": [13, 14, 15, 16, 17, 18, 19, 20, 51], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 54, 85, 89, 103, 109, 167], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 164, 359], "ratio": [13, 14, 16, 39, 342, 344], "finish": [13, 14, 16, 20, 89, 146, 360], "rest": [13, 14, 16, 337, 344, 345, 355, 359], "earli": [13, 14, 16, 31, 89, 153, 359], "equal": [13, 14, 16, 51, 65, 72, 73, 100, 103, 109, 136, 137, 178, 179, 191, 193, 195, 197, 199, 205, 272, 276, 308, 331, 332, 342, 344, 356], "plu": [13, 14, 16, 39, 103, 109, 355], "safeti": [13, 14, 16, 99, 103, 109], "harm": [13, 14, 16, 103, 109], "ordereddict": [13, 14, 15, 16, 20, 31, 85, 89, 103, 109, 159, 165, 167, 271, 343], "form": [13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 85, 89, 103, 109, 165, 167, 191, 193, 195, 197, 249, 250, 252, 265, 268, 317, 337, 347, 354], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 85, 89, 103, 109, 159], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 32, 39, 46, 65, 72, 73, 74, 85, 89, 103, 109, 128, 132, 137, 153, 178, 179, 199, 204, 205, 257, 264, 271, 357], "increment": [13, 14, 15, 16, 85, 89, 103, 109, 265], "env_fn": [13, 14, 15, 16, 86, 331, 332], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 72, 73, 183, 184, 355], "out_se": [13, 14, 15, 16, 360], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 45, 51, 52, 53, 64, 67, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 123, 141, 143, 152, 155, 158, 159, 160, 162, 163, 166, 167, 177, 178, 179, 181, 182, 183, 184, 187, 190, 193, 194, 197, 199, 200, 201, 204, 205, 211, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 279, 280, 281, 282, 283, 284, 285, 300, 304, 305, 307, 310, 317, 322, 323, 326, 330, 331, 332, 338, 342, 344, 354, 357], "envcreat": [15, 21, 103, 109, 329, 330, 333, 335, 342, 343, 359, 360], "return_same_td": 15, "interruptor": 15, "cautious": [15, 268], "whole": [15, 25, 27, 31, 44, 85, 89, 103, 109, 159, 167, 237, 271, 308, 342, 344], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 347], "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 89, 100, 135, 250, 252, 265, 268, 342, 343, 346, 353, 355, 359], "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 317], "respect": [17, 18, 19, 31, 85, 89, 103, 109, 117, 123, 124, 127, 141, 142, 151, 155, 158, 159, 161, 163, 167, 191, 195, 204, 216, 240, 245, 250, 252, 265, 268, 270, 281, 283, 284, 312, 344, 345, 354], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 336, 343, 344, 347, 350, 353, 357], "serv": [17, 19, 20, 91, 357, 360], "fashion": [17, 19, 20, 33, 35, 38, 73], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 51, 53, 54, 56, 57, 58, 85, 89, 103, 109, 131], "seen": [17, 18, 19, 20, 85, 89, 103, 109, 338, 342, 343, 345, 348, 354, 357], "submitit_delai": [17, 21], "former": [17, 18, 19, 34, 37, 40, 41, 52, 85, 89, 103, 109, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 342], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 355], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 342], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 32, 51, 237, 241], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 331, 332, 342, 343], "coordin": 20, "init": [20, 31, 85, 89, 103, 109, 167, 307, 343, 344], "autodetect": 20, "similarli": [20, 31, 71, 75, 85, 89, 103, 109, 167, 204, 242, 243, 257, 264, 360], "num_cpu": 20, "num_gpu": 20, "1024": [20, 185, 343, 357], "equat": [20, 56, 89, 236, 249, 252, 272, 344, 346, 355], "exce": [20, 357], "indefinit": [20, 50], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 317, 344, 345], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 348], "jump": [21, 346], "host": [21, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 180, 185, 212, 230], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 85, 89, 103, 109, 233, 234, 236, 237, 244, 250, 251, 253, 264, 268, 269, 271, 273, 335, 344, 354, 355, 359, 360], "rollout_tensordict": 22, "trajectory_kei": 22, "nestedkei": [22, 44, 65, 72, 73, 85, 89, 103, 109, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 167, 175, 176, 229, 230, 233, 234, 236, 241, 254, 279, 300], "durat": [22, 354], "meta": [22, 43, 52, 87, 91, 250, 252, 265, 268, 270, 339, 344, 354, 357], "aren": [22, 154, 345], "deprec": [22, 31, 85, 89, 103, 109, 159, 167, 169, 173, 234, 250, 252, 254, 257, 258, 259, 264, 265, 268, 269, 270, 271, 279, 281, 282, 283, 284, 289, 360], "eventu": [22, 213, 345, 355], "supersed": 22, "recov": [22, 52, 54, 56, 57, 58, 72, 73, 229, 234, 236, 242, 257, 264, 353], "cat": [22, 245, 251, 253, 264, 269, 271, 273, 357, 359], "arang": [22, 26, 32, 65, 188, 203, 231, 308, 337, 357], "obs_": 22, "trajectory_id": 22, "int32": [22, 41, 51, 56, 72, 94, 95, 172], "data_split": 22, "got": [22, 349], "int8": [23, 85, 98, 104, 105, 117], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "op": [23, 24, 26, 29, 30, 32, 43, 45, 46, 136, 164, 229, 233, 300, 319], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 41, 43, 45, 46, 81, 82, 85, 88, 90, 91, 94, 95, 100, 101, 106, 126, 210, 211, 215, 249, 337, 343, 344, 345, 347, 355, 357], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 89, 236, 244], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 89, 244, 355], "least": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 122, 350, 360], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 178, 179, 199, 217, 218], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 360], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 126, 195, 225, 229, 231, 232, 236, 237, 238, 239, 240, 241, 307, 337, 359, 360], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 94, 95, 99, 116, 124, 127, 143, 177, 201, 237, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 271, 273, 355, 359, 360], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 155, 172, 355, 357], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 158, 159, 208, 219, 333], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 32, 81, 82, 88, 90, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 116, 126, 188, 211, 214, 231, 232, 238, 239, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 345], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 188, 214, 231, 238, 254, 256, 257, 258, 279, 335, 337, 347], "convert": [23, 26, 29, 30, 31, 32, 33, 35, 38, 44, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 165, 167, 240, 249, 266, 342, 343, 344, 355, 357], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "upper": [24, 70, 136], "unnam": 25, "constraint": [25, 99, 344, 354], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 120, 326, 342], "td_project": 25, "absent": [25, 27, 52, 85, 89, 103, 109], "is_empti": [25, 27, 355], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 85, 89, 103, 109, 167], "keysview": [25, 27], "reflect": [25, 27, 90, 104, 105, 164, 175, 266, 320, 343, 344, 345, 354], "lock_": [25, 27], "recurs": [25, 27, 31, 47, 48, 85, 89, 103, 109, 167, 266], "succeed": [25, 27], "selected_kei": [25, 27, 150, 342], "unlock_": [25, 27], "unlock": [25, 27, 33, 35, 38], "valuesview": 25, "onehottensorspec": [26, 81, 82, 88, 90, 91, 94, 95, 100, 101, 106], "action_valu": [26, 32, 187, 188, 214, 231, 232, 238, 239, 258, 266, 279, 337, 345, 347, 351], "argmax": [26, 85, 89, 103, 109, 188, 214, 232, 239, 347], "chosen_action_valu": [26, 32, 213, 214, 222, 238, 239, 279, 337, 345, 347], "outcom": [26, 32, 186, 219], "drawn": [27, 28, 155, 233, 237, 241, 344, 354], "lazystackedtensordict": [27, 51, 85, 89, 99, 103, 109, 353], "heterogen": [27, 28, 98, 104, 105, 168, 204, 205, 342, 343], "thrown": [28, 31, 85, 89, 103, 109, 167, 357], "nvec": [29, 30], "cardin": [29, 30, 188, 214, 231, 232, 239, 344], "ax": [29, 206, 207], "m": [29, 31, 85, 89, 103, 109, 126, 167, 241, 337, 343, 355], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 254, 257, 258, 279, 335], "use_regist": [30, 32], "to_categor": [30, 32], "to_categorical_spec": [30, 32], "multidiscretetensorspec": [30, 335], "gamma": [31, 146, 167, 201, 250, 251, 253, 254, 256, 258, 259, 260, 262, 264, 266, 268, 269, 270, 271, 273, 274, 275, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 329, 338, 342, 343, 344, 354, 359], "sutton": [31, 338, 354], "1988": 31, "tempor": [31, 193, 197, 201, 282, 283, 288, 289], "44": [31, 343, 345, 355, 356, 357], "discount": [31, 56, 86, 146, 167, 251, 256, 259, 260, 262, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 338, 343, 344, 354], "ahead": [31, 167, 360], "bias": [31, 191, 192, 195, 196, 247, 338, 342], "mitig": 31, "pleas": [31, 54, 85, 89, 103, 104, 105, 109, 119, 156, 159, 167, 271, 336], "multisteptransform": [31, 335], "99": [31, 146, 165, 201, 262, 275, 280, 287, 329, 342, 343, 344, 348, 351, 355, 356, 359], "add_modul": [31, 85, 89, 103, 109, 167], "child": [31, 85, 89, 103, 109, 167, 342], "fn": [31, 36, 85, 89, 103, 109, 167, 208, 331, 332], "init_weight": [31, 85, 89, 103, 109, 167], "fill_": [31, 85, 89, 103, 109, 167, 343, 345, 360], "net": [31, 85, 89, 103, 109, 167, 182, 184, 187, 190, 198, 205, 250, 251, 258, 264, 268, 269, 270, 271, 326, 329, 343, 355, 356, 359], "in_featur": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 178, 179, 181, 182, 183, 184, 190, 198, 199, 204, 205, 206, 207, 226, 240, 254, 256, 347, 348, 359], "out_featur": [31, 85, 89, 99, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 177, 178, 179, 181, 182, 183, 184, 189, 190, 193, 197, 198, 199, 201, 204, 205, 206, 207, 226, 231, 240, 254, 256, 337, 342, 345, 347, 348, 351, 359], "bia": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 178, 179, 181, 182, 183, 184, 189, 190, 191, 192, 193, 195, 196, 197, 199, 205, 206, 207, 208, 233, 234, 236, 240, 247, 248, 249, 266, 271, 338, 342, 343, 344, 345, 354, 359], "requires_grad": [31, 81, 82, 85, 89, 103, 109, 135, 159, 167, 271], "bfloat16": [31, 85, 89, 103, 109, 167], "datatyp": [31, 85, 89, 103, 109, 167, 357], "member": [31, 85, 89, 103, 109, 167, 266, 300], "xdoctest": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 266, 271], "buf": [31, 85, 89, 103, 109, 167], "20l": [31, 85, 89, 103, 109, 167, 266], "1l": [31, 85, 89, 103, 109, 167, 266], "5l": [31, 85, 89, 103, 109, 167, 266], "__call__": [31, 36, 85, 89, 103, 109, 167, 241, 339, 360], "doubl": [31, 45, 85, 89, 103, 109, 123, 124, 125, 127, 141, 155, 158, 159, 161, 163, 167, 240, 254, 259, 263, 269, 272, 279, 342, 343, 344, 345, 360], "eval": [31, 85, 89, 103, 109, 159, 165, 167, 342, 343, 344], "evalu": [31, 85, 89, 103, 109, 159, 167, 186, 202, 203, 211, 221, 269, 322, 323, 343, 344, 351], "dropout": [31, 85, 89, 103, 109, 159, 167, 191, 193, 195, 197, 199, 345], "batchnorm": [31, 85, 89, 103, 109, 159, 167], "disabl": [31, 85, 89, 103, 109, 159, 167, 194, 221, 342], "comparison": [31, 85, 89, 103, 109, 159, 167, 266, 342, 343], "similar": [31, 37, 56, 85, 89, 103, 104, 105, 109, 123, 141, 155, 158, 159, 161, 162, 163, 165, 167, 226, 228, 237, 240, 241, 338, 342, 343, 344, 345, 347, 348, 349, 350, 355, 357, 360], "confus": [31, 85, 89, 103, 109, 159, 167], "extra_repr": [31, 85, 89, 103, 109, 167], "nontermin": 31, "original_reward": 31, "newli": [31, 85, 89, 103, 109], "OR": 31, "get_buff": [31, 85, 89, 103, 109, 167], "get_submodul": [31, 85, 89, 103, 109, 167], "qualifi": [31, 85, 89, 103, 109, 167], "referenc": [31, 85, 89, 103, 109, 167], "attributeerror": [31, 85, 89, 103, 109, 167, 360], "invalid": [31, 76, 85, 89, 103, 109, 112, 167, 202, 203], "resolv": [31, 85, 89, 103, 109, 167], "someth": [31, 85, 89, 98, 103, 109, 167, 336, 343, 344, 355, 360], "get_extra_st": [31, 85, 89, 103, 109, 165, 167], "set_extra_st": [31, 85, 89, 103, 109, 165, 167], "picklabl": [31, 85, 89, 103, 109, 165, 167], "pickl": [31, 85, 89, 103, 109, 165, 167], "get_paramet": [31, 85, 89, 103, 109, 167], "net_b": [31, 85, 89, 103, 109, 167], "net_c": [31, 85, 89, 103, 109, 167], "conv": [31, 85, 89, 103, 109, 167, 178, 179, 343], "conv2d": [31, 85, 89, 103, 109, 167, 179, 181, 182, 190, 204, 359], "kernel_s": [31, 85, 89, 103, 109, 167, 178, 179, 181, 182, 190, 204, 209, 343, 359], "stride": [31, 85, 89, 103, 109, 167, 178, 179, 181, 182, 190, 204, 343, 359], "diagram": [31, 85, 89, 103, 109, 167], "degre": [31, 85, 89, 103, 109, 167], "named_modul": [31, 85, 89, 103, 109, 167], "o": [31, 85, 89, 103, 109, 167, 196], "transit": [31, 52, 56, 73, 76, 85, 89, 103, 109, 167, 246, 342, 345, 346, 347, 349, 355, 357], "half": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 342], "ipu": [31, 85, 89, 103, 109, 167], "strict": [31, 33, 35, 38, 85, 89, 103, 109, 159, 167, 271], "descend": [31, 85, 89, 103, 109, 159, 167, 271], "get_swap_module_params_on_convers": [31, 85, 89, 103, 109, 159, 167, 271], "persist": [31, 85, 89, 103, 109, 159, 167, 175, 271], "enforc": [31, 71, 85, 89, 103, 109, 159, 167, 242, 271, 355], "preserv": [31, 85, 89, 103, 109, 159, 167, 271], "missing_kei": [31, 85, 89, 103, 109, 159, 167, 271], "unexpected_kei": [31, 85, 89, 103, 109, 159, 167, 271], "namedtupl": [31, 85, 89, 103, 109, 159, 167, 271], "duplic": [31, 71, 85, 89, 103, 109, 167, 254, 259, 266, 279], "l": [31, 85, 89, 103, 109, 167, 191, 195, 280, 344, 355], "idx": [31, 85, 89, 103, 109, 167], "named_buff": [31, 85, 89, 103, 109, 167], "remove_dupl": [31, 85, 89, 103, 109, 167, 266], "prepend": [31, 85, 89, 103, 109, 167, 266], "running_var": [31, 85, 89, 103, 109, 167], "named_children": [31, 85, 89, 103, 109, 167], "conv4": [31, 85, 89, 103, 109, 167], "conv5": [31, 85, 89, 103, 109, 167], "memo": [31, 85, 89, 103, 109, 167], "named_paramet": [31, 85, 89, 103, 109, 135, 167, 266], "register_backward_hook": [31, 85, 89, 103, 109, 167], "removablehandl": [31, 85, 89, 103, 109, 167], "favor": [31, 85, 89, 103, 109, 167, 344], "register_full_backward_hook": [31, 85, 89, 103, 109, 167], "register_buff": [31, 85, 89, 103, 109, 167], "running_mean": [31, 85, 89, 103, 109, 167], "alongsid": [31, 85, 89, 103, 109, 167, 350, 354], "num_featur": [31, 85, 89, 103, 109, 167], "register_forward_hook": [31, 85, 89, 103, 109, 167, 188, 214], "with_kwarg": [31, 85, 89, 103, 109, 167], "always_cal": [31, 85, 89, 103, 109, 167], "register_module_forward_hook": [31, 85, 89, 103, 109, 167], "regardless": [31, 85, 89, 103, 109, 167, 252, 265, 268], "register_forward_pre_hook": [31, 85, 89, 103, 109, 167], "invok": [31, 85, 89, 103, 109, 167], "And": [31, 85, 89, 103, 109, 167, 348], "forward_pr": [31, 85, 89, 103, 109, 167], "register_module_forward_pre_hook": [31, 85, 89, 103, 109, 167], "grad_input": [31, 85, 89, 103, 109, 167], "grad_output": [31, 85, 89, 103, 109, 167], "subsequ": [31, 85, 89, 103, 109, 167, 345], "technic": [31, 85, 89, 103, 109, 167, 343, 345, 347], "caller": [31, 85, 89, 103, 109, 167], "register_module_full_backward_hook": [31, 85, 89, 103, 109, 167], "register_full_backward_pre_hook": [31, 85, 89, 103, 109, 167], "backward_pr": [31, 85, 89, 103, 109, 167], "register_module_full_backward_pre_hook": [31, 85, 89, 103, 109, 167], "register_load_state_dict_post_hook": [31, 85, 89, 103, 109, 167], "incompatible_kei": [31, 85, 89, 103, 109, 167], "register_modul": [31, 85, 89, 103, 109, 167, 339], "alia": [31, 85, 89, 103, 109, 167], "register_paramet": [31, 85, 89, 103, 109, 167], "register_state_dict_pre_hook": [31, 85, 89, 103, 109, 167], "keep_var": [31, 33, 35, 38, 85, 89, 103, 109, 159, 167, 271], "requires_grad_": [31, 85, 89, 103, 109, 167], "autograd": [31, 85, 89, 103, 109, 159, 167, 271], "freez": [31, 85, 89, 103, 109, 167], "finetun": [31, 85, 89, 103, 109, 167], "gan": [31, 85, 89, 103, 109, 167], "share_memori": [31, 85, 86, 89, 103, 109, 167, 342], "share_memory_": [31, 85, 89, 103, 109, 167, 359], "destin": [31, 33, 35, 38, 85, 89, 103, 109, 118, 124, 125, 127, 159, 161, 165, 167, 175, 271, 300], "averag": [31, 85, 89, 103, 109, 159, 165, 167, 236, 260, 261, 271, 315, 342, 344], "shallow": [31, 85, 89, 103, 109, 159, 167, 271, 345], "detach": [31, 85, 89, 103, 109, 159, 167, 266, 271, 281, 282, 283, 284, 342], "non_block": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 345], "memory_format": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "channels_last": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "unchang": [31, 85, 89, 103, 109, 123, 126, 141, 155, 158, 159, 161, 163, 167, 233, 240, 314, 342, 357], "tri": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 350], "pin": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "4d": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "ignore_w": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "1913": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "3420": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "5113": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "2325": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "torch_doctest_cuda1": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "gpu1": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "1914": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "5112": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 355], "2324": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "float16": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 192, 196, 240], "cdoubl": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "3741": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "j": [31, 34, 64, 65, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 339, 348], "2382": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "5593": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240, 355], "4443": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "complex128": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "6122": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "1150": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 167, 240], "to_empti": [31, 85, 89, 103, 109, 167], "dst_type": [31, 85, 89, 103, 109, 167], "xpu": [31, 85, 89, 103, 109, 167], "set_to_non": [31, 85, 89, 103, 109, 167], "unidimension": 32, "keepdim": 32, "user_regist": 32, "priori": 32, "uniqu": [32, 72, 73, 119, 128, 154, 155, 156, 307, 349, 357], "discretebox": [32, 85, 89, 103, 109, 347, 354, 360], "chosen_data": [33, 59], "rewarddata": [33, 59, 335], "rejected_data": [33, 59], "from_dataset": [33, 35, 59], "dataset_nam": [33, 35, 39, 44, 59, 102], "max_length": [33, 35, 36, 42, 44, 59, 351], "550": [33, 35, 39, 44, 59, 72, 73, 355], "root_dir": [33, 35, 44, 59], "from_disk": [33, 35, 44, 59], "num_work": [33, 35, 44, 58, 59, 100, 103, 109, 342, 343], "carperai": [33, 35, 39, 44], "openai_summarize_comparison": [33, 35, 44], "sequen": [33, 35], "cach": [33, 35, 44, 51, 52, 53, 54, 56, 57, 58, 59, 65, 72, 85, 89, 103, 109, 124, 127, 141, 159, 163, 309, 356], "load_from_disk": [33, 35, 44, 59], "load_dataset": [33, 35, 44, 59], "attention_mask": [33, 35, 36, 38, 39, 42, 44, 59], "92534": 33, "input_id": [33, 35, 36, 38, 39, 42, 44, 59], "end_scor": [33, 38, 39, 59], "sub_data": [33, 35], "from_tensordict": [33, 35, 38], "non_tensordict": [33, 35, 38], "_no_default_": [33, 35, 38], "getattr": [33, 35, 38], "tensorclass": [33, 35, 38, 59, 61, 62, 78], "from_flatten": [33, 35, 38], "attemptedli": [33, 35, 38], "memmap": [33, 35, 38, 61, 103, 109, 165, 300, 302, 314, 357], "copy_exist": [33, 35, 38], "return_earli": [33, 35, 38], "mimic": [33, 35, 38, 85, 89, 103, 109], "cross": [33, 35, 38, 177], "anymor": [33, 35, 38, 159, 240], "tensordictfutur": [33, 35, 38], "deepli": [33, 35, 38], "insid": [33, 35, 38, 103, 360], "memmap_": [33, 35, 38, 165], "memmap_lik": [33, 35, 38], "contentless": [33, 35, 38], "1_000_000": [33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 72, 342, 345], "alloc": [33, 35, 38, 62, 202, 203, 342], "setattr": [33, 35, 38], "tent": [33, 35, 38, 44], "to_tensordict": [33, 35, 38, 345], "unbind": [33, 34, 35, 37, 38, 40, 41, 193, 197], "alpha": [34, 40, 64, 65, 178, 179, 181, 182, 183, 184, 190, 204, 251, 258, 267, 269, 271, 342, 357, 359], "ep": [34, 40, 64, 65, 165, 236, 252, 272, 315, 342, 343, 345, 348, 351], "1e": [34, 40, 64, 65, 165, 186, 189, 208, 219, 342, 343, 344, 354], "08": [34, 40, 64, 65, 343, 344, 354, 355], "pin_memori": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 140, 342, 359], "schaul": [34, 64, 65], "quan": [34, 64, 65], "antonogl": [34, 64, 65], "silver": [34, 64, 65], "2015": [34, 64, 65], "arxiv": [34, 53, 56, 58, 64, 65, 81, 82, 83, 84, 94, 95, 100, 101, 106, 110, 111, 119, 141, 161, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 201, 207, 209, 210, 213, 215, 216, 222, 232, 236, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 271, 272, 281, 286, 294, 356], "ab": [34, 53, 56, 58, 64, 65, 81, 82, 83, 84, 94, 95, 100, 101, 106, 110, 111, 118, 141, 161, 165, 180, 185, 189, 190, 195, 201, 207, 209, 210, 213, 215, 216, 222, 250, 251, 254, 255, 256, 257, 260, 261, 262, 263, 264, 267, 268, 271, 356], "1511": [34, 64, 65, 190], "05952": [34, 64, 65], "expon": [34, 40, 64, 65], "\u03b1": [34, 40, 64, 65], "delta": [34, 40, 64, 65, 191, 195, 219, 237, 241, 335, 338], "null": [34, 40, 64, 65, 117], "max_siz": [34, 37, 40, 41, 61, 62, 63, 74, 76, 78, 344, 349], "1_000": [34, 37, 40, 41, 357], "merg": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 355], "mini": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 354], "decid": [34, 37, 40, 41, 359], "meth": [34, 37, 40, 41, 266, 355], "incompat": [34, 37, 40, 41, 270, 357], "drop_last": [34, 37, 40, 41, 71, 73], "dimension": [34, 37, 40, 41, 126, 193, 197, 281, 286, 294, 354], "notion": [34, 37, 40, 41], "caution": [34, 37, 40, 41, 71, 168, 360], "codebas": [34, 37, 40, 41, 355], "approach": [34, 37, 40, 41, 137, 342, 344, 348, 349, 360], "return_info": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 357], "tensordictprioritizedreplaybuff": [34, 335, 359], "simplifi": [34, 347, 355, 357], "manual_se": [34, 37, 40, 41, 53, 57, 58, 72, 73, 81, 82, 85, 89, 103, 109, 116, 126, 137, 146, 149, 154, 156, 167, 202, 203, 211, 225, 232, 233, 234, 236, 244, 250, 251, 253, 257, 264, 271, 349, 351, 354, 355, 359, 360], "_weight": [34, 40, 64, 65, 357, 359], "arrai": [34, 39, 64, 85, 89, 103, 109, 128, 191, 192, 195, 196, 342, 357], "update_prior": [34, 64, 65, 314, 339, 343, 357, 359], "36278465": 34, "tempfil": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 329, 342, 343, 357], "tqdm": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 317, 342, 344, 345, 354, 355], "randomsampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 342], "td_error": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 253, 254, 256, 257, 258, 259, 264, 266, 269, 271, 273, 279, 342, 348, 357, 359], "update_tensordict_prior": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 342, 357, 359], "temporarydirectori": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 342, 343, 357], "tmpdir": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 342, 343], "rb_load": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "cursor": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "insert_transform": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "insert": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 68, 76, 77, 79, 80, 160], "set_sampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "set_storag": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "set_writ": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "prompt_rindex": [35, 36, 39], "os": [35, 44, 59, 343], "cpu_count": [35, 44, 59], "promptdatatldr": 35, "116722": 35, "prompt": [36, 39], "return_tensordict": [36, 42], "recip": [36, 85, 89, 103, 109, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247], "text": [36, 39, 42, 54, 191, 192, 195, 196, 236, 344], "tensodict": [36, 42], "orign": [36, 42], "valid_sampl": 36, "eough": 36, "toknen": 36, "meet": 36, "criterion": 36, "autotoken": [36, 42, 44], "from_pretrain": [36, 39, 42], "gpt2": [36, 39, 42, 44, 180, 185, 212], "pad_token": [36, 42], "eos_token": 36, "enough": [36, 357], "inde": [36, 126, 344, 355], "roundrobinwrit": [37, 41, 53], "Not": [37, 81, 82, 94, 95], "depth": [37, 85, 89, 99, 103, 109, 177, 178, 179, 181, 182, 183, 184, 189, 190, 199, 201, 204, 205, 209, 210, 231, 337, 343, 346, 348, 349, 353, 354, 357], "_pytre": [37, 357], "tree_map": [37, 357], "did": [37, 164, 287, 343, 344, 349, 357, 360], "assert0": [37, 357], "ref_model": 39, "reward_model": [39, 246], "kl_coef": 39, "max_new_token": 39, "score_clip": 39, "kl_schedul": 39, "klcontrollerbas": 39, "num_step": 39, "causal": 39, "sentenc": 39, "frozen": [39, 135], "kl": [39, 135, 261, 265], "penalti": [39, 265], "strai": 39, "calcul": [39, 146, 191, 250, 252, 256, 265, 268, 270], "gpt2rewardmodel": 39, "get_dataload": [39, 335], "promptdata": [39, 335], "gpt2lmheadmodel": 39, "dl": 39, "block_siz": [39, 59], "tensorclass_typ": [39, 59], "openai_summarize_tldr": 39, "config_class": 39, "model_path": 39, "rollout_from_model": 39, "rollout_from_data": 39, "600": [39, 350, 355, 357], "reward_kl": [39, 135], "reward_raw": 39, "sample_log_prob": [39, 226, 227, 228, 237, 241, 243, 268, 326, 344, 347, 354, 359], "create_rollout_td": 39, "log_prob": [39, 186, 202, 203, 211, 221, 241], "log_ratio": 39, "replic": 39, "rindex": 39, "eo": 39, "term": [39, 135, 195, 196, 206, 207, 249, 250, 258, 319, 343, 344, 346, 347, 354], "generation_config": 39, "generationconfig": 39, "ti": [39, 290, 291, 292, 293, 295, 296, 297, 298, 343], "log_probs_gen": 39, "logprobs_of_label": 39, "priority_kei": [40, 41, 64, 254, 257, 258, 259, 264, 266, 269, 271, 273, 279, 357, 359], "reduct": [40, 64, 65, 76, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 267, 268, 269, 270, 271, 273], "prioritizedreplaybuff": [40, 335, 359], "min": [40, 64, 65, 76, 219, 220, 221, 230, 236, 251, 252, 258, 267, 269, 271, 343, 344, 354], "median": [40, 64, 65, 76, 94, 95, 237, 241], "include_info": [40, 41, 51, 52, 53, 54, 55, 56, 57, 58], "kw": [41, 68, 77], "huggingfac": [42, 53, 58, 235], "co": [42, 128, 355], "doc": [42, 91, 94, 95, 102, 106, 307, 342, 343, 354, 357, 360], "pad_trunc": 42, "am": 42, "me": 42, "reassur": 42, "ok": 42, "describ": [43, 120, 158, 219, 220, 254, 303, 338, 342, 344, 354, 355, 360], "tokenizer_fn": 44, "tensordicttoken": [44, 335], "pre_tokenization_hook": 44, "valid_s": 44, "tokenizer_class": 44, "tokenizer_model_nam": 44, "tokein": 44, "elementwis": 44, "vocabulari": 44, "loader": [44, 344], "185068": 44, "dataset_to_tensordict": 44, "data_dir": 44, "batch_dim": [44, 333], "valid_mask_kei": 44, "conver": 44, "batch_dimens": 44, "filder": 44, "from_dict": 44, "data_memmap": 44, "exclus": [47, 48, 51, 56, 65, 72, 73, 131, 191, 193, 195, 197, 202, 203, 231, 232, 238, 239, 272, 273, 281, 282, 283, 284, 285, 307, 333, 337], "recurse_through_entri": 48, "recurse_through_stack": 48, "consolid": 48, "dataset_id": [51, 52, 53, 54, 56, 57, 58], "num_proc": 51, "slice_len": [51, 56, 65, 72, 73], "strict_len": 51, "arari": 51, "2600": 51, "million": [51, 345], "consequ": [51, 195, 349], "50x10": 51, "available_dataset": [51, 53, 54, 56, 57, 58, 72, 73], "ataridqn": 51, "immutabledatasetwrit": [51, 52, 54, 55, 56, 57, 58], "greater": [51, 65, 72, 73, 193, 197, 342, 343, 359], "shorter": [51, 56, 65, 72, 73], "Be": [51, 56, 65, 72, 73], "game_nam": 51, "pong": [51, 101, 139, 360], "krull": 51, "1d": [51, 65, 72, 73, 76], "cheapli": 51, "nontensordata": [51, 56], "invalid_rang": 51, "999998": 51, "999999": 51, "add_count": 51, "84": [51, 145, 343, 345, 355, 356], "valueestim": [51, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 335, 338, 342, 354], "convolut": [51, 178, 179, 181, 182, 204, 217, 347], "2657628": 51, "2657629": 51, "2657630": 51, "2657631": 51, "2657632": 51, "2657633": 51, "2657634": 51, "2657635": 51, "2657636": 51, "2657637": 51, "2657638": 51, "2657639": 51, "2657640": 51, "2657641": 51, "2657642": 51, "2657643": 51, "2657644": 51, "2657645": 51, "2657646": 51, "2657647": 51, "2657648": 51, "2657649": 51, "2657650": 51, "2657651": 51, "2657652": 51, "2657653": 51, "2657654": 51, "2657655": 51, "2657656": 51, "2657657": 51, "2657658": 51, "2657659": 51, "2657660": 51, "2657661": 51, "2657662": 51, "2657663": 51, "2657664": 51, "2657665": 51, "2657666": 51, "2657667": 51, "2657668": 51, "2657669": 51, "2657670": 51, "2657671": 51, "2657672": 51, "2657673": 51, "2657674": 51, "2657675": 51, "2657676": 51, "2657677": 51, "2657678": 51, "2657679": 51, "2657680": 51, "2657681": 51, "2657682": 51, "2657683": 51, "2657684": 51, "2657685": 51, "2657686": 51, "2657687": 51, "2657688": 51, "2657689": 51, "2657690": 51, "2657691": 51, "1995687": 51, "1995688": 51, "1995689": 51, "1995690": 51, "1995691": 51, "1995692": 51, "1995693": 51, "1995694": 51, "1995695": 51, "1995696": 51, "1995697": 51, "1995698": 51, "1995699": 51, "1995700": 51, "1995701": 51, "1995702": 51, "1995703": 51, "1995704": 51, "1995705": 51, "1995706": 51, "1995707": 51, "1995708": 51, "1995709": 51, "1995710": 51, "1995711": 51, "1995712": 51, "1995713": 51, "1995714": 51, "1995715": 51, "1995716": 51, "1995717": 51, "1995718": 51, "1995719": 51, "1995720": 51, "1995721": 51, "1995722": 51, "1995723": 51, "1995724": 51, "1995725": 51, "1995726": 51, "1995727": 51, "1995728": 51, "1995729": 51, "1995730": 51, "1995731": 51, "1995732": 51, "1995733": 51, "1995734": 51, "1995735": 51, "1995736": 51, "1995737": 51, "1995738": 51, "1995739": 51, "1995740": 51, "1995741": 51, "1995742": 51, "1995743": 51, "1995744": 51, "1995745": 51, "1995746": 51, "1995747": 51, "1995748": 51, "1995749": 51, "1995750": 51, "left": [51, 52, 56, 123, 124, 125, 129, 135, 141, 143, 144, 150, 153, 156, 158, 161, 163, 167, 204, 233, 343, 344, 349, 350], "untouch": [51, 56, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 167], "_max_run": 51, "dataset_asterix": 51, "asterix": 51, "dataset_pong": 51, "sample_from_al": [51, 67, 70], "buffer_id": [51, 70, 75], "hidden": [51, 103, 109, 118, 181, 189, 191, 192, 193, 195, 196, 197, 198, 209, 210, 215, 216, 226, 227, 228, 230, 240, 243, 252, 265, 268, 337, 345, 353, 359], "exclusive_field": [51, 353], "stack_dim": [51, 353], "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 57, 58, 331, 332, 342], "reconstruct": [52, 72, 73, 261, 342, 360], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "possess": 52, "unexpectedli": 52, "traj_split": 52, "observationnorm": [52, 165, 333, 342, 343, 344, 345, 359], "maze2d": 52, "umaz": 52, "loc": [52, 135, 137, 148, 194, 208, 220, 221, 226, 227, 228, 237, 241, 243, 250, 251, 264, 268, 269, 270, 271, 321, 326, 333, 337, 342, 343, 344, 345, 347, 354, 359], "gen": 53, "dgrl": 53, "accompani": [53, 153], "gap": 53, "2312": 53, "05742": 53, "gen_dgrl": 53, "procgen": 53, "bigfish": 53, "bossfight": 53, "categori": [53, 337, 339], "1m_e": 53, "1m_": 53, "comma": 53, "npy": 53, "extract": [53, 235, 342, 344, 359], "mmap": [53, 57, 58], "minut": [53, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "internet": [53, 58], "connect": [53, 58], "minari": 54, "websit": [54, 56], "currenrtli": 54, "minari_data": 54, "door": 54, "torchrl_logg": [54, 57, 351], "28": [54, 204, 341, 343, 349, 354, 355, 358], "door_body_po": 54, "qpo": 54, "qvel": 54, "dua": 55, "graff": 55, "2017": 55, "uci": 55, "archiv": 55, "ic": 55, "edu": 55, "ml": 55, "sklearn": [55, 102], "adult_num": [55, 102], "adult_onehot": [55, 102], "mushroom_num": [55, 102], "mushroom_onehot": [55, 102], "covertyp": [55, 102], "shuttl": [55, 102], "magic": [55, 102, 346], "shuffl": [56, 71, 73, 354], "stream": 56, "embodi": [56, 356], "22": [56, 72, 73, 164, 343, 344, 348, 354, 355], "institut": 56, "demonstr": [56, 344, 349, 354, 355, 357, 360], "527": [56, 355], "skill": 56, "160266": 56, "googl": [56, 57, 81, 82, 344, 345, 354], "open_x_embodi": 56, "2310": [56, 106], "08864": 56, "language_instruct": 56, "get_non_tensor": 56, "neither": [56, 355], "nor": 56, "insuffici": 56, "chosen": [56, 110, 111, 154, 155, 213, 214, 222, 239, 300, 326, 337, 350], "openx": 56, "__will": 56, "change__": 56, "randomli": [56, 71, 136, 137, 155, 233, 237, 241, 347, 354, 355, 357], "crop": [56, 121, 142, 300], "modal": [56, 342], "cmu_stretch": 56, "is_init": [56, 58, 118, 134, 193, 197, 236, 345], "language_embed": 56, "512": [56, 190, 343, 355], "lift": 56, "green": 56, "garbag": 56, "lid": 56, "roboset": 57, "h5": [57, 58], "roboh": [57, 106], "fk1": 57, "v4": [57, 89, 103, 145, 290, 291, 292, 293, 295, 296, 297, 298, 326, 342, 344, 356], "expert": 57, "fk1_microopenrandom_v2d": 57, "concis": [57, 348], "75": [57, 343, 355, 356], "totensor": 58, "image_s": 58, "v": [58, 165, 191, 192, 195, 196, 226, 257, 264, 271, 337, 342, 343], "npz": 58, "2206": [58, 100, 101], "04779": [58, 251, 256], "vd4rl": 58, "detect": 58, "squar": [58, 121, 194, 220, 221, 300], "rectangular": [58, 178, 179], "walker_walk": 58, "64px": 58, "height": [58, 121, 145], "veloc": [58, 83, 84, 85, 89, 103, 109, 119, 354, 355, 360], "infinit": [59, 110, 111, 349, 357], "three": [59, 337, 339, 344, 346, 347, 354, 355, 357, 360], "block": [59, 60, 80, 337, 345], "pairwisedataset": [59, 335], "256": [59, 185, 343, 344, 354, 355], "immut": [60, 85, 89, 103, 109, 144, 159], "piec": [60, 68, 77, 79, 80, 342, 343, 344, 350, 354, 355, 357], "scratch_dir": [61, 342, 357], "sent": [61, 62, 78, 165], "mistak": [61, 62, 78], "myclass": [61, 62, 78], "foo": [61, 62, 78, 230, 357, 360], "bar": [61, 62, 78, 230, 310, 311, 313, 317, 339, 343], "attach": [61, 62, 63, 74, 75, 78, 343], "entiti": [61, 62, 63, 74, 75, 78], "auto": [62, 78, 164, 236, 251, 258, 267, 269, 271, 273, 338, 354], "zero_": [62, 78, 172], "max_capac": [64, 65, 342, 357], "data_0": 64, "data_1": 64, "smoothen": 64, "tdrb": 64, "pack": [64, 191, 195, 344, 346, 360], "end_kei": [65, 72, 73], "cache_valu": [65, 72, 73], "expens": [65, 72, 73, 357], "readili": [65, 72, 73], "conjunct": [65, 72, 73, 343], "Will": [65, 72, 85, 100, 300], "short": [65, 72, 73, 81, 82, 94, 95, 103, 168, 195, 196, 343, 344, 346, 347, 354, 357], "unsqueez": [65, 116, 119, 120, 157, 160, 198, 342, 345, 354, 355], "tolist": 65, "120110917137936e": 65, "06": [65, 186, 219, 343, 344, 355], "uniformli": [66, 266, 360], "storageensembl": [67, 70], "samplerensembl": 67, "writerensembl": [67, 75], "num_buffer_sampl": [67, 70], "ensembl": [67, 70, 75, 80, 240, 269], "forbidden": 67, "collat": 67, "0x13a2ef430": 67, "0x13a2f9310": 67, "interpol": [67, 145, 343, 345], "interpolationmod": [67, 345], "bilinear": [67, 145, 345], "0x13a2f9220": 67, "0x13a2f9f70": 67, "0x13a2d9b50": 67, "0x13a2f95b0": 67, "0x128648260": 67, "roundrobin": [68, 77], "incomplet": [71, 73], "fresh": 71, "haven": [71, 356], "remain": [71, 118, 125, 126, 135, 154, 207, 348], "draw": [71, 233], "slicesamplerwithoutreplac": [72, 357], "320": [72, 73, 83, 84, 343, 355], "700": [72, 73], "robosetexperiencereplai": [72, 73, 335], "dataid": [72, 73], "__len__": 74, "rank_kei": 76, "rank": [76, 177], "samplerwithoutreplac": [76, 344, 354, 357], "basi": [76, 204, 357], "simplest": [76, 244, 342, 344, 345, 347, 354, 357, 360], "get_insert_index": 76, "convers": [81, 82, 94, 95, 338], "2106": [81, 82, 255], "13281": [81, 82], "categorical_action_encod": [81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109], "frame_skip": [81, 82, 83, 84, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 106, 132, 310, 313, 320, 339, 342, 343, 344, 359], "repeat": [81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 177, 344, 354, 355], "allow_done_after_reset": [81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 100, 101, 106], "toler": [81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 186, 219], "availalb": [81, 82, 94, 95], "ant": [81, 82, 85, 89, 92, 103, 109, 356], "87": [81, 82, 343, 355], "acrobot": [81, 82, 83, 84, 360], "fetch": [81, 82, 83, 84, 135, 347, 356, 357], "advant": [81, 82, 94, 95], "report": [81, 82, 94, 95, 350], "timer": [81, 82, 94, 95], "timeit": [81, 82, 94, 95], "310": [81, 82, 355], "00": [81, 82, 341, 343, 344, 345, 354, 355, 356, 358], "ms": [81, 82, 94, 95], "268": [81, 82, 341, 347, 355, 358], "433": [81, 82, 355], "80": [81, 82, 343, 344, 354, 355, 356], "27": [81, 82, 103, 109, 341, 343, 344, 355, 356, 358], "213": [81, 82, 355], "8605": [81, 82], "pipelineenv": 82, "get_environ": 82, "dm_control": [83, 84, 342, 353, 360], "2006": [83, 84, 251, 256, 355], "12983": [83, 84], "task_nam": [83, 85, 89, 103, 109], "pixels_onli": [83, 84, 88, 90, 91, 106, 342, 343, 350, 351, 359, 360], "cheetah": [83, 84, 85, 89, 103, 109, 300, 342], "240": [83, 84, 355, 359], "swingup": [83, 84, 360], "swingup_spars": [83, 84], "ball_in_cup": [83, 84], "catch": [83, 84], "balance_spars": [83, 84], "three_pol": [83, 84], "two_pol": [83, 84], "finger": [83, 84], "turn_easi": [83, 84], "turn_hard": [83, 84], "fish": [83, 84], "upright": [83, 84, 343], "swim": [83, 84], "hopper": [83, 84], "hop": [83, 84], "humanoid": [83, 84, 103, 109, 353], "walk": [83, 84, 103, 109, 343, 353], "run_pure_st": [83, 84], "bring_bal": [83, 84], "bring_peg": [83, 84], "insert_bal": [83, 84], "insert_peg": [83, 84], "point_mass": [83, 84], "reacher": [83, 84], "swimmer": [83, 84], "swimmer6": [83, 84], "swimmer15": [83, 84], "walker": [83, 84], "dog": [83, 84], "trot": [83, 84], "humanoid_cmu": [83, 84], "lqr": [83, 84], "lqr_2_1": [83, 84], "lqr_6_2": [83, 84], "quadrup": [83, 84], "escap": [83, 84], "stacker": [83, 84], "stack_2": [83, 84], "stack_4": [83, 84], "deviceless": 85, "run_type_check": [85, 99], "counterenv": 85, "unboundedcontinuoustensorspec": [85, 89, 99, 103, 109, 116, 124, 127, 143, 155, 172, 177, 201, 225, 240, 243, 245, 270, 335, 344, 345, 354, 355, 360], "_step": [85, 89, 103, 109, 116, 124, 127, 131, 143, 144], "continuousbox": [85, 89, 103, 109, 172, 344, 354, 355, 359, 360], "sort": [85, 89, 103, 109, 120, 236], "another_act": [85, 89, 103, 109], "mutabl": [85, 89, 103, 109], "batch_lock": [85, 87, 89, 103, 109, 155, 159, 355], "done_keys_group": [85, 89, 103, 109], "outer": [85, 89, 103, 109, 339, 342, 343, 360], "another_don": [85, 89, 103, 109], "empty_cach": [85, 89, 103, 109, 159], "fake_tensordict": [85, 89, 103, 109, 343], "fake": [85, 89, 103, 109, 342, 343], "afterward": [85, 89, 103, 109, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 360], "silent": [85, 89, 103, 109, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247], "braxenv": [85, 89, 103, 109, 144, 335, 346], "envnam": [85, 89, 103, 109], "pipeline_st": [85, 89, 103, 109], "attibut": [85, 89, 103, 109], "maybe_reset": [85, 89, 103, 109], "speak": [85, 89, 103, 109, 342], "rand_act": [85, 89, 98, 103, 104, 105, 109, 346], "register_gym": [85, 89, 103, 109, 346], "entry_point": [85, 89, 103, 109], "info_kei": [85, 89, 103, 109], "reward_threshold": [85, 89, 103, 109], "nondeterminist": [85, 89, 103, 109], "max_episode_step": [85, 88, 89, 90, 103, 109], "order_enforc": [85, 89, 103, 109], "autoreset": [85, 89, 103, 109], "disable_env_check": [85, 88, 89, 100, 101, 103, 109], "apply_api_compat": [85, 89, 103, 109], "nasium": [85, 89, 103, 109], "scope": [85, 89, 103, 109, 360], "dmcontrolenv": [85, 89, 103, 109, 300, 335, 342, 346, 353, 360], "dmc": [85, 89, 103, 109], "removeemptyspec": [85, 89, 103, 109], "threshold": [85, 89, 103, 109, 233, 251, 252, 344], "learnt": [85, 89, 103, 109, 329], "knowledg": [85, 89, 103, 109, 348], "checker": [85, 88, 89, 100, 101, 103, 109], "stepapicompat": [85, 89, 103, 109], "concept": [85, 89, 103, 109, 343, 357], "deem": [85, 89, 103, 109, 110, 111], "envgym": [85, 89, 103, 109], "0855": [85, 89, 103, 109], "0215": [85, 89, 103, 109], "0881": [85, 89, 103, 109], "0412": [85, 89, 103, 109], "1101": [85, 89, 103, 109], "0080": [85, 89, 103, 109], "0254": [85, 89, 103, 109], "0424": [85, 89, 103, 109], "9609e": [85, 89, 103, 109], "02": [85, 89, 103, 109, 341, 343, 344, 351, 355, 356, 358], "9776e": [85, 89, 103, 109], "04": [85, 89, 93, 103, 109, 343, 344, 354, 355], "6347e": [85, 89, 103, 109], "03": [85, 89, 103, 109, 137, 341, 343, 355, 356, 358], "3842e": [85, 89, 103, 109], "5338e": [85, 89, 103, 109], "3064e": [85, 89, 103, 109], "0381e": [85, 89, 103, 109], "6656e": [85, 89, 103, 109], "05": [85, 89, 103, 109, 343, 355], "0204e": [85, 89, 103, 109], "action_spac": [85, 89, 103, 109, 128, 188, 214, 231, 232, 238, 239, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 345, 347, 351], "0833": [85, 89, 103, 109], "0275": [85, 89, 103, 109], "0612": [85, 89, 103, 109], "0770": [85, 89, 103, 109, 355], "1256": [85, 89, 103, 109, 355], "0082": [85, 89, 103, 109], "0186": [85, 89, 103, 109], "0476": [85, 89, 103, 109], "2221": [85, 89, 103, 109], "2256": [85, 89, 103, 109], "5930": [85, 89, 103, 109], "6937": [85, 89, 103, 109], "5865": [85, 89, 103, 109], "5479": [85, 89, 103, 109], "0187": [85, 89, 103, 109], "6825": [85, 89, 103, 109, 355], "5224": [85, 89, 103, 109], "0018": [85, 89, 103, 109, 355], "cattensor": [85, 89, 103, 109, 326, 342, 353, 355, 360], "1005": [85, 89, 103, 109], "0335": [85, 89, 103, 109], "0268": [85, 89, 103, 109, 355], "0133": [85, 89, 103, 109], "0627": [85, 89, 103, 109], "0074": [85, 89, 103, 109, 355], "0488": [85, 89, 103, 109, 355], "0353": [85, 89, 103, 109], "0075": [85, 89, 103, 109, 355], "0069": [85, 89, 103, 109, 355], "0098": [85, 89, 103, 109, 355], "0058": [85, 89, 103, 109, 355], "0033": [85, 89, 103, 109, 355], "0157": [85, 89, 103, 109], "0004": [85, 89, 103, 109, 345, 355], "0381": [85, 89, 103, 109], "0452": [85, 89, 103, 109], "11355747": [85, 89, 103, 109], "04257728": [85, 89, 103, 109], "00408397": [85, 89, 103, 109], "04155852": [85, 89, 103, 109], "0389733": [85, 89, 103, 109], "01409826": [85, 89, 103, 109], "0978704": [85, 89, 103, 109], "08808327": [85, 89, 103, 109], "03970837": [85, 89, 103, 109], "00535434": [85, 89, 103, 109], "02353762": [85, 89, 103, 109], "05116226": [85, 89, 103, 109], "02788907": [85, 89, 103, 109], "06848346": [85, 89, 103, 109], "05154399": [85, 89, 103, 109], "0371798": [85, 89, 103, 109], "05128025": [85, 89, 103, 109], "dydact": [85, 89, 103, 109], "gym_env": [85, 89, 103, 109, 359], "reset_kei": [85, 89, 103, 109, 119, 149, 154, 155, 156], "multitask": [85, 89, 103, 109], "multiag": [85, 89, 98, 103, 104, 105, 109, 176, 205, 213, 222, 279], "another_reward": [85, 89, 103, 109], "callback": [85, 89, 103, 109, 354], "auto_reset": [85, 89, 103, 109, 167, 355], "auto_cast_to_devic": [85, 89, 103, 109, 354], "break_when_any_don": [85, 89, 103, 109, 167, 354], "return_contigu": [85, 89, 103, 109, 168, 353], "soon": [85, 89, 103, 104, 105, 109], "__sort": [85, 89, 103, 109], "as__": [85, 89, 103, 109], "normal": [85, 89, 103, 109, 137, 165, 178, 179, 194, 199, 202, 203, 208, 220, 221, 229, 237, 241, 252, 265, 268, 313, 315, 333, 337, 339, 345, 347, 354, 360], "argmaxmodul": [85, 89, 103, 109], "n_ob": [85, 89, 103, 109, 135, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 348], "n_act": [85, 89, 103, 109, 135, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 348], "ourselv": [85, 89, 103, 109, 344, 360], "emul": [85, 89, 103, 109], "epoch": [85, 89, 103, 109, 317, 344, 354], "input_td": [85, 89, 103, 109], "rollout_td": [85, 89, 103, 109], "concomitt": [85, 89, 103, 109], "workspac": [85, 89, 103, 109], "prevail": [85, 89, 103, 109, 120, 149, 176], "creator": [86, 322, 323, 331, 332, 333], "substitut": [86, 154, 165, 347], "vecnorm": [86, 333], "env_creat": [86, 342], "test_env1": 86, "_td": [86, 342], "observation_count": [86, 360], "test_env2": 86, "sleep": [86, 360], "ps": 86, "p1": 86, "p2": 86, "9934": 86, "env_str": 87, "device_map": 87, "accross": [88, 90], "registri": 88, "asyncvectorenv": 88, "involv": [88, 90, 91, 106, 346, 348], "pixel_observ": [88, 90, 91, 106], "pixelobservationwrapp": [88, 90, 91, 106], "al": [88, 90, 128, 139, 177, 360], "adventur": [88, 90, 360], "v5": [88, 90, 101, 128, 139, 360], "airraid": [88, 90, 360], "alien": [88, 90, 360], "time_limit": 88, "timelimit": [88, 110, 111], "default_info_dict_read": [88, 89, 90, 103], "reader": [88, 89, 90, 103, 343], "set_info_dict_read": [88, 89, 90, 103, 346], "info_dict": [88, 89, 90, 103], "auto_register_info_dict": [88, 89, 90, 103], "info_dict_read": [89, 103], "succe": [89, 103], "halfcheetah": [89, 103, 145, 326, 342], "register_info_dict": 89, "read_act": 89, "read_don": 89, "nonsens": 89, "fallback": 89, "broken": [89, 168], "read_ob": 89, "dictat": [89, 237, 241, 268, 342, 355], "read_reward": 89, "baseinfodictread": 89, "hoc": [89, 103, 347], "dict_read": 89, "my_info_kei": 89, "some_env": 89, "vecenv": 90, "vectorenv": 90, "placehold": [91, 128, 159], "secur": 91, "habitat3": 91, "ai": [91, 356], "habitatrenderpick": 91, "isaacgym": [92, 93], "isaacgymwrapp": [92, 335], "isaacgymenv": [93, 335], "webpag": 93, "isaac": 93, "essenc": [93, 346], "instadeepai": [94, 95], "2306": [94, 95], "09884": [94, 95], "snake": [94, 95], "grid": [94, 95, 300], "bodi": [94, 95], "body_st": [94, 95], "fruit_posit": [94, 95], "col": [94, 95], "row": [94, 95], "head_posit": [94, 95], "tail": [94, 95], "game2048": [94, 95], "maze": [94, 95], "cleaner": [94, 95], "cvrp": [94, 95], "multicvrp": [94, 95], "minesweep": [94, 95], "rubikscub": [94, 95], "knapsack": [94, 95], "sudoku": [94, 95], "tsp": [94, 95], "connector": [94, 95], "v2": [94, 95, 107, 108, 276, 290, 291, 292, 293, 295, 296, 297, 298, 345], "mmst": [94, 95], "graphcolor": [94, 95], "partli": [94, 95], "scrambl": [94, 95], "robotwarehous": [94, 95], "tetri": [94, 95], "binpack": [94, 95], "jobshop": [94, 95], "0x1fca91910": 94, "122": [94, 95, 355, 360], "0x1ff9baee0": 94, "134": [94, 95, 355], "0x1ff9ba7c0": 94, "172": [94, 95, 355], "31": [94, 95, 343, 355], "rubric": [95, 137, 243], "mo": [96, 97], "minecart": [96, 97], "mo_gym": 97, "qualnam": 98, "leverag": [98, 104, 105, 342, 354, 360], "neural": [98, 104, 105, 178, 179, 217, 240, 337, 343, 344, 345, 347, 354, 355, 360], "group_map": [98, 104, 105, 110, 111, 112], "constructiuon": [98, 104, 105], "premad": [98, 104, 105, 110, 111, 279], "all_in_one_group": [98, 112], "agent_0": [98, 104, 105, 112], "agent_1": [98, 104, 105, 112], "agent_2": [98, 104, 105, 112], "agent_3": 98, "one_group_per_ag": [98, 104, 105], "environn": 99, "mymbenv": [99, 177, 201], "world_model": [99, 177, 201, 261], "super": [99, 116, 124, 127, 143, 177, 188, 201, 245, 251, 253, 258, 264, 269, 271, 273, 342, 355, 357, 359], "hidden_observ": [99, 177, 201], "mlp": [99, 177, 178, 179, 181, 182, 183, 184, 190, 193, 197, 198, 201, 205, 226, 231, 254, 256, 326, 337, 343, 347, 348, 351, 353, 356, 359], "worldmodelwrapp": [99, 177, 201], "activation_class": [99, 177, 178, 179, 181, 182, 183, 184, 189, 190, 199, 201, 204, 205, 343, 347, 354, 359], "relu": [99, 177, 185, 201, 208, 249], "activate_last_lay": [99, 177, 184, 199, 201], "sail": [100, 101], "sg": [100, 101], "10558": [100, 101], "readthedoc": 100, "en": 100, "python_interfac": 100, "envpoolmixin": 101, "env_bas": 101, "task_id": 101, "env_typ": 101, "gym_reset_return_info": 101, "envpool_env": 101, "www": [102, 202, 203], "fetch_openml": 102, "106": [102, 355], "my_env_fun": [103, 109], "custom_attribute_list": [103, 109], "custom_attribut": [103, 109], "custom_method_list": [103, 109], "custom_method": [103, 109], "deploi": [103, 109], "slight": [103, 109, 343], "share_individual_td": [103, 109], "shared_memori": [103, 109], "policy_proof": [103, 109], "ll": [103, 109, 191, 192, 195, 196, 342, 343, 344, 345, 346, 347, 348, 349, 351, 354, 360], "serial_for_singl": [103, 109], "mp_start_method": [103, 109], "com_veloc": [103, 109], "extrem": [103, 109, 250, 252, 265, 268, 270], "head_height": [103, 109], "joint_angl": [103, 109], "torso_vert": [103, 109], "stringent": [103, 344, 354], "inter": 103, "penv": 103, "tensordictprim": [103, 345], "reward_ctrl": 103, "reward_run": 103, "x_posit": 103, "x_veloc": 103, "env_fix": 103, "drastic": [103, 357], "influenc": 103, "thumb": [103, 344], "suppos": [103, 313, 339, 360], "myenv": [103, 124, 127], "pipe": 103, "update_kwarg": [103, 109], "pettingzoo": [104, 105], "pet": [104, 105], "zoo": [104, 105], "__": [104, 105], "aecenv": [104, 105], "use_mask": [104, 105], "dead": [104, 105], "compulsori": [104, 105], "adversary_0": [104, 105], "adversari": [104, 105], "marlgroupmaptyp": [104, 105, 110, 111, 112, 335], "vectoris": [104, 105, 191, 192, 195, 196], "sisl": 104, "multiwalker_v9": 104, "return_st": [104, 105], "categorical_act": [104, 105, 107, 108, 110, 111], "n_piston": [104, 105], "pistonball_v6": [104, 105], "piston": [104, 105], "piston_0": [104, 105], "piston_1": [104, 105], "piston_20": [104, 105], "aec": [104, 105], "tictactoe_v3": [104, 105], "player": [104, 105], "player_1": [104, 105], "player_2": [104, 105], "butterfli": 105, "parallel_env": [105, 342, 359, 360], "vikashplu": 106, "wiki": 106, "06828": 106, "smacv2": [107, 108], "starcraft": [107, 108], "challeng": [107, 108, 346, 355, 356], "10gen_terran": [107, 108], "10gen_zerg": [107, 108], "10gen_protoss": [107, 108], "3m": [107, 108], "8m": [107, 108, 356], "25m": [107, 108], "5m_vs_6m": [107, 108], "8m_vs_9m": [107, 108], "10m_vs_11m": [107, 108], "27m_vs_30m": [107, 108], "mmm": [107, 108], "mmm2": [107, 108], "2s3z": [107, 108], "3s5z": [107, 108], "3s5z_vs_3s6z": [107, 108], "3s_vs_3z": [107, 108], "3s_vs_4z": [107, 108], "3s_vs_5z": [107, 108], "1c3s5z": [107, 108], "2m_vs_1z": [107, 108], "corridor": [107, 108], "6h_vs_8z": [107, 108], "2s_vs_1sc": [107, 108], "so_many_banel": [107, 108], "bane_vs_ban": [107, 108], "2c_vs_64zg": [107, 108], "old": [107, 108, 265, 360], "smac": [107, 108], "map_nam": [107, 108], "176": [107, 108, 355], "battle_won": [107, 108], "dead_al": [107, 108], "dead_enemi": [107, 108], "episode_limit": [107, 108], "322": [107, 108, 355], "Or": [107, 108, 204], "procedur": [107, 108], "distribution_config": [107, 108], "n_unit": [107, 108], "n_enemi": [107, 108], "team_gen": [107, 108], "dist_typ": [107, 108], "weighted_team": [107, 108], "unit_typ": [107, 108], "marin": [107, 108], "maraud": [107, 108], "medivac": [107, 108], "exception_unit_typ": [107, 108], "start_posit": [107, 108], "surrounded_and_reflect": [107, 108], "map_x": [107, 108], "map_i": [107, 108], "capability_config": [107, 108], "88": [107, 108, 343, 355, 356], "131": [107, 108, 355], "starcraft2env": 108, "proroklab": [110, 111], "vectorizedmultiagentsimul": [110, 111], "2207": [110, 111], "03530": [110, 111], "basescenario": 110, "descript": [110, 343, 344], "perfrom": [110, 111], "defaultt": 110, "continuous_act": [110, 111, 354], "repositiori": 110, "horizon": [110, 111, 177, 201, 344], "sparsiti": 110, "agent_nam": [110, 111, 112], "agent_names_to_indices_map": [110, 111], "unbatched_action_spec": [110, 111, 354], "unbatched_observation_spec": [110, 111], "unbatched_reward_spec": [110, 111], "het_spec": [110, 111], "het_specs_map": [110, 111], "flock": [110, 111], "agent_collision_rew": [110, 111], "agent_distance_rew": [110, 111], "ca": 112, "environment4": 112, "get_group_map": 112, "sumbodul": 113, "model_bas": [114, 177, 201], "adapt": [116, 153, 265, 342, 355], "masker": 116, "tensor_spec": [116, 176, 257, 258, 268, 270], "binarydiscretetensorspec": [116, 254, 257, 258, 279, 335], "maskedenv": 116, "ones_lik": 116, "scatter": 116, "_set_se": [116, 124, 127, 143, 355], "biner": 117, "transform_reward_spec": [117, 122, 123, 124, 125, 129, 135, 143, 144, 147, 148, 150, 151, 153, 158, 160, 167], "burn_in": 118, "burn": 118, "date": [118, 303], "retur": 118, "burnt": 118, "gru_modul": [118, 193], "input_s": [118, 191, 192, 193, 195, 196, 197, 198, 345], "hidden_s": [118, 191, 192, 193, 195, 196, 197, 198, 345], "set_recurrent_mod": [118, 193, 197, 345], "burn_in_transform": 118, "gru": [118, 192, 193], "num_lay": [118, 191, 193, 195, 197, 209, 210], "86": [118, 343, 355], "3008": [118, 343], "0344": 118, "padding_valu": [119, 202, 203], "as_invers": 119, "movement": 119, "pdf": [119, 180, 181, 182, 183, 184, 188, 232, 236, 259, 269, 272, 281, 286, 294, 326], "1312": [119, 343], "5602": 119, "unsqueezetransform": [119, 355, 357], "consumpt": 119, "followin": 119, "pictur": 119, "pixels_trsf": [119, 357], "grayscal": [119, 343, 345, 357, 360], "data_exclud": [119, 357], "transform_observation_spec": [119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 164, 167, 355], "del_kei": [120, 161, 353, 355], "unsqueeze_if_oor": 120, "observation_posit": 120, "observation_veloc": 120, "delet": [120, 307], "key1": [120, 308, 316], "key2": [120, 308, 316], "center": [121, 300], "width": [121, 145], "out_keys_inv": [122, 124, 127, 137, 138, 139, 143, 144, 151, 158, 355], "scalar": [122, 147, 182, 184, 206, 207, 229, 233, 234, 236, 247, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 337, 343, 348, 355], "permit": [122, 131, 160, 250, 252, 265, 268, 270], "rewardsc": [123, 159, 342, 343, 345], "rewardclip": 123, "transformed_env": [123, 158, 159, 346], "transform_env_devic": [123, 125, 158, 167], "transform_input_spec": [123, 124, 125, 126, 137, 139, 143, 144, 149, 153, 154, 155, 158, 160, 162, 167], "transform_output_spec": [123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 167], "transformfull_done_spec": [123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 167], "dtype_in": 124, "dtype_out": 124, "scan": [124, 127, 242, 243], "resp": [124, 127], "not_transform": [124, 127], "constructedw": [124, 127], "orig_devic": 125, "unspecifi": 125, "transform_done_spec": [125, 158, 167], "num_actions_effect": 126, "max_act": 126, "include_forward": 126, "num_act": [126, 258, 347], "action_out": 126, "_call": [126, 131, 355], "eol_kei": 128, "lives_kei": 128, "eol_attribut": 128, "unwrap": 128, "breakout": 128, "210": [128, 139, 355], "160": [128, 139, 343, 355], "eol_transform": 128, "eol": 128, "dqnloss": [128, 250, 251, 253, 256, 258, 259, 260, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 279, 324, 335, 338, 343, 345, 351], "register_kei": 128, "loss_or_advantag": 128, "lossmodul": [128, 317, 328, 329, 335], "valueestimatorbas": [128, 266, 335], "excluded_kei": 129, "finit": [130, 347, 357], "first_dim": 131, "last_dim": 131, "allow_positive_dim": [131, 160], "th": [131, 160, 191, 195, 355], "frameskip": 131, "repeatedli": [132, 344, 354], "init_kei": 134, "tracker": 134, "coef": 135, "pi_curr": 135, "pi_0": 135, "overfit": 135, "probabilist": [135, 237, 335, 344, 359], "get_dist": [135, 241, 242], "mod": [135, 193, 197, 244, 345, 351], "normalparamextractor": [135, 337, 344, 347, 354], "probabilisticactor": [135, 226, 227, 228, 230, 250, 251, 255, 257, 258, 264, 267, 268, 269, 270, 271, 273, 337, 342, 344, 347, 354], "tanhnorm": [135, 226, 227, 228, 237, 243, 250, 251, 264, 268, 269, 270, 271, 273, 335, 344, 354, 359], "return_log_prob": [135, 226, 227, 228, 237, 241, 243, 270, 337, 344, 347, 354, 359], "apply_": 135, "copy_": [135, 342], "formulat": 135, "diverg": [135, 193, 197, 237, 241, 261, 265], "noop": [136, 359], "trial": 136, "standard_norm": [137, 148, 342, 343, 345], "affin": [137, 148], "layer": [137, 165, 178, 179, 181, 182, 187, 189, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 207, 209, 210, 217, 218, 224, 235, 244, 337, 343, 344, 345, 347, 356], "set_default_tensor_typ": 137, "doubletensor": 137, "isclos": 137, "next_ob": [137, 281, 282, 283, 284, 359], "init_stat": [137, 342, 343, 344, 345], "3752e": 137, "01": [137, 236, 247, 252, 265, 268, 341, 343, 345, 354, 355, 356, 358], "5087e": 137, "9294e": 137, "9636": 137, "5608": 137, "6408": 137, "num_it": [137, 343, 344], "reduce_dim": [137, 342, 343, 344, 345], "cat_dim": [137, 342, 343, 344, 345], "keep_dim": [137, 343, 345], "statist": [137, 165, 270, 333, 342, 343, 344, 360], "gaussian": [137, 155, 177, 201, 206, 207, 212, 229, 344], "empir": [137, 177, 201, 237, 241, 342, 344, 354], "3d": [137, 178], "third": [137, 232, 354], "reorder": 139, "in_keys_in": 139, "channel": [139, 157, 204, 209, 210, 343], "r3m": [141, 356], "resnet": [141, 161, 163], "visual": [141, 161, 163, 344, 355], "embed": [141, 161, 162, 163, 181, 213, 225, 226, 227, 228, 240, 245, 356], "ego4d": [141, 161, 163], "univers": [141, 161, 163, 346], "suraj": [141, 161], "nair": [141, 161], "aravind": [141, 161], "rajeswaran": [141, 161], "vikash": [141, 161, 163], "kumar": [141, 161, 163], "chelsea": [141, 161], "finn": [141, 161], "abhinav": [141, 161], "gupta": [141, 161], "2203": [141, 161, 201, 356], "12601": [141, 161, 356], "_init": [141, 161, 342], "snippet": [141, 161, 342], "resnet50": [141, 163, 356], "model_nam": [141, 161, 163, 303], "resnet34": 141, "resnet18": 141, "r3m_vec": [141, 356], "feed": [141, 163, 266, 337, 342, 354, 357], "stack_imag": [141, 163], "tread": [141, 163], "separet": [141, 163], "hub": [141, 163, 346, 356], "resnet50_weight": [141, 163], "imagenet1k_v1": [141, 163], "download_path": [141, 163], "tensor_pixels_kei": [141, 163], "dest": [141, 161, 163, 240], "sub_seq_len": 142, "sample_dim": [142, 342], "primarili": [142, 347], "hesit": 142, "request": 142, "robust": 142, "mix": [142, 213, 222, 279, 342, 354], "improp": 142, "dummyenv": 143, "another_oth": 143, "other_reward": 143, "create_copi": 144, "stuff": [144, 349], "newnam": 144, "r2g": 146, "reward_to_go": 146, "bernoulli_": 146, "9010": 146, "9404": [146, 287], "9701": [146, 287], "9900": [146, 287], "0000": [146, 156, 233, 234, 244, 287, 344, 345, 355, 359], "crash": 146, "clamp_min": 147, "clamp_max": 147, "clip_min": 147, "clip_max": 147, "episode_": 149, "reward1": 149, "reward2": 149, "episode_reward": [149, 354], "keep_reward": 150, "keep_don": 150, "sign": [151, 281], "logical_or": 151, "squeeze_dim": 152, "step_count_kei": 153, "update_don": 153, "accordingli": [153, 154, 195, 238, 345], "disjunct": 153, "recognis": 153, "target_return": 154, "subtract": 154, "primer": [155, 345], "default_valu": [155, 345], "unit": [155, 177, 189, 191, 192, 209, 210, 215, 216, 344], "transfomedenv": 155, "mykei": 155, "__unless": 155, "exists__": 155, "pool": 156, "increas": [156, 236, 354], "10th": 156, "0216": 156, "1149": 156, "1990": 156, "2749": 156, "3281": 156, "9290": 156, "3702": 156, "8978": 156, "from_int": 157, "shape_toler": 157, "permuat": 157, "ri": 157, "principl": 158, "cattransform": 158, "notabl": 158, "rewardsum": [158, 167, 354], "cache_spec": 159, "set_missing_toler": 159, "keyerror": [159, 342], "unsqueeze_dim": [160, 355], "danger": 160, "vc1": 161, "vc1_vec": 161, "untrain": 161, "make_noload_model": 161, "vip": [162, 163, 356], "toward": 163, "implicit": [163, 257, 264, 357], "jason": 163, "ma": 163, "shagun": 163, "sodhani": 163, "dinesh": 163, "jayaraman": 163, "osbert": 163, "bastani": 163, "ami": 163, "zhang": 163, "vip_vec": 163, "final_nam": 164, "sb3": 164, "terminal_obs_read": 164, "truli": [164, 359], "till": 164, "nan": 164, "shared_td": 165, "decai": [165, 229, 233, 272, 315, 342, 343, 345, 360], "9999": [165, 355], "0001": [165, 189, 208, 344, 355], "fly": [165, 265, 338, 344, 355, 357, 360], "to_observation_norm": 165, "underflow": [165, 315], "build_td_for_shared_vecnorm": 165, "memmori": 165, "queue": [165, 357], "td_share": 165, "state_dim": [166, 180, 185, 212, 215, 216, 230], "action_dim": [166, 180, 181, 183, 185, 212, 230, 342, 353], "gsde": [166, 269, 333], "func": [166, 342, 357, 360], "gsdemodul": 166, "rb_transform": 167, "resist": 167, "insensit": 167, "sensit": [167, 343], "_orig": 167, "95": [167, 201, 275, 343, 344, 345, 355, 356, 357], "tdreset": [167, 353], "window": [167, 357], "edit": [167, 349], "check_dtyp": 168, "discrep": [168, 250, 252, 253, 254, 265, 268, 270, 279], "temporarili": [168, 349, 357], "rng": [168, 355], "revert": [168, 347, 357], "probabilistictdmodul": [173, 174, 199, 237, 241, 280, 313], "next_tensordict": 175, "keep_oth": [175, 355], "exclude_reward": 175, "exclude_don": 175, "exclude_act": 175, "next_": 175, "funtion": 175, "write_full_fals": 176, "_terminated_or_trunc": 176, "entropi": [177, 250, 251, 252, 257, 258, 264, 265, 267, 268, 269, 271, 273, 354], "botev": 177, "et": 177, "2013": 177, "cem": 177, "plan": [177, 200, 201], "varianc": [177, 194, 208, 220, 221, 338, 342, 344, 354], "k": [177, 191, 192, 195, 196], "maximis": [177, 181, 183, 201, 337, 343, 344, 354], "modelbasedenv": [177, 201], "planning_horizon": [177, 201], "optim_step": [177, 201, 343, 351], "mpc": [177, 200, 201], "num_candid": [177, 201], "candid": [177, 201], "top_k": [177, 201], "modelbasedenvbas": [177, 200, 201, 335], "safemodul": [177, 200, 226, 228, 241, 250, 251, 257, 258, 264, 268, 269, 270, 271, 273, 322, 323, 329, 335, 359], "num_cel": [178, 179, 181, 182, 183, 184, 189, 190, 193, 197, 199, 204, 205, 226, 343, 344, 345, 347, 348, 351, 354, 359], "elu": [178, 179, 181, 182, 183, 184, 189, 190, 204, 343, 359], "activation_kwarg": [178, 179, 199], "norm_class": [178, 179, 181, 182, 199], "norm_kwarg": [178, 179, 199], "bias_last_lay": [178, 179, 181, 182, 183, 184, 190, 199], "aggregator_class": [178, 179, 181, 182, 343, 345, 359], "squashdim": [178, 179, 181, 190, 204, 359], "aggregator_kwarg": [178, 179, 181, 182, 343, 345], "squeeze_output": [178, 179, 181, 182, 343, 345], "produc": [178, 179, 199, 205, 211, 226, 228, 230, 300, 344, 345, 346, 347, 349, 357, 360], "cell": [178, 179, 191, 192, 193, 195, 196, 197, 199, 204, 205, 344, 346, 347, 348, 349, 350, 351], "kernel": [178, 179, 190, 198, 204], "cnet": [178, 179], "conv3d": 178, "lazyconv2d": [179, 181, 182, 190, 204, 359], "transformer_config": [180, 212, 230], "decisiontransform": [180, 212], "dtconfig": [180, 185, 212], "2202": [180, 185, 267], "05607": [180, 185, 267], "return_to_go": [180, 185, 212, 230], "conv_net_kwarg": [181, 182], "mlp_net_kwarg": [181, 182, 183], "use_avg_pool": [181, 182], "WITH": [181, 182, 183, 184, 236, 272], "1509": [181, 182, 183, 184, 201, 236, 254, 263, 272, 355], "02971": [181, 182, 183, 184, 236, 272], "reus": [181, 307], "convnet": [181, 182, 190, 204, 345, 347, 359], "ndims_in": 181, "avgpool": [181, 182], "lazylinear": [181, 182, 183, 184, 190, 199, 337, 344, 347, 355, 356, 359], "2304": [181, 343], "adaptiveavgpool2d": [182, 343, 345], "output_s": [182, 343, 345], "squeeze2dlay": 182, "400": [183, 184, 350, 354, 355, 357], "mlp_net_kwargs_net1": 184, "mlp_net_kwargs_net2": 184, "mlp1": 184, "mlp2": 184, "decion": 185, "desdescrib": 185, "n_embd": 185, "n_layer": [185, 191, 195], "n_head": 185, "n_inner": 185, "n_posit": 185, "resid_pdrop": 185, "attn_pdrop": 185, "gpt2config": 185, "atol": [186, 219], "rtol": [186, 219], "batch_shap": [186, 219], "event_shap": [186, 219], "absolut": [186, 219, 342], "densiti": [186, 202, 203, 211, 221], "mass": [186, 202, 203, 211, 221, 355], "rsampl": [186, 203, 211, 241], "sample_shap": [186, 202, 203, 211], "softmax": [187, 203, 211, 231, 232], "var_num": [188, 214, 231, 232, 239], "action_value_kei": [188, 214, 231, 232, 238, 239, 266, 279], "action_mask_kei": [188, 214, 231, 232, 233, 234, 238, 239], "perspect": [188, 232, 259, 344], "1707": [188, 232, 259, 268], "06887": [188, 232, 259], "mult": [188, 205, 214, 231, 232, 238, 239], "tensordict_modul": [188, 191, 192, 195, 196, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 253, 257, 258, 264, 268, 269, 270, 271, 273, 337], "nbin": [188, 231, 337], "customdistributionalqv": 188, "log_softmax": [188, 231], "from_modul": [188, 240, 243, 359], "one_hot": [188, 203, 214], "qvalue_actor": [188, 214, 231, 238, 337], "to_modul": [188, 240, 243, 342, 359], "std_bia": 189, "std_min_val": 189, "belief": [189, 209, 215, 216], "1912": [189, 260, 261, 262], "01603": [189, 260, 261, 262], "softplu": [189, 208, 247, 248, 249], "out_features_valu": 190, "cnn_kwarg": [190, 343], "mlp_kwarg": [190, 198, 343], "duel": 190, "cnn": [190, 204, 343, 347, 359], "06581": 190, "batch_first": [191, 193, 195, 197, 345], "bidirect": [191, 195, 345], "cudnn": [191, 192, 195, 196, 345], "vmap": [191, 192, 195, 196, 198, 223, 240, 243, 359], "rnn": [191, 192, 195, 196, 345, 347], "device_count": [191, 192, 195, 196, 360], "els": [191, 192, 195, 196, 209, 337, 339, 342, 343, 344, 345, 354, 355, 356], "n_in": [191, 192, 195, 196], "n_out": [191, 192, 195, 196], "h0": [191, 192, 195, 196], "h1": [191, 192, 195, 196], "call_gru": [191, 192], "h_out": [191, 192, 195, 196], "batched_cal": [191, 192, 195, 196], "gate": [191, 192, 195], "r_t": 191, "sigma": [191, 192, 194, 195, 196, 220, 221, 229, 236, 344], "w_": [191, 192, 195, 196], "ir": [191, 192], "x_t": [191, 195], "b_": [191, 192, 195, 196], "hr": [191, 192, 195], "h_": [191, 192, 195], "z_t": 191, "iz": [191, 192], "hz": [191, 192], "n_t": 191, "odot": [191, 192, 195, 196], "hn": [191, 192, 195], "h_t": [191, 195], "sigmoid": [191, 192, 195, 196], "hadamard": [191, 192, 195, 196], "multilay": [191, 195], "_t": [191, 195, 354, 355], "ge": [191, 195], "multipli": [191, 195, 251, 252, 258, 265, 267, 268, 269, 271, 315, 342], "bernoulli": [191, 195], "b_ih": [191, 192, 195, 196, 197], "b_hh": [191, 192, 195, 196, 197], "seq": [191, 193, 195, 197, 345, 351, 353], "h_0": [191, 195, 196], "unbatch": [191, 195], "pack_padded_sequ": [191, 195], "pack_sequ": [191, 195], "num": [191, 195, 351], "_layer": [191, 195], "_size": [191, 192, 195, 196], "h_n": [191, 195], "packedsequ": [191, 195], "weight_ih_l": [191, 195], "learnabl": [191, 192, 195, 196], "w_ir": 191, "w_iz": 191, "w_in": 191, "num_direct": [191, 195], "weight_hh_l": [191, 195], "w_hr": 191, "w_hz": 191, "w_hn": 191, "bias_ih_l": [191, 195], "b_ir": 191, "b_iz": 191, "b_in": 191, "bias_hh_l": [191, 195], "b_hr": 191, "b_hz": 191, "b_hn": 191, "mathcal": [191, 192, 195, 196], "sqrt": [191, 192, 195, 196, 236], "frac": [191, 192, 195, 196, 344], "seq_len": [191, 195], "subtli": 191, "matrix": [191, 195, 206, 207], "contrast": [191, 263, 357], "hx": [191, 192, 195, 196], "lstmcell": [192, 197], "gru_cel": 192, "z": 192, "weight_ih": [192, 196], "weight_hh": [192, 196], "bias_ih": [192, 196], "bias_hh": [192, 196], "rocm": [192, 196], "embedd": [193, 197, 198], "grucel": [193, 240], "python_bas": [193, 197], "recurrent_st": [193, 345], "custom_kei": [193, 197], "recurrent_mod": [193, 197], "rs": [193, 342], "gru_module_train": 193, "policy_train": [193, 197], "traj_td": [193, 197], "policy_infer": [193, 197], "td_inf": [193, 197], "assert_clos": [193, 197], "upscal": [194, 220, 221], "tanh_loc": [194, 220, 221], "event_dim": [194, 219, 220], "ultim": [194, 220, 221], "poor": [194, 220, 221], "explos": [194, 220, 221], "switch": [194, 221], "formula": [194, 220, 221, 250, 252, 265, 268, 338, 344], "proj_siz": 195, "c0": [195, 196], "c1": [195, 196], "call_lstm": [195, 196], "c_out": [195, 196], "i_t": 195, "ii": [195, 196], "hi": [195, 196], "f_t": 195, "hf": [195, 196], "g_t": 195, "ig": [195, 196], "hg": [195, 196], "o_t": 195, "ho": [195, 196], "c_t": 195, "c_": 195, "forget": 195, "1402": 195, "1128": 195, "c_0": [195, 196], "proj": 195, "c_n": 195, "w_ii": 195, "w_if": 195, "w_ig": 195, "w_io": 195, "w_hi": 195, "w_hf": 195, "w_hg": 195, "w_ho": 195, "b_ii": 195, "b_if": 195, "b_ig": 195, "b_io": 195, "b_hi": 195, "b_hf": 195, "b_hg": 195, "b_ho": 195, "weight_hr_l": 195, "_revers": 195, "analog": [195, 347], "cn": 195, "lstm_cell": 196, "h_1": 196, "c_1": 196, "time_step": [196, 198], "cx": 196, "trust": 197, "correspont": 197, "recurrent_state_h": [197, 345], "recurrent_state_c": [197, 345], "triplet": [197, 238, 239], "lstm_modul": 197, "rs_h": 197, "rs_c": 197, "hidden0": 197, "hidden1": 197, "lstm_kwarg": 198, "lstm_backend": 198, "next_observ": [198, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 353], "2d": [198, 347, 354], "indeic": 198, "hidden0_in": 198, "hidden1_in": 198, "hidden0_out": 198, "hidden1_out": 198, "single_bias_last_lay": 199, "layer_class": 199, "layer_kwarg": 199, "perceptron": [199, 347], "aslo": 199, "42": [199, 250, 251, 253, 257, 264, 271, 343, 344, 345, 354, 355], "noisylinear": [199, 206, 335, 343], "noisylazylinear": [199, 335], "mpcplanner": 200, "tensordict_out": [200, 360], "mppi": 201, "covari": 201, "william": [201, 270], "aldrich": 201, "theodor": 201, "01149": 201, "hansen": 201, "wang": 201, "su": 201, "04955": 201, "valueoper": [201, 226, 227, 228, 250, 251, 252, 253, 258, 264, 265, 268, 269, 270, 271, 273, 329, 337, 342, 344, 348], "tdlambdaestim": [201, 335, 342], "value_net": [201, 254, 256, 270, 281, 282, 283, 284, 344, 347, 348, 351], "adv": 201, "lmbda": [201, 275, 281, 284, 286, 292, 293, 294, 297, 298, 338, 342, 344, 354], "value_network": [201, 253, 254, 256, 257, 259, 264, 271, 281, 282, 283, 284, 338, 342, 344, 348, 351], "temperatur": [201, 251, 257, 264], "neg_inf": [202, 203], "inf": [202, 203], "api_doc": [202, 203], "tf_agent": [202, 203], "event": [202, 203, 211, 290, 291, 292, 293, 295, 296, 297, 298, 357], "unnorm": [202, 203, 211], "sparse_mask": [202, 203], "dens": [202, 203], "0831": [202, 203], "1203": [202, 203], "0928": [202, 203], "1972": [202, 203], "grad_method": [203, 211], "reparamgradientstrategi": [203, 211], "passthrough": [203, 211], "proxi": [203, 211, 338], "relaxedonehot": [203, 211], "zeros_lik": [203, 355], "sample_non_valid": 203, "centralis": [204, 205, 354], "share_param": [204, 205, 354], "homogen": [204, 205, 354], "agent_network": [204, 205], "modulelist": [204, 205, 326, 359], "2592": [204, 343], "decentralis": [204, 354], "n_agent_input": [205, 354], "n_agent_output": [205, 354], "lazili": [205, 355], "toech": 205, "centalis": 205, "shown": [205, 337, 353, 354, 357], "std_init": [206, 207], "initialize_paramet": 206, "isol": [206, 266], "1706": [207, 222], "10295v3": 207, "induc": 207, "aid": 207, "scale_map": 208, "biased_softplus_1": 208, "scale_lb": [208, 215, 216], "exp": [208, 249], "module_norm": 208, "decod": 209, "1803": [209, 210, 213], "10122": [209, 210], "rnn_hidden": 209, "latent": 210, "excacli": 211, "inres": 212, "mu": [212, 236, 344], "state_shap": [213, 279], "mixing_embed_dim": [213, 279], "qmix": [213, 354], "mixer": [213, 222, 279], "monoton": 213, "hyper": 213, "11485": 213, "qmixerloss": [213, 222], "qmix_vdn": [213, 222], "vdn": [213, 222], "greedi": [214, 232, 233, 234, 239, 343, 345, 347], "hidden_dim": [215, 216], "posterior": [215, 261], "rssm": [215, 216, 261], "1811": [215, 216], "04551": [215, 216], "obs_embed": 215, "rnn_hidden_dim": 216, "dream": 216, "tanhtransform": 220, "decomposit": 222, "05296": 222, "hide": [223, 344, 354], "satisfi": [223, 337], "vmap_dim": 223, "lam": 223, "sample_in": 223, "sample_in_td": 223, "vm": 223, "translat": [225, 237], "character": [225, 231, 237, 238, 240, 357], "overflow": [225, 231, 232, 237, 238, 239, 240, 241], "td_modul": [225, 226, 227, 228, 237, 240, 241, 243, 245, 347, 359], "3635": 225, "0340": 225, "1476": 225, "3911": [225, 355], "1664": [225, 343, 355], "5455": 225, "2247": 225, "4583": 225, "2916": 225, "2160": 225, "5337": 225, "5193": 225, "grad_fn": [225, 233, 234, 359], "addmmbackward0": 225, "actorvalueoper": [226, 337, 347], "get_policy_oper": [226, 227, 228, 252, 265, 268, 337], "standalon": [226, 227, 228, 347], "tdmodul": [226, 227, 228, 329], "get_critic_oper": 226, "common_oper": [226, 228], "policy_oper": [226, 227, 228], "value_oper": [226, 227, 228], "normalparamwrapp": [226, 227, 228, 237, 243, 250, 251, 258, 264, 268, 269, 270, 271, 273, 335, 359], "module_hidden": [226, 228], "td_module_hidden": [226, 228], "module_act": [226, 228], "td_module_act": [226, 227, 228], "module_valu": [226, 227, 228], "td_module_valu": [226, 227, 228], "state_action_valu": [226, 245, 251, 257, 264, 271, 280, 326, 329, 337, 342, 359], "td_clone": [226, 227, 228], "tensordictmodulewrapp": [226, 322, 323, 329], "get_policy_head": [226, 227, 228], "safesequenti": [226, 227, 228, 279], "head": [226, 228, 252, 265, 268], "get_value_head": [226, 227, 228], "get_value_oper": [226, 227, 228, 252, 265, 268], "action_modul": 227, "state_valu": [227, 228, 245, 252, 257, 264, 265, 268, 269, 271, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 297, 337, 342, 344, 354], "qualiti": [228, 337], "actorcriticoper": [228, 252, 265, 268, 337, 347], "embeddig": 228, "refet": 228, "actorcriticwrapp": [228, 337, 342], "po": [229, 234], "sigma_init": 229, "epsilon": [229, 233, 234, 236, 272, 315, 343, 344, 345, 347], "sigma_end": 229, "annealing_num_step": [229, 233, 234, 236, 342, 343, 345, 347, 351], "captur": [229, 233, 234, 236], "omiss": [229, 233, 234, 236], "ommit": [229, 233, 234, 236], "inferec": 230, "set_tensor_kei": 230, "dt_inference_wrapp": 230, "baz": 230, "inference_context": 230, "obs_dim": 230, "tanhdelta": [230, 335, 342], "dtactor": 230, "actor_modul": [230, 359], "dist_class": 230, "dist_kwarg": 230, "distribution_kwarg": [230, 237, 241, 344, 354], "inference_actor": 230, "sequence_length": 230, "mask_context": 230, "out_act": 230, "qvaluemodul": [231, 238, 279, 345, 347, 351], "distributionaldqnnet": 231, "make_log_softmax": 231, "my_action_valu": [232, 239], "chanc": 232, "thid": 232, "eps_init": [233, 234, 236, 343, 345, 347, 351], "eps_end": [233, 234, 236, 343], "explorative_polici": [233, 234, 236], "9055": [233, 234, 355], "9277": [233, 234], "6295": [233, 234], "2532": [233, 234], "addbackward0": [233, 234], "lmheadmodel": 235, "actor_head": [235, 252, 265, 268], "base_model": 235, "lm_head": 235, "ornstein": [236, 342], "uhlenbeck": [236, 342], "ou": [236, 342], "correl": 236, "noise_t": 236, "noise_": 236, "theta": [236, 344, 355], "sigma_t": 236, "sigma_": 236, "anneal": [236, 343, 347], "ou_prev_nois": 236, "ou_step": 236, "x0": 236, "sigma_min": 236, "n_steps_ann": 236, "is_init_kei": 236, "_ou_prev_nois": 236, "_ou_step": 236, "default_interaction_typ": [237, 241, 347], "interaction_typ": [237, 241], "datacollectorbas": [237, 319, 322, 323, 329, 335], "set_interaction_typ": [237, 241], "cache_dist": [237, 241], "n_empirical_estim": [237, 241], "compound": [237, 347], "compositedistribut": [237, 347], "categ": 237, "distribution_map": 237, "chose": 239, "functionalmodul": 240, "functionalmodulewithbuff": 240, "td_fmodul": 240, "td_function": 240, "td_state": 240, "params_repeat": 240, "td_vmap": [240, 243], "random_sampl": [240, 241], "suppli": 241, "fist": 241, "log_prob_kei": [241, 354], "probabilistictensordictsequenti": [242, 250, 252, 265, 268, 270, 322, 323, 359], "partial_toler": [242, 243, 353], "who": [242, 243], "AND": [242, 243], "tensordictsequenci": 243, "tensordictsequ": 243, "safeprobabilisticmodul": [243, 337], "spec1": 243, "net1": 243, "module1": 243, "td_module1": 243, "spec2": 243, "module2": 243, "td_module2": 243, "clamp": [244, 261, 317, 355], "boundari": [244, 344, 354], "resolut": 244, "9944": 244, "9991": 244, "3020": 244, "2299": [244, 355], "5418": 244, "2989": 244, "6849": 244, "3169": 244, "2690": 244, "9649": [244, 355], "5686": 244, "8602": 244, "0315": 244, "8455": [244, 355], "6027": 244, "4746": 244, "7843": 244, "7782": 244, "2111": 244, "5115": 244, "4687": 244, "5760": 244, "custommodul": 245, "imaginari": 246, "imagin": 246, "transition_model": 246, "get_reward_oper": 246, "get_transition_model_oper": 246, "min_val": [247, 249], "_bia": 247, "invert": [248, 344], "surject": 249, "expln": 249, "biased_softplu": [249, 335], "beggin": 249, "biased_softplus_": 249, "syntax": [249, 342], "met": [249, 355], "1602": 250, "01783v2": 250, "actor_network": [250, 251, 252, 253, 255, 257, 258, 264, 265, 267, 268, 269, 270, 271, 273, 342, 344, 348, 354], "critic_network": [250, 252, 265, 268, 270, 344, 354], "entropy_bonu": [250, 252, 265, 268, 344], "favour": [250, 252, 265, 268], "samples_mc_entropi": [250, 252, 265, 267, 268], "mont": [250, 252, 265, 268, 342], "carlo": [250, 252, 265, 268, 342], "entropy_coef": [250, 252, 265, 268, 344, 354], "critic_coef": [250, 252, 265, 268, 344], "loss_critic_typ": [250, 252, 265, 268, 270, 344], "l1": [250, 252, 253, 254, 258, 265, 268, 269, 270, 273, 276, 279, 337, 342], "l2": [250, 252, 253, 254, 255, 256, 258, 261, 262, 265, 268, 269, 270, 273, 276, 279, 342], "smooth_l1": [250, 251, 252, 253, 254, 257, 258, 264, 265, 268, 269, 270, 271, 273, 276, 279, 344], "separate_loss": [250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273], "propag": [250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 281, 282, 283, 284, 344, 354], "advantage_kei": [250, 252, 265, 268, 270, 281, 282, 283, 284], "value_target_kei": [250, 252, 265, 268, 270, 281, 282, 283, 284], "value_target": [250, 252, 265, 268, 270, 281, 282, 283, 284, 344, 354], "ddp": [250, 252, 265, 268, 270], "fsdp": [250, 252, 265, 268, 270], "divid": [250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 267, 268, 269, 270, 271, 273, 320, 337, 342, 354, 355], "clip_valu": [250, 252, 265, 268, 270], "loss_crit": [250, 268, 344, 354], "loss_entropi": [250, 268, 344, 354], "loss_object": [250, 268, 344, 354], "recur": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284, 285, 347], "next_reward": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284], "next_don": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284], "next_termin": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284], "loss_obj": 250, "sacloss": [250, 263, 272, 335], "select_out_kei": [250, 251, 253, 257, 258, 264, 268, 269, 271, 273], "make_value_estim": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279, 338, 342, 343, 354, 359], "value_typ": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 342], "hyperparam": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342], "enum": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 342], "default_value_estim": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342, 359], "default_value_kwarg": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 335, 342], "dqn_loss": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279], "td1": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342], "conserv": [251, 256], "qvalue_network": [251, 257, 258, 264, 269, 271, 273], "loss_funct": [251, 253, 254, 255, 256, 257, 258, 264, 269, 271, 273, 276, 279, 342], "alpha_init": [251, 258, 267, 269, 271], "min_alpha": [251, 258, 267, 269, 271], "max_alpha": [251, 258, 267, 269, 271], "fixed_alpha": [251, 258, 267, 269, 271], "target_entropi": [251, 258, 267, 269, 271], "prod": [251, 267, 271], "n_action": [251, 254, 256, 267, 271], "delay_actor": [251, 253, 271, 273], "delay_qvalu": [251, 258, 269, 271, 273], "min_q_weight": 251, "max_q_backup": 251, "backup": 251, "deterministic_backup": 251, "num_random": 251, "with_lagrang": 251, "lagrang": 251, "lagrange_thresh": 251, "valueclass": [251, 253, 258, 269, 271, 273], "qvalu": [251, 257, 258, 264, 269, 271, 273, 326], "loss_actor": [251, 253, 257, 258, 264, 269, 270, 271, 273, 312, 342, 348, 359], "loss_actor_bc": 251, "loss_alpha": [251, 258, 269, 271], "loss_cql": [251, 256], "loss_qvalu": [251, 256, 257, 258, 264, 269, 271, 273], "loss_alpha_prim": 251, "clip_epsilon": [252, 344, 354], "normalize_advantag": [252, 265, 268, 354], "value_kei": [252, 265, 268, 281, 282, 283, 284, 342], "somemodul": [252, 265, 268], "someactor": [252, 265, 268], "value_head": [252, 265, 268], "somevalu": [252, 265, 268], "loss_modul": [252, 263, 265, 266, 268, 272, 317, 328, 329, 338, 339, 342, 343, 344, 354, 357], "ppoloss": [252, 265, 335], "delay_valu": [253, 254, 256, 259, 270, 271, 279, 343, 345, 351], "loss_valu": [253, 257, 264, 270, 271, 342, 344, 348, 354, 359], "pred_valu": [253, 256, 273, 342, 348, 359], "pred_value_max": [253, 342, 348, 359], "target_valu": [253, 256, 269, 273, 280, 338, 342, 348, 359], "target_value_max": [253, 342, 348, 359], "qvalueactor": [254, 256, 279, 337, 343, 345], "double_dqn": 254, "06461": [254, 263], "mult_one_hot": [254, 257, 258, 279], "loss_val": [254, 256, 338, 342, 344, 345, 348, 349, 351, 354, 357], "01345": 255, "distanc": [256, 265, 276, 280, 281, 354], "dcql_loss": 256, "2110": [257, 264], "06169": [257, 264], "num_qvalue_net": [257, 258, 264, 269, 271, 273], "expectil": [257, 264], "tau": [257, 264, 272, 342, 343], "antmaz": [257, 264], "sticht": [257, 264], "onehotcategor": [257, 258, 335], "target_entropy_weight": 258, "disctount": 259, "distributionalqvalueactor": [259, 337], "input_tensordict": [259, 342], "actor_model": 260, "value_model": [260, 262], "model_based_env": 260, "dreamerenv": [260, 335], "imagination_horizon": 260, "unrol": [260, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298], "discount_loss": [260, 262], "lambda_kl": 261, "lambda_reco": 261, "lambda_reward": 261, "reco_loss": 261, "reward_loss": 261, "free_nat": 261, "nat": 261, "delayed_clamp": 261, "global_averag": 261, "value_loss": 262, "fake_data": 262, "ddpgloss": [263, 272, 329, 335, 342, 348, 359], "td3loss": [263, 272, 335], "value_network_update_interv": 263, "qvalueclass": 264, "loss_value_diff": 264, "diff": 264, "old_polici": 265, "new_polici": 265, "apart": [265, 354], "dtarg": 265, "samples_mc_kl": 265, "analyt": 265, "decrement": 265, "loss_": [266, 312, 338, 342, 348], "equip": [266, 345, 347], "gh": 266, "_acceptedkei": 266, "dataclass": [266, 326], "_forward_value_estimator_kei": 266, "alter": [266, 337], "value_estim": [266, 281, 282, 283, 284, 285, 338, 342, 354], "myloss": 266, "action2": 266, "convert_to_funct": [266, 342], "expand_dim": 266, "create_target_param": [266, 342], "compare_against": [266, 342], "_param": 266, "expans": 266, "resampl": 266, "_target_param": 266, "blend": 266, "proxim": [268, 344, 354], "optimis": [268, 313, 344, 354], "flavour": [268, 354, 359], "clipppoloss": [268, 335, 344, 354], "klpenppoloss": [268, 335], "regularis": 268, "06347": 268, "gae": [268, 335, 338, 342, 344, 354], "ppo_loss": 268, "tdlambda": [268, 275, 338, 342], "base_lay": 268, "randn_lik": 268, "samplelogprob": 268, "openreview": [269, 326], "ay8zfzm0tdd": [269, 326], "sub_sample_len": 269, "subsampl": [269, 308, 339], "action_log_prob_actor": 269, "state_action_value_actor": [269, 273], "connectionist": 270, "1992": 270, "doi": 270, "1007": 270, "bf00992696": 270, "actor_net": [270, 342, 344], "1801": 271, "01290": 271, "applic": [271, 279, 346, 347, 355], "1812": 271, "05905": 271, "redqloss": [272, 335], "math": 272, "theta_t": [272, 355], "theta_": [272, 355], "polyak": 272, "policy_nois": 273, "noise_clip": 273, "next_state_valu": [273, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 335], "td0": [274, 342], "strict_shap": 276, "view_a": 276, "qmixer": [279, 335], "local_valu": 279, "visibl": [279, 354], "dafault": 279, "acceptedkei": 279, "global_valu": 279, "penultim": 279, "local_value_network": 279, "mixer_network": 279, "value_modul": [279, 344, 359], "qnet": [279, 342], "next_val_kei": 280, "pred_next_v": 280, "usus": 280, "mse": 280, "q_valu": 280, "n_steps_to_next": 280, "value_next_st": 280, "1506": [281, 286, 294], "02438": [281, 286, 294], "exponenti": [281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 315], "average_ga": [281, 344], "skip_exist": [281, 282, 283, 284], "time_dim": [281, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298], "advang": 281, "gradient_mod": 281, "value_error": [281, 282, 283, 284, 285], "target_param": [281, 282, 283, 284, 285, 342, 354], "98": [281, 282, 283, 284, 343, 355], "94": [281, 284, 343, 355, 356], "unpack": [281, 282, 283, 284], "tensor_kei": [281, 282, 283, 284, 285], "next_valu": [281, 282, 283, 284, 285], "aka": [282, 343], "average_reward": [282, 283, 284], "tdestim": [282, 283, 285], "infti": 283, "valuefunctionbas": 285, "old_stat": [286, 288, 290, 292, 294, 295, 297], "new_stat": [286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "rolling_gamma": [290, 291, 292, 293, 295, 296, 297, 298], "g1": [290, 291, 292, 293, 295, 296, 297, 298], "g2": [290, 291, 292, 293, 295, 296, 297, 298], "g3": [290, 291, 292, 293, 295, 296, 297, 298], "g4": [290, 291, 292, 293, 295, 296, 297, 298], "v3": [290, 291, 292, 293, 295, 296, 297, 298], "out_file_bas": 299, "skip_reset": 299, "interv": [299, 300, 309, 319, 343, 355], "center_crop": 300, "make_grid": 300, "mp4": [300, 302, 351], "csvlogger": [300, 335, 343, 350, 351], "csv": [300, 302, 304, 343, 350, 351], "wandb": [300, 304, 307, 350, 359], "tensorboard": [300, 304, 306, 350, 359], "exp_nam": [300, 301, 302, 305, 306, 307, 329, 343, 350, 351], "log_dir": [300, 301, 302, 304, 306, 307, 343, 351], "cheetah_video": 300, "video_format": [300, 302, 351], "run_video": 300, "run_video_0": 300, "templat": 301, "pt": [302, 339, 356], "video_fp": 302, "minim": [302, 357], "dependeci": 302, "cur_dir": 302, "csv_log": 302, "video_": 302, "experiment_nam": [303, 304], "uuid": [303, 343, 360], "logger_typ": 304, "logger_nam": 304, "mlflow": [304, 305], "wandb_kwarg": 304, "mlflow_kwarg": 304, "tracking_uri": 305, "uri": 305, "datastor": 305, "tb_log": 306, "tensoarboard": 306, "td_log": 306, "save_dir": 307, "resum": 307, "uncategor": 307, "sub_traj_len": 308, "min_sub_traj_len": 308, "register_op": [308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 339, 343], "process_optim_batch": [308, 314, 315, 339], "td_out": [308, 316], "_process_optim_batch_hook": [308, 339], "batch_subsampl": 308, "clear_cuda": 309, "pre_optim_step": [309, 339], "counter": [310, 339], "log_pbar": [310, 311, 313, 315, 339, 343], "progress": [310, 311, 313, 317, 339, 343, 345, 360], "count_fram": 310, "pre_steps_log": [310, 311, 339], "count_frames_log": 310, "lognam": 311, "r_train": [311, 343], "log_reward": [311, 343], "loss_compon": 312, "appl": 312, "optimizer_hook": 312, "record_interv": [313, 342, 343], "record_fram": [313, 320, 342, 343], "policy_explor": [313, 329, 342, 343, 347, 351], "log_kei": [313, 343], "suffix": 313, "underestim": 313, "set_exploration_typ": [313, 335, 344, 345, 347, 359], "r_evalu": [313, 342], "flatten_tensordict": [314, 343], "max_dim": 314, "rb_trainer": 314, "batch_process": [314, 315, 316, 339], "post_loss": [314, 339], "999": [315, 343], "jitter": 315, "finfo": 315, "default_dtyp": 315, "get_default_dtyp": 315, "reward_norm": 315, "update_reward_stat": 315, "normalize_reward": 315, "make_train": [316, 335], "_process_batch_hook": [316, 339], "select_kei": [316, 339], "versatil": [317, 346], "optim_steps_per_batch": [317, 339, 343], "clip_grad_norm": 317, "clip_norm": 317, "progress_bar": 317, "save_trainer_interv": 317, "log_interv": [317, 343], "save_trainer_fil": [317, 339], "update_weights_interv": [319, 343], "update_weight": 319, "post_step": [319, 339, 343], "cfg": [320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333], "dictconfig": [320, 321, 322, 323, 326, 327, 328, 329, 330, 333], "unknowingli": 320, "annealing_fram": [320, 342], "init_env_step": [320, 321, 342], "proof_environ": [321, 326, 342], "sta": 321, "ot": 321, "actor_model_explor": [322, 323, 342], "make_env_kwarg": [322, 323], "targetnetupdat": [324, 325, 328, 329], "redqloss_deprec": 325, "actor_net_kwarg": 326, "qvalue_net_kwarg": 326, "observation_kei": 326, "parser_env_arg": 326, "parser_model_args_continu": 326, "hydra": 326, "config_stor": 326, "configstor": 326, "config_field": 326, "config_cl": 326, "redqmodelconfig": 326, "envconfig": 326, "make_dataclass": 326, "cls_name": 326, "cs": 326, "config_path": 326, "config_nam": 326, "replayargsconfig": 327, "target_net_updat": [329, 342, 343], "constitu": 329, "tensorboardlogg": [329, 335, 350], "egreedywrapp": 329, "env_proof": 329, "obs_spec": 329, "net_valu": 329, "dir": [329, 339, 343], "gettempdir": 329, "argpars": [330, 333], "namespac": [330, 333], "parser": [330, 333], "transformed_env_constructor": [330, 335], "num_env_per_collector": [331, 332], "video_tag": 333, "norm_obs_onli": 333, "use_env_cr": 333, "custom_env_mak": 333, "custom_env": 333, "return_transformed_env": 333, "action_dim_gsd": 333, "state_dim_gsd": 333, "obs_norm_state_dict": 333, "wheter": 333, "maker": 333, "asyncdatacollector": 335, "distributedsyncdatacollector": 335, "submitit_delayed_launch": 335, "raycollector": 335, "rational": 335, "behind": 335, "footnot": 335, "d4rlexperiencereplai": 335, "gendgrlexperiencereplai": 335, "minariexperiencereplai": 335, "openmlexperiencereplai": 335, "openxexperiencereplai": 335, "vd4rlexperiencereplai": 335, "unboundeddiscretetensorspec": 335, "lazystackedtensorspec": 335, "lazystackedcompositespec": 335, "prompttensordicttoken": 335, "rolloutfrommodel": 335, "tokenizeddatasetload": 335, "create_infinite_iter": 335, "consolidate_spec": 335, "check_no_exclusive_kei": 335, "contains_lazy_spec": 335, "check_marl_group": 335, "tensordictrecord": 335, "videorecord": [335, 344, 350, 351], "get_available_librari": 335, "set_exploration_mod": 335, "make_composite_from_td": [335, 355], "terminated_or_trunc": 335, "braxwrapp": 335, "dmcontrolwrapp": 335, "jumanjienv": 335, "jumanjiwrapp": 335, "mogymenv": 335, "mogymwrapp": 335, "multithreadedenvwrapp": 335, "openmlenv": 335, "pettingzooenv": 335, "robohiveenv": 335, "smacv2env": 335, "smacv2wrapp": 335, "vmaswrapp": 335, "qvaluehook": 335, "distributionalqvaluehook": 335, "reset_nois": 335, "cemplann": 335, "mpcplannerbas": 335, "mppiplann": 335, "independentnorm": 335, "truncatednorm": 335, "maskedonehotcategor": 335, "inv_softplu": 335, "vmapmodul": 335, "distributionaldqnloss": [335, 343], "discretesacloss": 335, "iqlloss": 335, "discreteiqlloss": 335, "cqlloss": 335, "discretecqlloss": 335, "dtloss": 335, "onlinedtloss": 335, "a2closs": 335, "reinforceloss": 335, "dreameractorloss": 335, "dreamermodelloss": 335, "dreamervalueloss": 335, "td0estim": [335, 342], "td1estim": [335, 342], "td0_return_estim": 335, "td0_advantage_estim": 335, "td1_return_estim": 335, "vec_td1_return_estim": 335, "td1_advantage_estim": 335, "vec_td1_advantage_estim": 335, "td_lambda_return_estim": 335, "vec_td_lambda_return_estim": 335, "td_lambda_advantage_estim": 335, "vec_td_lambda_advantage_estim": 335, "generalized_advantage_estim": 335, "vec_generalized_advantage_estim": 335, "reward2go": 335, "distance_loss": [335, 342], "hold_out_net": 335, "hold_out_param": [335, 342], "softupd": [335, 342, 343, 345, 348, 351], "hardupd": [335, 342, 348], "batchsubsampl": [335, 339], "clearcudacach": 335, "countframeslog": 335, "logreward": [335, 339, 343], "optimizerhook": [335, 343], "replaybuffertrain": [335, 339, 343], "rewardnorm": 335, "selectkei": [335, 339], "trainerhookbas": [335, 339, 343], "updateweight": [335, 339, 343], "make_collector_offpolici": 335, "make_collector_onpolici": 335, "make_dqn_loss": 335, "make_redq_loss": 335, "make_redq_model": 335, "make_replay_buff": [335, 342], "make_target_updat": 335, "parallel_env_constructor": [335, 342], "sync_async_collector": 335, "sync_sync_collector": 335, "correct_for_frame_skip": 335, "get_stats_random_rollout": 335, "mlflowlogg": 335, "wandblogg": [335, 350], "get_logg": 335, "generate_exp_nam": 335, "journei": 336, "textbook": 336, "highlight": 336, "ever": [336, 354], "bump": 336, "think": [336, 344, 354, 360], "benefit": [336, 346, 354, 357], "pr": 336, "ground": [337, 342, 355], "recycl": [337, 357], "impos": 337, "violat": 337, "noisier": 337, "Their": [337, 354], "sd": 337, "prob_modul": 337, "pick": [337, 342, 343, 347], "tabl": [337, 343, 347], "hopefulli": [337, 343], "functional_modul": 337, "make_funct": 337, "mathbb": [337, 343], "rightarrow": [337, 343], "soften": 337, "backbon": [337, 345, 347, 353, 359], "make_actor": 337, "make_valu": 337, "shared_param": 337, "make_common": 337, "reusabl": [338, 342, 357], "swappabl": [338, 342], "characterist": [338, 342, 355], "trainabl": [338, 342, 348, 356], "whatev": [338, 342], "smth": [338, 342], "metric": [338, 342], "nutshel": [338, 342], "barto": [338, 354], "chapter": [338, 350], "significantli": [338, 342, 343, 348, 354], "next_stat": 338, "value_net_loss": 338, "pow": [338, 342], "therebi": [338, 342, 343], "room": 338, "signifi": [338, 354], "underperform": 338, "thin": 338, "intric": [338, 347], "believ": 339, "scheme": [339, 360], "substenti": 339, "_pre_steps_log_hook": 339, "_pre_optim_hook": 339, "sub_batch": 339, "_post_loss_hook": 339, "_post_optim_hook": 339, "post_optim": [339, 343], "_post_optim_log": 339, "post_optim_log": 339, "_post_steps_hook": 339, "_post_steps_log_hook": 339, "post_steps_log": 339, "comment": [339, 343, 359], "reserv": 339, "logginghook": 339, "logging_hook": 339, "save_dict": 339, "some_valu": 339, "torchsnapshot": 339, "ckpt_backend": 339, "filepath": 339, "save_train": 339, "load_from_fil": 339, "25": [341, 342, 343, 355, 358], "780": [341, 358], "galleri": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "mem": [341, 358], "mb": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360], "torchrl_demo": [341, 358, 359], "55": [341, 343, 355, 356, 358, 359], "860": [341, 358, 359], "rb_tutori": [341, 357, 358], "771": [341, 355, 357, 358], "4450": [341, 358], "coding_dqn": [341, 343, 358], "730": [341, 343, 358], "702": [341, 343, 358], "645": [341, 355, 358], "dqn_with_rnn": [341, 345, 358], "636": [341, 345, 358], "1727": [341, 345, 358], "multiagent_ppo": [341, 354, 358], "538": [341, 354, 355, 358], "coding_ddpg": [341, 342, 358], "038": [341, 342, 358], "4441": [341, 342, 358], "coding_ppo": [341, 344, 358], "443": [341, 344, 355, 358], "torchrl_env": [341, 358, 360], "779": [341, 358, 360], "4285": [341, 358], "pretrained_model": [341, 356, 358], "620": [341, 355, 356, 358], "3575": [341, 358], "multi_task": [341, 353, 358], "49": [341, 343, 353, 354, 355, 358], "048": [341, 353, 358], "47": [341, 343, 347, 355, 356, 358], "43": [341, 343, 346, 355, 356, 358], "010": [341, 346, 358], "446": [341, 348, 355, 358], "449": [341, 351, 355, 358], "841": [341, 349, 358], "659": [341, 350, 358], "author": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 357, 360], "vincent": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 357, 360], "moen": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 357, 360], "assembl": 342, "focus": [342, 348], "straightforward": [342, 343, 346, 347, 348, 349, 357], "maxim": [342, 348, 355], "transpar": [342, 345], "understood": 342, "sota": [342, 343, 359], "illustr": [342, 343, 347, 357], "bash": 342, "is_fork": [342, 343, 344, 345, 354, 356], "get_start_method": [342, 343, 344, 345, 354, 356], "is_avail": [342, 343, 344, 345, 354, 356], "collector_devic": 342, "loss_dict": 342, "oblivi": [342, 344, 357], "elementari": 342, "didact": 342, "dilut": 342, "pessimist": [342, 343, 344], "target_actor_network_param": 342, "actor_in_kei": 342, "actor_crit": 342, "noth": [342, 344], "compromis": 342, "hp": 342, "hasattr": 342, "_value_estim": 342, "elif": [342, 343], "notimplementederror": 342, "unknown": 342, "ifgg": 342, "_loss_actor": 342, "td_copi": 342, "actor_network_param": 342, "value_network_param": 342, "_loss_valu": 342, "pred_val": 342, "target_value_network_param": 342, "glue": 342, "_forward": 342, "ndimens": 342, "remaind": 342, "focu": [342, 343, 344, 347, 348, 349], "env_librari": 342, "env_task": 342, "env_arg": [342, 343], "friendli": 342, "torchr": 342, "rescal": 342, "presum": 342, "make_transformed_env": 342, "reward_sc": 342, "marker": 342, "env_per_collector": 342, "transform_state_dict": 342, "make_t_env": 342, "cheat": 342, "10m": 342, "cautiou": 342, "magnitud": 342, "thousand": [342, 345], "get_env_stat": 342, "proof_env": 342, "5000": [342, 343, 344, 351], "recal": [342, 344, 357], "ddpgmlpactor": 342, "ddpgmlpqnet": 342, "materi": 342, "ornsteinuhlenbeckprocesswrapp": [342, 347], "make_ddpg_actor": 342, "q_net": 342, "tight": 342, "decoupl": [342, 348], "10_000": [342, 344], "traj_len": [342, 345], "make_record": 342, "recorder_obj": 342, "flavor": 342, "circular": 342, "buffer_s": [342, 343], "random_crop_len": 342, "prb": 342, "buffer_scratch_dir": 342, "temporari": 342, "dataflow": 342, "ceil_div": 342, "utd": [342, 345], "update_to_data": 342, "realiz": 342, "_must_": 342, "001": [342, 355], "outdat": 342, "trick": [342, 343], "despit": 342, "adam": [342, 343, 344, 345, 348, 351, 354, 355], "optimizer_actor": 342, "lr": [342, 343, 344, 345, 351, 354, 355], "weight_decai": [342, 343], "optimizer_valu": 342, "total_collection_step": 342, "pretti": [342, 346, 350, 357], "rewards_ev": 342, "collected_fram": 342, "pbar": [342, 344, 345, 354, 355], "r0": 342, "numel": [342, 344, 345, 351, 356, 357], "current_fram": 342, "sampled_tensordict": 342, "gn1": 342, "clip_grad_norm_": [342, 344, 354, 355], "gn2": 342, "gn": [342, 355], "td_record": 342, "rn": 342, "set_descript": [342, 344, 345, 354, 355], "2f": 342, "traceback": [342, 357, 360], "1126": 342, "1527": [342, 357, 360], "_wrapped_call_impl": [342, 357, 360], "_call_impl": [342, 357, 360], "1577": 342, "forward_cal": [342, 357, 360], "_contextlib": [342, 357, 360], "126": [342, 355, 357, 360], "decorate_context": [342, 357, 360], "364": [342, 355], "342": [342, 355], "1177": 342, "new_func": 342, "_self": [342, 360], "648": 342, "_to_modul": 342, "407": [342, 355], "__dict__": 342, "_modul": 342, "plot": [342, 344, 345, 354, 355], "mention": [342, 345, 357, 360], "matplotlib": [342, 344, 345, 354, 355, 357, 360], "pyplot": [342, 344, 345, 354, 355, 357, 360], "plt": [342, 344, 345, 354, 355, 357, 360], "zip": [342, 352], "legend": 342, "xlabel": [342, 345, 354, 355], "ylabel": [342, 354], "tight_layout": 342, "concret": [342, 344], "takeawai": [342, 343], "distpatch": 342, "jupyt": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "ipynb": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 360], "sphinx": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360], "customis": [343, 354], "road": 343, "aspect": [343, 348], "highest": [343, 347], "prerequisit": [343, 345], "familiar": [343, 354, 360], "lookup": 343, "amort": [343, 344], "cart": 343, "pole": 343, "un": 343, "actuat": 343, "frictionless": 343, "duelingcnndqnet": 343, "egreedymodul": [343, 345, 347, 351], "is_notebook": 343, "shell": 343, "get_ipython": 343, "__class__": 343, "zmqinteractiveshel": 343, "qtconsol": 343, "terminalinteractiveshel": 343, "ipython": [343, 354, 355], "nameerror": 343, "umbrella": 343, "misplac": 343, "misus": 343, "orchestr": [343, 348, 350], "five": 343, "64x64": 343, "motion": [343, 355], "obs_norm_sd": 343, "simpler": [343, 346], "get_norm_stat": 343, "test_env": 343, "make_model": 343, "dummy_env": 343, "init_bia": 343, "exploration_modul": [343, 345, 347, 351], "eps_greedy_v": 343, "eps_greedy_val_env": 343, "actor_explor": 343, "get_replay_buff": 343, "n_optim": [343, 348, 349], "themselv": 343, "parametriz": 343, "simplic": [343, 344, 349, 356, 357], "get_collector": 343, "cl": 343, "data_collector": 343, "bunch": 343, "power": 343, "ubiquit": [343, 346], "get_loss_modul": 343, "target_updat": 343, "995": [343, 355], "variat": 343, "2e": [343, 355], "wd": 343, "upd": 343, "harder": [343, 359], "5_000": 343, "500000": 343, "100000": 343, "005": 343, "mandatori": [343, 344, 354, 355], "fairer": 343, "budget": 343, "dqn_exp_": 343, "uuid1": [343, 360], "9895": 343, "0737": 343, "registr": 343, "cumbersom": 343, "buffer_hook": 343, "weight_updat": 343, "aliv": 343, "total_reward": 343, "07": [343, 354, 355], "30it": [343, 344, 355], "3688": [343, 355], "9346": [343, 355], "77it": 343, "96": [343, 355, 356], "58": [343, 345, 355], "40it": [343, 355], "3353": [343, 355], "18it": [343, 344, 355], "3445": 343, "62it": 343, "192": [343, 355], "09": [343, 345, 354, 355], "49it": [343, 355], "224": [343, 355], "26it": [343, 355], "3566": 343, "68it": [343, 355], "3475": 343, "288": [343, 355], "65": [343, 345, 355, 356, 357], "01it": [343, 355], "3991": 343, "71": [343, 355], "3718": 343, "352": [343, 355], "76": [343, 355], "69it": [343, 355], "384": [343, 355], "79": [343, 355, 356], "12it": [343, 355], "416": [343, 355], "82": [343, 355, 357], "25it": [343, 355], "3172": 343, "448": [343, 355], "53": [343, 354, 355, 356], "95it": 343, "3778": 343, "480": [343, 355, 356], "4295": [343, 355], "52": [343, 355], "85": [343, 345, 355, 356], "78it": [343, 355], "3596": 343, "544": [343, 355], "51": [343, 344, 350, 355], "39it": [343, 355], "576": [343, 355], "71it": [343, 344, 355], "608": [343, 355], "57it": 343, "640": 343, "82it": 343, "672": 343, "14it": [343, 355], "704": 343, "89": [343, 355], "92it": [343, 345], "736": 343, "93it": 343, "4021": 343, "768": 343, "15it": [343, 344, 355], "3444": 343, "800": 343, "48": [343, 355], "832": 343, "21it": 343, "864": 343, "88it": [343, 355], "896": 343, "03it": 343, "928": 343, "45": [343, 345, 355], "94it": 343, "960": 343, "90": [343, 344, 354, 355], "58it": 343, "992": [343, 355], "91": [343, 355, 356], "85it": [343, 344], "4082": [343, 355], "76it": 343, "1056": 343, "89it": 343, "1088": 343, "1120": 343, "11it": [343, 344, 355], "1152": 343, "1184": [343, 360], "3869": 343, "1216": 343, "1248": 343, "1280": 343, "4173": 343, "06it": 343, "1344": 343, "1376": 343, "92": [343, 355, 356], "27it": [343, 355], "1408": 343, "1440": 343, "00it": [343, 345], "1472": 343, "1504": 343, "1536": [343, 357, 360], "02it": 343, "1568": 343, "1600": 343, "13it": [343, 355], "1632": 343, "70it": 343, "90it": [343, 355], "1696": 343, "93": [343, 355, 356], "22it": [343, 355], "1728": 343, "31it": [343, 355], "1760": 343, "1792": 343, "66it": 343, "1824": 343, "41it": [343, 355], "1856": 343, "33it": [343, 355], "1888": 343, "1920": 343, "1952": 343, "1984": 343, "87it": 343, "2016": 343, "19it": [343, 355], "2048": [343, 356], "80it": 343, "2080": 343, "2112": [343, 355], "2144": 343, "2176": 343, "2208": 343, "64it": 343, "2240": 343, "2272": 343, "2336": 343, "2368": 343, "2400": 343, "2432": 343, "17it": [343, 355], "2464": 343, "32it": [343, 355], "2496": 343, "16it": [343, 355], "2528": [343, 355], "29it": [343, 355], "2560": 343, "44it": [343, 355], "38it": [343, 355], "2624": 343, "35it": [343, 355], "2656": [343, 355], "54": [343, 355], "2688": 343, "61it": [343, 355], "2720": [343, 355], "59it": 343, "2752": 343, "56": [343, 354, 355, 357], "2784": 343, "2816": 343, "57": [343, 354, 355, 356], "2848": 343, "55it": 343, "2880": 343, "67it": [343, 355], "2912": 343, "59": [343, 345, 355], "2944": [343, 355], "60": [343, 344, 354, 355, 359], "2976": [343, 355], "42it": [343, 355], "61": [343, 355, 356], "3040": 343, "3072": 343, "62": [343, 355], "3104": 343, "37it": [343, 355], "63": [343, 355], "3136": 343, "3168": 343, "36it": [343, 355], "3200": 343, "3232": [343, 355], "8824": 343, "3264": 343, "66": [343, 355], "3296": 343, "99it": 343, "67": [343, 353, 355, 356, 357], "3328": 343, "3360": 343, "68": [343, 355], "3392": 343, "45it": [343, 355], "3424": 343, "69": [343, 355], "3456": [343, 355], "70": [343, 344, 354, 355, 356], "3488": 343, "54it": 343, "3520": 343, "74": [343, 355], "04it": [343, 344, 355], "3552": 343, "77": [343, 355, 357], "72": [343, 355], "3584": 343, "28it": [343, 355], "3616": 343, "75it": 343, "73": [343, 355, 356], "3648": 343, "74it": [343, 355], "3680": 343, "3712": 343, "3744": 343, "3776": 343, "3808": 343, "3840": 343, "3872": 343, "08it": [343, 355], "78": [343, 355, 356], "3904": 343, "52it": 343, "3936": 343, "3968": 343, "56it": 343, "4000": [343, 344], "48it": [343, 355], "4032": 343, "4064": 343, "4096": 343, "83": [343, 355, 357], "4128": [343, 355], "4160": 343, "84it": 343, "4192": 343, "4224": 343, "4256": [343, 355], "43it": [343, 355], "4288": [343, 355], "4320": 343, "34it": [343, 355], "4352": 343, "4384": 343, "4416": 343, "4448": 343, "83it": 343, "4480": 343, "4512": 343, "4544": 343, "4576": 343, "4608": 343, "4640": 343, "4672": [343, 355], "4704": 343, "4736": 343, "4768": 343, "53it": [343, 355], "4800": [343, 355], "98it": [343, 344, 355], "97": [343, 355, 356], "4832": 343, "4864": 343, "4896": 343, "4928": 343, "4960": 343, "4992": 343, "5024it": 343, "50it": 343, "print_csv_files_in_fold": 343, "folder_path": 343, "csv_file": 343, "output_str": 343, "dirpath": 343, "endswith": 343, "strip": 343, "tmp": [343, 357], "tmpd8yfgflk": 343, "dqn_exp_e5b4fe90": 343, "e528": 343, "11ee": 343, "be70": 343, "0242ac110002": 343, "3596172332763672": 343, "3566153347492218": 343, "42945271730422974": 343, "36880597472190857": 343, "14145220816135406": 343, "2788240611553192": 343, "21367350220680237": 343, "2537391483783722": 343, "32153570652008057": 343, "33204442262649536": 343, "2360171377658844": 343, "4040074050426483": 343, "34938496351242065": 343, "grad_norm_0": 343, "0087685585021973": 343, "4137535095214844": 343, "749889612197876": 343, "3658432960510254": 343, "944410800933838": 343, "8327059745788574": 343, "1852540969848633": 343, "500932216644287": 343, "642377853393555": 343, "10000000894069672": 343, "882352828979492": 343, "qvaluenetwork": 343, "worst": 343, "accuraci": 343, "fanci": [343, 349], "talk": 344, "repetit": [344, 346, 349], "six": 344, "sophist": [344, 354], "invent": 344, "overview": [344, 348, 354, 359], "theta_k": 344, "pi_": 344, "exceed": 344, "discourag": [344, 355], "indispens": 344, "analyz": 344, "lingua": 344, "franca": 344, "defaultdict": [344, 355], "3e": [344, 345, 354], "max_grad_norm": [344, 354], "sub_batch_s": 344, "num_epoch": [344, 354], "entropy_ep": [344, 354], "interchang": [344, 346, 350, 356, 357], "charact": 344, "inverteddoublependulum": 344, "transmit": 344, "stai": 344, "supplementari": [344, 360], "told": 344, "confid": [344, 354], "ran": 344, "f_": 344, "mu_": 344, "difficulti": [344, 360], "d_ob": 344, "d_action": 344, "policy_modul": [344, 354], "That": 344, "said": 344, "briefli": [344, 354], "refil": [344, 354], "conveni": [344, 354, 355, 357], "easiest": [344, 348, 354], "mathemat": [344, 354], "tradeoff": [344, 354], "advantage_modul": 344, "lr_schedul": [344, 355], "cosineannealinglr": [344, 355], "eval_str": 344, "tensordict_data": [344, 354], "data_view": [344, 354], "subdata": [344, 354], "cum_reward_str": 344, "4f": [344, 345, 355], "stepcount_str": 344, "param_group": 344, "lr_str": 344, "eval_rollout": 344, "nice": [344, 346, 349], "474": [344, 355], "119": [344, 355], "9604": 344, "0844": 344, "0003": [344, 355], "479": [344, 355], "1158": 344, "3000": 344, "483": [344, 355], "1453": 344, "486": [344, 355], "72it": 344, "1681": 344, "0002": [344, 355], "489": [344, 355], "1885": 344, "6000": 344, "491": [344, 355], "20it": 344, "2093": 344, "7000": 344, "493": [344, 355], "2340": 344, "8000": 344, "482": [344, 355], "2520": 344, "9000": 344, "488": [344, 355], "2490": 344, "2476": [344, 355], "cap": [344, 357], "figsiz": [344, 355], "subplot": [344, 355, 360], "titl": [344, 345, 354, 355], "bit": [344, 345, 346, 354, 357], "84x84": 345, "accessori": 345, "stamp": 345, "assist": 345, "emb": 345, "n_cell": 345, "customiz": 345, "wouldn": 345, "make_tensordict_prim": 345, "qval": 345, "stoch_polici": 345, "opportun": 345, "uniniti": 345, "again": [345, 346, 347, 349, 354, 356, 357, 360], "redund": 345, "strongli": 345, "sake": [345, 356, 357], "20_000": [345, 355], "longest": 345, "npai": 345, "action_spread": 345, "1000000": 345, "129": [345, 355], "24it": [345, 355], "0006": [345, 355], "150": [345, 355], "topic": [346, 347, 348], "straight": 346, "backtrack": 346, "encapsul": [346, 347, 348], "reset_with_act": 346, "0638": 346, "tp": 346, "stepped_data": 346, "tediou": 346, "spatial": 346, "useless": 346, "policyless": 346, "appreci": 346, "monitor": 346, "examin": 346, "tackl": 347, "delv": 347, "bypass": 347, "extractor": 347, "palliat": 347, "additivegaussianwrapp": 347, "had": [347, 349], "exploration_polici": 347, "greedili": 347, "innov": [347, 348], "rollout_explor": 347, "sole": 348, "tradit": 348, "supervis": [348, 349, 357, 360], "n_collect": 348, "get_next_batch": 348, "novel": 348, "ddpg_loss": 348, "total_loss": 348, "prove": 348, "reliev": 348, "concern": 348, "accustom": 349, "surprisingli": 349, "fundament": 349, "augment": [349, 351, 357], "art": 349, "pseudo": [349, 355], "multirpocess": 349, "countless": 349, "yourself": [349, 354], "lightweight": 350, "portabl": 350, "everywher": 350, "hyperapamet": 350, "my_exp": 350, "log_scalar": 350, "elaps": 350, "my_scalar": 350, "saw": [350, 355, 357], "my_video": 350, "record_env": [350, 351], "uncom": 350, "lesson": 351, "voluntarili": 351, "refresh": [351, 354], "value_mlp": 351, "100_000": 351, "init_rand_step": 351, "training_loop": 351, "video_record": 351, "arbitrarili": 351, "total_count": 351, "total_episod": 351, "t0": 351, "t1": 351, "conclud": [351, 356], "tutorials_python": 352, "tutorials_jupyt": 352, "env1_obs_kei": 353, "observation_stand": 353, "env2_obs_kei": 353, "observation_walk": 353, "tdreset1": 353, "tdreset2": 353, "policy_common": 353, "policy_stand": 353, "policy_walk": 353, "But": 353, "env1_mak": 353, "env2_mak": 353, "_single_task": 353, "td_rollout": 353, "matteo": 354, "bettini": 354, "benchmarl": 354, "maddpg": 354, "lidar": 354, "sensor": 354, "collis": 354, "tie": 354, "mappo": 354, "ippo": 354, "phase": [354, 357], "mathbf": 354, "pi": [354, 355], "fed": [354, 357], "literatur": 354, "overcom": 354, "stationari": 354, "concurr": 354, "analys": 354, "gui": 354, "visualis": 354, "multiagentmlp": 354, "vmas_devic": 354, "6_000": 354, "team": [354, 359], "n_iter": 354, "minibatch_s": 354, "generalis": 354, "simd": 354, "parallelis": 354, "warp": 354, "todai": 354, "circl": 354, "surround": 354, "dot": [354, 355], "collid": 354, "drag": 354, "elast": 354, "acceler": 354, "penalis": 354, "num_vmas_env": 354, "scenario_nam": 354, "four": [354, 355], "environmnet": 354, "final_rew": 354, "agent_collis": 354, "stress": 354, "paramount": 354, "n_rollout_step": 354, "evolut": 354, "utilis": 354, "n_actions_per_ag": 354, "n_obs_per_ag": 354, "share_parameters_polici": 354, "policy_net": 354, "denot": 354, "carefulli": [354, 360], "grant": 354, "converg": 354, "cooper": 354, "share_parameters_crit": 354, "critic_net": 354, "fantast": 354, "minibatch": 354, "desc": 354, "episode_reward_mean": 354, "episode_reward_mean_list": 354, "get_item_shap": 354, "critic_network_param": 354, "target_critic_network_param": 354, "4579917788505554": 354, "39507877826690674": 354, "2842429876327515": 354, "5311583280563354": 354, "0912442207336426": 354, "4949307441711426": 354, "478776454925537": 354, "7761335372924805": 354, "738668441772461": 354, "9966132640838623": 354, "xvfb": 354, "pyvirtualdisplai": 354, "1400": [354, 355], "900": 354, "pil": 354, "rendering_callback": 354, "fromarrai": 354, "rgb_arrai": [354, 355], "gif": 354, "save_al": 354, "append_imag": 354, "profici": 354, "master": 354, "freeli": 355, "touch": 355, "undertaken": 355, "broader": 355, "wider": 355, "algebra": 355, "acquaint": 355, "avenu": 355, "_apply_to_composit": 355, "default_x": 355, "default_i": 355, "torqu": 355, "upward": 355, "angular": 355, "sin": 355, "rad": 355, "sec": 355, "gravit": 355, "angl": 355, "deleg": 355, "new_th": 355, "new_thdot": 355, "thdot": 355, "g_forc": 355, "max_torqu": 355, "angle_norm": 355, "max_spe": 355, "albeit": 355, "gen_param": 355, "high_th": 355, "high_thdot": 355, "low_th": 355, "low_thdot": 355, "trivial": 355, "shortcut": [355, 360], "irrelev": 355, "_make_spec": 355, "td_param": 355, "render_mod": 355, "render_fp": 355, "random_": 355, "_make_step": 355, "staticmethod": 355, "showcas": 355, "skeleton": 355, "_apply_transform": [355, 360], "_inv_apply_transform": [355, 360], "subset": [355, 356], "unitari": 355, "sine": 355, "cosin": 355, "sintransform": 355, "tensordict_reset": 355, "costransform": 355, "t_sin": 355, "t_co": 355, "cat_transform": 355, "simple_rollout": 355, "unexplor": 355, "recreat": 355, "init_td": 355, "traj_return": 355, "last_reward": 355, "is_ipython": 355, "inlin": 355, "get_backend": 355, "ion": 355, "gcf": 355, "clear_output": 355, "625": 355, "0748": 355, "519": 355, "0499": 355, "4472": 355, "073": 355, "10it": 355, "0685": 355, "0408": 355, "552": 355, "23it": 355, "5154": 355, "9086": 355, "9385": 355, "155": 355, "2568": 355, "4981": 355, "223": 355, "8929": 355, "4491": 355, "581": 355, "3233": 355, "0664": 355, "596": 355, "1021": 355, "5263": 355, "9579": 355, "5807": 355, "8075": 355, "212": 355, "2009": 355, "5525": 355, "914": 355, "46it": 355, "2894": 355, "0115": 355, "0977": 355, "1845": 355, "1830": 355, "4858": 355, "233": 355, "2863": 355, "0297": 355, "464": 355, "4617": 355, "5997": 355, "904": 355, "1647": 355, "0777": 355, "901": 355, "4709": 355, "6813": 355, "8317": 355, "3221": 355, "5554": 355, "276": 355, "701": 355, "8570": 355, "6656": 355, "463": 355, "7779": 355, "6911": 355, "875": 355, "0796": 355, "7082": 355, "308": 355, "0421": 355, "1496": 355, "5037": 355, "1755": 355, "5029": 355, "9454": 355, "665": 355, "9330": 355, "2118": 355, "444": 355, "0995": 355, "6294": 355, "3146": 355, "2909": 355, "461": 355, "9720": 355, "1298": 355, "9923": 355, "0345": 355, "3438": 355, "424": 355, "6953": 355, "5233": 355, "411": 355, "8011": 355, "5329": 355, "2677": 355, "6969": 355, "7010": 355, "376": 355, "9352": 355, "7707": 355, "6178": 355, "5646": 355, "348": 355, "7304": 355, "9407": 355, "942": 355, "3882": 355, "7604": 355, "3507": 355, "8928": 355, "258": 355, "6978": 355, "4641": 355, "549": 355, "6047": 355, "5005": 355, "4136": 355, "2993": 355, "3222": 355, "4046": 355, "7314": 355, "275": 355, "6331": 355, "9318": 355, "961": 355, "8331": 355, "1604": 355, "4099": 355, "4761": 355, "125": 355, "47it": 355, "4262": 355, "6363": 355, "382": 355, "3593": 355, "7377": 355, "2847": 355, "3443": 355, "867": 355, "3592": 355, "4760": 355, "441": 355, "9950": 355, "8021": 355, "3528": 355, "1214": 355, "708": 355, "4023": 355, "3583": 355, "041": 355, "3801": 355, "0310": 355, "120": 355, "4244": 355, "2039": 355, "4850": 355, "8748": 355, "706": 355, "4897": 355, "9210": 355, "8964": 355, "0832": 355, "3934": 355, "456": 355, "8971": 355, "2933": 355, "3377": 355, "6996": 355, "2274": 355, "8916": 355, "098": 355, "2660": 355, "9110": 355, "4503": 355, "6956": 355, "9172": 355, "4026": 355, "946": 355, "9229": 355, "5205": 355, "294": 355, "8872": 355, "6637": 355, "019": 355, "9281": 355, "2082": 355, "724": 355, "8561": 355, "6574": 355, "357": 355, "4138": 355, "5230": 355, "385": 355, "4065": 355, "5642": 355, "921": 355, "9786": 355, "4129": 355, "5831": 355, "266": 355, "7723": 355, "4152": 355, "0898": 355, "389": 355, "5155": 355, "5376": 355, "5616": 355, "4094": 355, "283": 355, "5333": 355, "4803": 355, "895": 355, "6566": 355, "2588": 355, "662": 355, "4732": 355, "7503": 355, "068": 355, "0714": 355, "3370": 355, "059": 355, "8612": 355, "1915": 355, "3855": 355, "0349": 355, "9644": 355, "4538": 355, "445": 355, "0392": 355, "4080": 355, "1648": 355, "9599": 355, "143": 355, "4284": 355, "5946": 355, "2590": 355, "9181": 355, "4621": 355, "9075": 355, "674": 355, "1772": 355, "9444": 355, "351": 355, "9391": 355, "5595": 355, "8673": 355, "6240": 355, "5919": 355, "1071": 355, "9127": 355, "251": 355, "9799": 355, "3131": 355, "9612": 355, "9705": 355, "8741": 355, "2230": 355, "0972": 355, "0337": 355, "0350": 355, "0654": 355, "102": 355, "2441": 355, "4596": 355, "362": 355, "103": 355, "4362": 355, "171": 355, "104": [355, 357], "4041": 355, "6907": 355, "105": [355, 357], "4664": 355, "2760": 355, "0299": 355, "9712": 355, "349": 355, "107": 355, "3332": 355, "4479": 355, "772": 355, "108": 355, "4357": 355, "9591": 355, "543": 355, "109": 355, "6216": 355, "1353": 355, "692": 355, "110": 355, "6261": 355, "7086": 355, "496": 355, "111": [355, 357], "7758": 355, "9818": 355, "112": 355, "7772": 355, "5055": 355, "113": 355, "5840": 355, "3180": 355, "2083": 355, "115": 355, "5275": 355, "6873": 355, "116": 355, "4107": 355, "1624": 355, "117": 355, "6372": 355, "2571": 355, "118": 355, "4039": 355, "4428": 355, "4728": 355, "5628": 355, "6767": 355, "2466": 355, "522": 355, "121": [355, 360], "5873": 355, "5072": 355, "6548": 355, "3766": 355, "123": 355, "5134": 355, "1955": 355, "124": 355, "2481": 355, "0591": 355, "4500": 355, "3368": 355, "9708": 355, "7059": 355, "127": 355, "3031": 355, "2534": 355, "843": 355, "3327": 355, "6193": 355, "4831": 355, "1172": 355, "2593": 355, "4219": 355, "962": 355, "8380": 355, "899": 355, "132": 355, "2721": 355, "9048": 355, "166": 355, "133": 355, "2419": 355, "5248": 355, "2139": 355, "4278": 355, "135": 355, "0690": 355, "5140": 355, "136": 355, "1140": 355, "7402": 355, "137": 355, "5356": 355, "1636": 355, "138": 355, "0671": 355, "8798": 355, "139": 355, "8918": 355, "3298": 355, "307": 355, "140": 355, "1779": 355, "141": 355, "1771": 355, "3624": 355, "936": 355, "142": 355, "1683": 355, "4810": 355, "9373": 355, "4435": 355, "144": 355, "4396": 355, "8092": 355, "145": [355, 360], "2572": 355, "146": 355, "4212": 355, "0260": 355, "147": 355, "0939": 355, "6478": 355, "605": 355, "148": [355, 357], "6606": 355, "7289": 355, "149": 355, "9300": 355, "7193": 355, "563": 355, "1166": 355, "8514": 355, "151": 355, "9108": 355, "0672": 355, "292": 355, "152": 355, "8591": 355, "3768": 355, "153": 355, "9976": 355, "154": 355, "0576": 355, "0067": 355, "935": 355, "4199": 355, "1722": 355, "156": 355, "8310": 355, "3466": 355, "157": 355, "8631": 355, "2492": 355, "158": 355, "8763": 355, "1277": 355, "159": 355, "5562": 355, "7446": 355, "1082": 355, "9830": 355, "161": 355, "0946": 355, "5229": 355, "162": 355, "4574": 355, "6900": 355, "163": [355, 356], "2229": 355, "0318": 355, "164": 355, "0543": 355, "0817": 355, "761": 355, "165": 355, "2809": 355, "5118": 355, "366": 355, "1142": 355, "5635": 355, "167": 355, "1949": 355, "2327": 355, "982": 355, "168": 355, "0967": 355, "0387": 355, "457": 355, "169": 355, "0782": 355, "2150": 355, "170": 355, "5222": 355, "3725": 355, "9288": 355, "9837": 355, "1416": 355, "1099": 355, "173": 355, "8620": 355, "8475": 355, "174": 355, "1807": 355, "4375": 355, "175": 355, "1148": 355, "0645": 355, "2751": 355, "8313": 355, "177": 355, "9286": 355, "9770": 355, "178": 355, "5735": 355, "2837": 355, "179": [355, 357], "2926": 355, "9489": 355, "180": 355, "1507": 355, "181": 355, "8724": 355, "3567": 355, "182": 355, "3574": 355, "6140": 355, "183": 355, "7895": 355, "2518": 355, "184": 355, "6146": 355, "185": 355, "8776": 355, "7358": 355, "186": 355, "3722": 355, "8428": 355, "187": 355, "7955": 355, "188": 355, "0092": 355, "7106": 355, "829": 355, "189": 355, "2264": 355, "6919": 355, "190": 355, "1438": 355, "1362": 355, "191": 355, "0618": 355, "8217": 355, "9420": 355, "6765": 355, "193": 355, "7745": 355, "0709": 355, "194": 355, "9478": 355, "6867": 355, "195": 355, "6507": 355, "6225": 355, "196": 355, "2244": 355, "2195": 355, "197": 355, "5385": 355, "9263": 355, "198": 355, "1878": 355, "2374": 355, "8054": 355, "3504": 355, "557": 355, "0766": 355, "201": 355, "2011": 355, "8393": 355, "202": 355, "0803": 355, "7815": 355, "203": 355, "8363": 355, "2460": 355, "204": [355, 357], "8643": 355, "2191": 355, "593": 355, "205": [355, 360], "0773": 355, "1343": 355, "206": [355, 357], "8657": 355, "207": 355, "9304": 355, "7584": 355, "208": 355, "8752": 355, "2307": 355, "209": 355, "5250": 355, "4869": 355, "7837": 355, "5762": 355, "211": 355, "6661": 355, "8600": 355, "2502": 355, "1752": 355, "3075": 355, "8871": 355, "214": 355, "9406": 355, "8090": 355, "215": 355, "6291": 355, "8923": 355, "876": 355, "216": 355, "9504": 355, "21e": 355, "217": 355, "7431": 355, "7880": 355, "218": 355, "4463": 355, "5432": 355, "219": 355, "3793": 355, "3313": 355, "220": 355, "8843": 355, "0369": 355, "065": 355, "221": 355, "4828": 355, "8391": 355, "222": 355, "6265": 355, "2913": 355, "947": 355, "86it": 355, "5541": 355, "1252": 355, "97it": 355, "7342": 355, "2396": 355, "225": 355, "05it": 355, "5936": 355, "1924": 355, "226": 355, "9975": 355, "2045": 355, "227": 355, "8367": 355, "9540": 355, "228": 355, "7259": 355, "6743": 355, "229": 355, "4827": 355, "7528": 355, "230": 355, "7361": 355, "8756": 355, "231": [355, 357], "7646": 355, "1116": 355, "232": 355, "5426": 355, "8385": 355, "5662": 355, "8585": 355, "234": 355, "8234": 355, "7930": 355, "235": 355, "2648": 355, "9309": 355, "236": 355, "6817": 355, "237": 355, "0943": 355, "1533": 355, "238": 355, "3045": 355, "0483": 355, "239": 355, "6415": 355, "0201": 355, "241": 355, "4437": 355, "4365": 355, "242": 355, "0358": 355, "4943": 355, "243": 355, "1272": 355, "5003": 355, "1180": 355, "2637": 355, "245": 355, "7197": 355, "0873": 355, "246": 355, "2917": 355, "247": 355, "0160": 355, "0738": 355, "248": 355, "3689": 355, "0120": 355, "249": 355, "5570": 355, "0475": 355, "250": 355, "4423": 355, "2220": 355, "6803": 355, "252": 355, "1465": 355, "7214": 355, "253": 355, "8801": 355, "7034": 355, "254": 355, "9136": 355, "4076": 355, "7589": 355, "5013": 355, "8150": 355, "2241": 355, "257": 355, "0753": 355, "8081": 355, "1951": 355, "8314": 355, "259": 355, "0038": 355, "260": 355, "0889": 355, "4616": 355, "261": [355, 360], "0655": 355, "262": 355, "8333": 355, "9476": 355, "263": 355, "7554": 355, "3798": 355, "264": 355, "3717": 355, "3947": 355, "529": 355, "265": 355, "3060": 355, "6495": 355, "7467": 355, "8889": 355, "267": 355, "8457": 355, "591": 355, "7137": 355, "0536": 355, "269": 355, "1651": 355, "388": 355, "270": 355, "8246": 355, "5709": 355, "281": 355, "271": 355, "7502": 355, "0521": 355, "032": 355, "272": 355, "5475": 355, "7253": 355, "273": 355, "2856": 355, "7130": 355, "274": 355, "2778": 355, "4122": 355, "8368": 355, "1841": 355, "9622": 355, "1603": 355, "003e": 355, "277": 355, "0247": 355, "346": 355, "278": 355, "2238": 355, "6418": 355, "279": 355, "0626": 355, "2538": 355, "280": 355, "0149": 355, "7380": 355, "2167": 355, "8911": 355, "282": 355, "8725": 355, "1983": 355, "8142": 355, "3709": 355, "284": 355, "4989": 355, "285": 355, "6464": 355, "6210": 355, "286": 355, "9726": 355, "0820": 355, "287": 355, "6975": 355, "9091": 355, "4926": 355, "4791": 355, "289": [355, 360], "0905": 355, "3500": 355, "290": 355, "2287": 355, "291": 355, "9918": 355, "5543": 355, "9245": 355, "6444": 355, "631": 355, "293": 355, "0448": 355, "4769": 355, "8566": 355, "7208": 355, "295": 355, "0966": 355, "296": 355, "5303": 355, "1537": 355, "023": 355, "297": 355, "2682": 355, "564": 355, "298": 355, "07it": 355, "4318": 355, "5063": 355, "299": 355, "7475": 355, "4190": 355, "8186": 355, "5077": 355, "301": 355, "91it": 355, "1883": 355, "5291": 355, "472": 355, "302": 355, "3998": 355, "303": 355, "3622": 355, "0930": 355, "626": 355, "304": 355, "9500": 355, "5664": 355, "305": 355, "5697": 355, "3024": 355, "306": 355, "3117": 355, "0052": 355, "006": 355, "0981": 355, "9312": 355, "3873": 355, "309": 355, "0411": 355, "2650": 355, "1656": 355, "0228": 355, "004": 355, "311": 355, "1196": 355, "2478": 355, "312": 355, "7353": 355, "0812": 355, "313": 355, "3022": 355, "758": 355, "314": 355, "1406": 355, "4626": 355, "315": 355, "2156": 355, "851": 355, "316": 355, "1953": 355, "3774": 355, "317": 355, "6385": 355, "9917": 355, "318": 355, "2764": 355, "905": 355, "319": 355, "6391": 355, "9317": 355, "9748": 355, "2679": 355, "321": 355, "8495": 355, "5125": 355, "8177": 355, "6602": 355, "323": 355, "0704": 355, "5776": 355, "324": 355, "9833": [355, 359], "1339": 355, "402": 355, "325": 355, "1238": 355, "326": 355, "9299": 355, "0227": 355, "327": 355, "7727": 355, "1607": 355, "336": 355, "328": 355, "3958": 355, "3223": 355, "763": 355, "329": 355, "4742": 355, "1797": 355, "330": 355, "0144": 355, "0085": 355, "791": 355, "331": 355, "8284": 355, "0428": 355, "332": 355, "7365": 355, "333": 355, "4566": 355, "0781": 355, "086": 355, "334": 355, "3355": 355, "0230": 355, "335": 355, "0423": 355, "076": 355, "3711": 355, "1335": 355, "6855": 355, "337": 355, "0304": 355, "0023": 355, "8459": 355, "338": 355, "9998": 355, "4399": 355, "339": 355, "2303": 355, "1346": 355, "340": 355, "2915": 355, "7116": 355, "341": 355, "5560": 355, "0487": 355, "5119": 355, "061": 355, "343": 355, "3305": 355, "3705": 355, "957": 355, "344": 355, "6068": 355, "345": 355, "5731": 355, "3897": 355, "0376": 355, "347": 355, "0434": 355, "012": 355, "1300": 355, "1215": 355, "0968": 355, "0885": 355, "350": 355, "1348": 355, "0073": 355, "5052": 355, "4184": 355, "2817": 355, "8887": 355, "353": 355, "4779": 355, "1009": 355, "354": 355, "0604": 355, "599": 355, "355": 355, "4486": 355, "1176": 355, "656": 355, "356": 355, "2436": 355, "0668": 355, "8849": 355, "0012": 355, "358": 355, "7511": 355, "8804": 355, "359": 355, "8870": 355, "6728": 355, "360": 355, "8841": 355, "5508": 355, "361": 355, "5242": 355, "0013": 355, "6185": 355, "363": 355, "1378": 355, "0204": 355, "0355": 355, "685": 355, "365": 355, "4884": 355, "0231": 355, "0014": 355, "6793": 355, "367": 355, "9834": 355, "863": 355, "368": 355, "6709": 355, "462": 355, "369": 355, "5199": 355, "9790": 355, "370": 355, "9401": 355, "7802": 355, "371": 355, "6723": 355, "372": 355, "2678": 355, "6201": 355, "373": 355, "2184": 355, "7385": 355, "374": 355, "6344": 355, "617": 355, "375": 355, "9945": 355, "0772": 355, "567": 355, "7576": 355, "0398": 355, "377": 355, "3396": 355, "0022": 355, "094": 355, "378": 355, "3073": 355, "4018": 355, "379": 355, "1869": 355, "380": 355, "0481": 355, "1117": 355, "381": 355, "6823": 355, "981": 355, "8305": 355, "0210": 355, "383": 355, "4908": 355, "0272": 355, "3267": 355, "0111": 355, "7965": 355, "1796": 355, "0039": 355, "5396": 355, "386": 355, "3757": 355, "0490": 355, "387": 355, "1394": 355, "4187": 355, "2986": 355, "7954": 355, "1274": 355, "0063": 355, "813": 355, "390": 355, "8706": 355, "0114": 355, "391": 355, "6922": 355, "2423": 355, "392": 355, "9115": 355, "2602": 355, "393": 355, "2449": 355, "0783": 355, "394": 355, "0631": 355, "0057": 355, "7444": 355, "395": 355, "3339": 355, "0167": 355, "396": 355, "4806": 355, "397": 355, "4171": 355, "067": 355, "398": 355, "2618": 355, "5809": 355, "399": 355, "0054": 355, "3364": 355, "8733": 355, "0184": 355, "401": 355, "9137": 355, "0113": 355, "025": 355, "0386": 355, "0625": 355, "403": 355, "1332": 355, "0582": 355, "7816": 355, "404": 355, "8341": 355, "0941": 355, "854": 355, "405": 355, "8615": 355, "588": 355, "406": 355, "3849": 355, "008": 355, "9395": 355, "0765": 355, "055": 355, "408": 355, "2685": 355, "2235": 355, "688": 355, "409": 355, "3052": 355, "4249": 355, "410": 355, "6806": 355, "6383": 355, "3721": 355, "9981": 355, "412": 355, "1862": 355, "822": 355, "413": 355, "9811": 355, "0171": 355, "013": 355, "414": 355, "0252": 355, "0049": 355, "6205": 355, "415": 355, "1108": 355, "4921": 355, "9142": 355, "8130": 355, "417": 355, "1725": 355, "0036": 355, "3196": 355, "418": 355, "7795": 355, "0242": 355, "799": 355, "419": 355, "7737": 355, "0138": 355, "420": 355, "1462": 355, "0053": 355, "421": 355, "9226": 355, "6139": 355, "422": 355, "9889": 355, "0403": 355, "423": 355, "6194": 355, "0032": 355, "3989": 355, "0104": 355, "425": 355, "9960": 355, "0009": 355, "6009": 355, "426": 355, "2697": 355, "0914": 355, "427": 355, "1114": 355, "428": 355, "9862": 355, "1932": 355, "429": 355, "0637": 355, "0623": 355, "082": 355, "430": 355, "9906": 355, "2031": 355, "431": 355, "9948": 355, "0895": 355, "432": 355, "1970": 355, "0256": 355, "4231": 355, "0449": 355, "644": 355, "434": 355, "1039": 355, "1973": 355, "435": 355, "4561": 355, "1225": 355, "436": 355, "0211": 355, "2125": 355, "437": 355, "3866": 355, "0050": 355, "7202": 355, "438": 355, "6388": 355, "0072": 355, "439": 355, "1187": 355, "0015": 355, "5116": 355, "440": 355, "0432": 355, "0025": 355, "7809": 355, "1925": 355, "0103": 355, "442": 355, "9570": 355, "0871": 355, "5601": 355, "0165": 355, "0047": 355, "6061": 355, "2746": 355, "0027": 355, "7887": 355, "1835": 355, "0035": 355, "855": 355, "447": 355, "8420": 355, "548": 355, "2653": 355, "0126": 355, "9736": 355, "0594": 355, "0119": 355, "6196": 355, "450": 355, "4509": 355, "0373": 355, "451": 355, "0620": 355, "452": 355, "6898": 355, "3235": 355, "687": 355, "453": 355, "5879": 355, "454": 355, "8406": 355, "0694": 355, "455": 355, "8259": 355, "0235": 355, "8500": 355, "0024": 355, "4054": 355, "458": 355, "2027": 355, "0894": 355, "459": 355, "5966": 355, "460": 355, "6942": 355, "0016": 355, "4254": 355, "6703": 355, "0145": 355, "8124": 355, "0218": 355, "9196": 355, "0188": 355, "8986": 355, "0884": 355, "0084": 355, "5624": 355, "465": 355, "8862": 355, "5384": 355, "466": 355, "5837": 355, "467": 355, "8954": 355, "0101": 355, "6751": 355, "468": 355, "8063": 355, "0122": 355, "9635": 355, "469": 355, "0692": 355, "4216": 355, "470": 355, "1227": 355, "0586": 355, "162e": 355, "471": 355, "9690": 355, "4166": 355, "6324": 355, "473": 355, "0778": 355, "8548": 355, "0017": 355, "4408": 355, "475": 355, "8125": 355, "1515": 355, "476": 355, "2733": 355, "0044": 355, "2836": 355, "477": 355, "7497": 355, "7681": 355, "478": 355, "8547": 355, "0105": 355, "7212": 355, "9848": 355, "0019": 355, "6498": 355, "1987": 355, "0011": 355, "5473": 355, "481": 355, "8991": 355, "6091": 355, "9189": 355, "5771": 355, "6781": 355, "7542": 355, "484": 355, "5959": 355, "0064": 355, "485": 355, "2547": 355, "0636": 355, "547": 355, "487": 355, "0065": 355, "1694": 355, "0083": 355, "5759": 355, "0493": 355, "0021": 355, "7805": 355, "490": 355, "0950": 355, "497": 355, "9717": 355, "3672": 355, "492": 355, "0207": 355, "8266": 355, "5365": 355, "494": 355, "2623": 355, "5078": 355, "495": 355, "4545": 355, "09636": 355, "8754": 355, "0010": 355, "498": 355, "0031": 355, "8269": 355, "499": 355, "6642": 355, "2284": 355, "501": 355, "9130": 355, "0008": 355, "502": 355, "503": 355, "7624": 355, "0056": 355, "3858": 355, "504": 355, "0890": 355, "0042": 355, "505": 355, "7505": 355, "2157": 355, "506": 355, "8394": 355, "3413": 355, "507": 355, "9609": 355, "0041": 355, "6905": 355, "508": 355, "8467": 355, "4409": 355, "509": 355, "510": 355, "8128": 355, "3559": 355, "511": 355, "1479": 355, "0264": 355, "1589": 355, "566": 355, "513": 355, "2756": 355, "0046": 355, "5266": 355, "514": 355, "9873": 355, "0112": 355, "9314": 355, "515": 355, "3791": 355, "0721": 355, "516": 355, "4580": 355, "0758": 355, "6114": 355, "517": 355, "2431": 355, "518": 355, "1958": 355, "5553": 355, "8924": 355, "0097": 355, "520": 355, "3737": 355, "0234": 355, "521": 355, "9125": 355, "4623": 355, "3230": 355, "0589": 355, "3784": 355, "523": 355, "9482": 355, "0051": 355, "524": 355, "1979": 355, "0045": 355, "6401": 355, "525": 355, "1588": 355, "0048": 355, "6255": 355, "526": 355, "6084": 355, "3477": 355, "1475": 355, "0209": 355, "528": 355, "7611": 355, "1040": 355, "0099": 355, "0173": 355, "643": 355, "530": 355, "8189": 355, "4358": 355, "531": 355, "9897": 355, "532": 355, "1548": 355, "9751": 355, "533": 355, "6362": 355, "7495": 355, "534": 355, "1749": 355, "9513": 355, "535": 355, "7708": 355, "0371": 355, "536": 355, "2649": 355, "0437": 355, "537": 355, "5491": 355, "0276": 355, "6426": 355, "7294": 355, "078e": 355, "539": 355, "9928": 355, "540": 355, "7937": 355, "0124": 355, "9664": 355, "541": 355, "3342": 355, "542": 355, "2046": 355, "5496": 355, "0956": 355, "0059": 355, "545": 355, "9028": 355, "5843": 355, "546": 355, "0674": 355, "0178": 355, "797": 355, "2815": 355, "0599": 355, "1587": 355, "9276": 355, "8228": 355, "6164": 355, "551": 355, "6850": 355, "9167": 355, "3092": 355, "0670": 355, "9177": 355, "553": 355, "1599": 355, "0043": 355, "554": 355, "6367": 355, "555": 355, "3657": 355, "556": 355, "6694": 355, "2622": 355, "0372": 355, "4841": 355, "558": 355, "2707": 355, "757": 355, "559": 355, "2267": 355, "5415": 355, "560": 355, "4556": 355, "0163": 355, "561": 355, "1839": 355, "0809": 355, "6262": 355, "562": 355, "0278": 355, "1112": 355, "6155": 355, "565": 355, "1427": 355, "3582": 355, "624": 355, "7870": 355, "9490": 355, "0439": 355, "8796": 355, "568": 355, "8026": 355, "612": 355, "569": 355, "3147": 355, "8486": 355, "570": 355, "7917": 355, "0129": 355, "571": 355, "9553": 355, "0020": 355, "6871": 355, "572": 355, "3132": 355, "0159": 355, "8646": 355, "573": 355, "5320": 355, "0269": 355, "574": 355, "2955": 355, "0245": 355, "575": 355, "3347": 355, "0179": 355, "9718": 355, "1629": 355, "804": 355, "577": 355, "4164": 355, "0070": 355, "4335": 355, "578": 355, "579": 355, "3049": 355, "9063": 355, "580": 355, "8785": 355, "3295": 355, "5184": 355, "0546": 355, "582": 355, "4589": 355, "583": 355, "4697": 355, "584": 355, "2397": 355, "585": 355, "4953": 355, "1775": 355, "586": 355, "2258": 355, "0110": 355, "7671": 355, "587": 355, "3981": 355, "8590": 355, "0007": 355, "589": 355, "9820": 355, "4221": 355, "590": 355, "1293": 355, "0116": 355, "868": 355, "1675": 355, "5931": 355, "592": 355, "2910": 355, "5219": 355, "2124": 355, "1730": 355, "737": 355, "594": 355, "2914": 355, "0206": 355, "595": 355, "0172": 355, "3982": 355, "0945": 355, "0121": 355, "4789": 355, "597": [355, 357], "3805": 355, "4074": 355, "598": 355, "3310": 355, "5065": 355, "6028": 355, "6316": 355, "6724": 355, "6523": 355, "601": 355, "0136": 355, "4298": 355, "602": 355, "3524": 355, "2629": 355, "603": 355, "2635": 355, "7839": 355, "604": 355, "6041": 355, "8027": 355, "4170": 355, "4675": 355, "606": 355, "3153": 355, "9316": 355, "607": 355, "0649": 355, "9722": 355, "7989": 355, "0329": 355, "609": 355, "1976": 355, "6852": 355, "610": 355, "4793": 355, "1255": 355, "611": 355, "4581": 355, "0394": 355, "2047": 355, "0326": 355, "613": 355, "8967": 355, "8619": 355, "614": 355, "5906": 355, "6491": 355, "615": 355, "6634": 355, "4394": 355, "616": 355, "0624": 355, "0061": 355, "5676": 355, "3259": 355, "0131": 355, "7733": 355, "618": 355, "7515": 355, "0189": 355, "5575": 355, "619": 355, "9313": 355, "6286": 355, "4325": 355, "7832": 355, "621": 355, "1134": 355, "622": 355, "4572": 355, "0500": 355, "5838": 355, "623": 355, "3818": 355, "8623": 355, "1253": 355, "6622": 355, "subject": 355, "explain": 356, "semat": 356, "r3mtransform": 356, "env_transform": [356, 360], "s3": 356, "amazonaw": 356, "r3m_50": 356, "374m": 356, "5m": 356, "126mb": 356, "6m": 356, "136mb": 356, "119mb": 356, "4m": 356, "2mb": 356, "4mb": 356, "9m": 356, "111mb": 356, "0m": 356, "108mb": 356, "102m": 356, "122m": 356, "134m": 356, "148m": 356, "7mb": 356, "163m": 356, "175m": 356, "102mb": 356, "186m": 356, "3mb": 356, "197m": 356, "8mb": 356, "213m": 356, "227m": 356, "113mb": 356, "239m": 356, "110mb": 356, "250m": 356, "261m": 356, "106mb": 356, "272m": 356, "105mb": 356, "282m": 356, "292m": 356, "1mb": 356, "301m": 356, "9mb": 356, "314m": 356, "328m": 356, "343m": 356, "357m": 356, "369m": 356, "112mb": 356, "wiser": 356, "_storag": [356, 357], "3576": 356, "pull": 357, "batteri": 357, "filesystem": 357, "buffer_list": 357, "lowest": 357, "medium": 357, "buffer_lazytensor": 357, "buffer_lazymemmap": 357, "tempdir": 357, "tmp0bxp8m59": 357, "fullest": 357, "mydata": 357, "background": 357, "question": [357, 359], "_i": 357, "artifici": 357, "0893e": 357, "hamper": 357, "she": 357, "pars": 357, "proport": 357, "hist": 357, "barcontain": 357, "artist": 357, "reappear": 357, "unfold": 357, "problemat": 357, "4th": 357, "794": 357, "1104": 357, "ret": 357, "_sampl": 357, "decorated_fun": 357, "1144": 357, "_transform": 357, "976": 357, "2888": 357, "3013": 357, "rep": 357, "tensorlist": 357, "prioritizedslicesampl": 357, "tensordictmaxvaluewrit": 357, "4451": 357, "demo": 359, "icml": 359, "vmoen": 359, "fb": 359, "invest": 359, "platform": 359, "media": 359, "predominantli": 359, "tensordict1": 359, "tensordict2": 359, "tensordict_sampl": 359, "_sampler": 359, "_sum_tre": 359, "modulenotfounderror": 359, "28791671991348267": 359, "noopresetenv": [359, 360], "6400": 359, "backbone_modul": 359, "params_expand": 359, "exec_sequ": 359, "tensordict_exp": 359, "base_modul": 359, "0137": 359, "1524": 359, "0641": 359, "viewbackward0": 359, "asstridedbackward0": 359, "8728": 359, "1334": 359, "3494": 359, "6887": 359, "6402": 359, "_safetanhbackward": 359, "1132": 359, "1762": 359, "3430": 359, "2668": 359, "2918": 359, "6239": 359, "roughli": 359, "tensordicts_prealloc": 359, "tensordicts_stack": 359, "tensordict_rollout": [359, 360], "disclaim": 359, "concatmodul": 359, "loss_td": 359, "year": 359, "roadmap": 359, "compris": 359, "contributor": 359, "curiou": 359, "nascent": 359, "unsupervis": 360, "unifi": 360, "_build_env": 360, "amidar": 360, "assault": 360, "1945": 360, "deserv": 360, "__episode__": 360, "__trajectory__": 360, "void": 360, "reproduct": 360, "tensordict_tprim": 360, "2503": 360, "_rollout_stop_earli": 360, "2542": 360, "1224": 360, "err": 360, "1198": 360, "_call_modul": 360, "1141": 360, "1449": 360, "imshow": 360, "wrapper1": 360, "wrapper2": 360, "obviou": 360, "truth": 360, "env0": 360, "env_transformed_bi": 360, "stanc": 360, "transformeddistribut": 360, "base_dist": 360, "concat": 360, "mofidi": 360, "transformedenviron": 360, "moderet": 360, "computation": 360, "legitim": 360, "incom": 360, "amongst": 360, "has_cuda": 360, "wor": 360, "convention": 360, "markovian": 360, "constain": 360, "bar_": 360, "get_someth": 360, "aargh": 360, "foo_list": 360, "parallen": 360, "particularili": 360, "evolv": 360, "steadi": 360, "approx": 360, "_extra_st": 360, "observation_ssq": 360, "observation_sum": 360, "dispach": 360, "absor": 360, "4286": 360}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "OneHotDiscreteTensorSpec"], [33, 0, 1, "", "PairwiseDataset"], [34, 0, 1, "", "PrioritizedReplayBuffer"], [35, 0, 1, "", "PromptData"], [36, 0, 1, "", "PromptTensorDictTokenizer"], [37, 0, 1, "", "ReplayBuffer"], [38, 0, 1, "", "RewardData"], [39, 0, 1, "", "RolloutFromModel"], [40, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [41, 0, 1, "", "TensorDictReplayBuffer"], [42, 0, 1, "", "TensorDictTokenizer"], [43, 0, 1, "", "TensorSpec"], [44, 0, 1, "", "TokenizedDatasetLoader"], [45, 0, 1, "", "UnboundedContinuousTensorSpec"], [46, 0, 1, "", "UnboundedDiscreteTensorSpec"], [47, 0, 1, "", "check_no_exclusive_keys"], [48, 0, 1, "", "consolidate_spec"], [49, 0, 1, "", "contains_lazy_spec"], [50, 0, 1, "", "create_infinite_iterator"], [59, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[33, 3, 1, "", "batch_size"], [33, 3, 1, "", "device"], [33, 1, 1, "", "from_dataset"], [33, 1, 1, "", "from_tensordict"], [33, 1, 1, "", "get"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "memmap"], [33, 1, 1, "", "memmap_"], [33, 1, 1, "", "memmap_like"], [33, 3, 1, "", "names"], [33, 1, 1, "", "set"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to_tensordict"], [33, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "dumps"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "loads"], [34, 1, 1, "", "sample"], [34, 3, 1, "", "sampler"], [34, 1, 1, "", "set_sampler"], [34, 1, 1, "", "set_storage"], [34, 1, 1, "", "set_writer"], [34, 3, 1, "", "storage"], [34, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[35, 3, 1, "", "batch_size"], [35, 3, 1, "", "device"], [35, 1, 1, "", "from_dataset"], [35, 1, 1, "", "from_tensordict"], [35, 1, 1, "", "get"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "memmap"], [35, 1, 1, "", "memmap_"], [35, 1, 1, "", "memmap_like"], [35, 3, 1, "", "names"], [35, 1, 1, "", "set"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to_tensordict"], [35, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 3, 1, "", "sampler"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"], [37, 3, 1, "", "storage"], [37, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[39, 1, 1, "", "create_rollout_td"], [39, 1, 1, "", "generate"], [39, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 3, 1, "", "sampler"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"], [40, 3, 1, "", "storage"], [40, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[44, 1, 1, "", "dataset_to_tensordict"], [44, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "AtariDQNExperienceReplay"], [52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "GenDGRLExperienceReplay"], [54, 0, 1, "", "MinariExperienceReplay"], [55, 0, 1, "", "OpenMLExperienceReplay"], [56, 0, 1, "", "OpenXExperienceReplay"], [57, 0, 1, "", "RobosetExperienceReplay"], [58, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"], [52, 3, 1, "", "sampler"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 3, 1, "", "storage"], [52, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"], [53, 3, 1, "", "sampler"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 3, 1, "", "storage"], [53, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[60, 0, 1, "", "ImmutableDatasetWriter"], [61, 0, 1, "", "LazyMemmapStorage"], [62, 0, 1, "", "LazyTensorStorage"], [63, 0, 1, "", "ListStorage"], [64, 0, 1, "", "PrioritizedSampler"], [65, 0, 1, "", "PrioritizedSliceSampler"], [66, 0, 1, "", "RandomSampler"], [67, 0, 1, "", "ReplayBufferEnsemble"], [68, 0, 1, "", "RoundRobinWriter"], [69, 0, 1, "", "Sampler"], [70, 0, 1, "", "SamplerEnsemble"], [71, 0, 1, "", "SamplerWithoutReplacement"], [72, 0, 1, "", "SliceSampler"], [73, 0, 1, "", "SliceSamplerWithoutReplacement"], [74, 0, 1, "", "Storage"], [75, 0, 1, "", "StorageEnsemble"], [76, 0, 1, "", "TensorDictMaxValueWriter"], [77, 0, 1, "", "TensorDictRoundRobinWriter"], [78, 0, 1, "", "TensorStorage"], [79, 0, 1, "", "Writer"], [80, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[61, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[64, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "sample"], [67, 3, 1, "", "sampler"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"], [67, 3, 1, "", "storage"], [67, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[68, 1, 1, "", "add"], [68, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[74, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[76, 1, 1, "", "add"], [76, 1, 1, "", "extend"], [76, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[78, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.envs": [[81, 2, 1, "", "BraxEnv"], [82, 2, 1, "", "BraxWrapper"], [83, 2, 1, "", "DMControlEnv"], [84, 2, 1, "", "DMControlWrapper"], [85, 0, 1, "", "EnvBase"], [86, 0, 1, "", "EnvCreator"], [87, 0, 1, "", "EnvMetaData"], [88, 2, 1, "", "GymEnv"], [89, 0, 1, "", "GymLikeEnv"], [90, 2, 1, "", "GymWrapper"], [91, 2, 1, "", "HabitatEnv"], [92, 2, 1, "", "IsaacGymEnv"], [93, 2, 1, "", "IsaacGymWrapper"], [94, 2, 1, "", "JumanjiEnv"], [95, 2, 1, "", "JumanjiWrapper"], [96, 2, 1, "", "MOGymEnv"], [97, 2, 1, "", "MOGymWrapper"], [98, 2, 1, "", "MarlGroupMapType"], [99, 2, 1, "", "ModelBasedEnvBase"], [100, 2, 1, "", "MultiThreadedEnv"], [101, 2, 1, "", "MultiThreadedEnvWrapper"], [102, 2, 1, "", "OpenMLEnv"], [103, 0, 1, "", "ParallelEnv"], [104, 2, 1, "", "PettingZooEnv"], [105, 2, 1, "", "PettingZooWrapper"], [106, 2, 1, "", "RoboHiveEnv"], [107, 2, 1, "", "SMACv2Env"], [108, 2, 1, "", "SMACv2Wrapper"], [109, 0, 1, "", "SerialEnv"], [110, 2, 1, "", "VmasEnv"], [111, 2, 1, "", "VmasWrapper"], [112, 2, 1, "", "check_marl_grouping"], [113, 2, 1, "", "gym_backend"], [99, 1, 1, "", "rand_step"], [99, 1, 1, "", "reset"], [99, 1, 1, "", "rollout"], [115, 2, 1, "", "set_gym_backend"], [99, 1, 1, "", "set_seed"], [99, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[85, 3, 1, "", "action_key"], [85, 3, 1, "", "action_keys"], [85, 3, 1, "", "action_spec"], [85, 1, 1, "", "add_module"], [85, 1, 1, "", "apply"], [85, 3, 1, "", "batch_locked"], [85, 3, 1, "", "batch_size"], [85, 1, 1, "", "bfloat16"], [85, 1, 1, "", "buffers"], [85, 1, 1, "", "children"], [85, 1, 1, "", "compile"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 3, 1, "", "done_key"], [85, 3, 1, "", "done_keys"], [85, 3, 1, "", "done_keys_groups"], [85, 3, 1, "", "done_spec"], [85, 1, 1, "", "double"], [85, 1, 1, "", "empty_cache"], [85, 1, 1, "", "eval"], [85, 1, 1, "", "extra_repr"], [85, 1, 1, "", "fake_tensordict"], [85, 1, 1, "", "float"], [85, 1, 1, "", "forward"], [85, 3, 1, "", "full_action_spec"], [85, 3, 1, "", "full_done_spec"], [85, 3, 1, "", "full_reward_spec"], [85, 3, 1, "", "full_state_spec"], [85, 1, 1, "", "get_buffer"], [85, 1, 1, "", "get_extra_state"], [85, 1, 1, "", "get_parameter"], [85, 1, 1, "", "get_submodule"], [85, 1, 1, "", "half"], [85, 3, 1, "", "input_spec"], [85, 1, 1, "", "ipu"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "maybe_reset"], [85, 1, 1, "", "modules"], [85, 1, 1, "", "named_buffers"], [85, 1, 1, "", "named_children"], [85, 1, 1, "", "named_modules"], [85, 1, 1, "", "named_parameters"], [85, 3, 1, "", "observation_spec"], [85, 3, 1, "", "output_spec"], [85, 1, 1, "", "parameters"], [85, 1, 1, "", "rand_action"], [85, 1, 1, "id0", "rand_step"], [85, 1, 1, "", "register_backward_hook"], [85, 1, 1, "", "register_buffer"], [85, 1, 1, "", "register_forward_hook"], [85, 1, 1, "", "register_forward_pre_hook"], [85, 1, 1, "", "register_full_backward_hook"], [85, 1, 1, "", "register_full_backward_pre_hook"], [85, 1, 1, "", "register_gym"], [85, 1, 1, "", "register_load_state_dict_post_hook"], [85, 1, 1, "", "register_module"], [85, 1, 1, "", "register_parameter"], [85, 1, 1, "", "register_state_dict_pre_hook"], [85, 1, 1, "", "requires_grad_"], [85, 1, 1, "id1", "reset"], [85, 3, 1, "", "reset_keys"], [85, 3, 1, "", "reward_key"], [85, 3, 1, "", "reward_keys"], [85, 3, 1, "", "reward_spec"], [85, 1, 1, "id2", "rollout"], [85, 1, 1, "", "set_extra_state"], [85, 1, 1, "id3", "set_seed"], [85, 3, 1, "", "shape"], [85, 1, 1, "", "share_memory"], [85, 3, 1, "", "specs"], [85, 1, 1, "", "state_dict"], [85, 3, 1, "", "state_spec"], [85, 1, 1, "id4", "step"], [85, 1, 1, "", "step_and_maybe_reset"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_empty"], [85, 1, 1, "", "train"], [85, 1, 1, "", "type"], [85, 1, 1, "", "xpu"], [85, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[89, 3, 1, "", "action_key"], [89, 3, 1, "", "action_keys"], [89, 3, 1, "", "action_spec"], [89, 1, 1, "", "add_module"], [89, 1, 1, "", "apply"], [89, 1, 1, "", "auto_register_info_dict"], [89, 3, 1, "", "batch_locked"], [89, 3, 1, "", "batch_size"], [89, 1, 1, "", "bfloat16"], [89, 1, 1, "", "buffers"], [89, 1, 1, "", "children"], [89, 1, 1, "", "close"], [89, 1, 1, "", "compile"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 3, 1, "", "done_key"], [89, 3, 1, "", "done_keys"], [89, 3, 1, "", "done_keys_groups"], [89, 3, 1, "", "done_spec"], [89, 1, 1, "", "double"], [89, 1, 1, "", "empty_cache"], [89, 1, 1, "", "eval"], [89, 1, 1, "", "extra_repr"], [89, 1, 1, "", "fake_tensordict"], [89, 1, 1, "", "float"], [89, 1, 1, "", "forward"], [89, 3, 1, "", "full_action_spec"], [89, 3, 1, "", "full_done_spec"], [89, 3, 1, "", "full_reward_spec"], [89, 3, 1, "", "full_state_spec"], [89, 1, 1, "", "get_buffer"], [89, 1, 1, "", "get_extra_state"], [89, 1, 1, "", "get_parameter"], [89, 1, 1, "", "get_submodule"], [89, 1, 1, "", "half"], [89, 3, 1, "", "input_spec"], [89, 1, 1, "", "ipu"], [89, 1, 1, "", "load_state_dict"], [89, 1, 1, "", "maybe_reset"], [89, 1, 1, "", "modules"], [89, 1, 1, "", "named_buffers"], [89, 1, 1, "", "named_children"], [89, 1, 1, "", "named_modules"], [89, 1, 1, "", "named_parameters"], [89, 3, 1, "", "observation_spec"], [89, 3, 1, "", "output_spec"], [89, 1, 1, "", "parameters"], [89, 1, 1, "", "rand_action"], [89, 1, 1, "", "rand_step"], [89, 1, 1, "", "read_action"], [89, 1, 1, "", "read_done"], [89, 1, 1, "", "read_obs"], [89, 1, 1, "", "read_reward"], [89, 1, 1, "", "register_backward_hook"], [89, 1, 1, "", "register_buffer"], [89, 1, 1, "", "register_forward_hook"], [89, 1, 1, "", "register_forward_pre_hook"], [89, 1, 1, "", "register_full_backward_hook"], [89, 1, 1, "", "register_full_backward_pre_hook"], [89, 1, 1, "", "register_gym"], [89, 1, 1, "", "register_load_state_dict_post_hook"], [89, 1, 1, "", "register_module"], [89, 1, 1, "", "register_parameter"], [89, 1, 1, "", "register_state_dict_pre_hook"], [89, 1, 1, "", "requires_grad_"], [89, 1, 1, "", "reset"], [89, 3, 1, "", "reset_keys"], [89, 3, 1, "", "reward_key"], [89, 3, 1, "", "reward_keys"], [89, 3, 1, "", "reward_spec"], [89, 1, 1, "", "rollout"], [89, 1, 1, "", "set_extra_state"], [89, 1, 1, "", "set_info_dict_reader"], [89, 1, 1, "", "set_seed"], [89, 3, 1, "", "shape"], [89, 1, 1, "", "share_memory"], [89, 3, 1, "", "specs"], [89, 1, 1, "", "state_dict"], [89, 3, 1, "", "state_spec"], [89, 1, 1, "", "step"], [89, 1, 1, "", "step_and_maybe_reset"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_empty"], [89, 1, 1, "", "train"], [89, 1, 1, "", "type"], [89, 1, 1, "", "xpu"], [89, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "", "set_seed"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "update_kwargs"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[109, 3, 1, "", "action_key"], [109, 3, 1, "", "action_keys"], [109, 3, 1, "", "action_spec"], [109, 1, 1, "", "add_module"], [109, 1, 1, "", "apply"], [109, 3, 1, "", "batch_locked"], [109, 3, 1, "", "batch_size"], [109, 1, 1, "", "bfloat16"], [109, 1, 1, "", "buffers"], [109, 1, 1, "", "children"], [109, 1, 1, "", "compile"], [109, 1, 1, "", "cpu"], [109, 1, 1, "", "cuda"], [109, 3, 1, "", "done_key"], [109, 3, 1, "", "done_keys"], [109, 3, 1, "", "done_keys_groups"], [109, 3, 1, "", "done_spec"], [109, 1, 1, "", "double"], [109, 1, 1, "", "empty_cache"], [109, 1, 1, "", "eval"], [109, 1, 1, "", "extra_repr"], [109, 1, 1, "", "fake_tensordict"], [109, 1, 1, "", "float"], [109, 1, 1, "", "forward"], [109, 3, 1, "", "full_action_spec"], [109, 3, 1, "", "full_done_spec"], [109, 3, 1, "", "full_reward_spec"], [109, 3, 1, "", "full_state_spec"], [109, 1, 1, "", "get_buffer"], [109, 1, 1, "", "get_extra_state"], [109, 1, 1, "", "get_parameter"], [109, 1, 1, "", "get_submodule"], [109, 1, 1, "", "half"], [109, 3, 1, "", "input_spec"], [109, 1, 1, "", "ipu"], [109, 1, 1, "", "load_state_dict"], [109, 1, 1, "", "maybe_reset"], [109, 1, 1, "", "modules"], [109, 1, 1, "", "named_buffers"], [109, 1, 1, "", "named_children"], [109, 1, 1, "", "named_modules"], [109, 1, 1, "", "named_parameters"], [109, 3, 1, "", "observation_spec"], [109, 3, 1, "", "output_spec"], [109, 1, 1, "", "parameters"], [109, 1, 1, "", "rand_action"], [109, 1, 1, "", "rand_step"], [109, 1, 1, "", "register_backward_hook"], [109, 1, 1, "", "register_buffer"], [109, 1, 1, "", "register_forward_hook"], [109, 1, 1, "", "register_forward_pre_hook"], [109, 1, 1, "", "register_full_backward_hook"], [109, 1, 1, "", "register_full_backward_pre_hook"], [109, 1, 1, "", "register_gym"], [109, 1, 1, "", "register_load_state_dict_post_hook"], [109, 1, 1, "", "register_module"], [109, 1, 1, "", "register_parameter"], [109, 1, 1, "", "register_state_dict_pre_hook"], [109, 1, 1, "", "requires_grad_"], [109, 1, 1, "", "reset"], [109, 3, 1, "", "reset_keys"], [109, 3, 1, "", "reward_key"], [109, 3, 1, "", "reward_keys"], [109, 3, 1, "", "reward_spec"], [109, 1, 1, "", "rollout"], [109, 1, 1, "", "set_extra_state"], [109, 1, 1, "", "set_seed"], [109, 3, 1, "", "shape"], [109, 1, 1, "", "share_memory"], [109, 3, 1, "", "specs"], [109, 1, 1, "", "state_dict"], [109, 3, 1, "", "state_spec"], [109, 1, 1, "", "step"], [109, 1, 1, "", "step_and_maybe_reset"], [109, 1, 1, "", "to"], [109, 1, 1, "", "to_empty"], [109, 1, 1, "", "train"], [109, 1, 1, "", "type"], [109, 1, 1, "", "update_kwargs"], [109, 1, 1, "", "xpu"], [109, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[114, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[116, 0, 1, "", "ActionMask"], [117, 0, 1, "", "BinarizeReward"], [118, 0, 1, "", "BurnInTransform"], [119, 0, 1, "", "CatFrames"], [120, 0, 1, "", "CatTensors"], [121, 0, 1, "", "CenterCrop"], [122, 0, 1, "", "ClipTransform"], [123, 0, 1, "", "Compose"], [124, 0, 1, "", "DTypeCastTransform"], [125, 0, 1, "", "DeviceCastTransform"], [126, 0, 1, "", "DiscreteActionProjection"], [127, 0, 1, "", "DoubleToFloat"], [128, 0, 1, "", "EndOfLifeTransform"], [129, 0, 1, "", "ExcludeTransform"], [130, 0, 1, "", "FiniteTensorDictCheck"], [131, 0, 1, "", "FlattenObservation"], [132, 0, 1, "", "FrameSkipTransform"], [133, 0, 1, "", "GrayScale"], [134, 0, 1, "", "InitTracker"], [135, 0, 1, "", "KLRewardTransform"], [136, 0, 1, "", "NoopResetEnv"], [137, 0, 1, "", "ObservationNorm"], [138, 0, 1, "", "ObservationTransform"], [139, 0, 1, "", "PermuteTransform"], [140, 0, 1, "", "PinMemoryTransform"], [141, 0, 1, "", "R3MTransform"], [142, 0, 1, "", "RandomCropTensorDict"], [143, 0, 1, "", "RemoveEmptySpecs"], [144, 0, 1, "", "RenameTransform"], [145, 0, 1, "", "Resize"], [146, 0, 1, "", "Reward2GoTransform"], [147, 0, 1, "", "RewardClipping"], [148, 0, 1, "", "RewardScaling"], [149, 0, 1, "", "RewardSum"], [150, 0, 1, "", "SelectTransform"], [151, 0, 1, "", "SignTransform"], [152, 0, 1, "", "SqueezeTransform"], [153, 0, 1, "", "StepCounter"], [154, 0, 1, "", "TargetReturn"], [155, 0, 1, "", "TensorDictPrimer"], [156, 0, 1, "", "TimeMaxPool"], [157, 0, 1, "", "ToTensorImage"], [158, 0, 1, "", "Transform"], [159, 0, 1, "", "TransformedEnv"], [160, 0, 1, "", "UnsqueezeTransform"], [161, 0, 1, "", "VC1Transform"], [162, 0, 1, "", "VIPRewardTransform"], [163, 0, 1, "", "VIPTransform"], [164, 0, 1, "", "VecGymEnvTransform"], [165, 0, 1, "", "VecNorm"], [166, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[116, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[117, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[118, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[122, 1, 1, "", "transform_observation_spec"], [122, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "to"], [123, 1, 1, "", "transform_env_device"], [123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_observation_spec"], [123, 1, 1, "", "transform_output_spec"], [123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"], [124, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_done_spec"], [125, 1, 1, "", "transform_env_device"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"], [125, 1, 1, "", "transform_output_spec"], [125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[126, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "register_keys"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[130, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[132, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[133, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[137, 1, 1, "", "init_stats"], [137, 1, 1, "", "transform_input_spec"], [137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[141, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_input_spec"], [144, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[146, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[147, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[151, 1, 1, "", "transform_observation_spec"], [151, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_observation_spec"], [153, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "to"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[158, 3, 1, "", "container"], [158, 1, 1, "", "forward"], [158, 3, 1, "", "parent"], [158, 1, 1, "", "to"], [158, 1, 1, "", "transform_done_spec"], [158, 1, 1, "", "transform_env_device"], [158, 1, 1, "", "transform_input_spec"], [158, 1, 1, "", "transform_observation_spec"], [158, 1, 1, "", "transform_output_spec"], [158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[159, 3, 1, "", "batch_locked"], [159, 3, 1, "", "batch_size"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 3, 1, "", "input_spec"], [159, 1, 1, "", "load_state_dict"], [159, 3, 1, "", "output_spec"], [159, 1, 1, "", "set_missing_tolerance"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "state_dict"], [159, 1, 1, "", "to"], [159, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[160, 1, 1, "", "transform_input_spec"], [160, 1, 1, "", "transform_observation_spec"], [160, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "make_noload_model"], [161, 1, 1, "", "to"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[163, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[165, 1, 1, "", "build_td_for_shared_vecnorm"], [165, 1, 1, "", "forward"], [165, 1, 1, "", "get_extra_state"], [165, 1, 1, "", "set_extra_state"], [165, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.rb_transforms": [[167, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[167, 1, 1, "", "add_module"], [167, 1, 1, "", "apply"], [167, 1, 1, "", "bfloat16"], [167, 1, 1, "", "buffers"], [167, 1, 1, "", "children"], [167, 1, 1, "", "compile"], [167, 3, 1, "", "container"], [167, 1, 1, "", "cpu"], [167, 1, 1, "", "cuda"], [167, 1, 1, "", "double"], [167, 1, 1, "", "eval"], [167, 1, 1, "", "extra_repr"], [167, 1, 1, "", "float"], [167, 1, 1, "", "forward"], [167, 1, 1, "", "get_buffer"], [167, 1, 1, "", "get_extra_state"], [167, 1, 1, "", "get_parameter"], [167, 1, 1, "", "get_submodule"], [167, 1, 1, "", "half"], [167, 1, 1, "", "ipu"], [167, 1, 1, "", "load_state_dict"], [167, 1, 1, "", "modules"], [167, 3, 1, "", "n_steps"], [167, 1, 1, "", "named_buffers"], [167, 1, 1, "", "named_children"], [167, 1, 1, "", "named_modules"], [167, 1, 1, "", "named_parameters"], [167, 1, 1, "", "parameters"], [167, 3, 1, "", "parent"], [167, 1, 1, "", "register_backward_hook"], [167, 1, 1, "", "register_buffer"], [167, 1, 1, "", "register_forward_hook"], [167, 1, 1, "", "register_forward_pre_hook"], [167, 1, 1, "", "register_full_backward_hook"], [167, 1, 1, "", "register_full_backward_pre_hook"], [167, 1, 1, "", "register_load_state_dict_post_hook"], [167, 1, 1, "", "register_module"], [167, 1, 1, "", "register_parameter"], [167, 1, 1, "", "register_state_dict_pre_hook"], [167, 1, 1, "", "requires_grad_"], [167, 1, 1, "", "set_extra_state"], [167, 1, 1, "", "share_memory"], [167, 1, 1, "", "state_dict"], [167, 1, 1, "", "to"], [167, 1, 1, "", "to_empty"], [167, 1, 1, "", "train"], [167, 1, 1, "", "transform_done_spec"], [167, 1, 1, "", "transform_env_device"], [167, 1, 1, "", "transform_input_spec"], [167, 1, 1, "", "transform_observation_spec"], [167, 1, 1, "", "transform_output_spec"], [167, 1, 1, "", "transform_reward_spec"], [167, 1, 1, "", "type"], [167, 1, 1, "", "xpu"], [167, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[168, 2, 1, "", "check_env_specs"], [169, 2, 1, "", "exploration_mode"], [170, 2, 1, "", "exploration_type"], [171, 2, 1, "", "get_available_libraries"], [172, 2, 1, "", "make_composite_from_td"], [173, 2, 1, "", "set_exploration_mode"], [174, 2, 1, "", "set_exploration_type"], [175, 2, 1, "", "step_mdp"], [176, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[177, 0, 1, "", "CEMPlanner"], [178, 0, 1, "", "Conv3dNet"], [179, 0, 1, "", "ConvNet"], [180, 0, 1, "", "DTActor"], [181, 0, 1, "", "DdpgCnnActor"], [182, 0, 1, "", "DdpgCnnQNet"], [183, 0, 1, "", "DdpgMlpActor"], [184, 0, 1, "", "DdpgMlpQNet"], [185, 0, 1, "", "DecisionTransformer"], [186, 0, 1, "", "Delta"], [187, 0, 1, "", "DistributionalDQNnet"], [188, 0, 1, "", "DistributionalQValueHook"], [189, 0, 1, "", "DreamerActor"], [190, 0, 1, "", "DuelingCnnDQNet"], [191, 0, 1, "", "GRU"], [192, 0, 1, "", "GRUCell"], [193, 0, 1, "", "GRUModule"], [194, 0, 1, "", "IndependentNormal"], [195, 0, 1, "", "LSTM"], [196, 0, 1, "", "LSTMCell"], [197, 0, 1, "", "LSTMModule"], [198, 0, 1, "", "LSTMNet"], [199, 0, 1, "", "MLP"], [200, 0, 1, "", "MPCPlannerBase"], [201, 0, 1, "", "MPPIPlanner"], [202, 0, 1, "", "MaskedCategorical"], [203, 0, 1, "", "MaskedOneHotCategorical"], [204, 0, 1, "", "MultiAgentConvNet"], [205, 0, 1, "", "MultiAgentMLP"], [206, 0, 1, "", "NoisyLazyLinear"], [207, 0, 1, "", "NoisyLinear"], [208, 0, 1, "", "NormalParamWrapper"], [209, 0, 1, "", "ObsDecoder"], [210, 0, 1, "", "ObsEncoder"], [211, 0, 1, "", "OneHotCategorical"], [212, 0, 1, "", "OnlineDTActor"], [213, 0, 1, "", "QMixer"], [214, 0, 1, "", "QValueHook"], [215, 0, 1, "", "RSSMPosterior"], [216, 0, 1, "", "RSSMPrior"], [217, 0, 1, "", "Squeeze2dLayer"], [218, 0, 1, "", "SqueezeLayer"], [219, 0, 1, "", "TanhDelta"], [220, 0, 1, "", "TanhNormal"], [221, 0, 1, "", "TruncatedNormal"], [222, 0, 1, "", "VDNMixer"], [223, 0, 1, "", "VmapModule"], [224, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[177, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[178, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[179, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[180, 1, 1, "", "default_config"], [180, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[181, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[182, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[183, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[184, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[185, 0, 1, "", "DTConfig"], [185, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[186, 1, 1, "", "log_prob"], [186, 3, 1, "", "mean"], [186, 3, 1, "", "mode"], [186, 1, 1, "", "rsample"], [186, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[187, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[189, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[190, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[191, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[192, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[193, 1, 1, "", "forward"], [193, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[194, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[195, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[196, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[197, 1, 1, "", "forward"], [197, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[198, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[199, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[201, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[202, 1, 1, "", "log_prob"], [202, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[203, 1, 1, "", "log_prob"], [203, 1, 1, "", "rsample"], [203, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[206, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[208, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[209, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[210, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[211, 1, 1, "", "log_prob"], [211, 3, 1, "", "mode"], [211, 1, 1, "", "rsample"], [211, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[212, 1, 1, "", "default_config"], [212, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[213, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[215, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[216, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[218, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[219, 3, 1, "", "mean"], [219, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[220, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[221, 1, 1, "", "log_prob"], [221, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[222, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[223, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[225, 0, 1, "", "Actor"], [226, 0, 1, "", "ActorCriticOperator"], [227, 0, 1, "", "ActorCriticWrapper"], [228, 0, 1, "", "ActorValueOperator"], [229, 0, 1, "", "AdditiveGaussianWrapper"], [230, 0, 1, "", "DecisionTransformerInferenceWrapper"], [231, 0, 1, "", "DistributionalQValueActor"], [232, 0, 1, "", "DistributionalQValueModule"], [233, 0, 1, "", "EGreedyModule"], [234, 0, 1, "", "EGreedyWrapper"], [235, 0, 1, "", "LMHeadActorValueOperator"], [236, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [237, 0, 1, "", "ProbabilisticActor"], [238, 0, 1, "", "QValueActor"], [239, 0, 1, "", "QValueModule"], [240, 0, 1, "", "SafeModule"], [241, 0, 1, "", "SafeProbabilisticModule"], [242, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [243, 0, 1, "", "SafeSequential"], [244, 0, 1, "", "TanhModule"], [245, 0, 1, "", "ValueOperator"], [246, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[226, 1, 1, "", "get_critic_operator"], [226, 1, 1, "", "get_policy_head"], [226, 1, 1, "", "get_value_head"], [226, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[227, 1, 1, "", "get_policy_head"], [227, 1, 1, "", "get_policy_operator"], [227, 1, 1, "", "get_value_head"], [227, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[228, 1, 1, "", "get_policy_head"], [228, 1, 1, "", "get_policy_operator"], [228, 1, 1, "", "get_value_head"], [228, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "mask_context"], [230, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[232, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[239, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[240, 1, 1, "", "random"], [240, 1, 1, "", "random_sample"], [240, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[241, 1, 1, "", "random"], [241, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[244, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[246, 1, 1, "", "get_reward_operator"], [246, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[247, 0, 1, "", "biased_softplus"], [248, 0, 1, "", "inv_softplus"], [249, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[247, 1, 1, "", "forward"]], "torchrl.objectives": [[250, 0, 1, "", "A2CLoss"], [251, 0, 1, "", "CQLLoss"], [252, 0, 1, "", "ClipPPOLoss"], [253, 0, 1, "", "DDPGLoss"], [254, 0, 1, "", "DQNLoss"], [255, 0, 1, "", "DTLoss"], [256, 0, 1, "", "DiscreteCQLLoss"], [257, 0, 1, "", "DiscreteIQLLoss"], [258, 0, 1, "", "DiscreteSACLoss"], [259, 0, 1, "", "DistributionalDQNLoss"], [260, 0, 1, "", "DreamerActorLoss"], [261, 0, 1, "", "DreamerModelLoss"], [262, 0, 1, "", "DreamerValueLoss"], [263, 0, 1, "", "HardUpdate"], [264, 0, 1, "", "IQLLoss"], [265, 0, 1, "", "KLPENPPOLoss"], [266, 0, 1, "", "LossModule"], [267, 0, 1, "", "OnlineDTLoss"], [268, 0, 1, "", "PPOLoss"], [269, 0, 1, "", "REDQLoss"], [270, 0, 1, "", "ReinforceLoss"], [271, 0, 1, "", "SACLoss"], [272, 0, 1, "", "SoftUpdate"], [273, 0, 1, "", "TD3Loss"], [274, 0, 1, "", "ValueEstimators"], [275, 0, 1, "", "default_value_kwargs"], [276, 0, 1, "", "distance_loss"], [277, 0, 1, "", "hold_out_net"], [278, 0, 1, "", "hold_out_params"], [280, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[252, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[255, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[257, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[261, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[262, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "loss_value_diff"], [264, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[265, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[266, 1, 1, "", "convert_to_functional"], [266, 1, 1, "", "forward"], [266, 1, 1, "", "make_value_estimator"], [266, 1, 1, "", "named_parameters"], [266, 1, 1, "", "parameters"], [266, 1, 1, "", "set_keys"], [266, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[267, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "load_state_dict"], [271, 1, 1, "", "make_value_estimator"], [271, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[279, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[281, 0, 1, "", "GAE"], [282, 0, 1, "", "TD0Estimator"], [283, 0, 1, "", "TD1Estimator"], [284, 0, 1, "", "TDLambdaEstimator"], [285, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "set_keys"], [285, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[286, 0, 1, "", "generalized_advantage_estimate"], [287, 0, 1, "", "reward2go"], [288, 0, 1, "", "td0_advantage_estimate"], [289, 0, 1, "", "td0_return_estimate"], [290, 0, 1, "", "td1_advantage_estimate"], [291, 0, 1, "", "td1_return_estimate"], [292, 0, 1, "", "td_lambda_advantage_estimate"], [293, 0, 1, "", "td_lambda_return_estimate"], [294, 0, 1, "", "vec_generalized_advantage_estimate"], [295, 0, 1, "", "vec_td1_advantage_estimate"], [296, 0, 1, "", "vec_td1_return_estimate"], [297, 0, 1, "", "vec_td_lambda_advantage_estimate"], [298, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[299, 2, 1, "", "TensorDictRecorder"], [300, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[301, 2, 1, "", "Logger"], [303, 2, 1, "", "generate_exp_name"], [304, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[302, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[305, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[306, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[307, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[308, 0, 1, "", "BatchSubSampler"], [309, 0, 1, "", "ClearCudaCache"], [310, 0, 1, "", "CountFramesLog"], [311, 0, 1, "", "LogReward"], [312, 0, 1, "", "OptimizerHook"], [313, 0, 1, "", "Recorder"], [314, 0, 1, "", "ReplayBufferTrainer"], [315, 0, 1, "", "RewardNormalizer"], [316, 0, 1, "", "SelectKeys"], [317, 0, 1, "", "Trainer"], [318, 0, 1, "", "TrainerHookBase"], [319, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[308, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[309, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[310, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[311, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[312, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[313, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[314, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[315, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[316, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[318, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[319, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[320, 2, 1, "", "correct_for_frame_skip"], [321, 2, 1, "", "get_stats_random_rollout"], [322, 2, 1, "", "make_collector_offpolicy"], [323, 2, 1, "", "make_collector_onpolicy"], [324, 2, 1, "", "make_dqn_loss"], [325, 2, 1, "", "make_redq_loss"], [326, 2, 1, "", "make_redq_model"], [327, 2, 1, "", "make_replay_buffer"], [328, 2, 1, "", "make_target_updater"], [329, 2, 1, "", "make_trainer"], [330, 2, 1, "", "parallel_env_constructor"], [331, 2, 1, "", "sync_async_collector"], [332, 2, 1, "", "sync_sync_collector"], [333, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 337, 338, 339, 340, 342, 343, 344, 347, 354, 355, 359, 360], "instal": [0, 6, 7, 359], "get": [0, 346, 347, 348, 349, 350, 351], "start": [0, 346, 347, 348, 349, 350, 351], "tutori": [0, 344, 354], "basic": [0, 357], "intermedi": [0, 8], "advanc": 0, "refer": [0, 335], "knowledg": [0, 336], "base": [0, 2, 7, 336], "indic": 0, "tabl": 0, "collector": [1, 342, 343, 344, 345, 349, 351, 354, 359], "packag": [1, 2, 3, 337, 338, 339, 340], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 342, 343, 344, 349, 351, 354, 359], "distribut": [1, 337], "helper": [1, 3], "function": [1, 4, 338, 343, 344, 348, 354, 359], "replai": [2, 342, 343, 344, 345, 349, 351, 354, 357, 359], "buffer": [2, 342, 343, 344, 345, 349, 351, 354, 357, 359], "compos": [2, 123], "support": 2, "type": 2, "choos": 2, "storag": [2, 74, 342, 349, 357], "sampl": [2, 357], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 343, 357], "trajectori": [2, 357], "checkpoint": [2, 339], "episod": [2, 4], "format": 2, "ted": [2, 346], "The": [2, 342], "rational": 2, "behind": 2, "structur": [2, 357], "dimension": [2, 4], "tensordict": [2, 337, 357, 359], "special": [2, 347, 359], "case": 2, "footnot": 2, "multi": [2, 3, 337, 338, 353, 354], "agent": [2, 3, 4, 337, 338, 354], "present": 2, "memori": 2, "polici": [2, 4, 342, 344, 345, 347, 351, 353, 354, 355], "rnn": 2, "transform": [2, 3, 158, 342, 344, 346, 354, 355, 357, 359, 360], "step": [2, 342, 344, 346, 349, 354, 357, 360], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 43], "reinforc": [2, 338, 344, 354], "learn": [2, 4, 344, 354], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 337, 338, 339], "env": [3, 355, 359, 360], "vector": [3, 359], "environ": [3, 4, 6, 7, 342, 343, 344, 345, 346, 351, 353, 354, 355, 359, 360], "clone": [3, 7], "mask": 3, "action": [3, 4, 345, 355], "record": [3, 313, 339, 342, 350], "domain": [3, 337], "specif": [3, 337, 353], "librari": [3, 359], "thing": [4, 342, 355], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 346, 348, 359], "gener": [4, 337], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 342, 351, 355], "algorithm": [4, 337], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 342, 343, 348, 351], "return": [4, 338], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 359], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 353], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 342, 343, 344], "standard": 4, "explor": [4, 337, 342, 343, 347], "valu": [4, 337, 338, 342, 344, 345, 347], "loss": [4, 342, 343, 344, 345, 351, 354], "earli": 4, "train": [4, 8, 338, 342, 344, 345, 348, 351, 354, 355], "roughli": 4, "uniformli": 4, "random": [4, 354], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 343], "increas": 4, "an": [4, 344, 345, 346, 355], "dynam": [4, 357], "can": 4, "low": 4, "forward": [4, 342], "model": [4, 337, 342, 343, 345, 348, 356, 359], "also": 4, "us": [4, 6, 9, 345, 356, 357, 359], "offlin": 4, "observ": [4, 342], "space": 4, "effect": [4, 355], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 360], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 342], "render": [7, 351, 354, 360], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 342], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 355], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "onehotdiscretetensorspec": 32, "pairwisedataset": 33, "prioritizedreplaybuff": 34, "promptdata": 35, "prompttensordicttoken": 36, "replaybuff": 37, "rewarddata": 38, "rolloutfrommodel": 39, "tensordictprioritizedreplaybuff": 40, "tensordictreplaybuff": 41, "tensordicttoken": 42, "tokenizeddatasetload": 44, "unboundedcontinuoustensorspec": 45, "unboundeddiscretetensorspec": 46, "check_no_exclusive_kei": 47, "consolidate_spec": 48, "contains_lazy_spec": 49, "create_infinite_iter": 50, "ataridqnexperiencereplai": 51, "d4rlexperiencereplai": 52, "gendgrlexperiencereplai": 53, "minariexperiencereplai": 54, "openmlexperiencereplai": 55, "openxexperiencereplai": 56, "robosetexperiencereplai": 57, "vd4rlexperiencereplai": 58, "get_dataload": 59, "immutabledatasetwrit": 60, "lazymemmapstorag": 61, "lazytensorstorag": 62, "liststorag": 63, "prioritizedsampl": 64, "prioritizedslicesampl": 65, "randomsampl": 66, "replaybufferensembl": 67, "roundrobinwrit": 68, "sampler": 69, "samplerensembl": 70, "samplerwithoutreplac": 71, "slicesampl": 72, "slicesamplerwithoutreplac": 73, "storageensembl": 75, "tensordictmaxvaluewrit": 76, "tensordictroundrobinwrit": 77, "tensorstorag": 78, "writer": 79, "writerensembl": 80, "braxenv": 81, "braxwrapp": 82, "dmcontrolenv": 83, "dmcontrolwrapp": 84, "envbas": [85, 355], "envcreat": 86, "envmetadata": 87, "gymenv": 88, "gymlikeenv": 89, "gymwrapp": 90, "habitatenv": 91, "isaacgymenv": 92, "isaacgymwrapp": 93, "jumanjienv": 94, "jumanjiwrapp": 95, "mogymenv": 96, "mogymwrapp": 97, "marlgroupmaptyp": 98, "modelbasedenvbas": 99, "multithreadedenv": 100, "multithreadedenvwrapp": 101, "openmlenv": 102, "parallelenv": 103, "pettingzooenv": 104, "pettingzoowrapp": 105, "robohiveenv": 106, "smacv2env": 107, "smacv2wrapp": 108, "serialenv": 109, "vmasenv": 110, "vmaswrapp": 111, "check_marl_group": 112, "gym_backend": 113, "dreamerenv": 114, "set_gym_backend": 115, "actionmask": 116, "binarizereward": 117, "burnintransform": 118, "catfram": [119, 357], "cattensor": 120, "centercrop": 121, "cliptransform": 122, "dtypecasttransform": 124, "devicecasttransform": 125, "discreteactionproject": 126, "doubletofloat": 127, "endoflifetransform": 128, "excludetransform": 129, "finitetensordictcheck": 130, "flattenobserv": 131, "frameskiptransform": 132, "grayscal": 133, "inittrack": 134, "klrewardtransform": 135, "noopresetenv": 136, "observationnorm": 137, "observationtransform": 138, "permutetransform": 139, "pinmemorytransform": 140, "r3mtransform": 141, "randomcroptensordict": 142, "removeemptyspec": 143, "renametransform": 144, "resiz": 145, "reward2gotransform": 146, "rewardclip": 147, "rewardsc": 148, "rewardsum": 149, "selecttransform": 150, "signtransform": 151, "squeezetransform": 152, "stepcount": 153, "targetreturn": 154, "tensordictprim": 155, "timemaxpool": 156, "totensorimag": 157, "transformedenv": 159, "unsqueezetransform": 160, "vc1transform": 161, "viprewardtransform": 162, "viptransform": 163, "vecgymenvtransform": 164, "vecnorm": [165, 360], "gsdenois": 166, "multisteptransform": 167, "check_env_spec": 168, "exploration_mod": 169, "exploration_typ": 170, "get_available_librari": 171, "make_composite_from_td": 172, "set_exploration_mod": 173, "set_exploration_typ": 174, "step_mdp": 175, "terminated_or_trunc": 176, "cemplann": 177, "conv3dnet": 178, "convnet": 179, "dtactor": 180, "ddpgcnnactor": 181, "ddpgcnnqnet": 182, "ddpgmlpactor": 183, "ddpgmlpqnet": 184, "decisiontransform": 185, "delta": 186, "distributionaldqnnet": 187, "distributionalqvaluehook": 188, "dreameractor": 189, "duelingcnndqnet": 190, "gru": 191, "grucel": 192, "grumodul": 193, "independentnorm": 194, "lstm": [195, 345], "lstmcell": 196, "lstmmodul": 197, "lstmnet": 198, "mlp": [199, 345], "mpcplannerbas": 200, "mppiplann": 201, "maskedcategor": 202, "maskedonehotcategor": 203, "multiagentconvnet": 204, "multiagentmlp": 205, "noisylazylinear": 206, "noisylinear": 207, "normalparamwrapp": 208, "obsdecod": 209, "obsencod": 210, "onehotcategor": 211, "onlinedtactor": 212, "qmixer": [213, 338], "qvaluehook": 214, "rssmposterior": 215, "rssmprior": 216, "squeeze2dlay": 217, "squeezelay": 218, "tanhdelta": 219, "tanhnorm": 220, "truncatednorm": 221, "vdnmixer": 222, "vmapmodul": 223, "reset_nois": 224, "actor": [225, 337, 342, 347], "actorcriticoper": 226, "actorcriticwrapp": 227, "actorvalueoper": 228, "additivegaussianwrapp": 229, "decisiontransformerinferencewrapp": 230, "distributionalqvalueactor": 231, "distributionalqvaluemodul": 232, "egreedymodul": 233, "egreedywrapp": 234, "lmheadactorvalueoper": 235, "ornsteinuhlenbeckprocesswrapp": 236, "probabilisticactor": 237, "qvalueactor": 238, "qvaluemodul": 239, "safemodul": [240, 337], "safeprobabilisticmodul": 241, "safeprobabilistictensordictsequenti": 242, "safesequenti": 243, "tanhmodul": 244, "valueoper": 245, "worldmodelwrapp": 246, "biased_softplu": 247, "inv_softplu": 248, "map": 249, "a2closs": 250, "cqlloss": 251, "clipppoloss": 252, "ddpgloss": 253, "dqnloss": 254, "dtloss": 255, "discretecqlloss": 256, "discreteiqlloss": 257, "discretesacloss": 258, "distributionaldqnloss": 259, "dreameractorloss": 260, "dreamermodelloss": 261, "dreamervalueloss": 262, "hardupd": 263, "iqlloss": 264, "klpenppoloss": 265, "lossmodul": [266, 342, 348], "onlinedtloss": 267, "ppoloss": 268, "redqloss": 269, "reinforceloss": 270, "sacloss": 271, "softupd": 272, "td3loss": 273, "valueestim": 274, "default_value_kwarg": 275, "distance_loss": 276, "hold_out_net": 277, "hold_out_param": 278, "qmixerloss": 279, "next_state_valu": 280, "gae": 281, "td0estim": 282, "td1estim": 283, "tdlambdaestim": 284, "valueestimatorbas": 285, "generalized_advantage_estim": 286, "reward2go": 287, "td0_advantage_estim": 288, "td0_return_estim": 289, "td1_advantage_estim": 290, "td1_return_estim": 291, "td_lambda_advantage_estim": 292, "td_lambda_return_estim": 293, "vec_generalized_advantage_estim": 294, "vec_td1_advantage_estim": 295, "vec_td1_return_estim": 296, "vec_td_lambda_advantage_estim": 297, "vec_td_lambda_return_estim": 298, "tensordictrecord": 299, "videorecord": 300, "logger": [301, 339, 350, 351], "csvlogger": 302, "generate_exp_nam": 303, "get_logg": 304, "mlflowlogg": 305, "tensorboardlogg": 306, "wandblogg": 307, "batchsubsampl": 308, "clearcudacach": 309, "countframeslog": 310, "logreward": 311, "optimizerhook": 312, "replaybuffertrain": 314, "rewardnorm": 315, "selectkei": 316, "trainer": [317, 339, 343], "trainerhookbas": 318, "updateweight": 319, "correct_for_frame_skip": 320, "get_stats_random_rollout": 321, "make_collector_offpolici": 322, "make_collector_onpolici": 323, "make_dqn_loss": 324, "make_redq_loss": 325, "make_redq_model": 326, "make_replay_buff": 327, "make_target_updat": 328, "make_train": 329, "parallel_env_constructor": 330, "sync_async_collector": 331, "sync_sync_collector": 332, "transformed_env_constructor": 333, "readm": [334, 352], "tuto": [334, 352], "api": 335, "contribut": [336, 359], "content": 336, "modul": [337, 342, 345, 347, 351, 359], "wrapper": [337, 347], "probabilist": [337, 347], "q": [337, 343, 345, 347], "oper": 337, "join": 337, "hook": [337, 339, 343], "regular": 337, "planner": 337, "object": [338, 342, 348, 359], "dqn": [338, 343, 345], "ddpg": [338, 342], "sac": 338, "redq": 338, "iql": 338, "cql": 338, "dt": 338, "td3": 338, "ppo": [338, 344, 354], "a2c": 338, "dreamer": 338, "builder": 339, "_util": 340, "comput": [341, 343, 355, 358], "time": [341, 342, 358], "code": [342, 355], "overview": [342, 345], "setup": [342, 345], "__init__": 342, "method": 342, "estim": 342, "put": 342, "togeth": [342, 355], "call": 342, "parallel": [342, 353, 360], "execut": [342, 353, 355], "stat": 342, "build": [342, 343, 351, 357], "evalu": 342, "batch": [342, 355, 357], "size": [342, 357], "construct": 342, "target": [342, 343, 348], "network": [342, 343, 344, 345, 347, 354], "updat": 342, "experi": [342, 355], "result": [342, 344, 354], "conclus": [342, 343, 344, 345, 354, 355, 357], "next": [342, 344, 346, 349, 354, 357], "A": [343, 357], "exampl": [343, 357], "deep": 343, "collect": [343, 344, 349], "paramet": [343, 344, 348], "hyperparamet": [343, 344, 354], "regist": 343, "possibl": 343, "improv": 343, "defin": [344, 354], "loop": [344, 345, 351, 354, 355], "recurr": 345, "convolut": 345, "select": 345, "further": [345, 348], "read": 345, "creat": 346, "run": [346, 360], "rollout": [346, 353, 354, 355, 360], "s": [347, 348], "tensordictmodul": [347, 359], "output": 348, "consider": 348, "log": 350, "video": 350, "own": 351, "first": 351, "design": 351, "divers": 353, "critic": 354, "pendulum": 355, "write": 355, "_step": 355, "reset": [355, 360], "simul": 355, "_reset": 355, "metadata": 355, "_spec": 355, "spec": [355, 360], "shape": 355, "seed": [355, 360], "wrap": 355, "class": [355, 359], "test": 355, "our": 355, "custom": [355, 357], "simpl": 355, "pretrain": 356, "vanilla": 357, "integr": 357, "tensorclass": 357, "other": 357, "tensor": 357, "pytre": 357, "iter": 357, "over": 357, "fix": 357, "priorit": 357, "save": 357, "raw": 357, "imag": 357, "more": 357, "complex": 357, "introduct": 359, "config": 359, "sequenc": 359, "program": 359, "ensembl": 359, "meta": 359, "state": 359, "frame_skip": 360, "deepmind": 360, "control": 360, "devic": 360, "close": 360, "access": 360, "attribut": 360, "kwarg": 360}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})