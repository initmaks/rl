Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 91, 99, 100, 102, 103, 104, 105, 106, 109, 112, 116, 118, 119, 121, 124, 126, 127, 130, 136, 137, 141, 142, 143, 144, 146, 154, 155, 156, 157, 158, 159, 161, 164, 165, 167, 177, 178, 180, 181, 182, 183, 190, 192, 194, 196, 197, 198, 199, 203, 204, 205, 209, 216, 217, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 245, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 302, 306, 311, 312, 316, 317, 320, 329, 330, 331, 332, 335, 336, 337, 341, 342, 346, 347, 349, 350, 352, 353], "open": [0, 5, 7, 11, 57, 342, 347, 352], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "reinforc": [0, 3, 9, 54, 119, 180, 181, 182, 183, 187, 231, 235, 249, 250, 254, 255, 256, 258, 262, 263, 269, 270, 271, 334, 340, 342, 345, 348, 351, 352], "learn": [0, 3, 7, 8, 9, 18, 32, 54, 55, 56, 58, 59, 102, 119, 180, 181, 182, 183, 187, 200, 206, 231, 235, 249, 250, 254, 255, 256, 258, 262, 263, 268, 269, 270, 271, 334, 336, 337, 340, 341, 342, 344, 345, 346, 348, 350, 351, 352, 353], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 52, 99, 154, 206, 224, 236, 244, 249, 251, 264, 265, 267, 269, 307, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 353], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 83, 84, 93, 100, 170, 334, 335, 336, 339, 341, 342, 343, 347, 348, 353], "pytorch": [0, 1, 2, 3, 55, 110, 111, 157, 190, 194, 205, 206, 316, 335, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 53, 59, 67, 70, 80, 85, 89, 91, 99, 100, 103, 104, 105, 109, 110, 111, 118, 128, 135, 137, 142, 154, 159, 164, 167, 180, 182, 188, 203, 204, 212, 214, 215, 221, 222, 231, 232, 235, 238, 240, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 279, 280, 306, 312, 325, 335, 336, 337, 341, 342, 344, 347, 348, 349, 350, 352, 353], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 70, 72, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 118, 119, 120, 121, 122, 124, 127, 131, 136, 137, 139, 141, 142, 145, 146, 149, 150, 154, 155, 156, 159, 161, 163, 164, 165, 175, 177, 178, 184, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 222, 224, 228, 231, 232, 233, 235, 236, 237, 238, 243, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 303, 307, 313, 320, 325, 328, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "python": [0, 3, 5, 6, 7, 10, 21, 101, 115, 190, 191, 192, 194, 195, 196, 201, 202, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "first": [0, 1, 2, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 53, 54, 55, 57, 58, 59, 62, 63, 72, 73, 78, 85, 89, 103, 109, 119, 120, 131, 137, 141, 142, 157, 159, 161, 190, 192, 194, 196, 198, 203, 204, 205, 209, 224, 229, 230, 231, 236, 237, 239, 240, 251, 260, 264, 265, 267, 298, 299, 315, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "low": [0, 25, 85, 89, 103, 109, 122, 126, 171, 231, 236, 243, 341, 342, 347, 348, 352], "high": [0, 9, 25, 41, 85, 89, 103, 109, 122, 126, 136, 171, 231, 236, 243, 280, 285, 293, 341, 342, 347, 348, 350, 352], "level": [0, 2, 3, 4, 22, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 119, 153, 264, 341, 342, 352], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 79, 85, 138, 199, 284, 308, 317, 338, 343, 348, 352], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 70, 71, 73, 74, 75, 78, 85, 86, 88, 89, 90, 98, 99, 102, 103, 104, 105, 106, 109, 110, 111, 118, 119, 122, 123, 124, 126, 127, 128, 130, 131, 135, 136, 139, 141, 146, 149, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 171, 175, 176, 183, 185, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 203, 206, 210, 212, 215, 229, 230, 232, 235, 236, 237, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 284, 306, 313, 328, 332, 336, 337, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 118, 126, 222, 265, 336, 352], "effici": [0, 1, 2, 4, 8, 190, 206, 336, 341, 342, 343, 344, 346, 347, 349, 350, 352], "modular": [0, 52, 242, 350, 352], "document": [0, 2, 5, 7, 18, 19, 21, 32, 57, 85, 89, 103, 109, 159, 342, 344, 352], "properli": [0, 85, 89, 103, 109, 343, 347, 348, 352], "test": [0, 3, 5, 81, 82, 94, 95, 161, 167, 192, 196, 197, 312, 328, 343, 344, 352], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 70, 72, 73, 74, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 118, 119, 123, 124, 127, 128, 129, 137, 139, 141, 146, 148, 149, 150, 153, 154, 155, 158, 159, 161, 163, 164, 174, 175, 176, 180, 181, 182, 183, 184, 187, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 213, 214, 215, 224, 225, 229, 230, 231, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 286, 299, 301, 304, 305, 306, 307, 311, 328, 330, 331, 334, 336, 337, 338, 342, 343, 344, 347, 348, 349, 350, 352, 353], "code": [0, 3, 5, 7, 8, 57, 85, 89, 103, 109, 141, 159, 161, 190, 191, 192, 194, 195, 196, 242, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353], "aim": [0, 2, 3, 7, 28, 29, 141, 161, 163, 198, 319, 335, 336, 337, 341, 342, 352], "support": [0, 1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 56, 59, 60, 62, 63, 74, 75, 78, 80, 81, 82, 90, 94, 95, 100, 102, 104, 106, 119, 128, 137, 155, 156, 158, 170, 187, 222, 230, 231, 236, 239, 242, 258, 280, 281, 282, 283, 304, 334, 336, 338, 343, 344, 347, 348, 350, 352], "research": [0, 7, 9, 352], "most": [0, 2, 3, 7, 8, 32, 72, 73, 85, 89, 103, 109, 126, 164, 341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "written": [0, 3, 11, 34, 36, 39, 45, 53, 54, 57, 62, 67, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 119, 128, 135, 149, 153, 156, 164, 174, 175, 224, 235, 236, 239, 240, 244, 249, 251, 264, 267, 269, 279, 298, 299, 336, 337, 338, 341, 344, 346, 348, 352], "highli": [0, 2, 352, 353], "wai": [0, 2, 3, 4, 52, 55, 67, 93, 141, 144, 163, 164, 194, 267, 280, 281, 282, 283, 336, 341, 342, 343, 346, 347, 348, 349, 350, 352, 353], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 71, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 103, 104, 105, 107, 108, 109, 110, 111, 115, 116, 118, 119, 122, 123, 124, 126, 127, 128, 136, 137, 141, 142, 146, 149, 153, 154, 155, 158, 159, 161, 163, 165, 175, 176, 190, 192, 193, 194, 196, 199, 200, 203, 204, 206, 207, 220, 222, 224, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 306, 312, 325, 330, 331, 332, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "easili": [0, 2, 3, 7, 85, 89, 103, 109, 325, 337, 341, 342, 343, 347, 352, 353], "swap": [0, 3, 88, 164, 343, 349, 352], "compon": [0, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 74, 75, 78, 187, 213, 230, 231, 238, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 311, 316, 341, 342, 343, 344, 346, 347, 348, 349, 352], "transform": [0, 1, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 67, 75, 85, 86, 89, 103, 104, 105, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 179, 180, 184, 187, 188, 211, 212, 213, 221, 229, 234, 243, 246, 248, 254, 266, 299, 313, 325, 332, 334, 340, 342, 344, 345, 349, 351], "them": [0, 2, 3, 7, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 80, 85, 86, 89, 93, 98, 103, 104, 105, 109, 110, 111, 124, 127, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 221, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 264, 270, 299, 341, 342, 344, 346, 347, 348, 349, 350, 352, 353], "write": [0, 2, 3, 8, 23, 32, 34, 36, 37, 39, 45, 67, 75, 80, 85, 89, 122, 139, 140, 149, 151, 153, 157, 175, 224, 239, 240, 242, 244, 252, 253, 255, 256, 257, 263, 268, 270, 272, 279, 284, 299, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353], "new": [0, 2, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 71, 85, 89, 100, 103, 107, 108, 109, 149, 158, 165, 174, 175, 190, 192, 196, 235, 239, 240, 245, 249, 250, 251, 253, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 306, 341, 343, 344, 347, 348, 352, 353], "ones": [0, 2, 15, 26, 32, 35, 38, 41, 42, 85, 89, 103, 109, 120, 123, 124, 125, 127, 137, 141, 146, 155, 158, 159, 161, 163, 201, 202, 222, 239, 249, 250, 252, 263, 267, 268, 270, 272, 286, 341, 343, 347, 348, 350, 352, 353], "littl": [0, 3, 43, 249, 251, 264, 267, 269, 343, 344, 350, 352, 353], "effort": [0, 3, 348, 350, 352], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 88, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 109, 110, 111, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 141, 142, 143, 144, 146, 149, 150, 151, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 284, 298, 306, 307, 309, 312, 313, 316, 318, 319, 320, 325, 328, 332, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "repo": [0, 6, 53, 119, 156, 161, 335, 347, 352], "attempt": [0, 72, 73, 83, 84, 88, 90, 91, 106, 228, 233, 235, 253, 256, 263, 278, 352], "align": [0, 190, 194, 352], "exist": [0, 3, 4, 11, 18, 21, 32, 34, 36, 39, 45, 85, 89, 103, 109, 120, 125, 159, 270, 320, 332, 347, 352, 353], "ecosystem": [0, 352], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 44, 46, 47, 52, 57, 67, 70, 72, 76, 85, 86, 89, 93, 103, 109, 110, 111, 119, 153, 154, 155, 156, 159, 190, 192, 194, 196, 203, 228, 231, 233, 235, 240, 264, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 70, 72, 73, 102, 165, 334, 341, 342, 349, 350, 352, 353], "pillar": [0, 352], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 119, 120, 124, 125, 126, 127, 132, 136, 137, 141, 142, 143, 149, 153, 154, 155, 156, 158, 159, 161, 164, 165, 167, 176, 192, 196, 197, 199, 200, 228, 235, 255, 259, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 309, 312, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 334, 335, 336, 340, 345, 349, 350, 351], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 85, 89, 99, 103, 109, 124, 141, 155, 161, 163, 166, 177, 178, 179, 184, 192, 196, 198, 199, 200, 204, 211, 212, 221, 225, 226, 227, 234, 239, 245, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 278, 316, 321, 322, 323, 324, 325, 334, 335, 338, 340, 343, 345, 347, 348, 350, 351, 353], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 116, 118, 119, 124, 125, 127, 129, 135, 137, 143, 146, 153, 164, 167, 171, 175, 176, 187, 192, 196, 197, 200, 203, 204, 213, 222, 224, 230, 232, 233, 235, 236, 237, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 306, 307, 313, 316, 318, 321, 328, 330, 331, 332, 334, 336, 337, 338, 344, 348, 349, 350, 353], "util": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 38, 40, 82, 85, 89, 94, 95, 103, 104, 105, 109, 112, 141, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 184, 190, 194, 246, 247, 248, 265, 328, 334, 339, 341, 343, 347, 348, 350, 352, 353], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 62, 63, 78, 85, 86, 89, 103, 109, 110, 118, 120, 123, 131, 137, 141, 149, 155, 158, 159, 161, 163, 167, 190, 192, 193, 194, 196, 200, 204, 207, 213, 219, 220, 229, 231, 236, 238, 239, 240, 270, 279, 280, 281, 282, 283, 307, 319, 331, 336, 341, 342, 343, 347, 349, 352, 353], "g": [0, 1, 2, 3, 7, 8, 10, 11, 32, 33, 85, 86, 89, 103, 109, 110, 118, 120, 123, 131, 137, 141, 149, 155, 158, 159, 161, 163, 167, 190, 192, 193, 194, 195, 196, 200, 204, 219, 220, 229, 236, 239, 240, 270, 279, 289, 290, 291, 292, 294, 295, 296, 297, 331, 336, 341, 342, 343, 347, 348, 349, 352, 353], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 52, 57, 72, 73, 119, 146, 153, 235, 313, 316, 318, 321, 322, 328, 330, 331, 334, 338, 350, 353], "contain": [0, 2, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 67, 68, 70, 72, 73, 74, 77, 79, 80, 85, 89, 99, 103, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 164, 165, 174, 175, 176, 177, 178, 190, 191, 194, 195, 198, 200, 204, 224, 230, 231, 236, 238, 239, 244, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 286, 303, 307, 319, 325, 328, 329, 330, 331, 332, 336, 337, 338, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "etc": [0, 2, 3, 7, 8, 11, 32, 46, 47, 57, 85, 89, 103, 109, 135, 159, 198, 204, 341, 342, 343, 350, 352, 353], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 74, 85, 89, 103, 104, 105, 109, 119, 124, 127, 128, 135, 136, 137, 153, 158, 159, 165, 167, 175, 177, 178, 197, 198, 203, 204, 222, 241, 242, 249, 251, 264, 267, 275, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 316, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "few": [0, 2, 8, 89, 299, 307, 343, 344, 347, 350, 352, 353], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 88, 90, 91, 106, 110, 111, 124, 127, 244, 267, 336, 341, 343, 344, 347, 348, 352, 353], "possibl": [0, 2, 3, 4, 27, 29, 32, 33, 34, 36, 39, 54, 57, 59, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 190, 191, 194, 195, 239, 312, 316, 336, 341, 343, 344, 347, 348, 350, 352, 353], "standard": [0, 3, 137, 148, 165, 176, 188, 200, 205, 206, 228, 229, 272, 280, 281, 282, 283, 341, 342, 347, 350, 352], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 85, 89, 103, 109, 157, 316, 348, 350, 352, 353], "common": [0, 2, 3, 4, 89, 94, 116, 225, 226, 227, 234, 249, 250, 251, 256, 257, 263, 264, 267, 268, 269, 270, 272, 328, 335, 336, 338, 341, 343, 346, 347, 348, 349, 352, 353], "openai": [0, 7, 88, 90, 106, 343, 348, 352, 353], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 85, 86, 88, 89, 90, 91, 93, 100, 101, 103, 106, 109, 110, 111, 113, 115, 119, 122, 128, 134, 135, 137, 139, 144, 146, 149, 155, 158, 164, 165, 325, 328, 335, 341, 342, 343, 344, 348, 349, 350, 352], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 72, 73, 78, 83, 84, 85, 88, 89, 90, 91, 93, 100, 101, 103, 104, 105, 106, 109, 119, 120, 122, 123, 124, 126, 127, 131, 137, 141, 142, 146, 153, 154, 155, 156, 158, 159, 161, 163, 165, 194, 196, 197, 203, 204, 224, 229, 230, 236, 237, 239, 240, 241, 242, 249, 251, 252, 256, 257, 263, 264, 265, 267, 268, 269, 270, 271, 272, 280, 281, 282, 283, 284, 306, 320, 338, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 70, 71, 72, 73, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 141, 142, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 218, 219, 220, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 304, 306, 307, 309, 310, 311, 312, 313, 314, 316, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 336, 344, 347, 348, 350, 352], "On": [0, 3, 7, 18, 19, 20, 21, 26, 54, 191, 195, 336, 342, 347], "end": [0, 2, 3, 13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 72, 73, 85, 89, 103, 109, 128, 139, 153, 154, 159, 177, 178, 190, 191, 194, 195, 199, 270, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "come": [0, 1, 2, 3, 8, 89, 98, 103, 109, 124, 127, 224, 225, 226, 227, 236, 244, 249, 251, 264, 267, 269, 341, 342, 343, 344, 347, 350, 352, 353], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 71, 74, 78, 85, 87, 89, 99, 103, 104, 105, 109, 110, 111, 115, 116, 119, 120, 123, 124, 127, 134, 135, 141, 146, 153, 154, 155, 156, 158, 159, 161, 163, 165, 167, 172, 173, 175, 190, 192, 194, 196, 199, 203, 204, 228, 229, 239, 257, 265, 267, 270, 284, 307, 312, 313, 322, 332, 335, 336, 337, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "re": [0, 3, 8, 32, 71, 85, 89, 103, 109, 196, 201, 202, 236, 240, 306, 338, 341, 343, 344, 346, 348, 352, 353], "usabl": [0, 338, 344, 352], "function": [0, 2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 62, 63, 64, 67, 74, 75, 78, 85, 86, 89, 103, 109, 115, 124, 127, 159, 165, 167, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 208, 209, 210, 211, 214, 215, 217, 220, 222, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 325, 328, 334, 336, 341, 344, 346, 348, 350, 353], "cost": [0, 2, 27, 57, 249, 251, 264, 267, 269, 341, 342, 347, 348, 350], "return": [0, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 175, 176, 179, 180, 181, 182, 183, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 210, 211, 212, 214, 215, 218, 219, 220, 221, 224, 225, 226, 227, 229, 236, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 299, 303, 316, 319, 321, 325, 328, 329, 330, 331, 332, 334, 336, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "process": [0, 1, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 43, 45, 52, 54, 58, 59, 85, 86, 89, 93, 98, 100, 103, 104, 105, 109, 118, 124, 127, 157, 165, 203, 204, 231, 235, 238, 334, 338, 341, 342, 344, 347, 348, 349, 350, 352, 353], "good": [0, 1, 4, 9, 103, 341, 343, 344, 347, 352, 353], "runtim": [0, 3, 32, 85, 89, 103, 109, 348], "perform": [0, 2, 3, 4, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 112, 124, 127, 136, 159, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 260, 267, 270, 312, 316, 337, 341, 342, 343, 344, 346, 347, 348, 353], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 75, 80, 81, 82, 85, 88, 89, 90, 94, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 153, 165, 225, 226, 227, 235, 257, 265, 299, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 336, 337, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "read": [0, 2, 3, 7, 23, 37, 40, 57, 62, 63, 64, 67, 74, 75, 78, 85, 88, 89, 90, 103, 109, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 139, 140, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 158, 161, 162, 164, 165, 175, 210, 224, 225, 226, 227, 230, 236, 239, 240, 242, 244, 245, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 312, 316, 325, 336, 341, 342, 343, 346, 347, 348, 349, 353], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 67, 76, 85, 89, 92, 93, 103, 104, 105, 106, 109, 110, 111, 157, 161, 166, 187, 194, 198, 205, 207, 224, 228, 230, 231, 239, 244, 249, 258, 265, 267, 280, 285, 293, 306, 311, 335, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 353], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 55, 58, 59, 337, 341, 342, 343, 347, 348, 352, 353], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 338, 341, 346, 349, 353], "beyond": 0, "api": [0, 2, 3, 5, 104, 105, 106, 141, 163, 337, 338, 347, 348, 352, 353], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 46, 47, 48, 50, 72, 85, 86, 89, 99, 103, 109, 112, 119, 120, 130, 135, 142, 157, 167, 192, 196, 224, 230, 231, 236, 237, 238, 239, 240, 299, 336, 337, 342, 343, 344, 346, 347, 348, 349, 350, 353], "paper": [0, 54, 57, 81, 82, 83, 84, 91, 94, 95, 100, 101, 106, 110, 111, 141, 161, 163, 190, 212, 221, 255, 262, 325, 341, 343, 347], "ppo": [0, 4, 8, 236, 240, 251, 264, 267, 334, 336, 340, 341, 342, 345, 351], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 83, 84, 85, 86, 88, 89, 90, 100, 103, 109, 119, 122, 123, 129, 134, 135, 137, 144, 146, 151, 153, 155, 156, 158, 159, 165, 192, 196, 328, 336, 340, 342, 343, 345, 351, 352, 353], "your": [0, 2, 3, 7, 8, 10, 18, 32, 85, 89, 93, 98, 103, 104, 105, 109, 165, 332, 335, 336, 337, 340, 342, 343, 344, 345, 347, 350, 351, 352], "introduct": [0, 337, 340, 345, 347, 351, 353], "multi": [0, 7, 9, 28, 29, 32, 85, 89, 103, 107, 108, 109, 190, 192, 194, 196, 197, 198, 203, 204, 278, 280, 281, 282, 283, 334, 340, 341, 342, 343, 344, 345, 348, 351, 352], "agent": [0, 9, 28, 29, 98, 104, 105, 107, 108, 110, 111, 112, 153, 154, 201, 202, 203, 204, 206, 212, 221, 278, 334, 340, 345, 348, 351], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 53, 55, 57, 58, 59, 67, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 192, 196, 199, 200, 239, 265, 298, 299, 320, 321, 322, 325, 328, 330, 331, 332, 334, 336, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 72, 73, 76, 78, 81, 82, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 210, 211, 212, 213, 219, 220, 221, 222, 224, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 293, 299, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 326, 328, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 351, 353], "pretrain": [0, 340, 345, 351], "recurr": [0, 2, 118, 190, 191, 192, 194, 196, 215, 340, 342, 345, 350, 351], "dqn": [0, 2, 52, 128, 187, 230, 231, 249, 250, 252, 253, 255, 257, 258, 259, 262, 263, 265, 267, 268, 269, 270, 271, 272, 278, 323, 334, 336, 340, 345, 351], "train": [0, 1, 2, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 39, 40, 45, 52, 54, 60, 85, 89, 103, 104, 105, 109, 124, 132, 141, 154, 159, 161, 163, 167, 180, 182, 192, 196, 228, 232, 233, 235, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 316, 318, 328, 334, 338, 340, 342, 345, 349, 350, 351, 353], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 81, 82, 85, 89, 99, 103, 109, 126, 135, 154, 172, 173, 187, 192, 196, 203, 204, 206, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 249, 250, 251, 252, 256, 257, 263, 264, 266, 267, 268, 269, 270, 272, 312, 318, 321, 322, 328, 330, 331, 336, 337, 338, 340, 342, 345, 349, 350, 351, 352, 353], "replai": [0, 8, 16, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 80, 118, 119, 126, 142, 146, 155, 252, 253, 255, 256, 257, 263, 268, 270, 272, 313, 316, 326, 328, 334, 338, 340, 345, 348, 349, 351], "buffer": [0, 1, 3, 4, 8, 16, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 85, 89, 99, 103, 109, 118, 119, 123, 126, 141, 142, 146, 155, 158, 159, 161, 163, 239, 242, 252, 253, 255, 256, 257, 263, 268, 270, 272, 313, 316, 326, 328, 334, 338, 340, 345, 348, 349, 351, 353], "task": [0, 2, 3, 9, 28, 29, 40, 45, 54, 57, 83, 84, 85, 89, 92, 103, 104, 105, 106, 109, 110, 111, 141, 153, 161, 163, 256, 263, 340, 341, 342, 343, 344, 345, 347, 348, 351, 352, 353], "specif": [0, 2, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 41, 42, 89, 110, 184, 229, 316, 334, 337, 338, 340, 343, 344, 345, 347, 350, 351], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 36, 39, 45, 62, 63, 64, 67, 70, 74, 75, 78, 80, 85, 89, 94, 103, 109, 124, 127, 128, 137, 141, 158, 159, 161, 165, 200, 212, 221, 224, 225, 236, 239, 240, 241, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 320, 321, 322, 327, 328, 332, 334, 336, 338, 340, 342, 343, 344, 345, 347, 348, 350, 351, 353], "ddpg": [0, 180, 181, 182, 183, 252, 262, 271, 334, 336, 340, 342, 345, 351], "loss": [0, 3, 8, 36, 128, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 311, 316, 323, 324, 325, 328, 337, 338, 340, 345, 348, 350, 351, 352], "trainer": [0, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 340, 341, 345, 351], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 85, 87, 89, 91, 92, 103, 106, 109, 118, 122, 126, 132, 135, 141, 142, 144, 151, 155, 158, 159, 161, 162, 164, 165, 166, 167, 174, 176, 177, 178, 187, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 204, 206, 207, 222, 228, 229, 230, 231, 232, 233, 236, 237, 240, 242, 243, 246, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 278, 280, 281, 282, 283, 284, 286, 300, 301, 304, 306, 309, 316, 318, 325, 328, 337, 340, 341, 343, 345, 347, 348, 351, 353], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137, 139, 141, 143, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 171, 174, 175, 176, 177, 178, 179, 184, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 207, 210, 211, 212, 213, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 274, 278, 280, 281, 282, 283, 286, 299, 307, 308, 309, 310, 311, 313, 314, 315, 318, 325, 328, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353], "packag": [0, 6, 7, 10, 115, 334, 335, 353], "singl": [0, 2, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 67, 76, 85, 88, 89, 103, 109, 110, 111, 119, 120, 141, 146, 163, 177, 178, 190, 191, 192, 194, 195, 196, 197, 198, 204, 238, 242, 251, 253, 255, 257, 258, 264, 267, 268, 272, 280, 281, 282, 283, 289, 290, 291, 292, 294, 295, 296, 297, 325, 332, 334, 341, 342, 343, 344, 346, 347, 348, 349, 350], "node": [0, 2, 18, 19, 20, 21, 22, 59, 325, 334], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 104, 105, 135, 137, 176, 185, 186, 187, 188, 193, 200, 201, 202, 207, 210, 211, 214, 215, 218, 219, 220, 228, 229, 230, 231, 236, 240, 241, 249, 250, 251, 256, 257, 258, 263, 264, 267, 268, 269, 270, 272, 334, 338, 342, 343, 347, 348, 352, 353], "helper": [0, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 341, 342, 344, 348], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 76, 77, 85, 89, 103, 109, 119, 145, 158, 159, 165, 234, 260, 270, 325, 334, 341, 342, 343, 344, 346, 347, 350, 352, 353], "episod": [0, 52, 53, 57, 58, 59, 72, 73, 85, 89, 103, 109, 146, 149, 154, 176, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 334, 342, 347], "format": [0, 31, 32, 33, 52, 53, 54, 55, 56, 57, 58, 59, 70, 85, 89, 103, 104, 109, 123, 141, 155, 158, 159, 161, 163, 239, 299, 334, 341, 342, 353], "ted": [0, 52, 53, 54, 55, 56, 57, 58, 59, 334], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 85, 89, 99, 103, 109, 110, 111, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 215, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 250, 253, 256, 257, 268, 270, 272, 278, 334, 348], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 171, 174, 175, 176, 180, 181, 182, 183, 184, 187, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 211, 212, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 272, 274, 278, 279, 280, 281, 282, 283, 286, 298, 299, 307, 313, 316, 319, 320, 325, 326, 328, 329, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353], "human": [0, 55, 334, 348], "feedback": [0, 334, 352], "rlhf": [0, 40, 45, 60, 135, 334, 336], "envbas": [0, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 86, 89, 103, 109, 116, 124, 127, 136, 143, 144, 158, 159, 165, 167, 176, 199, 200, 312, 320, 321, 322, 325, 328, 330, 331, 332, 334], "gymlikeenv": [0, 88, 90, 334], "envmetadata": [0, 334], "vector": [0, 1, 8, 24, 27, 33, 81, 82, 94, 95, 98, 104, 105, 106, 110, 111, 126, 164, 180, 182, 190, 191, 194, 195, 198, 280, 283, 293, 294, 295, 296, 297, 334, 341, 342, 344, 346, 347, 348, 349, 353], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 104, 105, 116, 142, 187, 201, 202, 213, 229, 230, 231, 232, 233, 237, 238, 313, 334, 342, 344, 353], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 52, 55, 57, 58, 59, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 122, 124, 126, 127, 128, 129, 132, 135, 136, 139, 143, 144, 146, 150, 153, 159, 164, 171, 174, 176, 179, 180, 181, 182, 183, 184, 186, 187, 188, 192, 196, 198, 199, 200, 201, 202, 203, 211, 212, 213, 215, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 328, 332, 334, 336, 337, 338, 341, 342, 343, 346, 347, 349, 352, 353], "record": [0, 2, 32, 85, 89, 103, 109, 135, 267, 298, 299, 300, 301, 302, 303, 304, 305, 306, 328, 334, 342, 343], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 85, 89, 103, 109, 126, 155, 171, 224, 230, 231, 236, 237, 238, 239, 240, 241, 242, 334, 343, 347, 348, 352, 353], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 76, 81, 82, 85, 89, 98, 99, 102, 103, 109, 115, 118, 123, 126, 128, 135, 141, 142, 154, 155, 158, 159, 161, 163, 165, 166, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 282, 283, 284, 316, 323, 324, 328, 334, 337, 338, 342, 343, 346, 347, 348, 349, 350, 353], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 70, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 174, 175, 176, 186, 187, 192, 196, 197, 199, 200, 212, 213, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 298, 307, 311, 312, 313, 315, 316, 325, 334, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 353], "actor": [0, 3, 4, 15, 21, 135, 176, 179, 180, 182, 187, 188, 200, 211, 213, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 325, 334, 337, 342, 343, 344, 349, 352], "explor": [0, 1, 166, 206, 224, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 249, 312, 321, 322, 328, 334, 343, 344, 347, 348], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 73, 76, 85, 89, 98, 103, 109, 115, 117, 119, 120, 122, 124, 126, 127, 128, 136, 137, 141, 142, 145, 146, 147, 149, 151, 155, 156, 158, 159, 163, 165, 171, 175, 180, 181, 182, 183, 185, 187, 188, 189, 192, 193, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 309, 310, 311, 312, 313, 316, 325, 328, 334, 338, 342, 346, 347, 348, 350, 352, 353], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 40, 54, 69, 71, 85, 86, 89, 99, 102, 103, 104, 105, 107, 108, 109, 123, 124, 125, 129, 135, 137, 143, 144, 149, 150, 153, 158, 164, 175, 185, 201, 202, 210, 224, 236, 240, 244, 245, 268, 274, 280, 285, 293, 302, 316, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "hook": [0, 32, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 213, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 334], "planner": [0, 176, 200, 334], "sac": [0, 257, 268, 270, 334], "redq": [0, 268, 324, 325, 334], "iql": [0, 256, 263, 334, 347], "cql": [0, 250, 255, 334], "dt": [0, 235, 334, 348], "td3": [0, 272, 334], "a2c": [0, 249, 334], "dreamer": [0, 114, 188, 259, 260, 261, 334, 336], "checkpoint": [0, 334], "builder": [0, 334, 342, 353], "logger": [0, 299, 301, 302, 303, 304, 305, 306, 310, 316, 328, 332, 334, 342], "_util": [0, 3, 11, 334], "implement_for": [0, 3, 334], "contribut": [0, 2], "thing": [0, 3, 7, 8, 335, 343, 344, 347, 350, 353], "consid": [0, 1, 2, 3, 8, 20, 32, 34, 36, 39, 62, 63, 78, 85, 89, 103, 109, 126, 165, 185, 203, 218, 335, 341, 348, 350], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 71, 72, 73, 74, 75, 78, 85, 86, 89, 98, 100, 102, 103, 104, 105, 109, 110, 111, 116, 118, 119, 123, 124, 126, 127, 135, 136, 137, 141, 142, 149, 155, 158, 159, 161, 163, 164, 165, 172, 173, 176, 187, 190, 191, 194, 195, 198, 199, 200, 201, 202, 205, 213, 219, 236, 239, 240, 242, 246, 251, 253, 258, 264, 267, 270, 273, 278, 279, 280, 281, 282, 283, 298, 299, 313, 332, 335, 336, 338, 341, 342, 343, 344, 347, 348, 349, 350, 353], "debug": [0, 6, 8, 40, 335, 353], "work": [0, 2, 3, 4, 8, 11, 32, 34, 36, 38, 39, 70, 72, 73, 75, 80, 85, 88, 89, 90, 93, 103, 106, 109, 120, 135, 141, 161, 164, 165, 177, 178, 198, 231, 238, 243, 251, 264, 267, 316, 335, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "habitat": [0, 3, 91, 335, 349], "lab": [0, 3, 83, 84, 91, 335], "mujoco": [0, 6, 8, 106, 335, 343, 344], "error": [0, 1, 3, 7, 10, 11, 29, 32, 85, 89, 103, 109, 112, 142, 167, 335, 341, 343, 347, 353], "solut": [0, 2, 3, 6, 7, 9, 21, 335, 336, 338, 352], "resourc": [0, 1, 21, 91, 335, 341, 343, 347], "version": [0, 1, 2, 3, 6, 11, 32, 34, 36, 40, 54, 59, 72, 85, 88, 89, 90, 91, 100, 101, 103, 104, 106, 109, 110, 111, 164, 227, 265, 270, 280, 283, 335, 336, 341, 343, 344, 347, 348, 349, 353], "issu": [0, 4, 5, 8, 52, 55, 62, 63, 78, 93, 119, 142, 156, 224, 230, 231, 236, 237, 238, 239, 240, 335, 352], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 75, 76, 77, 78, 79, 80, 85, 89, 103, 109, 110, 111, 119, 126, 174, 201, 202, 334, 346, 347, 350, 352], "search": [0, 102, 175, 342], "page": [0, 7, 306], "somewhat": [1, 2, 337, 353], "equival": [1, 3, 24, 26, 27, 30, 31, 32, 33, 34, 36, 39, 45, 53, 55, 57, 58, 59, 60, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 125, 128, 159, 187, 194, 213, 230, 231, 237, 238, 267, 313, 352, 353], "dataload": [1, 60, 71, 73, 342, 343, 350], "except": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 57, 85, 89, 103, 109, 119, 130, 146, 154, 155, 156, 190, 192, 194, 196, 210, 228, 232, 233, 235, 299, 336, 342, 350, 352, 353], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 137, 139, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 171, 174, 176, 177, 178, 179, 180, 181, 183, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 249, 250, 251, 252, 253, 255, 256, 257, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 294, 295, 297, 307, 312, 313, 314, 325, 328, 332, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 85, 89, 98, 103, 104, 105, 109, 110, 111, 118, 130, 135, 141, 150, 158, 159, 163, 196, 197, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 313, 316, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "collect": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 103, 106, 109, 119, 137, 141, 163, 167, 235, 250, 252, 255, 257, 268, 270, 272, 307, 313, 316, 318, 319, 320, 328, 338, 341, 344, 347, 348, 349, 350, 352, 353], "over": [1, 2, 3, 4, 8, 32, 38, 42, 43, 45, 51, 52, 57, 71, 85, 89, 103, 109, 126, 137, 149, 156, 174, 222, 242, 258, 260, 265, 286, 319, 338, 341, 342, 343, 347, 348, 353], "non": [1, 2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 35, 36, 39, 41, 42, 57, 64, 85, 89, 103, 104, 105, 109, 117, 123, 131, 141, 155, 158, 159, 160, 161, 163, 174, 190, 192, 194, 196, 203, 239, 240, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 336, 341, 344, 347, 348, 350, 353], "static": [1, 11, 40, 45, 72, 73, 91, 165, 263, 348, 350], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 52, 57, 58, 60, 67, 72, 73, 81, 82, 85, 86, 89, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120, 123, 124, 125, 126, 127, 135, 137, 139, 141, 143, 146, 149, 153, 154, 155, 158, 159, 161, 163, 165, 171, 175, 177, 178, 179, 180, 181, 182, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 211, 222, 229, 230, 231, 232, 233, 235, 239, 243, 244, 249, 250, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 279, 280, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 336, 337, 340, 341, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 64, 67, 73, 85, 89, 91, 98, 103, 104, 105, 109, 128, 157, 167, 190, 194, 204, 234, 249, 251, 264, 267, 268, 269, 337, 341, 343, 344, 347, 348, 349, 350, 353], "being": [1, 2, 3, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 60, 85, 88, 89, 90, 91, 103, 106, 109, 118, 124, 126, 127, 136, 144, 159, 172, 173, 192, 196, 232, 235, 251, 264, 267, 270, 299, 313, 318, 330, 331, 332, 336, 341, 342, 343, 344, 347, 348, 350], "s": [1, 2, 3, 6, 7, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 81, 82, 85, 89, 93, 94, 95, 100, 103, 104, 105, 109, 110, 111, 119, 123, 141, 153, 155, 157, 158, 159, 161, 163, 165, 167, 177, 178, 192, 196, 202, 203, 204, 206, 212, 221, 225, 227, 228, 231, 232, 236, 239, 240, 243, 250, 256, 263, 265, 270, 280, 281, 282, 283, 284, 325, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 55, 58, 59, 60, 85, 89, 99, 103, 109, 119, 123, 131, 141, 149, 155, 158, 159, 160, 161, 163, 222, 239, 240, 241, 270, 299, 338, 343, 350, 353], "two": [1, 2, 3, 4, 8, 10, 32, 40, 57, 67, 71, 73, 85, 89, 103, 109, 137, 141, 163, 183, 190, 192, 194, 196, 216, 240, 264, 275, 312, 316, 325, 337, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353], "main": [1, 2, 3, 5, 20, 22, 59, 86, 240, 316, 336, 337, 341, 342, 346, 353], "argument": [1, 2, 3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 54, 55, 57, 58, 59, 60, 67, 70, 71, 72, 73, 75, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 104, 106, 109, 110, 111, 122, 123, 141, 150, 153, 155, 157, 158, 159, 161, 163, 174, 177, 178, 190, 192, 194, 196, 198, 201, 202, 203, 204, 205, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 266, 267, 268, 269, 270, 272, 274, 278, 280, 281, 282, 283, 284, 288, 298, 306, 309, 319, 325, 328, 329, 332, 341, 342, 343, 344, 347, 348, 350, 353], "list": [1, 2, 6, 7, 8, 9, 13, 14, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 64, 67, 70, 71, 72, 73, 74, 75, 83, 84, 85, 88, 89, 90, 91, 99, 102, 103, 104, 105, 106, 109, 110, 111, 112, 117, 118, 122, 124, 127, 135, 137, 139, 141, 149, 151, 157, 159, 161, 163, 165, 174, 186, 192, 196, 198, 201, 202, 208, 213, 231, 237, 238, 240, 242, 243, 244, 265, 270, 277, 280, 283, 298, 312, 313, 330, 331, 336, 341, 343, 346, 348, 349, 350, 352, 353], "constructor": [1, 2, 16, 18, 19, 20, 21, 38, 45, 57, 85, 89, 100, 103, 109, 110, 158, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 325, 329, 332, 336, 341, 342, 343, 347, 350], "iter": [1, 2, 11, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 67, 71, 81, 82, 85, 89, 94, 95, 103, 109, 129, 137, 150, 177, 178, 198, 203, 204, 217, 224, 230, 236, 237, 239, 241, 242, 244, 265, 277, 312, 315, 316, 325, 337, 338, 341, 343, 344, 347, 348], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 81, 82, 85, 86, 89, 90, 91, 93, 94, 95, 99, 100, 103, 106, 109, 116, 159, 190, 192, 194, 196, 232, 241, 242, 320, 332, 336, 338, 340, 342, 343, 344, 347, 350, 351, 353], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 52, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 116, 118, 131, 134, 137, 153, 154, 155, 156, 159, 164, 174, 175, 176, 188, 190, 192, 194, 196, 197, 199, 200, 228, 232, 233, 235, 236, 240, 249, 259, 267, 279, 280, 281, 282, 283, 286, 287, 288, 298, 301, 307, 312, 316, 338, 341, 342, 344, 346, 348, 349, 350, 352], "queri": [1, 3, 13, 32, 34, 36, 39, 85, 89, 103, 109, 141, 158, 161, 165, 242, 341, 348, 352], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 85, 89, 103, 109, 142, 154, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 253, 255, 265, 280, 281, 282, 283, 284, 298, 329, 341, 342, 344, 348, 350, 353], "number": [1, 2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 70, 72, 73, 78, 81, 82, 85, 88, 89, 90, 94, 95, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 119, 126, 132, 136, 137, 148, 153, 156, 165, 176, 177, 178, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 203, 204, 207, 208, 209, 212, 214, 215, 218, 219, 220, 221, 224, 228, 229, 232, 233, 235, 236, 239, 240, 244, 248, 250, 256, 257, 259, 263, 264, 266, 268, 270, 272, 307, 309, 312, 316, 318, 319, 320, 330, 331, 332, 336, 341, 342, 343, 344, 347, 348, 349, 353], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 56, 71, 85, 89, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 190, 192, 196, 198, 205, 206, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 281, 282, 283, 313, 341, 343, 344, 347, 348, 350, 353], "deliv": [1, 2, 16, 57, 341, 342, 352], "stack": [1, 2, 3, 7, 8, 18, 20, 21, 28, 29, 35, 38, 41, 42, 50, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 98, 103, 104, 105, 109, 165, 190, 192, 194, 195, 196, 241, 242, 298, 307, 336, 342, 346, 348, 352], "user": [1, 2, 3, 5, 8, 32, 52, 53, 57, 59, 73, 85, 89, 103, 109, 154, 159, 184, 197, 267, 270, 299, 329, 337, 338, 341, 342, 348, 352, 353], "reset": [1, 2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 119, 128, 131, 134, 136, 141, 149, 153, 154, 155, 156, 158, 161, 164, 165, 167, 175, 190, 192, 196, 223, 235, 298, 325, 341, 342, 343, 344, 346, 347, 352], "whenev": [1, 2, 3, 32, 35, 38, 41, 42, 52, 57, 72, 73, 83, 84, 88, 90, 91, 106, 110, 111, 115, 134, 159, 164, 265, 280, 281, 282, 283, 318, 336], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 71, 85, 89, 103, 109, 110, 111, 153, 228, 232, 233, 235, 341, 343, 347, 352, 353], "done": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 55, 57, 58, 59, 67, 72, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 124, 125, 127, 128, 129, 136, 137, 139, 143, 144, 146, 148, 150, 153, 155, 156, 158, 159, 165, 174, 175, 176, 190, 192, 196, 200, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 337, 341, 343, 344, 346, 347, 348, 350, 352, 353], "state": [1, 2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 103, 104, 105, 106, 107, 108, 109, 118, 119, 120, 122, 128, 137, 144, 153, 154, 158, 159, 165, 174, 175, 176, 179, 184, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 208, 211, 212, 214, 215, 221, 225, 239, 245, 249, 251, 255, 264, 265, 267, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 332, 336, 337, 341, 342, 343, 344, 347, 348, 353], "after": [1, 2, 3, 8, 13, 14, 17, 18, 20, 21, 26, 32, 40, 52, 67, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 109, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 174, 190, 192, 196, 205, 228, 230, 232, 233, 237, 260, 270, 342, 343, 344, 347, 348, 349, 350, 353], "predefin": [1, 342, 343, 344, 350], "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 52, 85, 89, 103, 109, 128, 135, 153, 158, 164, 183, 197, 204, 224, 230, 231, 236, 237, 238, 239, 240, 341, 342, 344, 346, 347, 348, 350, 353], "potenti": [1, 2, 348, 350], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 81, 82, 85, 89, 94, 95, 103, 109, 137, 151, 159, 162, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 209, 210, 211, 214, 215, 217, 219, 220, 222, 225, 228, 229, 231, 232, 233, 235, 236, 238, 240, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 320, 337, 341, 343, 344, 346, 347, 349, 350], "heavi": [1, 8, 52, 350], "crucial": [1, 2, 228, 232, 233, 235, 256, 263, 265, 341, 342, 343, 344, 347, 348, 353], "configur": [1, 8, 21, 22, 40, 135, 179, 184, 211, 265, 267, 325, 336, 341, 342, 343, 347, 348], "hyperparamet": [1, 70, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341, 348, 350], "appropri": [1, 3, 4, 7, 61, 68, 76, 77, 79, 80, 103, 109, 128, 329, 332, 341, 350], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 336, 337, 341, 344, 347, 348, 349, 352], "take": [1, 3, 8, 23, 40, 54, 81, 82, 85, 89, 94, 95, 103, 109, 122, 153, 156, 158, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 234, 235, 236, 238, 243, 246, 248, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 318, 336, 338, 341, 342, 343, 347, 348, 350, 353], "consider": [1, 2, 3, 8, 342, 347, 350], "whether": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 99, 103, 104, 105, 109, 110, 111, 124, 127, 154, 159, 175, 177, 178, 192, 196, 198, 244, 249, 250, 251, 252, 253, 255, 257, 258, 264, 265, 267, 268, 269, 270, 272, 278, 280, 283, 341, 342, 343, 347, 348, 353], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 67, 72, 73, 74, 76, 83, 84, 85, 88, 89, 90, 91, 98, 99, 103, 104, 105, 109, 110, 111, 119, 122, 123, 124, 125, 128, 129, 131, 135, 137, 142, 143, 144, 146, 149, 150, 153, 154, 156, 158, 159, 164, 165, 167, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 236, 238, 239, 240, 243, 246, 249, 251, 257, 262, 264, 265, 267, 268, 269, 271, 279, 280, 281, 282, 283, 284, 299, 301, 311, 312, 313, 316, 328, 330, 331, 332, 336, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "occur": [1, 8, 14, 28, 29, 52, 85, 91, 120, 137, 142, 164, 175, 224, 230, 231, 236, 237, 238, 239, 240, 260, 350, 353], "serial": [1, 2, 3, 32, 85, 89, 103, 109, 165], "optim": [1, 2, 8, 32, 40, 81, 82, 85, 89, 103, 109, 159, 176, 200, 205, 206, 250, 265, 266, 267, 270, 311, 316, 328, 337, 338, 343, 344, 347, 348], "parallel": [1, 3, 8, 88, 90, 103, 104, 105, 109, 164, 167, 249, 329, 330, 331, 332, 342, 343, 347], "syncdatacollector": [1, 2, 13, 14, 17, 18, 19, 20, 21, 119, 146, 328, 331, 334, 343, 344, 347, 350], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 98, 99, 102, 103, 104, 105, 106, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 330, 331, 332, 336, 337, 338, 341, 342, 343, 344, 347, 350, 353], "worker": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 54, 59, 60, 86, 100, 103, 109, 165, 330, 331, 332, 341, 343, 352, 353], "multisyncdatacollector": [1, 18, 19, 20, 21, 331, 334, 343, 352], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 53, 55, 57, 58, 59, 60, 72, 73, 98, 104, 105, 190, 194, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 336, 338, 343, 350, 352], "workload": 1, "across": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 72, 73, 81, 82, 83, 84, 88, 90, 91, 93, 94, 95, 100, 101, 103, 106, 165, 203, 235, 318, 334, 336, 341, 347, 348], "aggreg": [1, 3, 52, 175, 177, 178, 180, 181, 242], "result": [1, 2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 72, 73, 85, 86, 89, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 174, 175, 190, 192, 194, 196, 198, 203, 213, 229, 231, 232, 238, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 318, 336, 342, 344, 348, 349, 352, 353], "final": [1, 2, 3, 4, 21, 34, 36, 39, 40, 164, 190, 192, 194, 196, 203, 228, 232, 233, 234, 235, 241, 280, 312, 336, 341, 342, 343, 347, 348, 353], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 330, 334, 341, 342, 343, 352], "sever": [1, 2, 8, 30, 32, 45, 54, 85, 89, 103, 109, 120, 122, 159, 267, 341, 343, 350, 353], "batch": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 71, 72, 73, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 102, 103, 109, 110, 111, 119, 131, 137, 139, 142, 146, 155, 159, 160, 164, 165, 175, 185, 186, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 205, 210, 212, 218, 222, 235, 239, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 310, 313, 314, 315, 316, 318, 330, 331, 332, 338, 342, 343, 344, 346, 347, 349, 352, 353], "gather": [1, 3, 18, 20, 21, 45, 60, 62, 63, 78, 142, 202, 210, 279, 320, 335, 341, 342, 343, 344, 347, 348, 350, 353], "continu": [1, 9, 25, 46, 73, 85, 89, 103, 104, 105, 109, 110, 111, 171, 180, 181, 182, 183, 235, 242, 249, 250, 256, 257, 263, 267, 268, 269, 270, 271, 272, 280, 285, 293, 336, 341, 343, 347, 350], "concomitantli": 1, "network": [1, 4, 8, 32, 85, 89, 98, 103, 104, 105, 109, 177, 178, 180, 181, 182, 183, 186, 188, 189, 194, 198, 203, 204, 206, 208, 209, 212, 214, 215, 216, 221, 225, 226, 227, 229, 239, 243, 250, 251, 252, 253, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 284, 327, 328, 336, 337, 338, 346, 348, 353], "impli": [1, 353], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 67, 70, 81, 82, 85, 89, 103, 107, 108, 109, 123, 141, 155, 158, 159, 161, 163, 190, 191, 192, 194, 195, 196, 203, 206, 239, 249, 250, 251, 257, 260, 270, 318, 327, 336, 338, 341, 342, 343, 344, 346, 348, 350, 352], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 53, 59, 85, 88, 89, 90, 91, 103, 106, 109, 135, 137, 150, 159, 160, 165, 167, 198, 203, 337, 338, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "slightli": [1, 52, 336, 337, 344, 348, 349, 350, 353], "lag": [1, 341, 342, 343], "therefor": [1, 2, 3, 7, 58, 59, 85, 89, 103, 109, 146, 267, 278, 353], "although": [1, 8, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 338, 341, 342, 350], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 67, 72, 73, 76, 78, 85, 89, 98, 99, 102, 103, 104, 105, 109, 116, 119, 128, 135, 141, 146, 149, 153, 154, 156, 158, 160, 163, 164, 174, 175, 190, 191, 194, 195, 201, 202, 203, 228, 232, 233, 235, 236, 239, 240, 248, 249, 250, 251, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 337, 338, 341, 342, 343, 346, 347, 348, 350, 353], "asynchron": [1, 9, 14, 21, 32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 249, 330, 342, 343], "off": [1, 2, 4, 193, 220, 230, 270, 312, 321, 336, 338, 341, 342, 343, 347, 349, 353], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 85, 89, 103, 104, 105, 109, 110, 124, 127, 131, 137, 154, 159, 164, 187, 190, 192, 194, 196, 204, 205, 225, 227, 229, 231, 237, 249, 256, 258, 263, 267, 312, 336, 338, 341, 342, 343, 344, 347, 348, 349, 350, 353], "remot": [1, 2, 18, 19, 20, 21, 103, 109, 353], "rollout": [1, 2, 3, 13, 14, 16, 17, 21, 23, 40, 81, 82, 85, 89, 91, 92, 94, 95, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 122, 124, 127, 128, 129, 135, 139, 143, 144, 149, 150, 151, 153, 154, 156, 167, 176, 192, 196, 200, 235, 249, 299, 320, 336, 341, 343, 344, 349, 350, 352], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 18, 19, 20, 21, 52, 54, 55, 57, 58, 59, 85, 89, 103, 109, 110, 111, 150, 268, 280, 281, 282, 283, 284, 337, 341, 343], "synchronis": [1, 86, 347], "either": [1, 2, 5, 22, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 85, 89, 103, 109, 153, 154, 245, 272, 303, 338, 341, 342, 344, 349, 350, 352, 353], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 341, 347, 352], "update_at_each_batch": [1, 13, 14, 17, 341], "true": [1, 2, 3, 4, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 126, 131, 134, 135, 136, 137, 141, 142, 144, 145, 148, 150, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 219, 220, 224, 225, 226, 227, 228, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 280, 281, 282, 283, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 306, 309, 310, 312, 313, 316, 332, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "second": [1, 3, 8, 52, 54, 190, 192, 194, 196, 231, 251, 264, 267, 270, 301, 315, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 55, 57, 58, 59, 60, 62, 63, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 127, 128, 129, 135, 139, 140, 141, 143, 144, 146, 150, 153, 155, 157, 158, 159, 161, 163, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 211, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 313, 318, 325, 326, 336, 341, 342, 343, 344, 347, 348, 349, 352], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 85, 89, 103, 109, 131, 135, 158, 186, 187, 191, 195, 207, 225, 226, 227, 230, 231, 234, 239, 245, 249, 251, 252, 253, 258, 264, 267, 269, 278, 279, 280, 281, 282, 283, 316, 325, 334, 338, 341, 342, 343, 344, 346, 347, 348, 353], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 84, 85, 86, 89, 99, 103, 109, 119, 137, 155, 158, 165, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 241, 242, 243, 246, 253, 256, 257, 265, 278, 280, 281, 282, 283, 299, 303, 312, 320, 321, 322, 325, 328, 330, 331, 336, 337, 338, 341, 343, 344, 348, 350, 353], "cpu": [1, 2, 3, 8, 10, 13, 14, 16, 17, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 52, 55, 57, 58, 59, 60, 62, 63, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 127, 128, 129, 139, 141, 143, 144, 146, 150, 153, 155, 158, 159, 161, 163, 171, 174, 176, 190, 191, 192, 194, 195, 196, 200, 205, 206, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 313, 325, 336, 341, 342, 343, 344, 347, 348, 349, 352], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 52, 53, 57, 70, 72, 73, 75, 76, 85, 89, 93, 103, 106, 109, 144, 183, 192, 194, 196, 198, 207, 222, 224, 228, 230, 239, 244, 265, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 335, 337, 341, 342, 343, 347, 348, 350, 352, 353], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 67, 68, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 119, 122, 124, 125, 126, 127, 136, 137, 141, 146, 149, 152, 154, 155, 156, 158, 159, 160, 163, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 210, 211, 213, 214, 215, 217, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 287, 288, 301, 309, 311, 312, 316, 320, 325, 332, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 353], "cuda": [1, 2, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 85, 89, 91, 92, 93, 103, 109, 123, 135, 140, 141, 155, 158, 159, 161, 163, 190, 191, 194, 195, 239, 255, 308, 341, 342, 343, 344, 347, 349, 353], "multipl": [1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 67, 81, 82, 94, 95, 103, 109, 120, 122, 126, 136, 146, 149, 153, 158, 165, 190, 194, 196, 197, 203, 205, 206, 224, 230, 236, 237, 239, 240, 243, 251, 257, 264, 267, 268, 272, 286, 325, 332, 336, 338, 341, 342, 343, 347, 348, 350, 352], "infer": [1, 103, 109, 119, 165, 192, 196, 205, 229, 255, 341, 343, 350], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 52, 54, 72, 73, 81, 82, 83, 84, 85, 88, 89, 94, 95, 99, 100, 101, 103, 109, 136, 137, 159, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 241, 242, 243, 246, 270, 299, 306, 312, 330, 331, 332, 335, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352], "dispatch": [1, 18, 19, 20, 21, 222, 299], "avail": [1, 3, 4, 6, 21, 52, 54, 59, 71, 72, 73, 83, 84, 93, 103, 104, 105, 106, 110, 111, 118, 135, 187, 213, 236, 240, 265, 299, 330, 331, 336, 341, 342, 343, 344, 347, 348, 350, 353], "speed": [1, 2, 4, 8, 27, 103, 109, 337, 341, 342, 343, 344, 347, 348, 350], "up": [1, 2, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 27, 40, 53, 59, 103, 109, 118, 156, 158, 267, 335, 336, 337, 341, 342, 343, 344, 347, 348, 350, 353], "avoid": [1, 2, 32, 62, 63, 78, 85, 89, 103, 109, 115, 159, 165, 224, 239, 244, 251, 264, 267, 270, 319, 343, 347], "oom": [1, 62, 63, 78], "choic": [1, 2, 53, 59, 103, 207, 336, 337, 341, 342, 347], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 71, 72, 73, 74, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 120, 124, 127, 128, 129, 131, 139, 141, 143, 144, 146, 150, 152, 153, 155, 157, 158, 159, 160, 163, 165, 171, 174, 176, 177, 178, 179, 184, 185, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 210, 211, 212, 213, 214, 215, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 299, 307, 313, 325, 336, 342, 343, 344, 347, 348, 353], "pass": [1, 2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 28, 32, 35, 38, 40, 41, 42, 45, 52, 54, 55, 57, 58, 59, 62, 63, 67, 76, 78, 85, 86, 87, 89, 98, 100, 103, 104, 105, 109, 110, 124, 127, 144, 158, 160, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 214, 215, 217, 221, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 251, 264, 265, 267, 280, 281, 282, 283, 284, 313, 330, 331, 332, 336, 341, 342, 343, 344, 346, 347, 348, 350, 353], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 57, 65, 73, 85, 89, 93, 102, 103, 109, 119, 131, 160, 165, 175, 192, 196, 229, 249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 280, 281, 282, 283, 336, 337, 342, 343, 347, 350], "store": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 78, 85, 89, 103, 109, 164, 165, 176, 197, 200, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 306, 325, 334, 338, 341, 343, 344, 347, 349, 350, 353], "while": [1, 2, 3, 7, 8, 32, 85, 89, 103, 109, 146, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 256, 263, 264, 267, 270, 336, 341, 343, 344, 347, 348, 349, 350, 352], "wait": [1, 20, 21, 22, 344, 348], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 38, 39, 41, 52, 54, 55, 57, 58, 59, 60, 62, 63, 67, 78, 85, 89, 103, 104, 105, 109, 110, 111, 115, 118, 119, 126, 137, 144, 146, 149, 150, 153, 155, 159, 190, 194, 215, 236, 241, 242, 243, 249, 250, 252, 253, 255, 256, 257, 263, 267, 270, 280, 287, 288, 336, 338, 341, 342, 343, 344, 346, 347, 348, 350, 353], "impact": [1, 57, 124, 127, 342, 344, 347], "memori": [1, 3, 8, 21, 27, 32, 34, 36, 39, 45, 52, 53, 54, 55, 57, 58, 59, 62, 85, 86, 89, 93, 103, 109, 119, 123, 141, 155, 158, 159, 161, 163, 165, 194, 195, 239, 332, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "manag": [1, 8, 276, 277, 280, 281, 282, 283, 312], "kei": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 67, 70, 72, 73, 76, 85, 89, 94, 95, 103, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 174, 175, 176, 186, 187, 192, 196, 199, 200, 213, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 299, 310, 311, 312, 314, 315, 316, 320, 325, 337, 338, 341, 343, 344, 346, 347, 348, 350, 352, 353], "control": [1, 3, 5, 8, 16, 83, 84, 85, 89, 98, 103, 104, 105, 109, 126, 174, 180, 181, 182, 183, 192, 196, 199, 200, 215, 222, 235, 239, 240, 241, 249, 251, 264, 267, 271, 280, 285, 293, 336, 338, 341, 342, 343, 347, 348, 350], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 70, 71, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 109, 110, 111, 119, 120, 124, 127, 132, 135, 136, 137, 141, 142, 153, 155, 156, 158, 159, 161, 167, 190, 191, 193, 194, 195, 196, 201, 202, 203, 220, 225, 226, 227, 229, 236, 239, 240, 242, 249, 250, 251, 253, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 299, 307, 311, 325, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 353], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 341, 342, 347, 352], "dure": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 67, 70, 85, 89, 103, 104, 105, 109, 119, 122, 124, 127, 132, 139, 151, 159, 192, 196, 312, 316, 337, 341, 342, 343, 344, 347, 348, 350, 353], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 235, 341, 353], "usual": [1, 2, 3, 4, 6, 7, 8, 53, 70, 81, 82, 85, 89, 94, 95, 103, 109, 206, 267, 280, 281, 282, 283, 284, 298, 325, 335, 336, 338, 341, 342, 343, 344, 347, 350, 353], "same": [1, 2, 3, 4, 11, 16, 18, 19, 20, 21, 26, 28, 29, 32, 34, 36, 39, 43, 45, 53, 57, 71, 75, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 119, 124, 126, 127, 132, 136, 137, 158, 159, 165, 177, 178, 191, 192, 195, 196, 198, 201, 202, 203, 204, 229, 235, 243, 270, 341, 342, 343, 346, 347, 349, 350, 353], "storag": [1, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 72, 73, 75, 76, 78, 85, 87, 89, 103, 109, 118, 119, 124, 127, 146, 334, 338, 342, 343, 344, 347, 349], "default": [1, 2, 3, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 70, 71, 72, 73, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 117, 118, 119, 120, 124, 126, 127, 128, 131, 135, 136, 137, 139, 141, 142, 146, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 328, 332, 338, 341, 342, 343, 344, 349, 350, 352, 353], "behaviour": [1, 3, 21, 57, 89, 120, 124, 127, 137, 142, 154, 174, 192, 193, 196, 220, 312, 336, 342, 350], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 28, 103, 109, 119, 124, 127, 137, 155, 156, 196, 236, 240, 241, 242, 318, 330, 331, 336, 341, 342, 347, 348, 353], "choos": [1, 98, 192, 196, 267, 334, 336, 337, 341, 342, 343, 347, 350], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 54, 55, 56, 57, 58, 59, 81, 82, 85, 89, 94, 95, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 135, 141, 161, 177, 178, 190, 192, 194, 196, 198, 231, 237, 238, 248, 249, 250, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 299, 316, 325, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 319, 341, 343, 352], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 52, 119, 132, 228, 232, 233, 235, 298, 299, 301, 309, 312, 316, 319, 320, 341, 342, 343, 344, 347, 350, 352, 353], "call": [1, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 71, 74, 75, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 106, 109, 119, 122, 123, 126, 131, 134, 135, 137, 139, 140, 141, 149, 151, 155, 158, 159, 161, 163, 164, 165, 167, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 239, 240, 242, 243, 246, 251, 264, 267, 270, 279, 280, 281, 282, 283, 298, 312, 338, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 119, 146, 319, 341, 342, 343, 344, 347, 350, 352], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 38, 40, 41, 52, 53, 54, 57, 67, 70, 72, 73, 85, 86, 89, 103, 104, 105, 109, 110, 111, 141, 146, 149, 153, 154, 155, 156, 163, 165, 187, 190, 191, 192, 194, 196, 203, 204, 208, 212, 213, 221, 228, 230, 231, 232, 238, 242, 286, 289, 290, 291, 292, 294, 295, 296, 297, 312, 313, 330, 331, 336, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 319, 341, 342], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 57, 59, 66, 85, 89, 99, 103, 109, 126, 136, 137, 155, 167, 190, 192, 194, 196, 232, 236, 239, 240, 250, 268, 312, 320, 336, 341, 342, 343, 348, 349, 350, 352, 353], "rand_step": [1, 3, 83, 84, 85, 86, 88, 89, 90, 96, 97, 99, 100, 101, 103, 109, 134, 155, 165, 348, 352, 353], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 341], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 53, 55, 57, 58, 59, 341, 342, 343], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 53, 54, 55, 57, 58, 59, 65, 72, 73, 81, 82, 85, 89, 94, 95, 103, 109, 142, 153, 158, 176, 196, 200, 235, 267, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 334, 337, 341, 342, 343, 344, 348, 350, 352, 353], "pad": [1, 2, 3, 23, 37, 43, 53, 55, 57, 58, 59, 119, 177, 178, 180, 181, 196, 197, 201, 202, 203, 313], "along": [1, 2, 3, 23, 28, 29, 34, 36, 39, 40, 45, 53, 55, 57, 58, 59, 63, 67, 72, 73, 78, 118, 119, 120, 137, 139, 142, 149, 157, 196, 198, 201, 202, 206, 230, 236, 239, 240, 265, 336, 341, 342, 344, 347, 348, 350], "point": [1, 2, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 56, 61, 65, 68, 76, 77, 79, 80, 85, 89, 103, 109, 118, 119, 123, 141, 154, 155, 157, 158, 159, 161, 163, 199, 239, 248, 258, 316, 335, 342, 343, 346, 347, 348, 350, 353], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 72, 73, 89, 142, 153, 175, 201, 202, 228, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 344], "repres": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 55, 83, 84, 85, 89, 103, 109, 110, 111, 132, 142, 165, 187, 201, 202, 213, 230, 231, 237, 238, 240, 275, 280, 313, 341, 343, 344, 347], "valid": [1, 2, 3, 23, 34, 36, 37, 45, 60, 112, 142, 159, 177, 178, 198, 201, 202, 228, 235, 264, 280, 281, 282, 283, 313, 338, 353], "exploration_typ": [1, 13, 14, 16, 17, 18, 19, 20, 21, 312, 334, 341, 342], "strategi": [1, 2, 16, 57, 70, 98, 202, 210, 232, 336, 338, 341, 342, 347, 350], "reset_when_don": [1, 13, 14, 16, 17], "These": [1, 2, 7, 32, 40, 54, 59, 85, 89, 103, 109, 110, 141, 163, 336, 337, 341, 343, 347, 348, 350, 353], "tool": [1, 2, 3, 5, 344, 348, 350, 353], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 85, 88, 89, 103, 109, 113, 115, 338, 341, 343, 344, 348], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 334], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 334], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 71, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 135, 137, 139, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 171, 174, 175, 176, 177, 178, 179, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 307, 314, 315, 325, 328, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "multiprocess": [1, 2, 3, 18, 19, 20, 52, 59, 86, 87, 165, 341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "synchron": [1, 13, 19, 21, 100, 330, 331, 342, 343], "mode": [1, 6, 13, 14, 16, 17, 18, 19, 20, 21, 32, 85, 89, 100, 103, 109, 124, 127, 154, 159, 165, 168, 172, 173, 185, 192, 193, 196, 210, 218, 219, 220, 236, 240, 265, 312, 341, 342, 344, 347, 352, 353], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 72, 73, 194, 228, 235, 310, 314, 341, 342, 347], "dedic": [1, 2, 3, 18, 19, 20, 21, 103, 109, 225, 226, 227, 336, 341, 346, 347], "folder": [1, 2, 110, 342], "sub": [1, 2, 3, 13, 14, 17, 18, 19, 20, 21, 52, 57, 72, 85, 89, 103, 109, 142, 241, 242, 307, 316, 336, 341, 342, 343, 346, 352, 353], "all": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 67, 83, 84, 85, 86, 88, 89, 90, 91, 99, 103, 104, 105, 109, 110, 111, 112, 118, 119, 122, 123, 124, 125, 127, 130, 135, 136, 137, 141, 149, 151, 155, 156, 158, 159, 161, 163, 165, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 239, 240, 242, 243, 246, 260, 265, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 311, 316, 319, 330, 331, 332, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353], "variou": [1, 2, 3, 192, 196, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 278, 299, 330, 331, 341, 342, 343, 347, 350, 353], "machin": [1, 2, 7, 18, 19, 20, 32, 56, 93, 347], "One": [1, 2, 4, 8, 31, 33, 45, 81, 82, 119, 146, 161, 210, 228, 239, 243, 271, 275, 303, 341, 342, 350, 353], "wonder": 1, "why": [1, 2, 3, 348, 353], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 85, 89, 100, 104, 105, 106, 109, 329, 334, 341, 342, 343, 346, 352, 353], "instead": [1, 4, 7, 8, 11, 27, 32, 57, 85, 89, 103, 109, 131, 155, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 249, 251, 253, 256, 257, 258, 263, 264, 267, 268, 269, 270, 278, 280, 284, 288, 332, 336, 348, 350, 353], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 53, 55, 57, 58, 59, 81, 82, 85, 89, 94, 95, 103, 104, 105, 109, 123, 124, 125, 127, 141, 146, 150, 154, 155, 157, 158, 159, 161, 163, 164, 190, 193, 194, 198, 203, 215, 219, 220, 239, 242, 248, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 318, 330, 331, 332, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 350, 353], "lower": [1, 2, 3, 21, 25, 122, 165, 214, 215, 243, 343, 348], "io": [1, 52, 57, 94, 95, 100, 194, 195], "footprint": [1, 2, 350], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 74, 85, 89, 93, 98, 103, 104, 105, 109, 119, 122, 131, 141, 144, 156, 159, 163, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 237, 238, 239, 243, 246, 248, 257, 268, 269, 270, 272, 279, 284, 299, 316, 332, 336, 337, 341, 342, 343, 344, 347, 348, 350, 352, 353], "commun": [1, 2, 3, 103, 335, 343, 353], "yet": [1, 81, 82, 94, 95, 349], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 53, 81, 82, 85, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 106, 109, 110, 111, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 171, 175, 187, 213, 215, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 325, 336, 341, 342, 343, 344, 346, 347, 352], "plai": [1, 3, 104, 105, 119, 342, 343, 350, 353], "role": [1, 3, 342, 353], "opposit": 1, "direct": [1, 2, 32, 85, 89, 103, 109, 190, 194, 265, 342], "sinc": [1, 2, 3, 4, 5, 7, 32, 35, 38, 41, 42, 52, 59, 73, 85, 89, 103, 104, 105, 106, 109, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 230, 231, 232, 233, 235, 237, 238, 243, 246, 341, 342, 343, 344, 348, 349, 350, 352, 353], "faster": [1, 2, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 58, 59, 100, 280, 281, 282, 283, 344, 347], "share": [1, 3, 6, 8, 34, 36, 39, 62, 63, 64, 74, 75, 78, 86, 103, 109, 165, 192, 196, 203, 204, 225, 226, 227, 249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 332, 334, 336, 343, 344, 346, 347, 352, 353], "among": [1, 3, 104, 105, 347], "achiev": [1, 2, 3, 4, 32, 85, 89, 93, 103, 109, 154, 175, 313, 338, 341, 342, 343, 344, 347, 348, 353], "via": [1, 4, 7, 8, 35, 38, 41, 42, 53, 55, 56, 57, 58, 59, 89, 103, 141, 158, 163, 254, 265, 337, 338, 341, 342, 343, 344, 350, 353], "prohibit": [1, 3], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 57, 312, 337, 341, 343, 347, 350, 353], "gpu": [1, 7, 8, 32, 62, 63, 78, 85, 89, 93, 103, 109, 341, 343, 344, 347, 353], "nativ": [1, 7, 9, 55, 85, 89, 103, 109, 119, 299, 344, 350], "driver": [1, 7], "practic": [1, 2, 3, 4, 5, 8, 52, 193, 219, 220, 248, 335, 341, 342, 343, 344, 347, 349, 353], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 41, 52, 65, 76, 81, 82, 89, 137, 165, 176, 185, 188, 190, 192, 194, 196, 197, 200, 218, 228, 236, 240, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 336, 337, 341, 342, 343, 347, 348, 350, 352, 353], "keyword": [1, 2, 3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 54, 55, 57, 58, 59, 60, 70, 72, 73, 75, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 110, 111, 122, 123, 141, 150, 155, 157, 158, 159, 161, 163, 192, 196, 201, 202, 224, 228, 229, 230, 232, 233, 235, 236, 237, 239, 240, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 266, 267, 268, 269, 270, 272, 274, 278, 280, 281, 282, 283, 284, 288, 306, 329, 341, 342, 343, 347, 350, 353], "build": [1, 3, 7, 23, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 81, 82, 85, 89, 90, 91, 94, 95, 100, 103, 106, 109, 110, 111, 146, 165, 176, 192, 196, 200, 234, 236, 240, 316, 323, 324, 326, 327, 336, 338, 343, 344, 347, 348, 349, 352, 353], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 85, 89, 99, 103, 109, 123, 126, 137, 141, 155, 158, 159, 161, 163, 174, 176, 187, 188, 190, 194, 200, 213, 217, 224, 230, 231, 232, 235, 238, 239, 240, 241, 242, 244, 248, 252, 253, 255, 279, 280, 281, 282, 283, 284, 286, 308, 312, 328, 336, 338, 341, 342, 343, 347, 348, 353], "mani": [1, 3, 4, 38, 81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 100, 101, 106, 249, 251, 257, 264, 267, 268, 272, 336, 341, 342, 343, 347, 348, 350, 353], "eg": [1, 2, 3, 11, 34, 36, 39, 62, 63, 64, 74, 75, 78, 83, 84, 85, 88, 89, 90, 91, 93, 103, 106, 109, 126, 153, 159, 203, 229, 299], "gymnasium": [1, 3, 5, 11, 85, 88, 89, 90, 96, 97, 103, 109, 113, 115, 129, 150, 153, 164, 342, 343, 348, 352], "other": [1, 2, 3, 4, 7, 8, 21, 22, 26, 32, 35, 41, 42, 45, 52, 53, 55, 57, 58, 59, 62, 63, 64, 67, 70, 71, 72, 73, 74, 75, 78, 85, 88, 89, 90, 99, 103, 109, 122, 125, 126, 143, 150, 157, 161, 165, 190, 192, 196, 206, 207, 229, 231, 232, 238, 240, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 313, 325, 330, 331, 336, 338, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "warn": [1, 3, 228, 232, 233, 235, 342], "quickli": [1, 3, 342, 347, 353], "becom": [1, 3, 4, 21, 190, 194, 347, 353], "quit": [1, 3, 52, 103, 336, 341, 342, 343, 347, 353], "annoi": [1, 3], "By": [1, 2, 3, 33, 83, 84, 85, 88, 89, 90, 91, 103, 104, 105, 106, 109, 110, 111, 222, 240, 265, 312, 332, 341, 349, 350, 353], "filter": [1, 2, 3, 4, 45, 249, 250, 252, 256, 257, 263, 267, 268, 270], "out": [1, 2, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 53, 57, 85, 89, 103, 104, 105, 109, 155, 167, 190, 191, 194, 201, 202, 205, 206, 224, 229, 230, 231, 235, 236, 237, 238, 239, 240, 276, 277, 338, 341, 342, 343, 344, 347, 348, 350, 352, 353], "If": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 67, 70, 71, 72, 73, 76, 78, 83, 84, 85, 86, 88, 89, 90, 91, 93, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 113, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 135, 136, 137, 141, 142, 145, 146, 149, 150, 154, 155, 156, 157, 158, 159, 161, 163, 165, 174, 175, 177, 178, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 303, 306, 311, 313, 316, 318, 320, 325, 328, 332, 335, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353], "still": [1, 2, 3, 9, 57, 81, 82, 85, 89, 94, 95, 103, 109, 228, 264, 265, 341, 342, 344, 346, 348, 350, 353], "wish": [1, 3, 13, 14, 17, 57, 115, 350], "see": [1, 2, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 85, 89, 92, 100, 103, 104, 105, 106, 109, 110, 111, 123, 141, 155, 157, 158, 159, 161, 163, 166, 177, 178, 190, 193, 194, 198, 204, 205, 212, 220, 221, 225, 227, 239, 240, 299, 306, 313, 341, 342, 343, 344, 347, 348, 350, 353], "displai": [1, 3, 7, 316, 338, 341, 342, 347, 348], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 67, 70, 71, 72, 73, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 120, 123, 124, 127, 128, 129, 131, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 148, 150, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 174, 175, 176, 177, 178, 180, 187, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 212, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 289, 290, 291, 292, 294, 295, 296, 297, 306, 309, 310, 312, 313, 314, 316, 325, 332, 336, 338, 341, 342, 343, 346, 347, 348, 352, 353], "central": [2, 203, 341, 342, 347, 350], "part": [2, 4, 8, 32, 40, 52, 54, 55, 57, 58, 59, 81, 85, 89, 94, 103, 109, 118, 137, 146, 149, 192, 196, 244, 307, 332, 341, 343, 344, 348, 353], "algorithm": [2, 3, 8, 9, 13, 14, 99, 132, 249, 267, 268, 269, 270, 307, 321, 334, 337, 338, 341, 342, 343, 344, 347, 349, 350, 352], "implement": [2, 3, 9, 11, 16, 32, 74, 85, 89, 100, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 165, 177, 190, 191, 192, 193, 194, 195, 196, 218, 219, 220, 249, 250, 254, 255, 256, 263, 265, 266, 267, 270, 325, 336, 338, 341, 342, 343, 344, 348, 352], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 53, 57, 59, 71, 73, 81, 82, 85, 86, 89, 93, 94, 95, 103, 109, 119, 135, 141, 144, 161, 164, 165, 176, 196, 197, 203, 204, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 335, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "give": [2, 3, 7, 41, 54, 85, 89, 99, 103, 109, 119, 335, 337, 341, 342, 347, 348, 349, 352], "abil": [2, 265, 348, 350], "panel": [2, 343], "usag": [2, 5, 7, 53, 59, 119, 128, 192, 196, 256, 263, 270, 273, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "includ": [2, 3, 4, 7, 9, 21, 32, 59, 62, 63, 64, 74, 75, 78, 85, 89, 99, 103, 109, 154, 159, 165, 265, 270, 319, 336, 338, 341, 342, 343, 344, 347, 348, 350, 353], "almost": [2, 344], "ani": [2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 89, 100, 103, 104, 105, 109, 110, 111, 116, 131, 141, 142, 146, 159, 161, 165, 167, 175, 177, 178, 184, 198, 206, 229, 239, 240, 241, 242, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 280, 304, 316, 335, 341, 342, 343, 347, 348, 350, 352, 353], "physic": [2, 6, 7, 103, 106, 338, 341, 347, 348], "theori": 2, "t": [2, 3, 4, 6, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 57, 65, 71, 85, 86, 88, 89, 100, 101, 103, 109, 119, 124, 127, 128, 141, 145, 146, 154, 156, 163, 165, 174, 190, 194, 230, 235, 239, 271, 280, 281, 282, 283, 284, 286, 306, 316, 318, 332, 335, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "guarante": [2, 32, 34, 36, 39, 62, 63, 64, 74, 75, 78, 85, 89, 103, 109, 165, 352], "crude": 2, "made": [2, 3, 32, 38, 52, 62, 63, 64, 74, 75, 78, 85, 89, 103, 109, 235, 253, 278, 341, 342, 344, 347, 349, 350], "replaybuff": [2, 41, 42, 67, 79, 119, 142, 146, 253, 258, 278, 326, 328, 334, 343, 347, 349, 350, 352], "liststorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 350], "veri": [2, 3, 94, 95, 342, 348, 350, 352, 353], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 52, 57, 67, 70, 72, 73, 81, 82, 85, 89, 94, 95, 103, 109, 144, 174, 198, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 275, 278, 336, 338, 341, 343, 344, 347, 348, 350, 353], "you": [2, 3, 5, 6, 7, 8, 9, 10, 32, 43, 54, 85, 89, 93, 98, 103, 104, 105, 107, 108, 109, 110, 111, 115, 165, 194, 306, 335, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "complex": [2, 32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 341, 342], "tensor": [2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 134, 137, 139, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 249, 250, 252, 253, 255, 256, 257, 260, 261, 263, 265, 267, 268, 269, 270, 272, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 325, 336, 338, 341, 342, 343, 344, 347, 348, 350, 352, 353], "contigu": [2, 8, 54, 57, 58, 85, 89, 103, 109, 171, 347, 348, 350, 352], "tensorstorag": [2, 38, 350], "lazytensorstorag": [2, 38, 41, 42, 76, 146, 343, 347, 350], "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 118, 119, 341, 342, 344, 349, 350], "citizen": 2, "pytre": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 64, 67], "tupl": [2, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 64, 67, 75, 76, 83, 84, 85, 89, 103, 109, 116, 126, 128, 134, 135, 137, 142, 150, 174, 180, 186, 187, 192, 195, 196, 197, 198, 204, 207, 211, 212, 213, 230, 231, 237, 238, 243, 249, 250, 252, 256, 257, 259, 263, 265, 267, 268, 269, 270, 272, 280, 281, 282, 283, 299, 310, 312, 314, 323, 324, 341, 350], "dictionari": [2, 13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 70, 72, 73, 85, 88, 89, 90, 103, 109, 110, 111, 155, 159, 236, 240, 270, 312, 330, 331, 332, 338, 342, 343, 348, 353], "nest": [2, 3, 26, 28, 32, 34, 36, 38, 39, 48, 62, 63, 67, 78, 85, 88, 89, 90, 103, 109, 119, 153, 156, 175, 280, 281, 282, 283, 284, 338, 342, 343, 347, 348, 350, 352], "construct": [2, 5, 32, 35, 38, 41, 42, 52, 67, 85, 88, 89, 103, 104, 109, 124, 127, 167, 192, 196, 215, 240, 316, 336, 342, 343, 344, 348, 350, 353], "time": [2, 3, 4, 7, 8, 14, 16, 18, 19, 20, 21, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 81, 82, 85, 86, 89, 94, 95, 98, 102, 103, 104, 105, 106, 109, 115, 118, 120, 142, 149, 155, 156, 165, 174, 188, 190, 194, 196, 197, 235, 251, 257, 260, 264, 265, 267, 268, 272, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 316, 336, 337, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "wherea": [2, 22, 57, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 126, 265, 338], "ram": [2, 88, 90, 350], "prealloc": [2, 3, 348], "ve": [2, 40, 341, 344], "been": [2, 3, 5, 7, 8, 18, 20, 21, 40, 67, 71, 85, 89, 93, 103, 109, 135, 153, 154, 158, 190, 194, 228, 233, 235, 341, 342, 343, 344, 346, 347, 348, 350, 353], "extend": [2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 68, 72, 73, 75, 76, 77, 79, 80, 118, 146, 313, 338, 341, 342, 343, 344, 347, 349, 350, 352], "here": [2, 3, 4, 7, 8, 9, 10, 58, 59, 83, 84, 85, 89, 93, 103, 104, 105, 109, 119, 306, 336, 337, 341, 342, 343, 344, 347, 348, 350, 352, 353], "start": [2, 3, 4, 5, 13, 21, 45, 59, 72, 73, 86, 98, 174, 311, 341, 342, 347, 348, 350, 353], "replay_buff": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 313, 328, 341, 342, 343, 347, 350], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 122, 128, 129, 134, 135, 137, 139, 141, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 158, 163, 165, 171, 174, 175, 176, 187, 190, 191, 192, 194, 195, 196, 198, 200, 203, 204, 207, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 299, 309, 312, 325, 328, 336, 337, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 76, 119, 146, 342, 344, 347, 349, 350, 352], "10": [2, 7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 62, 63, 67, 72, 73, 76, 78, 81, 82, 85, 86, 89, 94, 95, 99, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 119, 154, 156, 157, 176, 179, 184, 190, 191, 194, 195, 197, 200, 211, 222, 232, 233, 235, 236, 243, 250, 253, 255, 257, 267, 268, 269, 272, 278, 280, 281, 282, 283, 286, 307, 338, 341, 342, 343, 344, 347, 348, 350, 352, 353], "add": [2, 3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 68, 76, 77, 79, 80, 85, 89, 103, 109, 119, 135, 192, 196, 205, 234, 249, 311, 343, 344, 347, 348, 350, 352], "string": [2, 18, 19, 20, 32, 37, 45, 60, 85, 89, 103, 109, 115, 141, 153, 163, 192, 196, 230, 236, 237, 248, 298, 315, 325, 337, 341, 343, 344, 350], "element": [2, 13, 14, 16, 17, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 67, 73, 76, 78, 102, 119, 142, 151, 154, 177, 178, 190, 191, 194, 224, 228, 230, 239, 240, 244, 307, 341, 343, 350, 353], "30": [2, 38, 55, 136, 214, 215, 301, 347, 348, 350], "none": [2, 3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 78, 85, 86, 87, 88, 89, 98, 99, 103, 104, 105, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 325, 328, 330, 331, 332, 336, 338, 341, 342, 347, 348, 350, 352], "int": [2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 118, 119, 120, 121, 126, 131, 132, 136, 137, 139, 141, 142, 145, 152, 153, 156, 159, 160, 161, 163, 167, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 249, 250, 251, 257, 259, 260, 264, 265, 266, 267, 268, 272, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 307, 308, 309, 312, 313, 316, 318, 325, 326, 330, 331, 332, 348], "tell": [2, 3, 4, 7, 104, 105, 341, 344, 347], "our": [2, 3, 7, 8, 18, 38, 119, 299, 336, 341, 342, 343, 344, 346, 347, 349, 350, 352], "want": [2, 3, 6, 7, 8, 73, 137, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 336, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "far": [2, 40, 193, 219, 220, 348, 353], "restrict": [2, 3, 342, 349, 350, 353], "empti": [2, 3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 64, 67, 85, 89, 102, 103, 109, 124, 127, 141, 143, 156, 159, 161, 163, 303, 341, 348], "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 83, 84, 85, 88, 89, 90, 91, 92, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 116, 119, 123, 126, 128, 129, 135, 137, 139, 141, 143, 144, 146, 149, 150, 153, 154, 155, 157, 158, 159, 161, 163, 171, 176, 177, 178, 180, 181, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 207, 210, 212, 222, 224, 225, 226, 227, 230, 231, 236, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 286, 289, 290, 291, 292, 294, 295, 296, 297, 299, 315, 336, 338, 341, 342, 343, 344, 347, 348, 350, 352, 353], "64": [2, 3, 34, 36, 39, 52, 57, 67, 119, 145, 180, 181, 189, 192, 196, 204, 212, 278, 341, 342, 343, 344, 346, 348, 350, 352, 353], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 55, 57, 58, 59, 60, 62, 63, 65, 72, 73, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 117, 123, 124, 125, 126, 127, 128, 129, 135, 137, 139, 141, 143, 144, 146, 150, 153, 155, 157, 158, 159, 161, 163, 167, 171, 174, 175, 176, 187, 190, 191, 192, 194, 195, 196, 200, 205, 206, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 286, 325, 336, 343, 346, 347, 348, 350, 352, 353], "unit8": 2, "img": 2, "randint": [2, 45, 67, 157, 350], "255": [2, 67, 157, 350], "uint8": [2, 3, 34, 36, 39, 47, 52, 57, 83, 84, 128, 139, 157, 342, 350], "next": [2, 3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 99, 103, 107, 108, 109, 110, 111, 118, 119, 124, 127, 128, 129, 134, 135, 139, 143, 144, 146, 149, 150, 153, 155, 164, 165, 171, 174, 176, 191, 192, 195, 196, 200, 215, 245, 249, 250, 252, 253, 255, 256, 257, 258, 263, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 310, 312, 314, 341, 342, 344, 348, 349, 350, 352, 353], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 57, 59, 60, 85, 86, 89, 93, 103, 104, 109, 110, 111, 119, 141, 158, 159, 161, 164, 165, 171, 174, 177, 178, 180, 181, 182, 183, 184, 189, 192, 196, 198, 199, 203, 204, 229, 240, 253, 258, 268, 270, 278, 299, 313, 320, 321, 322, 328, 330, 331, 336, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "ask": [2, 8, 52, 57, 72, 73, 299, 341, 343, 344, 347, 349, 353], "do": [2, 3, 4, 7, 59, 85, 89, 103, 109, 110, 111, 142, 164, 165, 174, 204, 205, 226, 280, 338, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353], "automat": [2, 3, 5, 59, 62, 63, 67, 78, 85, 88, 89, 90, 103, 104, 105, 109, 124, 127, 137, 164, 177, 224, 236, 336, 341, 343, 347, 348, 350, 352], "hand": [2, 3, 7, 21, 26, 347, 348], "below": [2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 60, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 190, 193, 194, 198, 204, 220, 239, 313, 341, 342, 343, 344, 348], "look": [2, 3, 5, 7, 8, 32, 85, 89, 98, 103, 104, 105, 109, 141, 142, 161, 236, 240, 241, 242, 337, 343, 344, 347, 348, 349, 350, 352, 353], "root": [2, 3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 103, 119, 156, 174, 193, 219, 220, 344, 347, 348, 350, 353], "assum": [2, 3, 6, 26, 33, 40, 41, 42, 53, 55, 57, 58, 59, 89, 103, 109, 118, 121, 131, 141, 142, 149, 155, 161, 163, 171, 192, 196, 197, 222, 243, 253, 258, 270, 278, 289, 290, 291, 292, 294, 295, 296, 297, 299, 341, 343, 344, 346, 348], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 53, 71, 83, 84, 85, 88, 90, 91, 155, 193, 212, 219, 220, 341, 344, 347, 348, 350, 352], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 44, 45, 46, 47, 53, 55, 57, 58, 59, 62, 63, 72, 73, 76, 78, 83, 84, 85, 88, 89, 90, 91, 103, 109, 110, 111, 118, 119, 120, 131, 137, 139, 142, 149, 152, 157, 160, 165, 177, 178, 179, 184, 192, 194, 196, 198, 201, 202, 203, 205, 206, 211, 212, 216, 217, 218, 219, 222, 230, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 332, 336, 341, 342, 343, 344, 347, 348, 350], "leav": [2, 26, 38, 85, 175, 341, 350], "tree": [2, 34, 36, 39, 85, 89, 103, 109, 350], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 75, 83, 84, 85, 86, 88, 89, 90, 91, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 177, 178, 185, 192, 196, 198, 203, 204, 218, 224, 229, 230, 236, 237, 239, 240, 243, 244, 250, 257, 264, 266, 268, 270, 313, 318, 336, 341, 343, 346, 347, 348, 350, 352, 353], "don": [2, 3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 119, 342, 343, 350, 352, 353], "throw": [2, 32, 34, 36, 39, 85, 89, 103, 109, 353], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 158, 174, 175, 176, 184, 187, 192, 196, 200, 212, 213, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 307, 313, 325, 336, 341, 342, 343, 344, 347, 348, 350, 352, 353], "max": [2, 23, 33, 36, 41, 45, 60, 65, 76, 126, 156, 218, 219, 220, 229, 235, 250, 251, 257, 266, 268, 270, 341, 343, 344, 347], "label": [2, 36, 37, 40, 45, 341, 350], "100": [2, 13, 14, 16, 17, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 81, 82, 85, 89, 94, 95, 103, 109, 122, 128, 137, 146, 151, 153, 203, 231, 299, 308, 328, 342, 343, 346, 347, 348, 350, 352, 353], "rb_pytre": 2, "dim": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 72, 119, 120, 139, 155, 160, 165, 195, 197, 217, 222, 332, 342, 343, 348, 350], "b": [2, 3, 7, 8, 23, 26, 28, 34, 36, 38, 39, 40, 41, 42, 76, 190, 191, 194, 195, 203, 204, 205, 206, 212, 221, 243, 280, 281, 282, 283, 284, 286, 299, 336, 342, 350], "randn": [2, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 72, 73, 78, 118, 137, 171, 179, 184, 187, 190, 191, 194, 195, 197, 201, 202, 203, 207, 210, 211, 213, 224, 225, 226, 227, 229, 230, 236, 237, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283, 315, 336, 350, 352, 353], "c": [2, 3, 6, 7, 26, 34, 36, 38, 39, 41, 42, 56, 137, 157, 194, 195, 342, 350], "zero": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 44, 45, 46, 47, 53, 63, 72, 73, 78, 85, 89, 103, 109, 118, 120, 124, 126, 127, 137, 143, 146, 171, 174, 176, 190, 191, 192, 194, 195, 196, 197, 201, 202, 204, 212, 221, 232, 233, 235, 238, 246, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 286, 344, 350, 352], "assert": [2, 3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 89, 92, 103, 109, 115, 119, 122, 124, 127, 135, 144, 151, 165, 167, 171, 204, 207, 222, 280, 281, 282, 283, 307, 315, 341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 78, 139, 177, 178, 198, 204, 341, 348, 349, 350, 352], "ambigu": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "signatur": [2, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 75, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 337, 341, 348], "deal": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 341, 343, 347, 350], "interpret": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 342], "put": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 89, 110, 111, 165, 306, 332, 336, 342, 343, 344, 348], "slice": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 118], "solv": [2, 4, 9, 10, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 335, 341, 342, 343, 347, 348, 350], "make": [2, 3, 4, 7, 32, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 70, 74, 75, 80, 85, 89, 90, 93, 95, 97, 101, 103, 109, 129, 137, 141, 142, 146, 153, 161, 167, 190, 191, 194, 195, 203, 204, 205, 230, 240, 249, 251, 264, 267, 269, 280, 281, 282, 283, 313, 322, 332, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "clear": [2, 26, 28, 29, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 93, 103, 109, 308], "cut": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "distinct": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 346], "between": [2, 3, 4, 5, 13, 14, 17, 21, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 73, 85, 89, 103, 109, 110, 111, 126, 136, 147, 159, 167, 177, 178, 190, 192, 196, 198, 203, 204, 231, 236, 240, 249, 251, 252, 255, 256, 257, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 280, 312, 316, 337, 341, 342, 344, 347, 348, 353], "view": [2, 3, 8, 27, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 103, 109, 116, 187, 190, 194, 198, 348, 350, 352, 353], "indic": [2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 67, 68, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 110, 111, 119, 120, 153, 154, 155, 156, 159, 175, 177, 178, 198, 201, 202, 204, 235, 237, 238, 246, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 320, 332, 335, 338, 343, 344, 348, 350, 353], "through": [2, 3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 57, 81, 82, 93, 94, 95, 98, 103, 104, 105, 109, 124, 127, 142, 198, 212, 236, 240, 241, 242, 246, 280, 281, 282, 283, 336, 341, 342, 343, 346, 347, 348, 349, 350, 353], "seri": [2, 7, 8, 33, 61, 68, 76, 77, 79, 80, 109, 136, 158, 299, 336, 337, 341, 342, 343, 347, 350, 353], "collate_fn": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 350, 352], "__init__": [2, 3, 7, 85, 99, 115, 116, 124, 127, 143, 176, 187, 190, 194, 200, 244, 250, 252, 256, 257, 263, 268, 270, 272, 338, 348, 353], "expect": [2, 3, 4, 7, 26, 32, 38, 44, 45, 71, 85, 89, 99, 102, 103, 109, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 190, 191, 192, 194, 195, 196, 203, 204, 231, 235, 239, 242, 249, 250, 251, 252, 253, 255, 256, 257, 263, 264, 265, 267, 268, 269, 270, 272, 278, 320, 335, 336, 337, 338, 341, 343, 344, 347, 348, 350, 353], "major": 2, "worri": [2, 43], "even": [2, 3, 4, 8, 14, 18, 19, 20, 21, 62, 63, 64, 74, 75, 78, 85, 86, 89, 93, 103, 109, 175, 341, 343, 347, 348, 353], "though": [2, 4, 85, 89, 103, 109, 198, 343, 347], "regular": [2, 17, 34, 36, 39, 70, 85, 89, 103, 109, 159, 213, 231, 237, 238, 239, 240, 258, 318, 334, 338, 341, 342, 350, 353], "too": [2, 7, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 85, 89, 103, 109, 136, 155, 193, 219, 220, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 342, 343, 348, 350, 353], "latter": [2, 18, 19, 20, 32, 53, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 267, 330, 331], "inv": [2, 3, 122, 126, 139, 146, 151, 348], "method": [2, 3, 4, 11, 15, 16, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 72, 73, 74, 75, 76, 78, 85, 88, 89, 90, 91, 103, 106, 109, 119, 123, 124, 125, 128, 129, 131, 135, 137, 141, 143, 144, 145, 146, 150, 153, 155, 158, 159, 161, 163, 176, 197, 224, 225, 226, 227, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 284, 298, 329, 337, 338, 339, 342, 343, 344, 348, 350, 353], "obvious": 2, "ignor": [2, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 85, 89, 103, 109, 126, 129, 150, 157, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 280, 350], "preprocess": [2, 45, 52, 54, 342], "multithread": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 100, 101, 350], "thread": [2, 13, 14, 17, 34, 36, 39, 81, 82, 94, 95, 103, 109], "prefetch": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 341, 342, 344, 350], "advis": [2, 54, 353], "benchmark": [2, 3, 9, 82, 94, 95, 347], "techniqu": [2, 8, 342, 350], "real": [2, 5, 57, 240, 337, 344, 348], "life": [2, 128], "adopt": [2, 3, 5, 341, 353], "throughput": [2, 9, 341], "constant": [2, 119, 137, 154, 338, 341, 343, 344, 353], "throughout": [2, 3, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 343, 353], "further": [2, 3, 5, 343], "refin": [2, 57, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278], "sampler": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 142, 253, 258, 278, 341, 343, 347, 350], "coupl": [2, 344, 348, 350], "how": [2, 3, 18, 19, 20, 32, 35, 41, 57, 65, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 249, 251, 262, 264, 267, 299, 301, 316, 335, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "get": [2, 3, 4, 6, 7, 8, 9, 26, 28, 34, 35, 36, 38, 39, 52, 53, 57, 62, 63, 72, 73, 74, 75, 76, 78, 85, 86, 89, 103, 109, 116, 118, 120, 124, 126, 127, 135, 137, 142, 154, 155, 157, 165, 224, 232, 233, 236, 237, 240, 280, 281, 282, 283, 284, 303, 336, 341, 342, 343, 344, 347, 348, 350, 352, 353], "first_elt": 2, "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 21, 22, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 72, 73, 78, 81, 82, 85, 88, 89, 91, 92, 94, 95, 99, 100, 101, 103, 106, 107, 108, 109, 116, 117, 119, 120, 122, 123, 125, 126, 135, 136, 137, 141, 146, 149, 151, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 167, 176, 177, 178, 180, 181, 183, 184, 188, 190, 192, 193, 194, 195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 210, 214, 215, 218, 219, 220, 222, 224, 228, 229, 231, 232, 233, 235, 238, 239, 242, 243, 246, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 280, 281, 282, 283, 286, 287, 288, 307, 314, 328, 332, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "128": [2, 52, 53, 57, 73, 81, 82, 94, 95, 181, 184, 342, 344, 349, 350], "wa": [2, 3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 85, 89, 103, 109, 159, 175, 194, 262, 271, 286, 337, 342, 343, 346, 350, 352], "print": [2, 3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 52, 54, 57, 59, 60, 67, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 119, 120, 124, 125, 126, 127, 134, 137, 143, 144, 146, 149, 153, 155, 156, 157, 165, 171, 174, 175, 177, 178, 184, 187, 192, 198, 201, 202, 203, 204, 207, 210, 213, 224, 225, 226, 227, 229, 230, 232, 233, 235, 237, 239, 242, 244, 265, 325, 328, 336, 338, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 120], "larger": [2, 4, 256, 263], "volum": 2, "due": [2, 3, 5, 349, 350, 353], "serialis": [2, 34, 36, 39], "memorymappedtensor": [2, 34, 36, 45, 52, 62, 301], "well": [2, 3, 8, 21, 32, 35, 37, 38, 41, 42, 70, 74, 85, 89, 103, 109, 194, 214, 215, 265, 284, 341, 342, 344, 349, 350, 352, 353], "specifi": [2, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 103, 104, 105, 109, 110, 111, 124, 125, 127, 149, 152, 154, 160, 176, 194, 239, 240, 265, 271, 306, 336, 341, 343, 344], "file": [2, 6, 7, 8, 34, 36, 39, 52, 53, 54, 55, 57, 58, 59, 110, 298, 299, 301, 338, 340, 341, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353], "locat": [2, 7, 34, 36, 39, 45, 59, 85, 89, 103, 109, 128, 137, 148, 193, 207, 219, 220, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 341, 342, 343, 347, 350], "improv": [2, 4, 132, 249, 337, 347, 350], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 16, 17, 18, 19, 20, 21, 103, 109, 343, 350], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 52, 53, 54, 55, 57, 58, 59, 72, 73, 83, 84, 85, 88, 89, 90, 93, 103, 109, 116, 119, 146, 149, 156, 165, 175, 232, 233, 236, 240, 264, 265, 267, 341, 342, 344], "rough": 2, "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 52, 54, 55, 56, 57, 58, 59, 65, 81, 82, 83, 84, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 110, 111, 119, 141, 161, 179, 180, 181, 182, 183, 184, 187, 188, 189, 194, 200, 201, 202, 206, 208, 209, 211, 212, 214, 215, 221, 231, 235, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 280, 285, 293, 325, 349, 352], "github": [2, 5, 6, 7, 10, 18, 19, 20, 52, 54, 55, 57, 81, 82, 83, 84, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 161, 352], "com": [2, 5, 6, 7, 10, 18, 19, 20, 54, 57, 58, 81, 82, 83, 84, 91, 93, 94, 95, 100, 101, 104, 105, 106, 110, 111, 352], "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 126, 194, 195, 344, 350], "sharabl": [2, 103, 109], "featur": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 55, 72, 73, 85, 89, 98, 103, 104, 105, 107, 108, 109, 119, 131, 135, 139, 155, 156, 160, 165, 177, 178, 188, 189, 190, 191, 192, 194, 195, 196, 198, 205, 206, 240, 249, 251, 264, 267, 269, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 332, 336, 341, 342, 343, 344, 348, 350, 353], "popul": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 134, 155, 341, 343, 344, 348, 350], "collabor": [2, 57], "rather": [2, 4, 75, 144, 341, 342, 343, 347], "incur": [2, 81, 82, 94, 95], "some": [2, 3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 53, 59, 62, 63, 67, 76, 78, 81, 82, 85, 89, 94, 95, 103, 104, 105, 109, 110, 111, 141, 159, 161, 167, 180, 192, 196, 217, 240, 241, 242, 299, 307, 319, 336, 338, 341, 342, 343, 344, 347, 348, 350, 352, 353], "transmiss": 2, "overhead": [2, 81, 82, 94, 95, 103, 109], "subclass": [2, 3, 67, 85, 89, 103, 109, 158, 164, 167, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 239, 240, 241, 243, 246, 265, 267, 342, 344, 348, 350], "instanti": [2, 3, 21, 34, 36, 39, 93, 158, 204, 341, 342, 347, 348, 350, 353], "content": [2, 8, 16, 26, 28, 34, 35, 36, 38, 39, 41, 42, 71, 85, 88, 89, 90, 100, 103, 109, 143, 177, 178, 198, 203, 204, 236, 265, 343, 348, 352], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 85, 89, 98, 103, 104, 105, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 171, 187, 207, 224, 225, 226, 227, 230, 236, 237, 239, 240, 242, 243, 244, 245, 270, 278, 312, 334, 336, 337, 341, 342, 343, 344, 349], "writer": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 68, 76, 77, 80, 343], "tensordictroundrobinwrit": [2, 67], "current": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 73, 85, 89, 91, 100, 103, 109, 119, 142, 154, 155, 156, 158, 159, 168, 169, 174, 188, 197, 215, 235, 258, 270, 302, 338, 341, 342, 343, 344, 347, 348, 352, 353], "goe": [2, 4, 104, 105, 341, 343, 347, 353], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 253, 258, 278, 341, 350], "access": [2, 3, 7, 8, 32, 35, 54, 56, 85, 89, 103, 109, 141, 161, 332, 335, 341, 347, 348, 350], "show": [2, 32, 85, 89, 103, 109, 204, 299, 336, 341, 343, 344, 347, 348, 350, 352], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 76, 118, 119, 313, 328, 334, 341, 342, 344, 350], "mp": [2, 18, 19, 20, 86, 165], "def": [2, 3, 11, 22, 32, 38, 85, 86, 89, 99, 103, 109, 115, 116, 124, 127, 143, 176, 187, 190, 191, 194, 195, 200, 236, 244, 250, 252, 256, 257, 263, 265, 268, 270, 272, 338, 341, 342, 346, 347, 348, 350, 352, 353], "updat": [2, 3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 65, 85, 89, 99, 103, 104, 105, 109, 116, 124, 126, 127, 143, 153, 154, 159, 162, 165, 175, 176, 190, 192, 196, 200, 228, 232, 233, 235, 236, 237, 238, 239, 240, 249, 250, 252, 253, 255, 257, 258, 259, 262, 263, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 284, 312, 316, 318, 321, 322, 327, 328, 338, 342, 343, 344, 347, 348, 350, 352, 353], "td": [2, 3, 15, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 76, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 96, 97, 103, 109, 116, 118, 120, 124, 125, 126, 127, 134, 135, 137, 146, 149, 155, 157, 159, 165, 174, 176, 187, 192, 196, 199, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237, 239, 242, 244, 278, 281, 282, 283, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 307, 315, 325, 336, 337, 341, 344, 347, 348, 352, 353], "__name__": [2, 22, 86, 342], "__main__": [2, 22, 86], "21": [2, 57, 58, 73, 103, 104, 105, 109, 347], "proc": 2, "target": [2, 4, 8, 21, 32, 85, 86, 89, 103, 109, 154, 158, 239, 240, 249, 250, 251, 252, 253, 255, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 319, 327, 328, 337, 338, 344, 348], "arg": [2, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 52, 62, 63, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 123, 141, 143, 152, 155, 158, 159, 160, 162, 163, 176, 177, 178, 186, 192, 196, 198, 199, 200, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 306, 309, 313, 316, 332, 342], "join": [2, 86, 334, 342, 343], "now": [2, 3, 7, 35, 103, 119, 204, 341, 342, 343, 344, 346, 347, 349, 350, 353], "length": [2, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 52, 57, 60, 72, 73, 75, 85, 89, 94, 95, 103, 109, 142, 165, 176, 177, 178, 180, 182, 184, 186, 190, 194, 198, 200, 203, 204, 224, 239, 244, 307, 313, 341, 343, 344, 348, 350, 353], "20": [2, 45, 58, 72, 73, 76, 85, 89, 93, 103, 109, 154, 190, 191, 194, 195, 229, 307, 344, 347, 353], "_data": [2, 348], "difficult": [2, 4, 103], "pai": [2, 8, 341], "attent": [2, 8, 341, 344, 353], "alwai": [2, 3, 20, 26, 28, 32, 52, 60, 85, 89, 103, 109, 135, 136, 258, 265, 336, 337, 342, 343, 344, 347, 348, 350], "word": [2, 3, 40, 52, 53, 55, 57, 58, 59, 265, 341, 348, 353], "1m": [2, 52, 57, 319, 341, 343, 344], "multidimension": [2, 41, 65, 350], "doe": [2, 3, 18, 34, 35, 36, 39, 41, 45, 52, 53, 57, 65, 74, 75, 80, 85, 89, 103, 109, 110, 111, 184, 190, 191, 192, 194, 195, 196, 205, 222, 229, 241, 242, 249, 251, 258, 264, 267, 279, 316, 336, 338, 341, 342, 343, 344, 348, 350, 353], "howev": [2, 3, 5, 7, 32, 85, 89, 103, 109, 119, 149, 154, 159, 270, 336, 341, 342, 343, 344, 348, 350, 353], "flatten": [2, 34, 36, 39, 131, 313, 344, 347], "capac": [2, 343], "desir": [2, 3, 32, 85, 89, 103, 109, 123, 137, 139, 141, 142, 155, 158, 159, 161, 163, 172, 173, 177, 178, 198, 204, 224, 230, 231, 236, 237, 238, 239, 240, 336, 341, 347, 348], "diversifi": 2, "offer": [2, 3, 7, 81, 82, 85, 89, 94, 95, 103, 109, 336, 342, 348, 353], "accomplish": 2, "slicesampl": [2, 52], "anoth": [2, 3, 8, 34, 36, 39, 57, 85, 88, 89, 90, 93, 103, 109, 124, 125, 127, 155, 158, 198, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 336, 337, 341, 343, 344, 346, 347, 348, 353], "recommend": [2, 4, 7, 34, 36, 39, 93, 347], "__especially__": 2, "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 52, 54, 119, 167, 250, 255, 256, 263, 306, 338, 349, 350, 352], "convent": [2, 3, 52, 53, 54, 55, 56, 57, 58, 59, 85, 89, 103, 109, 110, 111, 337, 341, 344, 347, 348], "reshap": [2, 32, 57, 72, 192, 196, 198, 343, 347], "extens": [2, 73, 338, 350], "detail": [2, 3, 5, 6, 7, 32, 85, 89, 103, 104, 105, 109, 157, 159, 187, 190, 194, 231, 249, 258, 267, 335, 342, 346, 350], "independ": [2, 13, 14, 16, 17, 18, 19, 20, 21, 54, 103, 109, 158, 160, 204, 337, 338, 341, 342, 347, 350, 352], "differ": [2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 53, 54, 57, 70, 81, 82, 85, 89, 94, 95, 98, 103, 104, 105, 109, 119, 126, 137, 144, 159, 160, 187, 190, 191, 192, 194, 195, 196, 198, 200, 203, 204, 213, 263, 267, 275, 280, 281, 282, 286, 287, 288, 312, 316, 318, 330, 331, 336, 337, 338, 341, 342, 343, 346, 347, 348, 349, 350, 353], "congruent": 2, "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 57, 58, 59, 60, 62, 63, 67, 78, 83, 84, 85, 88, 89, 90, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120, 124, 127, 128, 129, 135, 137, 139, 143, 144, 146, 150, 153, 155, 157, 165, 166, 167, 171, 174, 176, 179, 184, 185, 186, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 218, 221, 224, 225, 226, 227, 229, 230, 231, 236, 237, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 313, 316, 328, 336, 341, 342, 343, 344, 346, 347, 349, 350, 352, 353], "custom": [2, 3, 5, 32, 85, 89, 103, 109, 161, 203, 204, 243, 258, 267, 273, 332, 336, 341, 342, 343, 344, 347], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 54, 56, 59, 60, 81, 83, 85, 89, 94, 98, 100, 103, 104, 105, 106, 109, 110, 111, 112, 126, 129, 144, 149, 150, 153, 159, 161, 164, 175, 192, 196, 230, 237, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 284, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 325, 338, 341, 342, 343, 344, 347, 348, 353], "randomcroptensordict": [2, 341], "note": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 85, 89, 103, 109, 124, 127, 165, 175, 190, 192, 194, 196, 235, 236, 240, 258, 341, 342, 346, 347, 353], "unlik": [2, 71, 110, 111, 258, 267, 342, 352], "stop": [2, 3, 16, 21, 40, 59, 72, 73, 85, 89, 103, 109, 343, 347, 352, 353], "signal": [2, 3, 52, 53, 55, 57, 58, 59, 72, 73, 89, 110, 111, 119, 128, 153, 156, 175, 337, 341, 343, 347, 350, 353], "isn": [2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 57, 128, 230, 239, 347], "enjoi": [2, 3, 57], "separ": [2, 4, 8, 13, 14, 17, 18, 20, 21, 23, 52, 54, 141, 163, 250, 252, 255, 257, 268, 270, 272, 341, 342, 347, 350, 353], "save": [2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 103, 109, 164, 298, 299, 301, 306, 316, 338, 347], "disk": [2, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 316, 338, 341, 342, 344, 350], "dump": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 298, 299], "load": [2, 6, 7, 13, 14, 16, 17, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 67, 84, 85, 89, 103, 109, 115, 165, 332, 338, 341, 350], "json": 2, "metadata": [2, 52, 53, 343, 347, 353], "cannot": [2, 3, 4, 7, 22, 26, 27, 28, 31, 33, 64, 72, 73, 85, 88, 89, 90, 93, 103, 109, 124, 127, 142, 149, 237, 342, 343, 344, 347, 348], "anticip": [2, 124, 127], "compli": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 57], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 53, 164, 224, 230, 231, 236, 237, 238, 239, 240, 343, 347, 348, 350], "exact": [2, 3, 103, 194], "statu": [2, 3, 85], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 44, 46, 47, 49, 67, 85, 89, 99, 103, 104, 105, 109, 110, 112, 118, 119, 128, 135, 153, 154, 158, 159, 164, 165, 177, 178, 201, 202, 203, 204, 228, 230, 236, 237, 240, 243, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 299, 316, 328, 338, 341, 342, 343, 344, 347, 348, 349, 350, 353], "prioriti": [2, 4, 35, 41, 42, 62, 63, 64, 65, 74, 75, 78, 252, 253, 255, 256, 257, 258, 263, 268, 270, 272, 278, 338, 341, 342, 350], "heap": 2, "under": [2, 3, 4, 21, 32, 40, 52, 53, 54, 55, 57, 58, 59, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 224, 230, 231, 236, 237, 238, 239, 240, 265, 280, 281, 282, 283, 284, 299, 337, 341, 342, 348, 353], "hood": [2, 21, 52, 348], "just": [2, 3, 4, 11, 75, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 122, 175, 204, 307, 336, 338, 341, 342, 343, 344, 347, 348, 350, 352, 353], "public": [2, 56, 141, 163], "serializ": 2, "altern": [2, 4, 27, 100, 184, 201, 202, 203, 248, 341, 343, 347], "state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 85, 89, 103, 109, 159, 165, 270, 332, 338, 341, 342, 353], "load_state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 85, 89, 103, 109, 159, 165, 270, 338, 341], "drawback": 2, "struggl": 2, "big": [2, 343, 350, 353], "sequenti": [2, 9, 32, 85, 89, 103, 109, 118, 135, 241, 242, 267, 336, 343, 344, 347, 348, 349, 353], "consist": [2, 3, 32, 35, 38, 41, 42, 54, 57, 85, 89, 103, 109, 135, 164, 178, 198, 341, 342, 343, 348, 349, 353], "known": [2, 3, 5, 7, 8, 287, 288, 341, 342], "seamless": [2, 198], "integr": [2, 32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 183, 192, 196, 200, 239, 336, 347, 348, 349], "within": [2, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 57, 85, 89, 103, 106, 109, 119, 124, 127, 128, 153, 164, 165, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 253, 258, 278, 336, 348, 352], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 341, 342], "essenti": [2, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 342, 348, 350], "understand": [2, 3, 8, 341, 342, 347], "purpos": [2, 3, 7, 85, 89, 103, 109, 119, 190, 328, 341, 343, 344, 347, 349, 353], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 57, 236, 240, 341, 343, 347, 348, 353], "guid": [2, 104, 105, 107, 108, 154, 335, 341, 347], "explan": [2, 32, 85, 89, 103, 109], "effect": [2, 3, 26, 32, 52, 57, 67, 70, 72, 73, 85, 89, 103, 109, 119, 159, 316, 341, 350, 353], "realm": 2, "As": [2, 3, 4, 52, 85, 89, 98, 103, 104, 105, 109, 146, 240, 280, 336, 341, 342, 343, 344, 347, 348, 349, 350, 352, 353], "practition": 2, "often": [2, 3, 8, 262, 316, 341, 342, 348, 350, 353], "encount": [2, 4, 57, 335, 342, 348], "situat": 2, "sometim": [2, 3, 344, 353], "discard": [2, 3, 45, 53, 55, 89, 161, 174, 298, 350, 353], "variabl": [2, 4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 54, 55, 58, 59, 81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 101, 102, 106, 110, 111, 190, 191, 192, 194, 195, 196, 200, 225, 226, 227, 265, 268, 338, 342], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 53, 55, 57, 58, 59, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 174, 179, 180, 181, 182, 183, 184, 187, 192, 196, 197, 203, 208, 209, 211, 213, 214, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237, 244, 245, 249, 250, 251, 252, 253, 255, 256, 257, 260, 263, 264, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 325, 328, 336, 338, 342, 343, 344, 346, 347, 348, 350, 352, 353], "immedi": [2, 26, 28, 32, 85, 89, 103, 109, 279, 347], "200": [2, 13, 14, 16, 21, 32, 52, 85, 88, 89, 90, 103, 109, 110, 111, 146, 180, 181, 188, 214, 215, 341, 344], "199": 2, "4": [2, 3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 81, 82, 83, 84, 85, 89, 94, 95, 96, 97, 98, 99, 101, 103, 107, 108, 109, 116, 119, 128, 146, 153, 154, 165, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 191, 194, 195, 197, 198, 200, 203, 204, 207, 208, 209, 210, 211, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 298, 336, 340, 341, 342, 343, 344, 347, 348, 350, 351, 352, 353], "info": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 70, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 104, 105, 107, 108, 109, 110, 111, 161, 164, 166, 306, 347, 350], "At": [2, 199, 232, 342, 343, 344, 346, 348, 349], "glanc": 2, "seem": [2, 341, 344], "togeth": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 85, 89, 98, 103, 104, 105, 109, 119, 142, 190, 192, 194, 196, 221, 225, 226, 227, 245, 336, 342, 343, 344], "suggest": [2, 278, 347], "less": [2, 100, 222, 330, 331, 337, 343, 344, 350, 352], "must": [2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 52, 54, 55, 57, 58, 59, 60, 62, 63, 64, 72, 73, 74, 75, 78, 81, 85, 86, 89, 94, 103, 104, 105, 106, 109, 110, 119, 122, 128, 132, 135, 137, 139, 150, 154, 155, 156, 159, 160, 165, 177, 178, 187, 192, 196, 198, 201, 202, 203, 204, 213, 224, 230, 231, 236, 237, 238, 239, 240, 243, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 341, 342, 343, 344, 346, 348, 350, 352], "omit": [2, 311, 343, 348, 350], "last": [2, 3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 53, 71, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 118, 131, 137, 142, 154, 156, 157, 177, 178, 190, 192, 194, 196, 197, 198, 201, 202, 208, 216, 222, 228, 229, 232, 233, 240, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "without": [2, 3, 7, 9, 32, 40, 52, 53, 57, 72, 73, 85, 89, 103, 109, 110, 111, 116, 124, 127, 157, 190, 191, 194, 195, 226, 227, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 279, 280, 281, 282, 283, 284, 328, 335, 336, 341, 342, 343, 347, 348, 350, 353], "proper": [2, 3, 4, 6, 7, 280, 281, 282, 283, 342, 343, 347, 350], "imposs": [2, 167, 249, 251, 264, 267, 269], "determin": [2, 34, 35, 36, 39, 41, 53, 65, 85, 89, 103, 109, 110, 111, 141, 163, 203, 235, 342, 347], "correspond": [2, 3, 4, 13, 14, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 54, 57, 59, 65, 85, 89, 99, 103, 109, 141, 155, 159, 163, 165, 192, 194, 196, 201, 202, 232, 233, 235, 236, 240, 253, 256, 257, 270, 278, 280, 281, 282, 283, 284, 341, 342, 343, 347, 348, 349], "complic": [2, 348, 350, 353], "matter": 2, "inconsist": [2, 353], "miss": [2, 3, 4, 6, 7, 11, 26, 32, 85, 89, 103, 109, 159, 174, 241, 242, 270, 335, 341, 344], "behavior": [2, 4, 32, 85, 89, 103, 109, 159, 256, 263, 343, 344, 347, 348], "primari": 2, "elimin": [2, 3], "represent": [2, 28, 29, 32, 85, 89, 103, 109, 141, 161, 163, 341, 348, 349, 353], "built": [2, 3, 5, 7, 67, 81, 82, 88, 94, 95, 102, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278, 326, 328, 329, 332, 341, 342, 343, 344, 350, 353], "upon": [2, 8, 348], "canon": 2, "definit": [2, 33, 74, 203], "markov": [2, 3, 353], "decis": [2, 3, 179, 211, 229, 254, 266, 344, 347, 350, 353], "mdp": [2, 348], "context": [2, 3, 5, 8, 32, 85, 86, 89, 102, 103, 109, 155, 160, 204, 205, 229, 276, 277, 280, 281, 282, 283, 285, 293, 299, 312, 336, 337, 341, 342, 343, 347, 348, 349, 350], "condit": [2, 45, 154, 230, 231, 237, 238, 248, 341, 348, 350], "complet": [2, 7, 9, 71, 89, 119, 153, 335, 337, 341, 343, 346], "termin": [2, 3, 7, 32, 40, 52, 53, 55, 57, 58, 59, 83, 84, 85, 88, 89, 90, 94, 95, 103, 104, 105, 107, 108, 109, 110, 111, 128, 143, 175, 176, 192, 196, 200, 241, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 342, 343, 347, 348, 352, 353], "truncat": [2, 3, 13, 14, 16, 17, 37, 43, 45, 52, 53, 55, 57, 58, 59, 72, 73, 83, 84, 85, 88, 89, 90, 103, 104, 105, 109, 110, 111, 128, 129, 136, 143, 146, 153, 175, 192, 196, 220, 286, 341, 343, 353], "reward": [2, 3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 52, 55, 57, 58, 59, 60, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 116, 117, 122, 123, 124, 125, 127, 128, 129, 135, 139, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 158, 159, 160, 162, 163, 165, 171, 174, 176, 192, 200, 229, 245, 249, 250, 252, 253, 255, 256, 257, 260, 263, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 310, 312, 314, 332, 337, 338, 341, 342, 343, 344, 347, 348, 352, 353], "imit": [2, 3], "addit": [2, 3, 4, 32, 53, 85, 89, 103, 109, 110, 123, 141, 155, 158, 159, 161, 163, 190, 228, 229, 239, 248, 265, 280, 337, 341, 342, 347, 350], "inform": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 43, 57, 85, 86, 89, 92, 103, 109, 177, 178, 198, 204, 337, 338, 341, 342, 343, 344, 347, 348, 350], "stateless": [2, 3, 85, 89, 103, 109, 158, 265, 341, 348, 353], "simul": [2, 3, 5, 7, 8, 81, 82, 91, 94, 95, 106, 110, 111, 114, 176, 200, 336, 341, 343, 347], "furthermor": [2, 347], "certain": [2, 4, 18, 19, 20, 21, 32, 45, 85, 89, 103, 109, 115, 132, 153, 159, 191, 195, 232, 264, 336, 341, 342, 343, 347, 353], "scenario": [2, 103, 110, 111, 341, 347, 348], "organ": [2, 348, 350], "composit": [2, 3, 26, 28, 70, 75, 80, 85, 89, 103, 109, 299, 343, 348], "accommod": [2, 3], "uniform": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 65], "unambigu": 2, "distinguish": [2, 110, 111], "happen": [2, 3, 85, 89, 103, 109, 228, 342, 349, 353], "limit": [2, 40, 85, 89, 99, 103, 109, 119, 135, 341, 342, 344, 347, 348], "everyth": [2, 342, 344], "belong": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 57, 164, 165, 336, 341, 347], "rule": [2, 103, 124, 127, 240, 336, 343], "entri": [2, 3, 13, 14, 17, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 53, 54, 55, 56, 58, 59, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 110, 111, 119, 121, 122, 124, 127, 128, 131, 134, 137, 139, 141, 144, 146, 149, 151, 153, 154, 155, 163, 165, 174, 175, 192, 201, 202, 229, 230, 237, 238, 250, 270, 280, 281, 282, 283, 336, 341, 343, 344, 347, 348, 349, 350, 353], "field": [2, 3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 52, 55, 57, 58, 59, 62, 63, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 159, 174, 176, 187, 192, 196, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 320, 325, 335, 336, 342, 347, 348], "taken": [2, 3, 85, 89, 103, 109, 145, 201, 202, 233, 337, 341, 343, 344, 347, 348], "is_shar": [2, 3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 52, 55, 57, 58, 59, 60, 62, 63, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 165, 174, 176, 187, 192, 196, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 325, 336, 347, 348], "brought": [2, 343, 344], "step_mdp": [2, 3, 192, 196, 334, 344, 348, 352, 353], "count": [2, 3, 85, 86, 153, 235, 312, 316, 319, 341, 342, 343, 344, 350, 353], "trigger": [2, 7], "partial": [2, 3, 85, 89, 103, 109, 118, 119, 154, 155, 156, 316, 344], "turn": [2, 18, 19, 20, 21, 34, 36, 39, 133, 160, 164, 230, 312, 337, 341, 342, 344, 348, 349], "so": [2, 3, 4, 6, 7, 10, 32, 34, 36, 39, 40, 85, 89, 103, 109, 155, 165, 241, 242, 343, 344, 347, 348, 353], "retain": 2, "regard": [2, 53, 59, 187, 231, 249, 258, 267, 341, 343, 348], "posit": [2, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 83, 84, 85, 89, 103, 109, 131, 132, 152, 153, 156, 159, 160, 207, 270, 337, 343, 347, 348, 350], "both": [2, 3, 7, 32, 57, 85, 86, 88, 89, 103, 104, 105, 109, 119, 144, 159, 175, 177, 178, 192, 195, 196, 198, 203, 204, 225, 226, 227, 231, 238, 249, 251, 252, 256, 257, 263, 264, 265, 267, 268, 269, 270, 272, 312, 336, 341, 343, 347, 348, 349, 350, 353], "ensur": [2, 3, 32, 35, 41, 65, 71, 85, 89, 103, 109, 119, 141, 153, 161, 165, 230, 336, 342, 343, 348, 350], "clearli": 2, "mark": [2, 3, 16, 59, 85, 89, 103, 109, 192, 196], "identifi": [2, 37], "marl": [2, 98, 112, 119, 156, 203, 347], "section": [2, 3, 4, 190, 194, 342, 347], "abov": [2, 3, 7, 32, 85, 89, 103, 109, 193, 219, 220, 248, 337, 338, 341, 343, 347, 348, 353], "output": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 72, 73, 83, 84, 85, 88, 89, 90, 91, 99, 102, 103, 104, 105, 106, 109, 110, 111, 117, 119, 122, 123, 124, 125, 127, 129, 135, 137, 141, 143, 144, 149, 150, 153, 156, 158, 161, 163, 164, 167, 175, 177, 178, 179, 180, 181, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 213, 222, 224, 225, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 307, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353], "typic": [2, 3, 4, 8, 32, 85, 89, 103, 109, 128, 154, 236, 250, 265, 267, 270, 336, 337, 338, 343, 347, 348], "adjust": [2, 341, 347, 348], "grumodul": [2, 118], "lstmmodul": [2, 344], "skip": [2, 32, 52, 85, 89, 103, 109, 132, 159, 167, 236, 240, 265, 270, 280, 281, 282, 283, 298, 299, 309, 312, 341, 342, 343, 348], "accumul": [2, 8], "upcom": [2, 265, 289, 290, 291, 292, 294, 295, 296, 297, 341], "n": [2, 3, 6, 7, 24, 27, 32, 33, 40, 85, 89, 103, 109, 119, 126, 131, 160, 190, 191, 194, 200, 235, 240, 249, 257, 265, 279, 313, 336, 338, 342, 344, 347, 350, 353], "popular": [2, 3, 336, 344, 347], "rainbow": 2, "multistep": [2, 13, 14, 16, 17, 18, 19, 20, 21, 334, 342], "fail": [2, 7, 22, 26, 28, 103, 116, 167], "shift": [2, 32, 246, 280, 281, 282, 283, 343], "naiv": [2, 161], "consum": [2, 71, 73, 342, 343, 347, 350], "approxim": [2, 347, 353], "twice": [2, 8], "flat": 2, "would": [2, 3, 32, 40, 85, 89, 103, 109, 190, 192, 194, 196, 198, 203, 338, 342, 343, 344, 348, 350, 353], "intens": [2, 3, 8], "ataridqnexperiencereplai": [2, 334], "onlin": [2, 8, 13, 17, 119, 184, 211, 249, 254, 266, 267, 307, 332, 343, 344, 347, 350], "2x": 2, "small": [2, 161, 341, 343, 347, 353], "clearer": 2, "lazi": [2, 28, 29, 49, 50, 85, 89, 103, 109, 110, 111, 141, 161, 177, 205, 241, 242, 341, 342, 346, 350, 353], "certainli": 2, "benefici": [2, 343], "welcom": 2, "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 164, 207, 222, 228, 229, 233, 235, 240, 245, 280, 304, 305, 306, 332, 334, 343, 344, 347, 349, 353], "around": [2, 5, 7, 15, 17, 41, 42, 99, 240, 280, 341, 342, 347, 353], "selecttransform": [2, 85, 89, 103, 109], "excludetransform": [2, 58, 150, 350], "promptli": 2, "virtual": [2, 3, 88], "instal": [2, 3, 5, 10, 18, 19, 20, 53, 56, 85, 89, 103, 104, 105, 107, 108, 109, 301, 316, 335, 343, 344, 347, 353], "respons": [2, 3, 8, 316, 353], "d4rl": [2, 53, 59], "clone": [2, 4, 8, 26, 28, 135, 143, 225, 226, 227, 239, 256, 263, 325, 334, 341, 348, 352], "repositori": [2, 7, 54, 55, 56, 59, 111], "latest": [2, 3, 10, 100, 104, 105, 313, 343, 347, 348, 352], "wheel": [2, 343], "publish": 2, "pypi": [2, 352], "openml": [2, 56, 102], "scikit": [2, 56, 102], "panda": [2, 56], "customari": [2, 336], "moreov": [2, 3], "fine": [2, 85, 89, 103, 109, 135, 349], "grain": [2, 85, 89, 103, 109], "nomenclatur": 2, "compact": 2, "propos": [2, 119, 128, 199, 262, 271, 325, 336, 344, 350], "replaybufferensembl": [2, 52, 70, 75, 80], "primit": [2, 3, 4, 57, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272], "onc": [2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 57, 67, 85, 89, 103, 109, 146, 159, 228, 233, 235, 314, 338, 342, 343, 344, 348, 350, 353], "individu": [2, 4, 18, 19, 20, 21, 32, 45, 67, 85, 89, 103, 109, 341, 347], "dummi": [2, 325, 341, 353], "semant": [2, 28, 29, 336], "ident": [2, 3, 13, 14, 16, 32, 34, 36, 39, 100, 103, 109, 128, 203, 204, 280, 281, 282, 283, 330, 331, 342, 347], "another_kei": [2, 67], "renam": [2, 34, 36, 39, 67, 144, 146, 174, 341], "resiz": [2, 3, 59, 67, 119, 342, 344, 350, 353], "imag": [2, 4, 7, 57, 121, 141, 157, 163, 198, 299, 341, 342, 347, 349, 353], "comops": 2, "totensorimag": [2, 3, 59, 67, 119, 145, 342, 344, 350, 352, 353], "renametransform": [2, 67, 85, 89, 103, 109], "rb0": [2, 67], "in_kei": [2, 3, 13, 14, 16, 17, 21, 53, 67, 81, 82, 85, 89, 99, 103, 109, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 161, 163, 165, 176, 186, 192, 196, 200, 212, 221, 222, 224, 225, 226, 227, 229, 230, 236, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 263, 264, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 298, 299, 325, 328, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "pixel": [2, 3, 7, 26, 59, 67, 83, 84, 88, 90, 91, 106, 119, 121, 128, 131, 133, 137, 139, 141, 145, 157, 161, 163, 180, 208, 209, 299, 325, 336, 341, 342, 344, 349, 350, 352, 353], "32": [2, 22, 26, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 73, 107, 108, 110, 111, 177, 178, 179, 180, 181, 184, 189, 198, 203, 204, 208, 209, 211, 212, 221, 278, 342, 344, 347, 348, 349, 350, 352, 353], "rb1": [2, 67], "p": [2, 4, 67, 70, 86, 107, 108], "5": [2, 3, 24, 26, 28, 35, 38, 41, 42, 52, 67, 72, 73, 86, 94, 95, 100, 107, 108, 110, 111, 118, 146, 153, 154, 176, 177, 178, 187, 188, 190, 193, 194, 197, 198, 200, 203, 204, 208, 213, 219, 220, 229, 230, 237, 243, 264, 267, 269, 272, 336, 340, 341, 342, 347, 348, 350, 351, 352, 353], "33": [2, 26, 32, 67, 85, 89, 103, 109, 177, 178, 198, 347], "out_kei": [2, 3, 13, 14, 16, 17, 21, 67, 81, 82, 85, 89, 99, 103, 109, 117, 118, 119, 120, 121, 122, 124, 127, 131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 161, 163, 165, 176, 186, 187, 192, 196, 200, 212, 213, 221, 222, 224, 225, 226, 227, 229, 231, 236, 237, 238, 239, 240, 242, 243, 244, 249, 250, 251, 256, 257, 263, 264, 267, 268, 269, 270, 278, 280, 281, 282, 283, 299, 312, 328, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "pixels33": [2, 67], "data0": [2, 67], "244": [2, 67, 141, 163], "data1": [2, 67], "_": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 86, 93, 110, 111, 120, 124, 126, 127, 135, 137, 144, 157, 165, 224, 239, 244, 248, 249, 250, 252, 256, 257, 263, 267, 268, 270, 272, 280, 281, 282, 283, 301, 341, 342, 343, 344, 347, 348, 350, 352], "rang": [2, 3, 4, 8, 11, 27, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 67, 76, 85, 86, 89, 103, 109, 146, 157, 165, 191, 195, 264, 272, 337, 338, 341, 343, 344, 347, 348, 350, 352], "parent": [2, 3, 21, 26, 28, 44, 67, 75, 80, 85, 89, 103, 109, 119, 120, 123, 125, 128, 131, 132, 137, 141, 149, 153, 154, 155, 156, 158, 160, 161, 225, 265, 267, 284, 341, 348, 352, 353], "basic": [2, 99, 336, 343, 353], "properti": [2, 3, 32, 34, 36, 39, 85, 89, 99, 103, 109, 158, 159, 185, 193, 205, 210, 218, 219, 220, 265, 270, 348, 350], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 85, 89, 99, 102, 103, 104, 105, 109, 110, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 174, 175, 177, 178, 180, 181, 182, 183, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 206, 213, 214, 215, 216, 217, 222, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 310, 314, 319, 328, 336, 337, 338, 341, 342, 343, 344, 347, 348, 352, 353], "send": [2, 3, 8, 306, 352], "receiv": [2, 3, 32, 40, 85, 89, 103, 109, 158, 198, 286, 337, 341, 343, 346, 348], "spawn": [2, 3, 4, 18, 22, 93, 100, 347], "check_env_spec": [2, 3, 89, 103, 143, 334, 343, 347, 348], "saniti": [2, 3, 7, 167, 343], "utmost": 2, "commonli": [2, 72, 73, 353], "emploi": [2, 206], "languag": [2, 40], "scarc": 2, "address": [2, 350], "subdomain": 2, "facilit": [2, 3, 7, 140, 141, 161, 163, 225, 226, 227, 336, 341, 344, 348], "extern": [2, 3, 124, 127, 353], "token": [2, 36, 37, 40, 43, 45, 60], "manner": [2, 89, 141, 161, 336, 341, 342, 343, 346, 348, 350], "handl": [3, 21, 32, 85, 89, 103, 109, 164, 165, 196, 198, 316, 330, 331, 341, 342, 343, 347, 350], "dm": [3, 341, 353], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 57, 69, 76, 77, 79, 81, 82, 85, 89, 93, 94, 95, 99, 100, 101, 103, 109, 110, 146, 155, 161, 162, 203, 225, 234, 249, 250, 252, 253, 255, 256, 257, 259, 263, 267, 268, 269, 270, 272, 306, 316, 325, 336, 337, 338, 341, 342, 344, 347, 348, 350, 353], "goal": [3, 4, 154, 341, 342, 343, 344, 347, 348], "abl": [3, 98, 104, 105, 341, 343, 344, 346, 347, 348, 350, 352], "experi": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 167, 301, 302, 303, 304, 305, 306, 335, 342, 343, 347, 350], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 85, 86, 89, 103, 104, 105, 107, 108, 109, 119, 122, 128, 134, 135, 137, 139, 144, 146, 149, 155, 158, 164, 165, 325, 328, 341, 342, 343, 344, 346, 347, 349, 350, 352, 353], "hope": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 81, 82, 85, 89, 99, 103, 109, 123, 126, 128, 135, 141, 155, 158, 159, 161, 163, 176, 177, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 204, 207, 212, 213, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 325, 328, 336, 337, 341, 342, 343, 344, 346, 347, 348, 349, 352], "organis": [3, 58, 342], "arbitrari": [3, 33, 38, 85, 89, 103, 109, 336, 341, 342, 348, 350], "structur": [3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 76, 85, 89, 103, 109, 124, 127, 175, 203, 235, 280, 281, 282, 283, 284, 334, 337, 341, 343, 344, 347, 348, 349, 350], "attribut": [3, 4, 32, 34, 36, 39, 45, 57, 85, 88, 89, 90, 103, 109, 128, 141, 161, 192, 196, 240, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341, 344, 348], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 99, 103, 109, 128], "actual": [3, 4, 7, 52, 53, 54, 55, 57, 58, 59, 85, 89, 103, 109, 164, 319, 337, 341, 343, 347, 348], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 70, 85, 88, 89, 90, 103, 109, 120, 125, 128, 137, 174, 176, 177, 200, 236, 240, 243, 249, 250, 251, 253, 264, 267, 268, 270, 272, 278, 280, 281, 282, 283, 325, 332, 338, 342, 343, 348, 353], "care": [3, 8, 85, 89, 103, 109, 158, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 299, 341, 343, 347, 348, 350], "parametr": [3, 206, 240, 250, 256, 263, 270, 341, 343], "hardwar": 3, "observation_spec": [3, 85, 89, 99, 103, 109, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 133, 134, 135, 137, 139, 141, 143, 145, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 164, 176, 192, 196, 200, 320, 328, 341, 343, 346, 347, 348, 353], "compositespec": [3, 28, 29, 49, 85, 87, 89, 99, 103, 109, 116, 124, 125, 126, 127, 129, 135, 143, 144, 150, 153, 155, 158, 171, 175, 176, 200, 224, 228, 236, 242, 243, 334, 341, 347, 348, 353], "pair": [3, 32, 34, 36, 39, 53, 83, 84, 85, 89, 103, 109, 146, 155, 192, 225, 236, 240, 265, 280, 281, 282, 283, 284, 336, 337, 341, 342, 343, 346, 348, 353], "state_spec": [3, 85, 89, 99, 103, 109, 116, 176, 200, 343, 348, 353], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 81, 82, 85, 89, 94, 95, 99, 103, 104, 105, 109, 116, 119, 124, 127, 135, 143, 146, 176, 187, 200, 213, 215, 224, 230, 236, 237, 250, 253, 255, 268, 270, 272, 328, 336, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "reward_spec": [3, 85, 89, 99, 103, 109, 116, 117, 122, 123, 124, 125, 127, 143, 147, 148, 149, 151, 158, 160, 176, 200, 343, 347, 348, 353], "done_spec": [3, 85, 89, 103, 109, 124, 125, 127, 128, 143, 158, 175, 343, 347, 348, 353], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 110, 111, 235, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 336, 347, 348, 349], "input_spec": [3, 85, 89, 99, 103, 109, 123, 124, 125, 126, 137, 139, 143, 144, 149, 150, 153, 154, 155, 158, 159, 160, 162, 348], "full_action_spec": [3, 85, 89, 103, 109, 176, 200, 347], "full_state_spec": [3, 85, 89, 103, 109, 176, 200], "lock": [3, 26, 28, 34, 36, 39, 85, 89, 103, 109, 155, 165, 348], "modifi": [3, 7, 8, 26, 28, 32, 45, 85, 89, 103, 109, 123, 131, 135, 141, 155, 158, 159, 161, 163, 229, 235, 239, 319, 325, 341, 342, 343, 347, 348], "directli": [3, 4, 8, 52, 67, 81, 82, 85, 88, 89, 99, 103, 109, 146, 164, 265, 332, 336, 343, 347, 348, 350], "output_spec": [3, 85, 89, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 159, 348], "full_observation_spec": [3, 85, 89, 103, 109, 176, 200], "full_reward_spec": [3, 85, 89, 103, 109, 143, 347], "full_done_spec": [3, 85, 89, 103, 109, 143, 175, 347], "importantli": [3, 236, 240], "action_s": 3, "help": [3, 4, 32, 85, 89, 103, 109, 128, 335, 337, 341, 342, 343, 344, 347], "With": [3, 94, 95, 98, 154, 338, 341, 342, 347, 350, 353], "necessarili": [3, 85, 89, 103, 109, 353], "requir": [3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 53, 55, 57, 85, 89, 93, 100, 103, 106, 109, 123, 141, 155, 158, 159, 161, 163, 198, 222, 239, 241, 242, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 299, 301, 336, 338, 341, 342, 343, 344, 347, 348, 350, 353], "present": [3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 71, 85, 88, 89, 103, 109, 129, 146, 150, 174, 175, 179, 180, 181, 182, 183, 189, 194, 206, 211, 235, 239, 240, 241, 242, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 332, 338, 341, 346, 347, 350, 352], "0s": [3, 52, 57, 155, 344], "step_and_maybe_reset": [3, 85, 89, 103, 109], "done_kei": [3, 85, 89, 103, 109, 128, 146, 153, 174, 347], "assign": [3, 4, 13, 14, 17, 32, 34, 36, 39, 85, 89, 103, 109, 159, 252, 253, 255, 270, 343, 347, 350], "_reset": [3, 85, 89, 99, 103, 109, 116, 119, 124, 127, 143, 175, 176, 200], "data_": [3, 85, 89, 103, 109], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 62, 63, 65, 73, 78, 85, 89, 103, 109, 141, 146, 149, 159, 163, 191, 195, 207, 213, 231, 236, 238, 239, 240, 280, 281, 282, 283, 307, 319, 341, 342, 343, 344, 347, 348, 350, 352, 353], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 86, 89, 103, 109, 122, 146, 155, 164, 191, 192, 195, 196, 230, 237, 341, 342, 343, 344, 347, 348, 349, 350, 352], "set_se": [3, 13, 14, 16, 17, 21, 81, 82, 85, 89, 94, 95, 99, 103, 109, 137, 144, 149, 154, 156, 159, 348, 352, 353], "seed": [3, 13, 14, 16, 17, 21, 58, 85, 89, 99, 103, 104, 105, 109, 110, 111, 116, 124, 127, 143, 159, 167, 316], "determinist": [3, 32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 179, 188, 208, 215, 224, 233, 239, 240, 243, 250, 336, 341, 342, 344, 348, 353], "preced": [3, 197, 344], "risk": [3, 142], "overlap": [3, 41], "consecut": [3, 52, 71, 93, 196, 235, 344, 347, 353], "reproduc": [3, 119, 167, 341, 343, 347], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 60, 62, 63, 64, 78, 85, 89, 103, 109, 126, 147, 153, 154, 156, 218, 219, 220, 243, 250, 256, 257, 263, 265, 266, 270, 313, 341, 342, 343, 344, 347, 350], "max_step": [3, 13, 85, 89, 99, 103, 109, 110, 111, 153, 347, 352, 353], "tensordictmodul": [3, 13, 14, 16, 17, 21, 40, 81, 82, 99, 118, 135, 187, 192, 196, 200, 212, 213, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 250, 252, 256, 257, 259, 260, 261, 263, 265, 268, 270, 272, 278, 279, 280, 281, 282, 283, 312, 328, 336, 341, 343, 344, 346, 347, 348, 349], "compat": [3, 7, 11, 32, 34, 36, 39, 53, 67, 70, 72, 73, 74, 85, 89, 91, 102, 103, 109, 119, 153, 161, 165, 190, 191, 192, 194, 195, 196, 237, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 275, 341, 344, 350, 352], "trail": [3, 165], "treat": 3, "figur": [3, 341, 343, 344, 347, 348, 353], "summar": [3, 348], "brief": [3, 343], "deliveri": 3, "design": [3, 32, 33, 70, 75, 80, 85, 89, 103, 109, 119, 142, 159, 229, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 341, 342, 343, 344, 346, 347, 348, 350, 353], "metaclass": 3, "everi": [3, 8, 26, 28, 32, 33, 74, 85, 89, 103, 109, 153, 154, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 316, 338, 341, 342, 343, 344, 347, 348], "flank": [3, 344], "dual": 3, "strictli": [3, 8, 32, 85, 89, 103, 109, 159, 270, 341, 343], "refer": [3, 7, 8, 9, 21, 32, 40, 85, 88, 89, 90, 103, 109, 159, 165, 176, 187, 188, 200, 201, 202, 203, 208, 209, 214, 215, 231, 249, 258, 259, 260, 261, 267, 270, 280, 285, 293, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 65, 85, 89, 103, 109, 116, 126, 128, 134, 137, 141, 142, 146, 148, 150, 161, 163, 165, 174, 177, 178, 180, 181, 182, 183, 185, 187, 189, 197, 198, 201, 202, 203, 204, 205, 206, 210, 212, 213, 218, 219, 220, 221, 239, 255, 257, 262, 268, 271, 293, 299, 310, 312, 313, 321, 322, 325, 326, 328, 329, 330, 331, 332], "carri": [3, 21, 45, 85, 89, 103, 109, 155, 265, 342, 344, 347, 348, 350], "assess": [3, 112, 341], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 52, 57, 72, 73, 334], "adjac": [3, 23, 131], "reli": [3, 190, 191, 194, 195, 249, 337, 341, 343, 348, 353], "traj_id": [3, 13, 14, 16, 23, 146], "junction": 3, "inittrack": [3, 192, 196, 341, 344], "tutori": [3, 340, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353], "scratch": [3, 8, 342, 348], "better": [3, 8, 9, 192, 196, 337, 343, 348], "gym3": 3, "envpool": [3, 100, 101], "interfac": [3, 92, 102, 198, 205, 336, 341, 343, 348, 350], "simultan": [3, 20, 100, 101, 103, 109, 348], "competit": [3, 347], "advantag": [3, 8, 189, 249, 251, 264, 267, 269, 280, 281, 282, 283, 284, 285, 287, 289, 291, 293, 294, 296, 337, 338, 341, 342, 343, 344, 347, 348, 353], "scale": [3, 4, 53, 119, 135, 137, 148, 154, 157, 188, 193, 207, 214, 215, 219, 220, 225, 226, 227, 236, 240, 242, 249, 250, 263, 267, 268, 269, 270, 314, 320, 325, 332, 336, 341, 342, 343, 344, 347, 352], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 85, 89, 103, 104, 105, 109, 299, 342, 343, 347, 348], "inherit": [3, 85, 89, 103, 109, 199, 265, 338, 343, 347], "serialenv": [3, 85, 89, 103, 155, 334, 353], "Of": [3, 7, 335, 348, 353], "cours": [3, 4, 335, 343, 348, 353], "make_env": [3, 103, 109, 111, 165, 321, 322, 341, 342, 353], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 85, 86, 89, 91, 103, 109, 119, 122, 123, 128, 134, 135, 137, 139, 144, 145, 146, 149, 151, 154, 155, 156, 158, 159, 165, 192, 196, 299, 325, 328, 334, 336, 341, 342, 343, 344, 349, 350, 352, 353], "v1": [3, 13, 14, 16, 17, 21, 22, 53, 55, 85, 86, 88, 89, 90, 94, 95, 100, 103, 109, 119, 122, 129, 134, 135, 137, 144, 146, 149, 151, 153, 154, 155, 156, 158, 192, 196, 275, 289, 290, 291, 292, 294, 295, 296, 297, 336, 342, 344, 348, 350, 352, 353], "from_pixel": [3, 81, 82, 83, 84, 88, 90, 91, 94, 95, 106, 119, 145, 299, 325, 341, 342, 344, 349, 350, 352, 353], "9": [3, 7, 32, 35, 38, 41, 58, 59, 73, 76, 83, 84, 98, 104, 105, 154, 165, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278, 337, 341, 342, 347], "81": 3, "simpli": [3, 6, 34, 36, 39, 45, 75, 80, 129, 150, 164, 265, 336, 337, 341, 343, 347, 353], "d": [3, 35, 54, 56, 58, 59, 60, 65, 190, 194, 236, 240, 352], "forc": [3, 6, 7, 13, 14, 17, 18, 19, 20, 21, 52, 54, 55, 57, 58, 59, 342, 347, 348], "privat": [3, 85, 89, 103, 109, 164, 348, 353], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 52, 73, 251, 264, 267, 307, 309, 312, 316, 319, 320, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 71, 85, 89, 103, 109, 343], "behav": [3, 91, 99, 190, 194, 210, 256, 263, 349], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 40, 67, 70, 137, 148, 193, 205, 214, 219, 220, 278, 336, 348, 350], "develop": [3, 4, 7, 93, 341, 352], "inner": [3, 85, 89, 103, 109, 126, 338, 342, 343, 347, 353], "logic": 3, "nevertheless": [3, 343, 350], "kept": [3, 71, 73, 126, 150, 158, 167, 174, 193, 219, 220], "mind": [3, 52, 57, 72, 73, 85, 89, 103, 109, 347], "desig": 3, "previou": [3, 4, 10, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 155, 175, 190, 194, 215, 229, 343, 344, 348, 353], "wherev": 3, "expos": [3, 106, 124, 127, 241, 342], "modif": [3, 5, 26, 28, 32, 85, 89, 103, 109, 131, 175, 265, 343, 348], "lost": [3, 8, 164], "eras": [3, 85, 89, 103, 109, 159], "intern": [3, 339], "face": [3, 5, 8, 9, 353], "NOT": [3, 142], "outsid": [3, 16, 347, 348], "keep": [3, 4, 7, 8, 14, 42, 71, 76, 103, 109, 137, 141, 163, 165, 174, 235, 309, 316, 341, 342, 343, 344, 347, 348, 350, 352, 353], "right": [3, 6, 7, 40, 197, 342, 343, 347, 348, 353], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 85, 89, 103, 109, 158, 159, 167, 280, 281, 282, 283], "assumpt": [3, 348, 350], "preclud": 3, "presenc": 3, "annihil": 3, "reason": [3, 4, 8, 32, 57, 85, 89, 103, 104, 105, 109, 141, 161, 196, 337, 341, 342, 343, 348, 350], "advanc": [3, 21, 35, 38, 41, 42, 350], "explicitli": [3, 4, 342, 344, 347, 350], "place": [3, 26, 28, 32, 34, 36, 39, 62, 63, 67, 70, 78, 85, 86, 89, 103, 109, 110, 111, 123, 128, 141, 155, 158, 159, 161, 163, 164, 165, 175, 229, 239, 313, 318, 319, 342, 343, 347, 348, 350], "superse": 3, "pettingzoowrapp": [3, 334], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 85, 89, 98, 103, 104, 105, 109, 110, 111, 112, 336, 342, 343, 347], "associ": [3, 32, 34, 36, 39, 85, 89, 103, 109, 214, 332, 341, 350], "environemtn": 3, "__not__": 3, "constrain": [3, 135, 192, 196, 267], "li": 3, "fact": [3, 7, 8, 341, 343, 347, 348, 349, 350, 353], "predict": [3, 32, 40, 188, 199, 200, 229, 245, 255, 258, 260, 261, 279, 336, 341, 342], "know": [3, 4, 9, 35, 38, 41, 42, 228, 268, 312, 341, 342, 343, 344, 347, 350], "meaning": 3, "could": [3, 4, 6, 342, 343, 347, 349, 353], "perfectli": [3, 338, 341, 348], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 85, 89, 103, 109, 124, 125, 127, 157, 159, 167, 196, 198, 204, 236, 239, 240, 242, 243, 248, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283, 307, 318, 330, 331, 332, 334, 336, 338, 341, 342, 343, 344, 347, 348, 350, 353], "meaningless": 3, "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 352], "agent0": 3, "agent1": 3, "overridden": [3, 52, 54, 55, 57, 58, 59, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 344], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 52, 85, 89, 103, 109, 332, 336], "bool": [3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 120, 124, 126, 127, 128, 129, 131, 135, 136, 137, 139, 141, 143, 144, 146, 148, 150, 153, 155, 157, 159, 160, 161, 163, 165, 167, 174, 175, 176, 177, 178, 180, 181, 190, 191, 192, 193, 194, 195, 196, 198, 200, 203, 204, 205, 206, 219, 220, 224, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 306, 309, 310, 312, 313, 314, 316, 325, 332, 342, 343, 347, 348, 352, 353], "500": [3, 341, 342], "launch": [3, 13, 14, 17, 18, 19, 20, 22, 52, 54, 103, 109], "bottleneck": [3, 8], "great": [3, 7, 8, 352], "speedup": [3, 8, 353], "precis": [3, 124, 127, 174, 191, 195, 341, 343], "misspecifi": 3, "caus": [3, 7, 8, 62, 63, 78, 85, 89, 93, 103, 109, 142, 353], "breakag": 3, "rais": [3, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 57, 85, 89, 103, 109, 112, 119, 130, 136, 146, 154, 155, 156, 159, 167, 228, 232, 233, 235, 270, 341, 343, 347, 350], "mismatch": [3, 342], "mostli": [3, 17, 299, 337, 350, 353], "subprocess": [3, 13, 14, 17, 86, 103, 109], "multithreadedenv": [3, 334], "underneath": 3, "higher": [3, 4, 122, 243, 341, 342, 343, 350, 353], "flexibl": [3, 9, 100, 273, 337, 338, 350, 353], "cover": [3, 335, 343, 348, 352], "type": [3, 14, 18, 19, 20, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 59, 60, 67, 85, 89, 98, 99, 102, 103, 104, 105, 109, 123, 124, 125, 128, 129, 135, 141, 143, 144, 150, 153, 155, 158, 159, 161, 163, 165, 169, 173, 177, 178, 198, 203, 204, 206, 212, 221, 228, 230, 236, 239, 240, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 286, 325, 330, 334, 336, 341, 342, 343, 347, 348, 350, 353], "atari": [3, 4, 52, 119, 299, 353], "classic": [3, 99, 105, 342], "benchmark_batched_env": 3, "py": [3, 115, 212, 221, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353], "pipelin": [3, 7, 336, 343], "seamlessli": [3, 348], "infrastructur": [3, 347], "core": [3, 8, 325, 338, 344, 352], "act": [3, 4, 72, 73, 104, 105, 204, 250, 252, 263, 268, 270, 272, 344, 347], "world": [3, 5, 99, 245, 260, 347, 348, 353], "paradigm": [3, 17, 347], "decpodp": 3, "game": [3, 4, 5, 52, 299], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 54, 93, 94, 95, 103, 104, 105, 122, 149, 188, 203, 204, 232, 301, 316, 330, 331, 341, 342, 343, 344, 347, 350, 352], "thank": [3, 341], "carrier": [3, 343, 344, 350], "particular": [3, 32, 45, 53, 54, 85, 89, 103, 109, 159, 337, 338, 342, 344, 346, 347, 350], "thu": [3, 264, 347], "let": [3, 6, 7, 32, 38, 43, 85, 89, 103, 104, 105, 109, 119, 192, 196, 203, 204, 230, 312, 337, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "go": [3, 7, 98, 103, 142, 146, 229, 286, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "vma": [3, 110, 111, 347], "robot": [3, 5, 7, 57, 141, 161, 163, 347], "what": [3, 8, 35, 44, 52, 85, 89, 103, 109, 128, 155, 174, 237, 335, 336, 337, 342, 343, 344, 347, 348, 349, 350, 352, 353], "vmasenv": [3, 334, 347], "balanc": [3, 83, 84, 341, 342], "num_env": [3, 21, 88, 92, 101, 110, 111, 347], "n_agent": [3, 110, 111, 203, 204, 212, 221, 278, 347], "ground_rew": 3, "pos_rew": [3, 347], "16": [3, 32, 58, 73, 81, 82, 85, 89, 94, 95, 103, 109, 119, 344, 350], "style": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59], "relat": [3, 4, 10, 35, 103, 131, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 342, 348], "vari": [3, 88, 90, 91, 104, 105, 106, 110, 142, 347], "creation": [3, 103, 109, 341, 353], "info_spec": [3, 103], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 116, 143, 175, 253, 256, 257, 278, 334, 347], "simpl": [3, 9, 32, 33, 85, 89, 103, 109, 180, 240, 253, 255, 265, 269, 280, 336, 337, 341, 342, 343, 347, 353], "prefix": [3, 23, 32, 34, 36, 39, 45, 85, 89, 103, 109, 159, 265, 270, 298, 344, 353], "exactli": [3, 32, 85, 89, 91, 103, 109, 159, 190, 194, 270, 341, 344, 347], "action_kei": [3, 15, 85, 89, 103, 109, 116, 126, 174, 176, 199, 200, 228, 232, 233, 235, 347], "reward_kei": [3, 85, 89, 103, 109, 174, 176, 200, 310, 314, 347], "sure": [3, 4, 7, 56, 74, 89, 93, 146, 230, 332, 336, 341, 343, 344, 347, 348, 350, 352, 353], "set_kei": [3, 128, 249, 251, 253, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 278, 284, 347], "awai": [3, 343, 347], "eas": [3, 347], "leaf": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 33, 44, 46, 47, 85, 89, 103, 109, 153, 240], "full": [3, 85, 89, 103, 109, 192, 196, 231, 307, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "raw": [3, 4, 40, 193, 219, 220, 342, 348], "torchvis": [3, 141, 163, 301, 352, 353], "transformedenv": [3, 13, 85, 86, 89, 103, 109, 116, 119, 122, 123, 124, 127, 128, 129, 131, 134, 135, 136, 137, 139, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 158, 165, 192, 196, 299, 325, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "base_env": [3, 82, 85, 89, 90, 95, 103, 109, 116, 122, 124, 126, 127, 135, 139, 143, 145, 151, 153, 155, 156, 299, 341, 342, 343, 349, 352, 353], "appar": [3, 309], "bring": [3, 343, 353], "signific": [3, 5, 8, 343, 353], "kind": [3, 38, 44, 174, 350], "consult": 3, "interest": [3, 236, 240, 336, 342, 343, 347, 348, 353], "resize_par": 3, "easi": [3, 5, 52, 56, 83, 84, 94, 95, 228, 232, 233, 235, 336, 337, 341, 342, 343, 347, 349, 350, 353], "graph": [3, 4, 8, 81, 82, 94, 95, 276, 277, 341, 348], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 164, 165, 190, 194, 219, 230, 280, 311, 338, 341, 342, 343, 348, 352, 353], "revers": [3, 194], "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 71, 73, 85, 89, 103, 109, 124, 127, 139, 159, 224, 230, 239, 241, 242, 244, 249, 250, 252, 256, 257, 263, 267, 268, 269, 270, 272, 342, 347], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 123, 126, 177, 178, 242, 353], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 119, 124, 127, 137, 146, 247, 256, 263, 348], "in_keys_inv": [3, 122, 124, 127, 137, 138, 139, 143, 144, 146, 151, 158, 341, 346, 348, 353], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 118, 141, 155, 161, 341, 344, 348, 352, 353], "doubletofloat": [3, 325, 341, 343, 346], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 52, 55, 57, 59, 62, 63, 65, 78, 81, 82, 85, 88, 89, 90, 94, 95, 99, 102, 103, 107, 108, 109, 110, 111, 124, 127, 128, 129, 137, 139, 143, 144, 146, 150, 153, 155, 157, 171, 174, 176, 187, 192, 196, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 325, 336, 347, 348], "float64": [3, 32, 55, 57, 58, 83, 84, 85, 89, 103, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 239], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 85, 88, 89, 90, 103, 109, 124, 127, 128, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 338, 341, 343, 350], "manipul": [3, 4, 8, 83, 84, 141, 161], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 52, 57, 72, 73, 126, 128, 174, 232, 336, 350], "unexpect": [3, 32, 85, 89, 103, 109, 159, 270, 353], "behviour": 3, "fortun": [3, 344], "alreadi": [3, 8, 11, 32, 34, 36, 39, 45, 52, 85, 89, 103, 109, 155, 175, 240, 280, 281, 282, 283, 341, 343, 347], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 52, 62, 63, 64, 71, 74, 75, 78, 85, 89, 103, 109, 123, 124, 125, 127, 129, 135, 143, 144, 150, 153, 158, 159, 165, 194, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 337, 341, 343, 344, 347, 348, 349, 350, 353], "catfram": [3, 342], "hold": [3, 276, 277, 348, 350], "notic": [3, 119, 343, 348], "parenthood": 3, "henc": [3, 35, 142, 175, 203, 336, 341, 343, 347, 348], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 103, 109, 348], "discret": [3, 24, 27, 30, 31, 33, 47, 85, 89, 103, 104, 105, 109, 110, 111, 126, 210, 213, 255, 256, 257, 258, 336, 342, 347], "might": [3, 34, 36, 37, 39, 303, 335, 341, 353], "action_mask": [3, 94, 95, 104, 105, 107, 108, 116], "unavail": [3, 104, 105], "probabl": [3, 4, 8, 40, 67, 70, 185, 187, 190, 192, 194, 196, 198, 201, 202, 210, 220, 232, 236, 240, 336, 342, 352], "categor": [3, 27, 31, 33, 81, 82, 88, 90, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 116, 128, 187, 210, 213, 230, 231, 236, 237, 238, 253, 256, 257, 278, 344], "probabilistictensordictmodul": [3, 135, 240, 241, 352], "tensordictsequenti": [3, 192, 196, 230, 232, 241, 336, 341, 344, 346, 349, 352], "maskedcategor": [3, 202, 334], "linear": [3, 13, 14, 16, 17, 21, 32, 81, 82, 85, 89, 99, 103, 109, 123, 135, 141, 155, 158, 159, 161, 163, 176, 177, 178, 187, 198, 200, 203, 204, 205, 206, 207, 213, 214, 215, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 328, 336, 342, 346, 349, 352], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 201, 202, 210, 231, 236, 256, 257, 336], "dist": [3, 10, 201, 202, 210], "distribution_class": [3, 135, 225, 226, 227, 229, 236, 240, 242, 249, 250, 256, 257, 263, 267, 268, 269, 270, 336, 341, 343, 347, 352], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 55, 81, 82, 85, 89, 90, 94, 95, 101, 103, 104, 105, 109, 111, 167, 192, 196, 222, 225, 226, 227, 228, 233, 235, 237, 245, 278, 336, 341, 342, 343, 344, 347, 353], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 116, 142], "enviorn": [3, 104, 105, 110, 111, 347], "itself": [3, 32, 85, 89, 103, 109, 113, 265, 343], "log": [3, 4, 8, 40, 55, 58, 185, 186, 187, 201, 202, 210, 220, 230, 231, 236, 240, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 306, 309, 310, 312, 316, 328, 336, 337, 338, 341, 342, 343, 347, 348, 352], "mission": 3, "irrespect": [3, 239, 240], "dmcontrol": [3, 85, 89, 103, 109, 341], "jumanji": [3, 85, 89, 94, 95, 103, 109], "natur": [3, 341, 344], "special": [3, 334, 336, 341, 344, 353], "framework": [3, 4, 9, 22, 81, 82, 85, 89, 94, 95, 99, 103, 109, 190, 352, 353], "Its": [3, 32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 165, 239, 284], "success": [3, 55, 119, 158, 232, 342, 348, 350, 352], "foundat": [3, 5, 104, 105, 343, 347], "inspir": [3, 348], "gone": [3, 4, 5], "hard": [3, 7, 83, 84, 103, 262, 342, 353], "prefer": [3, 17, 20, 35, 38, 41, 42, 142, 150, 267, 313, 336, 343, 347, 350], "maintain": [3, 5, 9, 348], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 342, 343, 344, 347, 348, 350, 353], "decor": [3, 8, 11, 115, 265, 280, 281, 282, 283], "set_gym_backend": [3, 85, 88, 89, 103, 109, 113, 334], "relev": [3, 40, 280, 281, 282, 283, 284, 306, 348], "gym_backend": [3, 115, 334], "env1": [3, 346], "path": [3, 6, 7, 32, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 67, 85, 89, 103, 109, 115, 141, 163, 200, 301, 306, 316, 338, 342], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 58, 115], "env2": [3, 346], "_env": [3, 6, 88, 353], "classic_control": 3, "pendulumenv": [3, 348], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 97, 113], "handi": 3, "side": [3, 4, 353], "v0": [3, 85, 89, 91, 94, 95, 96, 97, 103, 109, 123, 159, 165, 328], "26": [3, 85, 89, 103, 109], "fun": [3, 11, 115, 343, 347], "reveal": 4, "bug": [4, 352], "curv": 4, "won": [4, 32, 57, 85, 86, 88, 89, 100, 101, 103, 109, 141, 163, 316, 332, 342, 343], "exploit": 4, "video": [4, 9, 299, 301, 312, 332, 347], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 135, 347, 349], "coeffici": [4, 40, 135, 347], "bonu": [4, 249, 251, 264, 267], "beta": [4, 35, 41, 65, 256, 263, 264, 341, 342, 350, 352], "reduc": [4, 6, 27, 76, 154, 342, 343], "downstream": [4, 341], "formul": [4, 347], "ob": [4, 8, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 73, 76, 85, 89, 103, 109, 116, 124, 125, 127, 137, 151, 157, 171, 174, 203, 204, 237, 244, 250, 252, 256, 257, 263, 268, 270, 272, 280, 281, 282, 283, 342, 346, 348, 352, 353], "rate": [4, 52, 165, 279, 342, 343, 347], "gradient": [4, 32, 85, 89, 103, 109, 159, 193, 202, 206, 210, 219, 220, 249, 251, 252, 256, 257, 263, 264, 265, 267, 268, 269, 270, 272, 279, 280, 281, 282, 283, 316, 341, 343, 347, 348], "norm": [4, 8, 81, 82, 316, 341, 342, 343, 347, 348], "easier": [4, 336, 341], "local": [4, 7, 10, 16, 21, 32, 85, 89, 103, 109, 159, 203, 204, 212, 221, 278, 304, 306, 347], "optima": 4, "sens": [4, 348], "product": [4, 9, 190, 191, 194, 195, 330, 331], "sum": [4, 21, 31, 33, 76, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 118, 149, 201, 202, 221, 260, 279, 286, 337, 341, 342, 343, 344, 347, 348, 353], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 71, 149, 165, 235, 304, 309, 342, 344, 347, 348, 350], "stat": [4, 137, 320, 332, 342, 343], "w": [4, 67, 119, 121, 145, 157, 190, 235, 299, 342, 350], "r": [4, 32, 103, 109, 116, 122, 137, 151, 191, 240, 248, 279, 336, 342, 348, 353], "yield": [4, 16, 21, 32, 85, 89, 103, 109, 265, 341], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 34, 36, 39, 85, 89, 103, 109, 141, 159, 163, 198, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 335, 352], "past": [4, 342, 350], "spars": [4, 344], "ad": [4, 16, 32, 35, 38, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 85, 89, 103, 109, 149, 159, 205, 206, 235, 249, 251, 253, 258, 264, 267, 270, 278, 342, 344, 350, 353], "intermedi": [4, 118, 192, 196, 231, 341, 349], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 341], "discov": 4, "score": [4, 40], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 352], "select": [4, 15, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 104, 105, 110, 111, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 161, 162, 164, 165, 176, 192, 196, 230, 237, 315, 341, 350], "fall": [4, 53], "explicit": [4, 11, 45, 67, 197, 350], "mechan": [4, 32, 85, 89, 103, 109, 159, 342, 348], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 85, 89, 103, 109, 194, 256, 263, 343, 347], "addition": 4, "timestep": [4, 40, 53, 146, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 347], "realli": 4, "larg": [4, 27, 34, 36, 39, 124, 127, 161, 342, 343, 347, 350], "huge": [4, 204, 344], "std": [4, 137, 165, 207, 211, 228, 341, 353], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 340, 344, 345, 346, 349, 350, 351], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 85, 89, 103, 109, 118, 137, 141, 155, 158, 159, 161, 166, 176, 190, 191, 194, 195, 200, 205, 206, 228, 232, 233, 235, 249, 250, 252, 253, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 325, 332, 342, 344, 348, 353], "estim": [4, 52, 72, 73, 128, 135, 225, 226, 227, 249, 250, 251, 252, 253, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 337, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 215, 260, 347], "freshli": 4, "doesn": [4, 11, 100, 124, 127], "drop": [4, 71, 73, 174], "meant": [4, 99], "encourag": [4, 103, 341, 342, 350], "measur": [4, 81, 82, 94, 95, 343], "novelti": 4, "revisit": 4, "previous": [4, 343, 353], "diminish": 4, "decreas": 4, "ideal": [4, 137, 348], "down": [4, 13, 14, 16, 17, 344], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 342, 343, 344, 347, 348, 352, 353], "distil": 4, "nois": [4, 166, 206, 223, 235, 268, 272, 312, 332, 341], "exploratori": [4, 249, 251, 264, 267], "misalign": 4, "trade": 4, "unavoid": 4, "schedul": [4, 7, 40, 312, 343, 348], "divers": [4, 103, 109], "bootstrap": [4, 258, 281, 287, 288, 341, 344], "noisi": [4, 205, 206, 223, 336], "unstabl": [4, 193, 219, 220], "inher": 4, "stochast": [4, 135, 188, 206, 208, 215, 250, 254, 256, 257, 263, 266, 268, 270, 336, 343, 347], "enemi": 4, "pomdp": [4, 350], "loos": [4, 336, 342, 343], "nonexist": 4, "architectur": [4, 184, 347], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 57, 60, 61, 67, 68, 70, 75, 76, 77, 79, 80, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 117, 118, 119, 120, 121, 124, 126, 127, 131, 133, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 154, 156, 157, 158, 165, 177, 178, 185, 187, 190, 194, 198, 201, 202, 203, 204, 210, 213, 217, 229, 241, 242, 254, 298, 299, 311, 312, 313, 315, 316, 325, 336, 341, 343, 344, 346, 347, 353], "lstm": [4, 195, 196, 197, 207], "rel": [4, 67, 155, 185, 218, 341, 342, 347, 350], "tend": 4, "stabl": [4, 9, 10, 102], "compens": 4, "descent": [4, 206], "1000": [4, 38, 72, 73, 85, 89, 103, 109, 119, 165, 232, 235, 236, 240, 262, 341, 342, 343, 344, 349, 350], "minimum": [4, 103, 109, 147, 188, 207, 218, 219, 220, 243, 246, 248, 250, 257, 265, 266, 270, 307, 341, 343, 347], "manual": [4, 18, 20, 21, 89, 341, 344, 350], "deviat": [4, 137, 165, 176, 188, 200, 205, 206, 228, 267, 272, 341, 347], "radic": 4, "begin": [4, 13, 14, 16, 17, 18, 19, 20, 21, 190, 191, 194, 195], "stabil": [4, 132], "stage": [4, 341, 348], "never": [4, 13, 14, 17], "prevent": [4, 26, 28, 193, 219, 220, 264, 267, 314, 350], "entir": [4, 57, 203, 343, 348, 350], "submit": [4, 335, 352], "suffici": [4, 341], "system": [4, 5, 343, 347, 348], "adequ": [4, 167, 343, 347], "infeas": 4, "allevi": [4, 336], "prune": 4, "fire": [4, 32, 85, 89, 103, 109], "illeg": 4, "move": [4, 32, 59, 85, 89, 103, 109, 123, 125, 141, 155, 158, 159, 161, 163, 165, 174, 198, 239, 314, 341, 342, 344, 352, 353], "chess": 4, "combin": [4, 158, 342, 350], "grasp": 4, "releas": [4, 7, 10, 32, 85, 89, 103, 109, 159, 270, 352], "top": [4, 76, 81, 82, 94, 95, 176, 200], "sampl": [4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 85, 89, 99, 102, 103, 109, 118, 119, 142, 146, 168, 169, 172, 173, 176, 185, 193, 200, 201, 202, 210, 211, 214, 219, 220, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 249, 250, 251, 252, 253, 255, 264, 266, 267, 272, 307, 313, 316, 319, 334, 336, 341, 342, 343, 344, 347, 349, 350, 352, 353], "wherein": 4, "cumul": [4, 149, 154, 176, 286, 343], "q": [4, 9, 85, 89, 103, 109, 180, 181, 182, 183, 186, 187, 189, 212, 213, 221, 227, 231, 237, 238, 250, 252, 253, 255, 256, 257, 258, 262, 263, 268, 270, 272, 278, 325, 334, 341], "flow": [4, 341, 343, 347, 348, 350], "reparameter": [4, 185, 202, 210], "soft": [4, 262, 270, 271], "critic": [4, 8, 225, 234, 249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 341], "clip": [4, 40, 122, 147, 251, 272, 316, 343, 347, 348], "oppos": [4, 45], "incorrect": 4, "thought": [4, 85, 89, 103, 109], "bound": [4, 21, 25, 26, 32, 85, 89, 103, 109, 122, 136, 165, 214, 215, 224, 230, 231, 235, 236, 237, 238, 239, 240, 243, 272, 336, 341, 342, 343, 353], "region": 4, "squash": [4, 344, 352], "tanh": [4, 177, 178, 190, 191, 193, 194, 195, 198, 204, 218, 219, 220, 243, 343, 347, 348, 349], "correct": [4, 34, 36, 39, 85, 89, 103, 109, 135, 319, 343, 344], "prob": [4, 201, 202, 210, 343, 347], "rememb": 4, "remap": 4, "origin": [4, 8, 34, 36, 39, 40, 93, 125, 126, 135, 141, 159, 163, 190, 236, 239, 240, 262, 265, 267, 325, 341, 346, 348, 353], "histor": 5, "ceas": 5, "fork": [5, 341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "farama": [5, 55, 96, 97, 104, 105, 343, 348], "bc": [5, 352], "break": [5, 13, 14, 16, 21, 32, 38, 42, 52, 54, 55, 57, 58, 59, 60, 72, 73, 85, 89, 103, 109, 119, 146, 165, 342, 350, 352], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 85, 89, 103, 109, 167, 224, 230, 231, 236, 237, 238, 239, 240, 343, 347], "13": [5, 10, 11, 72, 73, 106, 164], "best": [5, 9, 93, 192, 196, 347, 350, 352], "gymwrapp": [5, 85, 89, 103, 109, 129, 150, 153, 164, 334, 343, 352], "feel": [5, 335, 352], "free": [5, 7, 124, 127, 249, 260, 267, 338, 343, 347, 352], "gladli": 5, "instruct": [6, 7, 10, 22, 53, 126, 128, 341, 342, 343, 344, 347, 350], "prepar": [6, 54, 343], "conda": [6, 7, 335], "7": [6, 10, 27, 33, 35, 38, 41, 73, 85, 89, 103, 109, 154, 176, 177, 178, 197, 198, 200, 203, 286, 341, 347, 352], "cmake": 6, "14": [6, 11, 59, 72, 73, 85, 89, 103, 109, 137], "activ": [6, 7, 9, 177, 178, 184, 188, 198, 203, 204, 251, 264, 267, 336, 348, 352], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 54, 335], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 91], "nightli": 6, "y": [6, 7, 38, 102, 197, 203, 222, 341, 343, 347, 350], "git": [6, 7, 10], "facebookresearch": [6, 54, 91], "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 85, 89, 103, 109, 143, 152, 265, 347, 353], "command": [6, 7, 10, 343, 347, 348, 353], "readm": [6, 7, 110], "md": [6, 7], "habitatenv": [6, 334], "_has_habitat": 6, "available_env": [6, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 102, 103, 106, 107, 108, 109, 110, 111, 353], "startswith": [6, 337, 341], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 86, 265, 341], "env_nam": [6, 81, 83, 85, 88, 89, 91, 94, 96, 100, 103, 106, 109, 341, 343, 353], "llvmlite": 6, "config": [6, 7, 141, 163, 179, 184, 211, 320, 321, 322, 325, 326, 329], "var": [6, 7, 32, 85, 89, 103, 109, 159, 265, 270], "ld_preload": [6, 7], "8": [6, 7, 38, 57, 58, 65, 72, 73, 81, 82, 83, 84, 85, 89, 103, 109, 154, 177, 178, 180, 181, 189, 198, 225, 226, 227, 236, 239, 242, 263, 340, 341, 342, 347, 348, 350, 351, 352], "bind": 6, "deactiv": [6, 7, 230], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 85, 89, 103, 109, 159, 265, 270, 350], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 85, 342], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 53], "stand": [7, 83, 84, 103, 109, 346, 348], "joint": [7, 342], "dynam": [7, 54, 57, 59, 256, 263, 343, 348], "contact": [7, 37], "engin": [7, 106, 348], "biomechan": 7, "graphic": 7, "anim": [7, 347], "area": 7, "demand": [7, 353], "fast": [7, 9, 81, 82, 144, 268, 341, 342, 343], "accur": [7, 53, 59, 342, 348, 350], "articul": 7, "recent": [7, 11, 164, 341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "acquir": [7, 343], "deepmind": [7, 8, 9, 57, 83, 84, 85, 89, 103, 109, 128, 343], "whomev": 7, "licenc": 7, "incorpor": [7, 85, 89, 103, 109, 228, 232, 233, 235, 344, 348], "relianc": 7, "obsolet": 7, "legaci": 7, "pro": [7, 335], "tip": [7, 335], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 57, 353], "sudo": [7, 335], "enabl": [7, 8, 53, 62, 63, 71, 78, 192, 196, 235, 312, 343, 347, 348, 350], "apt": [7, 347], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 62, 63, 64, 74, 75, 78, 342, 344], "workflow": [7, 225, 226, 227], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 57, 63, 85, 89, 103, 109, 141, 161, 163, 353], "binari": [7, 24, 27, 33, 117, 187, 213, 230, 231, 237, 238, 253, 256, 257, 278], "setup": [7, 81, 82, 93, 94, 95], "mkdir": 7, "cd": 7, "tag": [7, 299, 301, 304, 332], "earlier": [7, 341, 343, 344, 347, 350], "roboti": 7, "download": [7, 10, 52, 53, 54, 55, 57, 58, 59, 93, 141, 163, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "html": [7, 100, 102], "wget": 7, "mujoco210": 7, "tar": [7, 54], "gz": 7, "xf": 7, "charg": [7, 13, 14, 17, 103, 109], "obtain": [7, 40, 52, 85, 89, 103, 109, 118, 141, 154, 163, 176, 212, 313, 341, 343, 347], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 60], "bin": [7, 187, 231, 336], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 183, 236, 240, 341, 343, 350], "nvidia": [7, 93], "older": [7, 11], "hack": [7, 341], "line": [7, 32, 52, 85, 89, 103, 109, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "adatp": 7, "script": [7, 54, 167, 325, 328, 332, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "unnot": [7, 142], "until": [7, 21, 156, 158, 343, 344, 347], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 342, 350], "troubleshoot": 7, "gl": 7, "h": [7, 67, 119, 121, 145, 157, 190, 191, 192, 194, 195, 196, 200, 299, 342, 350], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 16, 17, 18, 19, 20, 21], "directori": [7, 34, 36, 39, 45, 52, 53, 54, 55, 57, 58, 59, 62, 304, 306, 338], "devel": 7, "ubuntu": [7, 93], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": 7, "disappear": [7, 342, 344, 346], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 52, 58, 59, 73, 83, 84, 103, 107, 108, 137, 139, 154, 177, 178, 185, 191, 197, 198, 203, 204, 208, 218, 236, 244, 325, 340, 342, 347, 351, 352], "glibcxx_3": 7, "29": [7, 349], "compil": [7, 32, 85, 89, 103, 109, 190, 191, 194, 195], "libosmesa": 7, "libgcc": 7, "Then": [7, 164, 343, 346], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 85, 89, 103, 109, 136, 159, 270, 353], "job": [7, 18, 19, 20, 22, 38, 350], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 81, 82, 347], "114": 7, "_setup_opengl_context": 7, "opengl_context": 7, "130": 7, "offscreenopenglcontext": 7, "opengl": [7, 347], "global": [7, 32, 85, 89, 103, 104, 105, 109, 212, 221, 236, 240, 278, 338, 341, 347], "cuda_visible_devic": 7, "id": [7, 23, 40, 67, 72, 73, 85, 88, 89, 103, 109, 235, 268, 302, 306, 325], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": 7, "correctli": [7, 32, 85, 89, 103, 109], "lgl": 7, "libegl": 7, "x11": [7, 347], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 34, 36, 39, 89, 174, 228, 232, 233, 235, 267, 316, 338, 341, 342, 346, 350], "sketch": [8, 338], "n_training_step": 8, "datapoint": [8, 45, 350], "n_data_per_train": 8, "no_grad": [8, 32, 85, 89, 103, 109, 135, 190, 191, 194, 195, 280, 281, 282, 283, 343, 344, 347], "loss_fn": [8, 344, 352], "backward": [8, 32, 81, 82, 85, 89, 103, 109, 165, 190, 191, 194, 195, 249, 250, 252, 256, 257, 263, 267, 268, 269, 270, 272, 341, 343, 344, 347, 348], "zero_grad": [8, 32, 85, 89, 103, 109, 338, 341, 343, 344, 347, 348], "backpropag": [8, 81, 82, 94, 95, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 347, 348], "differenti": [8, 45, 81, 82, 135, 280, 281, 282, 283, 344, 347, 348], "denomin": 8, "artifact": 8, "numer": [8, 38, 89, 165, 193, 219, 220, 224, 230, 231, 236, 237, 238, 239, 240, 314, 343, 350, 353], "misconcept": 8, "freed": 8, "appear": [8, 33, 52, 57, 72, 73, 348, 350], "compuat": 8, "fix": [8, 103, 155, 250, 266, 270, 342, 348, 353], "retain_graph": [8, 81, 82], "discuss": [8, 9, 347], "inplac": [8, 32, 34, 36, 39, 85, 89, 103, 109, 159, 270, 341], "onto": [8, 33, 34, 36, 39, 171, 224, 228, 230, 231, 235, 236, 237, 238, 239, 240, 344, 348], "exclud": [8, 53, 58, 85, 89, 103, 109, 119, 129, 174, 212, 347, 350], "forward": [8, 32, 85, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 161, 162, 164, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 214, 215, 217, 221, 222, 228, 229, 231, 232, 233, 235, 236, 238, 239, 240, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 337, 348, 352], "submodul": [8, 32, 85, 89, 103, 109, 113, 265], "param": [8, 32, 40, 85, 89, 99, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 185, 187, 218, 229, 236, 239, 242, 244, 265, 274, 277, 280, 281, 282, 283, 284, 341, 347, 348, 349, 352], "grad": [8, 32, 81, 82, 85, 89, 103, 109, 341, 343], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 85, 89, 103, 104, 105, 109, 123, 141, 155, 158, 159, 161, 163, 207, 212, 239], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 65, 119, 131, 142, 160, 259, 337, 343, 347, 348], "much": [8, 13, 14, 17, 35, 41, 57, 65, 103, 109, 264, 267, 343, 347, 348, 350, 353], "render": [8, 110, 299, 312, 341, 342, 343], "factor": [8, 32, 146, 193, 206, 219, 220, 228, 232, 233, 235, 250, 255, 258, 259, 261, 271, 286, 341, 342, 347, 350, 353], "fit": [8, 11, 137, 337, 338, 341], "bottlneck": 8, "brax": [8, 81, 82, 85, 89, 103, 109, 144, 353], "jax": [8, 11, 81, 82, 94, 95], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 60, 71, 76, 85, 89, 103, 109, 130, 159, 201, 202, 252, 253, 255, 270, 307, 337, 338, 341, 343, 344, 347, 348, 350], "underli": [8, 85, 89, 103, 109, 265, 348], "tedeiou": 8, "priorit": [8, 35, 41, 65, 252, 253, 255, 256, 257, 263, 268, 270, 272, 341, 342], "amount": [8, 235, 342, 350], "costli": [8, 348], "concaten": [8, 21, 30, 31, 57, 119, 120, 137, 158, 194, 198, 242, 341, 342, 347, 348, 350, 353], "constitut": [8, 342, 347, 348], "plain": 8, "profil": 8, "fulli": [8, 32, 85, 89, 103, 109, 191, 195, 342, 348, 350], "frequent": [8, 350], "program": [8, 256, 263, 353], "functorch": [8, 10], "incl": 8, "suit": [8, 84, 343, 353], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 72, 73, 239, 242, 265, 347, 348, 352], "new_shap": 8, "permut": [8, 71, 139, 352, 353], "idea": [9, 268, 338, 344, 347], "introductori": 9, "intro": [9, 343, 344], "dai": [9, 352], "2022": [9, 10, 352], "spin": [9, 83, 84], "deep": [9, 119, 180, 181, 182, 183, 186, 235, 249, 262, 270, 271, 341], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 137, 165, 341, 342, 343, 344], "reddit": 9, "reagent": 9, "orient": [9, 59, 353], "baselines3": 9, "tf": 9, "bandit": [9, 102], "tensorflow": [9, 201, 202], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 352], "grade": 9, "factori": [9, 43], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 85, 89, 103, 109, 122, 126, 171, 184, 187, 203, 209, 213, 224, 228, 230, 231, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 253, 255, 256, 257, 272, 278, 336, 342, 343, 344, 347, 348, 353], "mbrl": [9, 99, 336], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": 10, "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 343, 344, 347], "notebook": [10, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "24": [10, 58, 73, 88, 100, 101], "11": [10, 27, 33, 45, 62, 63, 73, 78, 86, 157, 176, 200, 340, 347, 351], "12": [10, 58, 62, 63, 73, 78, 94, 95, 103, 107, 108, 109, 347, 350], "pip": [10, 56, 347, 352, 353], "pip3": [10, 343, 344, 347], "extra": [10, 32, 85, 89, 103, 109, 119, 165, 174, 306, 336, 343, 344, 350], "url": [10, 91], "org": [10, 35, 54, 55, 57, 59, 65, 81, 82, 83, 84, 91, 94, 95, 100, 101, 102, 106, 110, 111, 119, 141, 161, 179, 180, 181, 182, 183, 184, 187, 188, 189, 194, 200, 201, 202, 206, 208, 209, 211, 212, 214, 215, 221, 231, 235, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 269, 270, 271, 280, 285, 293, 349], "whl": 10, "u": [10, 56, 190, 191, 194, 195, 348], "There": [10, 67, 192, 196, 336, 338, 343, 344, 347, 348, 350, 353], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 265], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 67, 76, 81, 83, 84, 85, 87, 88, 89, 90, 91, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 119, 126, 128, 134, 135, 137, 141, 142, 145, 150, 153, 154, 159, 161, 163, 164, 165, 168, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 189, 192, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 212, 213, 221, 224, 230, 231, 236, 237, 238, 239, 240, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 320, 325, 326, 332, 342, 343], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 86, 89, 99, 103, 109, 115, 128, 248, 321, 322, 330, 331, 332, 342, 350], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 192, 196, 197, 352], "longer": [11, 342, 347, 350], "self": [11, 26, 28, 32, 34, 36, 39, 85, 89, 99, 103, 109, 116, 123, 124, 127, 141, 143, 155, 158, 159, 161, 163, 176, 187, 200, 212, 221, 228, 232, 233, 236, 239, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 338, 341, 348, 352], "x": [11, 23, 26, 32, 38, 40, 57, 73, 135, 157, 178, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 222, 230, 236, 237, 246, 248, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 316, 341, 343, 348, 350, 352], "23": [11, 58, 73, 347], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 85, 86, 89, 103, 109, 115, 135, 155, 222, 230, 237, 259, 261, 280, 283, 291, 292, 296, 297, 328, 337, 341, 342, 347, 350, 352, 353], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 81, 82, 89, 94, 95, 195, 248, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 342, 343, 344, 347, 348, 350, 353], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 72, 73, 81, 82, 85, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 110, 111, 119, 126, 137, 154, 155, 156, 159, 165, 190, 193, 194, 203, 204, 219, 220, 230, 237, 243, 250, 260, 265, 266, 270, 312, 313, 338, 341, 342, 343, 344, 348, 353], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 85, 89, 103, 109, 161, 179, 211], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 38, 39, 58, 85, 86, 87, 89, 100, 103, 104, 105, 109, 110, 111, 112, 135, 155, 159, 164, 165, 177, 178, 179, 180, 181, 182, 183, 184, 189, 197, 198, 211, 236, 240, 270, 303, 304, 312, 321, 322, 325, 330, 331, 332, 341, 342, 343, 350, 353], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 57, 85, 89, 103, 109, 144, 154, 159, 174, 192, 196, 229, 265, 270, 337, 341, 342, 344, 350], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 85, 87, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 134, 135, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 164, 165, 174, 175, 176, 192, 196, 199, 200, 228, 229, 231, 232, 233, 235, 238, 239, 240, 249, 250, 251, 252, 253, 254, 255, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 316, 341, 348], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 86, 103, 109, 341, 352], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 119, 146, 316, 319, 328, 338, 341, 342, 343, 344, 347, 350, 352], "device_typ": [13, 16, 17, 27, 30, 33, 177, 178, 179, 180, 181, 182, 183, 189, 198, 205, 206, 211], "env_devic": [13, 14, 16, 17, 18, 19, 20, 21], "policy_devic": [13, 14, 16, 17, 18, 19, 20, 21], "create_env_kwarg": [13, 14, 16, 17, 21, 86, 100, 103, 109, 341], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 146, 342, 350], "explorationtyp": [13, 14, 16, 17, 18, 19, 20, 21, 265, 312, 341, 342, 343, 344, 352], "interactiontyp": [13, 16, 17, 18, 19, 20, 21, 169, 173, 236, 240, 312], "exploration_mod": [13, 16, 17, 18, 19, 20, 334, 336], "preemptive_threshold": [13, 14, 17], "float": [13, 14, 17, 25, 27, 32, 33, 35, 40, 41, 46, 57, 65, 67, 85, 89, 103, 109, 119, 123, 124, 127, 135, 137, 141, 146, 147, 148, 154, 155, 157, 158, 159, 161, 163, 165, 185, 188, 190, 193, 194, 198, 201, 202, 205, 206, 214, 215, 218, 220, 228, 239, 243, 246, 247, 248, 249, 250, 255, 256, 257, 260, 261, 262, 263, 266, 268, 270, 271, 272, 279, 285, 286, 287, 288, 289, 290, 291, 292, 293, 314, 341, 342, 350, 353], "num_thread": [13, 14, 17, 34, 36, 39, 103, 109], "num_sub_thread": [13, 14, 17, 103, 109], "datacollector": [13, 14, 16, 17, 236, 240, 267, 343], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 224, 228, 230, 231, 235, 236, 237, 238, 239, 240, 242, 336, 352], "stepcount": [13, 85, 89, 103, 109, 110, 111, 158, 341, 342, 343, 344, 347, 352], "env_mak": [13, 14, 16, 21, 328, 353], "50": [13, 14, 16, 21, 37, 40, 52, 59, 72, 73, 344, 347], "2000": [13, 14, 16, 45, 92, 350], "enumer": [13, 14, 16, 21, 32, 38, 42, 73, 85, 89, 103, 109, 273, 337, 341, 342, 343, 344, 350, 352], "int64": [13, 14, 16, 27, 30, 34, 36, 37, 39, 40, 41, 43, 45, 52, 55, 57, 58, 59, 60, 85, 89, 98, 102, 103, 104, 105, 107, 108, 109, 128, 139, 146, 153, 187, 213, 230, 231, 235, 236, 237, 238, 336, 348], "step_count": [13, 14, 16, 85, 89, 94, 95, 103, 109, 153, 343, 344], "shutdown": [13, 14, 16, 17, 21, 341, 352], "del": [13, 14, 16, 341, 343, 346, 352, 353], "randompolici": [13, 14, 16, 18, 19, 20, 22, 119, 146, 334, 350], "lifespan": [13, 14, 16, 17, 18, 19, 20, 342], "divis": [13, 14, 16, 17, 18, 19, 20, 52, 57, 72, 73, 347], "endless": [13, 14, 16, 17, 18, 19, 20], "fill": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 89, 155, 164, 196, 344, 348, 349], "sit": [13, 14, 16, 17, 18, 19, 20, 21, 318, 342], "cast": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 60, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 100, 101, 103, 106, 109, 123, 124, 127, 135, 141, 155, 158, 159, 161, 163, 165, 239, 325, 353], "span": [13, 14, 16, 17, 18, 19, 20, 21, 57], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 342, 343, 347], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 306, 336, 347, 348], "round": [13, 14, 16, 17, 18, 19, 20, 21, 52], "closest": [13, 14, 16, 17, 18, 19, 20, 21], "post": [13, 14, 16, 17, 18, 19, 20, 21, 32, 55, 85, 89, 103, 109], "boolm": [13, 14, 17], "update_policy_weight_": [13, 14, 17], "sync": [13, 14, 17, 18, 19, 20, 21, 318, 328, 338, 341, 352], "async": [13, 14, 17, 18, 19, 20, 21, 164, 341, 352], "ratio": [13, 14, 17, 40, 341, 343], "finish": [13, 14, 17, 21, 89, 146, 353], "rest": [13, 14, 17, 336, 343, 344, 348, 352], "earli": [13, 14, 17, 89, 153, 352], "equal": [13, 14, 17, 52, 72, 73, 100, 103, 109, 136, 137, 177, 178, 186, 190, 192, 194, 196, 198, 204, 271, 275, 307, 330, 331, 341, 343, 349], "plu": [13, 14, 17, 40, 103, 109, 348], "safeti": [13, 14, 17, 99, 103, 109], "harm": [13, 14, 17, 103, 109], "ordereddict": [13, 14, 16, 17, 21, 32, 85, 89, 103, 109, 159, 165, 270], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 85, 89, 103, 109, 165, 190, 192, 194, 196, 248, 249, 251, 264, 267, 316, 336, 347], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 85, 89, 103, 109, 159], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 72, 73, 74, 85, 89, 103, 109, 128, 132, 137, 153, 177, 178, 198, 203, 204, 256, 263, 270, 350], "increment": [13, 14, 16, 17, 85, 89, 103, 109, 264], "env_fn": [13, 14, 16, 17, 86, 330, 331], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 72, 73, 182, 183], "out_se": [13, 14, 16, 17, 353], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 46, 52, 53, 54, 62, 63, 67, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 123, 141, 143, 152, 155, 158, 159, 160, 162, 163, 166, 176, 177, 178, 180, 181, 182, 183, 186, 189, 192, 193, 196, 198, 199, 200, 203, 204, 210, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 278, 279, 280, 281, 282, 283, 284, 299, 303, 304, 306, 309, 316, 321, 322, 325, 329, 330, 331, 337, 343, 347], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 81, 82, 94, 95, 99, 116, 124, 127, 143, 176, 200, 236, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 270, 272, 348, 352, 353], "describ": [15, 44, 120, 158, 218, 219, 253, 302, 337, 341, 343, 347, 348, 353], "tensor_spec": [15, 116, 175, 256, 257, 267, 269], "boundedtensorspec": [15, 22, 26, 85, 89, 103, 109, 232, 233, 235, 236, 243, 249, 250, 252, 263, 267, 268, 270, 272, 334, 347, 348, 352], "cube": 15, "envcreat": [16, 22, 103, 109, 328, 329, 332, 334, 341, 342, 352, 353], "return_same_td": 16, "interruptor": 16, "cautious": [16, 267], "whole": [16, 26, 28, 32, 45, 85, 89, 103, 109, 159, 236, 270, 307, 341, 343], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 89, 100, 135, 249, 251, 264, 267, 341, 346, 348, 352], "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 316], "respect": [18, 19, 20, 32, 85, 89, 103, 109, 117, 123, 124, 127, 141, 142, 151, 155, 158, 159, 161, 163, 190, 194, 203, 215, 239, 244, 311, 343, 344, 347], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 335, 342, 343, 346, 350], "serv": [18, 20, 21, 91, 350, 353], "fashion": [18, 20, 21, 34, 36, 39, 73], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 52, 54, 55, 57, 58, 59, 85, 89, 103, 109, 131], "seen": [18, 19, 20, 21, 85, 89, 103, 109, 337, 341, 342, 344, 347, 350], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 53, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 341], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 348], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 341], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 52, 236, 240], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 330, 331, 341, 342], "coordin": 21, "init": [21, 32, 85, 89, 103, 109, 306, 341, 342, 343], "autodetect": 21, "similarli": [21, 32, 71, 75, 85, 89, 103, 109, 203, 241, 242, 256, 263, 353], "num_cpu": 21, "num_gpu": 21, "1024": [21, 184, 350], "equat": [21, 57, 89, 235, 248, 251, 271, 343, 348], "exce": [21, 343, 350], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 316, 344], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 179, 184, 211, 229], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "durat": [23, 347], "meta": [23, 44, 53, 87, 91, 249, 251, 264, 267, 269, 338, 343, 347, 350], "aren": [23, 154, 344], "int8": [24, 85, 98, 104, 105, 117], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "clear_device_": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "op": [24, 25, 27, 30, 31, 33, 44, 46, 47, 136, 164, 228, 232, 233, 299, 318], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 42, 44, 46, 47, 81, 82, 85, 88, 90, 91, 94, 95, 100, 101, 106, 126, 209, 210, 214, 248, 336, 342, 343, 344, 348, 350], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 89, 235, 243], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 89, 243, 348], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 85, 122, 353], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 177, 178, 198, 216, 217], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 353], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 126, 194, 224, 228, 230, 231, 235, 236, 237, 238, 239, 240, 306, 336, 352, 353], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 67, 155, 171, 348, 350], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 119, 152, 154, 177, 178, 216, 217, 341, 348, 350], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 85, 89, 103, 109], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 158, 159, 207, 218, 332], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 81, 82, 88, 90, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 116, 126, 187, 210, 213, 230, 231, 237, 238, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 344], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 187, 213, 230, 237, 253, 255, 256, 257, 278, 334, 336], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 165, 239, 248, 265, 341, 342, 343, 348, 350], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "upper": [25, 70, 136], "unnam": 26, "constraint": [26, 99, 343, 347], "pixels_spec": 26, "observation_vector_spec": 26, "composite_spec": 26, "observation_vector": [26, 120, 325, 341], "td_project": 26, "absent": [26, 28, 53, 85, 89, 103, 109], "is_empti": [26, 28, 348], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "children": [26, 28, 32, 85, 89, 103, 109], "keysview": [26, 28], "reflect": [26, 28, 90, 104, 105, 164, 174, 265, 319, 342, 343, 344, 347], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 85, 89, 103, 109, 265], "succeed": [26, 28], "selected_kei": [26, 28, 150, 341], "unlock_": [26, 28], "unlock": [26, 28, 34, 36, 39], "valuesview": 26, "onehottensorspec": [27, 81, 82, 88, 90, 91, 94, 95, 100, 101, 106], "action_valu": [27, 33, 186, 187, 213, 230, 231, 237, 238, 257, 265, 278, 336, 344], "arang": [27, 33, 187, 202, 230, 307, 336, 350], "argmax": [27, 187, 213, 231, 238], "chosen_action_valu": [27, 33, 212, 213, 221, 237, 238, 278, 336, 344], "outcom": [27, 33, 185, 218], "drawn": [28, 29, 155, 232, 236, 240, 343, 347], "lazystackedtensordict": [28, 52, 85, 89, 99, 103, 109], "heterogen": [28, 29, 98, 104, 105, 167, 203, 204, 341, 342], "thrown": [29, 32, 85, 89, 103, 109, 350], "nvec": [30, 31], "cardin": [30, 31, 187, 213, 230, 231, 238, 343], "ax": [30, 205, 206], "m": [30, 32, 85, 89, 103, 109, 126, 240, 336, 342, 348], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 253, 256, 257, 278, 334], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 334], "gamma": [32, 146, 200, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 265, 267, 268, 269, 270, 272, 273, 274, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 337, 341, 342, 343, 347, 352], "sutton": [32, 337, 347], "1988": 32, "tempor": [32, 192, 196, 200, 281, 282, 287, 288], "44": [32, 347], "discount": [32, 57, 86, 146, 250, 255, 258, 259, 261, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 337, 342, 343, 347], "ahead": [32, 353], "add_modul": [32, 85, 89, 103, 109], "child": [32, 85, 89, 103, 109], "fn": [32, 37, 85, 89, 103, 109, 207, 330, 331], "init_weight": [32, 85, 89, 103, 109], "fill_": [32, 85, 89, 103, 109, 342, 344, 353], "net": [32, 85, 89, 103, 109, 197, 204, 249, 250, 256, 257, 263, 267, 268, 269, 270, 325, 328, 342, 348, 349, 352], "in_featur": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 180, 181, 182, 183, 197, 198, 204, 205, 206, 225, 239, 253, 255], "out_featur": [32, 85, 89, 99, 103, 109, 123, 141, 155, 158, 159, 161, 163, 176, 177, 178, 180, 181, 182, 183, 188, 189, 192, 196, 197, 198, 200, 203, 204, 205, 206, 225, 230, 239, 253, 255, 336, 341, 344, 352], "bia": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 188, 190, 191, 192, 194, 195, 196, 198, 204, 205, 206, 207, 232, 233, 235, 239, 246, 247, 248, 265, 270, 337, 341, 342, 343, 344, 347], "requires_grad": [32, 81, 82, 85, 89, 103, 109, 135], "bfloat16": [32, 85, 89, 103, 109], "datatyp": [32, 85, 89, 103, 109, 350], "member": [32, 85, 89, 103, 109, 265, 299], "xdoctest": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 265, 270], "buf": [32, 85, 89, 103, 109], "20l": [32, 85, 89, 103, 109, 265], "1l": [32, 85, 89, 103, 109, 265], "5l": [32, 85, 89, 103, 109, 265], "__call__": [32, 37, 85, 89, 103, 109, 240, 338], "doubl": [32, 46, 85, 89, 103, 109, 123, 124, 125, 127, 141, 155, 158, 159, 161, 163, 239, 253, 258, 262, 268, 271, 278, 341, 342, 343, 344, 353], "eval": [32, 85, 89, 103, 109, 159, 165, 341, 342, 343], "evalu": [32, 85, 89, 103, 109, 159, 185, 201, 202, 210, 220, 268, 321, 322, 342, 343], "dropout": [32, 85, 89, 103, 109, 159, 190, 192, 194, 196, 198, 344], "batchnorm": [32, 85, 89, 103, 109, 159], "disabl": [32, 85, 89, 103, 109, 159, 193, 220, 341], "comparison": [32, 85, 89, 103, 109, 159, 265, 341, 342], "similar": [32, 38, 57, 85, 89, 103, 104, 105, 109, 123, 141, 155, 158, 159, 161, 162, 163, 165, 225, 227, 236, 239, 240, 337, 341, 342, 343, 344, 348, 350, 353], "confus": [32, 85, 89, 103, 109, 159], "extra_repr": [32, 85, 89, 103, 109], "nontermin": 32, "original_reward": 32, "newli": [32, 85, 89, 103, 109], "OR": 32, "get_buff": [32, 85, 89, 103, 109], "docstr": [32, 85, 89, 103, 109], "get_submodul": [32, 85, 89, 103, 109], "qualifi": [32, 85, 89, 103, 109], "referenc": [32, 85, 89, 103, 109], "attributeerror": [32, 85, 89, 103, 109], "invalid": [32, 85, 89, 103, 109, 112, 201, 202], "resolv": [32, 85, 89, 103, 109], "someth": [32, 85, 89, 98, 103, 109, 335, 342, 343, 348, 353], "get_extra_st": [32, 85, 89, 103, 109, 165], "set_extra_st": [32, 85, 89, 103, 109, 165], "picklabl": [32, 85, 89, 103, 109, 165], "pickl": [32, 85, 89, 103, 109, 165], "get_paramet": [32, 85, 89, 103, 109], "sai": [32, 85, 89, 103, 109, 203, 349, 353], "net_b": [32, 85, 89, 103, 109], "net_c": [32, 85, 89, 103, 109], "conv": [32, 85, 89, 103, 109, 177, 178, 342], "conv2d": [32, 85, 89, 103, 109, 178, 203], "kernel_s": [32, 85, 89, 103, 109, 177, 178, 180, 181, 203, 208, 342, 352], "stride": [32, 85, 89, 103, 109, 177, 178, 180, 181, 189, 203, 342, 352], "diagram": [32, 85, 89, 103, 109], "degre": [32, 85, 89, 103, 109], "named_modul": [32, 85, 89, 103, 109], "o": [32, 85, 89, 103, 109, 195], "transit": [32, 53, 57, 73, 85, 89, 103, 109, 245, 341, 344, 348, 350], "half": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 341], "ipu": [32, 85, 89, 103, 109], "strict": [32, 34, 36, 39, 85, 89, 103, 109, 159, 270], "descend": [32, 85, 89, 103, 109, 159, 270], "persist": [32, 85, 89, 103, 109, 159, 174, 270], "enforc": [32, 71, 85, 89, 103, 109, 159, 241, 270, 348], "preserv": [32, 85, 89, 103, 109, 159, 270], "missing_kei": [32, 85, 89, 103, 109, 159, 270], "unexpected_kei": [32, 85, 89, 103, 109, 159, 270], "namedtupl": [32, 85, 89, 103, 109, 159, 270], "duplic": [32, 71, 85, 89, 103, 109, 253, 258, 265, 278], "l": [32, 85, 89, 103, 109, 190, 194, 279, 343, 348], "idx": [32, 85, 89, 103, 109], "named_buff": [32, 85, 89, 103, 109], "remove_dupl": [32, 85, 89, 103, 109, 265], "prepend": [32, 85, 89, 103, 109, 265], "running_var": [32, 85, 89, 103, 109], "named_children": [32, 85, 89, 103, 109], "conv4": [32, 85, 89, 103, 109], "conv5": [32, 85, 89, 103, 109], "memo": [32, 85, 89, 103, 109], "named_paramet": [32, 85, 89, 103, 109, 135, 265], "register_backward_hook": [32, 85, 89, 103, 109], "removablehandl": [32, 85, 89, 103, 109], "deprec": [32, 85, 89, 103, 109, 159, 168, 172, 186, 233, 249, 251, 253, 256, 257, 258, 263, 264, 267, 268, 269, 270, 278, 280, 281, 282, 283, 288, 353], "favor": [32, 85, 89, 103, 109, 343], "register_full_backward_hook": [32, 85, 89, 103, 109], "register_buff": [32, 85, 89, 103, 109], "running_mean": [32, 85, 89, 103, 109], "alongsid": [32, 85, 89, 103, 109, 347], "num_featur": [32, 85, 89, 103, 109], "register_forward_hook": [32, 85, 89, 103, 109, 187, 213], "with_kwarg": [32, 85, 89, 103, 109], "always_cal": [32, 85, 89, 103, 109], "register_module_forward_hook": [32, 85, 89, 103, 109], "regardless": [32, 85, 89, 103, 109, 251, 264, 267], "register_forward_pre_hook": [32, 85, 89, 103, 109], "invok": [32, 85, 89, 103, 109], "And": [32, 85, 89, 103, 109], "forward_pr": [32, 85, 89, 103, 109], "register_module_forward_pre_hook": [32, 85, 89, 103, 109], "grad_input": [32, 85, 89, 103, 109], "grad_output": [32, 85, 89, 103, 109], "subsequ": [32, 85, 89, 103, 109, 344], "technic": [32, 85, 89, 103, 109, 342, 344], "caller": [32, 85, 89, 103, 109], "register_module_full_backward_hook": [32, 85, 89, 103, 109], "register_full_backward_pre_hook": [32, 85, 89, 103, 109], "backward_pr": [32, 85, 89, 103, 109], "register_module_full_backward_pre_hook": [32, 85, 89, 103, 109], "register_load_state_dict_post_hook": [32, 85, 89, 103, 109], "incompatible_kei": [32, 85, 89, 103, 109], "register_modul": [32, 85, 89, 103, 109, 338], "alia": [32, 85, 89, 103, 109], "register_paramet": [32, 85, 89, 103, 109], "register_state_dict_pre_hook": [32, 85, 89, 103, 109], "keep_var": [32, 34, 36, 39, 85, 89, 103, 109, 159, 270], "requires_grad_": [32, 85, 89, 103, 109], "autograd": [32, 85, 89, 103, 109, 159, 270], "freez": [32, 85, 89, 103, 109], "finetun": [32, 85, 89, 103, 109], "gan": [32, 85, 89, 103, 109], "share_memori": [32, 85, 86, 89, 103, 109, 341], "share_memory_": [32, 85, 89, 103, 109, 352], "destin": [32, 34, 36, 39, 85, 89, 103, 109, 118, 124, 125, 127, 159, 161, 165, 174, 270, 299], "averag": [32, 85, 89, 103, 109, 159, 165, 235, 259, 260, 270, 314, 341, 343], "shallow": [32, 85, 89, 103, 109, 159, 270, 344], "pleas": [32, 55, 85, 89, 103, 104, 105, 109, 119, 156, 159, 270, 335], "detach": [32, 85, 89, 103, 109, 159, 265, 270, 280, 281, 282, 283, 341], "non_block": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 344], "memory_format": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "channels_last": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "unchang": [32, 85, 89, 103, 109, 123, 126, 141, 155, 158, 159, 161, 163, 232, 239, 313, 341, 350], "tri": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "pin": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "4d": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "ignore_w": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "1913": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "3420": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "5113": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "2325": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "torch_doctest_cuda1": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "gpu1": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "1914": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "5112": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "2324": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "float16": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 191, 195, 239], "cdoubl": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "3741": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "j": [32, 35, 65, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 338], "2382": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "5593": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "4443": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "complex128": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "6122": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "1150": [32, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "to_empti": [32, 85, 89, 103, 109], "dst_type": [32, 85, 89, 103, 109], "xpu": [32, 85, 89, 103, 109], "set_to_non": [32, 85, 89, 103, 109], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "uniqu": [33, 72, 73, 119, 128, 154, 155, 156, 306, 350], "discretebox": [33, 85, 89, 103, 109, 347], "chosen_data": [34, 60], "rewarddata": [34, 60, 334], "rejected_data": [34, 60], "from_dataset": [34, 36, 60], "dataset_nam": [34, 36, 40, 45, 60, 102], "max_length": [34, 36, 37, 43, 45, 60], "550": [34, 36, 40, 45, 60, 72, 73], "root_dir": [34, 36, 45, 60], "from_disk": [34, 36, 45, 60], "num_work": [34, 36, 45, 59, 60, 100, 103, 109, 341, 342], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 52, 53, 54, 55, 57, 58, 59, 60, 72, 85, 89, 103, 109, 124, 127, 141, 159, 163, 308], "load_from_disk": [34, 36, 45, 60], "load_dataset": [34, 36, 45, 60], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 60], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 60], "end_scor": [34, 39, 40, 60], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 332], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 185, 218], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 60, 62, 63, 78], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "memmap": [34, 36, 39, 62, 103, 109, 165, 299, 301, 313], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "mimic": [34, 36, 39, 85, 89, 103, 109], "cross": [34, 36, 39, 176], "anymor": [34, 36, 39, 159, 239], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 103, 353], "memmap_": [34, 36, 39, 165], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 72, 341, 344], "alloc": [34, 36, 39, 63, 201, 202, 341], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 344], "unbind": [34, 36, 39, 192, 196], "alpha": [35, 41, 65, 177, 178, 203, 250, 257, 266, 268, 270, 341, 350, 352], "ep": [35, 41, 65, 165, 235, 251, 271, 314, 341, 342, 344], "1e": [35, 41, 65, 165, 185, 188, 207, 218, 341, 342, 343, 347], "08": [35, 41, 65], "pin_memori": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 140, 341, 352], "schaul": [35, 65], "quan": [35, 65], "antonogl": [35, 65], "silver": [35, 65], "2015": [35, 65], "arxiv": [35, 54, 57, 59, 65, 81, 82, 83, 84, 94, 95, 100, 101, 106, 110, 111, 119, 141, 161, 179, 180, 181, 182, 183, 184, 187, 188, 189, 194, 200, 206, 208, 209, 211, 212, 214, 215, 221, 231, 235, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 270, 271, 280, 285, 293, 349], "ab": [35, 54, 57, 59, 65, 81, 82, 83, 84, 94, 95, 100, 101, 106, 110, 111, 118, 141, 161, 165, 179, 184, 188, 189, 194, 200, 206, 208, 209, 211, 212, 214, 215, 221, 249, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 266, 267, 270, 349], "1511": [35, 65, 189], "05952": [35, 65], "expon": [35, 41, 65], "\u03b1": [35, 41, 65], "delta": [35, 41, 65, 190, 194, 218, 236, 240, 334, 337], "null": [35, 41, 65, 117], "max_siz": [35, 38, 41, 42, 62, 63, 64, 74, 78], "1_000": [35, 38, 41, 42, 350], "merg": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 348], "mini": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 347], "decid": [35, 38, 41, 42, 352], "meth": [35, 38, 41, 42, 265, 348], "incompat": [35, 38, 41, 42, 269, 350], "drop_last": [35, 38, 41, 42, 71, 73], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 350], "tensordictprioritizedreplaybuff": [35, 334, 352], "simplifi": [35, 348, 350], "manual_se": [35, 38, 41, 42, 54, 58, 59, 72, 73, 81, 82, 85, 89, 103, 109, 116, 126, 137, 146, 149, 154, 156, 201, 202, 210, 224, 231, 232, 233, 235, 243, 249, 250, 252, 256, 263, 270, 347, 348, 352, 353], "_weight": [35, 41], "arrai": [35, 40, 85, 89, 103, 109, 128, 190, 191, 194, 195, 341], "update_prior": [35, 65, 313, 338, 342, 350, 352], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 67, 328, 341, 342, 350], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 316, 341, 343, 344, 347, 348], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 341], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 252, 253, 255, 256, 257, 258, 263, 265, 268, 270, 272, 278, 341, 350, 352], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 341, 350, 352], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 67, 341, 342, 350], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 67, 341, 342], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "cursor": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 68, 76, 77, 79, 80, 160], "set_sampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "set_storag": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "set_writ": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67], "prompt_rindex": [36, 37, 40], "os": [36, 45, 60, 342], "cpu_count": [36, 45, 60], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246], "text": [37, 40, 43, 55, 190, 191, 194, 195, 235, 343], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 179, 184, 211], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 350], "inde": [37, 126, 343, 348], "roundrobinwrit": [38, 42, 54], "Not": [38, 81, 82, 94, 95], "depth": [38, 85, 89, 99, 103, 109, 176, 177, 178, 180, 181, 182, 183, 188, 189, 198, 200, 203, 204, 208, 209, 230, 336, 342, 346, 347, 350], "_pytre": [38, 350], "tree_map": [38, 350], "did": [38, 164, 286, 342, 343, 350, 353], "assert0": [38, 350], "ref_model": 40, "reward_model": [40, 245], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 135], "kl": [40, 135, 260, 264], "penalti": [40, 264], "strai": 40, "calcul": [40, 146, 190, 255], "gpt2rewardmodel": 40, "get_dataload": [40, 334], "promptdata": [40, 334], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 60], "tensorclass_typ": [40, 60], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": 40, "reward_kl": [40, 135], "reward_raw": 40, "sample_log_prob": [40, 225, 226, 227, 236, 240, 242, 267, 325, 347], "create_rollout_td": 40, "log_prob": [40, 185, 201, 202, 210, 220, 240], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 190, 194, 250, 251, 257, 264, 266, 267, 268, 270, 314, 341], "term": [40, 135, 194, 195, 205, 206, 248, 249, 257, 318, 342, 343, 347], "subtract": [40, 154], "eo": 40, "generation_config": 40, "generationconfig": 40, "ti": [40, 289, 290, 291, 292, 294, 295, 296, 297, 342], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 253, 256, 257, 258, 263, 265, 268, 270, 272, 278, 350, 352], "reduct": [41, 65, 76], "prioritizedreplaybuff": [41, 334, 352], "min": [41, 65, 76, 218, 219, 220, 229, 235, 250, 251, 257, 266, 268, 270, 342, 343, 347], "median": [41, 65, 76, 94, 95, 236, 240], "include_info": [41, 42, 52, 53, 54, 55, 56, 57, 58, 59], "kw": [42, 68, 77], "int32": [42, 52, 57, 72, 94, 95, 171], "huggingfac": [43, 54, 59, 234], "co": [43, 128, 348], "doc": [43, 91, 94, 95, 102, 106, 306, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "pad_trunc": 43, "am": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 334], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "elementwis": 45, "vocabulari": 45, "loader": [45, 343], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 72, 73, 85, 89, 103, 109, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 174, 175, 228, 229, 232, 233, 235, 240, 253, 278, 299], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "batch_dimens": 45, "filder": 45, "data_memmap": 45, "exclus": [48, 49, 52, 57, 72, 73, 131, 190, 192, 194, 196, 201, 202, 230, 231, 237, 238, 271, 272, 280, 281, 282, 283, 284, 306, 332, 336], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "dataset_id": [52, 53, 54, 55, 57, 58, 59], "num_proc": 52, "num_slic": [52, 57, 72, 73], "slice_len": [52, 57, 72, 73], "strict_len": 52, "arari": 52, "2600": 52, "million": [52, 344], "consequ": [52, 194], "50x10": 52, "available_dataset": [52, 54, 55, 57, 58, 59, 72, 73], "ataridqn": 52, "immutabledatasetwrit": [52, 53, 55, 56, 57, 58, 59], "greater": [52, 72, 73, 192, 196, 341, 342, 352], "strict_length": [52, 57, 72, 73], "shorter": [52, 57, 72, 73], "Be": [52, 57, 72, 73], "game_nam": 52, "pong": [52, 101, 139, 353], "krull": 52, "1d": [52, 72, 73], "cheapli": 52, "nontensordata": [52, 57], "invalid_rang": 52, "999998": 52, "999999": 52, "add_count": 52, "84": [52, 145, 344], "valueestim": [52, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 334, 337, 341, 347], "convolut": [52, 177, 178, 180, 181, 203, 216], "2657628": 52, "2657629": 52, "2657630": 52, "2657631": 52, "2657632": 52, "2657633": 52, "2657634": 52, "2657635": 52, "2657636": 52, "2657637": 52, "2657638": 52, "2657639": 52, "2657640": 52, "2657641": 52, "2657642": 52, "2657643": 52, "2657644": 52, "2657645": 52, "2657646": 52, "2657647": 52, "2657648": 52, "2657649": 52, "2657650": 52, "2657651": 52, "2657652": 52, "2657653": 52, "2657654": 52, "2657655": 52, "2657656": 52, "2657657": 52, "2657658": 52, "2657659": 52, "2657660": 52, "2657661": 52, "2657662": 52, "2657663": 52, "2657664": 52, "2657665": 52, "2657666": 52, "2657667": 52, "2657668": 52, "2657669": 52, "2657670": 52, "2657671": 52, "2657672": 52, "2657673": 52, "2657674": 52, "2657675": 52, "2657676": 52, "2657677": 52, "2657678": 52, "2657679": 52, "2657680": 52, "2657681": 52, "2657682": 52, "2657683": 52, "2657684": 52, "2657685": 52, "2657686": 52, "2657687": 52, "2657688": 52, "2657689": 52, "2657690": 52, "2657691": 52, "1995687": 52, "1995688": 52, "1995689": 52, "1995690": 52, "1995691": 52, "1995692": 52, "1995693": 52, "1995694": 52, "1995695": 52, "1995696": 52, "1995697": 52, "1995698": 52, "1995699": 52, "1995700": 52, "1995701": 52, "1995702": 52, "1995703": 52, "1995704": 52, "1995705": 52, "1995706": 52, "1995707": 52, "1995708": 52, "1995709": 52, "1995710": 52, "1995711": 52, "1995712": 52, "1995713": 52, "1995714": 52, "1995715": 52, "1995716": 52, "1995717": 52, "1995718": 52, "1995719": 52, "1995720": 52, "1995721": 52, "1995722": 52, "1995723": 52, "1995724": 52, "1995725": 52, "1995726": 52, "1995727": 52, "1995728": 52, "1995729": 52, "1995730": 52, "1995731": 52, "1995732": 52, "1995733": 52, "1995734": 52, "1995735": 52, "1995736": 52, "1995737": 52, "1995738": 52, "1995739": 52, "1995740": 52, "1995741": 52, "1995742": 52, "1995743": 52, "1995744": 52, "1995745": 52, "1995746": 52, "1995747": 52, "1995748": 52, "1995749": 52, "1995750": 52, "quick": 52, "left": [52, 53, 57, 123, 124, 125, 129, 135, 141, 143, 144, 150, 153, 156, 158, 161, 163, 232, 342, 343], "untouch": [52, 57, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158], "_max_run": 52, "dataset_asterix": 52, "asterix": 52, "dataset_pong": 52, "sample_from_al": [52, 67, 70], "buffer_id": [52, 70, 75], "hidden": [52, 103, 109, 118, 188, 190, 191, 192, 194, 195, 196, 197, 208, 209, 214, 215, 225, 226, 227, 229, 239, 242, 251, 264, 267, 336, 344, 346, 352], "exclusive_field": 52, "stack_dim": 52, "from_env": 53, "use_truncated_as_don": 53, "direct_download": 53, "terminate_on_end": 53, "env_kwarg": [53, 58, 59, 330, 331, 341], "reconstruct": [53, 72, 73, 260, 341, 353], "recov": [53, 55, 57, 58, 59, 72, 73, 228, 233, 235, 241, 256, 263, 346], "get_dataset": 53, "qlearning_dataset": 53, "fewer": 53, "possess": 53, "unexpectedli": 53, "traj_split": 53, "observationnorm": [53, 165, 332, 341, 342, 343, 344, 352], "maze2d": 53, "umaz": 53, "loc": [53, 135, 137, 148, 193, 207, 219, 220, 225, 226, 227, 236, 240, 242, 249, 250, 263, 267, 268, 269, 270, 320, 325, 332, 336, 341, 342, 343, 344, 347, 352], "gen": 54, "dgrl": 54, "accompani": [54, 153], "gap": 54, "2312": 54, "05742": 54, "gen_dgrl": 54, "procgen": 54, "bigfish": 54, "bossfight": 54, "categori": [54, 336, 338], "1m_e": 54, "1m_": 54, "comma": 54, "npy": 54, "extract": [54, 234, 341, 343], "mmap": [54, 58, 59], "minut": [54, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "internet": [54, 59], "connect": [54, 59], "minari": 55, "websit": [55, 57], "currenrtli": 55, "minari_data": 55, "door": 55, "28": [55, 203], "39": [55, 94, 95], "door_body_po": 55, "qpo": 55, "qvel": 55, "dua": 56, "graff": 56, "2017": 56, "uci": 56, "archiv": 56, "ic": 56, "edu": 56, "ml": 56, "sklearn": [56, 102], "adult_num": [56, 102], "adult_onehot": [56, 102], "mushroom_num": [56, 102], "mushroom_onehot": [56, 102], "covertyp": [56, 102], "shuttl": [56, 102], "magic": [56, 102], "shuffl": [57, 71, 73, 347], "stream": 57, "embodi": [57, 349], "22": [57, 72, 73, 164], "institut": 57, "demonstr": [57, 343, 347, 348, 350, 353], "527": [57, 340, 341, 342, 343, 348, 350, 351, 352, 353], "skill": 57, "160266": 57, "googl": [57, 58, 81, 82, 343, 344, 347], "open_x_embodi": 57, "2310": [57, 106], "08864": 57, "language_instruct": 57, "get_non_tensor": 57, "neither": [57, 348], "nor": 57, "insuffici": 57, "chosen": [57, 110, 111, 154, 155, 212, 213, 221, 238, 299, 325, 336], "openx": 57, "__will": 57, "change__": 57, "randomli": [57, 71, 136, 137, 155, 232, 236, 240, 347, 348, 350], "crop": [57, 121, 142, 299], "modal": [57, 341], "cmu_stretch": 57, "is_init": [57, 59, 118, 134, 192, 196, 235, 344], "language_embed": 57, "512": [57, 189, 350], "lift": 57, "green": 57, "garbag": 57, "lid": 57, "roboset": 58, "h5": [58, 59], "roboh": [58, 106], "fk1": 58, "v4": [58, 89, 103, 145, 289, 290, 291, 292, 294, 295, 296, 297, 341, 343, 349], "expert": 58, "fk1_microopenrandom_v2d": 58, "concis": 58, "17": [58, 73, 103, 325], "18": [58, 73, 107, 108, 110, 111, 204, 347], "15": [58, 73, 85, 89, 103, 109, 229, 235, 259, 350], "19": [58, 72, 73, 76], "75": 58, "totensor": 59, "image_s": 59, "v": [59, 165, 190, 191, 194, 195, 225, 256, 263, 270, 336, 341, 342], "npz": 59, "2206": [59, 100, 101], "04779": [59, 250, 255], "vd4rl": 59, "detect": 59, "squar": [59, 121, 193, 219, 220, 299], "rectangular": [59, 177, 178], "walker_walk": 59, "64px": 59, "height": [59, 121, 145], "veloc": [59, 83, 84, 85, 89, 103, 109, 119, 347, 348, 353], "infinit": [60, 110, 111, 350], "three": [60, 336, 338, 343, 347, 348, 350, 353], "block": [60, 61, 80, 336, 344], "pairwisedataset": [60, 334], "256": [60, 184, 342, 343, 347], "immut": [61, 85, 89, 103, 109, 144, 159], "piec": [61, 68, 77, 79, 80, 341, 342, 343, 347, 348, 350], "scratch_dir": [62, 341, 350], "sent": [62, 63, 78, 165], "mistak": [62, 63, 78], "myclass": [62, 63, 78], "foo": [62, 63, 78, 229, 350, 353], "bar": [62, 63, 78, 229, 309, 310, 312, 316, 338, 342], "attach": [62, 63, 64, 74, 75, 78, 342], "entiti": [62, 63, 64, 74, 75, 78], "auto": [63, 78, 164, 235, 250, 257, 266, 268, 270, 272, 337, 347], "zero_": [63, 78, 171], "max_capac": [65, 341, 350], "uniformli": [66, 265, 353], "storageensembl": [67, 70], "samplerensembl": 67, "writerensembl": [67, 75], "num_buffer_sampl": [67, 70], "ensembl": [67, 70, 75, 80, 239, 268], "forbidden": 67, "collat": 67, "0x13a2ef430": 67, "0x13a2f9310": 67, "interpol": [67, 145, 342], "interpolationmod": 67, "bilinear": [67, 145], "0x13a2f9220": 67, "0x13a2f9f70": 67, "0x13a2d9b50": 67, "0x13a2f95b0": 67, "0x128648260": 67, "roundrobin": [68, 77], "incomplet": [71, 73], "fresh": 71, "caution": [71, 167, 353], "haven": [71, 349], "remain": [71, 118, 125, 126, 135, 154, 206], "draw": [71, 232], "end_kei": [72, 73], "traj_kei": [72, 73], "cache_valu": [72, 73], "truncated_kei": [72, 73, 146, 153], "slicesamplerwithoutreplac": 72, "expens": [72, 73, 350], "readili": [72, 73], "conjunct": [72, 73, 342], "Will": [72, 85, 100, 299], "320": [72, 73, 83, 84], "700": [72, 73], "robosetexperiencereplai": [72, 73, 334], "dataid": [72, 73], "__len__": 74, "rank_kei": 76, "rank": [76, 176], "samplerwithoutreplac": [76, 343, 347, 350], "get_insert_index": 76, "convers": [81, 82, 94, 95, 337], "2106": [81, 82, 254], "13281": [81, 82], "categorical_action_encod": [81, 82, 88, 90, 91, 94, 95, 100, 101, 106], "frame_skip": [81, 82, 83, 84, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 106, 132, 309, 312, 319, 338, 341, 342, 343, 352], "repeat": [81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 176, 343, 347, 348], "allow_done_after_reset": [81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 100, 101, 106], "availalb": [81, 82, 94, 95], "ant": [81, 82, 85, 89, 92, 103, 109, 349], "87": [81, 82], "acrobot": [81, 82, 83, 84, 353], "fetch": [81, 82, 83, 84, 135, 349, 350], "advant": [81, 82, 94, 95], "report": [81, 82, 94, 95], "short": [81, 82, 94, 95, 103, 167, 194, 195, 342, 343, 347], "timer": [81, 82, 94, 95], "timeit": [81, 82, 94, 95], "310": [81, 82, 340, 344, 351], "00": [81, 82, 340, 347, 351], "ms": [81, 82, 94, 95], "268": [81, 82], "433": [81, 82], "80": [81, 82, 347], "27": [81, 82, 103, 109], "213": [81, 82], "8605": [81, 82], "pipelineenv": 82, "get_environ": 82, "dm_control": [83, 84, 341, 346, 353], "2006": [83, 84, 250, 255], "12983": [83, 84], "task_nam": [83, 85, 89, 103, 109], "pixels_onli": [83, 84, 88, 90, 91, 106, 341, 342, 352, 353], "cheetah": [83, 84, 85, 89, 103, 109, 299, 341], "240": [83, 84, 352], "swingup": [83, 84, 353], "swingup_spars": [83, 84], "ball_in_cup": [83, 84], "catch": [83, 84], "cartpol": [83, 84, 85, 89, 103, 109, 119, 149, 154, 342, 344, 350, 353], "balance_spars": [83, 84], "three_pol": [83, 84], "two_pol": [83, 84], "finger": [83, 84], "turn_easi": [83, 84], "turn_hard": [83, 84], "fish": [83, 84], "upright": [83, 84, 342], "swim": [83, 84], "hopper": [83, 84], "hop": [83, 84], "humanoid": [83, 84, 103, 109, 346], "walk": [83, 84, 103, 109, 342, 346], "run_pure_st": [83, 84], "bring_bal": [83, 84], "bring_peg": [83, 84], "insert_bal": [83, 84], "insert_peg": [83, 84], "point_mass": [83, 84], "reacher": [83, 84], "swimmer": [83, 84], "swimmer6": [83, 84], "swimmer15": [83, 84], "walker": [83, 84], "dog": [83, 84], "trot": [83, 84], "humanoid_cmu": [83, 84], "lqr": [83, 84], "lqr_2_1": [83, 84], "lqr_6_2": [83, 84], "quadrup": [83, 84], "escap": [83, 84], "stacker": [83, 84], "stack_2": [83, 84], "stack_4": [83, 84], "deviceless": 85, "run_type_check": [85, 99], "counterenv": 85, "unboundedcontinuoustensorspec": [85, 89, 99, 103, 109, 116, 124, 127, 143, 155, 171, 176, 200, 224, 239, 242, 244, 269, 334, 347, 348], "_step": [85, 89, 103, 109, 116, 124, 127, 131, 143, 144], "continuousbox": [85, 89, 103, 109, 171, 347], "sort": [85, 89, 103, 109, 235], "another_act": [85, 89, 103, 109], "mutabl": [85, 89, 103, 109], "batch_lock": [85, 87, 89, 103, 109, 155, 159, 348], "done_keys_group": [85, 89, 103, 109], "outer": [85, 89, 103, 109, 338, 341, 342, 353], "another_don": [85, 89, 103, 109], "empty_cach": [85, 89, 103, 109, 159], "fake_tensordict": [85, 89, 103, 109, 342], "fake": [85, 89, 103, 109, 341, 342], "afterward": [85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246, 353], "silent": [85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 243, 246], "braxenv": [85, 89, 103, 109, 144, 334], "envnam": [85, 89, 103, 109], "pipeline_st": [85, 89, 103, 109], "attibut": [85, 89, 103, 109], "speak": [85, 89, 103, 109, 341], "rand_act": [85, 89, 98, 103, 104, 105, 109], "register_gym": [85, 89, 103, 109], "entry_point": [85, 89, 103, 109], "info_kei": [85, 89, 103, 109], "reward_threshold": [85, 89, 103, 109], "nondeterminist": [85, 89, 103, 109], "max_episode_step": [85, 88, 89, 90, 103, 109], "order_enforc": [85, 89, 103, 109], "autoreset": [85, 89, 103, 109], "disable_env_check": [85, 88, 89, 100, 101, 103, 109], "apply_api_compat": [85, 89, 103, 109], "nasium": [85, 89, 103, 109], "scope": [85, 89, 103, 109, 353], "dmcontrolenv": [85, 89, 103, 109, 299, 334, 341, 346, 353], "dmc": [85, 89, 103, 109], "removeemptyspec": [85, 89, 103, 109], "threshold": [85, 89, 103, 109, 232, 250, 251, 343], "learnt": [85, 89, 103, 109, 328, 341, 343], "knowledg": [85, 89, 103, 109], "checker": [85, 88, 89, 100, 101, 103, 109], "stepapicompat": [85, 89, 103, 109], "concept": [85, 89, 103, 109, 342, 350], "deem": [85, 89, 103, 109, 110, 111], "envgym": [85, 89, 103, 109], "0855": [85, 89, 103, 109], "0215": [85, 89, 103, 109], "0881": [85, 89, 103, 109], "0412": [85, 89, 103, 109], "1101": [85, 89, 103, 109], "0080": [85, 89, 103, 109], "0254": [85, 89, 103, 109], "0424": [85, 89, 103, 109], "9609e": [85, 89, 103, 109], "02": [85, 89, 103, 109, 340, 342, 351], "9776e": [85, 89, 103, 109], "04": [85, 89, 93, 103, 109], "6347e": [85, 89, 103, 109], "03": [85, 89, 103, 109, 137], "3842e": [85, 89, 103, 109], "5338e": [85, 89, 103, 109], "3064e": [85, 89, 103, 109], "0381e": [85, 89, 103, 109], "6656e": [85, 89, 103, 109], "05": [85, 89, 103, 109, 348], "0204e": [85, 89, 103, 109], "action_spac": [85, 89, 103, 109, 128, 187, 213, 230, 231, 237, 238, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 344], "0833": [85, 89, 103, 109], "0275": [85, 89, 103, 109], "0612": [85, 89, 103, 109], "0770": [85, 89, 103, 109], "1256": [85, 89, 103, 109], "0082": [85, 89, 103, 109], "0186": [85, 89, 103, 109], "0476": [85, 89, 103, 109], "2221": [85, 89, 103, 109], "2256": [85, 89, 103, 109], "5930": [85, 89, 103, 109], "6937": [85, 89, 103, 109], "5865": [85, 89, 103, 109], "5479": [85, 89, 103, 109], "0187": [85, 89, 103, 109], "6825": [85, 89, 103, 109], "5224": [85, 89, 103, 109], "0018": [85, 89, 103, 109], "cattensor": [85, 89, 103, 109, 325, 341, 346, 348, 353], "1005": [85, 89, 103, 109], "0335": [85, 89, 103, 109], "0268": [85, 89, 103, 109], "0133": [85, 89, 103, 109], "0627": [85, 89, 103, 109], "0074": [85, 89, 103, 109], "0488": [85, 89, 103, 109], "0353": [85, 89, 103, 109], "0075": [85, 89, 103, 109], "0069": [85, 89, 103, 109], "0098": [85, 89, 103, 109], "0058": [85, 89, 103, 109], "0033": [85, 89, 103, 109], "0157": [85, 89, 103, 109], "0004": [85, 89, 103, 109], "0381": [85, 89, 103, 109], "0452": [85, 89, 103, 109], "11355747": [85, 89, 103, 109], "04257728": [85, 89, 103, 109], "00408397": [85, 89, 103, 109], "04155852": [85, 89, 103, 109], "0389733": [85, 89, 103, 109], "01409826": [85, 89, 103, 109], "0978704": [85, 89, 103, 109], "08808327": [85, 89, 103, 109], "03970837": [85, 89, 103, 109], "00535434": [85, 89, 103, 109], "02353762": [85, 89, 103, 109], "05116226": [85, 89, 103, 109], "02788907": [85, 89, 103, 109], "06848346": [85, 89, 103, 109], "05154399": [85, 89, 103, 109], "0371798": [85, 89, 103, 109], "05128025": [85, 89, 103, 109], "dydact": [85, 89, 103, 109], "gym_env": [85, 89, 103, 109, 352], "reset_kei": [85, 89, 103, 109, 119, 149, 154, 155, 156], "multitask": [85, 89, 103, 109], "multiag": [85, 89, 98, 103, 104, 105, 109, 175, 204, 212, 221, 278], "another_reward": [85, 89, 103, 109], "callback": [85, 89, 103, 109, 347], "auto_reset": [85, 89, 103, 109, 348], "auto_cast_to_devic": [85, 89, 103, 109, 347], "break_when_any_don": [85, 89, 103, 109, 347], "return_contigu": [85, 89, 103, 109, 167, 346], "soon": [85, 89, 103, 104, 105, 109], "ndim": [85, 89, 103, 109], "concomitt": [85, 89, 103, 109], "workspac": [85, 89, 103, 109], "prevail": [85, 89, 103, 109, 149, 175], "creator": [86, 321, 322, 330, 331, 332], "substitut": [86, 154, 165], "vecnorm": [86, 332], "env_creat": [86, 341], "test_env1": 86, "_td": 86, "observation_count": [86, 353], "test_env2": 86, "sleep": [86, 353], "ps": 86, "p1": 86, "p2": 86, "9934": 86, "env_str": 87, "device_map": 87, "accross": [88, 90], "registri": 88, "asyncvectorenv": 88, "involv": [88, 90, 91, 106], "pixel_observ": [88, 90, 91, 106], "pixelobservationwrapp": [88, 90, 91, 106], "al": [88, 90, 128, 139, 176, 353], "adventur": [88, 90], "v5": [88, 90, 101, 128, 139, 353], "airraid": [88, 90, 353], "alien": [88, 90], "time_limit": 88, "timelimit": [88, 110, 111], "default_info_dict_read": [88, 89, 90, 103], "reader": [88, 89, 90, 103, 342], "set_info_dict_read": [88, 89, 90, 103], "info_dict": [88, 89, 90, 103], "auto_register_info_dict": [88, 89, 90, 103], "info_dict_read": [89, 103], "succe": [89, 103], "halfcheetah": [89, 103, 145, 325, 341], "register_info_dict": 89, "read_act": 89, "read_don": 89, "interrupt": [89, 286], "nonsens": 89, "fallback": 89, "broken": [89, 167], "read_ob": 89, "dictat": [89, 236, 240, 267, 341, 348], "read_reward": 89, "baseinfodictread": 89, "hoc": [89, 103], "dict_read": 89, "my_info_kei": 89, "some_env": 89, "vecenv": 90, "vectorenv": 90, "placehold": [91, 128, 159], "secur": 91, "habitat3": 91, "ai": [91, 349], "habitatrenderpick": 91, "isaacgym": [92, 93], "isaacgymwrapp": [92, 334], "isaacgymenv": [93, 334], "webpag": 93, "isaac": 93, "essenc": 93, "instadeepai": [94, 95], "2306": [94, 95], "09884": [94, 95], "snake": [94, 95], "grid": [94, 95, 299], "bodi": [94, 95], "body_st": [94, 95], "fruit_posit": [94, 95], "col": [94, 95], "row": [94, 95], "head_posit": [94, 95], "tail": [94, 95], "game2048": [94, 95], "maze": [94, 95], "cleaner": [94, 95], "cvrp": [94, 95], "multicvrp": [94, 95], "minesweep": [94, 95], "rubikscub": [94, 95], "knapsack": [94, 95], "sudoku": [94, 95], "tsp": [94, 95], "connector": [94, 95], "v2": [94, 95, 107, 108, 275, 289, 290, 291, 292, 294, 295, 296, 297, 325, 344], "mmst": [94, 95], "graphcolor": [94, 95], "partli": [94, 95], "scrambl": [94, 95], "robotwarehous": [94, 95], "tetri": [94, 95], "binpack": [94, 95], "jobshop": [94, 95], "0x1fca91910": 94, "122": [94, 95, 353], "40": [94, 95, 347], "0x1ff9baee0": 94, "134": [94, 95], "0x1ff9ba7c0": 94, "172": [94, 95], "31": [94, 95], "rubric": [95, 137, 242], "mo": [96, 97], "minecart": [96, 97], "mo_gym": 97, "qualnam": 98, "leverag": [98, 104, 105, 341, 347, 353], "neural": [98, 104, 105, 177, 178, 216, 239, 336, 342, 343, 344, 347, 348, 353], "group_map": [98, 104, 105, 110, 111, 112], "constructiuon": [98, 104, 105], "premad": [98, 104, 105, 110, 111, 278], "all_in_one_group": [98, 112], "agent_0": [98, 104, 105, 112], "agent_1": [98, 104, 105, 112], "agent_2": [98, 104, 105, 112], "agent_3": 98, "one_group_per_ag": [98, 104, 105], "environn": 99, "mymbenv": [99, 176, 200], "world_model": [99, 176, 200, 260], "super": [99, 116, 124, 127, 143, 176, 187, 200, 244, 250, 252, 256, 257, 263, 268, 270, 272, 341, 348, 352], "hidden_observ": [99, 176, 200], "mlp": [99, 176, 177, 178, 180, 181, 182, 183, 192, 196, 197, 200, 204, 225, 230, 253, 255, 325, 336, 342, 346, 349, 352], "worldmodelwrapp": [99, 176, 200], "activation_class": [99, 176, 177, 178, 180, 181, 182, 183, 188, 189, 198, 200, 203, 204, 342, 347, 352], "relu": [99, 176, 184, 200, 207, 248], "activate_last_lay": [99, 176, 183, 198, 200], "sail": [100, 101], "sg": [100, 101], "10558": [100, 101], "readthedoc": 100, "en": 100, "python_interfac": 100, "envpoolmixin": 101, "env_bas": 101, "task_id": 101, "env_typ": 101, "gym_reset_return_info": 101, "envpool_env": 101, "www": [102, 201, 202], "fetch_openml": 102, "106": 102, "my_env_fun": [103, 109], "custom_attribute_list": [103, 109], "custom_attribut": [103, 109], "custom_method_list": [103, 109], "custom_method": [103, 109], "deploi": [103, 109], "slight": [103, 109, 342], "share_individual_td": [103, 109], "shared_memori": [103, 109], "policy_proof": [103, 109], "ll": [103, 109, 190, 191, 194, 195, 341, 342, 343, 344, 347, 353], "introduc": [103, 109, 190, 192, 194, 196, 235, 341], "serial_for_singl": [103, 109], "com_veloc": [103, 109], "extrem": [103, 109], "head_height": [103, 109], "joint_angl": [103, 109], "torso_vert": [103, 109], "stringent": [103, 343, 347], "inter": 103, "penv": 103, "tensordictprim": [103, 344], "reward_ctrl": 103, "reward_run": 103, "x_posit": 103, "x_veloc": 103, "env_fix": 103, "drastic": [103, 350], "influenc": 103, "thumb": [103, 343], "suppos": [103, 312, 338, 353], "myenv": [103, 124, 127], "update_kwarg": [103, 109], "pettingzoo": [104, 105], "pet": [104, 105], "zoo": [104, 105], "__": [104, 105], "aecenv": [104, 105], "use_mask": [104, 105], "dead": [104, 105], "compulsori": [104, 105], "adversary_0": [104, 105], "adversari": [104, 105], "marlgroupmaptyp": [104, 105, 110, 111, 112, 334], "vectoris": [104, 105, 190, 191, 194, 195], "sisl": 104, "multiwalker_v9": 104, "return_st": [104, 105], "categorical_act": [104, 105, 107, 108, 110, 111], "n_piston": [104, 105], "pistonball_v6": [104, 105], "piston": [104, 105], "piston_0": [104, 105], "piston_1": [104, 105], "piston_20": [104, 105], "aec": [104, 105], "tictactoe_v3": [104, 105], "player": [104, 105], "player_1": [104, 105], "player_2": [104, 105], "butterfli": 105, "parallel_env": [105, 341, 352, 353], "vikashplu": 106, "wiki": 106, "06828": 106, "smacv2": [107, 108], "starcraft": [107, 108], "challeng": [107, 108, 348, 349], "10gen_terran": [107, 108], "10gen_zerg": [107, 108], "10gen_protoss": [107, 108], "3m": [107, 108], "8m": [107, 108], "25m": [107, 108], "5m_vs_6m": [107, 108], "8m_vs_9m": [107, 108], "10m_vs_11m": [107, 108], "27m_vs_30m": [107, 108], "mmm": [107, 108], "mmm2": [107, 108], "2s3z": [107, 108], "3s5z": [107, 108], "3s5z_vs_3s6z": [107, 108], "3s_vs_3z": [107, 108], "3s_vs_4z": [107, 108], "3s_vs_5z": [107, 108], "1c3s5z": [107, 108], "2m_vs_1z": [107, 108], "corridor": [107, 108], "6h_vs_8z": [107, 108], "2s_vs_1sc": [107, 108], "so_many_banel": [107, 108], "bane_vs_ban": [107, 108], "2c_vs_64zg": [107, 108], "old": [107, 108, 264, 353], "smac": [107, 108], "map_nam": [107, 108], "176": [107, 108], "battle_won": [107, 108], "dead_al": [107, 108], "dead_enemi": [107, 108], "episode_limit": [107, 108], "322": [107, 108], "Or": [107, 108, 203], "procedur": [107, 108], "distribution_config": [107, 108], "n_unit": [107, 108], "n_enemi": [107, 108], "team_gen": [107, 108], "dist_typ": [107, 108], "weighted_team": [107, 108], "unit_typ": [107, 108], "marin": [107, 108], "maraud": [107, 108], "medivac": [107, 108], "exception_unit_typ": [107, 108], "start_posit": [107, 108], "surrounded_and_reflect": [107, 108], "map_x": [107, 108], "map_i": [107, 108], "capability_config": [107, 108], "88": [107, 108], "131": [107, 108], "starcraft2env": 108, "proroklab": [110, 111], "vectorizedmultiagentsimul": [110, 111], "2207": [110, 111], "03530": [110, 111], "basescenario": 110, "descript": [110, 342, 343], "perfrom": [110, 111], "defaultt": 110, "continuous_act": [110, 111, 347], "repositiori": 110, "horizon": [110, 111, 176, 200, 343], "sparsiti": 110, "agent_nam": [110, 111, 112], "agent_names_to_indices_map": [110, 111], "unbatched_action_spec": [110, 111, 347], "unbatched_observation_spec": [110, 111], "unbatched_reward_spec": [110, 111], "het_spec": [110, 111], "het_specs_map": [110, 111], "flock": [110, 111], "agent_collision_rew": [110, 111], "agent_distance_rew": [110, 111], "ca": 112, "environment4": 112, "get_group_map": 112, "sumbodul": 113, "model_bas": [114, 176, 200], "adapt": [116, 153, 264, 341, 348], "masker": 116, "binarydiscretetensorspec": [116, 253, 256, 257, 278, 334], "maskedenv": 116, "ones_lik": 116, "scatter": 116, "unsqueez": [116, 119, 120, 157, 160, 197, 341, 344, 347, 348], "_set_se": [116, 124, 127, 143, 348], "biner": 117, "transform_reward_spec": [117, 122, 123, 124, 125, 129, 135, 143, 144, 147, 148, 150, 151, 153, 158, 160], "tensordictmodulebas": [118, 222, 230, 237, 344], "burn_in": 118, "burn": 118, "date": [118, 302], "retur": 118, "burnt": 118, "gru_modul": [118, 192], "input_s": [118, 190, 191, 192, 194, 195, 196, 197, 344], "hidden_s": [118, 190, 191, 192, 194, 195, 196, 197, 344], "set_recurrent_mod": [118, 192, 196, 344], "burn_in_transform": 118, "gru": [118, 191, 192], "num_lay": [118, 190, 192, 194, 196, 208, 209], "86": [118, 347], "3008": 118, "37": 118, "0344": 118, "padding_valu": [119, 201, 202], "as_invers": 119, "account": [119, 201, 202, 336, 342, 344, 350, 353], "movement": 119, "pdf": [119, 179, 180, 181, 182, 183, 187, 211, 231, 235, 258, 268, 271, 280, 285, 293, 325], "1312": 119, "5602": 119, "unsqueezetransform": [119, 348, 350], "consumpt": 119, "followin": 119, "pictur": 119, "pixels_trsf": [119, 350], "grayscal": [119, 342, 344, 350, 353], "data_exclud": [119, 350], "transform_observation_spec": [119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 164, 348], "del_kei": [120, 161, 346, 348], "unsqueeze_if_oor": 120, "observation_posit": 120, "observation_veloc": 120, "delet": [120, 306], "key1": [120, 307, 315], "key2": [120, 307, 315], "center": [121, 299], "width": [121, 145], "out_keys_inv": [122, 124, 127, 137, 138, 139, 143, 144, 151, 158, 348], "scalar": [122, 147, 181, 183, 205, 206, 228, 232, 233, 235, 246, 249, 250, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 336, 342, 348], "permit": [122, 131, 160, 249, 251, 264, 267, 269], "rewardsc": [123, 159, 341, 342, 344], "rewardclip": 123, "transformed_env": [123, 158, 159], "transform_env_devic": [123, 125, 158], "transform_input_spec": [123, 124, 125, 126, 137, 139, 143, 144, 149, 153, 154, 155, 158, 160, 162], "transform_output_spec": [123, 124, 125, 129, 135, 143, 144, 150, 153, 158], "transformfull_done_spec": [123, 124, 125, 129, 135, 143, 144, 150, 153, 158], "dtype_in": 124, "dtype_out": 124, "scan": [124, 127, 241, 242], "resp": [124, 127], "not_transform": [124, 127], "constructedw": [124, 127], "orig_devic": 125, "unspecifi": 125, "transform_done_spec": [125, 158], "num_actions_effect": 126, "max_act": 126, "include_forward": 126, "dimension": [126, 192, 196, 280, 285, 293, 347], "num_act": [126, 257], "action_out": 126, "_call": [126, 131, 348], "eol_kei": 128, "lives_kei": 128, "eol_attribut": 128, "unwrap": 128, "breakout": 128, "210": [128, 139], "160": [128, 139], "eol_transform": 128, "eol": 128, "dqnloss": [128, 249, 250, 252, 255, 257, 258, 259, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 278, 323, 334, 337, 342, 344], "register_kei": 128, "loss_or_advantag": 128, "lossmodul": [128, 316, 327, 328, 334], "valueestimatorbas": [128, 265, 334], "excluded_kei": 129, "finit": [130, 350], "first_dim": 131, "last_dim": 131, "allow_positive_dim": [131, 160], "th": [131, 160, 190, 194, 348], "frameskip": 131, "repeatedli": [132, 343, 347], "init_kei": 134, "tracker": 134, "coef": 135, "pi_curr": 135, "pi_0": 135, "overfit": 135, "probabilist": [135, 236, 334, 343, 352], "get_dist": [135, 240, 241], "mod": [135, 192, 196, 243, 344], "normalparamextractor": [135, 336, 343, 347], "probabilisticactor": [135, 225, 226, 227, 229, 249, 250, 254, 256, 257, 263, 266, 267, 268, 269, 270, 272, 336, 341, 343, 347], "tanhnorm": [135, 225, 226, 227, 236, 242, 249, 250, 263, 267, 268, 269, 270, 272, 334, 343, 347, 352], "n_ob": [135, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272], "n_act": [135, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272], "return_log_prob": [135, 225, 226, 227, 236, 240, 242, 269, 336, 343, 347, 352], "apply_": 135, "copy_": [135, 341], "formulat": 135, "diverg": [135, 192, 196, 236, 240, 260, 264], "noop": 136, "trial": 136, "standard_norm": [137, 148, 341, 342, 344], "affin": [137, 148], "layer": [137, 165, 177, 178, 180, 181, 188, 190, 191, 192, 194, 195, 196, 198, 203, 204, 205, 206, 208, 209, 216, 217, 223, 234, 243, 336, 342, 343, 344, 349], "normal": [137, 165, 177, 178, 193, 198, 201, 202, 207, 219, 220, 228, 236, 240, 251, 264, 267, 312, 314, 332, 336, 338, 344, 347, 353], "set_default_tensor_typ": 137, "doubletensor": 137, "isclos": 137, "next_ob": [137, 280, 281, 282, 283, 352], "init_stat": [137, 341, 342, 343, 344], "3752e": 137, "01": [137, 235, 246, 251, 264, 267, 347], "5087e": 137, "9294e": 137, "9636": 137, "5608": 137, "6408": 137, "num_it": [137, 342, 343], "reduce_dim": [137, 341, 342, 343, 344], "cat_dim": [137, 341, 342, 343, 344], "keep_dim": [137, 342, 344], "statist": [137, 165, 269, 332, 341, 342, 343, 353], "approach": [137, 341, 343, 353], "gaussian": [137, 155, 176, 200, 205, 206, 211, 228, 343], "empir": [137, 176, 200, 236, 240, 341, 343, 347], "3d": [137, 177], "third": [137, 231, 347], "reorder": 139, "in_keys_in": 139, "channel": [139, 157, 203, 208, 209, 342], "r3m": [141, 349], "resnet": [141, 161, 163], "visual": [141, 161, 163, 343, 348], "embed": [141, 161, 162, 163, 212, 224, 225, 226, 227, 239, 244, 349], "ego4d": [141, 161, 163], "univers": [141, 161, 163], "suraj": [141, 161], "nair": [141, 161], "aravind": [141, 161], "rajeswaran": [141, 161], "vikash": [141, 161, 163], "kumar": [141, 161, 163], "chelsea": [141, 161], "finn": [141, 161], "abhinav": [141, 161], "gupta": [141, 161], "2203": [141, 161, 200, 349], "12601": [141, 161, 349], "_init": [141, 161, 341], "snippet": [141, 161, 341], "resnet50": [141, 163, 349], "model_nam": [141, 161, 163, 302], "resnet34": 141, "resnet18": 141, "r3m_vec": [141, 349], "feed": [141, 163, 265, 336, 341, 347, 350], "stack_imag": [141, 163], "tread": [141, 163], "separet": [141, 163], "hub": [141, 163], "resnet50_weight": [141, 163], "imagenet1k_v1": [141, 163], "download_path": [141, 163], "tensor_pixels_kei": [141, 163], "dest": [141, 161, 163, 239], "sub_seq_len": 142, "sample_dim": [142, 341], "primarili": 142, "hesit": 142, "request": 142, "robust": 142, "mix": [142, 212, 221, 278, 341, 347], "improp": 142, "dummyenv": 143, "another_oth": 143, "other_reward": 143, "create_copi": 144, "stuff": 144, "newnam": 144, "r2g": 146, "99": [146, 165, 200, 261, 274, 279, 286, 328, 341, 342, 343, 352], "reward_to_go": 146, "bernoulli_": 146, "9010": 146, "9404": [146, 286], "9701": [146, 286], "9900": [146, 286], "0000": [146, 156, 232, 233, 243, 286], "crash": 146, "clamp_min": 147, "clamp_max": 147, "clip_min": 147, "clip_max": 147, "episode_": 149, "reward1": 149, "reward2": 149, "episode_reward": [149, 347], "keep_reward": 150, "keep_don": 150, "sign": [151, 280], "logical_or": 151, "squeeze_dim": 152, "step_count_kei": 153, "update_don": 153, "accordingli": [153, 154, 194, 237, 344], "disjunct": 153, "recognis": 153, "target_return": 154, "primer": [155, 344], "default_valu": 155, "unit": [155, 176, 188, 190, 191, 208, 209, 214, 215, 343], "transfomedenv": 155, "mykei": 155, "__unless": 155, "exists__": 155, "pool": 156, "increas": [156, 235, 347], "10th": 156, "0216": 156, "1149": 156, "1990": 156, "2749": 156, "3281": 156, "9290": 156, "3702": 156, "8978": 156, "from_int": 157, "shape_toler": 157, "permuat": 157, "ri": 157, "principl": 158, "cattransform": 158, "notabl": 158, "rewardsum": [158, 347], "cache_spec": 159, "set_missing_toler": 159, "keyerror": 159, "unsqueeze_dim": [160, 348], "danger": 160, "vc1": 161, "vc1_vec": 161, "untrain": 161, "make_noload_model": 161, "vip": [162, 163, 349], "toward": 163, "implicit": [163, 256, 263, 350], "jason": 163, "ma": 163, "shagun": 163, "sodhani": 163, "dinesh": 163, "jayaraman": 163, "osbert": 163, "bastani": 163, "ami": 163, "zhang": 163, "vip_vec": 163, "final_nam": 164, "sb3": 164, "terminal_obs_read": 164, "truli": [164, 352], "till": 164, "nan": 164, "shared_td": 165, "decai": [165, 228, 232, 233, 271, 314, 341, 342, 344, 353], "9999": 165, "0001": [165, 188, 207], "fly": [165, 264, 337, 343, 348, 350, 353], "to_observation_norm": 165, "underflow": [165, 314], "build_td_for_shared_vecnorm": 165, "memmori": 165, "queue": [165, 350], "td_share": 165, "state_dim": [166, 179, 184, 211, 214, 215, 229], "action_dim": [166, 179, 180, 182, 184, 211, 229, 341, 346], "gsde": [166, 268, 332], "func": 166, "gsdemodul": 166, "check_dtyp": 167, "discrep": [167, 249, 251, 252, 253, 264, 267, 269, 278], "probabilistictdmodul": [172, 173, 198, 236, 240, 279, 312], "next_tensordict": 174, "keep_oth": [174, 348], "exclude_reward": 174, "exclude_don": 174, "exclude_act": 174, "next_": 174, "funtion": 174, "write_full_fals": 175, "_terminated_or_trunc": 175, "entropi": [176, 249, 250, 251, 256, 257, 263, 264, 266, 267, 268, 270, 272, 347], "botev": 176, "et": 176, "2013": 176, "cem": 176, "plan": [176, 199, 200], "varianc": [176, 193, 207, 219, 220, 337, 341, 343, 347], "k": [176, 190, 191, 194, 195], "maximis": [176, 180, 182, 200, 336, 341, 342, 343, 347], "modelbasedenv": [176, 200], "planning_horizon": [176, 200], "optim_step": [176, 200], "mpc": [176, 199, 200], "num_candid": [176, 200], "candid": [176, 200], "top_k": [176, 200], "modelbasedenvbas": [176, 199, 200, 334], "safemodul": [176, 199, 225, 227, 240, 249, 250, 256, 257, 263, 267, 268, 269, 270, 272, 321, 322, 328, 334, 352], "num_cel": [177, 178, 180, 181, 182, 183, 188, 189, 192, 196, 198, 203, 204, 225, 342, 343, 344, 347, 352], "elu": [177, 178, 180, 181, 182, 183, 188, 189, 203, 342, 352], "activation_kwarg": [177, 178, 198], "norm_class": [177, 178, 180, 181, 198], "norm_kwarg": [177, 178, 198], "bias_last_lay": [177, 178, 180, 181, 182, 183, 189, 198], "aggregator_class": [177, 178, 180, 181, 342, 344, 352], "squashdim": [177, 178, 180, 203, 352], "aggregator_kwarg": [177, 178, 180, 181, 342, 344], "squeeze_output": [177, 178, 180, 181, 342, 344], "produc": [177, 178, 198, 204, 210, 225, 227, 229, 299, 343, 344, 350, 353], "cell": [177, 178, 190, 191, 192, 194, 195, 196, 198, 203, 204, 343], "kernel": [177, 178, 189, 197, 203], "cnet": [177, 178], "conv3d": 177, "34": [177, 178, 198, 347], "35": [177, 178, 198], "transformer_config": [179, 211, 229], "decisiontransform": [179, 211], "dtconfig": [179, 184, 211], "2202": [179, 184, 211, 266], "05607": [179, 184, 211, 266], "return_to_go": [179, 184, 211, 229], "conv_net_kwarg": [180, 181], "mlp_net_kwarg": [180, 181, 182], "use_avg_pool": [180, 181], "WITH": [180, 181, 182, 183, 235, 271], "1509": [180, 181, 182, 183, 200, 235, 253, 262, 271], "02971": [180, 181, 182, 183, 235, 271], "convnet": [180, 203, 344, 352], "ndims_in": 180, "avgpool": [180, 181], "adaptiveavgpool2d": [181, 342, 344], "400": [182, 183, 347], "mlp_net_kwargs_net1": 183, "mlp_net_kwargs_net2": 183, "decion": 184, "desdescrib": 184, "n_embd": 184, "n_layer": [184, 190, 194], "n_head": 184, "n_inner": 184, "n_posit": 184, "resid_pdrop": 184, "attn_pdrop": 184, "gpt2config": 184, "atol": [185, 218], "06": [185, 218, 347], "rtol": [185, 218], "batch_shap": [185, 218], "event_shap": [185, 218], "absolut": [185, 218, 341], "densiti": [185, 201, 202, 210, 220], "mass": [185, 201, 202, 210, 220, 348], "rsampl": [185, 202, 210, 240], "sample_shap": [185, 201, 202, 210], "dqnet": 186, "atom": 186, "softmax": [186, 202, 210, 230, 231], "var_num": [187, 213, 230, 231, 238], "action_value_kei": [187, 213, 230, 231, 237, 238, 265, 278], "action_mask_kei": [187, 213, 230, 231, 232, 233, 237, 238], "perspect": [187, 231, 258, 343], "1707": [187, 231, 258, 267], "06887": [187, 231, 258], "mult": [187, 204, 213, 230, 231, 237, 238], "tensordict_modul": [187, 190, 191, 194, 195, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 252, 256, 257, 263, 267, 268, 269, 270, 272, 336], "nbin": [187, 230, 336], "customdistributionalqv": 187, "log_softmax": [187, 230], "from_modul": [187, 236, 239, 242, 244], "one_hot": [187, 202, 213], "qvalue_actor": [187, 213, 230, 237, 336], "to_modul": [187, 236, 239, 242, 244], "std_bia": 188, "std_min_val": 188, "belief": [188, 208, 214, 215], "1912": [188, 259, 260, 261], "01603": [188, 259, 260, 261], "softplu": [188, 207, 246, 247, 248], "out_features_valu": 189, "cnn_kwarg": [189, 342], "mlp_kwarg": [189, 197, 342], "duel": 189, "cnn": [189, 203, 342, 352], "06581": 189, "batch_first": [190, 192, 194, 196, 344], "bidirect": [190, 194, 344], "cudnn": [190, 191, 194, 195, 344], "vmap": [190, 191, 194, 195, 222, 239, 242, 352], "rnn": [190, 191, 194, 195, 344], "device_count": [190, 191, 194, 195, 341, 342, 344, 349, 353], "els": [190, 191, 194, 195, 208, 336, 338, 341, 342, 343, 344, 347, 348, 349], "n_in": [190, 191, 194, 195], "n_out": [190, 191, 194, 195], "h0": [190, 191, 194, 195], "h1": [190, 191, 194, 195], "call_gru": [190, 191], "h_out": [190, 191, 194, 195], "batched_cal": [190, 191, 194, 195], "gate": [190, 191, 194], "r_t": 190, "sigma": [190, 191, 193, 194, 195, 211, 219, 220, 228, 235, 343], "w_": [190, 191, 194, 195], "ir": [190, 191], "x_t": [190, 194], "b_": [190, 191, 194, 195], "hr": [190, 191, 194], "h_": [190, 191, 194], "z_t": 190, "iz": [190, 191], "hz": [190, 191], "n_t": 190, "odot": [190, 191, 194, 195], "hn": [190, 191, 194], "h_t": [190, 194], "sigmoid": [190, 191, 194, 195], "hadamard": [190, 191, 194, 195], "multilay": [190, 194], "_t": [190, 194, 347, 348], "ge": [190, 194], "bernoulli": [190, 194], "b_ih": [190, 191, 194, 195, 196], "b_hh": [190, 191, 194, 195, 196], "seq": [190, 192, 194, 196, 344, 346], "h_0": [190, 194, 195], "unbatch": [190, 194], "pack": [190, 194, 343, 353], "pack_padded_sequ": [190, 194], "pack_sequ": [190, 194], "num": [190, 194], "_layer": [190, 194], "_size": [190, 191, 194, 195], "h_n": [190, 194], "packedsequ": [190, 194], "weight_ih_l": [190, 194], "learnabl": [190, 191, 194, 195], "w_ir": 190, "w_iz": 190, "w_in": 190, "num_direct": [190, 194], "weight_hh_l": [190, 194], "w_hr": 190, "w_hz": 190, "w_hn": 190, "bias_ih_l": [190, 194], "b_ir": 190, "b_iz": 190, "b_in": 190, "bias_hh_l": [190, 194], "b_hr": 190, "b_hz": 190, "b_hn": 190, "bias": [190, 191, 194, 195, 246, 337, 341], "mathcal": [190, 191, 194, 195], "sqrt": [190, 191, 194, 195, 235], "frac": [190, 191, 194, 195, 343], "seq_len": [190, 194], "subtli": 190, "matrix": [190, 194, 205, 206], "contrast": [190, 262, 350], "hx": [190, 191, 194, 195], "lstmcell": [191, 196], "gru_cel": 191, "z": 191, "weight_ih": [191, 195], "weight_hh": [191, 195], "bias_ih": [191, 195], "bias_hh": [191, 195], "rocm": [191, 195], "embedd": [192, 196, 197], "grucel": [192, 239], "python_bas": [192, 196], "recurrent_st": [192, 344], "custom_kei": [192, 196], "recurrent_mod": [192, 196], "rs": [192, 341], "gru_module_train": 192, "policy_train": [192, 196], "traj_td": [192, 196], "policy_infer": [192, 196], "td_inf": [192, 196], "assert_clos": [192, 196], "upscal": [193, 219, 220], "tanh_loc": [193, 219, 220], "event_dim": [193, 218, 219], "ultim": [193, 219, 220], "poor": [193, 219, 220], "explos": [193, 219, 220], "switch": [193, 220], "formula": [193, 219, 220, 249, 251, 264, 267, 337, 343], "proj_siz": 194, "c0": [194, 195], "c1": [194, 195], "call_lstm": [194, 195], "c_out": [194, 195], "i_t": 194, "ii": [194, 195], "hi": [194, 195], "f_t": 194, "hf": [194, 195], "g_t": 194, "ig": [194, 195], "hg": [194, 195], "o_t": 194, "ho": [194, 195], "c_t": 194, "c_": 194, "forget": 194, "1402": 194, "1128": 194, "c_0": [194, 195], "proj": 194, "c_n": 194, "w_ii": 194, "w_if": 194, "w_ig": 194, "w_io": 194, "w_hi": 194, "w_hf": 194, "w_hg": 194, "w_ho": 194, "b_ii": 194, "b_if": 194, "b_ig": 194, "b_io": 194, "b_hi": 194, "b_hf": 194, "b_hg": 194, "b_ho": 194, "weight_hr_l": 194, "_revers": 194, "analog": 194, "cn": 194, "lstm_cell": 195, "h_1": 195, "c_1": 195, "time_step": [195, 197], "cx": 195, "trust": 196, "correspont": 196, "recurrent_state_h": 196, "recurrent_state_c": 196, "triplet": [196, 237, 238], "lstm_modul": 196, "rs_h": 196, "rs_c": 196, "hidden0": 196, "hidden1": 196, "lstm_kwarg": 197, "next_observ": [197, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 346], "2d": [197, 347], "hidden0_in": 197, "hidden1_in": 197, "hidden0_out": 197, "hidden1_out": 197, "single_bias_last_lay": 198, "layer_class": 198, "layer_kwarg": 198, "perceptron": 198, "lazylinear": [198, 336, 343, 348, 349], "42": [198, 249, 250, 252, 256, 263, 270, 353], "noisylinear": [198, 205, 334, 342], "noisylazylinear": [198, 334], "mpcplanner": 199, "tensordict_out": [199, 353], "mppi": 200, "covari": 200, "william": [200, 269], "aldrich": 200, "theodor": 200, "01149": 200, "hansen": 200, "wang": 200, "su": 200, "04955": 200, "valueoper": [200, 225, 226, 227, 249, 250, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 328, 336, 341, 343], "tdlambdaestim": [200, 334, 341], "value_net": [200, 253, 255, 269, 280, 281, 282, 283, 343], "adv": 200, "lmbda": [200, 274, 280, 283, 285, 291, 292, 293, 296, 297, 337, 341, 343, 347], "95": [200, 274, 343, 344], "value_network": [200, 252, 253, 255, 256, 258, 263, 270, 280, 281, 282, 283, 337, 341, 343], "temperatur": [200, 250, 256, 263], "neg_inf": [201, 202], "inf": [201, 202], "api_doc": [201, 202], "tf_agent": [201, 202], "event": [201, 202, 210, 289, 290, 291, 292, 294, 295, 296, 297, 350], "unnorm": [201, 202, 210], "sparse_mask": [201, 202], "dens": [201, 202], "0831": [201, 202], "1203": [201, 202], "0928": [201, 202], "1972": [201, 202], "grad_method": [202, 210], "reparamgradientstrategi": [202, 210], "passthrough": [202, 210], "proxi": [202, 210, 337], "relaxedonehot": [202, 210], "zeros_lik": [202, 348], "sample_non_valid": 202, "centralis": [203, 204, 347], "share_param": [203, 204, 347], "basi": [203, 350], "homogen": [203, 204, 347], "agent_network": [203, 204], "modulelist": [203, 204, 325], "lazyconv2d": 203, "2592": 203, "decentralis": [203, 347], "n_agent_input": [204, 347], "n_agent_output": [204, 347], "toech": 204, "centalis": 204, "shown": [204, 336, 346, 347, 350], "std_init": [205, 206], "initialize_paramet": 205, "isol": [205, 265], "1706": [206, 221], "10295v3": 206, "induc": 206, "aid": 206, "scale_map": 207, "biased_softplus_1": 207, "scale_lb": [207, 214, 215], "exp": [207, 248], "module_norm": 207, "decod": 208, "1803": [208, 209, 212], "10122": [208, 209], "rnn_hidden": 208, "latent": 209, "excacli": 210, "inres": 211, "mu": [211, 235, 343], "state_shap": [212, 278], "mixing_embed_dim": [212, 278], "qmix": [212, 347], "mixer": [212, 221, 278], "monoton": 212, "hyper": 212, "11485": 212, "qmixerloss": [212, 221], "qmix_vdn": [212, 221], "eventu": [212, 344, 348], "vdn": [212, 221], "greedi": [213, 231, 232, 233, 238, 342, 344], "hidden_dim": [214, 215], "posterior": [214, 260], "rssm": [214, 215, 260], "1811": [214, 215], "04551": [214, 215], "obs_embed": 214, "rnn_hidden_dim": 215, "dream": 215, "tanhtransform": 219, "decomposit": 221, "05296": 221, "hide": [222, 343, 347], "satisfi": [222, 336], "vmap_dim": 222, "lam": 222, "sample_in": 222, "sample_in_td": 222, "vm": 222, "translat": [224, 236], "character": [224, 230, 236, 237, 239, 350], "overflow": [224, 230, 231, 236, 237, 238, 239, 240], "td_modul": [224, 225, 226, 227, 236, 239, 240, 242, 244, 352], "3635": 224, "0340": 224, "1476": 224, "3911": 224, "1664": 224, "5455": 224, "2247": 224, "4583": 224, "2916": 224, "2160": 224, "5337": 224, "5193": 224, "grad_fn": [224, 232, 233], "addmmbackward0": 224, "actorvalueoper": [225, 336], "get_policy_oper": [225, 226, 227, 251, 264, 267, 336], "standalon": [225, 226, 227], "tdmodul": [225, 226, 227, 328], "get_critic_oper": 225, "common_oper": [225, 227], "policy_oper": [225, 226, 227], "value_oper": [225, 226, 227], "normalparamwrapp": [225, 226, 227, 236, 242, 249, 250, 256, 257, 263, 267, 268, 269, 270, 272, 334, 352], "module_hidden": [225, 227], "td_module_hidden": [225, 227], "module_act": [225, 227], "td_module_act": [225, 226, 227], "module_valu": [225, 226, 227], "td_module_valu": [225, 226, 227], "state_action_valu": [225, 244, 250, 256, 270, 279, 325, 328, 336, 341, 352], "td_clone": [225, 226, 227], "tensordictmodulewrapp": [225, 321, 322, 328], "get_policy_head": [225, 226, 227], "safesequenti": [225, 226, 227, 278], "head": [225, 227, 251, 264, 267], "get_value_head": [225, 226, 227], "get_value_oper": [225, 226, 227, 251, 264, 267], "action_modul": 226, "state_valu": [226, 227, 244, 251, 256, 264, 267, 268, 270, 280, 281, 282, 283, 285, 287, 289, 291, 293, 294, 296, 336, 341, 347], "qualiti": [227, 336], "actorcriticoper": [227, 251, 264, 267, 336], "embeddig": 227, "refet": 227, "actorcriticwrapp": [227, 336, 341], "po": [228, 233], "sigma_init": 228, "epsilon": [228, 232, 233, 235, 271, 314, 342, 343, 344], "sigma_end": 228, "annealing_num_step": [228, 232, 233, 235, 341, 342, 344], "captur": [228, 232, 233, 235], "omiss": [228, 232, 233, 235], "ommit": [228, 232, 233, 235, 350], "inferec": 229, "set_tensor_kei": 229, "dt_inference_wrapp": 229, "baz": 229, "inference_context": 229, "obs_dim": 229, "tanhdelta": [229, 334, 341], "dtactor": 229, "actor_modul": [229, 352], "dist_class": 229, "dist_kwarg": 229, "distribution_kwarg": [229, 236, 240, 343, 347], "inference_actor": 229, "sequence_length": 229, "mask_context": 229, "out_act": 229, "qvaluemodul": [230, 237, 278, 344], "distributionaldqnnet": 230, "make_log_softmax": 230, "my_action_valu": [231, 238], "chanc": 231, "thid": 231, "eps_init": [232, 233, 235, 342, 344], "eps_end": [232, 233, 235, 342], "explorative_polici": [232, 233, 235], "9055": [232, 233], "9277": [232, 233], "6295": [232, 233], "2532": [232, 233], "addbackward0": [232, 233], "lmheadmodel": 234, "actor_head": [234, 251, 264, 267], "base_model": 234, "lm_head": 234, "ornstein": 235, "uhlenbeck": 235, "ou": [235, 341], "correl": 235, "noise_t": 235, "noise_": 235, "theta": [235, 343, 348], "sigma_t": 235, "sigma_": 235, "anneal": 235, "ou_prev_nois": 235, "ou_step": 235, "x0": 235, "sigma_min": 235, "n_steps_ann": 235, "is_init_kei": 235, "_ou_prev_nois": 235, "_ou_step": 235, "default_interaction_typ": [236, 240], "interaction_typ": [236, 240], "set_interaction_typ": [236, 240], "cache_dist": [236, 240], "n_empirical_estim": [236, 240], "compound": 236, "compositedistribut": 236, "categ": 236, "distribution_map": 236, "chose": 238, "functionalmodul": 239, "functionalmodulewithbuff": 239, "td_fmodul": 239, "td_function": 239, "td_state": 239, "params_repeat": 239, "td_vmap": [239, 242], "random_sampl": [239, 240], "suppli": 240, "fist": 240, "log_prob_kei": [240, 347], "probabilistictensordictsequenti": [241, 249, 251, 264, 267, 269, 321, 322, 352], "partial_toler": [241, 242, 346], "who": [241, 242], "AND": [241, 242], "tensordictsequenci": 242, "tensordictsequ": 242, "safeprobabilisticmodul": [242, 336], "spec1": 242, "net1": 242, "module1": 242, "td_module1": 242, "spec2": 242, "module2": 242, "td_module2": 242, "clamp": [243, 260, 316, 348], "boundari": [243, 343, 347], "resolut": 243, "simplest": [243, 341, 343, 344, 347, 350, 353], "9944": 243, "9991": 243, "3020": 243, "2299": 243, "5418": 243, "2989": 243, "6849": 243, "3169": 243, "2690": 243, "9649": 243, "5686": 243, "8602": 243, "0315": 243, "8455": 243, "6027": 243, "4746": 243, "7843": 243, "7782": 243, "2111": 243, "5115": 243, "4687": 243, "5760": 243, "custommodul": 244, "cat": [244, 250, 252, 263, 268, 270, 272, 352], "imaginari": 245, "imagin": 245, "transition_model": 245, "get_reward_oper": 245, "get_transition_model_oper": 245, "min_val": [246, 248], "_bia": 246, "invert": [247, 343], "surject": 248, "expln": 248, "biased_softplu": [248, 334], "beggin": 248, "biased_softplus_": 248, "syntax": [248, 341], "met": [248, 348], "1602": 249, "01783v2": 249, "actor_network": [249, 250, 251, 252, 254, 256, 257, 263, 264, 266, 267, 268, 269, 270, 272, 341, 343, 347], "critic_network": [249, 251, 264, 267, 269, 343, 347], "entropy_bonu": [249, 251, 264, 267, 343], "favour": [249, 251, 264, 267], "samples_mc_entropi": [249, 251, 264, 266, 267], "mont": [249, 251, 264, 267, 341], "carlo": [249, 251, 264, 267, 341], "entropy_coef": [249, 251, 264, 267, 343, 347], "critic_coef": [249, 251, 264, 267, 343], "loss_critic_typ": [249, 251, 264, 267, 269, 343], "l1": [249, 251, 252, 253, 257, 264, 267, 268, 269, 272, 275, 278, 336, 341], "l2": [249, 251, 252, 253, 254, 255, 257, 260, 261, 264, 267, 268, 269, 272, 275, 278, 341], "smooth_l1": [249, 250, 251, 252, 253, 256, 257, 263, 264, 267, 268, 269, 270, 272, 275, 278, 343], "separate_loss": [249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272], "propag": [249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 280, 281, 282, 283, 343, 347], "advantage_kei": [249, 251, 264, 267, 269, 280, 281, 282, 283], "value_target_kei": [249, 251, 264, 267, 269, 280, 281, 282, 283, 343], "value_target": [249, 251, 264, 267, 269, 280, 281, 282, 283, 343, 347], "ddp": [249, 251, 264, 267, 269], "fsdp": [249, 251, 264, 267, 269], "loss_crit": [249, 267, 343, 347], "loss_entropi": [249, 267, 343, 347], "loss_object": [249, 267, 343, 347], "recur": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283, 284], "next_reward": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283], "next_don": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283], "next_termin": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283], "loss_obj": 249, "sacloss": [249, 262, 271, 334], "select_out_kei": [249, 250, 252, 256, 257, 263, 267, 268, 270, 272], "make_value_estim": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278, 337, 341, 342, 347], "value_typ": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 341], "hyperparam": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341], "enum": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 341], "default_value_estim": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341], "default_value_kwarg": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 334, 341], "dqn_loss": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278], "td1": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341], "conserv": [250, 255], "qvalue_network": [250, 256, 257, 263, 268, 270, 272], "loss_funct": [250, 252, 253, 254, 255, 256, 257, 263, 268, 270, 272, 275, 278, 341], "alpha_init": [250, 257, 266, 268, 270], "min_alpha": [250, 257, 266, 268, 270], "max_alpha": [250, 257, 266, 268, 270], "fixed_alpha": [250, 257, 266, 268, 270], "target_entropi": [250, 257, 266, 268, 270], "prod": [250, 266, 270], "n_action": [250, 253, 255, 266, 270], "delay_actor": [250, 252, 270, 272], "delay_qvalu": [250, 257, 268, 270, 272], "min_q_weight": 250, "max_q_backup": 250, "backup": 250, "deterministic_backup": 250, "num_random": 250, "with_lagrang": 250, "lagrang": 250, "lagrange_thresh": 250, "valueclass": [250, 252, 256, 257, 263, 268, 270, 272], "qvalu": [250, 256, 257, 263, 268, 270, 272, 325], "loss_actor": [250, 252, 256, 257, 263, 268, 269, 270, 272, 311, 341], "loss_alpha": [250, 257, 268, 270], "loss_alpha_prim": 250, "loss_qvalu": [250, 256, 257, 263, 268, 270, 272], "clip_epsilon": [251, 343, 347], "normalize_advantag": [251, 264, 267, 347], "value_kei": [251, 264, 267, 280, 281, 282, 283, 341], "somemodul": [251, 264, 267], "someactor": [251, 264, 267], "value_head": [251, 264, 267], "somevalu": [251, 264, 267], "loss_modul": [251, 262, 264, 265, 267, 271, 316, 327, 328, 337, 338, 341, 342, 343, 347, 350], "ppoloss": [251, 264, 334], "delay_valu": [252, 253, 255, 258, 269, 270, 278, 342, 344], "loss_valu": [252, 256, 263, 269, 270, 341, 343, 347], "pred_valu": [252, 272, 341], "pred_value_max": [252, 341], "target_valu": [252, 268, 272, 279, 337, 341], "target_value_max": [252, 341], "qvalueactor": [253, 255, 278, 336, 342, 344], "double_dqn": 253, "06461": [253, 262], "mult_one_hot": [253, 256, 257, 278], "loss_val": [253, 255, 337, 341, 343, 344, 347, 350], "01345": 254, "distanc": [255, 264, 275, 279, 280, 347], "loss_cql": 255, "dcql_loss": 255, "2110": [256, 263], "06169": [256, 263], "num_qvalue_net": [256, 257, 263, 268, 270, 272], "expectil": [256, 263], "tau": [256, 263, 271, 341, 342], "antmaz": [256, 263], "sticht": [256, 263], "onehotcategor": [256, 257, 334], "target_entropy_weight": 257, "disctount": 258, "distributionalqvalueactor": [258, 336], "input_tensordict": [258, 341], "actor_model": 259, "value_model": [259, 261], "model_based_env": 259, "dreamerenv": [259, 334], "imagination_horizon": 259, "unrol": [259, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297], "discount_loss": [259, 261], "lambda_kl": 260, "lambda_reco": 260, "lambda_reward": 260, "reco_loss": 260, "reward_loss": 260, "free_nat": 260, "nat": 260, "delayed_clamp": 260, "global_averag": 260, "value_loss": 261, "fake_data": 261, "ddpgloss": [262, 271, 328, 334, 341, 352], "td3loss": [262, 271, 334], "value_network_update_interv": 262, "loss_value_diff": 263, "diff": 263, "old_polici": 264, "new_polici": 264, "apart": [264, 347], "dtarg": 264, "samples_mc_kl": 264, "analyt": 264, "decrement": 264, "loss_": [265, 311, 337, 341], "equip": [265, 344], "gh": 265, "_acceptedkei": 265, "dataclass": [265, 325], "_forward_value_estimator_kei": 265, "alter": [265, 336], "value_estim": [265, 280, 281, 282, 283, 284, 337, 341, 347], "myloss": 265, "action2": 265, "convert_to_funct": [265, 341], "expand_dim": 265, "create_target_param": [265, 341], "compare_against": [265, 341], "_param": 265, "expans": 265, "resampl": 265, "_target_param": 265, "blend": 265, "proxim": [267, 343, 347], "optimis": [267, 312, 343, 347], "flavour": [267, 347, 352], "clipppoloss": [267, 334, 343, 347], "klpenppoloss": [267, 334], "regularis": 267, "06347": 267, "gae": [267, 334, 337, 341, 343, 347], "ppo_loss": 267, "tdlambda": [267, 274, 337, 341], "base_lay": 267, "randn_lik": 267, "samplelogprob": 267, "openreview": [268, 325], "ay8zfzm0tdd": [268, 325], "sub_sample_len": 268, "subsampl": [268, 307, 338], "action_log_prob_actor": 268, "state_action_value_actor": [268, 272], "connectionist": 269, "1992": 269, "doi": 269, "1007": 269, "bf00992696": 269, "actor_net": [269, 341, 343], "1801": 270, "01290": 270, "applic": [270, 278, 348], "1812": 270, "05905": 270, "redqloss": [271, 334], "math": 271, "theta_t": [271, 348], "theta_": [271, 348], "polyak": 271, "policy_nois": 272, "noise_clip": 272, "next_state_valu": [272, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 334], "td0": [273, 341], "strict_shap": 275, "view_a": 275, "qmixer": [278, 334], "local_valu": 278, "visibl": [278, 347], "dafault": 278, "acceptedkei": 278, "global_valu": 278, "penultim": 278, "local_value_network": 278, "mixer_network": 278, "value_modul": [278, 343, 352], "qnet": [278, 341], "next_val_kei": 279, "pred_next_v": 279, "usus": 279, "mse": 279, "q_valu": 279, "n_steps_to_next": 279, "value_next_st": 279, "1506": [280, 285, 293], "02438": [280, 285, 293], "exponenti": [280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 314], "average_ga": [280, 343], "skip_exist": [280, 281, 282, 283], "advang": 280, "gradient_mod": 280, "value_error": [280, 281, 282, 283, 284], "target_param": [280, 281, 282, 283, 284, 341, 347], "98": [280, 281, 282, 283], "94": [280, 283], "unpack": [280, 281, 282, 283], "tensor_kei": [280, 281, 282, 283, 284], "next_valu": [280, 281, 282, 283, 284], "aka": [281, 342], "average_reward": [281, 282, 283], "tdestim": [281, 282, 284], "infti": 282, "valuefunctionbas": 284, "time_dim": [285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297], "old_stat": [285, 287, 289, 291, 293, 294, 296], "new_stat": [285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "rolling_gamma": [289, 290, 291, 292, 294, 295, 296, 297], "g1": [289, 290, 291, 292, 294, 295, 296, 297], "g2": [289, 290, 291, 292, 294, 295, 296, 297], "g3": [289, 290, 291, 292, 294, 295, 296, 297], "g4": [289, 290, 291, 292, 294, 295, 296, 297], "v3": [289, 290, 291, 292, 294, 295, 296, 297], "out_file_bas": 298, "skip_reset": 298, "interv": [298, 299, 308, 318, 342, 348], "center_crop": 299, "make_grid": 299, "mp4": [299, 301], "csvlogger": [299, 334, 342], "csv": [299, 301, 303, 342], "wandb": [299, 303, 306, 352], "tensorboard": [299, 303, 305, 352], "exp_nam": [299, 300, 301, 304, 305, 306, 328, 342], "log_dir": [299, 300, 301, 303, 305, 306, 342], "cheetah_video": 299, "video_format": [299, 301], "run_video": 299, "run_video_0": 299, "templat": 300, "pt": [301, 338], "video_fp": 301, "minim": [301, 350], "dependeci": 301, "cur_dir": 301, "csv_log": 301, "video_": 301, "experiment_nam": [302, 303], "uuid": [302, 342, 353], "logger_typ": 303, "logger_nam": 303, "mlflow": [303, 304], "wandb_kwarg": 303, "mlflow_kwarg": 303, "tracking_uri": 304, "uri": 304, "datastor": 304, "tb_log": 305, "tensoarboard": 305, "td_log": 305, "save_dir": 306, "resum": 306, "reus": 306, "uncategor": 306, "sub_traj_len": 307, "min_sub_traj_len": 307, "register_op": [307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 338, 342], "process_optim_batch": [307, 313, 314, 338], "td_out": [307, 315], "_process_optim_batch_hook": [307, 338], "batch_subsampl": 307, "clear_cuda": 308, "pre_optim_step": [308, 338], "counter": [309, 338], "log_pbar": [309, 310, 312, 314, 338, 342], "progress": [309, 310, 312, 316, 338, 342, 344, 353], "count_fram": 309, "pre_steps_log": [309, 310, 338], "count_frames_log": 309, "lognam": 310, "r_train": 310, "log_reward": [310, 342], "loss_compon": 311, "appl": 311, "optimizer_hook": 311, "record_interv": [312, 341, 342], "record_fram": [312, 319, 341, 342], "policy_explor": [312, 328, 341, 342], "log_kei": [312, 342], "suffix": 312, "underestim": 312, "set_exploration_typ": [312, 334, 343, 344, 352], "r_evalu": [312, 341], "flatten_tensordict": [313, 342], "max_dim": 313, "rb_trainer": 313, "batch_process": [313, 314, 315, 338], "post_loss": [313, 338], "999": [314, 342], "jitter": 314, "finfo": 314, "default_dtyp": 314, "get_default_dtyp": 314, "reward_norm": 314, "update_reward_stat": 314, "normalize_reward": 314, "make_train": [315, 334], "_process_batch_hook": [315, 338], "select_kei": [315, 338], "versatil": 316, "optim_steps_per_batch": [316, 338, 342], "epoch": [316, 343, 347], "clip_grad_norm": 316, "clip_norm": 316, "progress_bar": 316, "save_trainer_interv": 316, "log_interv": [316, 342], "save_trainer_fil": [316, 338], "datacollectorbas": [318, 321, 322, 328, 334], "update_weights_interv": [318, 342], "update_weight": 318, "post_step": [318, 338], "cfg": [319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332], "dictconfig": [319, 320, 321, 322, 325, 326, 327, 328, 329, 332], "divid": [319, 336, 341, 347, 348], "unknowingli": 319, "annealing_fram": [319, 341], "init_env_step": [319, 320, 341], "proof_environ": [320, 325, 341], "sta": 320, "ot": 320, "actor_model_explor": [321, 322, 341], "make_env_kwarg": [321, 322], "targetnetupdat": [323, 324, 327, 328], "redqloss_deprec": 324, "actor_net_kwarg": 325, "qvalue_net_kwarg": 325, "observation_kei": 325, "parser_env_arg": 325, "parser_model_args_continu": 325, "hydra": 325, "config_stor": 325, "configstor": 325, "config_field": 325, "config_cl": 325, "redqmodelconfig": 325, "envconfig": 325, "make_dataclass": 325, "cls_name": 325, "cs": 325, "config_path": 325, "config_nam": 325, "replayargsconfig": 326, "target_net_updat": [328, 341, 342], "constitu": 328, "tensorboardlogg": [328, 334], "egreedywrapp": [328, 342, 344], "env_proof": 328, "obs_spec": 328, "net_valu": 328, "dir": [328, 338, 342], "gettempdir": 328, "argpars": [329, 332], "namespac": [329, 332], "parser": [329, 332], "transformed_env_constructor": [329, 334], "num_env_per_collector": [330, 331], "video_tag": 332, "norm_obs_onli": 332, "use_env_cr": 332, "custom_env_mak": 332, "custom_env": 332, "return_transformed_env": 332, "action_dim_gsd": 332, "state_dim_gsd": 332, "obs_norm_state_dict": 332, "wheter": 332, "maker": 332, "asyncdatacollector": 334, "distributedsyncdatacollector": 334, "submitit_delayed_launch": 334, "raycollector": 334, "rational": 334, "behind": 334, "footnot": 334, "d4rlexperiencereplai": 334, "gendgrlexperiencereplai": 334, "minariexperiencereplai": 334, "openmlexperiencereplai": 334, "openxexperiencereplai": 334, "vd4rlexperiencereplai": 334, "unboundeddiscretetensorspec": 334, "lazystackedtensorspec": 334, "lazystackedcompositespec": 334, "prompttensordicttoken": 334, "rolloutfrommodel": 334, "tokenizeddatasetload": 334, "create_infinite_iter": 334, "consolidate_spec": 334, "check_no_exclusive_kei": 334, "contains_lazy_spec": 334, "check_marl_group": 334, "tensordictrecord": 334, "videorecord": [334, 343], "get_available_librari": 334, "set_exploration_mod": 334, "make_composite_from_td": [334, 348], "terminated_or_trunc": 334, "braxwrapp": 334, "dmcontrolwrapp": 334, "jumanjienv": 334, "jumanjiwrapp": 334, "mogymenv": 334, "mogymwrapp": 334, "multithreadedenvwrapp": 334, "openmlenv": 334, "pettingzooenv": 334, "robohiveenv": 334, "smacv2env": 334, "smacv2wrapp": 334, "vmaswrapp": 334, "qvaluehook": 334, "distributionalqvaluehook": 334, "reset_nois": 334, "cemplann": 334, "mpcplannerbas": 334, "mppiplann": 334, "independentnorm": 334, "truncatednorm": 334, "maskedonehotcategor": 334, "inv_softplu": 334, "vmapmodul": 334, "distributionaldqnloss": [334, 342], "discretesacloss": 334, "iqlloss": 334, "discreteiqlloss": 334, "cqlloss": 334, "discretecqlloss": 334, "dtloss": 334, "onlinedtloss": 334, "a2closs": 334, "reinforceloss": 334, "dreameractorloss": 334, "dreamermodelloss": 334, "dreamervalueloss": 334, "td0estim": [334, 341], "td1estim": [334, 341], "td0_return_estim": 334, "td0_advantage_estim": 334, "td1_return_estim": 334, "vec_td1_return_estim": 334, "td1_advantage_estim": 334, "vec_td1_advantage_estim": 334, "td_lambda_return_estim": 334, "vec_td_lambda_return_estim": 334, "td_lambda_advantage_estim": 334, "vec_td_lambda_advantage_estim": 334, "generalized_advantage_estim": 334, "vec_generalized_advantage_estim": 334, "reward2go": 334, "distance_loss": [334, 341], "hold_out_net": 334, "hold_out_param": [334, 341], "softupd": [334, 341, 342, 344], "hardupd": [334, 341], "batchsubsampl": [334, 338], "clearcudacach": 334, "countframeslog": 334, "logreward": [334, 338, 342], "optimizerhook": [334, 342], "replaybuffertrain": [334, 338, 342], "rewardnorm": 334, "selectkei": [334, 338], "trainerhookbas": [334, 338, 342], "updateweight": [334, 338, 342], "make_collector_offpolici": 334, "make_collector_onpolici": 334, "make_dqn_loss": 334, "make_redq_loss": 334, "make_redq_model": 334, "make_replay_buff": [334, 341], "make_target_updat": 334, "parallel_env_constructor": [334, 341], "sync_async_collector": 334, "sync_sync_collector": 334, "correct_for_frame_skip": 334, "get_stats_random_rollout": 334, "mlflowlogg": 334, "wandblogg": 334, "get_logg": 334, "generate_exp_nam": 334, "journei": 335, "textbook": 335, "highlight": 335, "ever": [335, 347], "bump": 335, "think": [335, 343, 347, 353], "benefit": [335, 347, 350], "pr": 335, "ground": [336, 341, 348], "recycl": [336, 350], "impos": 336, "violat": 336, "noisier": 336, "Their": [336, 347], "sd": 336, "prob_modul": 336, "pick": [336, 341, 342], "tabl": [336, 342], "hopefulli": [336, 342], "functional_modul": 336, "make_funct": [336, 352], "mathbb": [336, 342], "rightarrow": [336, 342], "soften": 336, "backbon": [336, 344, 346, 352], "make_actor": 336, "make_valu": 336, "shared_param": 336, "make_common": 336, "reusabl": [337, 341, 350], "swappabl": [337, 341], "characterist": [337, 341, 348], "trainabl": [337, 341, 349], "whatev": [337, 341], "smth": [337, 341], "metric": [337, 341], "nutshel": [337, 341], "barto": [337, 347], "chapter": 337, "significantli": [337, 341, 342, 347], "next_stat": 337, "value_net_loss": 337, "pow": [337, 341], "therebi": 337, "room": 337, "signifi": [337, 347], "underperform": 337, "thin": 337, "intric": 337, "believ": 338, "scheme": [338, 353], "substenti": 338, "_pre_steps_log_hook": 338, "_pre_optim_hook": 338, "sub_batch": 338, "_post_loss_hook": 338, "_post_optim_hook": 338, "post_optim": [338, 342], "_post_optim_log": 338, "post_optim_log": 338, "_post_steps_hook": 338, "_post_steps_log_hook": 338, "post_steps_log": 338, "comment": [338, 342, 352], "reserv": 338, "logginghook": 338, "logging_hook": 338, "save_dict": 338, "some_valu": 338, "torchsnapshot": 338, "ckpt_backend": 338, "filepath": 338, "save_train": 338, "load_from_fil": 338, "54": [340, 351], "180": [340, 351], "galleri": [340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "mem": [340, 351], "mb": [340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353], "multiagent_ppo": [340, 347, 351], "51": [340, 347, 351], "072": [340, 347, 351], "140": [340, 347, 351, 352], "pretrained_model": [340, 349, 351], "313": [340, 342, 349, 351], "454": [340, 351], "coding_dqn": [340, 342, 351], "torchrl_env": [340, 351, 353], "311": [340, 343, 348, 351, 352, 353], "torchrl_demo": [340, 351, 352], "coding_ppo": [340, 343, 351], "dqn_with_rnn": [340, 344, 351], "456": [340, 351], "rb_tutori": [340, 350, 351], "309": [340, 341, 350, 351], "coding_ddpg": [340, 341, 351], "multi_task": [340, 346, 351], "308": [340, 346, 351], "author": [341, 342, 343, 344, 347, 348, 350], "vincent": [341, 342, 343, 344, 348, 350], "moen": [341, 342, 343, 344, 348, 350], "assembl": 341, "focus": 341, "straightforward": [341, 342, 350], "overview": [341, 343, 347, 352], "transpar": [341, 344], "understood": 341, "sota": [341, 342, 352], "illustr": [341, 342, 350], "traceback": [341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "68": 341, "get_start_method": [341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "assertionerror": [341, 342, 343, 344, 346, 348, 349, 350, 352, 353], "loss_dict": 341, "oblivi": [341, 343, 350], "elementari": 341, "didact": 341, "dilut": 341, "pessimist": [341, 342, 343], "target_actor_network_param": 341, "actor_in_kei": 341, "actor_crit": 341, "noth": [341, 343], "compromis": 341, "hp": 341, "hasattr": 341, "_value_estim": 341, "elif": [341, 342], "notimplementederror": 341, "unknown": 341, "_loss_actor": 341, "td_copi": 341, "actor_network_param": 341, "value_network_param": 341, "_loss_valu": 341, "pred_val": 341, "target_value_network_param": 341, "loss_funt": 341, "glue": 341, "_forward": 341, "ndimens": 341, "remaind": 341, "focu": [341, 342, 343], "env_librari": 341, "env_task": 341, "env_arg": 341, "friendli": 341, "torchr": 341, "rescal": 341, "presum": 341, "make_transformed_env": 341, "reward_sc": 341, "double_to_float_list": 341, "double_to_float_inv_list": 341, "marker": 341, "env_per_collector": 341, "transform_state_dict": 341, "make_t_env": 341, "cheat": 341, "10m": 341, "cautiou": 341, "magnitud": 341, "thousand": [341, 344], "get_env_stat": 341, "proof_env": 341, "5000": 341, "maxim": [341, 348], "recal": [341, 343], "ddpgmlpactor": 341, "ddpgmlpqnet": 341, "materi": 341, "ornsteinuhlenbeckprocesswrapp": 341, "make_ddpg_actor": 341, "q_net": 341, "moduless": 341, "sugges": 341, "tight": 341, "10_000": [341, 343, 350], "traj_len": [341, 344], "make_record": 341, "recorder_obj": 341, "flavor": 341, "circular": 341, "buffer_s": [341, 342], "random_crop_len": 341, "prb": 341, "buffer_scratch_dir": 341, "temporari": 341, "dirrectori": 341, "trajecotri": 341, "25": [341, 346], "sampel": 341, "dataflow": 341, "ceil_div": 341, "utd": [341, 344], "update_to_data": 341, "realiz": 341, "_must_": 341, "001": [341, 348], "outdat": 341, "trick": [341, 342], "despit": 341, "adam": [341, 342, 343, 344, 347, 348], "optimizer_actor": 341, "lr": [341, 342, 343, 344, 347, 348], "weight_decai": [341, 342], "optimizer_valu": 341, "total_collection_step": 341, "pretti": [341, 350], "rewards_ev": 341, "collected_fram": 341, "pbar": [341, 343, 344, 347, 348], "r0": 341, "numel": [341, 343, 344, 349, 350], "current_fram": 341, "sampled_tensordict": 341, "gn1": 341, "clip_grad_norm_": [341, 343, 347, 348], "gn2": 341, "gn": [341, 348], "td_record": 341, "rn": 341, "set_descript": [341, 343, 344, 347, 348], "2f": 341, "plot": [341, 343, 344, 347, 348], "mention": [341, 344, 350, 353], "matplotlib": [341, 343, 344, 347, 348, 350, 353], "pyplot": [341, 343, 344, 347, 348, 350, 353], "plt": [341, 343, 344, 347, 348, 350, 353], "zip": [341, 345], "legend": 341, "xlabel": [341, 344, 347, 348], "ylabel": [341, 347], "tight_layout": 341, "concret": [341, 343], "takeawai": [341, 342], "jupyt": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "ipynb": [341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353], "sphinx": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353], "customis": [342, 347], "road": 342, "aspect": 342, "highest": 342, "prerequisit": [342, 344], "familiar": [342, 347, 353], "lookup": 342, "amort": [342, 343], "cart": 342, "pole": 342, "un": 342, "actuat": 342, "frictionless": 342, "duelingcnndqnet": 342, "is_notebook": 342, "shell": 342, "get_ipython": 342, "__class__": 342, "zmqinteractiveshel": 342, "qtconsol": 342, "terminalinteractiveshel": 342, "ipython": [342, 347, 348], "nameerror": 342, "umbrella": 342, "misplac": 342, "misus": 342, "orchestr": 342, "five": [342, 343], "64x64": 342, "motion": [342, 348], "obs_norm_sd": 342, "simpler": 342, "get_norm_stat": 342, "test_env": 342, "make_model": 342, "dummy_env": 342, "output_s": [342, 344], "init_bia": 342, "actor_explor": 342, "eps_greedy_v": 342, "eps_greedy_val_env": 342, "get_replay_buff": 342, "n_optim": 342, "themselv": 342, "simplic": [342, 343, 349, 350], "get_collector": 342, "data_collector": 342, "bunch": 342, "power": 342, "ubiquit": 342, "get_loss_modul": 342, "target_updat": 342, "995": 342, "sensit": 342, "variat": 342, "2e": [342, 348], "wd": 342, "upd": 342, "harder": [342, 352], "5_000": 342, "500000": 342, "100000": 342, "005": 342, "mandatori": [342, 343, 347, 348], "fairer": 342, "budget": [342, 343], "dqn_exp_": 342, "uuid1": [342, 353], "registr": 342, "cumbersom": 342, "buffer_hook": 342, "weight_updat": 342, "aliv": 342, "total_reward": 342, "print_csv_files_in_fold": 342, "folder_path": 342, "csv_file": 342, "output_str": 342, "dirpath": 342, "endswith": 342, "strip": 342, "qvaluenetwork": 342, "worst": 342, "accuraci": 342, "fanci": 342, "talk": 343, "repetit": 343, "six": 343, "sophist": [343, 347], "invent": 343, "theta_k": 343, "pi_": 343, "exceed": 343, "discourag": [343, 348], "indispens": 343, "analyz": 343, "lingua": 343, "franca": 343, "defaultdict": [343, 348], "119": 343, "has_cuda": [343, 347, 353], "3e": [343, 344, 347], "max_grad_norm": [343, 347], "ourselv": [343, 353], "errat": 343, "hamper": [343, 350], "reactiv": 343, "xy": 343, "sub_batch_s": 343, "num_epoch": [343, 347], "entropy_ep": [343, 347], "generalist": 343, "interchang": [343, 349, 350], "charact": 343, "inverteddoublependulum": 343, "transmit": 343, "stai": 343, "supplementari": [343, 353], "told": 343, "confid": [343, 347], "ran": 343, "f_": 343, "mu_": 343, "difficulti": [343, 353], "d_ob": 343, "d_action": 343, "policy_modul": [343, 347], "That": 343, "said": 343, "briefli": [343, 347], "refil": [343, 347], "conveni": [343, 347, 348], "easiest": [343, 347], "mathemat": [343, 347], "tradeoff": [343, 347], "advantage_modul": 343, "lr_schedul": [343, 348], "cosineannealinglr": [343, 348], "eval_str": 343, "tensordict_data": [343, 347], "data_view": [343, 347], "subdata": [343, 347], "cum_reward_str": 343, "4f": [343, 344, 348], "stepcount_str": 343, "param_group": 343, "lr_str": 343, "eval_rollout": 343, "nice": 343, "cap": [343, 350], "figsiz": [343, 348], "subplot": [343, 348, 353], "titl": [343, 344, 347, 348], "bit": [343, 344, 347, 350], "83": 344, "84x84": 344, "accessori": 344, "stamp": 344, "assist": 344, "emb": 344, "n_cell": 344, "customiz": 344, "wouldn": 344, "make_tensordict_prim": 344, "qval": 344, "stoch_polici": 344, "opportun": 344, "uniniti": 344, "again": [344, 347, 349, 350, 353], "redund": 344, "strongli": 344, "sake": [344, 349, 350], "20_000": [344, 348], "longest": 344, "npai": 344, "action_spread": 344, "457": [344, 346], "tutorials_python": 345, "tutorials_jupyt": 345, "env1_obs_kei": 346, "observation_stand": 346, "env2_obs_kei": 346, "observation_walk": 346, "tdreset1": 346, "tdreset2": 346, "tdreset": 346, "policy_common": 346, "67": 346, "policy_stand": 346, "policy_walk": 346, "But": 346, "env1_mak": 346, "env2_mak": 346, "_single_task": 346, "td_rollout": 346, "matteo": 347, "bettini": 347, "benchmarl": 347, "maddpg": 347, "navig": 347, "lidar": 347, "sensor": 347, "collis": 347, "tie": 347, "mappo": 347, "ippo": 347, "phase": [347, 350], "mathbf": 347, "pi": [347, 348], "fed": [347, 350], "literatur": 347, "overcom": 347, "stationari": 347, "concurr": 347, "analys": 347, "gui": 347, "visualis": 347, "multiagentmlp": 347, "divic": 347, "vmas_devic": 347, "6_000": 347, "team": [347, 352], "n_iter": 347, "minibatch_s": 347, "generalis": 347, "simd": 347, "parallelis": 347, "warp": 347, "todai": 347, "circl": 347, "surround": 347, "dot": [347, 348], "collid": 347, "drag": 347, "elast": 347, "acceler": 347, "penalis": 347, "num_vmas_env": 347, "scenario_nam": 347, "four": [347, 348], "environmnet": 347, "60": [347, 352], "final_rew": 347, "agent_collis": 347, "stress": 347, "paramount": 347, "n_rollout_step": 347, "evolut": 347, "yourself": 347, "utilis": 347, "n_actions_per_ag": 347, "n_obs_per_ag": 347, "share_parameters_polici": 347, "policy_net": 347, "denot": 347, "carefulli": [347, 353], "grant": 347, "converg": 347, "cooper": 347, "share_parameters_crit": 347, "critic_net": 347, "fantast": 347, "minibatch": 347, "desc": 347, "episode_reward_mean": 347, "episode_reward_mean_list": 347, "get_item_shap": 347, "critic_network_param": 347, "target_critic_network_param": 347, "refresh": 347, "3641679584980011": 347, "4940122067928314": 347, "59": 347, "0384122133255005": 347, "4766207933425903": 347, "09": 347, "1231958866119385": 347, "57": 347, "2764601707458496": 347, "58": 347, "6702916622161865": 347, "70": 347, "61": 347, "791975259780884": 347, "69": 347, "7550878524780273": 347, "90": 347, "45": 347, "8176751136779785": 347, "xvfb": 347, "pyvirtualdisplai": 347, "1400": 347, "900": 347, "pil": 347, "rendering_callback": 347, "fromarrai": 347, "rgb_arrai": [347, 348], "gif": 347, "save_al": 347, "append_imag": 347, "profici": 347, "master": 347, "freeli": 348, "codebas": 348, "touch": 348, "undertaken": 348, "broader": 348, "wider": 348, "algebra": 348, "acquaint": 348, "avenu": 348, "_apply_to_composit": 348, "default_x": 348, "default_i": 348, "89": 348, "torqu": 348, "upward": 348, "angular": 348, "sin": 348, "rad": 348, "sec": 348, "gravit": 348, "angl": 348, "deleg": 348, "new_th": 348, "new_thdot": 348, "thdot": 348, "g_forc": 348, "max_torqu": 348, "angle_norm": 348, "max_spe": 348, "albeit": 348, "gen_param": 348, "high_th": 348, "high_thdot": 348, "low_th": 348, "low_thdot": 348, "rng": 348, "lazili": 348, "trivial": 348, "shortcut": [348, 353], "irrelev": 348, "_make_spec": 348, "td_param": 348, "pseudo": 348, "render_mod": 348, "render_fp": 348, "random_": 348, "_make_step": 348, "staticmethod": 348, "showcas": 348, "skeleton": 348, "_apply_transform": [348, 353], "_inv_apply_transform": [348, 353], "subset": [348, 349], "unitari": 348, "sine": 348, "cosin": 348, "sintransform": 348, "tensordict_reset": 348, "costransform": 348, "t_sin": 348, "t_co": 348, "cat_transform": 348, "simple_rollout": 348, "unexplor": 348, "recreat": 348, "init_td": 348, "traj_return": 348, "last_reward": 348, "is_ipython": 348, "inlin": 348, "get_backend": 348, "ion": 348, "gcf": 348, "clear_output": 348, "subject": 348, "saw": [348, 350], "explain": 349, "semat": 349, "r3mtransform": 349, "env_transform": [349, 353], "wiser": 349, "conclud": 349, "_storag": [349, 350], "455": 349, "supervis": [350, 353], "pull": 350, "temporarili": 350, "batteri": 350, "62": 350, "dataliststorag": 350, "datalazytensorstorag": 350, "tensordidct": 350, "datalazymemmapstorag": 350, "buffer_list": 350, "lowest": 350, "medium": 350, "buffer_lazytensor": 350, "buffer_lazymemmap": 350, "tempdir": 350, "fullest": 350, "convini": 350, "mydata": 350, "bri": 350, "background": 350, "question": [350, 352], "_i": 350, "artifici": 350, "she": 350, "augment": 350, "pars": 350, "proport": 350, "hist": 350, "revert": 350, "reappear": 350, "unfold": 350, "problemat": 350, "window": 350, "4th": 350, "demo": 352, "icml": 352, "vmoen": 352, "fb": 352, "invest": 352, "platform": 352, "media": 352, "predominantli": 352, "tensordict1": 352, "tensordict2": 352, "tensordict_sampl": 352, "_sampler": 352, "_sum_tre": 352, "modulenotfounderror": 352, "noopresetenv": [352, 353], "backbone_modul": 352, "params_expand": 352, "tensordict_exp": 352, "base_modul": 352, "roughli": 352, "tensordicts_prealloc": 352, "tensordicts_stack": 352, "tensordict_rollout": [352, 353], "disclaim": 352, "concatmodul": 352, "loss_td": 352, "year": 352, "roadmap": 352, "compris": 352, "contributor": 352, "curiou": 352, "nascent": 352, "unsupervis": 353, "rom": 353, "licens": 353, "pygam": 353, "unifi": 353, "_build_env": 353, "deserv": 353, "__episode__": 353, "__trajectory__": 353, "void": 353, "reproduct": 353, "tensordict_tprim": 353, "imshow": 353, "wrapper1": 353, "wrapper2": 353, "obviou": 353, "truth": 353, "env0": 353, "env_transformed_bi": 353, "stanc": 353, "transformeddistribut": 353, "base_dist": 353, "concat": 353, "mofidi": 353, "transformedenviron": 353, "moderet": 353, "computation": 353, "legitim": 353, "incom": 353, "amongst": 353, "wor": 353, "convention": 353, "markovian": 353, "constain": 353, "bar_": 353, "get_someth": 353, "aargh": 353, "foo_list": 353, "121": 353, "parallen": 353, "particularili": 353, "evolv": 353, "steadi": 353, "approx": 353, "_extra_st": 353, "observation_ssq": 353, "observation_sum": 353, "dispach": 353, "absor": 353}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [60, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "get"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "get"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_sampler"], [35, 1, 1, "", "set_storage"], [35, 1, 1, "", "set_writer"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "set_sampler"], [38, 1, 1, "", "set_storage"], [38, 1, 1, "", "set_writer"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "AtariDQNExperienceReplay"], [53, 0, 1, "", "D4RLExperienceReplay"], [54, 0, 1, "", "GenDGRLExperienceReplay"], [55, 0, 1, "", "MinariExperienceReplay"], [56, 0, 1, "", "OpenMLExperienceReplay"], [57, 0, 1, "", "OpenXExperienceReplay"], [58, 0, 1, "", "RobosetExperienceReplay"], [59, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"]], "torchrl.data.replay_buffers": [[61, 0, 1, "", "ImmutableDatasetWriter"], [62, 0, 1, "", "LazyMemmapStorage"], [63, 0, 1, "", "LazyTensorStorage"], [64, 0, 1, "", "ListStorage"], [65, 0, 1, "", "PrioritizedSampler"], [66, 0, 1, "", "RandomSampler"], [67, 0, 1, "", "ReplayBufferEnsemble"], [68, 0, 1, "", "RoundRobinWriter"], [69, 0, 1, "", "Sampler"], [70, 0, 1, "", "SamplerEnsemble"], [71, 0, 1, "", "SamplerWithoutReplacement"], [72, 0, 1, "", "SliceSampler"], [73, 0, 1, "", "SliceSamplerWithoutReplacement"], [74, 0, 1, "", "Storage"], [75, 0, 1, "", "StorageEnsemble"], [76, 0, 1, "", "TensorDictMaxValueWriter"], [77, 0, 1, "", "TensorDictRoundRobinWriter"], [78, 0, 1, "", "TensorStorage"], [79, 0, 1, "", "Writer"], [80, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[61, 1, 1, "", "add"], [61, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[68, 1, 1, "", "add"], [68, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[74, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[76, 1, 1, "", "add"], [76, 1, 1, "", "extend"], [76, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[78, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.envs": [[81, 2, 1, "", "BraxEnv"], [82, 2, 1, "", "BraxWrapper"], [83, 2, 1, "", "DMControlEnv"], [84, 2, 1, "", "DMControlWrapper"], [85, 0, 1, "", "EnvBase"], [86, 0, 1, "", "EnvCreator"], [87, 0, 1, "", "EnvMetaData"], [88, 2, 1, "", "GymEnv"], [89, 0, 1, "", "GymLikeEnv"], [90, 2, 1, "", "GymWrapper"], [91, 2, 1, "", "HabitatEnv"], [92, 2, 1, "", "IsaacGymEnv"], [93, 2, 1, "", "IsaacGymWrapper"], [94, 2, 1, "", "JumanjiEnv"], [95, 2, 1, "", "JumanjiWrapper"], [96, 2, 1, "", "MOGymEnv"], [97, 2, 1, "", "MOGymWrapper"], [98, 2, 1, "", "MarlGroupMapType"], [99, 2, 1, "", "ModelBasedEnvBase"], [100, 2, 1, "", "MultiThreadedEnv"], [101, 2, 1, "", "MultiThreadedEnvWrapper"], [102, 2, 1, "", "OpenMLEnv"], [103, 0, 1, "", "ParallelEnv"], [104, 2, 1, "", "PettingZooEnv"], [105, 2, 1, "", "PettingZooWrapper"], [106, 2, 1, "", "RoboHiveEnv"], [107, 2, 1, "", "SMACv2Env"], [108, 2, 1, "", "SMACv2Wrapper"], [109, 0, 1, "", "SerialEnv"], [110, 2, 1, "", "VmasEnv"], [111, 2, 1, "", "VmasWrapper"], [112, 2, 1, "", "check_marl_grouping"], [113, 2, 1, "", "gym_backend"], [99, 1, 1, "", "rand_step"], [99, 1, 1, "", "reset"], [99, 1, 1, "", "rollout"], [115, 2, 1, "", "set_gym_backend"], [99, 1, 1, "", "set_seed"], [99, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[85, 3, 1, "", "action_key"], [85, 3, 1, "", "action_keys"], [85, 3, 1, "", "action_spec"], [85, 1, 1, "", "add_module"], [85, 1, 1, "", "apply"], [85, 3, 1, "", "batch_locked"], [85, 1, 1, "", "bfloat16"], [85, 1, 1, "", "buffers"], [85, 1, 1, "", "children"], [85, 1, 1, "", "compile"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 3, 1, "", "done_key"], [85, 3, 1, "", "done_keys"], [85, 3, 1, "", "done_keys_groups"], [85, 3, 1, "", "done_spec"], [85, 1, 1, "", "double"], [85, 1, 1, "", "empty_cache"], [85, 1, 1, "", "eval"], [85, 1, 1, "", "extra_repr"], [85, 1, 1, "", "fake_tensordict"], [85, 1, 1, "", "float"], [85, 1, 1, "", "forward"], [85, 3, 1, "", "full_action_spec"], [85, 3, 1, "", "full_done_spec"], [85, 3, 1, "", "full_reward_spec"], [85, 3, 1, "", "full_state_spec"], [85, 1, 1, "", "get_buffer"], [85, 1, 1, "", "get_extra_state"], [85, 1, 1, "", "get_parameter"], [85, 1, 1, "", "get_submodule"], [85, 1, 1, "", "half"], [85, 3, 1, "", "input_spec"], [85, 1, 1, "", "ipu"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "modules"], [85, 1, 1, "", "named_buffers"], [85, 1, 1, "", "named_children"], [85, 1, 1, "", "named_modules"], [85, 1, 1, "", "named_parameters"], [85, 3, 1, "", "observation_spec"], [85, 3, 1, "", "output_spec"], [85, 1, 1, "", "parameters"], [85, 1, 1, "", "rand_action"], [85, 1, 1, "id0", "rand_step"], [85, 1, 1, "", "register_backward_hook"], [85, 1, 1, "", "register_buffer"], [85, 1, 1, "", "register_forward_hook"], [85, 1, 1, "", "register_forward_pre_hook"], [85, 1, 1, "", "register_full_backward_hook"], [85, 1, 1, "", "register_full_backward_pre_hook"], [85, 1, 1, "", "register_gym"], [85, 1, 1, "", "register_load_state_dict_post_hook"], [85, 1, 1, "", "register_module"], [85, 1, 1, "", "register_parameter"], [85, 1, 1, "", "register_state_dict_pre_hook"], [85, 1, 1, "", "requires_grad_"], [85, 1, 1, "id1", "reset"], [85, 3, 1, "", "reset_keys"], [85, 3, 1, "", "reward_key"], [85, 3, 1, "", "reward_keys"], [85, 3, 1, "", "reward_spec"], [85, 1, 1, "id2", "rollout"], [85, 1, 1, "", "set_extra_state"], [85, 1, 1, "id3", "set_seed"], [85, 1, 1, "", "share_memory"], [85, 3, 1, "", "specs"], [85, 1, 1, "", "state_dict"], [85, 3, 1, "", "state_spec"], [85, 1, 1, "id4", "step"], [85, 1, 1, "", "step_and_maybe_reset"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_empty"], [85, 1, 1, "", "train"], [85, 1, 1, "", "type"], [85, 1, 1, "", "xpu"], [85, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[89, 3, 1, "", "action_key"], [89, 3, 1, "", "action_keys"], [89, 3, 1, "", "action_spec"], [89, 1, 1, "", "add_module"], [89, 1, 1, "", "apply"], [89, 1, 1, "", "auto_register_info_dict"], [89, 3, 1, "", "batch_locked"], [89, 1, 1, "", "bfloat16"], [89, 1, 1, "", "buffers"], [89, 1, 1, "", "children"], [89, 1, 1, "", "close"], [89, 1, 1, "", "compile"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 3, 1, "", "done_key"], [89, 3, 1, "", "done_keys"], [89, 3, 1, "", "done_keys_groups"], [89, 3, 1, "", "done_spec"], [89, 1, 1, "", "double"], [89, 1, 1, "", "empty_cache"], [89, 1, 1, "", "eval"], [89, 1, 1, "", "extra_repr"], [89, 1, 1, "", "fake_tensordict"], [89, 1, 1, "", "float"], [89, 1, 1, "", "forward"], [89, 3, 1, "", "full_action_spec"], [89, 3, 1, "", "full_done_spec"], [89, 3, 1, "", "full_reward_spec"], [89, 3, 1, "", "full_state_spec"], [89, 1, 1, "", "get_buffer"], [89, 1, 1, "", "get_extra_state"], [89, 1, 1, "", "get_parameter"], [89, 1, 1, "", "get_submodule"], [89, 1, 1, "", "half"], [89, 3, 1, "", "input_spec"], [89, 1, 1, "", "ipu"], [89, 1, 1, "", "load_state_dict"], [89, 1, 1, "", "modules"], [89, 1, 1, "", "named_buffers"], [89, 1, 1, "", "named_children"], [89, 1, 1, "", "named_modules"], [89, 1, 1, "", "named_parameters"], [89, 3, 1, "", "observation_spec"], [89, 3, 1, "", "output_spec"], [89, 1, 1, "", "parameters"], [89, 1, 1, "", "rand_action"], [89, 1, 1, "", "rand_step"], [89, 1, 1, "", "read_action"], [89, 1, 1, "", "read_done"], [89, 1, 1, "", "read_obs"], [89, 1, 1, "", "read_reward"], [89, 1, 1, "", "register_backward_hook"], [89, 1, 1, "", "register_buffer"], [89, 1, 1, "", "register_forward_hook"], [89, 1, 1, "", "register_forward_pre_hook"], [89, 1, 1, "", "register_full_backward_hook"], [89, 1, 1, "", "register_full_backward_pre_hook"], [89, 1, 1, "", "register_gym"], [89, 1, 1, "", "register_load_state_dict_post_hook"], [89, 1, 1, "", "register_module"], [89, 1, 1, "", "register_parameter"], [89, 1, 1, "", "register_state_dict_pre_hook"], [89, 1, 1, "", "requires_grad_"], [89, 1, 1, "", "reset"], [89, 3, 1, "", "reset_keys"], [89, 3, 1, "", "reward_key"], [89, 3, 1, "", "reward_keys"], [89, 3, 1, "", "reward_spec"], [89, 1, 1, "", "rollout"], [89, 1, 1, "", "set_extra_state"], [89, 1, 1, "", "set_info_dict_reader"], [89, 1, 1, "", "set_seed"], [89, 1, 1, "", "share_memory"], [89, 3, 1, "", "specs"], [89, 1, 1, "", "state_dict"], [89, 3, 1, "", "state_spec"], [89, 1, 1, "", "step"], [89, 1, 1, "", "step_and_maybe_reset"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_empty"], [89, 1, 1, "", "train"], [89, 1, 1, "", "type"], [89, 1, 1, "", "xpu"], [89, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "", "set_seed"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "update_kwargs"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[109, 3, 1, "", "action_key"], [109, 3, 1, "", "action_keys"], [109, 3, 1, "", "action_spec"], [109, 1, 1, "", "add_module"], [109, 1, 1, "", "apply"], [109, 3, 1, "", "batch_locked"], [109, 1, 1, "", "bfloat16"], [109, 1, 1, "", "buffers"], [109, 1, 1, "", "children"], [109, 1, 1, "", "compile"], [109, 1, 1, "", "cpu"], [109, 1, 1, "", "cuda"], [109, 3, 1, "", "done_key"], [109, 3, 1, "", "done_keys"], [109, 3, 1, "", "done_keys_groups"], [109, 3, 1, "", "done_spec"], [109, 1, 1, "", "double"], [109, 1, 1, "", "empty_cache"], [109, 1, 1, "", "eval"], [109, 1, 1, "", "extra_repr"], [109, 1, 1, "", "fake_tensordict"], [109, 1, 1, "", "float"], [109, 1, 1, "", "forward"], [109, 3, 1, "", "full_action_spec"], [109, 3, 1, "", "full_done_spec"], [109, 3, 1, "", "full_reward_spec"], [109, 3, 1, "", "full_state_spec"], [109, 1, 1, "", "get_buffer"], [109, 1, 1, "", "get_extra_state"], [109, 1, 1, "", "get_parameter"], [109, 1, 1, "", "get_submodule"], [109, 1, 1, "", "half"], [109, 3, 1, "", "input_spec"], [109, 1, 1, "", "ipu"], [109, 1, 1, "", "load_state_dict"], [109, 1, 1, "", "modules"], [109, 1, 1, "", "named_buffers"], [109, 1, 1, "", "named_children"], [109, 1, 1, "", "named_modules"], [109, 1, 1, "", "named_parameters"], [109, 3, 1, "", "observation_spec"], [109, 3, 1, "", "output_spec"], [109, 1, 1, "", "parameters"], [109, 1, 1, "", "rand_action"], [109, 1, 1, "", "rand_step"], [109, 1, 1, "", "register_backward_hook"], [109, 1, 1, "", "register_buffer"], [109, 1, 1, "", "register_forward_hook"], [109, 1, 1, "", "register_forward_pre_hook"], [109, 1, 1, "", "register_full_backward_hook"], [109, 1, 1, "", "register_full_backward_pre_hook"], [109, 1, 1, "", "register_gym"], [109, 1, 1, "", "register_load_state_dict_post_hook"], [109, 1, 1, "", "register_module"], [109, 1, 1, "", "register_parameter"], [109, 1, 1, "", "register_state_dict_pre_hook"], [109, 1, 1, "", "requires_grad_"], [109, 1, 1, "", "reset"], [109, 3, 1, "", "reset_keys"], [109, 3, 1, "", "reward_key"], [109, 3, 1, "", "reward_keys"], [109, 3, 1, "", "reward_spec"], [109, 1, 1, "", "rollout"], [109, 1, 1, "", "set_extra_state"], [109, 1, 1, "", "set_seed"], [109, 1, 1, "", "share_memory"], [109, 3, 1, "", "specs"], [109, 1, 1, "", "state_dict"], [109, 3, 1, "", "state_spec"], [109, 1, 1, "", "step"], [109, 1, 1, "", "step_and_maybe_reset"], [109, 1, 1, "", "to"], [109, 1, 1, "", "to_empty"], [109, 1, 1, "", "train"], [109, 1, 1, "", "type"], [109, 1, 1, "", "update_kwargs"], [109, 1, 1, "", "xpu"], [109, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[114, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[116, 0, 1, "", "ActionMask"], [117, 0, 1, "", "BinarizeReward"], [118, 0, 1, "", "BurnInTransform"], [119, 0, 1, "", "CatFrames"], [120, 0, 1, "", "CatTensors"], [121, 0, 1, "", "CenterCrop"], [122, 0, 1, "", "ClipTransform"], [123, 0, 1, "", "Compose"], [124, 0, 1, "", "DTypeCastTransform"], [125, 0, 1, "", "DeviceCastTransform"], [126, 0, 1, "", "DiscreteActionProjection"], [127, 0, 1, "", "DoubleToFloat"], [128, 0, 1, "", "EndOfLifeTransform"], [129, 0, 1, "", "ExcludeTransform"], [130, 0, 1, "", "FiniteTensorDictCheck"], [131, 0, 1, "", "FlattenObservation"], [132, 0, 1, "", "FrameSkipTransform"], [133, 0, 1, "", "GrayScale"], [134, 0, 1, "", "InitTracker"], [135, 0, 1, "", "KLRewardTransform"], [136, 0, 1, "", "NoopResetEnv"], [137, 0, 1, "", "ObservationNorm"], [138, 0, 1, "", "ObservationTransform"], [139, 0, 1, "", "PermuteTransform"], [140, 0, 1, "", "PinMemoryTransform"], [141, 0, 1, "", "R3MTransform"], [142, 0, 1, "", "RandomCropTensorDict"], [143, 0, 1, "", "RemoveEmptySpecs"], [144, 0, 1, "", "RenameTransform"], [145, 0, 1, "", "Resize"], [146, 0, 1, "", "Reward2GoTransform"], [147, 0, 1, "", "RewardClipping"], [148, 0, 1, "", "RewardScaling"], [149, 0, 1, "", "RewardSum"], [150, 0, 1, "", "SelectTransform"], [151, 0, 1, "", "SignTransform"], [152, 0, 1, "", "SqueezeTransform"], [153, 0, 1, "", "StepCounter"], [154, 0, 1, "", "TargetReturn"], [155, 0, 1, "", "TensorDictPrimer"], [156, 0, 1, "", "TimeMaxPool"], [157, 0, 1, "", "ToTensorImage"], [158, 0, 1, "", "Transform"], [159, 0, 1, "", "TransformedEnv"], [160, 0, 1, "", "UnsqueezeTransform"], [161, 0, 1, "", "VC1Transform"], [162, 0, 1, "", "VIPRewardTransform"], [163, 0, 1, "", "VIPTransform"], [164, 0, 1, "", "VecGymEnvTransform"], [165, 0, 1, "", "VecNorm"], [166, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[116, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[117, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[118, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[122, 1, 1, "", "transform_observation_spec"], [122, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "to"], [123, 1, 1, "", "transform_env_device"], [123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_observation_spec"], [123, 1, 1, "", "transform_output_spec"], [123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"], [124, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_done_spec"], [125, 1, 1, "", "transform_env_device"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"], [125, 1, 1, "", "transform_output_spec"], [125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[126, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "register_keys"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[130, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[132, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[133, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[137, 1, 1, "", "init_stats"], [137, 1, 1, "", "transform_input_spec"], [137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[141, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_input_spec"], [144, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[146, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[147, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[151, 1, 1, "", "transform_observation_spec"], [151, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_observation_spec"], [153, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "to"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[158, 3, 1, "", "container"], [158, 1, 1, "", "forward"], [158, 3, 1, "", "parent"], [158, 1, 1, "", "to"], [158, 1, 1, "", "transform_done_spec"], [158, 1, 1, "", "transform_env_device"], [158, 1, 1, "", "transform_input_spec"], [158, 1, 1, "", "transform_observation_spec"], [158, 1, 1, "", "transform_output_spec"], [158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[159, 3, 1, "", "batch_locked"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 3, 1, "", "input_spec"], [159, 1, 1, "", "load_state_dict"], [159, 3, 1, "", "output_spec"], [159, 1, 1, "", "set_missing_tolerance"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "state_dict"], [159, 1, 1, "", "to"], [159, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[160, 1, 1, "", "transform_input_spec"], [160, 1, 1, "", "transform_observation_spec"], [160, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "make_noload_model"], [161, 1, 1, "", "to"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[163, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[165, 1, 1, "", "build_td_for_shared_vecnorm"], [165, 1, 1, "", "forward"], [165, 1, 1, "", "get_extra_state"], [165, 1, 1, "", "set_extra_state"], [165, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[167, 2, 1, "", "check_env_specs"], [168, 2, 1, "", "exploration_mode"], [169, 2, 1, "", "exploration_type"], [170, 2, 1, "", "get_available_libraries"], [171, 2, 1, "", "make_composite_from_td"], [172, 2, 1, "", "set_exploration_mode"], [173, 2, 1, "", "set_exploration_type"], [174, 2, 1, "", "step_mdp"], [175, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[176, 0, 1, "", "CEMPlanner"], [177, 0, 1, "", "Conv3dNet"], [178, 0, 1, "", "ConvNet"], [179, 0, 1, "", "DTActor"], [180, 0, 1, "", "DdpgCnnActor"], [181, 0, 1, "", "DdpgCnnQNet"], [182, 0, 1, "", "DdpgMlpActor"], [183, 0, 1, "", "DdpgMlpQNet"], [184, 0, 1, "", "DecisionTransformer"], [185, 0, 1, "", "Delta"], [186, 0, 1, "", "DistributionalDQNnet"], [187, 0, 1, "", "DistributionalQValueHook"], [188, 0, 1, "", "DreamerActor"], [189, 0, 1, "", "DuelingCnnDQNet"], [190, 0, 1, "", "GRU"], [191, 0, 1, "", "GRUCell"], [192, 0, 1, "", "GRUModule"], [193, 0, 1, "", "IndependentNormal"], [194, 0, 1, "", "LSTM"], [195, 0, 1, "", "LSTMCell"], [196, 0, 1, "", "LSTMModule"], [197, 0, 1, "", "LSTMNet"], [198, 0, 1, "", "MLP"], [199, 0, 1, "", "MPCPlannerBase"], [200, 0, 1, "", "MPPIPlanner"], [201, 0, 1, "", "MaskedCategorical"], [202, 0, 1, "", "MaskedOneHotCategorical"], [203, 0, 1, "", "MultiAgentConvNet"], [204, 0, 1, "", "MultiAgentMLP"], [205, 0, 1, "", "NoisyLazyLinear"], [206, 0, 1, "", "NoisyLinear"], [207, 0, 1, "", "NormalParamWrapper"], [208, 0, 1, "", "ObsDecoder"], [209, 0, 1, "", "ObsEncoder"], [210, 0, 1, "", "OneHotCategorical"], [211, 0, 1, "", "OnlineDTActor"], [212, 0, 1, "", "QMixer"], [213, 0, 1, "", "QValueHook"], [214, 0, 1, "", "RSSMPosterior"], [215, 0, 1, "", "RSSMPrior"], [216, 0, 1, "", "Squeeze2dLayer"], [217, 0, 1, "", "SqueezeLayer"], [218, 0, 1, "", "TanhDelta"], [219, 0, 1, "", "TanhNormal"], [220, 0, 1, "", "TruncatedNormal"], [221, 0, 1, "", "VDNMixer"], [222, 0, 1, "", "VmapModule"], [223, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[176, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[177, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[178, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[179, 1, 1, "", "default_config"], [179, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[180, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[181, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[182, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[183, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[184, 0, 1, "", "DTConfig"], [184, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[185, 1, 1, "", "log_prob"], [185, 3, 1, "", "mean"], [185, 3, 1, "", "mode"], [185, 1, 1, "", "rsample"], [185, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[186, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[188, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[189, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[190, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[191, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[192, 1, 1, "", "forward"], [192, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[193, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[194, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[195, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[196, 1, 1, "", "forward"], [196, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[197, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[198, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[200, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[201, 1, 1, "", "log_prob"], [201, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[202, 1, 1, "", "log_prob"], [202, 1, 1, "", "rsample"], [202, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[203, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[204, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[205, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[207, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[208, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[209, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[210, 1, 1, "", "log_prob"], [210, 3, 1, "", "mode"], [210, 1, 1, "", "rsample"], [210, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[211, 1, 1, "", "default_config"], [211, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[212, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[214, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[215, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[217, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[218, 3, 1, "", "mean"], [218, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[219, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[220, 1, 1, "", "log_prob"], [220, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[221, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[222, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[224, 0, 1, "", "Actor"], [225, 0, 1, "", "ActorCriticOperator"], [226, 0, 1, "", "ActorCriticWrapper"], [227, 0, 1, "", "ActorValueOperator"], [228, 0, 1, "", "AdditiveGaussianWrapper"], [229, 0, 1, "", "DecisionTransformerInferenceWrapper"], [230, 0, 1, "", "DistributionalQValueActor"], [231, 0, 1, "", "DistributionalQValueModule"], [232, 0, 1, "", "EGreedyModule"], [233, 0, 1, "", "EGreedyWrapper"], [234, 0, 1, "", "LMHeadActorValueOperator"], [235, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [236, 0, 1, "", "ProbabilisticActor"], [237, 0, 1, "", "QValueActor"], [238, 0, 1, "", "QValueModule"], [239, 0, 1, "", "SafeModule"], [240, 0, 1, "", "SafeProbabilisticModule"], [241, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [242, 0, 1, "", "SafeSequential"], [243, 0, 1, "", "TanhModule"], [244, 0, 1, "", "ValueOperator"], [245, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[225, 1, 1, "", "get_critic_operator"], [225, 1, 1, "", "get_policy_head"], [225, 1, 1, "", "get_value_head"], [225, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[226, 1, 1, "", "get_policy_head"], [226, 1, 1, "", "get_policy_operator"], [226, 1, 1, "", "get_value_head"], [226, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[227, 1, 1, "", "get_policy_head"], [227, 1, 1, "", "get_policy_operator"], [227, 1, 1, "", "get_value_head"], [227, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "mask_context"], [229, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[231, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[238, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[239, 1, 1, "", "random"], [239, 1, 1, "", "random_sample"], [239, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[240, 1, 1, "", "random"], [240, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[243, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[245, 1, 1, "", "get_reward_operator"], [245, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[246, 0, 1, "", "biased_softplus"], [247, 0, 1, "", "inv_softplus"], [248, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[246, 1, 1, "", "forward"]], "torchrl.objectives": [[249, 0, 1, "", "A2CLoss"], [250, 0, 1, "", "CQLLoss"], [251, 0, 1, "", "ClipPPOLoss"], [252, 0, 1, "", "DDPGLoss"], [253, 0, 1, "", "DQNLoss"], [254, 0, 1, "", "DTLoss"], [255, 0, 1, "", "DiscreteCQLLoss"], [256, 0, 1, "", "DiscreteIQLLoss"], [257, 0, 1, "", "DiscreteSACLoss"], [258, 0, 1, "", "DistributionalDQNLoss"], [259, 0, 1, "", "DreamerActorLoss"], [260, 0, 1, "", "DreamerModelLoss"], [261, 0, 1, "", "DreamerValueLoss"], [262, 0, 1, "", "HardUpdate"], [263, 0, 1, "", "IQLLoss"], [264, 0, 1, "", "KLPENPPOLoss"], [265, 0, 1, "", "LossModule"], [266, 0, 1, "", "OnlineDTLoss"], [267, 0, 1, "", "PPOLoss"], [268, 0, 1, "", "REDQLoss"], [269, 0, 1, "", "ReinforceLoss"], [270, 0, 1, "", "SACLoss"], [271, 0, 1, "", "SoftUpdate"], [272, 0, 1, "", "TD3Loss"], [273, 0, 1, "", "ValueEstimators"], [274, 0, 1, "", "default_value_kwargs"], [275, 0, 1, "", "distance_loss"], [276, 0, 1, "", "hold_out_net"], [277, 0, 1, "", "hold_out_params"], [279, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[251, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[254, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[260, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[261, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "loss_value_diff"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[264, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[265, 1, 1, "", "convert_to_functional"], [265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"], [265, 1, 1, "", "named_parameters"], [265, 1, 1, "", "parameters"], [265, 1, 1, "", "set_keys"], [265, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[266, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "load_state_dict"], [270, 1, 1, "", "make_value_estimator"], [270, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[278, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[280, 0, 1, "", "GAE"], [281, 0, 1, "", "TD0Estimator"], [282, 0, 1, "", "TD1Estimator"], [283, 0, 1, "", "TDLambdaEstimator"], [284, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "set_keys"], [284, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[285, 0, 1, "", "generalized_advantage_estimate"], [286, 0, 1, "", "reward2go"], [287, 0, 1, "", "td0_advantage_estimate"], [288, 0, 1, "", "td0_return_estimate"], [289, 0, 1, "", "td1_advantage_estimate"], [290, 0, 1, "", "td1_return_estimate"], [291, 0, 1, "", "td_lambda_advantage_estimate"], [292, 0, 1, "", "td_lambda_return_estimate"], [293, 0, 1, "", "vec_generalized_advantage_estimate"], [294, 0, 1, "", "vec_td1_advantage_estimate"], [295, 0, 1, "", "vec_td1_return_estimate"], [296, 0, 1, "", "vec_td_lambda_advantage_estimate"], [297, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[298, 2, 1, "", "TensorDictRecorder"], [299, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[300, 2, 1, "", "Logger"], [302, 2, 1, "", "generate_exp_name"], [303, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[301, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[304, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[305, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[306, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[307, 0, 1, "", "BatchSubSampler"], [308, 0, 1, "", "ClearCudaCache"], [309, 0, 1, "", "CountFramesLog"], [310, 0, 1, "", "LogReward"], [311, 0, 1, "", "OptimizerHook"], [312, 0, 1, "", "Recorder"], [313, 0, 1, "", "ReplayBufferTrainer"], [314, 0, 1, "", "RewardNormalizer"], [315, 0, 1, "", "SelectKeys"], [316, 0, 1, "", "Trainer"], [317, 0, 1, "", "TrainerHookBase"], [318, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[307, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[308, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[309, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[310, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[311, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[312, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[313, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[314, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[315, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[317, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[318, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[319, 2, 1, "", "correct_for_frame_skip"], [320, 2, 1, "", "get_stats_random_rollout"], [321, 2, 1, "", "make_collector_offpolicy"], [322, 2, 1, "", "make_collector_onpolicy"], [323, 2, 1, "", "make_dqn_loss"], [324, 2, 1, "", "make_redq_loss"], [325, 2, 1, "", "make_redq_model"], [326, 2, 1, "", "make_replay_buffer"], [327, 2, 1, "", "make_target_updater"], [328, 2, 1, "", "make_trainer"], [329, 2, 1, "", "parallel_env_constructor"], [330, 2, 1, "", "sync_async_collector"], [331, 2, 1, "", "sync_sync_collector"], [332, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 336, 337, 338, 339, 341, 342, 343, 347, 348, 352, 353], "tutori": [0, 343, 347], "basic": [0, 350], "intermedi": [0, 8], "advanc": 0, "refer": [0, 334], "knowledg": [0, 335], "base": [0, 2, 7, 335], "indic": 0, "tabl": 0, "collector": [1, 341, 342, 343, 344, 347, 352], "packag": [1, 2, 3, 336, 337, 338, 339], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 341, 342, 343, 347, 352], "distribut": [1, 336], "helper": [1, 3], "function": [1, 4, 337, 342, 343, 347, 352], "replai": [2, 341, 342, 343, 344, 347, 350, 352], "buffer": [2, 341, 342, 343, 344, 347, 350, 352], "compos": [2, 123], "support": 2, "type": 2, "choos": 2, "storag": [2, 74, 341, 350], "sampl": 2, "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 342], "trajectori": 2, "checkpoint": [2, 338], "episod": [2, 4], "format": 2, "ted": 2, "The": [2, 341], "rational": 2, "behind": 2, "structur": 2, "dimension": [2, 4], "tensordict": [2, 336, 350, 352], "special": [2, 352], "case": 2, "footnot": 2, "multi": [2, 3, 336, 337, 346, 347], "agent": [2, 3, 4, 336, 337, 347], "present": 2, "memori": 2, "polici": [2, 4, 341, 343, 344, 346, 347, 348], "rnn": 2, "transform": [2, 3, 158, 341, 343, 347, 348, 350, 352, 353], "step": [2, 343, 347, 353], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 337, 343, 347], "learn": [2, 4, 343, 347], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 336, 337, 338], "env": [3, 348, 352, 353], "vector": [3, 352], "environ": [3, 4, 6, 7, 341, 342, 343, 344, 346, 347, 348, 352, 353], "clone": [3, 7], "mask": 3, "action": [3, 4, 344, 348], "record": [3, 312, 338, 341], "domain": [3, 336], "specif": [3, 336, 346], "librari": [3, 352], "thing": [4, 341, 348], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 352], "gener": [4, 336], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 341, 348], "algorithm": [4, 336], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 341, 342], "return": [4, 337], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 352], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 346], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 341, 342, 343], "standard": 4, "explor": [4, 336, 341, 342], "valu": [4, 336, 337, 341, 343, 344], "loss": [4, 341, 342, 343, 344, 347], "earli": 4, "train": [4, 8, 337, 341, 343, 344, 347, 348], "roughli": 4, "uniformli": 4, "random": [4, 347], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 342], "increas": 4, "an": [4, 343, 344, 348], "dynam": [4, 350], "can": 4, "low": 4, "forward": [4, 341], "model": [4, 336, 341, 342, 344, 349, 352], "also": 4, "us": [4, 6, 9, 344, 349, 350, 352], "offlin": 4, "observ": [4, 341], "space": 4, "effect": [4, 348], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 353], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 352], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 347, 353], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 341], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 348], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "ataridqnexperiencereplai": 52, "d4rlexperiencereplai": 53, "gendgrlexperiencereplai": 54, "minariexperiencereplai": 55, "openmlexperiencereplai": 56, "openxexperiencereplai": 57, "robosetexperiencereplai": 58, "vd4rlexperiencereplai": 59, "get_dataload": 60, "immutabledatasetwrit": 61, "lazymemmapstorag": 62, "lazytensorstorag": 63, "liststorag": 64, "prioritizedsampl": 65, "randomsampl": 66, "replaybufferensembl": 67, "roundrobinwrit": 68, "sampler": 69, "samplerensembl": 70, "samplerwithoutreplac": 71, "slicesampl": 72, "slicesamplerwithoutreplac": 73, "storageensembl": 75, "tensordictmaxvaluewrit": 76, "tensordictroundrobinwrit": 77, "tensorstorag": 78, "writer": 79, "writerensembl": 80, "braxenv": 81, "braxwrapp": 82, "dmcontrolenv": 83, "dmcontrolwrapp": 84, "envbas": [85, 348], "envcreat": 86, "envmetadata": 87, "gymenv": 88, "gymlikeenv": 89, "gymwrapp": 90, "habitatenv": 91, "isaacgymenv": 92, "isaacgymwrapp": 93, "jumanjienv": 94, "jumanjiwrapp": 95, "mogymenv": 96, "mogymwrapp": 97, "marlgroupmaptyp": 98, "modelbasedenvbas": 99, "multithreadedenv": 100, "multithreadedenvwrapp": 101, "openmlenv": 102, "parallelenv": 103, "pettingzooenv": 104, "pettingzoowrapp": 105, "robohiveenv": 106, "smacv2env": 107, "smacv2wrapp": 108, "serialenv": 109, "vmasenv": 110, "vmaswrapp": 111, "check_marl_group": 112, "gym_backend": 113, "dreamerenv": 114, "set_gym_backend": 115, "actionmask": 116, "binarizereward": 117, "burnintransform": 118, "catfram": [119, 350], "cattensor": 120, "centercrop": 121, "cliptransform": 122, "dtypecasttransform": 124, "devicecasttransform": 125, "discreteactionproject": 126, "doubletofloat": 127, "endoflifetransform": 128, "excludetransform": 129, "finitetensordictcheck": 130, "flattenobserv": 131, "frameskiptransform": 132, "grayscal": 133, "inittrack": 134, "klrewardtransform": 135, "noopresetenv": 136, "observationnorm": 137, "observationtransform": 138, "permutetransform": 139, "pinmemorytransform": 140, "r3mtransform": 141, "randomcroptensordict": 142, "removeemptyspec": 143, "renametransform": 144, "resiz": 145, "reward2gotransform": 146, "rewardclip": 147, "rewardsc": 148, "rewardsum": 149, "selecttransform": 150, "signtransform": 151, "squeezetransform": 152, "stepcount": 153, "targetreturn": 154, "tensordictprim": 155, "timemaxpool": 156, "totensorimag": 157, "transformedenv": 159, "unsqueezetransform": 160, "vc1transform": 161, "viprewardtransform": 162, "viptransform": 163, "vecgymenvtransform": 164, "vecnorm": [165, 353], "gsdenois": 166, "check_env_spec": 167, "exploration_mod": 168, "exploration_typ": 169, "get_available_librari": 170, "make_composite_from_td": 171, "set_exploration_mod": 172, "set_exploration_typ": 173, "step_mdp": 174, "terminated_or_trunc": 175, "cemplann": 176, "conv3dnet": 177, "convnet": 178, "dtactor": 179, "ddpgcnnactor": 180, "ddpgcnnqnet": 181, "ddpgmlpactor": 182, "ddpgmlpqnet": 183, "decisiontransform": 184, "delta": 185, "distributionaldqnnet": 186, "distributionalqvaluehook": 187, "dreameractor": 188, "duelingcnndqnet": 189, "gru": 190, "grucel": 191, "grumodul": 192, "independentnorm": 193, "lstm": [194, 344], "lstmcell": 195, "lstmmodul": 196, "lstmnet": 197, "mlp": [198, 344], "mpcplannerbas": 199, "mppiplann": 200, "maskedcategor": 201, "maskedonehotcategor": 202, "multiagentconvnet": 203, "multiagentmlp": 204, "noisylazylinear": 205, "noisylinear": 206, "normalparamwrapp": 207, "obsdecod": 208, "obsencod": 209, "onehotcategor": 210, "onlinedtactor": 211, "qmixer": [212, 337], "qvaluehook": 213, "rssmposterior": 214, "rssmprior": 215, "squeeze2dlay": 216, "squeezelay": 217, "tanhdelta": 218, "tanhnorm": 219, "truncatednorm": 220, "vdnmixer": 221, "vmapmodul": 222, "reset_nois": 223, "actor": [224, 336, 341], "actorcriticoper": 225, "actorcriticwrapp": 226, "actorvalueoper": 227, "additivegaussianwrapp": 228, "decisiontransformerinferencewrapp": 229, "distributionalqvalueactor": 230, "distributionalqvaluemodul": 231, "egreedymodul": 232, "egreedywrapp": 233, "lmheadactorvalueoper": 234, "ornsteinuhlenbeckprocesswrapp": 235, "probabilisticactor": 236, "qvalueactor": 237, "qvaluemodul": 238, "safemodul": [239, 336], "safeprobabilisticmodul": 240, "safeprobabilistictensordictsequenti": 241, "safesequenti": 242, "tanhmodul": 243, "valueoper": 244, "worldmodelwrapp": 245, "biased_softplu": 246, "inv_softplu": 247, "map": 248, "a2closs": 249, "cqlloss": 250, "clipppoloss": 251, "ddpgloss": 252, "dqnloss": 253, "dtloss": 254, "discretecqlloss": 255, "discreteiqlloss": 256, "discretesacloss": 257, "distributionaldqnloss": 258, "dreameractorloss": 259, "dreamermodelloss": 260, "dreamervalueloss": 261, "hardupd": 262, "iqlloss": 263, "klpenppoloss": 264, "lossmodul": [265, 341], "onlinedtloss": 266, "ppoloss": 267, "redqloss": 268, "reinforceloss": 269, "sacloss": 270, "softupd": 271, "td3loss": 272, "valueestim": 273, "default_value_kwarg": 274, "distance_loss": 275, "hold_out_net": 276, "hold_out_param": 277, "qmixerloss": 278, "next_state_valu": 279, "gae": 280, "td0estim": 281, "td1estim": 282, "tdlambdaestim": 283, "valueestimatorbas": 284, "generalized_advantage_estim": 285, "reward2go": 286, "td0_advantage_estim": 287, "td0_return_estim": 288, "td1_advantage_estim": 289, "td1_return_estim": 290, "td_lambda_advantage_estim": 291, "td_lambda_return_estim": 292, "vec_generalized_advantage_estim": 293, "vec_td1_advantage_estim": 294, "vec_td1_return_estim": 295, "vec_td_lambda_advantage_estim": 296, "vec_td_lambda_return_estim": 297, "tensordictrecord": 298, "videorecord": 299, "logger": [300, 338], "csvlogger": 301, "generate_exp_nam": 302, "get_logg": 303, "mlflowlogg": 304, "tensorboardlogg": 305, "wandblogg": 306, "batchsubsampl": 307, "clearcudacach": 308, "countframeslog": 309, "logreward": 310, "optimizerhook": 311, "replaybuffertrain": 313, "rewardnorm": 314, "selectkei": 315, "trainer": [316, 338, 342], "trainerhookbas": 317, "updateweight": 318, "correct_for_frame_skip": 319, "get_stats_random_rollout": 320, "make_collector_offpolici": 321, "make_collector_onpolici": 322, "make_dqn_loss": 323, "make_redq_loss": 324, "make_redq_model": 325, "make_replay_buff": 326, "make_target_updat": 327, "make_train": 328, "parallel_env_constructor": 329, "sync_async_collector": 330, "sync_sync_collector": 331, "transformed_env_constructor": 332, "readm": [333, 345], "tuto": [333, 345], "api": 334, "contribut": [335, 352], "content": 335, "modul": [336, 341, 344, 352], "wrapper": 336, "probabilist": 336, "q": [336, 342, 344], "oper": 336, "join": 336, "hook": [336, 338, 342], "regular": 336, "planner": 336, "object": [337, 341, 352], "dqn": [337, 342, 344], "ddpg": [337, 341], "sac": 337, "redq": 337, "iql": 337, "cql": 337, "dt": 337, "td3": 337, "ppo": [337, 343, 347], "a2c": 337, "dreamer": 337, "builder": 338, "_util": 339, "comput": [340, 342, 348, 351], "time": [340, 341, 351], "code": [341, 348], "setup": [341, 344], "__init__": 341, "method": 341, "estim": 341, "put": 341, "togeth": [341, 348], "call": 341, "parallel": [341, 346, 353], "execut": [341, 346, 348], "stat": 341, "build": [341, 342, 350], "evalu": 341, "batch": [341, 348, 350], "size": [341, 350], "construct": 341, "target": [341, 342], "network": [341, 342, 343, 344, 347], "updat": 341, "experi": [341, 348], "result": [341, 343, 347], "conclus": [341, 342, 343, 344, 347, 348, 350], "A": [342, 350], "exampl": [342, 350], "deep": 342, "collect": [342, 343], "paramet": [342, 343], "hyperparamet": [342, 343, 347], "regist": 342, "possibl": 342, "improv": 342, "defin": [343, 347], "loop": [343, 344, 347, 348], "next": [343, 347], "recurr": 344, "overview": 344, "convolut": 344, "select": 344, "further": 344, "read": 344, "divers": 346, "rollout": [346, 347, 348, 353], "critic": 347, "pendulum": 348, "write": 348, "_step": 348, "reset": [348, 353], "simul": 348, "_reset": 348, "metadata": 348, "_spec": 348, "spec": [348, 353], "shape": 348, "seed": [348, 353], "wrap": 348, "class": [348, 352], "test": 348, "our": 348, "custom": [348, 350], "simpl": 348, "pretrain": 349, "vanilla": 350, "integr": 350, "tensorclass": 350, "pytre": 350, "fix": 350, "iter": 350, "over": 350, "priorit": 350, "save": 350, "raw": 350, "imag": 350, "more": 350, "complex": 350, "introduct": 352, "config": 352, "tensordictmodul": 352, "sequenc": 352, "program": 352, "ensembl": 352, "meta": 352, "state": 352, "frame_skip": 353, "deepmind": 353, "control": 353, "devic": 353, "run": 353, "close": 353, "access": 353, "attribut": 353, "kwarg": 353}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})