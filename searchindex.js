Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.MeltingpotEnv", "reference/generated/torchrl.envs.MeltingpotWrapper", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.MeltingpotEnv.rst", "reference/generated/torchrl.envs.MeltingpotWrapper.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "MeltingpotEnv", "MeltingpotWrapper", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 71, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 102, 103, 105, 106, 107, 108, 109, 112, 115, 119, 121, 122, 124, 125, 127, 130, 132, 133, 136, 142, 143, 147, 148, 149, 150, 152, 160, 161, 162, 163, 164, 165, 167, 170, 171, 173, 174, 184, 185, 187, 188, 189, 190, 197, 199, 201, 203, 204, 205, 206, 210, 211, 212, 216, 223, 224, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 248, 249, 253, 256, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 307, 310, 314, 319, 320, 324, 325, 328, 337, 338, 339, 340, 343, 344, 345, 349, 350, 354, 355, 356, 357, 358, 360, 361, 363, 364, 366, 367], "open": [0, 5, 7, 11, 57, 350, 361, 366], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "reinforc": [0, 3, 9, 54, 100, 101, 125, 187, 188, 189, 190, 194, 238, 243, 257, 258, 262, 263, 264, 266, 270, 271, 277, 278, 279, 342, 348, 350, 353, 354, 359, 362, 365, 366], "learn": [0, 3, 7, 8, 9, 17, 31, 54, 55, 56, 58, 59, 100, 101, 105, 125, 187, 188, 189, 190, 194, 207, 213, 238, 243, 257, 258, 262, 263, 264, 266, 270, 271, 276, 277, 278, 279, 342, 344, 345, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 366, 367], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 51, 102, 160, 213, 231, 244, 252, 257, 259, 272, 273, 275, 277, 315, 341, 343, 344, 345, 346, 349, 350, 351, 356, 359, 361, 363, 364, 367], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 36, 42, 84, 85, 94, 103, 177, 342, 343, 344, 347, 349, 350, 351, 353, 354, 356, 361, 362, 367], "pytorch": [0, 1, 2, 3, 55, 113, 114, 163, 174, 197, 201, 212, 213, 324, 341, 343, 346, 349, 351, 352, 355, 359, 361, 362, 363, 364, 366, 367], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 42, 54, 86, 90, 94, 99, 100, 101, 106, 107, 108, 110, 111, 112, 113, 114, 118, 171, 173, 201, 314, 343, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 100, 101, 106, 107, 108, 110, 111, 112, 113, 114, 118, 119, 121, 122, 124, 125, 128, 129, 130, 132, 133, 134, 142, 143, 147, 148, 152, 155, 159, 160, 161, 164, 165, 167, 169, 171, 173, 174, 182, 183, 184, 185, 187, 197, 199, 200, 201, 203, 206, 207, 210, 211, 213, 214, 227, 229, 231, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 307, 314, 320, 333, 338, 339, 340, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "directli": [0, 3, 4, 8, 22, 51, 68, 82, 83, 86, 89, 90, 102, 106, 112, 152, 170, 273, 340, 344, 350, 351, 353, 361, 362, 364], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 122, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 140, 141, 143, 145, 147, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 178, 181, 182, 183, 184, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 214, 217, 218, 219, 220, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 280, 282, 286, 287, 288, 289, 290, 291, 294, 306, 307, 315, 321, 324, 327, 328, 333, 334, 336, 337, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367], "pypi": [0, 2, 366], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 86, 90, 93, 100, 101, 103, 106, 107, 108, 109, 112, 113, 114, 129, 147, 161, 163, 164, 165, 167, 169, 172, 173, 184, 185, 197, 200, 201, 205, 211, 212, 219, 227, 228, 232, 234, 247, 248, 307, 314, 321, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 364, 367], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 77, 86, 90, 93, 94, 100, 101, 106, 107, 108, 109, 112, 113, 114, 163, 167, 172, 173, 194, 201, 205, 212, 214, 231, 235, 237, 238, 247, 252, 257, 266, 273, 275, 288, 293, 301, 314, 319, 343, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 367], "about": [0, 3, 5, 7, 9, 17, 18, 19, 42, 55, 58, 59, 345, 349, 350, 351, 353, 354, 355, 356, 357, 358, 361, 362, 364, 366, 367], "instruct": [0, 6, 7, 10, 21, 53, 132, 134, 349, 350, 351, 352, 361, 364], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 106, 112, 232, 233, 234, 344, 349, 353, 355, 356, 358, 360, 361], "section": [0, 2, 3, 4, 197, 201, 350, 353, 358, 361], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 60, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 184, 185, 197, 200, 201, 205, 211, 227, 247, 321, 349, 350, 351, 352, 353, 362], "pip": [0, 10, 56, 353, 354, 355, 356, 357, 358, 361, 366, 367], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 34, 37, 40, 41, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 102, 103, 104, 106, 107, 108, 109, 112, 122, 124, 125, 126, 127, 128, 130, 133, 137, 142, 143, 145, 147, 148, 151, 152, 155, 156, 160, 161, 162, 165, 167, 169, 170, 171, 173, 182, 184, 185, 191, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 229, 231, 235, 238, 239, 240, 242, 243, 244, 245, 246, 251, 257, 258, 259, 260, 261, 263, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 315, 321, 328, 333, 336, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367], "python": [0, 3, 5, 6, 7, 10, 20, 104, 118, 197, 198, 199, 201, 202, 203, 208, 209, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 86, 90, 106, 112, 121, 122, 125, 126, 137, 143, 147, 148, 163, 165, 167, 185, 197, 199, 201, 203, 205, 210, 211, 212, 216, 231, 236, 237, 238, 244, 245, 247, 248, 259, 268, 272, 273, 275, 306, 307, 323, 344, 348, 349, 350, 351, 352, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367], "low": [0, 24, 86, 90, 106, 112, 128, 132, 178, 238, 244, 251, 349, 350, 351, 361, 362, 366, 367], "high": [0, 9, 24, 33, 35, 38, 40, 86, 90, 106, 112, 128, 132, 142, 178, 238, 244, 251, 288, 293, 301, 349, 350, 351, 361, 362, 364, 366, 367], "level": [0, 2, 3, 4, 21, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 125, 159, 272, 349, 350, 356, 366], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 43, 45, 46, 51, 52, 56, 80, 86, 144, 206, 292, 316, 325, 346, 351, 362, 366], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 71, 72, 74, 75, 76, 77, 79, 86, 87, 89, 90, 91, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 120, 121, 122, 124, 125, 128, 129, 130, 132, 133, 134, 136, 137, 141, 142, 145, 147, 152, 155, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 178, 181, 182, 183, 190, 192, 197, 198, 199, 201, 202, 203, 204, 206, 208, 209, 210, 213, 217, 219, 222, 236, 237, 239, 242, 243, 244, 245, 247, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 283, 286, 287, 288, 289, 290, 291, 292, 314, 321, 336, 340, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 44, 124, 132, 229, 273, 344, 366], "effici": [0, 1, 2, 4, 8, 197, 213, 344, 349, 350, 351, 352, 355, 356, 358, 360, 361, 363, 364, 366], "modular": [0, 51, 250, 364, 366], "document": [0, 2, 5, 7, 17, 18, 20, 31, 57, 86, 90, 106, 112, 165, 173, 341, 350, 352, 353, 356, 359, 366], "properli": [0, 1, 86, 90, 106, 112, 181, 351, 357, 361, 362, 366], "test": [0, 3, 5, 82, 83, 95, 96, 100, 101, 167, 174, 199, 203, 204, 320, 336, 351, 352, 366], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 103, 104, 106, 107, 108, 109, 112, 113, 114, 121, 122, 124, 125, 129, 130, 133, 134, 135, 143, 145, 147, 152, 154, 155, 156, 159, 160, 161, 164, 165, 167, 169, 170, 173, 174, 181, 182, 183, 187, 188, 189, 190, 191, 194, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 213, 214, 220, 221, 222, 231, 232, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 294, 307, 309, 312, 313, 314, 315, 319, 336, 338, 339, 342, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 366, 367], "code": [0, 3, 5, 7, 8, 57, 86, 90, 106, 112, 147, 165, 167, 197, 198, 199, 201, 202, 203, 250, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367], "aim": [0, 2, 3, 7, 27, 28, 147, 167, 169, 205, 327, 343, 344, 345, 349, 350, 366], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 56, 59, 60, 62, 63, 75, 76, 79, 81, 82, 83, 91, 95, 96, 103, 105, 106, 107, 109, 122, 125, 134, 143, 161, 162, 164, 177, 194, 229, 237, 238, 244, 247, 250, 266, 288, 289, 290, 291, 312, 342, 344, 346, 351, 352, 353, 354, 361, 362, 364, 366], "research": [0, 7, 9, 100, 101, 366], "most": [0, 1, 2, 3, 7, 8, 13, 14, 31, 73, 74, 86, 90, 106, 112, 132, 170, 174, 349, 351, 353, 354, 355, 356, 357, 358, 362, 364, 366, 367], "written": [0, 1, 3, 11, 33, 35, 38, 44, 53, 54, 57, 62, 66, 68, 73, 74, 84, 85, 86, 89, 90, 91, 92, 106, 109, 112, 125, 134, 141, 155, 159, 162, 170, 173, 181, 182, 231, 243, 244, 247, 248, 252, 257, 259, 272, 275, 277, 287, 306, 307, 344, 345, 346, 349, 352, 354, 360, 362, 366], "highli": [0, 2, 353, 366, 367], "wai": [0, 1, 2, 3, 4, 51, 55, 68, 77, 94, 147, 150, 169, 170, 201, 275, 288, 289, 290, 291, 344, 349, 350, 351, 353, 355, 356, 360, 361, 362, 363, 364, 366, 367], "easili": [0, 1, 2, 3, 7, 86, 90, 106, 112, 333, 345, 349, 350, 351, 353, 354, 355, 358, 361, 366, 367], "swap": [0, 1, 3, 89, 170, 351, 363, 366], "compon": [0, 1, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 194, 220, 237, 238, 246, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 319, 324, 349, 350, 351, 352, 354, 355, 358, 360, 361, 362, 363, 366], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 87, 90, 100, 101, 106, 107, 108, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 186, 187, 191, 194, 195, 218, 219, 220, 228, 236, 241, 242, 251, 254, 256, 262, 274, 307, 321, 333, 340, 342, 348, 350, 352, 354, 356, 357, 358, 359, 363, 365], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 81, 86, 87, 90, 94, 99, 100, 101, 106, 107, 108, 112, 113, 114, 130, 133, 165, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 228, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 272, 307, 349, 350, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367], "write": [0, 2, 3, 8, 22, 31, 33, 35, 36, 38, 44, 66, 68, 73, 76, 81, 86, 90, 128, 145, 146, 155, 157, 159, 163, 182, 231, 247, 248, 250, 252, 260, 261, 263, 264, 265, 271, 276, 278, 280, 287, 292, 307, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 90, 103, 106, 110, 111, 112, 122, 155, 164, 171, 173, 181, 182, 197, 199, 203, 243, 247, 248, 253, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 314, 349, 351, 352, 353, 355, 361, 362, 366, 367], "ones": [0, 2, 22, 25, 31, 34, 37, 40, 41, 86, 90, 106, 107, 108, 112, 126, 129, 130, 131, 133, 143, 147, 152, 161, 164, 165, 167, 169, 173, 208, 209, 229, 247, 257, 258, 260, 271, 275, 276, 278, 280, 294, 349, 351, 361, 362, 364, 366, 367], "littl": [0, 1, 3, 42, 86, 90, 106, 112, 165, 257, 259, 272, 275, 277, 351, 352, 356, 364, 366, 367], "effort": [0, 3, 362, 364, 366], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 112, 113, 114, 118, 119, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 143, 147, 148, 149, 150, 152, 155, 156, 157, 159, 161, 162, 164, 165, 167, 168, 169, 170, 171, 173, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 254, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 286, 288, 289, 290, 291, 292, 306, 314, 315, 317, 320, 321, 324, 326, 327, 328, 333, 336, 340, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "repo": [0, 6, 53, 125, 162, 167, 343, 361, 366], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 73, 74, 84, 85, 89, 91, 92, 109, 235, 240, 243, 261, 264, 271, 286, 355, 366], "align": [0, 197, 201, 366], "exist": [0, 2, 3, 4, 11, 17, 20, 31, 33, 35, 38, 44, 86, 90, 106, 112, 126, 131, 165, 173, 278, 328, 340, 361, 366, 367], "ecosystem": [0, 356, 366], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 45, 46, 51, 57, 62, 63, 68, 71, 73, 77, 79, 86, 87, 90, 94, 100, 101, 106, 112, 113, 114, 122, 125, 159, 160, 161, 162, 165, 173, 197, 199, 201, 203, 210, 235, 238, 240, 242, 243, 248, 272, 307, 349, 350, 351, 352, 353, 356, 357, 360, 361, 362, 363, 364, 366, 367], "dataset": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 71, 73, 74, 105, 171, 307, 342, 349, 350, 353, 363, 364, 366, 367], "pillar": [0, 366], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 124, 125, 126, 130, 131, 132, 133, 138, 142, 143, 147, 148, 149, 152, 155, 159, 160, 161, 162, 164, 165, 167, 170, 171, 174, 183, 199, 203, 204, 206, 207, 235, 242, 243, 263, 267, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 317, 320, 327, 328, 329, 330, 333, 336, 337, 338, 339, 340, 342, 343, 344, 348, 354, 355, 356, 357, 359, 363, 364, 365], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 44, 86, 90, 102, 106, 112, 130, 147, 161, 167, 169, 172, 173, 184, 185, 186, 191, 193, 199, 203, 205, 206, 207, 211, 218, 219, 228, 232, 233, 234, 241, 247, 253, 257, 258, 259, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 286, 324, 329, 330, 331, 332, 333, 342, 343, 346, 348, 351, 353, 356, 359, 361, 362, 364, 365, 367], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 112, 119, 122, 124, 125, 130, 131, 133, 135, 141, 143, 149, 152, 159, 165, 170, 173, 174, 178, 182, 183, 194, 199, 203, 204, 207, 210, 211, 220, 229, 231, 237, 239, 240, 242, 243, 244, 245, 247, 250, 251, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 307, 314, 315, 321, 324, 326, 329, 336, 338, 339, 340, 342, 344, 345, 346, 348, 352, 353, 354, 355, 359, 362, 363, 364, 365, 367], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 37, 39, 83, 86, 90, 95, 96, 101, 106, 107, 108, 112, 115, 125, 147, 152, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 191, 197, 201, 254, 255, 256, 273, 336, 342, 347, 349, 351, 354, 355, 356, 361, 362, 364, 366, 367], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 32, 33, 35, 38, 62, 63, 65, 66, 77, 79, 86, 87, 90, 106, 112, 113, 122, 124, 126, 129, 137, 143, 147, 155, 161, 164, 165, 167, 169, 173, 174, 197, 199, 200, 201, 203, 207, 211, 214, 220, 226, 227, 236, 238, 242, 244, 246, 247, 248, 278, 287, 288, 289, 290, 291, 315, 327, 339, 344, 350, 351, 354, 355, 357, 361, 363, 364, 366, 367], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 35, 38, 77, 86, 87, 90, 106, 112, 113, 122, 124, 126, 129, 137, 143, 147, 155, 161, 164, 165, 167, 169, 173, 174, 197, 199, 200, 201, 202, 203, 207, 211, 226, 227, 236, 244, 247, 248, 278, 287, 297, 298, 299, 300, 302, 303, 304, 305, 339, 344, 350, 351, 354, 357, 361, 362, 363, 364, 366, 367], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 39, 51, 57, 122, 125, 152, 159, 173, 243, 321, 324, 326, 329, 330, 336, 338, 339, 342, 346, 364, 367], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 73, 74, 75, 78, 80, 81, 86, 90, 102, 106, 112, 129, 130, 133, 147, 161, 164, 165, 167, 169, 170, 171, 173, 181, 182, 183, 184, 185, 197, 198, 201, 202, 205, 207, 211, 231, 237, 238, 244, 246, 247, 252, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 294, 311, 315, 327, 333, 336, 337, 338, 339, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 366, 367], "etc": [0, 2, 3, 7, 8, 11, 31, 45, 46, 57, 86, 90, 106, 112, 141, 165, 173, 205, 211, 350, 351, 356, 364, 366, 367], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 75, 86, 90, 106, 107, 108, 112, 121, 125, 130, 133, 134, 141, 142, 143, 159, 164, 165, 171, 173, 174, 182, 184, 185, 204, 205, 210, 211, 229, 242, 249, 250, 257, 259, 272, 275, 277, 283, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 324, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "few": [0, 2, 8, 90, 307, 315, 351, 352, 354, 361, 364, 366, 367], "depend": [0, 1, 2, 3, 4, 7, 8, 33, 35, 89, 91, 92, 109, 113, 114, 130, 133, 252, 275, 344, 349, 351, 352, 361, 362, 366, 367], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 32, 54, 57, 59, 77, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 184, 185, 197, 198, 201, 202, 247, 320, 324, 344, 349, 351, 352, 354, 356, 357, 361, 362, 364, 366, 367], "standard": [0, 3, 143, 154, 171, 183, 195, 207, 212, 213, 218, 235, 236, 280, 288, 289, 290, 291, 349, 350, 353, 354, 361, 364, 366], "numpi": [0, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 106, 112, 163, 324, 362, 364, 366, 367], "common": [0, 2, 3, 4, 90, 95, 119, 232, 233, 234, 241, 257, 258, 259, 264, 265, 271, 272, 275, 276, 277, 278, 280, 336, 343, 344, 346, 349, 351, 354, 357, 360, 361, 362, 363, 366, 367], "openai": [0, 7, 89, 91, 109, 351, 362, 366, 367], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 86, 87, 89, 90, 91, 92, 94, 100, 101, 103, 104, 106, 109, 112, 113, 114, 116, 118, 121, 125, 128, 134, 140, 141, 143, 145, 150, 152, 155, 161, 164, 170, 171, 173, 333, 336, 343, 349, 350, 351, 352, 353, 357, 358, 362, 363, 364, 366], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 84, 85, 86, 89, 90, 91, 92, 94, 103, 104, 106, 107, 108, 109, 112, 121, 125, 126, 128, 129, 130, 132, 133, 137, 143, 147, 148, 152, 159, 160, 161, 162, 164, 165, 167, 169, 171, 173, 201, 203, 204, 210, 211, 231, 236, 237, 244, 245, 247, 248, 249, 250, 257, 259, 260, 264, 265, 271, 272, 273, 275, 276, 277, 278, 279, 280, 288, 289, 290, 291, 292, 307, 314, 328, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 364, 366, 367], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 137, 138, 140, 141, 142, 143, 147, 148, 150, 151, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 227, 229, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 292, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 309, 312, 314, 315, 317, 318, 319, 320, 321, 322, 324, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 344, 352, 353, 356, 361, 362, 364, 366], "On": [0, 3, 7, 17, 18, 19, 20, 25, 54, 198, 202, 344, 350, 361], "end": [0, 2, 3, 13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 106, 112, 134, 145, 159, 160, 165, 173, 184, 185, 197, 198, 201, 202, 206, 242, 278, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "come": [0, 1, 2, 3, 8, 31, 77, 86, 90, 99, 106, 112, 130, 133, 231, 232, 233, 234, 244, 252, 257, 259, 272, 275, 277, 307, 349, 350, 351, 352, 355, 356, 357, 358, 361, 364, 366, 367], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 72, 75, 79, 86, 88, 90, 100, 101, 102, 106, 107, 108, 112, 113, 114, 118, 119, 121, 122, 125, 126, 129, 130, 133, 140, 141, 147, 152, 159, 160, 161, 162, 164, 165, 167, 169, 171, 173, 174, 179, 180, 182, 197, 199, 201, 203, 206, 210, 211, 235, 236, 247, 265, 273, 275, 278, 292, 315, 320, 321, 330, 340, 343, 344, 345, 347, 349, 350, 351, 352, 354, 355, 356, 360, 361, 362, 363, 364, 366, 367], "re": [0, 2, 3, 8, 31, 72, 86, 90, 106, 112, 173, 203, 208, 209, 244, 248, 314, 346, 349, 351, 352, 353, 355, 360, 362, 366, 367], "usabl": [0, 346, 352, 366], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 86, 87, 90, 106, 112, 118, 121, 122, 130, 133, 165, 171, 173, 174, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 214, 215, 216, 217, 218, 221, 222, 224, 227, 229, 232, 233, 234, 235, 236, 238, 239, 242, 243, 244, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 333, 336, 342, 344, 349, 352, 353, 354, 357, 360, 362, 364, 367], "cost": [0, 2, 26, 57, 257, 259, 272, 275, 277, 349, 350, 361, 362, 364], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 69, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 116, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 143, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 181, 182, 183, 186, 187, 188, 189, 190, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 217, 218, 219, 221, 222, 225, 226, 227, 228, 231, 232, 233, 234, 236, 242, 244, 246, 247, 248, 252, 253, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 283, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 311, 324, 327, 329, 333, 336, 337, 338, 339, 340, 342, 344, 346, 349, 350, 351, 352, 354, 355, 357, 360, 361, 362, 363, 364, 366, 367], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 42, 44, 51, 54, 58, 59, 65, 66, 73, 86, 87, 90, 94, 99, 103, 106, 107, 108, 112, 124, 130, 133, 163, 171, 173, 210, 211, 238, 243, 246, 342, 346, 349, 350, 352, 353, 361, 362, 363, 364, 366, 367], "good": [0, 1, 4, 9, 106, 349, 351, 352, 354, 361, 366, 367], "runtim": [0, 2, 3, 31, 86, 90, 106, 112, 173, 362], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 84, 85, 86, 89, 90, 91, 92, 106, 109, 112, 115, 130, 133, 142, 165, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 259, 268, 275, 278, 320, 324, 345, 349, 350, 351, 352, 353, 356, 358, 360, 361, 362, 367], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 76, 81, 82, 83, 86, 89, 90, 91, 95, 96, 99, 106, 107, 108, 109, 110, 111, 112, 113, 159, 171, 173, 232, 233, 234, 243, 265, 273, 307, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 366, 367], "read": [0, 2, 3, 7, 22, 36, 39, 57, 62, 63, 64, 65, 68, 75, 76, 79, 86, 89, 90, 91, 106, 112, 119, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 145, 146, 148, 149, 150, 152, 155, 156, 157, 159, 160, 161, 162, 164, 167, 168, 170, 171, 173, 182, 217, 231, 232, 233, 234, 237, 242, 244, 247, 248, 250, 252, 253, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 307, 320, 324, 333, 344, 349, 350, 351, 353, 354, 360, 361, 362, 363, 367], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 346, 349, 353, 356, 360, 363, 367], "beyond": 0, "api": [0, 2, 3, 5, 107, 108, 109, 147, 169, 345, 346, 353, 354, 355, 356, 357, 361, 362, 364, 366, 367], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 45, 46, 47, 49, 73, 86, 87, 90, 102, 106, 112, 115, 125, 126, 136, 141, 148, 163, 165, 173, 174, 199, 203, 231, 237, 238, 244, 245, 246, 247, 248, 307, 341, 344, 345, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367], "paper": [0, 54, 57, 82, 83, 84, 85, 92, 95, 96, 100, 101, 103, 104, 109, 113, 114, 147, 167, 169, 197, 219, 228, 263, 270, 333, 349, 351, 361], "releas": [0, 4, 7, 10, 31, 86, 90, 106, 112, 165, 173, 278, 366], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 326, 336, 346, 349, 366], "so": [0, 2, 3, 4, 6, 7, 10, 31, 33, 35, 38, 39, 86, 90, 100, 101, 106, 112, 161, 171, 173, 249, 250, 349, 351, 352, 355, 358, 361, 362, 367], "make": [0, 2, 3, 4, 7, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 75, 76, 81, 86, 90, 91, 94, 96, 98, 104, 106, 112, 135, 143, 147, 148, 152, 159, 167, 173, 174, 197, 198, 201, 202, 210, 211, 212, 237, 248, 257, 259, 272, 275, 277, 288, 289, 290, 291, 321, 330, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 357, 358, 360, 361, 362, 363, 364, 366, 367], "sure": [0, 3, 4, 7, 56, 75, 90, 94, 152, 237, 340, 344, 349, 351, 352, 355, 361, 362, 364, 366, 367], "alwai": [0, 2, 3, 13, 14, 19, 25, 27, 31, 51, 60, 86, 90, 106, 112, 141, 142, 173, 266, 273, 344, 345, 350, 351, 352, 361, 362, 364], "enjoi": [0, 2, 3, 57, 356], "latest": [0, 2, 3, 10, 103, 107, 108, 321, 351, 361, 362, 366], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 32, 44, 55, 66, 73, 74, 86, 90, 99, 106, 107, 108, 110, 111, 112, 122, 125, 137, 141, 145, 161, 162, 166, 171, 174, 184, 185, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 212, 213, 248, 257, 259, 272, 275, 277, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 340, 344, 349, 350, 351, 352, 354, 355, 356, 358, 362, 364, 367], "recent": [0, 7, 11, 170, 349, 364, 367], "version": [0, 1, 2, 3, 6, 11, 31, 33, 35, 39, 54, 59, 73, 86, 89, 90, 91, 92, 103, 104, 106, 107, 109, 112, 113, 114, 170, 173, 181, 234, 257, 259, 272, 273, 275, 277, 278, 288, 291, 343, 344, 349, 351, 352, 353, 355, 358, 361, 362, 363, 367], "although": [0, 1, 3, 8, 86, 90, 106, 112, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 346, 349, 350, 356, 364], "core": [0, 3, 8, 333, 346, 352, 354, 366], "guarante": [0, 2, 31, 33, 35, 38, 62, 63, 64, 75, 76, 79, 86, 90, 106, 112, 171, 173, 356, 366], "backward": [0, 8, 31, 82, 83, 86, 90, 106, 112, 171, 173, 197, 198, 201, 202, 257, 258, 260, 264, 265, 271, 275, 276, 277, 278, 280, 349, 351, 352, 355, 356, 358, 361, 362], "compat": [0, 2, 3, 7, 11, 13, 14, 31, 53, 68, 71, 73, 74, 75, 77, 86, 90, 92, 105, 106, 112, 125, 159, 167, 171, 173, 197, 198, 199, 201, 202, 203, 245, 257, 258, 260, 261, 263, 264, 265, 271, 273, 275, 276, 277, 278, 280, 283, 349, 352, 364, 366], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 141, 143, 145, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 173, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 254, 257, 258, 259, 260, 261, 263, 264, 265, 268, 271, 272, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 294, 296, 297, 298, 302, 303, 305, 307, 315, 320, 321, 322, 333, 336, 340, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367], "13": [0, 2, 5, 10, 11, 73, 74, 109, 170, 173, 348, 350, 351, 357, 361, 362, 364, 365], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 34, 37, 40, 41, 53, 55, 56, 57, 58, 59, 90, 106, 147, 164, 169, 262, 273, 345, 346, 349, 350, 351, 352, 354, 356, 364, 367], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 178, 181, 182, 183, 193, 194, 199, 203, 204, 206, 207, 219, 220, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 306, 315, 319, 320, 321, 323, 324, 333, 342, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 367], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 141, 149, 232, 233, 234, 247, 264, 271, 333, 342, 349, 362, 366], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 68, 86, 90, 106, 112, 118, 147, 169, 173, 207, 309, 314, 324, 346, 350, 358], "root": [0, 2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 106, 125, 162, 181, 200, 226, 227, 352, 353, 361, 362, 363, 364, 367], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 34, 42, 51, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 92, 94, 95, 96, 100, 101, 103, 104, 105, 107, 108, 109, 113, 114, 125, 147, 167, 186, 187, 188, 189, 190, 191, 194, 195, 196, 201, 207, 208, 209, 213, 215, 216, 219, 221, 222, 228, 238, 243, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 288, 293, 301, 333, 341, 359, 363, 366], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 51, 54, 55, 57, 82, 83, 84, 85, 92, 95, 96, 100, 101, 103, 104, 107, 108, 109, 113, 114, 122, 167, 354, 358, 366], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 54, 57, 58, 82, 83, 84, 85, 92, 94, 95, 96, 100, 101, 103, 104, 107, 108, 109, 113, 114, 363, 366], "setup": [0, 7, 82, 83, 94, 95, 96], "py": [0, 3, 118, 219, 228, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367], "develop": [0, 3, 4, 7, 94, 349, 366], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 86, 88, 90, 92, 93, 106, 109, 112, 120, 121, 122, 124, 128, 132, 138, 141, 147, 148, 150, 157, 161, 164, 165, 167, 168, 170, 171, 172, 173, 174, 181, 183, 184, 185, 194, 197, 198, 199, 201, 202, 203, 205, 207, 208, 209, 211, 213, 214, 229, 235, 236, 237, 238, 239, 242, 244, 245, 248, 250, 251, 254, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 283, 286, 288, 289, 290, 291, 292, 294, 308, 309, 312, 314, 317, 324, 326, 333, 336, 345, 348, 349, 351, 354, 355, 356, 359, 361, 362, 365, 367], "seri": [0, 2, 7, 8, 32, 61, 69, 77, 78, 80, 81, 112, 142, 164, 307, 344, 345, 349, 350, 351, 357, 358, 361, 364, 367], "quick": [0, 51], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 39, 53, 59, 86, 90, 106, 112, 121, 124, 162, 164, 173, 275, 343, 344, 345, 349, 350, 351, 352, 354, 358, 361, 362, 364, 367], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 71, 72, 73, 74, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 116, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 135, 137, 141, 142, 143, 147, 148, 151, 152, 155, 156, 160, 161, 162, 163, 164, 165, 167, 169, 171, 173, 181, 182, 184, 185, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 229, 231, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 271, 272, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 302, 303, 304, 305, 311, 314, 319, 321, 324, 326, 328, 333, 336, 340, 343, 349, 350, 351, 352, 353, 355, 358, 360, 361, 362, 364, 366, 367], "hurri": [0, 353], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 43, 45, 46, 53, 72, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 103, 104, 106, 109, 112, 121, 124, 137, 143, 148, 160, 162, 163, 184, 185, 197, 199, 201, 203, 204, 205, 208, 209, 215, 223, 229, 235, 236, 239, 242, 248, 288, 290, 291, 349, 350, 351, 352, 353, 354, 361, 362, 363, 364, 366, 367], "item": [0, 8, 13, 25, 27, 37, 44, 60, 72, 77, 136, 208, 209, 260, 261, 263, 315, 345, 346, 349, 351, 352, 355, 356, 361, 362, 364], "navig": [0, 361], "previou": [0, 3, 4, 10, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 106, 112, 161, 173, 182, 197, 201, 222, 236, 351, 352, 353, 354, 358, 362, 367], "whenev": [0, 1, 2, 3, 22, 31, 34, 37, 40, 41, 51, 57, 66, 73, 74, 84, 85, 89, 91, 92, 100, 101, 109, 113, 114, 118, 140, 165, 170, 273, 288, 289, 290, 291, 326, 344, 364], "want": [0, 2, 3, 6, 7, 8, 74, 143, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 344, 349, 350, 351, 352, 353, 355, 356, 357, 361, 362, 363, 364, 366, 367], "ted": [0, 51, 53, 54, 55, 56, 57, 58, 59, 342, 348, 359, 365], "s": [0, 1, 2, 3, 6, 7, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 74, 77, 82, 83, 86, 90, 94, 95, 96, 100, 101, 103, 106, 107, 108, 112, 113, 114, 125, 129, 147, 159, 161, 163, 164, 165, 167, 169, 171, 173, 174, 184, 185, 199, 203, 209, 210, 211, 213, 219, 228, 232, 234, 235, 238, 239, 242, 244, 247, 248, 251, 258, 264, 271, 273, 278, 288, 289, 290, 291, 292, 333, 344, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 77, 82, 83, 86, 90, 99, 102, 105, 106, 112, 118, 124, 129, 132, 134, 141, 147, 148, 160, 161, 164, 165, 167, 169, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 284, 286, 288, 289, 290, 291, 292, 324, 331, 332, 336, 342, 345, 346, 348, 350, 351, 353, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 367], "optim": [0, 1, 2, 8, 31, 39, 82, 83, 86, 90, 106, 112, 165, 173, 183, 207, 212, 213, 258, 273, 274, 275, 278, 319, 324, 336, 345, 346, 348, 351, 352, 353, 354, 356, 359, 361, 362, 365], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 106, 109, 112, 122, 125, 143, 147, 169, 174, 242, 243, 258, 260, 263, 265, 276, 278, 280, 307, 315, 321, 324, 326, 327, 328, 336, 346, 348, 349, 352, 353, 354, 355, 358, 359, 361, 362, 363, 364, 365, 366, 367], "storag": [0, 1, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 72, 73, 74, 76, 77, 79, 86, 88, 90, 106, 112, 124, 125, 130, 133, 152, 173, 342, 346, 348, 350, 351, 352, 353, 355, 358, 359, 361, 363, 365], "log": [0, 3, 4, 8, 39, 192, 193, 194, 208, 209, 217, 227, 237, 238, 244, 248, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 314, 317, 318, 320, 324, 336, 344, 345, 346, 348, 349, 350, 351, 353, 354, 358, 359, 361, 362, 365, 366], "your": [0, 2, 3, 7, 8, 10, 17, 31, 86, 90, 94, 99, 106, 107, 108, 112, 171, 173, 340, 343, 344, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 364, 365, 366], "own": [0, 1, 3, 13, 14, 16, 21, 31, 86, 90, 106, 107, 108, 112, 173, 307, 348, 350, 351, 353, 359, 361, 362, 365], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 35, 38, 39, 44, 51, 54, 60, 86, 90, 100, 101, 106, 107, 108, 112, 130, 138, 147, 160, 165, 167, 169, 173, 174, 187, 189, 199, 203, 235, 239, 240, 243, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 324, 326, 336, 342, 346, 348, 350, 353, 356, 357, 359, 363, 364, 365, 367], "loop": [0, 8, 33, 35, 38, 86, 90, 106, 112, 181, 235, 239, 240, 243, 275, 324, 346, 348, 349, 350, 353, 355, 356, 357, 359, 360, 364, 365], "ppo": [0, 4, 8, 244, 248, 259, 272, 275, 342, 344, 348, 349, 350, 354, 355, 359, 365], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 77, 84, 85, 86, 87, 89, 90, 91, 103, 106, 112, 125, 128, 129, 135, 140, 141, 143, 150, 152, 157, 159, 161, 162, 164, 165, 171, 173, 199, 203, 336, 344, 348, 350, 351, 353, 354, 355, 359, 365, 366, 367], "introduct": [0, 345, 348, 353, 359, 361, 365, 367], "multi": [0, 1, 7, 9, 27, 28, 31, 34, 37, 40, 41, 86, 90, 100, 101, 106, 110, 111, 112, 165, 173, 197, 199, 201, 203, 204, 205, 210, 211, 242, 286, 288, 289, 290, 291, 342, 348, 349, 350, 351, 352, 353, 354, 359, 362, 365, 366], "agent": [0, 9, 27, 28, 99, 100, 101, 107, 108, 110, 111, 113, 114, 115, 159, 160, 208, 209, 210, 211, 213, 219, 228, 286, 342, 348, 353, 359, 362, 365], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 199, 203, 206, 207, 242, 247, 273, 306, 307, 328, 329, 330, 333, 336, 338, 339, 340, 342, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 143, 147, 148, 149, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 173, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 217, 218, 219, 220, 226, 227, 228, 229, 231, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 301, 307, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 334, 336, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365, 367], "pretrain": [0, 348, 359, 365], "recurr": [0, 2, 124, 197, 198, 199, 201, 203, 222, 348, 350, 354, 359, 364, 365], "dqn": [0, 2, 51, 134, 194, 237, 238, 257, 258, 260, 261, 263, 265, 266, 267, 270, 271, 273, 275, 276, 277, 278, 279, 280, 286, 331, 342, 344, 348, 354, 355, 358, 359, 365], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 82, 83, 86, 90, 102, 106, 112, 132, 141, 160, 179, 180, 194, 199, 203, 210, 211, 213, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 257, 258, 259, 260, 264, 265, 271, 272, 274, 275, 276, 277, 278, 280, 320, 326, 329, 330, 336, 338, 339, 344, 345, 346, 348, 350, 353, 355, 356, 359, 363, 364, 365, 366, 367], "replai": [0, 8, 15, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 124, 125, 132, 148, 152, 161, 173, 260, 261, 263, 264, 265, 271, 276, 278, 280, 321, 324, 334, 336, 342, 346, 348, 359, 362, 363, 365], "buffer": [0, 3, 4, 8, 15, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 86, 90, 102, 106, 112, 124, 125, 129, 132, 147, 148, 152, 161, 164, 165, 167, 169, 173, 247, 250, 260, 261, 263, 264, 265, 271, 276, 278, 280, 321, 324, 334, 336, 342, 346, 348, 357, 359, 362, 363, 365, 367], "task": [0, 2, 3, 9, 27, 28, 39, 44, 54, 57, 84, 85, 86, 90, 93, 100, 101, 106, 107, 108, 109, 112, 113, 114, 147, 159, 165, 167, 169, 264, 271, 348, 349, 350, 351, 352, 353, 354, 359, 361, 362, 365, 366, 367], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 90, 106, 112, 113, 191, 236, 307, 324, 342, 345, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 364, 365], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 44, 62, 63, 64, 68, 71, 75, 76, 79, 81, 86, 90, 95, 106, 112, 130, 133, 134, 143, 147, 164, 165, 167, 171, 173, 207, 219, 228, 231, 232, 244, 247, 248, 249, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 328, 329, 330, 335, 336, 340, 342, 344, 346, 348, 350, 351, 352, 356, 358, 359, 361, 362, 364, 365, 367], "ddpg": [0, 187, 188, 189, 190, 260, 270, 279, 342, 344, 348, 350, 355, 359, 365], "loss": [0, 3, 8, 35, 134, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 287, 288, 319, 324, 331, 332, 333, 336, 345, 346, 348, 353, 355, 356, 357, 359, 362, 364, 365, 366], "trainer": [0, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 348, 349, 359, 365], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 143, 145, 147, 149, 150, 151, 152, 155, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 173, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 210, 211, 214, 217, 218, 219, 220, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 281, 282, 286, 288, 289, 290, 291, 294, 307, 315, 316, 317, 318, 319, 321, 322, 323, 326, 333, 336, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367], "packag": [0, 6, 7, 10, 118, 342, 343, 349, 364, 367], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 102, 103, 105, 106, 112, 113, 114, 122, 125, 129, 137, 143, 145, 148, 152, 161, 164, 165, 166, 170, 171, 173, 182, 192, 197, 198, 199, 201, 202, 203, 204, 208, 209, 210, 211, 212, 217, 219, 225, 229, 242, 243, 247, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 318, 321, 322, 323, 324, 326, 338, 339, 340, 342, 346, 350, 351, 352, 353, 356, 358, 360, 361, 363, 366, 367], "size": [0, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 124, 126, 129, 130, 133, 134, 135, 137, 145, 147, 149, 150, 152, 156, 158, 159, 161, 163, 164, 165, 166, 169, 171, 173, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 217, 218, 219, 220, 221, 222, 225, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 271, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 307, 315, 321, 333, 342, 344, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 366, 367], "interoper": [0, 13, 14, 342], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 37, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 86, 89, 90, 100, 101, 106, 112, 113, 114, 125, 126, 147, 152, 165, 169, 173, 184, 185, 197, 198, 199, 201, 202, 203, 204, 205, 211, 246, 250, 259, 261, 263, 265, 266, 272, 275, 276, 280, 288, 289, 290, 291, 297, 298, 299, 300, 302, 303, 304, 305, 333, 340, 342, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364], "node": [0, 2, 17, 18, 19, 20, 21, 33, 35, 38, 59, 333, 342, 356], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 107, 108, 141, 143, 183, 192, 193, 194, 195, 200, 207, 208, 209, 214, 217, 218, 221, 222, 225, 226, 227, 235, 236, 237, 238, 244, 248, 249, 257, 258, 259, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 342, 346, 350, 351, 354, 356, 361, 362, 366, 367], "helper": [0, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 349, 350, 352, 362], "compos": [0, 3, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 77, 78, 86, 90, 106, 112, 125, 151, 164, 165, 171, 173, 241, 242, 268, 278, 307, 333, 342, 349, 350, 351, 352, 356, 360, 361, 364, 366, 367], "episod": [0, 3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 86, 90, 106, 112, 121, 152, 155, 160, 181, 183, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 342, 350, 353, 358, 361, 364], "format": [0, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 77, 86, 90, 106, 107, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 307, 342, 349, 350, 353, 355, 357, 367], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 45, 46, 47, 48, 49, 86, 90, 102, 106, 112, 113, 114, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 143, 145, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 182, 222, 231, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 251, 258, 261, 264, 265, 276, 278, 280, 286, 342, 362], "human": [0, 55, 342, 362], "feedback": [0, 342, 358, 366], "rlhf": [0, 39, 44, 60, 141, 342, 344], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 87, 90, 106, 112, 119, 122, 130, 133, 142, 149, 150, 164, 165, 171, 173, 174, 183, 206, 207, 320, 328, 329, 330, 333, 336, 338, 339, 340, 342, 353], "gymlikeenv": [0, 89, 91, 342], "envmetadata": [0, 342], "vector": [0, 1, 8, 23, 26, 32, 82, 83, 95, 96, 99, 107, 108, 109, 113, 114, 132, 170, 187, 189, 197, 198, 201, 202, 205, 288, 291, 301, 302, 303, 304, 305, 342, 349, 350, 352, 360, 361, 362, 363, 367], "auto": [0, 63, 79, 120, 121, 170, 243, 258, 265, 274, 276, 278, 280, 342, 345, 361], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 102, 103, 104, 105, 106, 107, 108, 109, 112, 120, 121, 122, 125, 134, 137, 140, 142, 147, 155, 159, 160, 161, 162, 164, 165, 167, 170, 171, 173, 174, 182, 197, 199, 203, 230, 242, 243, 306, 333, 342, 349, 350, 351, 352, 353, 356, 360, 361, 366], "mask": [0, 1, 4, 22, 26, 29, 30, 32, 107, 108, 119, 148, 173, 194, 208, 209, 220, 236, 237, 238, 239, 240, 245, 246, 321, 342, 350, 352, 367], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 32, 39, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 122, 128, 130, 132, 133, 134, 135, 138, 141, 142, 145, 149, 150, 152, 156, 159, 165, 170, 178, 181, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 199, 203, 205, 206, 207, 208, 209, 210, 218, 219, 220, 222, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 248, 251, 252, 257, 258, 260, 261, 263, 264, 265, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 333, 336, 340, 342, 344, 345, 346, 349, 350, 351, 353, 354, 355, 356, 357, 360, 361, 363, 364, 366, 367], "record": [0, 2, 31, 86, 90, 106, 112, 141, 173, 275, 306, 307, 308, 309, 310, 311, 312, 313, 314, 336, 342, 350, 351, 354, 358], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 106, 112, 132, 161, 178, 231, 237, 238, 244, 245, 246, 247, 248, 249, 250, 342, 351, 352, 354, 355, 361, 362, 366, 367], "actor": [0, 3, 4, 20, 141, 183, 186, 187, 189, 194, 195, 207, 218, 220, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 286, 333, 342, 345, 350, 352, 353, 355, 358, 363, 366], "explor": [0, 1, 172, 213, 231, 235, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 257, 320, 329, 330, 336, 342, 351, 352, 353, 355, 356, 358, 361, 362], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 86, 90, 99, 106, 112, 118, 121, 123, 125, 126, 128, 130, 132, 133, 134, 142, 143, 147, 148, 151, 152, 153, 155, 157, 161, 162, 164, 165, 169, 171, 173, 178, 182, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 317, 318, 319, 320, 321, 324, 333, 336, 342, 346, 350, 355, 356, 357, 360, 361, 362, 364, 366, 367], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 72, 86, 87, 90, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 122, 129, 130, 131, 135, 141, 143, 149, 150, 155, 156, 159, 164, 170, 173, 182, 192, 208, 209, 217, 231, 244, 248, 252, 253, 276, 282, 288, 293, 301, 310, 324, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "hook": [0, 31, 86, 90, 106, 112, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 220, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 342], "planner": [0, 183, 207, 342], "sac": [0, 265, 276, 278, 342], "redq": [0, 276, 332, 333, 342], "iql": [0, 264, 271, 342, 349, 361], "cql": [0, 258, 263, 342], "dt": [0, 243, 342, 362], "td3": [0, 280, 342], "a2c": [0, 257, 342], "dreamer": [0, 117, 195, 267, 268, 269, 342, 344], "checkpoint": [0, 342, 363], "builder": [0, 342, 350, 367], "logger": [0, 307, 309, 310, 311, 312, 313, 314, 318, 324, 336, 340, 342, 350], "_util": [0, 3, 11, 342, 358], "implement_for": [0, 3, 342], "thing": [0, 3, 7, 8, 86, 90, 106, 112, 343, 351, 352, 353, 354, 355, 356, 357, 361, 364, 367], "consid": [0, 1, 2, 3, 8, 19, 31, 34, 37, 40, 41, 62, 63, 79, 86, 90, 106, 112, 132, 171, 173, 192, 210, 225, 288, 290, 291, 343, 349, 353, 354, 355, 362, 364], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 76, 79, 86, 87, 90, 99, 100, 101, 103, 105, 106, 107, 108, 112, 113, 114, 119, 121, 124, 125, 129, 130, 132, 133, 141, 142, 143, 147, 148, 155, 161, 164, 165, 167, 169, 170, 171, 173, 179, 180, 181, 183, 194, 197, 198, 201, 202, 205, 206, 207, 208, 209, 212, 220, 226, 242, 244, 247, 248, 250, 254, 259, 261, 266, 272, 275, 278, 281, 286, 287, 288, 289, 290, 291, 306, 307, 321, 340, 343, 344, 346, 349, 350, 351, 352, 354, 356, 357, 361, 362, 363, 364, 367], "debug": [0, 6, 8, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 343, 367], "work": [0, 1, 2, 3, 4, 8, 11, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 71, 73, 74, 76, 81, 86, 89, 90, 91, 94, 106, 109, 112, 126, 141, 147, 167, 170, 171, 173, 181, 184, 185, 204, 205, 238, 246, 251, 259, 272, 275, 324, 343, 344, 349, 350, 351, 352, 353, 356, 360, 361, 362, 363, 364, 366, 367], "habitat": [0, 3, 92, 343, 363], "lab": [0, 3, 84, 85, 92, 343], "mujoco": [0, 6, 8, 109, 343, 349, 351, 352], "error": [0, 1, 3, 7, 10, 11, 28, 31, 33, 35, 38, 86, 90, 106, 112, 115, 148, 173, 174, 343, 349, 351, 361, 367], "solut": [0, 2, 3, 6, 7, 9, 20, 343, 344, 346, 366], "resourc": [0, 1, 20, 92, 343, 349, 351, 361], "issu": [0, 4, 5, 8, 51, 55, 62, 63, 79, 94, 125, 148, 162, 181, 231, 237, 238, 244, 245, 246, 247, 248, 343, 366], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 78, 79, 80, 81, 86, 90, 100, 101, 106, 112, 113, 114, 120, 125, 129, 132, 165, 181, 208, 209, 342, 353, 360, 361, 364, 366], "search": [0, 105, 182, 350], "page": [0, 7, 314, 355], "somewhat": [1, 2, 345, 354, 367], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 82, 83, 86, 89, 90, 91, 92, 95, 96, 103, 104, 106, 109, 112, 122, 131, 134, 165, 173, 194, 201, 205, 220, 237, 238, 245, 246, 275, 321, 356, 366, 367], "dataload": [1, 60, 72, 74, 350, 356, 364], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 106, 112, 125, 136, 152, 160, 161, 162, 165, 173, 197, 199, 201, 203, 217, 235, 239, 240, 243, 278, 307, 344, 350, 353, 364, 366, 367], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 99, 100, 101, 106, 107, 108, 112, 113, 114, 121, 124, 136, 141, 147, 156, 164, 165, 169, 173, 203, 204, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 321, 324, 344, 345, 346, 349, 350, 351, 352, 355, 360, 361, 362, 363, 364, 366, 367], "over": [1, 2, 3, 4, 8, 13, 14, 31, 37, 41, 42, 44, 50, 51, 57, 72, 86, 90, 100, 101, 106, 112, 132, 143, 155, 162, 173, 181, 229, 250, 266, 268, 273, 294, 327, 346, 349, 350, 351, 353, 354, 355, 356, 361, 362, 367], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 38, 40, 41, 57, 64, 86, 90, 106, 107, 108, 112, 122, 123, 129, 137, 147, 161, 164, 165, 166, 167, 169, 173, 181, 197, 199, 201, 203, 210, 247, 248, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 344, 349, 352, 361, 362, 364, 367], "static": [1, 11, 39, 44, 66, 73, 74, 92, 171, 271, 353, 362, 364], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 99, 105, 106, 107, 108, 110, 111, 112, 113, 114, 121, 122, 124, 126, 129, 130, 131, 132, 133, 141, 143, 145, 147, 149, 152, 155, 159, 160, 161, 164, 165, 167, 169, 171, 173, 178, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 210, 211, 214, 218, 229, 236, 237, 238, 239, 240, 242, 243, 247, 251, 252, 257, 258, 259, 260, 264, 265, 271, 272, 275, 276, 277, 278, 280, 287, 288, 289, 290, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 344, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 360, 361, 362, 364, 365, 366, 367], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 34, 37, 40, 41, 44, 64, 68, 74, 86, 90, 92, 99, 106, 107, 108, 112, 134, 163, 173, 174, 197, 201, 211, 241, 257, 259, 272, 275, 276, 277, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 367], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 60, 77, 86, 89, 90, 91, 92, 106, 109, 112, 124, 130, 132, 133, 142, 150, 165, 173, 179, 180, 199, 203, 239, 243, 259, 272, 275, 278, 307, 321, 326, 338, 339, 340, 344, 349, 350, 351, 352, 356, 361, 362, 364], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 54, 55, 58, 59, 60, 86, 90, 102, 106, 112, 120, 125, 129, 137, 147, 155, 161, 164, 165, 166, 167, 169, 173, 205, 229, 247, 248, 249, 278, 307, 346, 351, 353, 357, 364, 367], "two": [1, 2, 3, 4, 8, 10, 31, 34, 37, 39, 40, 41, 57, 68, 72, 74, 86, 90, 106, 112, 122, 143, 147, 169, 173, 190, 197, 199, 201, 203, 223, 248, 272, 283, 320, 324, 333, 345, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 364, 366, 367], "main": [1, 2, 3, 5, 19, 21, 59, 87, 248, 324, 344, 345, 349, 350, 360, 367], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 68, 71, 72, 73, 74, 76, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 106, 107, 109, 112, 113, 114, 121, 122, 126, 128, 129, 147, 155, 156, 159, 161, 163, 164, 165, 167, 169, 173, 181, 184, 185, 197, 199, 201, 203, 204, 205, 208, 209, 210, 211, 212, 229, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 282, 286, 288, 289, 290, 291, 292, 296, 306, 307, 314, 317, 327, 333, 336, 337, 340, 349, 350, 351, 352, 353, 354, 356, 361, 362, 364, 367], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 71, 72, 73, 74, 75, 76, 84, 85, 86, 89, 90, 91, 92, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 123, 124, 128, 130, 133, 141, 143, 145, 147, 155, 157, 163, 165, 167, 169, 171, 173, 181, 184, 185, 187, 193, 196, 199, 203, 205, 208, 209, 215, 220, 238, 242, 245, 246, 248, 250, 251, 252, 273, 278, 285, 288, 291, 306, 320, 321, 338, 339, 344, 349, 351, 353, 354, 355, 356, 360, 362, 363, 364, 366, 367], "constructor": [1, 2, 15, 17, 18, 19, 20, 37, 44, 57, 65, 77, 86, 90, 103, 106, 112, 113, 121, 164, 184, 185, 205, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 333, 337, 340, 344, 349, 350, 351, 353, 356, 361, 364], "iter": [1, 2, 3, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 68, 72, 82, 83, 86, 90, 95, 96, 106, 112, 135, 143, 156, 173, 184, 185, 205, 210, 211, 224, 231, 237, 244, 245, 247, 249, 250, 252, 273, 285, 320, 323, 324, 333, 345, 346, 349, 351, 352, 356, 358, 361, 362], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 87, 90, 91, 92, 94, 95, 96, 102, 103, 106, 109, 112, 119, 165, 173, 197, 199, 201, 203, 239, 242, 249, 250, 328, 340, 344, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361, 364, 365, 367], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 51, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 102, 103, 104, 106, 107, 108, 109, 112, 119, 124, 137, 140, 143, 159, 160, 161, 162, 165, 170, 173, 181, 182, 183, 195, 197, 199, 201, 203, 204, 206, 207, 235, 239, 240, 242, 243, 244, 248, 257, 267, 275, 287, 288, 289, 290, 291, 294, 295, 296, 306, 309, 315, 320, 324, 346, 350, 352, 354, 355, 357, 358, 360, 362, 363, 366], "queri": [1, 3, 13, 31, 33, 35, 38, 86, 90, 106, 112, 147, 164, 167, 171, 173, 250, 349, 355, 362, 366], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 106, 112, 148, 160, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 261, 263, 273, 288, 289, 290, 291, 292, 306, 337, 349, 350, 352, 355, 358, 362, 364, 367], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 79, 82, 83, 86, 89, 90, 91, 95, 96, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 124, 125, 132, 138, 142, 143, 154, 159, 162, 165, 171, 173, 183, 184, 185, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 211, 214, 215, 216, 219, 221, 222, 225, 226, 227, 228, 231, 235, 236, 239, 240, 242, 243, 244, 247, 248, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 274, 275, 276, 277, 278, 280, 315, 317, 320, 324, 326, 327, 328, 338, 339, 340, 344, 349, 350, 351, 352, 353, 354, 356, 358, 361, 362, 363, 364, 367], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 44, 56, 72, 77, 86, 90, 106, 112, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 145, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 173, 174, 197, 199, 203, 205, 212, 213, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 289, 290, 291, 321, 349, 351, 352, 356, 357, 361, 362, 364, 367], "deliv": [1, 2, 3, 15, 57, 349, 350, 353, 356, 366], "stack": [1, 2, 3, 7, 8, 13, 14, 17, 19, 20, 27, 28, 33, 34, 35, 37, 38, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 86, 90, 99, 106, 107, 108, 112, 171, 197, 199, 201, 202, 203, 242, 249, 250, 306, 315, 344, 350, 353, 360, 362, 364, 366], "user": [1, 2, 3, 5, 8, 31, 51, 53, 57, 59, 74, 86, 90, 106, 112, 126, 160, 165, 173, 174, 191, 204, 275, 278, 307, 337, 345, 346, 349, 350, 353, 355, 356, 362, 366, 367], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 72, 86, 90, 100, 101, 106, 112, 113, 114, 159, 235, 239, 240, 243, 349, 351, 358, 361, 366, 367], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 122, 125, 130, 131, 133, 134, 135, 142, 143, 145, 149, 150, 152, 154, 156, 159, 161, 162, 164, 165, 171, 173, 181, 182, 183, 197, 199, 203, 207, 242, 257, 258, 259, 260, 261, 263, 264, 265, 271, 272, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 333, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 102, 106, 107, 108, 109, 110, 111, 112, 121, 124, 125, 126, 128, 134, 143, 150, 159, 160, 164, 165, 171, 173, 174, 181, 182, 183, 186, 191, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 215, 218, 219, 221, 222, 228, 232, 242, 247, 253, 257, 259, 263, 272, 273, 275, 276, 277, 278, 286, 287, 288, 289, 290, 291, 292, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 367], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 39, 51, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 103, 104, 106, 109, 112, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 145, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 181, 197, 199, 203, 212, 235, 237, 239, 245, 268, 278, 350, 351, 352, 353, 354, 356, 358, 361, 362, 363, 364, 367], "predefin": [1, 350, 352, 356, 364], "becaus": [1, 3, 4, 7, 33, 35, 38, 39, 51, 86, 90, 106, 112, 134, 141, 159, 164, 170, 173, 190, 204, 211, 231, 237, 238, 242, 244, 245, 246, 247, 248, 349, 350, 352, 354, 355, 356, 360, 361, 362, 364, 367], "potenti": [1, 2, 362, 364], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 39, 82, 83, 86, 90, 95, 96, 106, 112, 143, 157, 165, 168, 173, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 214, 215, 216, 217, 218, 221, 222, 224, 226, 227, 229, 232, 235, 236, 238, 239, 242, 243, 244, 246, 248, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 328, 345, 349, 351, 352, 353, 354, 360, 361, 363, 364], "heavi": [1, 8, 51, 364], "crucial": [1, 2, 235, 239, 240, 243, 264, 271, 273, 349, 350, 351, 352, 353, 355, 357, 361, 362, 367], "configur": [1, 8, 20, 21, 39, 141, 186, 191, 218, 273, 275, 333, 344, 349, 350, 351, 355, 361, 362], "hyperparamet": [1, 71, 173, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 349, 362, 364], "appropri": [1, 3, 4, 7, 61, 69, 77, 78, 80, 81, 106, 112, 134, 337, 340, 349, 357, 364], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 336, 337, 338, 339, 340, 344, 345, 349, 352, 354, 358, 361, 362, 363, 366], "take": [1, 2, 3, 8, 22, 39, 54, 82, 83, 86, 90, 95, 96, 106, 112, 128, 159, 162, 164, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 251, 254, 256, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 326, 344, 346, 349, 350, 351, 353, 354, 355, 361, 362, 364, 367], "consider": [1, 2, 3, 8, 350, 361, 364], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 101, 102, 106, 107, 108, 112, 113, 114, 121, 130, 133, 160, 165, 173, 182, 184, 185, 199, 203, 205, 252, 257, 258, 259, 260, 261, 263, 265, 266, 272, 273, 275, 276, 277, 278, 280, 286, 288, 291, 349, 350, 351, 353, 361, 362, 367], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 73, 74, 75, 77, 84, 85, 86, 89, 90, 91, 92, 99, 102, 106, 107, 108, 112, 113, 114, 121, 122, 125, 128, 129, 130, 131, 134, 135, 137, 141, 143, 148, 149, 150, 152, 155, 156, 159, 160, 162, 164, 165, 170, 171, 173, 174, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 211, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 244, 246, 247, 248, 251, 254, 257, 259, 265, 270, 272, 273, 275, 276, 277, 279, 287, 288, 289, 290, 291, 292, 307, 309, 319, 320, 321, 324, 336, 338, 339, 340, 344, 346, 349, 350, 351, 352, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367], "occur": [1, 8, 14, 27, 28, 51, 86, 90, 92, 106, 112, 126, 143, 148, 170, 182, 231, 237, 238, 244, 245, 246, 247, 248, 268, 364, 367], "serial": [1, 2, 3, 31, 86, 90, 106, 112, 171, 173], "parallel": [1, 3, 8, 86, 89, 90, 91, 106, 107, 108, 112, 165, 170, 174, 257, 337, 338, 339, 340, 350, 351, 361], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 31, 122, 125, 152, 336, 339, 342, 349, 350, 351, 352, 356, 358, 361, 364], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 99, 102, 105, 106, 107, 108, 109, 112, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 338, 339, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 364, 367], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 35, 38, 44, 54, 59, 60, 87, 103, 106, 112, 171, 338, 339, 340, 349, 351, 366, 367], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 339, 342, 351, 356, 366], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 73, 74, 99, 107, 108, 197, 201, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 344, 346, 351, 354, 364, 366], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 66, 73, 74, 82, 83, 84, 85, 89, 91, 92, 94, 95, 96, 103, 104, 106, 109, 171, 173, 210, 243, 326, 342, 344, 349, 353, 357, 361, 362], "aggreg": [1, 3, 51, 77, 107, 108, 182, 184, 185, 187, 188, 250], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 87, 90, 106, 112, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 145, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 181, 182, 197, 199, 201, 203, 205, 210, 220, 236, 238, 239, 246, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 288, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 326, 344, 350, 352, 353, 354, 357, 358, 362, 363, 366, 367], "final": [1, 2, 3, 4, 20, 33, 35, 38, 39, 170, 197, 199, 201, 203, 210, 235, 239, 240, 241, 243, 249, 288, 320, 344, 349, 350, 351, 357, 358, 361, 362, 367], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 338, 342, 349, 350, 351, 356, 366], "sever": [1, 2, 8, 29, 31, 44, 54, 86, 90, 106, 112, 126, 128, 165, 173, 275, 349, 351, 357, 358, 364, 367], "gather": [1, 3, 17, 19, 20, 44, 60, 62, 63, 79, 148, 209, 217, 287, 328, 343, 350, 351, 352, 356, 361, 362, 364, 367], "continu": [1, 9, 24, 45, 74, 86, 90, 106, 107, 108, 112, 113, 114, 178, 187, 188, 189, 190, 243, 250, 257, 258, 265, 271, 275, 276, 277, 278, 279, 280, 288, 293, 301, 344, 349, 351, 352, 354, 361, 362, 364, 366, 367], "concomitantli": 1, "network": [1, 4, 8, 31, 86, 90, 99, 106, 107, 108, 112, 173, 184, 185, 187, 188, 189, 190, 193, 195, 196, 201, 205, 210, 211, 213, 215, 216, 219, 221, 222, 223, 228, 232, 233, 234, 236, 247, 251, 258, 259, 260, 261, 263, 264, 265, 266, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 284, 286, 288, 289, 290, 291, 292, 335, 336, 344, 345, 346, 355, 358, 360, 362, 367], "impli": [1, 367], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 39, 66, 68, 71, 82, 83, 86, 90, 106, 110, 111, 112, 129, 147, 161, 164, 165, 167, 169, 173, 197, 198, 199, 201, 202, 203, 210, 213, 247, 257, 258, 259, 265, 268, 278, 326, 335, 344, 346, 349, 350, 351, 352, 360, 362, 364, 366], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 33, 35, 38, 53, 59, 86, 89, 90, 91, 92, 106, 109, 112, 141, 143, 156, 165, 166, 171, 173, 174, 205, 210, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 363, 364, 366, 367], "slightli": [1, 51, 344, 345, 352, 362, 363, 364, 367], "lag": [1, 349, 350, 351], "therefor": [1, 2, 3, 7, 34, 37, 40, 41, 58, 59, 86, 90, 106, 112, 152, 275, 286, 355, 367], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 99, 102, 105, 106, 107, 108, 112, 119, 122, 125, 134, 141, 147, 152, 155, 159, 160, 162, 164, 166, 169, 170, 181, 182, 197, 198, 201, 202, 204, 208, 209, 210, 235, 239, 240, 243, 244, 247, 248, 256, 257, 258, 259, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 345, 346, 349, 350, 351, 353, 360, 361, 362, 364, 367], "asynchron": [1, 9, 14, 20, 31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 257, 338, 349, 350, 351], "off": [1, 2, 4, 200, 227, 237, 278, 320, 329, 344, 346, 349, 350, 351, 354, 355, 361, 363, 367], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 79, 86, 90, 106, 107, 108, 112, 113, 130, 133, 137, 143, 160, 165, 170, 173, 174, 194, 197, 199, 201, 203, 211, 212, 232, 234, 236, 238, 245, 257, 264, 266, 271, 275, 320, 344, 346, 349, 350, 351, 352, 353, 354, 356, 357, 361, 362, 363, 364, 367], "remot": [1, 2, 17, 18, 19, 20, 106, 112, 367], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 39, 77, 82, 83, 86, 90, 92, 93, 95, 96, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 122, 125, 128, 130, 133, 134, 135, 141, 145, 149, 150, 155, 156, 157, 159, 160, 162, 173, 174, 183, 199, 203, 207, 242, 243, 257, 307, 328, 344, 349, 351, 352, 354, 355, 356, 357, 358, 363, 364, 366], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 100, 101, 106, 112, 113, 114, 156, 276, 288, 289, 290, 291, 292, 345, 349, 351, 354, 355, 356], "synchronis": [1, 87, 361], "either": [1, 2, 5, 21, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 86, 90, 106, 112, 159, 160, 173, 253, 280, 311, 346, 349, 350, 352, 363, 364, 366, 367], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 349, 361, 366], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 122, 124, 125, 126, 129, 132, 137, 140, 141, 142, 143, 147, 148, 150, 151, 154, 155, 156, 159, 161, 163, 164, 165, 166, 167, 169, 171, 173, 174, 178, 181, 182, 183, 184, 185, 187, 188, 189, 190, 196, 197, 198, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 226, 227, 231, 232, 233, 234, 235, 237, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 288, 289, 290, 291, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 314, 317, 318, 320, 321, 324, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 357, 358, 360, 361, 362, 363, 364, 366, 367], "second": [1, 3, 8, 51, 54, 77, 122, 197, 199, 201, 203, 238, 259, 272, 275, 278, 309, 323, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 129, 130, 131, 133, 134, 135, 141, 145, 146, 147, 149, 150, 152, 156, 159, 161, 163, 164, 165, 167, 169, 173, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 218, 219, 220, 228, 231, 232, 233, 234, 236, 237, 238, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 321, 326, 333, 334, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 44, 45, 46, 66, 73, 86, 90, 106, 112, 122, 137, 141, 164, 173, 193, 194, 198, 202, 214, 232, 233, 234, 237, 238, 241, 247, 253, 257, 259, 260, 261, 266, 272, 275, 277, 286, 287, 288, 289, 290, 291, 324, 333, 342, 346, 349, 350, 351, 352, 353, 354, 360, 361, 362, 367], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 85, 86, 87, 90, 102, 106, 112, 125, 143, 161, 164, 165, 171, 173, 178, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 248, 249, 250, 251, 254, 261, 264, 265, 273, 286, 288, 289, 290, 291, 307, 311, 320, 328, 329, 330, 333, 336, 338, 339, 344, 345, 346, 349, 351, 352, 353, 354, 362, 364, 367], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 129, 130, 131, 133, 134, 135, 145, 147, 149, 150, 152, 156, 159, 161, 164, 165, 167, 169, 173, 178, 181, 183, 193, 197, 198, 199, 201, 202, 203, 207, 212, 213, 219, 220, 228, 231, 232, 233, 234, 236, 237, 238, 242, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 321, 333, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "slower": [1, 204], "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 57, 66, 73, 74, 76, 77, 86, 90, 94, 106, 109, 112, 150, 190, 199, 201, 203, 205, 214, 229, 231, 235, 237, 247, 252, 273, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 343, 345, 349, 350, 351, 353, 355, 356, 361, 362, 364, 366, 367], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 119, 122, 125, 128, 130, 131, 132, 133, 142, 143, 147, 152, 155, 158, 160, 161, 162, 164, 165, 166, 169, 171, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 229, 231, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 272, 273, 275, 276, 277, 278, 279, 280, 286, 288, 289, 290, 291, 295, 296, 309, 317, 319, 320, 324, 328, 333, 340, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 367], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 92, 93, 94, 106, 112, 129, 141, 146, 147, 161, 164, 165, 167, 169, 173, 197, 198, 201, 202, 247, 316, 349, 350, 351, 352, 361, 363, 367], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 42, 68, 82, 83, 95, 96, 106, 112, 126, 128, 132, 142, 152, 155, 159, 164, 171, 197, 201, 203, 204, 210, 212, 213, 231, 237, 244, 245, 247, 248, 251, 259, 265, 272, 275, 276, 280, 294, 333, 340, 344, 346, 349, 350, 351, 353, 355, 356, 361, 362, 364, 366], "infer": [1, 106, 112, 125, 171, 199, 203, 212, 236, 263, 349, 351, 356, 358, 364], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 51, 54, 66, 73, 74, 82, 83, 84, 85, 86, 89, 90, 95, 96, 102, 103, 104, 106, 112, 142, 143, 165, 171, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 249, 250, 251, 254, 278, 307, 314, 320, 338, 339, 340, 343, 346, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366], "dispatch": [1, 17, 18, 19, 20, 229, 242, 307, 349], "avail": [1, 3, 4, 6, 20, 34, 37, 40, 41, 51, 54, 59, 66, 72, 73, 74, 84, 85, 94, 100, 101, 106, 107, 108, 109, 113, 114, 121, 124, 141, 194, 220, 244, 248, 273, 307, 338, 339, 344, 349, 350, 351, 352, 353, 354, 361, 362, 364, 367], "speed": [1, 2, 4, 8, 26, 86, 90, 106, 112, 345, 349, 350, 351, 352, 361, 362, 364], "avoid": [1, 2, 31, 62, 63, 79, 86, 90, 106, 112, 118, 165, 171, 173, 231, 247, 252, 259, 272, 275, 278, 327, 351, 361], "oom": [1, 33, 35, 38, 62, 63, 79], "choic": [1, 2, 53, 59, 106, 214, 344, 345, 349, 350, 355, 361], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 34, 37, 39, 40, 41, 44, 51, 54, 55, 57, 58, 59, 62, 63, 66, 68, 73, 74, 77, 79, 86, 87, 88, 90, 99, 103, 106, 107, 108, 112, 113, 121, 122, 130, 133, 150, 164, 166, 171, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 211, 212, 214, 215, 216, 218, 219, 221, 222, 224, 228, 229, 231, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 259, 272, 273, 275, 288, 289, 290, 291, 292, 321, 338, 339, 340, 344, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 364, 367], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 43, 44, 45, 46, 57, 65, 74, 86, 90, 94, 105, 106, 112, 125, 137, 166, 171, 182, 199, 203, 236, 257, 259, 260, 264, 265, 271, 272, 275, 276, 277, 278, 280, 288, 289, 290, 291, 344, 345, 350, 361], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 77, 79, 86, 90, 106, 112, 170, 171, 173, 183, 204, 207, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 314, 333, 342, 346, 349, 351, 352, 354, 356, 358, 361, 363, 367], "while": [1, 2, 3, 7, 8, 31, 86, 90, 106, 112, 152, 165, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 264, 271, 272, 275, 278, 344, 349, 351, 352, 354, 356, 357, 361, 362, 363, 364, 366], "wait": [1, 19, 20, 21, 352, 362], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 31, 33, 35, 37, 38, 40, 51, 54, 55, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 100, 101, 106, 107, 108, 112, 113, 114, 118, 121, 122, 124, 125, 132, 143, 150, 152, 155, 156, 159, 161, 165, 173, 181, 184, 185, 197, 201, 222, 242, 244, 249, 250, 251, 257, 258, 260, 261, 263, 264, 265, 271, 275, 278, 288, 295, 296, 307, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 364, 367], "impact": [1, 57, 130, 133, 257, 259, 272, 275, 277, 350, 352, 361], "memori": [1, 3, 8, 20, 26, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 86, 87, 90, 94, 106, 112, 125, 129, 147, 161, 164, 165, 167, 169, 171, 173, 201, 202, 247, 340, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "manag": [1, 8, 284, 285, 288, 289, 290, 291, 320, 355], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 65, 66, 68, 71, 73, 74, 77, 86, 90, 95, 96, 106, 107, 108, 112, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 146, 147, 148, 149, 150, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 181, 182, 183, 193, 194, 199, 203, 206, 207, 220, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 307, 318, 319, 320, 322, 323, 324, 328, 333, 345, 346, 349, 351, 352, 353, 355, 360, 361, 362, 364, 366, 367], "control": [1, 3, 5, 8, 15, 84, 85, 86, 90, 99, 106, 107, 108, 112, 132, 181, 187, 188, 189, 190, 199, 203, 206, 207, 222, 229, 243, 247, 248, 249, 257, 259, 272, 275, 279, 288, 293, 301, 344, 346, 349, 350, 351, 353, 354, 355, 361, 362, 364], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 71, 72, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 100, 101, 103, 104, 106, 109, 112, 113, 114, 125, 126, 130, 133, 138, 141, 142, 143, 147, 148, 159, 161, 162, 164, 165, 167, 173, 174, 193, 197, 198, 200, 201, 202, 203, 208, 209, 210, 227, 232, 233, 234, 236, 242, 244, 247, 248, 250, 257, 258, 259, 261, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 283, 286, 288, 289, 290, 291, 307, 315, 319, 333, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 367], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 350, 361], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 35, 37, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 71, 73, 86, 90, 106, 107, 108, 112, 121, 122, 125, 128, 130, 133, 138, 145, 157, 165, 173, 199, 203, 211, 288, 290, 291, 320, 324, 345, 349, 350, 351, 352, 354, 355, 356, 358, 361, 362, 364, 367], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 242, 243, 349, 356, 367], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 53, 71, 77, 82, 83, 86, 90, 95, 96, 106, 112, 213, 275, 288, 289, 290, 291, 292, 306, 333, 343, 344, 346, 349, 350, 351, 352, 354, 356, 357, 361, 364, 367], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 33, 35, 38, 42, 44, 53, 57, 72, 73, 76, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 103, 104, 106, 107, 108, 109, 112, 125, 130, 132, 133, 138, 142, 143, 164, 165, 171, 173, 184, 185, 198, 199, 202, 203, 205, 208, 209, 210, 211, 236, 243, 251, 278, 349, 350, 351, 353, 354, 356, 360, 361, 363, 364, 367], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 119, 121, 122, 123, 124, 125, 126, 130, 132, 133, 134, 137, 141, 142, 143, 145, 147, 148, 152, 154, 155, 156, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 173, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 225, 226, 227, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 336, 340, 346, 349, 350, 351, 352, 354, 363, 364, 366, 367], "behaviour": [1, 3, 13, 14, 20, 57, 90, 126, 130, 133, 143, 148, 160, 181, 199, 200, 203, 227, 320, 344, 350, 364], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 86, 90, 106, 112, 125, 130, 133, 143, 161, 162, 203, 244, 248, 249, 250, 326, 338, 339, 344, 349, 350, 353, 354, 361, 362, 367], "choos": [1, 99, 199, 203, 275, 342, 344, 345, 349, 350, 351, 361, 364], "follow": [1, 2, 3, 6, 7, 8, 31, 33, 35, 36, 38, 39, 51, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 86, 90, 95, 96, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 121, 141, 147, 167, 173, 184, 185, 197, 199, 201, 203, 205, 238, 245, 246, 256, 257, 258, 259, 260, 264, 265, 271, 272, 275, 276, 277, 278, 280, 307, 324, 333, 344, 345, 346, 349, 350, 351, 352, 355, 356, 360, 361, 362, 364, 366, 367], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 327, 349, 351, 366], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 125, 138, 173, 235, 239, 242, 243, 306, 307, 309, 317, 320, 324, 327, 328, 349, 350, 351, 352, 354, 361, 364, 366, 367], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 75, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 103, 104, 105, 106, 109, 112, 121, 122, 125, 128, 129, 132, 137, 140, 141, 143, 145, 146, 147, 155, 157, 161, 164, 165, 167, 169, 170, 171, 173, 174, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 211, 212, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 240, 242, 243, 246, 247, 248, 250, 251, 254, 259, 272, 275, 278, 287, 288, 289, 290, 291, 306, 320, 346, 350, 351, 352, 353, 354, 356, 357, 361, 362, 364, 366, 367], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 122, 125, 152, 327, 349, 350, 351, 352, 356, 358, 361, 364, 366], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 37, 39, 40, 51, 53, 54, 57, 68, 71, 73, 74, 77, 86, 87, 90, 100, 101, 106, 107, 108, 112, 113, 114, 147, 152, 155, 159, 160, 161, 162, 169, 171, 173, 194, 197, 198, 199, 201, 203, 210, 211, 215, 219, 220, 228, 235, 237, 238, 239, 246, 250, 294, 297, 298, 299, 300, 302, 303, 304, 305, 307, 320, 321, 338, 339, 344, 349, 350, 351, 352, 354, 355, 356, 358, 361, 362, 363, 364, 366, 367], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 327, 349, 350, 358], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 45, 46, 57, 59, 67, 77, 86, 90, 102, 106, 112, 132, 142, 143, 161, 174, 197, 199, 201, 203, 239, 244, 247, 248, 258, 276, 320, 328, 344, 349, 350, 351, 352, 353, 354, 356, 362, 363, 364, 366, 367], "rand_step": [1, 3, 84, 85, 86, 87, 89, 90, 91, 97, 98, 102, 103, 104, 106, 112, 140, 161, 171, 362, 366, 367], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 349], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 53, 55, 57, 58, 59, 349, 350, 351], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 40, 51, 53, 54, 55, 57, 58, 59, 65, 66, 73, 74, 77, 82, 83, 86, 90, 95, 96, 106, 112, 148, 159, 164, 173, 183, 203, 207, 243, 275, 288, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 315, 342, 345, 349, 350, 351, 352, 353, 356, 358, 362, 366, 367], "pad": [1, 2, 3, 22, 36, 42, 53, 55, 57, 58, 59, 125, 184, 185, 187, 188, 203, 204, 208, 209, 210, 321], "along": [1, 2, 3, 13, 14, 22, 27, 28, 33, 35, 38, 39, 44, 53, 55, 57, 58, 59, 63, 66, 68, 73, 74, 77, 79, 124, 125, 126, 143, 145, 148, 155, 163, 203, 205, 208, 209, 213, 237, 244, 247, 248, 273, 344, 349, 350, 352, 353, 355, 361, 362, 364], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 61, 65, 66, 69, 77, 78, 80, 81, 86, 90, 106, 112, 121, 124, 125, 129, 147, 160, 161, 163, 164, 165, 167, 169, 173, 206, 247, 256, 266, 324, 343, 350, 351, 360, 361, 362, 364, 367], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 66, 73, 74, 90, 121, 148, 159, 182, 208, 209, 235, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 346, 352], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 40, 55, 84, 85, 86, 90, 106, 112, 113, 114, 138, 148, 171, 173, 194, 208, 209, 220, 237, 238, 245, 246, 248, 283, 288, 321, 349, 351, 352, 353, 354, 355, 361], "valid": [1, 2, 3, 22, 33, 35, 36, 44, 60, 77, 115, 121, 148, 165, 173, 184, 185, 205, 208, 209, 235, 243, 272, 288, 289, 290, 291, 321, 346, 367], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 320, 342, 349, 350], "strategi": [1, 2, 15, 57, 71, 99, 209, 217, 239, 344, 346, 349, 350, 354, 361, 364], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 43, 45, 46, 48, 68, 86, 90, 102, 106, 107, 108, 112, 113, 115, 122, 124, 125, 134, 141, 159, 160, 164, 165, 170, 171, 173, 184, 185, 208, 209, 210, 211, 235, 237, 244, 245, 248, 251, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 307, 324, 336, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 367], "organ": [1, 2, 362, 364], "within": [1, 2, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 109, 112, 122, 125, 130, 133, 134, 152, 159, 170, 171, 173, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 261, 266, 286, 307, 344, 350, 353, 354, 355, 356, 357, 358, 362, 366], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 53, 54, 57, 71, 82, 83, 86, 90, 95, 96, 99, 106, 107, 108, 112, 121, 125, 132, 143, 150, 165, 166, 173, 194, 197, 198, 199, 201, 202, 203, 205, 207, 210, 211, 220, 271, 275, 283, 288, 289, 290, 294, 295, 296, 320, 324, 326, 338, 339, 344, 345, 346, 349, 350, 351, 353, 355, 357, 360, 361, 362, 363, 364, 367], "how": [1, 2, 3, 17, 18, 19, 31, 34, 40, 57, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 106, 107, 108, 109, 112, 113, 114, 173, 257, 259, 270, 272, 275, 307, 309, 324, 343, 344, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367], "tabl": [1, 344, 350, 354], "summar": [1, 3, 362], "what": [1, 3, 8, 34, 43, 51, 86, 90, 106, 112, 134, 161, 174, 181, 245, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 366, 367], "expect": [1, 2, 3, 4, 7, 25, 31, 37, 43, 44, 66, 72, 73, 86, 90, 102, 105, 106, 112, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 143, 145, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 197, 198, 199, 201, 202, 203, 210, 211, 238, 243, 247, 250, 257, 258, 259, 260, 261, 263, 264, 265, 271, 272, 273, 275, 276, 277, 278, 280, 286, 328, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 361, 362, 364, 367], "n": [1, 2, 3, 6, 7, 23, 26, 31, 32, 39, 86, 90, 106, 112, 125, 132, 137, 166, 173, 197, 198, 201, 207, 242, 243, 248, 257, 265, 273, 287, 321, 344, 346, 350, 352, 354, 361, 364, 367], "b": [1, 2, 3, 7, 8, 22, 25, 27, 33, 35, 37, 38, 39, 40, 41, 77, 197, 198, 201, 202, 210, 211, 212, 213, 219, 228, 251, 288, 289, 290, 291, 292, 294, 307, 344, 350, 363, 364], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 79, 82, 83, 86, 89, 90, 92, 93, 95, 96, 102, 103, 104, 106, 109, 110, 111, 112, 119, 121, 123, 125, 126, 128, 129, 131, 132, 141, 142, 143, 147, 152, 155, 157, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 173, 183, 184, 185, 187, 188, 189, 190, 191, 195, 196, 197, 199, 200, 201, 202, 203, 205, 207, 209, 210, 211, 212, 213, 214, 217, 221, 222, 225, 226, 227, 229, 231, 235, 236, 238, 239, 240, 243, 246, 247, 250, 251, 254, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 286, 287, 288, 289, 290, 291, 294, 295, 296, 315, 322, 336, 340, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 72, 77, 86, 87, 89, 90, 103, 104, 106, 112, 121, 125, 130, 133, 134, 147, 151, 152, 160, 162, 169, 171, 173, 174, 181, 197, 201, 237, 243, 247, 279, 288, 289, 290, 291, 292, 294, 307, 314, 324, 326, 340, 343, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "p": [1, 2, 4, 68, 71, 87, 110, 111], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 51, 53, 55, 57, 58, 59, 82, 83, 86, 90, 95, 96, 106, 107, 108, 112, 129, 130, 131, 133, 147, 152, 156, 160, 161, 163, 164, 165, 167, 169, 170, 173, 197, 200, 201, 205, 210, 222, 226, 227, 247, 250, 256, 257, 258, 260, 261, 263, 264, 265, 271, 273, 275, 276, 277, 278, 280, 326, 338, 339, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 367], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 77, 86, 90, 106, 112, 130, 131, 133, 163, 165, 174, 203, 205, 211, 244, 247, 248, 250, 251, 256, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 288, 289, 290, 291, 307, 315, 326, 338, 339, 340, 342, 344, 346, 349, 350, 351, 352, 353, 354, 356, 357, 361, 362, 364, 367], "dimens": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 53, 55, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 106, 112, 113, 114, 124, 125, 126, 137, 143, 145, 148, 155, 158, 163, 166, 171, 184, 185, 186, 191, 199, 201, 203, 205, 208, 209, 210, 212, 213, 218, 219, 223, 224, 225, 226, 229, 237, 242, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 340, 344, 349, 350, 351, 352, 353, 361, 362, 364], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 86, 87, 90, 95, 96, 99, 105, 106, 107, 108, 109, 112, 118, 124, 126, 148, 155, 161, 162, 165, 171, 173, 181, 195, 197, 201, 203, 204, 242, 243, 259, 265, 268, 272, 273, 275, 276, 280, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 324, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "adapt": [1, 119, 159, 272, 349, 362], "equal": [1, 13, 14, 16, 51, 66, 73, 74, 103, 106, 112, 142, 143, 184, 185, 197, 199, 201, 203, 205, 211, 279, 283, 315, 338, 339, 349, 351, 363], "introduc": [1, 2, 106, 112, 197, 199, 201, 203, 243, 349], "some": [1, 2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 46, 53, 59, 62, 63, 68, 77, 79, 82, 83, 86, 90, 95, 96, 100, 101, 106, 107, 108, 112, 113, 114, 121, 147, 165, 167, 173, 174, 187, 199, 203, 224, 248, 249, 250, 307, 315, 327, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 364, 366, 367], "confus": [1, 31, 86, 90, 106, 112, 165, 173], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 33, 34, 35, 38, 40, 41, 44, 51, 53, 55, 57, 58, 59, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 79, 86, 89, 90, 91, 102, 106, 112, 128, 131, 132, 149, 156, 163, 167, 171, 173, 197, 199, 203, 213, 214, 236, 238, 239, 246, 248, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 321, 333, 338, 339, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 361, 362, 363, 366, 367], "better": [1, 3, 8, 9, 13, 14, 199, 203, 345, 351, 353, 362], "consist": [1, 2, 3, 31, 34, 37, 40, 41, 54, 57, 86, 90, 106, 112, 141, 170, 173, 185, 205, 349, 350, 351, 362, 363, 367], "interact": [1, 2, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 57, 86, 90, 100, 101, 106, 112, 165, 244, 248, 349, 351, 353, 354, 356, 361, 362, 367], "keep": [1, 3, 4, 7, 8, 14, 34, 37, 40, 41, 72, 77, 106, 112, 143, 147, 169, 171, 173, 181, 243, 317, 324, 349, 350, 351, 352, 356, 357, 358, 361, 362, 364, 366, 367], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 51, 54, 147, 169, 258, 260, 263, 265, 276, 278, 280, 349, 350, 354, 355, 361, 364, 367], "interchang": [1, 351, 353, 357, 363, 364], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 100, 101, 106, 112, 113, 114, 132, 142, 153, 165, 173, 174, 184, 185, 193, 197, 199, 203, 205, 210, 211, 238, 244, 248, 257, 259, 260, 263, 264, 265, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 283, 288, 320, 324, 345, 349, 350, 352, 356, 361, 362, 364, 367], "wherea": [1, 2, 21, 57, 82, 83, 84, 85, 89, 91, 92, 95, 96, 103, 104, 109, 132, 173, 273, 346, 357], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 46, 54, 57, 59, 65, 66, 86, 90, 102, 106, 112, 147, 161, 165, 169, 171, 173, 199, 201, 203, 208, 209, 239, 240, 243, 244, 248, 261, 264, 265, 278, 286, 288, 289, 290, 291, 292, 349, 350, 351, 353, 355, 356, 357, 361, 362, 363], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 51, 57, 66, 73, 77, 86, 90, 106, 112, 148, 249, 250, 315, 324, 344, 349, 350, 351, 356, 360, 366, 367], "doesn": [1, 4, 11, 77, 103, 130, 133, 353], "understood": [1, 349], "serv": [1, 17, 19, 20, 92, 364, 367], "basi": [1, 77, 210, 364], "simplest": [1, 77, 251, 349, 351, 352, 354, 361, 364, 367], "scenario": [1, 2, 100, 101, 106, 113, 114, 349, 354, 361, 362], "transit": [1, 31, 53, 57, 74, 77, 86, 90, 106, 112, 173, 253, 349, 352, 353, 354, 356, 362, 364], "sampl": [1, 4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 79, 86, 90, 102, 105, 106, 112, 124, 125, 148, 152, 175, 176, 179, 180, 183, 192, 200, 207, 208, 209, 217, 218, 221, 226, 227, 231, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 257, 258, 259, 260, 261, 263, 272, 274, 275, 280, 315, 321, 324, 327, 342, 344, 349, 350, 351, 352, 353, 354, 356, 358, 361, 363, 366, 367], "attent": [1, 2, 8, 349, 352, 367], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 86, 90, 102, 106, 112, 129, 132, 143, 147, 161, 164, 165, 167, 169, 173, 181, 183, 194, 195, 197, 201, 207, 220, 224, 231, 237, 238, 239, 242, 243, 246, 247, 248, 249, 250, 252, 256, 260, 261, 263, 287, 288, 289, 290, 291, 292, 294, 316, 320, 336, 344, 346, 349, 350, 351, 353, 354, 355, 356, 357, 361, 362, 367], "built": [1, 2, 3, 5, 7, 68, 82, 83, 89, 95, 96, 105, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 281, 286, 334, 336, 337, 340, 349, 350, 351, 352, 355, 357, 364, 367], "flatten": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 77, 122, 137, 321, 352, 361], "suffici": [1, 3, 4, 349], "preprocess": [1, 2, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 350], "popul": [1, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 140, 161, 349, 351, 352, 354, 356, 362, 364], "replaybuff": [1, 2, 34, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 80, 125, 148, 152, 173, 261, 266, 286, 334, 336, 342, 351, 356, 358, 361, 363, 364, 366], "lazytensorstorag": [1, 2, 34, 37, 40, 41, 65, 77, 152, 173, 351, 358, 361, 364], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 37, 77, 86, 87, 90, 106, 112, 118, 122, 141, 161, 173, 229, 237, 242, 245, 267, 269, 288, 291, 299, 300, 304, 305, 336, 345, 349, 350, 361, 364, 366, 367], "reshap": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 73, 77, 122, 199, 203, 205, 351, 361], "extend": [1, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 73, 74, 76, 77, 78, 80, 81, 124, 152, 173, 321, 346, 349, 350, 351, 352, 356, 358, 361, 363, 364, 366], "slice": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 124, 364], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 77, 94, 356, 361], "achiev": [1, 2, 3, 4, 31, 86, 90, 94, 106, 112, 160, 173, 182, 321, 346, 349, 350, 351, 352, 361, 362, 364, 367], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 44, 57, 59, 60, 77, 86, 87, 90, 94, 106, 107, 112, 113, 114, 122, 125, 147, 164, 165, 167, 170, 171, 173, 178, 181, 184, 185, 187, 188, 189, 190, 191, 196, 199, 203, 205, 206, 210, 211, 236, 248, 261, 266, 276, 278, 286, 307, 321, 328, 329, 330, 336, 338, 339, 344, 349, 350, 351, 352, 354, 357, 361, 362, 363, 364, 366, 367], "multidimension": [1, 2, 40, 65, 66, 364], "slicesampl": [1, 2, 51, 66, 364], "sampler": [1, 2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 148, 261, 266, 286, 349, 351, 361, 364], "One": [1, 2, 4, 8, 30, 32, 44, 77, 82, 83, 106, 112, 125, 152, 167, 217, 235, 247, 251, 279, 283, 311, 349, 350, 364, 367], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 73, 74, 75, 76, 77, 79, 82, 86, 87, 90, 95, 106, 107, 108, 109, 112, 113, 121, 122, 125, 128, 134, 138, 141, 143, 145, 156, 160, 161, 162, 165, 166, 171, 173, 184, 185, 194, 199, 203, 205, 208, 209, 210, 211, 220, 231, 237, 238, 242, 244, 245, 246, 247, 248, 251, 252, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 279, 280, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 349, 350, 351, 352, 354, 360, 362, 364], "ensur": [1, 2, 3, 31, 34, 40, 65, 66, 72, 86, 90, 106, 112, 125, 147, 159, 165, 167, 171, 173, 237, 344, 350, 351, 362, 364], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 77, 79, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 105, 106, 107, 108, 110, 111, 112, 113, 114, 122, 124, 126, 130, 133, 134, 135, 141, 143, 145, 149, 150, 152, 156, 159, 161, 163, 171, 172, 173, 174, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 225, 228, 231, 232, 233, 234, 236, 237, 238, 242, 244, 245, 246, 247, 250, 251, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 283, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 315, 321, 324, 336, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 363, 364, 366, 367], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 51, 200, 226, 227, 256, 343, 349, 350, 351, 352, 355, 361, 363, 367], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 33, 35, 75, 77, 86, 90, 94, 99, 106, 107, 108, 112, 125, 128, 137, 147, 150, 162, 165, 169, 171, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 212, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 245, 246, 247, 251, 254, 256, 265, 276, 277, 278, 280, 287, 292, 307, 324, 340, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 364, 366, 367], "dimension": [1, 34, 37, 40, 41, 132, 199, 203, 288, 293, 301, 361], "num_slic": [1, 2, 51, 57, 66, 73, 74, 364], "4": [1, 2, 3, 7, 23, 25, 26, 27, 31, 32, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 73, 74, 79, 82, 83, 84, 85, 86, 90, 95, 96, 97, 98, 99, 102, 104, 106, 110, 111, 112, 119, 121, 122, 125, 134, 152, 159, 160, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 201, 202, 204, 205, 207, 210, 211, 214, 215, 216, 217, 218, 219, 220, 228, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 306, 344, 348, 349, 350, 351, 352, 354, 356, 357, 361, 362, 363, 364, 365, 366, 367], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 122, 152, 352, 356, 364, 366], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 122, 125, 152, 324, 327, 336, 346, 349, 350, 351, 352, 356, 358, 361, 364, 366], "dim": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 125, 126, 145, 161, 166, 171, 202, 204, 224, 229, 242, 340, 350, 351, 362, 364], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 53, 55, 57, 66, 73, 74, 86, 90, 94, 103, 106, 109, 112, 122, 129, 147, 161, 164, 165, 167, 169, 173, 205, 229, 247, 249, 250, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 307, 309, 344, 346, 349, 350, 351, 352, 353, 354, 355, 357, 361, 362, 364, 367], "ndim": [1, 2, 34, 37, 40, 41, 62, 63, 77, 79, 86, 90, 106, 112, 173, 242], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 77, 86, 90, 103, 107, 108, 109, 112, 337, 342, 349, 350, 351, 353, 360, 366, 367], "make_env": [1, 3, 106, 112, 114, 171, 329, 330, 349, 350, 367], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 65, 71, 86, 90, 106, 112, 165, 193, 220, 238, 245, 246, 247, 248, 266, 326, 342, 346, 349, 350, 353, 354, 358, 364, 367], "behav": [1, 3, 92, 102, 197, 201, 217, 264, 271, 363], "iif": 1, "accordingli": [1, 159, 160, 201, 245, 352], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 93, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 119, 121, 122, 125, 129, 132, 134, 135, 141, 143, 145, 147, 149, 150, 152, 155, 156, 159, 160, 161, 163, 164, 165, 167, 169, 173, 178, 183, 184, 185, 187, 188, 189, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 210, 211, 214, 217, 219, 229, 231, 232, 233, 234, 237, 238, 244, 246, 247, 250, 251, 252, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 294, 297, 298, 299, 300, 302, 303, 304, 305, 307, 323, 344, 346, 348, 349, 350, 351, 352, 353, 354, 356, 357, 361, 362, 363, 364, 365, 366, 367], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 57, 65, 77, 121, 134, 174, 237, 247, 354, 355, 357, 361], "current": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 74, 86, 90, 92, 103, 106, 112, 121, 122, 125, 148, 160, 161, 162, 164, 165, 173, 175, 176, 181, 195, 204, 222, 242, 243, 257, 259, 266, 272, 275, 277, 278, 310, 346, 349, 350, 351, 352, 355, 361, 362, 364, 366, 367], "fulli": [1, 8, 31, 86, 90, 106, 112, 173, 198, 202, 350, 355, 362, 364], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 103, 106, 107, 108, 112, 113, 114, 119, 121, 137, 147, 148, 152, 165, 167, 171, 173, 174, 182, 184, 185, 191, 205, 213, 236, 242, 247, 248, 249, 250, 257, 258, 260, 261, 263, 264, 265, 271, 273, 275, 276, 277, 278, 280, 288, 290, 291, 312, 324, 343, 349, 350, 351, 354, 355, 361, 362, 364, 366, 367], "consecut": [1, 3, 51, 72, 94, 203, 243, 307, 352, 353, 356, 361, 364, 367], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 57, 86, 87, 89, 90, 103, 104, 106, 112, 147, 169, 173, 324, 340, 350, 351, 353, 354], "therebi": [1, 345, 349, 350], "interrupt": [1, 2, 90, 242, 294], "These": [1, 2, 7, 31, 39, 54, 59, 86, 90, 106, 112, 113, 147, 169, 173, 344, 345, 349, 351, 361, 362, 364, 367], "tool": [1, 2, 3, 5, 352, 353, 362, 364, 367], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 86, 89, 90, 106, 112, 116, 118, 204, 346, 349, 351, 352, 353, 356, 357, 362], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 342], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 342], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 135, 141, 143, 145, 147, 149, 150, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 173, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 255, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 309, 315, 322, 323, 333, 336, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "multiprocess": [1, 2, 3, 17, 18, 19, 51, 59, 87, 88, 106, 112, 171, 349, 350, 351, 352, 361, 362, 363, 367], "synchron": [1, 13, 18, 20, 103, 338, 339, 350, 351], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 86, 90, 103, 106, 112, 130, 133, 160, 165, 171, 173, 175, 179, 180, 192, 199, 200, 203, 217, 225, 226, 227, 244, 248, 273, 320, 349, 350, 352, 361, 366, 367], "find": [1, 4, 6, 7, 17, 18, 19, 34, 36, 42, 73, 74, 201, 235, 243, 318, 322, 349, 350, 354, 355, 361], "folder": [1, 2, 33, 35, 38, 113, 350], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 87, 89, 90, 91, 92, 100, 101, 102, 106, 107, 108, 112, 113, 114, 115, 124, 125, 128, 129, 130, 131, 133, 136, 141, 142, 143, 147, 155, 157, 161, 162, 164, 165, 167, 169, 171, 173, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 211, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 247, 248, 250, 251, 254, 268, 273, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 319, 324, 327, 338, 339, 340, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 366, 367], "variou": [1, 2, 3, 199, 203, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 281, 286, 307, 338, 339, 349, 350, 351, 353, 354, 355, 357, 361, 364, 367], "machin": [1, 2, 7, 17, 18, 19, 31, 56, 94, 361], "wonder": 1, "why": [1, 2, 3, 181, 362, 367], "instead": [1, 4, 7, 8, 11, 26, 31, 57, 86, 90, 106, 112, 137, 161, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 257, 259, 261, 264, 265, 266, 271, 272, 275, 276, 277, 278, 286, 288, 292, 296, 340, 344, 353, 354, 358, 362, 364, 367], "lower": [1, 2, 3, 20, 24, 128, 171, 221, 222, 251, 351, 362], "io": [1, 51, 57, 95, 96, 103, 201, 202], "footprint": [1, 2, 364], "commun": [1, 2, 3, 106, 343, 351, 367], "yet": [1, 82, 83, 95, 96, 363], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 47, 48, 49, 53, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 102, 103, 104, 106, 109, 112, 113, 114, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 143, 145, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 178, 181, 182, 194, 220, 222, 231, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 251, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 333, 344, 349, 350, 351, 352, 353, 354, 360, 361, 366], "plai": [1, 3, 107, 108, 125, 350, 351, 355, 364, 367], "role": [1, 3, 101, 350, 355, 367], "opposit": 1, "direct": [1, 2, 31, 86, 90, 106, 112, 173, 197, 201, 273, 350, 355], "sinc": [1, 2, 3, 4, 5, 7, 31, 34, 37, 40, 41, 51, 59, 74, 77, 86, 90, 106, 107, 108, 109, 112, 173, 174, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 251, 254, 307, 349, 350, 351, 352, 353, 354, 355, 362, 363, 364, 366, 367], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 58, 59, 103, 288, 289, 290, 291, 352, 361], "share": [1, 3, 6, 8, 22, 33, 35, 38, 62, 63, 64, 66, 73, 75, 76, 79, 87, 106, 112, 171, 199, 203, 210, 211, 232, 233, 234, 257, 259, 260, 264, 265, 271, 272, 275, 276, 277, 278, 280, 340, 342, 344, 351, 352, 358, 360, 361, 366, 367], "among": [1, 3, 107, 108, 361], "prohibit": [1, 3, 77], "slow": [1, 3, 4, 33, 35, 38], "compar": [1, 3, 57, 77, 320, 345, 349, 351, 354, 355, 361, 364, 367], "gpu": [1, 7, 8, 31, 62, 63, 79, 86, 90, 94, 106, 112, 173, 349, 351, 352, 361, 367], "nativ": [1, 7, 9, 55, 86, 90, 106, 112, 125, 307, 352, 364], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 40, 51, 65, 66, 77, 82, 83, 90, 121, 143, 171, 183, 192, 195, 197, 199, 201, 203, 204, 207, 218, 225, 235, 244, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 278, 280, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 344, 345, 349, 350, 351, 354, 361, 362, 364, 366, 367], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 71, 73, 74, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 106, 109, 112, 113, 114, 121, 122, 126, 128, 129, 147, 155, 156, 161, 163, 164, 165, 167, 169, 173, 199, 203, 204, 208, 209, 210, 231, 235, 236, 237, 239, 240, 242, 243, 244, 245, 247, 248, 251, 257, 258, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 282, 286, 288, 289, 290, 291, 292, 296, 314, 337, 349, 350, 351, 354, 357, 361, 364, 367], "build": [1, 3, 7, 22, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 91, 92, 95, 96, 100, 101, 103, 106, 109, 112, 113, 114, 152, 171, 173, 183, 199, 203, 207, 241, 244, 248, 324, 331, 332, 334, 335, 344, 346, 351, 352, 354, 355, 356, 357, 361, 362, 363, 366, 367], "mani": [1, 2, 3, 4, 37, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 103, 104, 109, 257, 259, 265, 272, 275, 276, 280, 344, 349, 350, 351, 353, 354, 356, 358, 361, 362, 364, 367], "eg": [1, 2, 3, 11, 33, 35, 38, 62, 63, 64, 75, 76, 79, 84, 85, 86, 89, 90, 91, 92, 94, 106, 109, 112, 132, 159, 165, 210, 236, 307], "gymnasium": [1, 3, 5, 11, 86, 89, 90, 91, 97, 98, 106, 112, 116, 118, 135, 156, 159, 170, 350, 351, 362, 366], "warn": [1, 3, 235, 239, 240, 243, 350], "quickli": [1, 3, 350, 361, 367], "becom": [1, 3, 4, 20, 197, 201, 361, 367], "quit": [1, 3, 51, 86, 90, 106, 112, 344, 349, 350, 351, 354, 361, 367], "annoi": [1, 3], "By": [1, 2, 3, 32, 84, 85, 86, 89, 90, 91, 92, 100, 101, 106, 107, 108, 109, 112, 113, 114, 229, 248, 273, 320, 340, 349, 363, 364, 367], "filter": [1, 2, 3, 4, 44, 66, 73, 74, 257, 258, 260, 264, 265, 271, 275, 276, 278, 353], "out": [1, 2, 3, 4, 5, 9, 20, 31, 44, 53, 57, 66, 73, 74, 86, 90, 106, 107, 108, 112, 161, 173, 174, 197, 198, 201, 208, 209, 212, 213, 231, 236, 237, 238, 243, 244, 245, 246, 247, 248, 284, 285, 346, 349, 350, 351, 352, 353, 354, 356, 361, 362, 364, 366, 367], "still": [1, 2, 3, 9, 57, 82, 83, 86, 90, 95, 96, 106, 112, 235, 272, 273, 349, 350, 352, 360, 362, 364, 367], "wish": [1, 3, 13, 14, 16, 57, 118, 355, 364], "displai": [1, 3, 7, 86, 90, 106, 112, 324, 346, 349, 350, 361, 362], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 122, 125, 126, 129, 130, 133, 134, 135, 137, 140, 141, 142, 143, 145, 147, 148, 149, 150, 152, 154, 155, 156, 159, 161, 163, 164, 165, 166, 167, 169, 171, 173, 174, 181, 182, 183, 184, 185, 187, 193, 194, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 219, 220, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 286, 288, 289, 290, 291, 297, 298, 299, 300, 302, 303, 304, 305, 307, 314, 317, 318, 320, 321, 322, 324, 333, 340, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "central": [2, 210, 349, 350, 353, 361, 364], "part": [2, 4, 8, 31, 39, 51, 54, 55, 57, 58, 59, 82, 86, 90, 95, 106, 112, 124, 143, 152, 155, 173, 181, 199, 203, 252, 315, 340, 349, 351, 352, 358, 362, 367], "algorithm": [2, 3, 8, 9, 102, 257, 275, 276, 278, 342, 345, 346, 349, 350, 351, 352, 355, 356, 357, 361, 363, 364], "implement": [2, 3, 9, 11, 13, 14, 15, 31, 75, 86, 90, 102, 103, 106, 112, 122, 129, 130, 131, 135, 138, 141, 149, 150, 156, 159, 164, 165, 171, 173, 184, 197, 198, 199, 200, 201, 202, 203, 225, 226, 227, 257, 258, 262, 263, 264, 271, 273, 274, 275, 277, 278, 315, 329, 333, 344, 346, 349, 350, 351, 352, 354, 355, 356, 361, 362, 366], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 34, 37, 39, 40, 41, 51, 53, 57, 59, 72, 74, 77, 82, 83, 86, 87, 90, 94, 95, 96, 106, 112, 125, 141, 147, 150, 167, 170, 171, 173, 174, 183, 203, 204, 210, 211, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 307, 343, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "give": [2, 3, 7, 40, 54, 86, 90, 102, 106, 112, 125, 343, 345, 349, 350, 361, 362, 363, 366], "abil": [2, 273, 362, 364], "panel": [2, 351], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 53, 59, 77, 122, 125, 134, 199, 203, 264, 271, 278, 281, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "includ": [2, 3, 4, 7, 9, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 79, 86, 90, 102, 106, 112, 160, 165, 171, 173, 273, 278, 327, 344, 346, 349, 350, 351, 352, 361, 362, 364, 367], "almost": [2, 352], "physic": [2, 6, 7, 106, 109, 346, 349, 361, 362], "theori": 2, "crude": 2, "made": [2, 3, 31, 37, 51, 62, 63, 64, 75, 76, 79, 86, 90, 106, 112, 173, 243, 261, 286, 349, 350, 352, 361, 363, 364], "liststorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 364], "veri": [2, 3, 95, 96, 350, 353, 356, 362, 364, 366, 367], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 32, 33, 35, 38, 51, 57, 66, 68, 71, 73, 74, 82, 83, 86, 90, 95, 96, 106, 112, 121, 122, 150, 173, 181, 205, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 281, 283, 286, 344, 346, 349, 351, 352, 353, 354, 355, 361, 362, 364, 367], "complex": [2, 31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 349, 350, 353, 354], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 119, 121, 122, 124, 125, 126, 129, 130, 132, 133, 134, 135, 137, 140, 143, 145, 147, 148, 149, 150, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 257, 258, 260, 261, 263, 264, 265, 268, 269, 271, 273, 275, 276, 277, 278, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 333, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 366, 367], "contigu": [2, 8, 54, 57, 58, 86, 90, 106, 112, 178, 351, 361, 362, 364, 366, 367], "tensorstorag": [2, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 356, 364], "lazymemmapstorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 124, 125, 349, 350, 352, 356, 363, 364], "citizen": 2, "pytre": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 76, 77, 84, 85, 86, 90, 106, 112, 119, 132, 134, 140, 141, 143, 148, 156, 173, 181, 187, 193, 194, 199, 202, 203, 204, 205, 214, 218, 219, 220, 237, 238, 242, 245, 246, 251, 257, 258, 260, 264, 265, 267, 271, 273, 275, 276, 277, 278, 280, 288, 289, 290, 291, 318, 320, 322, 331, 332, 364], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 35, 38, 44, 66, 71, 73, 74, 86, 89, 90, 91, 100, 101, 106, 112, 113, 114, 161, 165, 173, 244, 248, 278, 320, 338, 339, 340, 346, 350, 351, 353, 355, 362, 367], "nest": [2, 3, 25, 27, 31, 33, 35, 37, 38, 47, 62, 63, 68, 79, 86, 89, 90, 91, 106, 112, 125, 159, 162, 173, 182, 242, 288, 289, 290, 291, 292, 346, 350, 351, 361, 362, 364, 366], "construct": [2, 3, 5, 31, 34, 37, 40, 41, 51, 68, 86, 89, 90, 106, 107, 112, 130, 133, 173, 174, 199, 203, 222, 248, 324, 344, 350, 351, 352, 354, 362, 364, 367], "ram": [2, 89, 91, 364, 367], "prealloc": [2, 3, 362], "ve": [2, 39, 349, 352, 358], "been": [2, 3, 5, 7, 8, 17, 19, 20, 39, 68, 72, 86, 90, 94, 100, 101, 106, 112, 141, 159, 160, 164, 197, 201, 235, 240, 242, 243, 349, 350, 351, 352, 360, 361, 362, 364, 367], "here": [2, 3, 4, 7, 8, 9, 10, 58, 59, 77, 84, 85, 86, 90, 94, 106, 107, 108, 112, 125, 314, 344, 345, 349, 350, 351, 352, 353, 354, 356, 358, 361, 362, 364, 366, 367], "start": [2, 3, 4, 5, 13, 20, 44, 51, 59, 66, 73, 74, 87, 99, 106, 112, 181, 319, 348, 349, 350, 359, 361, 362, 364, 365, 367], "replay_buff": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 321, 336, 349, 350, 351, 356, 361, 364], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 98, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 121, 122, 124, 125, 128, 134, 135, 140, 141, 143, 145, 147, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 164, 169, 171, 173, 178, 181, 182, 183, 187, 188, 189, 190, 193, 194, 196, 197, 198, 199, 201, 202, 203, 205, 207, 210, 211, 214, 219, 220, 228, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 307, 317, 320, 333, 336, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "rb": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 125, 152, 173, 350, 352, 356, 358, 361, 363, 364, 366], "10": [2, 7, 21, 22, 25, 31, 34, 37, 39, 40, 41, 42, 44, 62, 63, 65, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 102, 106, 107, 108, 110, 111, 112, 113, 114, 119, 122, 124, 125, 160, 162, 163, 173, 183, 186, 187, 189, 191, 193, 197, 198, 201, 202, 204, 207, 218, 229, 239, 240, 243, 244, 251, 258, 261, 263, 265, 275, 276, 277, 280, 286, 288, 289, 290, 291, 294, 307, 315, 346, 348, 349, 350, 351, 352, 353, 354, 358, 361, 362, 364, 365, 366, 367], "add": [2, 3, 4, 6, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 68, 69, 77, 78, 80, 81, 86, 90, 106, 112, 125, 141, 165, 173, 199, 203, 212, 241, 257, 319, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 364, 366], "string": [2, 17, 18, 19, 31, 36, 44, 60, 86, 90, 100, 106, 112, 118, 147, 159, 169, 173, 199, 203, 237, 242, 244, 245, 256, 306, 323, 333, 345, 349, 351, 352, 364], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 73, 74, 77, 79, 105, 106, 112, 125, 148, 157, 160, 184, 185, 197, 198, 201, 231, 235, 237, 242, 247, 248, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 278, 280, 315, 349, 351, 354, 356, 364, 367], "30": [2, 3, 37, 55, 121, 142, 221, 222, 309, 348, 349, 350, 351, 356, 361, 362, 364, 365], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 76, 77, 79, 86, 87, 89, 90, 99, 100, 101, 102, 106, 107, 108, 112, 113, 114, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 333, 336, 338, 339, 340, 344, 346, 349, 350, 351, 352, 355, 356, 361, 362, 364, 366, 367], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 120, 121, 122, 124, 125, 126, 127, 129, 132, 137, 138, 142, 143, 145, 147, 148, 151, 158, 159, 162, 165, 166, 167, 169, 173, 174, 178, 183, 184, 185, 186, 187, 189, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 257, 258, 259, 265, 267, 268, 272, 273, 274, 275, 276, 280, 288, 290, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 315, 316, 317, 320, 321, 324, 326, 333, 334, 338, 339, 340, 362, 364], "tell": [2, 3, 4, 7, 107, 108, 349, 352, 356, 361], "our": [2, 3, 7, 8, 17, 37, 125, 307, 344, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 363, 364, 366], "far": [2, 39, 200, 226, 227, 358, 362, 367], "restrict": [2, 3, 350, 363, 364, 367], "empti": [2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 86, 90, 105, 106, 112, 130, 133, 147, 149, 162, 165, 167, 169, 311, 349, 362, 364], "64": [2, 3, 33, 35, 38, 51, 57, 68, 125, 151, 187, 188, 196, 199, 203, 211, 219, 286, 349, 350, 351, 352, 354, 358, 360, 362, 363, 364, 366, 367], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 73, 74, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 119, 122, 123, 129, 130, 131, 132, 133, 134, 135, 141, 143, 145, 147, 149, 150, 152, 156, 159, 161, 163, 164, 165, 167, 169, 173, 174, 178, 181, 182, 183, 193, 194, 197, 198, 199, 201, 202, 203, 207, 212, 213, 219, 220, 228, 231, 232, 233, 234, 236, 237, 238, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 294, 333, 344, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "unit8": 2, "img": 2, "randint": [2, 44, 68, 163, 364], "255": [2, 68, 163, 362, 364], "uint8": [2, 3, 33, 35, 38, 46, 51, 57, 84, 85, 100, 101, 134, 145, 163, 350, 357, 363, 364, 366], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 100, 101, 102, 106, 110, 111, 112, 113, 114, 121, 122, 124, 125, 130, 133, 134, 135, 140, 141, 145, 149, 150, 152, 155, 156, 159, 161, 170, 171, 173, 178, 181, 183, 198, 199, 202, 203, 207, 222, 242, 253, 257, 258, 260, 261, 263, 264, 265, 266, 271, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 307, 318, 320, 322, 350, 352, 354, 357, 358, 360, 362, 363, 366, 367], "ask": [2, 8, 51, 57, 66, 73, 74, 307, 351, 352, 353, 354, 361, 363, 367], "do": [2, 3, 4, 7, 59, 86, 90, 106, 112, 113, 114, 148, 170, 171, 181, 211, 212, 233, 288, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 366, 367], "automat": [2, 3, 5, 59, 62, 63, 68, 79, 86, 89, 90, 91, 106, 107, 108, 112, 121, 130, 133, 143, 170, 184, 231, 242, 244, 344, 349, 351, 353, 354, 361, 362, 364, 366], "hand": [2, 3, 7, 20, 25, 361, 362], "look": [2, 3, 5, 7, 8, 31, 86, 90, 99, 106, 107, 108, 112, 147, 148, 167, 173, 244, 248, 249, 250, 345, 351, 352, 353, 354, 355, 356, 358, 361, 362, 363, 364, 366, 367], "assum": [2, 3, 6, 25, 32, 39, 40, 41, 53, 55, 57, 58, 59, 73, 86, 90, 106, 112, 124, 127, 137, 147, 148, 155, 161, 165, 167, 169, 178, 199, 203, 204, 229, 251, 261, 266, 278, 286, 297, 298, 299, 300, 302, 303, 304, 305, 307, 349, 351, 352, 360, 362], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 34, 37, 40, 41, 53, 72, 84, 85, 86, 89, 91, 92, 161, 200, 219, 226, 227, 349, 352, 361, 362, 364, 366], "leav": [2, 25, 33, 35, 37, 38, 86, 174, 182, 349, 356, 364], "tree": [2, 33, 35, 38, 86, 90, 106, 112, 364], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 84, 85, 86, 87, 89, 90, 91, 92, 106, 112, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 143, 145, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 184, 185, 192, 199, 203, 205, 210, 211, 225, 231, 236, 237, 244, 245, 247, 248, 251, 252, 258, 265, 272, 274, 276, 278, 321, 326, 344, 349, 351, 360, 361, 362, 364, 367], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 125, 350, 351, 356, 364, 366, 367], "throw": [2, 31, 33, 35, 38, 86, 90, 106, 112, 173, 367], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 124, 125, 129, 130, 133, 134, 135, 145, 149, 150, 152, 156, 159, 161, 164, 165, 173, 181, 182, 183, 191, 193, 194, 199, 203, 207, 219, 220, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 307, 315, 321, 333, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "max": [2, 22, 32, 35, 40, 44, 60, 65, 66, 77, 132, 162, 225, 226, 227, 236, 243, 258, 259, 265, 274, 276, 278, 349, 351, 352, 358, 361], "label": [2, 35, 36, 39, 44, 349, 364], "100": [2, 13, 14, 15, 16, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 82, 83, 86, 90, 95, 96, 106, 112, 128, 134, 143, 152, 157, 159, 173, 210, 238, 242, 307, 316, 336, 350, 351, 352, 353, 355, 358, 360, 361, 362, 363, 364, 366, 367], "rb_pytre": 2, "randn": [2, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 124, 143, 178, 186, 187, 191, 193, 194, 197, 198, 201, 202, 204, 208, 209, 210, 214, 217, 218, 220, 231, 232, 233, 234, 236, 237, 244, 245, 247, 250, 251, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 288, 289, 290, 291, 323, 344, 364, 366, 367], "c": [2, 3, 6, 7, 25, 33, 35, 37, 38, 40, 41, 56, 143, 163, 201, 202, 350, 364], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 53, 63, 73, 74, 77, 79, 86, 90, 106, 112, 122, 124, 126, 130, 132, 133, 143, 149, 152, 173, 178, 181, 183, 188, 189, 190, 196, 197, 198, 199, 201, 202, 203, 204, 208, 209, 211, 219, 228, 239, 240, 243, 246, 254, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 294, 352, 364, 366], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 90, 93, 106, 112, 118, 122, 125, 128, 130, 133, 141, 150, 157, 171, 174, 178, 211, 214, 229, 288, 289, 290, 291, 315, 323, 356, 360, 364, 367], "len": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 79, 145, 184, 185, 205, 211, 349, 356, 358, 362, 363, 364, 366], "ambigu": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 90, 106, 112, 122, 129, 147, 161, 164, 165, 167, 169, 173, 247, 345, 349, 353, 362], "deal": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 349, 351, 361, 364], "interpret": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 350], "put": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 90, 100, 101, 113, 114, 171, 314, 340, 344, 350, 351, 352, 353, 362], "solv": [2, 4, 9, 10, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 343, 349, 350, 351, 356, 358, 361, 362, 364], "clear": [2, 25, 27, 28, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 94, 106, 112, 173, 316, 353, 356], "cut": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "distinct": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 122, 355, 360], "view": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 106, 112, 119, 173, 194, 197, 201, 205, 353, 362, 364, 366, 367], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 103, 104, 106, 109, 112, 113, 114, 125, 126, 159, 160, 161, 162, 165, 173, 182, 184, 185, 205, 208, 209, 211, 242, 243, 245, 246, 254, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 328, 340, 343, 346, 351, 352, 356, 357, 358, 362, 364, 367], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 25, 27, 57, 82, 83, 86, 90, 94, 95, 96, 99, 106, 107, 108, 112, 121, 130, 133, 148, 205, 219, 242, 244, 248, 249, 250, 254, 288, 289, 290, 291, 344, 349, 350, 351, 353, 355, 360, 361, 362, 363, 364, 367], "collate_fn": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 364, 366], "__init__": [2, 3, 7, 86, 102, 118, 119, 122, 130, 133, 149, 183, 194, 197, 201, 207, 252, 258, 260, 265, 271, 276, 278, 280, 346, 362, 367], "major": 2, "worri": [2, 42], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 62, 63, 64, 66, 73, 75, 76, 79, 86, 87, 90, 94, 106, 112, 121, 182, 349, 351, 353, 361, 362, 367], "though": [2, 4, 86, 90, 106, 112, 205, 351, 361], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 39, 43, 45, 46, 86, 90, 106, 112, 142, 161, 200, 226, 227, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 350, 354, 357, 362, 364, 367], "latter": [2, 17, 18, 19, 31, 53, 86, 90, 106, 112, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 275, 338, 339], "inv": [2, 3, 128, 132, 145, 152, 157, 362], "method": [2, 3, 4, 11, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 77, 79, 86, 89, 90, 91, 92, 106, 109, 112, 121, 122, 125, 129, 130, 131, 134, 135, 137, 141, 143, 147, 149, 150, 151, 152, 156, 159, 161, 164, 165, 167, 169, 173, 183, 204, 231, 232, 233, 234, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 292, 306, 337, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 362, 364, 367], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 45, 46, 86, 90, 106, 112, 132, 135, 156, 163, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 288, 364], "multithread": [2, 3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 103, 104, 356, 364], "thread": [2, 13, 14, 16, 33, 35, 38, 82, 83, 95, 96, 106, 112], "prefetch": [2, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 349, 350, 352, 364], "advis": [2, 54, 367], "benchmark": [2, 3, 9, 83, 95, 96, 361], "techniqu": [2, 8, 106, 112, 350, 356, 364], "real": [2, 5, 57, 248, 345, 352, 362], "life": [2, 134], "adopt": [2, 3, 5, 349, 367], "throughput": [2, 9, 349], "constant": [2, 125, 143, 160, 346, 349, 351, 352, 367], "throughout": [2, 3, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 351, 367], "further": [2, 3, 5, 349, 351, 353], "refin": [2, 57, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286], "coupl": [2, 352, 354, 355, 362, 364], "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 33, 34, 35, 37, 38, 51, 53, 57, 62, 63, 66, 73, 74, 75, 76, 77, 79, 86, 87, 90, 106, 112, 119, 124, 126, 130, 132, 133, 141, 143, 148, 160, 161, 163, 165, 171, 231, 239, 240, 244, 245, 248, 288, 289, 290, 291, 292, 307, 311, 344, 348, 349, 350, 351, 352, 359, 361, 362, 364, 365, 366, 367], "first_elt": 2, "128": [2, 51, 53, 57, 74, 82, 83, 95, 96, 188, 191, 350, 352, 358, 362, 363, 364], "wa": [2, 3, 5, 7, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 106, 112, 165, 174, 182, 201, 257, 259, 270, 272, 275, 277, 279, 294, 345, 350, 351, 353, 354, 360, 364, 366], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 118, 121, 122, 125, 126, 130, 131, 132, 133, 140, 143, 149, 150, 152, 155, 159, 161, 162, 163, 171, 173, 178, 181, 182, 184, 185, 187, 188, 189, 190, 191, 194, 196, 199, 205, 208, 209, 210, 211, 214, 217, 220, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 245, 247, 250, 252, 273, 333, 336, 344, 346, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 126], "larger": [2, 4, 264, 271], "volum": 2, "due": [2, 3, 5, 355, 363, 364, 367], "serialis": [2, 33, 35, 38], "memorymappedtensor": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 309, 356, 363], "well": [2, 3, 8, 20, 22, 31, 34, 36, 37, 40, 41, 71, 75, 86, 90, 106, 112, 165, 173, 187, 201, 221, 222, 273, 292, 349, 350, 352, 353, 354, 355, 357, 363, 364, 366, 367], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 101, 106, 107, 108, 112, 113, 114, 130, 131, 133, 155, 158, 160, 166, 173, 183, 201, 247, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 314, 344, 349, 351, 352, 356], "file": [2, 6, 7, 8, 33, 35, 38, 51, 53, 54, 55, 57, 58, 59, 113, 306, 307, 309, 346, 348, 349, 350, 364, 365, 367], "locat": [2, 7, 33, 35, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 112, 134, 143, 154, 200, 214, 226, 227, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 349, 350, 351, 357, 361, 364], "improv": [2, 4, 138, 257, 345, 361, 364], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 106, 112, 351, 364], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 25, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 94, 106, 112, 119, 125, 152, 155, 162, 171, 173, 182, 239, 240, 244, 248, 272, 273, 275, 349, 350, 352, 353, 355, 357, 364], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 43, 45, 46, 66, 132, 201, 202, 264, 352, 356, 364], "sharabl": [2, 106, 112], "collabor": [2, 57], "rather": [2, 4, 76, 150, 349, 350, 351, 353, 355, 361, 364], "incur": [2, 82, 83, 95, 96], "transmiss": 2, "overhead": [2, 82, 83, 95, 96, 106, 112], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 68, 86, 90, 106, 112, 120, 121, 164, 170, 174, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 247, 248, 249, 251, 254, 273, 275, 350, 352, 356, 362, 364], "instanti": [2, 3, 20, 33, 34, 35, 37, 38, 40, 41, 94, 121, 164, 204, 211, 349, 350, 354, 355, 357, 361, 362, 364, 367], "content": [2, 8, 15, 25, 27, 33, 34, 35, 37, 38, 40, 41, 72, 86, 89, 90, 91, 103, 106, 112, 149, 184, 185, 205, 210, 211, 244, 273, 351, 362, 366], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 86, 90, 99, 100, 101, 106, 107, 108, 110, 111, 112, 113, 114, 115, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 143, 145, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 173, 178, 194, 214, 231, 232, 233, 234, 237, 244, 245, 247, 248, 250, 251, 252, 253, 278, 286, 320, 342, 344, 345, 349, 350, 351, 352, 354, 355, 363, 366], "writer": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 68, 69, 73, 77, 78, 81, 351, 364], "tensordictroundrobinwrit": [2, 68], "goe": [2, 4, 107, 108, 349, 351, 361, 367], "prioritizedsampl": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 261, 266, 286, 349, 364], "access": [2, 3, 7, 8, 31, 34, 54, 56, 86, 90, 106, 112, 147, 167, 173, 340, 343, 349, 353, 361, 362, 364], "show": [2, 31, 86, 90, 106, 112, 173, 211, 307, 344, 349, 351, 352, 361, 362, 364, 366], "tensordictreplaybuff": [2, 34, 37, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 124, 125, 321, 336, 342, 349, 350, 352, 364], "mp": [2, 17, 18, 19, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 171], "def": [2, 3, 11, 21, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 90, 102, 106, 112, 118, 119, 121, 122, 130, 133, 149, 165, 173, 183, 194, 197, 198, 201, 202, 207, 242, 244, 252, 258, 260, 265, 271, 273, 276, 278, 280, 346, 349, 350, 360, 361, 362, 364, 366, 367], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 39, 40, 65, 66, 86, 90, 102, 106, 107, 108, 112, 119, 121, 122, 130, 132, 133, 149, 159, 160, 165, 168, 171, 173, 182, 183, 197, 199, 203, 207, 235, 239, 240, 243, 244, 245, 246, 247, 248, 257, 258, 259, 260, 261, 263, 265, 266, 267, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 286, 288, 289, 290, 291, 292, 320, 324, 326, 329, 330, 335, 336, 346, 350, 351, 352, 355, 358, 361, 362, 364, 366, 367], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 97, 98, 106, 112, 119, 122, 124, 126, 130, 131, 132, 133, 140, 141, 143, 152, 155, 161, 163, 165, 171, 181, 183, 193, 194, 199, 203, 206, 207, 219, 220, 228, 231, 232, 233, 234, 236, 237, 239, 240, 243, 244, 245, 247, 250, 252, 286, 289, 290, 291, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 315, 323, 333, 344, 345, 349, 352, 361, 362, 366, 367], "__name__": [2, 21, 87, 350], "__main__": [2, 21, 87], "21": [2, 57, 58, 74, 106, 107, 108, 112, 348, 350, 358, 360, 361, 362, 365], "proc": 2, "target": [2, 4, 8, 20, 31, 86, 87, 90, 106, 112, 160, 164, 173, 247, 248, 257, 258, 259, 260, 261, 263, 265, 266, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 287, 288, 289, 290, 291, 292, 327, 335, 336, 345, 346, 352, 358, 362], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 129, 147, 149, 158, 161, 164, 165, 166, 168, 169, 173, 183, 184, 185, 193, 199, 203, 205, 206, 207, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 314, 317, 321, 324, 340, 349, 350, 364, 367], "join": [2, 87, 342, 350, 351], "now": [2, 3, 7, 34, 106, 125, 211, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 363, 364, 367], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 42, 43, 44, 45, 46, 51, 57, 60, 66, 73, 74, 76, 86, 90, 95, 96, 106, 112, 148, 171, 183, 184, 185, 187, 189, 191, 197, 201, 205, 207, 210, 211, 231, 247, 252, 315, 321, 349, 351, 352, 356, 358, 362, 364, 367], "20": [2, 44, 58, 73, 74, 77, 86, 90, 94, 106, 112, 160, 173, 196, 197, 198, 201, 202, 236, 315, 350, 351, 352, 361, 362, 364, 366, 367], "_data": [2, 362], "It": [2, 3, 4, 7, 22, 31, 36, 39, 40, 42, 44, 53, 59, 68, 71, 77, 81, 86, 90, 92, 102, 103, 106, 107, 108, 112, 113, 114, 122, 124, 134, 141, 143, 148, 160, 165, 170, 173, 174, 187, 189, 195, 210, 211, 219, 221, 222, 228, 229, 238, 239, 242, 243, 246, 248, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 286, 287, 288, 314, 320, 333, 343, 344, 345, 349, 350, 352, 353, 361, 362, 363, 364, 366, 367], "difficult": [2, 4, 106, 357], "pai": [2, 8, 349, 352], "word": [2, 3, 39, 51, 53, 55, 57, 58, 59, 273, 349, 356, 362, 367], "1m": [2, 51, 57, 327, 349, 351, 352], "doe": [2, 3, 17, 33, 34, 35, 38, 40, 44, 51, 53, 57, 65, 66, 73, 75, 76, 81, 86, 90, 100, 101, 106, 112, 113, 114, 191, 197, 198, 199, 201, 202, 203, 212, 229, 236, 249, 250, 257, 259, 266, 272, 275, 287, 324, 344, 346, 349, 350, 351, 352, 353, 356, 362, 364, 367], "howev": [2, 3, 5, 7, 31, 86, 90, 106, 112, 125, 155, 160, 165, 173, 257, 259, 272, 275, 277, 278, 344, 349, 350, 352, 355, 362, 364, 367], "capac": [2, 34, 37, 40, 41, 62, 63, 65, 73, 79, 351, 356], "There": [2, 10, 68, 199, 203, 344, 346, 351, 352, 354, 356, 361, 362, 364, 367], "circumv": 2, "account": [2, 62, 63, 79, 121, 125, 208, 209, 344, 350, 352, 364, 367], "save": [2, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 106, 112, 170, 173, 306, 307, 309, 314, 324, 346, 356, 357, 358, 361], "convent": [2, 3, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 112, 113, 114, 345, 349, 352, 361, 362], "overridden": [2, 3, 51, 54, 55, 57, 58, 59, 86, 90, 106, 112, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 288, 290, 291, 352], "dim_extend": [2, 34, 37, 40, 41], "obtain": [2, 7, 39, 51, 86, 90, 106, 112, 124, 147, 160, 169, 183, 219, 321, 349, 351, 353, 354, 355, 361], "counterpart": 2, "desir": [2, 3, 31, 86, 90, 106, 112, 120, 122, 129, 143, 145, 147, 148, 161, 164, 165, 167, 169, 173, 179, 180, 184, 185, 205, 211, 231, 237, 238, 244, 245, 246, 247, 248, 344, 349, 361, 362, 364], "diversifi": 2, "offer": [2, 3, 7, 82, 83, 86, 90, 95, 96, 100, 101, 106, 112, 344, 349, 350, 353, 355, 356, 362, 364, 367], "accomplish": [2, 174, 353], "anoth": [2, 3, 8, 57, 66, 73, 86, 89, 90, 91, 94, 106, 112, 122, 130, 131, 133, 161, 164, 205, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 344, 345, 349, 351, 352, 354, 355, 360, 361, 362, 367], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 54, 125, 174, 258, 263, 264, 271, 314, 346, 353, 363, 364, 366], "docstr": [2, 31, 86, 90, 106, 112, 173, 353, 354], "extens": [2, 34, 37, 40, 41, 74, 346, 364], "detail": [2, 3, 5, 6, 7, 31, 86, 90, 106, 107, 108, 112, 163, 165, 173, 194, 197, 201, 238, 257, 266, 275, 343, 350, 356, 360, 364], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 86, 90, 106, 112, 130, 133, 171, 173, 182, 197, 199, 201, 203, 243, 244, 248, 266, 350, 354, 360, 361, 367], "without": [2, 3, 7, 9, 31, 39, 51, 53, 57, 73, 74, 86, 90, 106, 112, 113, 114, 119, 121, 130, 133, 163, 173, 197, 198, 201, 202, 233, 234, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 287, 288, 289, 290, 291, 292, 336, 343, 344, 349, 350, 351, 353, 354, 355, 356, 361, 362, 364, 367], "happi": 2, "concaten": [2, 8, 13, 14, 20, 29, 30, 57, 125, 126, 143, 164, 201, 205, 250, 349, 350, 354, 361, 362, 364, 367], "schedul": [2, 4, 7, 39, 320, 351, 362], "transformedenv": [2, 3, 13, 31, 86, 87, 90, 106, 112, 119, 122, 125, 128, 129, 130, 133, 134, 135, 137, 140, 141, 142, 143, 145, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 164, 171, 173, 199, 203, 242, 307, 333, 349, 350, 351, 352, 353, 357, 358, 360, 361, 362, 363, 364, 366, 367], "stepcount": [2, 13, 31, 86, 90, 100, 101, 106, 112, 113, 114, 164, 173, 349, 350, 351, 352, 353, 358, 361, 366], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 31, 77, 86, 87, 90, 92, 106, 112, 121, 122, 125, 128, 129, 134, 140, 141, 143, 145, 150, 151, 152, 155, 157, 160, 161, 162, 164, 165, 171, 173, 199, 203, 242, 307, 333, 336, 342, 344, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 364, 366, 367], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 125, 152, 356, 364], "cartpol": [2, 3, 31, 84, 85, 86, 90, 106, 112, 121, 122, 125, 155, 160, 173, 242, 350, 352, 354, 356, 357, 358, 364, 367], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 31, 53, 55, 77, 86, 87, 89, 90, 91, 95, 96, 103, 106, 112, 121, 122, 125, 128, 135, 140, 141, 143, 150, 152, 155, 157, 159, 160, 161, 162, 164, 173, 199, 203, 242, 283, 297, 298, 299, 300, 302, 303, 304, 305, 344, 350, 352, 353, 354, 355, 356, 357, 358, 362, 364, 366, 367], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 82, 83, 86, 90, 95, 96, 102, 106, 107, 108, 112, 119, 122, 125, 130, 133, 141, 149, 152, 183, 194, 207, 220, 222, 231, 237, 244, 245, 258, 261, 263, 276, 278, 280, 336, 344, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 367], "8": [2, 3, 6, 7, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 73, 74, 82, 83, 84, 85, 86, 90, 106, 112, 121, 160, 184, 185, 187, 188, 196, 205, 232, 233, 234, 244, 247, 250, 271, 348, 349, 350, 354, 356, 361, 362, 363, 364, 365, 366, 367], "traj_kei": [2, 66, 73, 74, 364], "truncated_kei": [2, 66, 73, 74, 152, 159], "strict_length": [2, 51, 57, 66, 73, 74, 307], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 37, 41, 42, 62, 63, 65, 66, 74, 79, 86, 90, 106, 112, 147, 152, 155, 165, 169, 173, 198, 202, 214, 220, 238, 242, 244, 246, 247, 248, 288, 289, 290, 291, 315, 327, 349, 350, 351, 352, 354, 355, 356, 358, 361, 362, 364, 366, 367], "enumer": [2, 13, 14, 15, 20, 31, 37, 41, 74, 86, 90, 106, 112, 173, 281, 345, 349, 350, 351, 352, 358, 364, 366], "break": [2, 5, 13, 14, 15, 20, 31, 37, 41, 51, 54, 55, 57, 58, 59, 60, 66, 73, 74, 77, 86, 90, 106, 112, 122, 125, 152, 171, 173, 307, 350, 356, 358, 364, 366], "step_count": [2, 13, 14, 15, 31, 86, 90, 95, 96, 106, 112, 159, 173, 351, 352, 353, 358, 366], "32": [2, 21, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 110, 111, 113, 114, 184, 185, 186, 187, 188, 190, 191, 196, 205, 210, 211, 215, 216, 218, 219, 228, 286, 350, 351, 352, 354, 355, 362, 363, 364, 366, 367], "33": [2, 25, 31, 68, 86, 90, 106, 112, 173, 184, 185, 205, 350, 362], "34": [2, 184, 185, 205, 348, 350, 351, 362, 363, 365], "35": [2, 184, 185, 205, 350, 352, 361, 362], "36": [2, 350, 362], "37": [2, 124, 348, 350, 362, 363, 364, 365], "38": [2, 7, 350, 362, 363], "39": [2, 55, 95, 96, 350, 352, 362, 363], "40": [2, 95, 96, 350, 351, 352, 361, 362, 364], "41": [2, 350, 352, 362], "11": [2, 10, 22, 26, 32, 44, 62, 63, 65, 74, 79, 87, 163, 173, 183, 207, 348, 350, 351, 352, 361, 362, 364, 365], "12": [2, 10, 58, 62, 63, 74, 79, 95, 96, 106, 110, 111, 112, 173, 350, 351, 352, 362, 363, 364], "14": [2, 6, 11, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74, 86, 90, 106, 112, 143, 173, 348, 350, 351, 361, 362, 363, 364, 365, 366], "15": [2, 22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 74, 86, 90, 106, 112, 173, 236, 243, 267, 350, 352, 361, 362, 364], "16": [2, 3, 31, 58, 66, 74, 82, 83, 86, 90, 95, 96, 106, 112, 125, 173, 350, 351, 352, 361, 362, 363, 364], "17": [2, 58, 74, 106, 173, 333, 348, 350, 351, 352, 362, 363, 365], "could": [2, 3, 4, 6, 22, 350, 351, 357, 361, 363, 367], "sai": [2, 31, 86, 90, 106, 112, 173, 210, 363, 367], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 32, 64, 66, 73, 74, 86, 89, 90, 91, 94, 106, 112, 130, 133, 148, 155, 245, 350, 351, 352, 361, 362], "handl": [2, 3, 20, 31, 86, 90, 106, 112, 170, 171, 173, 203, 205, 324, 338, 339, 349, 350, 351, 353, 355, 361, 364], "suggest": [2, 286, 349, 361], "serialenv": [2, 3, 86, 90, 106, 161, 173, 242, 342, 367], "squeez": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 121, 122, 125, 158, 160, 184, 185, 223, 224, 349, 362, 364], "6": [2, 3, 7, 13, 14, 15, 16, 22, 31, 37, 51, 58, 59, 66, 74, 84, 85, 106, 110, 111, 121, 143, 145, 160, 184, 185, 187, 188, 189, 192, 196, 198, 204, 205, 210, 211, 215, 225, 242, 244, 252, 333, 348, 350, 356, 361, 362, 364, 365, 366], "5": [2, 3, 13, 14, 22, 23, 25, 27, 31, 34, 37, 40, 41, 51, 68, 73, 74, 77, 86, 87, 90, 95, 96, 100, 101, 103, 106, 110, 111, 112, 113, 114, 121, 122, 124, 152, 159, 160, 173, 183, 184, 185, 187, 188, 193, 194, 195, 196, 197, 200, 201, 204, 205, 207, 210, 211, 215, 220, 226, 227, 236, 237, 242, 245, 251, 272, 275, 277, 280, 344, 348, 349, 350, 352, 354, 356, 358, 361, 362, 364, 365, 366, 367], "7": [2, 3, 6, 10, 26, 31, 32, 34, 37, 40, 66, 74, 86, 90, 100, 101, 106, 112, 121, 160, 183, 184, 185, 188, 204, 205, 207, 210, 294, 348, 349, 350, 352, 356, 361, 362, 364, 365, 366], "9": [2, 3, 7, 22, 31, 34, 37, 40, 58, 59, 66, 74, 77, 84, 85, 99, 107, 108, 121, 160, 171, 173, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 281, 286, 345, 348, 349, 350, 351, 353, 356, 360, 361, 362, 364, 365], "18": [2, 58, 74, 110, 111, 113, 114, 173, 211, 348, 350, 351, 356, 361, 362, 365], "19": [2, 58, 73, 74, 77, 173, 348, 350, 352, 361, 362, 363, 365], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 54, 106, 112, 164, 166, 211, 345, 346, 349, 350, 361, 364, 366], "congruent": 2, "custom": [2, 3, 5, 31, 86, 90, 106, 112, 167, 173, 210, 211, 251, 266, 275, 281, 340, 344, 349, 350, 351, 352, 354, 355, 357, 361], "name": [2, 3, 6, 7, 11, 15, 31, 33, 35, 38, 44, 51, 54, 56, 59, 60, 82, 84, 86, 90, 95, 99, 100, 101, 103, 106, 107, 108, 109, 112, 113, 114, 115, 132, 135, 150, 155, 156, 159, 165, 167, 170, 173, 182, 199, 203, 237, 245, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 288, 290, 291, 292, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 333, 346, 349, 350, 351, 352, 355, 357, 361, 362, 367], "randomcroptensordict": [2, 349], "unlik": [2, 72, 100, 101, 113, 114, 242, 266, 275, 307, 350, 354, 356, 366], "stop": [2, 3, 15, 20, 39, 59, 66, 73, 74, 86, 90, 106, 112, 351, 356, 361, 366, 367], "signal": [2, 3, 13, 14, 15, 16, 22, 51, 53, 55, 57, 58, 59, 66, 73, 74, 77, 90, 100, 101, 113, 114, 125, 134, 159, 162, 182, 345, 349, 351, 361, 364, 367], "disk": [2, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 324, 346, 349, 350, 352, 356, 357, 364], "dump": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 306, 307, 357, 358], "load": [2, 6, 7, 13, 14, 15, 16, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 85, 86, 90, 106, 112, 118, 171, 173, 340, 346, 349, 351, 364], "json": 2, "metadata": [2, 51, 53, 351, 353, 355, 356, 361, 367], "anticip": [2, 130, 133], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 57], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 43, 45, 46, 53, 170, 174, 231, 237, 238, 244, 245, 246, 247, 248, 351, 361, 362, 364], "exact": [2, 3, 106, 201], "statu": [2, 3, 86], "prioriti": [2, 4, 34, 40, 41, 62, 63, 64, 65, 66, 75, 76, 79, 260, 261, 263, 264, 265, 266, 271, 276, 278, 280, 286, 346, 349, 350, 364], "heap": 2, "under": [2, 3, 4, 20, 31, 39, 51, 53, 54, 55, 57, 58, 59, 84, 85, 86, 89, 90, 91, 92, 106, 109, 112, 173, 231, 237, 238, 244, 245, 246, 247, 248, 273, 288, 289, 290, 291, 292, 307, 345, 349, 350, 354, 362, 367], "hood": [2, 20, 51, 86, 90, 106, 112, 362], "just": [2, 3, 4, 11, 76, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 103, 104, 106, 107, 108, 109, 112, 121, 128, 182, 211, 315, 344, 346, 349, 350, 351, 352, 353, 354, 356, 361, 362, 364, 366, 367], "public": [2, 56, 147, 169], "serializ": 2, "altern": [2, 4, 26, 103, 191, 208, 209, 210, 256, 349, 351, 361], "state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 106, 112, 165, 171, 173, 278, 340, 346, 349, 350, 367], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 106, 112, 165, 171, 173, 278, 346, 349], "drawback": 2, "struggl": 2, "big": [2, 351, 356, 364, 367], "sequenti": [2, 9, 31, 86, 90, 106, 112, 124, 141, 173, 249, 250, 275, 344, 351, 352, 354, 361, 362, 363, 367], "known": [2, 3, 5, 7, 8, 295, 296, 349, 350, 353], "seamless": [2, 205], "integr": [2, 31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 190, 199, 203, 207, 247, 344, 353, 354, 356, 361, 362, 363], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 349, 350, 355], "essenti": [2, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 350, 353, 362, 364], "understand": [2, 3, 8, 349, 350, 353, 354, 361], "purpos": [2, 3, 7, 86, 90, 106, 112, 125, 197, 257, 259, 272, 275, 277, 336, 349, 351, 352, 355, 357, 361, 363, 367], "guid": [2, 107, 108, 110, 111, 160, 343, 349, 361], "explan": [2, 31, 86, 90, 106, 112, 173], "effect": [2, 3, 25, 31, 34, 37, 40, 41, 51, 57, 66, 68, 71, 73, 74, 86, 90, 106, 112, 121, 125, 165, 173, 324, 349, 354, 364, 367], "realm": [2, 354], "As": [2, 3, 4, 31, 51, 86, 90, 99, 106, 107, 108, 112, 152, 248, 288, 344, 349, 350, 351, 352, 353, 355, 356, 361, 362, 363, 364, 366, 367], "practition": 2, "often": [2, 3, 8, 270, 324, 349, 350, 353, 355, 362, 364, 367], "encount": [2, 4, 57, 242, 343, 350, 354, 362], "situat": [2, 100, 101], "sometim": [2, 3, 352, 367], "discard": [2, 3, 44, 53, 55, 90, 167, 181, 306, 364, 367], "variabl": [2, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 54, 55, 58, 59, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 100, 101, 104, 105, 109, 113, 114, 197, 198, 199, 201, 202, 203, 207, 232, 233, 234, 273, 276, 346, 350], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 181, 186, 187, 188, 189, 190, 191, 194, 199, 203, 204, 210, 215, 216, 218, 220, 221, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 244, 245, 252, 253, 257, 258, 259, 260, 261, 263, 264, 265, 268, 271, 272, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 307, 333, 336, 344, 346, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 364, 366, 367], "immedi": [2, 25, 27, 31, 86, 90, 106, 112, 173, 287, 361], "200": [2, 13, 14, 15, 20, 31, 51, 86, 89, 90, 91, 106, 112, 113, 114, 152, 173, 187, 188, 195, 221, 222, 307, 349, 352, 356, 358, 362, 364], "199": [2, 362], "info": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 71, 73, 74, 84, 85, 86, 89, 90, 91, 92, 100, 101, 106, 107, 108, 110, 111, 112, 113, 114, 167, 170, 172, 314, 353, 358, 361, 364], "At": [2, 206, 239, 350, 351, 352, 356, 360, 362, 363], "glanc": [2, 353], "seem": [2, 349, 352, 353], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 39, 86, 90, 99, 106, 107, 108, 112, 125, 148, 197, 199, 201, 203, 228, 232, 233, 234, 253, 344, 350, 352, 353], "less": [2, 103, 229, 338, 339, 345, 351, 352, 364, 366], "omit": [2, 319, 351, 355, 362, 364], "proper": [2, 3, 4, 6, 7, 288, 289, 290, 291, 350, 351, 361, 364], "imposs": [2, 77, 174, 257, 259, 272, 275, 277], "determin": [2, 34, 40, 53, 65, 66, 86, 90, 106, 112, 113, 114, 147, 169, 210, 243, 350, 354, 361], "complic": [2, 362, 364, 367], "matter": [2, 356], "inconsist": [2, 367], "miss": [2, 3, 4, 6, 7, 11, 25, 31, 86, 90, 106, 112, 165, 173, 181, 249, 250, 278, 343, 349, 352], "behavior": [2, 4, 31, 86, 90, 106, 112, 165, 173, 264, 271, 352, 361, 362], "primari": [2, 356], "elimin": [2, 3, 353], "represent": [2, 27, 28, 31, 86, 90, 106, 112, 147, 167, 169, 173, 349, 362, 363, 367], "upon": [2, 8, 362], "canon": 2, "definit": [2, 32, 75, 210], "markov": [2, 3, 353, 367], "decis": [2, 3, 186, 218, 236, 262, 274, 352, 353, 354, 361, 364, 367], "mdp": [2, 353, 362], "context": [2, 3, 5, 8, 31, 86, 87, 90, 105, 106, 112, 161, 166, 173, 211, 212, 236, 284, 285, 288, 289, 290, 291, 293, 301, 307, 320, 344, 345, 349, 350, 351, 361, 362, 363, 364], "condit": [2, 44, 160, 237, 238, 242, 245, 246, 256, 349, 362, 364], "complet": [2, 7, 9, 72, 86, 90, 106, 112, 125, 159, 343, 345, 349, 351, 353, 360], "termin": [2, 3, 7, 13, 14, 15, 16, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 89, 90, 91, 95, 96, 100, 101, 106, 107, 108, 110, 111, 112, 113, 114, 121, 122, 134, 149, 173, 182, 183, 199, 203, 207, 242, 249, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367], "truncat": [2, 3, 13, 14, 15, 16, 31, 36, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 100, 101, 106, 107, 108, 112, 113, 114, 134, 135, 142, 149, 152, 159, 165, 173, 182, 199, 203, 227, 242, 294, 349, 351, 352, 353, 354, 356, 357, 360, 363, 364, 366, 367], "reward": [2, 3, 13, 14, 15, 31, 33, 38, 39, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 119, 122, 123, 128, 129, 130, 131, 133, 134, 135, 141, 145, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 164, 165, 166, 168, 169, 171, 173, 178, 181, 183, 199, 207, 236, 242, 253, 257, 258, 260, 261, 263, 264, 265, 268, 271, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 317, 318, 320, 322, 340, 345, 346, 349, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367], "imit": [2, 3], "addit": [2, 3, 4, 31, 53, 86, 90, 106, 112, 113, 129, 147, 161, 164, 165, 167, 169, 173, 197, 235, 236, 242, 247, 256, 273, 288, 345, 349, 350, 353, 361, 364], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 42, 43, 45, 46, 57, 86, 87, 90, 93, 106, 112, 173, 184, 185, 205, 211, 345, 346, 349, 350, 351, 352, 353, 361, 362, 364], "stateless": [2, 3, 86, 90, 106, 112, 122, 164, 273, 349, 353, 362, 367], "simul": [2, 3, 5, 7, 8, 82, 83, 92, 95, 96, 109, 113, 114, 117, 183, 207, 344, 349, 351, 353, 357, 361], "furthermor": [2, 361], "certain": [2, 4, 17, 18, 19, 20, 31, 44, 86, 90, 106, 112, 118, 138, 159, 165, 173, 198, 202, 239, 272, 344, 349, 350, 351, 358, 361, 367], "composit": [2, 3, 25, 27, 71, 76, 81, 86, 90, 106, 112, 351, 354, 362], "accommod": [2, 3, 353, 354], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 43, 45, 46, 65, 66], "unambigu": 2, "distinguish": [2, 100, 101, 113, 114], "happen": [2, 3, 86, 90, 106, 112, 235, 350, 355, 356, 357, 363, 367], "limit": [2, 39, 86, 90, 102, 106, 112, 125, 141, 257, 259, 272, 275, 277, 349, 350, 352, 361, 362], "everyth": [2, 350, 351, 352, 357, 358], "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 57, 170, 171, 344, 349, 356, 361], "rule": [2, 106, 130, 133, 248, 344, 351], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 33, 35, 36, 38, 44, 48, 53, 54, 55, 56, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 92, 100, 101, 106, 109, 112, 113, 114, 121, 125, 127, 128, 130, 133, 134, 137, 140, 143, 145, 147, 150, 152, 155, 157, 159, 160, 161, 169, 171, 173, 181, 182, 199, 208, 209, 236, 237, 242, 245, 246, 258, 278, 288, 289, 290, 291, 344, 349, 351, 352, 353, 354, 355, 357, 361, 362, 363, 364, 367], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 122, 130, 133, 134, 135, 145, 149, 150, 152, 156, 159, 161, 165, 173, 181, 183, 193, 194, 199, 203, 207, 219, 220, 228, 231, 232, 233, 234, 236, 237, 238, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 328, 333, 343, 344, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "taken": [2, 3, 86, 90, 106, 112, 151, 208, 209, 240, 345, 349, 351, 352, 354, 361, 362], "is_shar": [2, 3, 13, 14, 15, 22, 25, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 122, 130, 133, 134, 135, 145, 149, 150, 152, 156, 159, 161, 171, 181, 183, 193, 194, 199, 203, 207, 219, 220, 228, 231, 232, 233, 234, 236, 237, 238, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 333, 344, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "brought": [2, 351, 352, 354], "step_mdp": [2, 3, 86, 90, 106, 112, 199, 203, 342, 352, 353, 362, 366, 367], "count": [2, 3, 31, 86, 87, 159, 243, 320, 324, 327, 349, 350, 351, 352, 364, 367], "trigger": [2, 7], "partial": [2, 3, 86, 90, 106, 112, 124, 125, 160, 161, 162, 324, 352], "turn": [2, 17, 18, 19, 20, 33, 35, 38, 139, 166, 170, 237, 320, 345, 349, 350, 352, 354, 362, 363], "retain": 2, "regard": [2, 53, 59, 194, 238, 257, 266, 275, 349, 351, 362], "posit": [2, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 90, 106, 112, 137, 138, 158, 159, 162, 165, 166, 173, 214, 278, 345, 351, 361, 362, 364], "both": [2, 3, 7, 31, 34, 37, 40, 41, 57, 86, 87, 89, 90, 100, 101, 106, 107, 108, 112, 125, 150, 165, 173, 182, 184, 185, 199, 202, 203, 205, 210, 211, 232, 233, 234, 238, 246, 257, 259, 260, 264, 265, 271, 272, 273, 275, 276, 277, 278, 280, 320, 344, 349, 351, 353, 355, 361, 362, 363, 364, 367], "mark": [2, 3, 15, 59, 86, 90, 106, 112, 199, 203, 288, 290, 291, 356, 364], "identifi": [2, 36], "marl": [2, 99, 115, 125, 162, 210, 353, 361], "abov": [2, 3, 7, 31, 86, 90, 106, 112, 173, 200, 226, 227, 256, 345, 346, 349, 351, 353, 354, 361, 362, 367], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 92, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 122, 123, 125, 128, 129, 130, 131, 133, 135, 141, 143, 147, 149, 150, 155, 156, 159, 162, 164, 165, 167, 169, 170, 173, 174, 182, 184, 185, 186, 187, 188, 191, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 210, 211, 214, 220, 229, 231, 232, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 307, 315, 344, 345, 349, 350, 351, 352, 353, 354, 357, 360, 361, 362, 363, 364, 366, 367], "typic": [2, 3, 4, 8, 31, 86, 90, 106, 112, 134, 160, 173, 244, 258, 273, 275, 278, 344, 345, 346, 351, 353, 355, 356, 361, 362], "adjust": [2, 349, 361, 362], "grumodul": [2, 124], "lstmmodul": [2, 352], "skip": [2, 3, 31, 51, 86, 90, 106, 112, 138, 165, 173, 174, 244, 248, 273, 278, 288, 289, 290, 291, 306, 307, 317, 320, 349, 350, 362], "accumul": [2, 8, 173], "upcom": [2, 273, 297, 298, 299, 300, 302, 303, 304, 305, 349], "popular": [2, 3, 344, 352, 355, 361], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 173, 342, 350], "fail": [2, 7, 21, 25, 27, 106, 119, 174], "shift": [2, 31, 254, 288, 289, 290, 291, 351], "naiv": [2, 167, 353], "consum": [2, 72, 74, 242, 350, 351, 356, 361, 364], "approxim": [2, 361, 367], "twice": [2, 8], "flat": [2, 77], "would": [2, 3, 31, 39, 86, 90, 106, 112, 173, 197, 199, 201, 203, 205, 210, 346, 350, 351, 352, 353, 355, 356, 362, 364, 367], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 125, 191, 218, 257, 262, 274, 275, 315, 340, 351, 352, 361, 364], "2x": 2, "small": [2, 167, 349, 351, 361, 367], "clearer": [2, 354], "lazi": [2, 27, 28, 48, 49, 86, 90, 106, 112, 113, 114, 147, 167, 184, 210, 212, 249, 250, 349, 350, 354, 356, 360, 364, 367], "certainli": 2, "benefici": 2, "welcom": [2, 353], "wrapper": [2, 3, 11, 16, 33, 35, 38, 39, 40, 41, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 170, 214, 229, 235, 236, 240, 242, 243, 248, 253, 288, 312, 313, 314, 340, 342, 351, 352, 353, 361, 363, 367], "around": [2, 5, 7, 16, 40, 41, 102, 242, 248, 288, 349, 350, 361, 367], "selecttransform": [2, 86, 90, 106, 112], "excludetransform": [2, 58, 156, 364], "promptli": 2, "virtual": [2, 3, 89], "instal": [2, 3, 5, 10, 17, 18, 19, 53, 56, 86, 90, 106, 107, 108, 110, 111, 112, 309, 324, 343, 349, 351, 352, 353, 354, 355, 356, 357, 358, 361, 367], "respons": [2, 3, 8, 66, 73, 324, 355, 356, 367], "d4rl": [2, 53, 59], "repositori": [2, 7, 54, 55, 56, 59, 114], "wheel": [2, 351], "publish": 2, "openml": [2, 56, 105], "scikit": [2, 56, 105], "panda": [2, 56], "raw": [2, 3, 4, 39, 200, 226, 227, 350, 356, 362], "go": [2, 3, 7, 99, 106, 148, 152, 236, 294, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "natur": [2, 3, 349, 352, 354, 355, 356, 364], "modifi": [2, 3, 7, 8, 25, 27, 31, 44, 86, 90, 106, 112, 122, 129, 137, 141, 147, 161, 164, 165, 167, 169, 173, 236, 243, 247, 327, 333, 349, 350, 351, 353, 361, 362], "fly": [2, 171, 272, 345, 351, 362, 364, 367], "extra": [2, 10, 31, 86, 90, 106, 112, 125, 171, 173, 181, 314, 344, 351, 352, 364], "least": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 128, 357, 367], "pre": [2, 7, 21, 31, 44, 57, 63, 86, 90, 106, 112, 147, 167, 169, 173, 367], "appli": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 106, 112, 119, 121, 122, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 146, 148, 149, 150, 152, 155, 156, 159, 160, 161, 162, 164, 165, 167, 168, 170, 171, 173, 197, 201, 226, 237, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 278, 280, 288, 319, 346, 349, 350, 351, 356, 362, 366, 367], "conisder": 2, "space": [2, 9, 32, 43, 86, 90, 106, 112, 128, 132, 178, 191, 194, 210, 216, 220, 231, 235, 237, 238, 240, 243, 244, 245, 246, 247, 248, 250, 251, 252, 261, 263, 264, 265, 280, 286, 344, 350, 351, 352, 353, 354, 355, 361, 362, 366, 367], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 54, 77, 94, 95, 96, 106, 107, 108, 128, 155, 184, 185, 195, 210, 211, 239, 242, 309, 324, 338, 339, 349, 350, 351, 352, 354, 355, 358, 361, 364, 366], "pipelin": [2, 3, 7, 344, 351], "replac": [2, 3, 6, 7, 25, 27, 31, 51, 57, 66, 73, 74, 121, 132, 134, 181, 239, 344, 364], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 57, 68, 86, 90, 106, 112, 121, 152, 165, 173, 235, 240, 242, 243, 322, 346, 350, 351, 352, 354, 357, 362, 364, 367], "produc": [2, 121, 122, 184, 185, 205, 211, 217, 232, 234, 236, 307, 351, 352, 353, 354, 356, 364, 367], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 72, 86, 90, 106, 107, 108, 112, 165, 173, 278, 351], "download": [2, 7, 10, 51, 53, 54, 55, 57, 58, 59, 94, 147, 169, 307, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 350, 361, 362], "robosetexperiencereplai": [2, 73, 74], "fk1": [2, 58], "v4": [2, 58, 90, 106, 151, 297, 298, 299, 300, 302, 303, 304, 305, 333, 349, 351, 363], "expert": [2, 58], "fk1_microopenrandom_v2d": [2, 58], "func": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 172, 349, 364, 367], "obs_norm": 2, "norm": [2, 4, 8, 82, 83, 324, 349, 350, 351, 361, 362], "num_work": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 103, 106, 112, 349, 350], "os": [2, 35, 44, 60, 350], "cpu_count": [2, 35, 44, 60], "num_chunk": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59], "1000": [2, 4, 37, 65, 73, 74, 86, 90, 106, 112, 125, 171, 239, 243, 244, 248, 270, 349, 350, 351, 352, 354, 356, 358, 363, 364], "mp_start_method": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 106, 112], "fork": [2, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 349, 350, 351, 352, 361, 363], "recreat": [2, 362], "customari": [2, 344], "moreov": [2, 3], "fine": [2, 3, 86, 90, 106, 112, 122, 141, 356, 363], "grain": [2, 3, 86, 90, 106, 112, 122], "nomenclatur": 2, "compact": 2, "propos": [2, 125, 134, 206, 270, 279, 333, 344, 352, 364], "replaybufferensembl": [2, 51, 71, 76, 81], "primit": [2, 3, 4, 57, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280], "individu": [2, 4, 17, 18, 19, 20, 31, 44, 68, 77, 86, 90, 100, 101, 106, 112, 173, 349, 361], "dummi": [2, 333, 349, 356, 367], "semant": [2, 27, 28, 344], "ident": [2, 3, 13, 14, 15, 31, 33, 35, 38, 73, 86, 90, 103, 106, 112, 134, 210, 211, 288, 289, 290, 291, 338, 339, 350, 353, 361], "another_kei": [2, 68], "renam": [2, 33, 35, 38, 68, 150, 152, 181, 349], "resiz": [2, 3, 59, 68, 125, 350, 352, 353, 364, 367], "imag": [2, 4, 7, 57, 127, 147, 163, 169, 205, 307, 349, 350, 353, 357, 361, 363, 367], "comops": 2, "totensorimag": [2, 3, 59, 68, 125, 151, 350, 352, 364, 366, 367], "renametransform": [2, 68, 86, 90, 106, 112], "rb0": [2, 68], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 102, 106, 112, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 137, 139, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 164, 165, 167, 169, 171, 183, 193, 199, 203, 207, 219, 228, 229, 231, 232, 233, 234, 236, 237, 242, 244, 245, 247, 248, 250, 251, 252, 257, 258, 259, 260, 261, 263, 264, 265, 271, 272, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 306, 307, 333, 336, 344, 349, 350, 351, 352, 354, 355, 358, 360, 361, 362, 363, 364, 366, 367], "pixel": [2, 3, 7, 25, 59, 68, 84, 85, 89, 91, 92, 109, 125, 127, 134, 137, 139, 143, 145, 147, 151, 163, 167, 169, 187, 215, 216, 307, 333, 344, 349, 350, 352, 357, 363, 364, 366, 367], "rb1": [2, 68], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 102, 106, 112, 123, 124, 125, 126, 127, 128, 130, 131, 133, 137, 139, 141, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 164, 167, 169, 171, 183, 193, 194, 199, 203, 207, 219, 220, 228, 229, 231, 232, 233, 234, 236, 238, 242, 244, 245, 246, 247, 248, 250, 251, 252, 257, 258, 259, 264, 265, 271, 272, 275, 276, 277, 278, 286, 288, 289, 290, 291, 307, 320, 336, 344, 349, 350, 351, 352, 354, 358, 360, 361, 362, 363, 364, 366, 367], "pixels33": [2, 68], "data0": [2, 68], "244": [2, 68, 147, 169, 362], "data1": [2, 68], "_": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 87, 94, 113, 114, 126, 130, 132, 133, 141, 143, 150, 163, 171, 173, 231, 247, 252, 256, 257, 258, 260, 264, 265, 271, 275, 276, 278, 280, 288, 289, 290, 291, 309, 349, 350, 351, 352, 358, 361, 362, 364, 366], "rang": [2, 3, 4, 8, 11, 26, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 86, 87, 90, 100, 101, 106, 112, 152, 163, 171, 173, 198, 202, 272, 280, 345, 346, 349, 351, 352, 355, 356, 358, 361, 362, 364, 366], "parent": [2, 3, 20, 25, 27, 43, 52, 68, 76, 81, 86, 90, 106, 112, 122, 125, 126, 129, 131, 134, 137, 138, 143, 147, 155, 159, 160, 161, 162, 164, 166, 167, 173, 232, 273, 275, 292, 307, 349, 356, 362, 366, 367], "basic": [2, 102, 344, 351, 355, 356, 358, 367], "properti": [2, 3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 102, 106, 112, 121, 164, 165, 173, 192, 200, 212, 217, 225, 226, 227, 242, 273, 278, 354, 356, 362, 364], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 45, 46, 86, 90, 100, 101, 102, 105, 106, 107, 108, 112, 113, 114, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 181, 182, 184, 185, 187, 188, 189, 190, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 210, 211, 212, 213, 220, 221, 222, 223, 224, 229, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 318, 322, 327, 336, 344, 345, 346, 349, 350, 351, 352, 353, 361, 362, 366, 367], "send": [2, 3, 8, 314, 366], "receiv": [2, 3, 31, 39, 86, 90, 106, 112, 164, 165, 173, 205, 294, 345, 349, 351, 355, 360, 362], "spawn": [2, 3, 4, 17, 21, 94, 103, 106, 112, 350, 361], "check_env_spec": [2, 3, 90, 106, 149, 342, 351, 361, 362], "saniti": [2, 3, 7, 174, 351], "utmost": 2, "commonli": [2, 66, 73, 74, 367], "emploi": [2, 213], "languag": [2, 39], "scarc": 2, "address": [2, 364], "subdomain": 2, "facilit": [2, 3, 7, 146, 147, 167, 169, 232, 233, 234, 344, 349, 352, 354, 362], "extern": [2, 3, 130, 133, 367], "token": [2, 35, 36, 39, 42, 44, 60], "manner": [2, 90, 147, 167, 344, 349, 350, 351, 356, 360, 362, 364], "dm": [3, 349, 367], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 44, 57, 70, 77, 78, 80, 82, 83, 86, 90, 94, 95, 96, 102, 103, 104, 106, 112, 113, 152, 161, 167, 168, 210, 232, 241, 257, 258, 260, 261, 263, 264, 265, 267, 271, 275, 276, 277, 278, 280, 314, 324, 333, 344, 345, 346, 349, 350, 352, 353, 354, 355, 361, 362, 364, 367], "goal": [3, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 160, 349, 350, 351, 352, 361, 362], "abl": [3, 99, 107, 108, 349, 351, 352, 354, 360, 361, 362, 364, 366], "experi": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 65, 66, 174, 309, 310, 311, 312, 313, 314, 343, 350, 351, 356, 357, 361, 364], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 86, 87, 90, 100, 101, 106, 107, 108, 110, 111, 112, 125, 128, 134, 140, 141, 143, 145, 150, 152, 155, 161, 164, 170, 171, 173, 333, 336, 349, 350, 351, 352, 360, 361, 363, 364, 366, 367], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 82, 83, 86, 90, 102, 106, 112, 129, 132, 134, 141, 147, 161, 164, 165, 167, 169, 173, 183, 184, 185, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 207, 209, 210, 211, 214, 219, 220, 228, 231, 232, 233, 234, 236, 237, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 252, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 333, 336, 344, 345, 349, 350, 351, 352, 354, 355, 358, 360, 361, 362, 363, 364, 366, 367], "organis": [3, 58, 86, 90, 106, 112, 165, 350], "arbitrari": [3, 32, 37, 86, 90, 106, 112, 121, 344, 349, 350, 362, 364], "structur": [3, 7, 33, 34, 35, 37, 38, 39, 40, 41, 44, 77, 86, 90, 106, 112, 130, 133, 182, 210, 243, 288, 289, 290, 291, 292, 342, 345, 349, 351, 352, 353, 356, 361, 362, 363], "attribut": [3, 4, 31, 33, 35, 38, 44, 57, 86, 89, 90, 91, 106, 112, 134, 147, 167, 173, 199, 203, 248, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 349, 352, 362], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 102, 106, 112, 134, 173], "actual": [3, 4, 7, 51, 53, 54, 55, 57, 58, 59, 86, 90, 106, 112, 170, 327, 345, 349, 351, 361, 362], "retriev": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 86, 89, 90, 91, 106, 112, 126, 131, 134, 143, 181, 183, 184, 204, 207, 242, 244, 248, 251, 257, 258, 259, 261, 272, 275, 276, 278, 280, 286, 288, 289, 290, 291, 333, 340, 346, 350, 351, 354, 362, 367], "care": [3, 8, 86, 90, 106, 112, 164, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 307, 349, 351, 361, 362, 364], "parametr": [3, 213, 248, 258, 264, 271, 278, 349, 351], "hardwar": 3, "observation_spec": [3, 86, 90, 102, 106, 112, 119, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 139, 140, 141, 143, 145, 147, 149, 151, 155, 157, 159, 160, 161, 162, 163, 164, 166, 167, 170, 173, 183, 199, 203, 207, 328, 336, 349, 351, 355, 360, 361, 362, 367], "compositespec": [3, 27, 28, 48, 86, 88, 90, 102, 106, 112, 119, 122, 130, 131, 132, 133, 135, 141, 149, 150, 156, 159, 161, 164, 173, 178, 182, 183, 207, 231, 235, 244, 250, 251, 342, 349, 351, 352, 361, 362, 367], "pair": [3, 31, 33, 35, 38, 53, 84, 85, 86, 90, 106, 112, 152, 161, 199, 232, 244, 248, 273, 288, 289, 290, 291, 292, 344, 345, 349, 350, 351, 354, 355, 360, 362, 367], "state_spec": [3, 86, 90, 102, 106, 112, 119, 183, 207, 362, 367], "reward_spec": [3, 86, 90, 102, 106, 112, 119, 122, 123, 128, 129, 130, 131, 133, 149, 153, 154, 155, 157, 164, 166, 173, 183, 207, 351, 361, 362, 367], "done_spec": [3, 86, 90, 106, 112, 130, 131, 133, 134, 149, 164, 173, 182, 361, 362, 367], "flag": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 101, 106, 112, 113, 114, 243, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 344, 361, 362, 363], "input_spec": [3, 86, 90, 102, 106, 112, 122, 129, 130, 131, 132, 143, 145, 149, 150, 155, 156, 159, 160, 161, 164, 165, 166, 168, 173, 351, 362], "full_action_spec": [3, 86, 90, 106, 112, 183, 207, 351, 361], "full_state_spec": [3, 86, 90, 106, 112, 183, 207, 351], "lock": [3, 25, 27, 33, 35, 38, 86, 90, 106, 112, 122, 161, 171, 362], "output_spec": [3, 86, 90, 106, 112, 122, 129, 130, 131, 135, 141, 149, 150, 156, 159, 164, 165, 173, 362], "full_observation_spec": [3, 86, 90, 106, 112, 183, 207], "full_reward_spec": [3, 86, 90, 106, 112, 122, 131, 149, 361], "full_done_spec": [3, 86, 90, 106, 112, 122, 131, 149, 182, 361], "importantli": [3, 244, 248], "action_s": 3, "help": [3, 4, 31, 86, 90, 106, 112, 134, 173, 257, 259, 272, 275, 277, 343, 345, 349, 350, 351, 352, 361], "With": [3, 95, 96, 99, 160, 346, 350, 361, 364, 367], "necessarili": [3, 86, 90, 106, 112, 367], "present": [3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 89, 90, 106, 112, 135, 152, 156, 165, 173, 181, 182, 186, 187, 188, 189, 190, 196, 201, 213, 218, 242, 243, 247, 248, 249, 250, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 340, 346, 349, 358, 360, 361, 364, 366], "0s": [3, 51, 57, 161, 352], "step_and_maybe_reset": [3, 86, 90, 106, 112, 353], "done_kei": [3, 22, 86, 90, 106, 112, 121, 125, 134, 152, 159, 173, 181, 361], "assign": [3, 4, 13, 14, 16, 31, 33, 35, 38, 86, 90, 106, 112, 165, 173, 260, 261, 263, 278, 351, 354, 361, 364], "_reset": [3, 86, 90, 102, 106, 112, 119, 121, 122, 125, 130, 133, 149, 182, 183, 207], "data_": [3, 86, 90, 106, 112], "append": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 106, 112, 121, 128, 129, 152, 161, 165, 170, 198, 199, 202, 203, 237, 245, 349, 350, 351, 352, 361, 362, 363, 364, 366], "set_se": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 95, 96, 102, 106, 112, 121, 143, 150, 155, 160, 162, 165, 173, 356, 358, 362, 366, 367], "seed": [3, 13, 14, 15, 16, 20, 58, 86, 90, 102, 106, 107, 108, 112, 113, 114, 119, 122, 130, 133, 149, 165, 174, 324], "determinist": [3, 31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 186, 195, 215, 222, 231, 240, 247, 248, 251, 258, 344, 349, 350, 352, 354, 355, 358, 362, 367], "preced": [3, 31, 204, 352], "risk": [3, 148], "overlap": [3, 40, 77], "reproduc": [3, 125, 174, 349, 351, 361], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 36, 39, 42, 44, 60, 62, 63, 64, 65, 79, 86, 90, 106, 112, 132, 153, 159, 160, 162, 225, 226, 227, 251, 258, 264, 265, 271, 273, 274, 278, 307, 321, 349, 350, 351, 352, 354, 361, 364], "max_step": [3, 13, 77, 86, 90, 100, 101, 102, 106, 112, 113, 114, 159, 173, 353, 354, 355, 357, 358, 361, 366, 367], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 39, 82, 83, 86, 90, 102, 106, 112, 124, 141, 194, 199, 203, 207, 219, 220, 228, 229, 232, 233, 234, 235, 236, 237, 240, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 258, 260, 264, 265, 267, 268, 269, 271, 273, 276, 278, 280, 286, 287, 288, 289, 290, 291, 320, 336, 342, 349, 351, 352, 355, 358, 360, 361, 362, 363], "trail": [3, 171], "treat": [3, 31, 354, 355], "figur": [3, 349, 351, 352, 361, 362, 367], "brief": [3, 351, 353, 355, 364], "deliveri": 3, "design": [3, 31, 32, 71, 76, 81, 86, 90, 100, 101, 106, 112, 125, 148, 165, 173, 236, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 349, 350, 351, 352, 353, 354, 355, 360, 361, 362, 364, 367], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 32, 75, 86, 90, 106, 112, 159, 160, 171, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 210, 211, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 324, 346, 349, 350, 351, 352, 353, 354, 361, 362], "flank": [3, 352], "dual": 3, "strictli": [3, 8, 31, 86, 90, 106, 112, 165, 173, 278, 349, 351], "refer": [3, 7, 8, 9, 20, 31, 39, 86, 89, 90, 91, 106, 112, 165, 171, 173, 183, 194, 195, 207, 208, 209, 210, 215, 216, 221, 222, 238, 257, 266, 267, 268, 269, 275, 278, 288, 293, 301, 348, 349, 351, 354, 355, 356, 357, 361, 364, 367], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 65, 66, 86, 90, 106, 112, 119, 132, 134, 140, 143, 147, 148, 152, 154, 156, 167, 169, 171, 173, 181, 185, 192, 194, 208, 209, 210, 211, 212, 213, 217, 219, 220, 225, 226, 227, 228, 242, 247, 263, 265, 270, 276, 279, 301, 318, 320, 321, 329, 330, 333, 334, 336, 337, 338, 339, 340], "carri": [3, 20, 44, 86, 90, 106, 112, 161, 273, 350, 352, 361, 362, 364], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 100, 101, 115, 349], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 57, 66, 73, 74, 342], "adjac": [3, 22, 137, 242], "reli": [3, 197, 198, 201, 202, 257, 345, 349, 351, 354, 356, 362, 367], "junction": 3, "inittrack": [3, 199, 203, 242, 349, 352], "tutori": [3, 341, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367], "scratch": [3, 8, 350, 362], "gym3": 3, "envpool": [3, 103, 104], "interfac": [3, 93, 105, 205, 212, 344, 349, 351, 357, 362, 364], "simultan": [3, 19, 103, 104, 106, 112, 362], "competit": [3, 100, 101, 361], "advantag": [3, 8, 196, 257, 259, 272, 275, 277, 288, 289, 290, 291, 292, 293, 295, 297, 299, 301, 302, 304, 345, 346, 349, 350, 351, 352, 361, 362, 367], "scale": [3, 4, 53, 86, 90, 106, 112, 125, 141, 143, 154, 160, 163, 195, 200, 214, 221, 222, 226, 227, 232, 233, 234, 244, 248, 250, 257, 258, 271, 275, 276, 277, 278, 322, 328, 333, 340, 344, 349, 350, 351, 352, 354, 361, 366], "varieti": 3, "inherit": [3, 86, 90, 106, 112, 206, 273, 346, 351, 361], "Of": [3, 7, 343, 362, 367], "cours": [3, 4, 343, 362, 367], "from_pixel": [3, 82, 83, 84, 85, 89, 91, 92, 95, 96, 109, 125, 151, 307, 333, 349, 350, 352, 353, 357, 358, 363, 364, 366, 367], "81": [3, 350, 362, 363], "simpli": [3, 6, 33, 35, 38, 44, 76, 77, 81, 135, 156, 170, 273, 344, 345, 349, 351, 355, 361, 367], "d": [3, 34, 37, 40, 41, 54, 56, 58, 59, 60, 65, 66, 197, 201, 244, 248, 366], "privat": [3, 86, 90, 106, 112, 170, 362, 367], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 51, 74, 77, 259, 272, 275, 315, 317, 320, 324, 327, 328, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 39, 68, 71, 143, 154, 200, 212, 221, 226, 227, 286, 344, 354, 355, 362, 364], "inner": [3, 86, 90, 106, 112, 132, 346, 350, 351, 361, 367], "logic": 3, "nevertheless": [3, 351, 353, 364], "kept": [3, 22, 72, 74, 132, 156, 164, 174, 181, 200, 226, 227, 355], "mind": [3, 51, 57, 66, 73, 74, 86, 90, 106, 112, 361], "desig": 3, "wherev": 3, "expos": [3, 109, 130, 133, 249, 350], "modif": [3, 5, 25, 27, 31, 86, 90, 106, 112, 137, 173, 182, 273, 351, 362], "lost": [3, 8, 170], "eras": [3, 66, 73, 86, 90, 106, 112, 165], "intern": [3, 347], "face": [3, 5, 8, 9, 353, 367], "NOT": [3, 148], "outsid": [3, 15, 357, 361, 362], "right": [3, 6, 7, 22, 39, 204, 350, 351, 361, 362, 367], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 86, 90, 106, 112, 164, 165, 173, 174, 288, 289, 290, 291], "assumpt": [3, 362, 364], "preclud": 3, "presenc": [3, 355], "annihil": 3, "reason": [3, 4, 8, 31, 57, 86, 90, 106, 107, 108, 112, 147, 167, 173, 203, 345, 349, 350, 351, 355, 356, 362, 364], "advanc": [3, 20, 34, 37, 40, 41, 353, 356, 364], "explicitli": [3, 4, 121, 350, 352, 356, 361, 364], "place": [3, 25, 27, 31, 33, 35, 38, 62, 63, 68, 71, 79, 86, 87, 90, 106, 112, 113, 114, 121, 129, 134, 147, 161, 164, 165, 167, 169, 170, 171, 173, 182, 236, 242, 247, 321, 326, 327, 350, 351, 354, 357, 361, 362, 364], "superse": 3, "pettingzoowrapp": [3, 342], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 86, 90, 99, 100, 101, 106, 107, 108, 112, 113, 114, 115, 344, 350, 354, 356, 361, 364], "associ": [3, 31, 33, 35, 38, 86, 90, 106, 112, 173, 221, 340, 349, 364], "environemtn": 3, "__not__": 3, "constrain": [3, 141, 199, 203, 275], "li": 3, "fact": [3, 7, 8, 349, 351, 353, 361, 362, 363, 364, 367], "predict": [3, 31, 39, 193, 195, 206, 207, 236, 253, 257, 259, 263, 266, 268, 269, 272, 275, 277, 287, 344, 349, 350, 355], "know": [3, 4, 9, 34, 37, 40, 41, 235, 276, 320, 349, 350, 351, 352, 353, 354, 355, 356, 361, 364], "meaning": 3, "perfectli": [3, 346, 349, 362], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 355, 366], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 43, 45, 46, 51, 86, 90, 106, 112, 121, 340, 344], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 121, 122, 125, 126, 130, 132, 133, 134, 135, 137, 141, 142, 143, 145, 147, 149, 150, 152, 154, 155, 156, 159, 161, 163, 165, 166, 167, 169, 171, 173, 174, 181, 182, 183, 184, 185, 187, 188, 197, 198, 199, 200, 201, 202, 203, 205, 207, 210, 211, 212, 213, 226, 227, 231, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 286, 288, 289, 290, 291, 294, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 314, 317, 318, 320, 321, 322, 324, 333, 340, 350, 351, 352, 353, 354, 356, 357, 360, 361, 362, 363, 364, 366, 367], "500": [3, 349, 350, 362, 366], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 51, 54, 106, 112], "bottleneck": [3, 8, 66, 73, 74], "great": [3, 7, 8, 366], "speedup": [3, 8, 367], "precis": [3, 130, 133, 181, 198, 202, 349, 351], "misspecifi": 3, "caus": [3, 7, 8, 62, 63, 79, 86, 90, 94, 106, 112, 148, 367], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 106, 112, 115, 125, 136, 142, 152, 160, 161, 162, 165, 173, 174, 235, 239, 240, 243, 278, 349, 351, 361, 364, 367], "mismatch": [3, 350], "mostli": [3, 16, 307, 345, 357, 364, 367], "subprocess": [3, 13, 14, 16, 87, 106, 112], "multithreadedenv": [3, 342], "underneath": 3, "higher": [3, 4, 128, 251, 349, 350, 351, 364, 367], "flexibl": [3, 9, 103, 281, 345, 346, 349, 364, 367], "cover": [3, 343, 351, 353, 356, 357, 362, 366], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 59, 60, 68, 86, 90, 99, 102, 105, 106, 107, 108, 112, 122, 129, 130, 131, 134, 135, 141, 147, 149, 150, 156, 159, 161, 164, 165, 167, 169, 171, 173, 176, 180, 184, 185, 205, 210, 211, 213, 219, 228, 235, 237, 244, 247, 248, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 282, 286, 294, 333, 338, 342, 344, 349, 350, 351, 356, 361, 362, 364, 367], "atari": [3, 4, 51, 125, 307, 357, 367], "classic": [3, 102, 108, 350], "benchmark_batched_env": 3, "seamlessli": [3, 362], "infrastructur": [3, 361], "act": [3, 4, 73, 74, 107, 108, 165, 193, 211, 258, 260, 271, 276, 278, 280, 352, 361, 364], "world": [3, 5, 102, 253, 268, 357, 361, 362, 367], "paradigm": [3, 16, 361], "decpodp": 3, "game": [3, 4, 5, 51, 100, 101, 307, 357], "thank": [3, 349, 353], "carrier": [3, 351, 352, 353, 364], "particular": [3, 31, 44, 53, 54, 86, 90, 106, 112, 165, 173, 345, 346, 350, 352, 353, 360, 361, 364], "thu": [3, 272, 361], "let": [3, 6, 7, 31, 34, 37, 40, 41, 42, 86, 90, 106, 107, 108, 112, 125, 173, 199, 203, 210, 211, 237, 320, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "vma": [3, 113, 114, 361], "robot": [3, 5, 7, 57, 147, 167, 169, 361], "vmasenv": [3, 342, 361], "balanc": [3, 84, 85, 349, 350], "num_env": [3, 20, 89, 93, 104, 113, 114, 361], "n_agent": [3, 113, 114, 210, 211, 219, 228, 286, 361], "ground_rew": 3, "pos_rew": [3, 361], "style": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59], "relat": [3, 4, 10, 34, 106, 137, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 350, 358, 362], "vari": [3, 89, 91, 92, 107, 108, 109, 113, 148, 361], "creation": [3, 106, 112, 367], "info_spec": [3, 106], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 32, 82, 83, 86, 89, 90, 91, 92, 95, 96, 103, 104, 106, 109, 112, 119, 149, 182, 261, 264, 265, 286, 342, 361, 367], "simpl": [3, 9, 31, 32, 86, 90, 106, 112, 173, 187, 242, 248, 261, 263, 273, 277, 288, 344, 345, 349, 350, 351, 353, 354, 355, 361, 364, 367], "prefix": [3, 22, 31, 33, 35, 38, 44, 86, 90, 106, 112, 165, 173, 273, 278, 306, 352, 355, 367], "exactli": [3, 31, 86, 90, 92, 106, 112, 165, 173, 197, 201, 278, 349, 352, 356, 361], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 86, 90, 106, 112, 119, 132, 181, 183, 206, 207, 235, 239, 240, 242, 243, 361], "reward_kei": [3, 86, 90, 106, 112, 173, 181, 183, 207, 318, 322, 361], "set_kei": [3, 134, 257, 259, 261, 264, 265, 266, 271, 272, 273, 275, 276, 277, 278, 286, 292, 349, 361], "awai": [3, 351, 353, 361], "eas": [3, 361], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 43, 45, 46, 86, 90, 106, 112, 159, 248], "full": [3, 86, 90, 106, 112, 199, 203, 238, 315, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "autoresettransform": 3, "copi": [3, 11, 17, 18, 19, 20, 31, 33, 35, 38, 39, 44, 57, 86, 90, 106, 112, 121, 150, 160, 165, 173, 181, 199, 203, 236, 273, 278, 345, 349, 350, 352, 353, 364], "invalid": [3, 31, 77, 86, 90, 106, 112, 115, 173, 208, 209], "nan": [3, 121, 170], "auto_reset": [3, 86, 90, 106, 112, 121, 173, 362], "auto_reset_replac": [3, 121], "placehold": [3, 92, 134, 165], "set_gym_backend": [3, 86, 89, 90, 106, 112, 116, 121, 342, 353], "manual_se": [3, 34, 37, 40, 41, 54, 58, 59, 73, 74, 82, 83, 86, 90, 106, 112, 119, 121, 132, 143, 152, 155, 160, 162, 173, 208, 209, 217, 231, 238, 239, 240, 243, 251, 257, 258, 260, 264, 271, 278, 356, 358, 361, 362, 366, 367], "autoresettinggymenv": [3, 121], "_step": [3, 86, 90, 106, 112, 119, 121, 122, 130, 133, 137, 149, 150], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 86, 90, 102, 106, 112, 119, 121, 122, 129, 130, 133, 147, 149, 161, 164, 165, 167, 169, 173, 183, 194, 207, 219, 228, 235, 239, 244, 247, 252, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 346, 349, 362, 364, 366, 367], "super": [3, 102, 119, 121, 122, 130, 133, 149, 183, 194, 207, 252, 258, 260, 265, 271, 276, 278, 280, 349, 362, 364, 366], "td_reset": [3, 121], "exclud": [3, 8, 53, 58, 86, 90, 106, 112, 121, 125, 135, 181, 219, 361, 364], "r": [3, 4, 31, 119, 121, 128, 143, 157, 198, 248, 256, 287, 344, 350, 362, 367], "break_when_any_don": [3, 86, 90, 106, 112, 121, 173, 242, 361], "3633e": [3, 121], "02": [3, 86, 90, 106, 112, 121, 348, 350, 351, 358, 362, 363, 365], "4877e": [3, 121], "01": [3, 121, 143, 243, 254, 259, 272, 275, 348, 350, 352, 361, 362, 363, 365], "2849e": [3, 121], "7584e": [3, 121], "6609e": [3, 121], "6166e": [3, 121], "8366e": [3, 121], "2761e": [3, 121], "5685e": [3, 121], "4102e": [3, 121], "8111e": [3, 121], "9959e": [3, 121], "0865e": [3, 121], "5644e": [3, 121], "2119e": [3, 121], "2542e": [3, 121], "03": [3, 86, 90, 106, 112, 121, 143, 348, 350, 362, 363, 365], "9952e": [3, 121], "4059e": [3, 121], "2094e": [3, 121], "9009e": [3, 121], "5140e": [3, 121], "3554e": [3, 121], "2920e": [3, 121], "7893e": [3, 121], "6429e": [3, 121], "3057e": [3, 121], "2867e": [3, 121], "6963e": [3, 121], "3818e": [3, 121], "2576e": [3, 121], "2679e": [3, 121], "1640e": [3, 121], "00": [3, 82, 83, 121, 348, 350, 351, 352, 361, 362, 363, 365], "6972e": [3, 121], "0212e": [3, 121], "5959e": [3, 121], "4637e": [3, 121], "3121e": [3, 121], "2168e": [3, 121], "5232e": [3, 121], "7704e": [3, 121], "7457e": [3, 121], "4127e": [3, 121], "1064e": [3, 121], "0854e": [3, 121], "5712e": [3, 121], "2189e": [3, 121], "5235e": [3, 121], "8289e": [3, 121], "0009e": [3, 121], "0257e": [3, 121], "8893e": [3, 121], "5872e": [3, 121], "9405e": [3, 121], "7766e": [3, 121], "0403e": [3, 121], "0626e": [3, 121], "2959e": [3, 121], "7263e": [3, 121], "2775e": [3, 121], "9564e": [3, 121], "0411e": [3, 121], "6769e": [3, 121], "6354e": [3, 121], "8698e": [3, 121], "1765e": [3, 121], "6292e": [3, 121], "5375e": [3, 121], "1820e": [3, 121], "7023e": [3, 121], "5836e": [3, 121], "9016e": [3, 121], "4826e": [3, 121], "6191e": [3, 121], "6387e": [3, 121], "8667e": [3, 121], "2056e": [3, 121], "1147e": [3, 121], "5991e": [3, 121], "0278e": [3, 121], "5219e": [3, 121], "3067e": [3, 121], "6617e": [3, 121], "3322e": [3, 121], "2629e": [3, 121], "4599e": [3, 121], "7298e": [3, 121], "5848e": [3, 121], "0148e": [3, 121], "5745e": [3, 121], "6982e": [3, 121], "7877e": [3, 121], "3527e": [3, 121], "7285e": [3, 121], "6668e": [3, 121], "0583e": [3, 121], "6956e": [3, 121], "3962e": [3, 121], "9845e": [3, 121], "5015e": [3, 121], "5903e": [3, 121], "9993e": [3, 121], "9418e": [3, 121], "0196e": [3, 121], "6557e": [3, 121], "2109e": [3, 121], "8997e": [3, 121], "1507e": [3, 121], "7363e": [3, 121], "0310e": [3, 121], "9574e": [3, 121], "8980e": [3, 121], "0090e": [3, 121], "torchvis": [3, 147, 169, 309, 366, 367], "base_env": [3, 83, 86, 90, 91, 96, 106, 112, 119, 122, 128, 130, 132, 133, 141, 145, 149, 151, 157, 159, 161, 162, 165, 173, 307, 349, 350, 351, 363, 366, 367], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 102, 106, 112, 118, 120, 122, 129, 134, 165, 173, 184, 185, 205, 256, 329, 330, 338, 339, 340, 350, 364], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 86, 88, 90, 106, 112, 119, 121, 122, 124, 125, 126, 129, 130, 131, 134, 135, 136, 137, 140, 141, 146, 148, 149, 150, 152, 155, 156, 159, 160, 161, 162, 164, 165, 170, 171, 173, 181, 182, 183, 199, 203, 206, 207, 235, 236, 238, 239, 242, 243, 246, 247, 248, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 287, 288, 289, 290, 291, 292, 324, 349, 362], "appar": [3, 317], "bring": [3, 351, 353, 367], "signific": [3, 5, 8, 351, 367], "kind": [3, 37, 43, 181, 355, 364], "consult": 3, "interest": [3, 244, 248, 344, 350, 351, 353, 361, 362, 367], "resize_par": 3, "easi": [3, 5, 51, 56, 84, 85, 86, 90, 95, 96, 106, 112, 235, 239, 240, 243, 344, 345, 349, 350, 351, 361, 363, 364, 367], "graph": [3, 4, 8, 82, 83, 95, 96, 284, 285, 349, 362], "revers": [3, 201], "order": [3, 15, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 74, 86, 90, 106, 112, 126, 130, 133, 145, 165, 173, 231, 237, 247, 249, 250, 252, 257, 258, 260, 264, 265, 271, 275, 276, 277, 278, 280, 350, 361], "chain": [3, 33, 34, 35, 37, 38, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 129, 132, 184, 185, 250, 367], "invers": [3, 4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 125, 130, 133, 143, 152, 173, 255, 264, 271, 362], "in_keys_inv": [3, 128, 130, 131, 133, 143, 144, 145, 149, 150, 152, 157, 164, 349, 360, 362, 367], "append_transform": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 106, 112, 124, 147, 161, 165, 167, 349, 352, 362, 364, 366, 367], "doubletofloat": [3, 333, 349, 351, 360], "float32": [3, 13, 14, 15, 25, 34, 39, 40, 41, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 79, 82, 83, 86, 89, 90, 91, 95, 96, 102, 105, 106, 110, 111, 112, 113, 114, 122, 130, 133, 134, 135, 143, 145, 149, 150, 152, 156, 159, 161, 163, 178, 181, 183, 193, 194, 199, 203, 207, 219, 220, 228, 231, 232, 233, 234, 236, 237, 242, 243, 244, 245, 246, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 286, 333, 344, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 366, 367], "float64": [3, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 90, 100, 101, 106, 112, 129, 130, 133, 147, 161, 164, 165, 167, 169, 173, 247, 360], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 54, 86, 89, 90, 91, 106, 112, 130, 133, 134, 155, 165, 173, 181, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 307, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 346, 349, 351, 353, 364], "manipul": [3, 4, 8, 84, 85, 147, 167], "third_transform": 3, "unexpect": [3, 31, 86, 90, 106, 112, 173, 367], "behviour": 3, "fortun": [3, 352, 353, 354, 357], "alreadi": [3, 8, 11, 31, 33, 35, 38, 44, 51, 86, 90, 106, 112, 161, 173, 182, 248, 288, 289, 290, 291, 349, 351, 357, 361], "chang": [3, 5, 7, 31, 34, 37, 40, 41, 51, 62, 63, 64, 66, 72, 73, 75, 76, 79, 86, 90, 106, 112, 122, 129, 130, 131, 133, 135, 141, 149, 150, 156, 159, 164, 165, 171, 173, 201, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 345, 349, 352, 361, 362, 363, 364, 367], "catfram": [3, 242, 350], "hold": [3, 284, 285, 362, 364], "notic": [3, 77, 125, 351, 358, 362], "parenthood": 3, "henc": [3, 34, 148, 182, 210, 344, 349, 351, 361, 362], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 106, 112, 362], "discret": [3, 23, 26, 29, 30, 32, 46, 86, 90, 100, 101, 106, 107, 108, 112, 113, 114, 132, 217, 220, 263, 264, 265, 266, 344, 350, 354, 361, 362, 367], "might": [3, 33, 35, 36, 38, 311, 343, 349, 353, 367], "action_mask": [3, 95, 96, 107, 108, 110, 111, 119], "unavail": [3, 107, 108], "probabl": [3, 4, 8, 39, 68, 71, 192, 194, 197, 199, 201, 203, 205, 208, 209, 217, 227, 239, 244, 248, 344, 350, 354, 366], "categor": [3, 26, 30, 32, 82, 83, 89, 91, 92, 95, 96, 100, 101, 103, 104, 107, 108, 109, 113, 114, 119, 134, 194, 217, 220, 237, 238, 244, 245, 246, 261, 264, 265, 286, 352], "probabilistictensordictmodul": [3, 141, 248, 249, 366], "tensordictsequenti": [3, 199, 203, 237, 239, 242, 249, 344, 349, 350, 352, 354, 358, 360, 363, 366], "maskedcategor": [3, 209, 342], "linear": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 102, 106, 112, 129, 141, 147, 161, 164, 165, 167, 169, 173, 183, 184, 185, 187, 188, 189, 190, 194, 196, 205, 207, 210, 211, 212, 213, 214, 220, 221, 222, 231, 232, 233, 234, 239, 240, 241, 242, 243, 244, 245, 247, 250, 252, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 336, 344, 350, 360, 363, 366], "in_feat": 3, "out_feat": 3, "logit": [3, 35, 39, 193, 208, 209, 217, 238, 244, 264, 265, 344], "dist": [3, 10, 208, 209, 217, 354], "distribution_class": [3, 141, 232, 233, 234, 236, 244, 248, 250, 257, 258, 264, 265, 271, 275, 276, 277, 278, 344, 349, 351, 354, 361, 366], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 55, 82, 83, 86, 90, 91, 95, 96, 101, 104, 106, 107, 108, 112, 114, 173, 174, 199, 203, 229, 232, 233, 234, 235, 240, 242, 243, 245, 253, 286, 344, 349, 350, 351, 352, 355, 358, 361, 367], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 119, 148, 173], "enviorn": [3, 100, 107, 108, 113, 114, 361], "itself": [3, 31, 86, 90, 106, 112, 116, 121, 173, 273, 351, 353], "mission": 3, "irrespect": [3, 247, 248], "dmcontrol": [3, 86, 90, 106, 112], "jumanji": [3, 86, 90, 95, 96, 106, 112], "special": [3, 342, 344, 349, 352, 367], "framework": [3, 4, 9, 21, 82, 83, 86, 90, 95, 96, 102, 106, 112, 197, 366, 367], "Its": [3, 31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 171, 173, 247, 292], "success": [3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 125, 164, 239, 350, 356, 358, 362, 364, 366], "foundat": [3, 5, 107, 108, 351, 361], "inspir": [3, 362], "gone": [3, 4, 5, 242], "hard": [3, 7, 77, 84, 85, 106, 270, 350, 367], "prefer": [3, 13, 14, 16, 19, 22, 34, 37, 40, 41, 148, 156, 275, 321, 344, 351, 361, 364], "maintain": [3, 5, 9, 362], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 350, 351, 352, 356, 361, 362, 364, 367], "decor": [3, 8, 11, 118, 273, 288, 289, 290, 291], "relev": [3, 39, 288, 289, 290, 291, 292, 314, 362], "gym_backend": [3, 118, 342], "env1": [3, 360], "venv": 3, "python3": [3, 6, 7, 10, 349, 364, 367], "site": [3, 6, 7, 58, 118, 349, 364, 367], "env2": [3, 360], "_env": [3, 6, 89, 367], "classic_control": 3, "pendulumenv": [3, 362], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 98, 116], "handi": [3, 86, 90, 106, 112, 357], "side": [3, 4, 367], "v0": [3, 13, 14, 86, 90, 92, 95, 96, 97, 98, 106, 112, 129, 165, 171, 336], "26": [3, 86, 90, 106, 112, 348, 350, 351, 362, 363, 365], "fun": [3, 11, 118, 351, 361, 364], "reveal": 4, "bug": [4, 366], "curv": 4, "exploit": [4, 354], "video": [4, 9, 307, 309, 320, 340, 358, 361], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 141, 361, 363], "coeffici": [4, 39, 141, 361], "bonu": [4, 257, 259, 272, 275], "beta": [4, 34, 40, 65, 66, 264, 271, 272, 349, 350, 364, 366], "reduc": [4, 6, 26, 77, 160, 350], "downstream": [4, 349], "formul": [4, 361], "ob": [4, 8, 22, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 73, 74, 77, 86, 90, 106, 112, 119, 121, 130, 131, 133, 143, 157, 163, 178, 181, 187, 188, 189, 190, 210, 211, 245, 252, 258, 260, 265, 271, 276, 278, 280, 288, 289, 290, 291, 350, 360, 362, 364, 366, 367], "rate": [4, 51, 171, 287, 350, 351, 361], "gradient": [4, 31, 86, 90, 106, 112, 165, 173, 200, 209, 213, 217, 226, 227, 257, 259, 260, 264, 265, 271, 272, 273, 275, 276, 277, 278, 280, 287, 288, 289, 290, 291, 324, 349, 351, 361, 362], "easier": [4, 344, 349], "local": [4, 7, 10, 15, 20, 31, 66, 73, 86, 90, 106, 112, 165, 173, 210, 211, 219, 228, 286, 312, 314, 357, 358, 361], "optima": 4, "sens": [4, 356, 362], "product": [4, 9, 197, 198, 201, 202, 338, 339], "sum": [4, 20, 30, 32, 77, 82, 83, 84, 85, 89, 91, 92, 95, 96, 103, 104, 109, 124, 155, 208, 209, 228, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 274, 275, 276, 277, 278, 280, 287, 294, 345, 349, 350, 351, 352, 355, 358, 361, 362, 367], "track": [4, 13, 14, 15, 16, 17, 18, 19, 20, 41, 72, 155, 171, 173, 242, 243, 312, 317, 350, 352, 353, 356, 361, 362, 364], "stat": [4, 143, 328, 340, 350, 351], "w": [4, 68, 125, 127, 151, 163, 197, 243, 307, 350, 352, 364], "yield": [4, 15, 20, 31, 86, 90, 106, 112, 173, 273, 349, 355], "insight": 4, "auxiliari": [4, 355], "credit": 4, "futur": [4, 31, 33, 35, 38, 86, 90, 106, 112, 147, 165, 169, 173, 205, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 343, 366], "past": [4, 242, 350, 364], "spars": [4, 352], "ad": [4, 15, 22, 31, 34, 37, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 86, 90, 106, 112, 155, 165, 173, 212, 213, 243, 257, 259, 261, 266, 272, 275, 278, 286, 350, 352, 354, 364, 367], "intermedi": [4, 13, 14, 124, 199, 203, 238, 349, 363], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 349], "discov": 4, "score": [4, 39], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 366], "select": [4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 100, 101, 107, 108, 113, 114, 119, 121, 122, 124, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 142, 146, 148, 149, 150, 152, 155, 156, 159, 160, 161, 162, 164, 167, 168, 170, 171, 173, 183, 199, 203, 237, 245, 323, 349, 353, 364], "fall": [4, 53], "explicit": [4, 11, 44, 68, 204, 364], "mechan": [4, 31, 86, 90, 106, 112, 165, 173, 350, 355, 362], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 86, 90, 106, 112, 201, 264, 271, 351, 361], "addition": 4, "timestep": [4, 39, 53, 152, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 361], "realli": 4, "larg": [4, 26, 33, 35, 38, 130, 133, 167, 257, 259, 272, 275, 277, 350, 351, 361, 364], "huge": [4, 211, 352], "std": [4, 143, 171, 214, 218, 235, 349, 367], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 352, 353, 355, 356, 357, 358, 359, 360, 363, 364, 365], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 39, 77, 86, 90, 106, 112, 124, 143, 147, 161, 164, 165, 167, 172, 173, 183, 197, 198, 201, 202, 207, 212, 213, 235, 239, 240, 242, 243, 257, 258, 260, 261, 263, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 333, 340, 349, 350, 352, 353, 354, 356, 362, 367], "estim": [4, 51, 66, 73, 74, 134, 141, 187, 232, 233, 234, 257, 258, 259, 260, 261, 263, 265, 266, 267, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 286, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "unseen": 4, "extrins": 4, "wrong": [4, 66, 73], "bonus": 4, "denser": 4, "prior": [4, 222, 268, 361], "freshli": 4, "drop": [4, 72, 74, 181], "meant": [4, 31, 102], "encourag": [4, 106, 349, 350, 364], "measur": [4, 62, 63, 79, 82, 83, 95, 96, 351, 356], "novelti": 4, "revisit": 4, "previous": [4, 351, 367], "diminish": 4, "decreas": [4, 354], "ideal": [4, 143, 362], "down": [4, 13, 14, 15, 16, 352, 353], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 33, 35, 38, 350, 351, 352, 355, 356, 361, 362, 366, 367], "distil": 4, "nois": [4, 172, 213, 230, 243, 276, 280, 320, 340, 349], "exploratori": [4, 257, 259, 272, 275], "misalign": 4, "trade": [4, 354], "unavoid": 4, "divers": [4, 106, 112], "bootstrap": [4, 266, 289, 295, 296, 349, 352], "noisi": [4, 212, 213, 230, 344], "unstabl": [4, 200, 226, 227], "inher": 4, "stochast": [4, 141, 195, 213, 215, 222, 258, 262, 264, 265, 271, 274, 276, 278, 344, 351, 354, 361], "enemi": 4, "pomdp": [4, 364], "loos": [4, 344, 350, 351], "nonexist": 4, "architectur": [4, 191, 355, 361], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 34, 36, 37, 39, 42, 44, 57, 60, 61, 68, 69, 71, 76, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 103, 104, 106, 109, 112, 123, 124, 125, 126, 127, 130, 132, 133, 137, 139, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 163, 164, 171, 184, 185, 192, 194, 197, 201, 205, 208, 209, 210, 211, 217, 220, 224, 236, 249, 250, 262, 306, 307, 319, 320, 321, 323, 324, 333, 344, 349, 351, 352, 360, 361, 367], "lstm": [4, 202, 203, 204, 214], "rel": [4, 68, 161, 192, 225, 349, 350, 361, 364], "tend": 4, "stabl": [4, 9, 10, 105], "compens": 4, "descent": [4, 213], "minimum": [4, 106, 112, 153, 195, 214, 225, 226, 227, 251, 254, 256, 258, 265, 273, 274, 278, 315, 349, 351, 358, 361], "manual": [4, 17, 19, 20, 90, 349, 352, 364], "deviat": [4, 143, 171, 183, 195, 207, 212, 213, 218, 235, 275, 280, 349, 354, 361], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 73, 121, 197, 198, 201, 202, 353, 354, 355, 356, 357, 358], "stabil": [4, 138, 257, 259, 272, 275, 277], "stage": [4, 349, 362], "never": [4, 13, 14, 16, 356], "prevent": [4, 25, 27, 200, 226, 227, 257, 259, 272, 275, 277, 322, 364], "entir": [4, 57, 86, 90, 106, 112, 210, 351, 353, 362, 364], "submit": [4, 122, 343, 366], "system": [4, 5, 351, 361, 362], "adequ": [4, 174, 351, 361], "infeas": 4, "allevi": [4, 344], "prune": 4, "fire": [4, 31, 86, 90, 106, 112, 173], "illeg": 4, "move": [4, 31, 59, 86, 90, 106, 112, 129, 131, 147, 161, 164, 165, 167, 169, 171, 173, 181, 205, 247, 322, 349, 350, 352, 353, 366, 367], "chess": 4, "combin": [4, 164, 350, 357, 364], "grasp": 4, "top": [4, 77, 82, 83, 95, 96, 183, 207, 354], "wherein": 4, "cumul": [4, 155, 160, 183, 294, 351], "q": [4, 9, 86, 90, 106, 112, 187, 188, 189, 190, 193, 194, 196, 219, 220, 228, 234, 238, 245, 246, 258, 260, 261, 263, 264, 265, 266, 270, 271, 276, 278, 280, 286, 333, 342, 349, 355], "flow": [4, 349, 351, 361, 362, 364], "reparameter": [4, 192, 209, 217], "soft": [4, 270, 278, 279], "critic": [4, 8, 232, 241, 257, 259, 260, 264, 265, 271, 272, 275, 276, 277, 278, 280, 349, 355], "clip": [4, 39, 128, 153, 257, 259, 272, 275, 277, 280, 324, 351, 361, 362], "oppos": [4, 44], "incorrect": 4, "thought": [4, 86, 90, 106, 112], "bound": [4, 20, 24, 25, 31, 86, 90, 106, 112, 128, 142, 171, 173, 221, 222, 231, 237, 238, 243, 244, 245, 246, 247, 248, 251, 280, 344, 349, 350, 351, 367], "region": 4, "squash": [4, 352, 366], "tanh": [4, 184, 185, 197, 198, 200, 201, 202, 205, 211, 225, 226, 227, 251, 351, 354, 361, 362, 363, 366], "correct": [4, 33, 35, 38, 86, 90, 106, 112, 141, 327, 351, 352], "prob": [4, 208, 209, 217, 351, 361], "rememb": 4, "remap": 4, "origin": [4, 8, 33, 35, 38, 39, 94, 131, 132, 141, 147, 165, 169, 173, 197, 244, 247, 248, 270, 273, 275, 333, 349, 360, 362, 367], "histor": 5, "ceas": 5, "farama": [5, 55, 97, 98, 107, 108, 351, 362], "bc": [5, 366], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 106, 112, 173, 174, 231, 237, 238, 244, 245, 246, 247, 248, 351, 361], "best": [5, 9, 94, 199, 203, 361, 364, 366], "gymwrapp": [5, 86, 90, 106, 112, 135, 156, 159, 170, 342, 351, 366], "feel": [5, 343, 358, 366], "free": [5, 7, 130, 133, 257, 268, 275, 346, 351, 358, 361, 366], "gladli": 5, "prepar": [6, 54, 351], "conda": [6, 7, 343], "cmake": 6, "activ": [6, 7, 9, 184, 185, 191, 195, 205, 210, 211, 259, 272, 275, 344, 362, 366], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 54, 343], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 92], "y": [6, 7, 37, 105, 196, 204, 210, 229, 349, 361, 364], "facebookresearch": [6, 54, 92], "subdirectori": 6, "verbos": [6, 358], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 48, 86, 90, 106, 112, 149, 158, 173, 273, 361, 367], "command": [6, 7, 10, 351, 361, 362, 367], "readm": [6, 7, 113], "md": [6, 7], "habitatenv": [6, 342], "_has_habitat": 6, "available_env": [6, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 97, 100, 101, 105, 106, 109, 110, 111, 112, 113, 114, 367], "startswith": [6, 345, 349, 355], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 87, 273, 349], "env_nam": [6, 82, 84, 86, 89, 90, 92, 95, 97, 103, 106, 109, 112, 349, 351, 367], "llvmlite": 6, "config": [6, 7, 147, 169, 186, 191, 218, 328, 329, 330, 333, 334, 337], "var": [6, 7, 31, 86, 90, 106, 112, 165, 173, 273, 278], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 237], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 86, 90, 106, 112, 165, 173, 273, 278, 364], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 86, 350, 358], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 53], "stand": [7, 84, 85, 106, 112, 360, 362], "joint": [7, 350], "dynam": [7, 54, 57, 59, 173, 264, 271, 351, 353, 362], "contact": [7, 36], "engin": [7, 109, 362], "biomechan": 7, "graphic": 7, "anim": [7, 361], "area": 7, "demand": [7, 357, 367], "fast": [7, 9, 82, 83, 150, 181, 276, 349, 350, 351], "accur": [7, 53, 59, 350, 362, 364], "articul": 7, "acquir": [7, 351], "deepmind": [7, 8, 9, 57, 84, 85, 86, 90, 100, 101, 106, 112, 134, 351, 353], "whomev": 7, "licenc": 7, "incorpor": [7, 86, 90, 106, 112, 235, 239, 240, 243, 352, 354, 362], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 343], "tip": [7, 343], "glfw": [7, 349], "osmesa": 7, "egl": 7, "advic": [7, 57, 367], "sudo": [7, 343], "enabl": [7, 8, 53, 62, 63, 72, 79, 122, 199, 203, 242, 243, 307, 320, 351, 353, 361, 362, 364], "apt": [7, 361], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 62, 63, 64, 75, 76, 79, 350, 352], "workflow": [7, 232, 233, 234], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 23, 26, 32, 123, 194, 220, 237, 238, 245, 246, 261, 264, 265, 286], "mkdir": 7, "tag": [7, 307, 309, 312, 340, 357, 358], "earlier": [7, 349, 351, 352, 361, 364], "roboti": 7, "html": [7, 103, 105], "wget": 7, "mujoco210": 7, "tar": [7, 54], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 106, 112], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 33, 35, 44, 60], "bin": [7, 194, 238, 344], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 190, 244, 248, 349, 351, 364], "nvidia": [7, 94], "older": [7, 11], "hack": [7, 349], "line": [7, 31, 51, 86, 90, 106, 112, 173, 349, 350, 357, 361, 364, 367], "adatp": 7, "script": [7, 54, 174, 333, 336, 340, 344, 345, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "unnot": [7, 148], "until": [7, 20, 162, 164, 173, 351, 352, 358, 361], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 350, 364], "troubleshoot": 7, "gl": 7, "h": [7, 68, 125, 127, 151, 163, 197, 198, 199, 201, 202, 203, 207, 307, 350, 352, 364], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 312, 314, 346, 349, 354, 357], "devel": 7, "ubuntu": [7, 94], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 350, 352, 360], "libstdc": 7, "glibcxx_3": 7, "29": [7, 350, 362], "compil": [7, 31, 66, 73, 74, 86, 90, 106, 112, 173, 197, 198, 201, 202, 204], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 170, 351, 360], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 86, 90, 106, 112, 142, 165, 173, 278, 364, 367], "job": [7, 17, 18, 19, 21, 37, 364], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 82, 83, 348, 350, 354, 362, 365], "114": [7, 362], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 352, 362], "offscreenopenglcontext": 7, "opengl": [7, 361], "global": [7, 31, 86, 90, 106, 107, 108, 112, 173, 219, 228, 244, 248, 286, 346, 349, 361], "cuda_visible_devic": 7, "id": [7, 22, 39, 66, 68, 73, 74, 86, 89, 90, 106, 112, 243, 276, 310, 314, 333, 356, 364], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 362], "correctli": [7, 31, 86, 90, 106, 112, 173], "lgl": 7, "libegl": 7, "x11": [7, 361], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 346], "n_training_step": 8, "datapoint": [8, 44, 364], "n_data_per_train": 8, "no_grad": [8, 31, 86, 90, 106, 112, 141, 173, 197, 198, 201, 202, 288, 289, 290, 291, 351, 352, 361], "loss_fn": [8, 352, 355, 356, 366], "zero_grad": [8, 31, 86, 90, 106, 112, 173, 346, 349, 351, 352, 355, 358, 361, 362], "backpropag": [8, 82, 83, 95, 96, 106, 257, 258, 259, 264, 265, 266, 267, 268, 269, 271, 272, 273, 275, 276, 277, 278, 280, 286, 355, 361, 362], "differenti": [8, 44, 82, 83, 141, 288, 289, 290, 291, 352, 354, 355, 361, 362], "denomin": 8, "artifact": 8, "numer": [8, 37, 90, 171, 200, 226, 227, 231, 237, 238, 244, 245, 246, 247, 248, 322, 351, 364, 367], "misconcept": 8, "freed": 8, "appear": [8, 32, 51, 57, 66, 73, 74, 362, 364], "compuat": 8, "fix": [8, 106, 161, 258, 274, 278, 350, 358, 362, 367], "retain_graph": [8, 82, 83], "discuss": [8, 9, 356, 361], "inplac": [8, 31, 33, 35, 38, 86, 90, 106, 112, 173, 349], "onto": [8, 32, 33, 35, 38, 178, 231, 235, 237, 238, 243, 244, 245, 246, 247, 248, 352, 362], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 112, 119, 121, 122, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 146, 147, 148, 149, 150, 152, 155, 156, 159, 160, 161, 162, 164, 167, 168, 170, 171, 173, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 210, 211, 212, 214, 215, 216, 218, 219, 221, 222, 224, 228, 229, 235, 236, 238, 239, 242, 243, 244, 246, 247, 248, 251, 252, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 286, 288, 289, 290, 291, 292, 345, 362, 364, 366, 367], "submodul": [8, 31, 86, 90, 106, 112, 116, 173, 273], "param": [8, 31, 39, 86, 90, 102, 106, 112, 122, 129, 130, 131, 135, 141, 149, 150, 156, 159, 164, 173, 192, 194, 225, 236, 244, 247, 250, 273, 282, 285, 288, 289, 290, 291, 292, 349, 358, 361, 362, 363, 366], "grad": [8, 31, 82, 83, 86, 90, 106, 112, 173, 349, 351], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 86, 90, 106, 107, 108, 112, 129, 147, 161, 164, 165, 167, 169, 173, 214, 219, 247], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 40, 65, 66, 125, 137, 148, 166, 267, 288, 290, 291, 345, 351, 361, 362], "much": [8, 13, 14, 16, 34, 40, 57, 65, 66, 106, 112, 272, 275, 351, 353, 357, 361, 362, 364, 367], "render": [8, 113, 307, 320, 349, 350, 351, 353, 357], "factor": [8, 31, 152, 173, 200, 213, 226, 227, 235, 239, 240, 243, 258, 263, 266, 267, 269, 279, 294, 349, 350, 354, 358, 361, 364, 367], "fit": [8, 11, 143, 345, 346, 349], "bottlneck": 8, "brax": [8, 82, 83, 86, 90, 106, 112, 150, 353, 367], "jax": [8, 11, 82, 83, 95, 96], "improperli": 8, "underli": [8, 86, 90, 106, 112, 273, 353, 355, 357, 362], "tedeiou": 8, "priorit": [8, 34, 40, 65, 66, 260, 261, 263, 264, 265, 271, 276, 278, 280, 349, 350, 356], "amount": [8, 243, 350, 364], "costli": [8, 362], "constitut": [8, 350, 361, 362], "plain": [8, 353], "profil": 8, "frequent": [8, 364], "program": [8, 264, 271, 367], "functorch": [8, 10], "incl": 8, "suit": [8, 85, 351, 353, 367], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 73, 74, 122, 247, 250, 273, 361, 362, 364, 366], "new_shap": 8, "permut": [8, 72, 145, 366, 367], "idea": [9, 276, 346, 352, 354, 361], "introductori": 9, "intro": [9, 351, 352], "dai": [9, 366], "2022": [9, 10, 362, 366], "spin": [9, 84, 85], "deep": [9, 125, 187, 188, 189, 190, 193, 243, 257, 270, 278, 279, 349], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 354], "summari": [9, 143, 171, 349, 350, 351, 352], "reddit": 9, "reagent": 9, "orient": [9, 59, 367], "baselines3": 9, "tf": 9, "bandit": [9, 105], "tensorflow": [9, 208, 209], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 358], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 366], "grade": 9, "factori": [9, 42, 349], "cherri": 9, "jaxrl": 9, "mbrl": [9, 102, 344], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 362], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 351, 352, 361], "notebook": [10, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "24": [10, 58, 74, 89, 103, 104, 242, 348, 350, 362, 365], "pip3": [10, 349, 351, 352, 361], "url": [10, 92], "org": [10, 34, 54, 55, 57, 59, 65, 66, 82, 83, 84, 85, 92, 95, 96, 100, 101, 103, 104, 105, 109, 113, 114, 125, 147, 167, 186, 187, 188, 189, 190, 191, 194, 195, 196, 201, 207, 208, 209, 213, 215, 216, 219, 221, 222, 228, 238, 243, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 274, 275, 277, 278, 279, 288, 293, 301, 341, 359, 363], "whl": 10, "u": [10, 56, 197, 198, 201, 202, 362], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 273], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 68, 77, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 100, 101, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 119, 121, 125, 132, 134, 140, 141, 143, 147, 148, 151, 156, 159, 160, 165, 167, 169, 170, 171, 173, 175, 179, 181, 182, 183, 193, 194, 199, 203, 204, 206, 207, 210, 211, 212, 213, 214, 219, 220, 228, 231, 237, 238, 242, 244, 245, 246, 247, 248, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 286, 287, 288, 289, 290, 291, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 333, 334, 340, 350, 351], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 199, 203, 204, 366], "longer": [11, 350, 358, 361, 364], "x": [11, 22, 25, 31, 37, 39, 57, 74, 141, 163, 185, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 210, 211, 229, 237, 244, 245, 254, 256, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 324, 349, 362, 364, 366], "23": [11, 58, 74, 348, 350, 352, 355, 362, 365], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 58, 82, 83, 90, 95, 96, 202, 256, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 349, 350, 351, 352, 358, 361, 362, 364, 367], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 100, 101, 103, 104, 106, 107, 108, 109, 112, 113, 114, 125, 126, 132, 143, 160, 161, 162, 165, 171, 173, 197, 200, 201, 210, 211, 226, 227, 237, 245, 251, 258, 268, 273, 274, 278, 288, 290, 291, 320, 321, 346, 349, 350, 351, 352, 362, 367], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 86, 90, 106, 112, 167, 186, 218], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 58, 66, 73, 74, 86, 87, 88, 90, 100, 101, 103, 106, 107, 108, 112, 113, 114, 115, 141, 161, 165, 170, 171, 173, 184, 185, 186, 187, 188, 189, 190, 191, 196, 204, 205, 218, 244, 248, 278, 311, 312, 320, 329, 330, 333, 338, 339, 340, 349, 350, 351, 364, 367], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 87, 106, 112, 349, 366], "device_typ": [13, 15, 16, 26, 29, 32, 184, 185, 186, 187, 188, 189, 190, 196, 204, 205, 210, 211, 212, 213, 218], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 350], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 350], "create_env_kwarg": [13, 14, 15, 16, 20, 87, 103, 106, 112, 349, 367], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 31, 152, 350, 364], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 273, 320, 349, 350, 351, 352, 354, 366], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 176, 180, 244, 248, 320], "exploration_mod": [13, 15, 16, 17, 18, 19, 342, 344], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 32, 34, 39, 40, 45, 57, 65, 66, 68, 86, 90, 106, 112, 121, 125, 129, 130, 133, 141, 143, 147, 152, 153, 154, 160, 161, 163, 164, 165, 167, 169, 171, 173, 192, 195, 197, 200, 201, 205, 208, 209, 212, 213, 221, 222, 225, 227, 235, 247, 251, 254, 255, 256, 257, 258, 259, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 287, 293, 294, 295, 296, 297, 298, 299, 300, 301, 322, 349, 350, 364, 367], "num_thread": [13, 14, 16, 33, 35, 38, 106, 112], "num_sub_thread": [13, 14, 16, 106, 112], "set_trunc": [13, 14, 15, 16, 86, 90, 106, 112], "datacollector": [13, 14, 15, 16, 31, 248, 275, 351, 356, 364], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 66, 73, 231, 235, 237, 238, 243, 244, 245, 246, 247, 248, 250, 344, 366], "sota": [13, 14, 102, 138, 277, 315, 329, 349, 350, 351, 354, 355, 356, 361, 366], "env_mak": [13, 14, 15, 20, 336, 367], "50": [13, 14, 15, 20, 36, 39, 51, 59, 73, 74, 100, 101, 173, 350, 351, 352, 361, 362, 363, 364], "2000": [13, 14, 15, 31, 44, 93, 307, 351, 364], "int64": [13, 14, 15, 22, 26, 29, 33, 35, 36, 38, 39, 40, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 86, 90, 99, 100, 101, 105, 106, 107, 108, 110, 111, 112, 122, 134, 145, 152, 159, 194, 220, 237, 238, 243, 244, 245, 246, 344, 351, 352, 353, 354, 356, 357, 362, 364, 366], "shutdown": [13, 14, 15, 16, 20, 122, 349, 366], "del": [13, 14, 15, 349, 351, 360, 366, 367], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 124, 229, 237, 242, 245, 352], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 44], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 350], "divis": [13, 14, 15, 16, 17, 18, 19, 51, 57, 66, 73, 74, 361], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 90, 121, 161, 170, 203, 352, 362, 363], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 326, 350], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 60, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 103, 104, 106, 109, 112, 129, 130, 133, 141, 147, 161, 164, 165, 167, 169, 171, 173, 247, 333, 367], "span": [13, 14, 15, 16, 17, 18, 19, 20, 57, 73], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 173, 242, 350, 351, 361], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 39, 314, 344, 361, 362], "round": [13, 14, 15, 16, 17, 18, 19, 20, 51], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 55, 86, 90, 106, 112, 173], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 170, 366], "ratio": [13, 14, 16, 39, 349, 351], "finish": [13, 14, 16, 20, 90, 152, 367], "rest": [13, 14, 16, 344, 351, 352, 362, 366], "earli": [13, 14, 16, 31, 90, 159, 366], "plu": [13, 14, 16, 39, 106, 112, 362], "safeti": [13, 14, 16, 102, 106, 112], "harm": [13, 14, 16, 106, 112], "exclus": [13, 14, 47, 48, 51, 57, 66, 73, 74, 122, 137, 197, 199, 201, 203, 208, 209, 237, 238, 245, 246, 279, 280, 288, 289, 290, 291, 292, 314, 340, 344], "add_truncated_kei": [13, 14, 15, 16, 86, 90, 106, 112, 165], "ordereddict": [13, 14, 15, 16, 20, 31, 86, 90, 106, 112, 165, 171, 173, 278, 350], "form": [13, 14, 16, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 112, 171, 173, 197, 199, 201, 203, 256, 257, 259, 272, 275, 324, 344, 354, 361], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 86, 90, 106, 112, 165], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 32, 39, 46, 66, 73, 74, 75, 86, 90, 106, 112, 121, 134, 138, 143, 159, 184, 185, 205, 210, 211, 264, 271, 278, 364], "increment": [13, 14, 15, 16, 86, 90, 106, 112, 272], "env_fn": [13, 14, 15, 16, 87, 338, 339], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 73, 74, 189, 190, 362], "out_se": [13, 14, 15, 16, 367], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 45, 51, 53, 54, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 120, 122, 129, 147, 149, 158, 161, 164, 165, 166, 168, 169, 172, 173, 183, 184, 185, 187, 188, 189, 190, 193, 196, 199, 200, 203, 205, 206, 207, 210, 211, 217, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 286, 287, 288, 289, 290, 291, 292, 307, 311, 312, 314, 317, 324, 329, 330, 333, 337, 338, 339, 345, 349, 351, 361, 364], "envcreat": [15, 21, 106, 112, 336, 337, 340, 342, 349, 350, 366, 367], "return_same_td": 15, "interruptor": 15, "cautious": [15, 275], "whole": [15, 25, 27, 31, 44, 86, 90, 106, 112, 165, 173, 244, 278, 315, 349, 351], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 354], "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 90, 103, 141, 257, 259, 272, 275, 349, 350, 353, 360, 362, 366], "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 324], "respect": [17, 18, 19, 31, 86, 90, 106, 112, 123, 129, 130, 133, 147, 148, 157, 161, 164, 165, 167, 169, 173, 197, 201, 210, 222, 247, 252, 257, 259, 272, 275, 277, 288, 290, 291, 319, 351, 352, 361], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 343, 350, 351, 354, 357, 360, 364], "fashion": [17, 19, 20, 33, 35, 38, 74], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 106, 112, 137], "seen": [17, 18, 19, 20, 86, 90, 106, 112, 345, 349, 350, 352, 355, 361, 364], "submitit_delai": [17, 21], "former": [17, 18, 19, 34, 37, 40, 41, 53, 86, 90, 106, 112, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 349], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 362], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 349], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 32, 51, 244, 248], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 338, 339, 349, 350], "coordin": 20, "init": [20, 31, 86, 90, 106, 112, 173, 314, 350, 351], "autodetect": 20, "similarli": [20, 31, 72, 76, 86, 90, 106, 112, 173, 210, 249, 250, 264, 271, 367], "num_cpu": 20, "num_gpu": 20, "1024": [20, 191, 350, 364], "equat": [20, 57, 90, 243, 256, 259, 279, 351, 353, 362], "exce": [20, 364], "indefinit": [20, 50], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 324, 351, 352], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 355], "jump": [21, 353], "host": [21, 31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 186, 191, 218, 236], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 86, 90, 106, 112, 239, 240, 243, 244, 251, 257, 258, 260, 271, 275, 276, 278, 280, 342, 351, 361, 362, 366, 367], "rollout_tensordict": 22, "nestedkei": [22, 44, 66, 73, 74, 86, 90, 106, 112, 119, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 137, 139, 140, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 167, 171, 173, 181, 182, 235, 236, 239, 240, 242, 243, 248, 261, 286, 307], "durat": [22, 361], "meta": [22, 43, 53, 88, 92, 257, 259, 272, 275, 277, 346, 351, 361, 364], "aren": [22, 160, 352], "deprec": [22, 31, 86, 90, 106, 112, 165, 173, 175, 179, 240, 257, 259, 261, 264, 265, 266, 271, 272, 275, 276, 277, 278, 286, 288, 289, 290, 291, 296, 367], "eventu": [22, 219, 352, 362], "supersed": 22, "recov": [22, 53, 55, 57, 58, 59, 73, 74, 235, 240, 243, 249, 264, 271, 360], "cat": [22, 252, 258, 260, 271, 276, 278, 280, 364, 366], "arang": [22, 26, 32, 66, 194, 209, 237, 315, 344, 364], "obs_": 22, "trajectory_id": 22, "int32": [22, 41, 51, 57, 73, 95, 96, 178, 242], "data_split": 22, "got": [22, 356], "int8": [23, 86, 99, 107, 108, 123], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "op": [23, 24, 26, 29, 30, 32, 43, 45, 46, 142, 170, 235, 239, 307, 326], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 41, 43, 45, 46, 82, 83, 86, 89, 91, 92, 95, 96, 103, 104, 109, 132, 216, 217, 221, 256, 344, 350, 351, 352, 354, 362, 364], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 243, 251], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 251, 362], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 184, 185, 205, 223, 224], "start_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "end_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 367], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 132, 201, 231, 235, 237, 238, 243, 244, 245, 246, 247, 248, 314, 344, 366, 367], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 95, 96, 102, 119, 122, 130, 133, 149, 183, 207, 244, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 278, 280, 362, 366, 367], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 161, 178, 362, 364], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 106, 112], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 164, 165, 214, 225, 340], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 32, 82, 83, 89, 91, 92, 95, 96, 100, 101, 103, 104, 107, 108, 109, 113, 114, 119, 132, 194, 217, 220, 237, 238, 245, 246, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 352], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 194, 220, 237, 245, 261, 263, 264, 265, 286, 342, 344, 354], "convert": [23, 26, 29, 30, 31, 32, 33, 35, 38, 44, 82, 83, 86, 89, 90, 91, 92, 95, 96, 103, 104, 106, 109, 112, 129, 130, 133, 147, 161, 164, 165, 167, 169, 171, 173, 247, 256, 273, 349, 350, 351, 362, 364], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "unflatten": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 122, 242], "upper": [24, 71, 142], "unnam": 25, "constraint": [25, 102, 351, 361], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 126, 333, 349], "td_project": 25, "absent": [25, 27, 53, 86, 90, 106, 112, 165], "is_empti": [25, 27, 362], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 86, 90, 106, 112, 173], "keysview": [25, 27], "reflect": [25, 27, 91, 107, 108, 170, 181, 273, 327, 350, 351, 352, 361], "lock_": [25, 27], "recurs": [25, 27, 31, 47, 48, 86, 90, 106, 112, 173, 273], "succeed": [25, 27], "selected_kei": [25, 27, 156, 349], "unlock_": [25, 27], "unlock": [25, 27, 33, 35, 38], "valuesview": 25, "onehottensorspec": [26, 82, 83, 89, 91, 92, 95, 96, 103, 104, 109], "action_valu": [26, 32, 193, 194, 220, 237, 238, 245, 246, 265, 273, 286, 344, 352, 354, 358], "argmax": [26, 86, 90, 106, 112, 194, 220, 238, 246, 354], "chosen_action_valu": [26, 32, 219, 220, 228, 245, 246, 286, 344, 352, 354], "outcom": [26, 32, 192, 225], "drawn": [27, 28, 161, 239, 244, 248, 351, 361], "lazystackedtensordict": [27, 51, 86, 90, 102, 106, 112, 360], "heterogen": [27, 28, 99, 107, 108, 174, 210, 211, 349, 350], "thrown": [28, 31, 86, 90, 106, 112, 173, 364], "nvec": [29, 30], "cardin": [29, 30, 194, 220, 237, 238, 246, 351], "ax": [29, 212, 213], "m": [29, 31, 86, 90, 106, 112, 132, 173, 248, 344, 350, 362], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 261, 264, 265, 286, 342], "use_regist": [30, 32], "to_categor": [30, 32], "to_categorical_spec": [30, 32], "multidiscretetensorspec": [30, 342], "gamma": [31, 152, 173, 207, 257, 258, 260, 261, 263, 265, 266, 267, 269, 271, 273, 275, 276, 277, 278, 280, 281, 282, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 336, 345, 349, 350, 351, 361, 366], "sutton": [31, 345, 361], "1988": 31, "tempor": [31, 199, 203, 207, 289, 290, 295, 296], "44": [31, 350, 351, 361, 362, 363], "discount": [31, 57, 87, 152, 173, 258, 263, 266, 267, 269, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 345, 350, 351, 361], "ahead": [31, 173, 367], "bias": [31, 197, 198, 201, 202, 254, 345, 349], "mitig": 31, "pleas": [31, 55, 86, 90, 106, 107, 108, 112, 122, 125, 162, 165, 173, 278, 343], "multisteptransform": [31, 342], "99": [31, 152, 171, 207, 269, 282, 287, 294, 336, 349, 350, 351, 355, 358, 362, 366], "add_modul": [31, 86, 90, 106, 112, 173], "child": [31, 86, 90, 106, 112, 173, 349], "fn": [31, 36, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 112, 173, 214, 338, 339], "init_weight": [31, 86, 90, 106, 112, 173], "fill_": [31, 86, 90, 106, 112, 173, 350, 352, 367], "net": [31, 86, 90, 106, 112, 173, 188, 190, 193, 196, 204, 211, 257, 258, 265, 271, 275, 276, 277, 278, 333, 336, 350, 362, 363, 366], "in_featur": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 184, 185, 187, 188, 189, 190, 196, 204, 205, 210, 211, 212, 213, 232, 247, 261, 263, 354, 355, 366], "out_featur": [31, 86, 90, 102, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 183, 184, 185, 187, 188, 189, 190, 195, 196, 199, 203, 204, 205, 207, 210, 211, 212, 213, 232, 237, 247, 261, 263, 344, 349, 352, 354, 355, 358, 366], "bia": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 184, 185, 187, 188, 189, 190, 195, 196, 197, 198, 199, 201, 202, 203, 205, 211, 212, 213, 214, 239, 240, 243, 247, 254, 255, 256, 273, 278, 345, 349, 350, 351, 352, 361, 366], "requires_grad": [31, 82, 83, 86, 90, 106, 112, 141, 165, 173, 278], "bfloat16": [31, 86, 90, 106, 112, 173], "datatyp": [31, 86, 90, 106, 112, 173, 364], "member": [31, 86, 90, 106, 112, 173, 273, 307], "xdoctest": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 273, 278], "buf": [31, 86, 90, 106, 112, 173], "20l": [31, 86, 90, 106, 112, 173, 273], "1l": [31, 86, 90, 106, 112, 173, 273], "5l": [31, 86, 90, 106, 112, 173, 273], "__call__": [31, 36, 86, 90, 106, 112, 173, 248, 346, 367], "doubl": [31, 45, 86, 90, 106, 112, 129, 130, 131, 133, 147, 161, 164, 165, 167, 169, 173, 247, 261, 266, 270, 276, 279, 286, 349, 350, 351, 352, 367], "eval": [31, 86, 90, 106, 112, 165, 171, 173, 349, 350, 351], "evalu": [31, 86, 90, 100, 101, 106, 112, 165, 173, 192, 208, 209, 217, 227, 276, 329, 330, 350, 351, 358], "dropout": [31, 86, 90, 106, 112, 165, 173, 197, 199, 201, 203, 205, 352], "batchnorm": [31, 86, 90, 106, 112, 165, 173], "disabl": [31, 86, 90, 106, 112, 165, 173, 200, 227, 349], "comparison": [31, 86, 90, 106, 112, 165, 173, 273, 349, 350], "similar": [31, 33, 35, 37, 38, 57, 86, 90, 106, 107, 108, 112, 129, 147, 161, 164, 165, 167, 168, 169, 171, 173, 232, 234, 244, 247, 248, 345, 349, 350, 351, 352, 354, 355, 356, 357, 362, 364, 367], "extra_repr": [31, 86, 90, 106, 112, 173], "nontermin": 31, "original_reward": 31, "newli": [31, 86, 90, 106, 112], "OR": 31, "get_buff": [31, 86, 90, 106, 112, 173], "get_submodul": [31, 86, 90, 106, 112, 173], "qualifi": [31, 86, 90, 106, 112, 173], "referenc": [31, 86, 90, 106, 112, 173], "attributeerror": [31, 86, 90, 106, 112, 173, 367], "resolv": [31, 86, 90, 106, 112, 173], "someth": [31, 86, 90, 99, 106, 112, 173, 343, 350, 351, 362, 367], "get_extra_st": [31, 86, 90, 106, 112, 171, 173], "set_extra_st": [31, 86, 90, 106, 112, 171, 173], "picklabl": [31, 86, 90, 106, 112, 171, 173], "pickl": [31, 86, 90, 106, 112, 171, 173], "get_paramet": [31, 86, 90, 106, 112, 173], "net_b": [31, 86, 90, 106, 112, 173], "net_c": [31, 86, 90, 106, 112, 173], "conv": [31, 86, 90, 106, 112, 173, 184, 185, 350], "conv2d": [31, 86, 90, 106, 112, 173, 185, 187, 188, 196, 210, 366], "kernel_s": [31, 86, 90, 106, 112, 173, 184, 185, 187, 188, 196, 210, 215, 350, 366], "stride": [31, 86, 90, 106, 112, 173, 184, 185, 187, 188, 196, 210, 350, 366], "diagram": [31, 86, 90, 106, 112, 173], "degre": [31, 86, 90, 106, 112, 173], "named_modul": [31, 86, 90, 106, 112, 173], "o": [31, 86, 90, 106, 112, 173, 202], "half": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 349], "ipu": [31, 86, 90, 106, 112, 173], "strict": [31, 33, 35, 38, 86, 90, 106, 112, 165, 173, 278], "descend": [31, 86, 90, 106, 112, 165, 173, 278], "get_swap_module_params_on_convers": [31, 86, 90, 106, 112, 165, 173, 278], "persist": [31, 86, 90, 106, 112, 165, 173, 181, 278], "enforc": [31, 72, 86, 90, 106, 112, 165, 173, 249, 278, 362], "preserv": [31, 86, 90, 106, 112, 165, 173, 278], "missing_kei": [31, 86, 90, 106, 112, 165, 173, 278], "unexpected_kei": [31, 86, 90, 106, 112, 165, 173, 278], "namedtupl": [31, 86, 90, 106, 112, 165, 173, 278], "duplic": [31, 72, 86, 90, 106, 112, 173, 261, 266, 273, 286], "l": [31, 86, 90, 106, 112, 173, 197, 201, 287, 351, 362], "idx": [31, 86, 90, 106, 112, 173], "named_buff": [31, 86, 90, 106, 112, 173], "remove_dupl": [31, 86, 90, 106, 112, 173, 273], "prepend": [31, 86, 90, 106, 112, 173, 273], "running_var": [31, 86, 90, 106, 112, 173], "named_children": [31, 86, 90, 106, 112, 173], "conv4": [31, 86, 90, 106, 112, 173], "conv5": [31, 86, 90, 106, 112, 173], "memo": [31, 86, 90, 106, 112, 173], "named_paramet": [31, 86, 90, 106, 112, 141, 173, 273], "register_backward_hook": [31, 86, 90, 106, 112, 173], "removablehandl": [31, 86, 90, 106, 112, 173], "favor": [31, 86, 90, 106, 112, 173, 351], "register_full_backward_hook": [31, 86, 90, 106, 112, 173], "register_buff": [31, 86, 90, 106, 112, 173], "running_mean": [31, 86, 90, 106, 112, 173], "alongsid": [31, 86, 90, 106, 112, 173, 357, 361], "num_featur": [31, 86, 90, 106, 112, 173], "register_forward_hook": [31, 86, 90, 106, 112, 173, 194, 220], "with_kwarg": [31, 86, 90, 106, 112, 173], "always_cal": [31, 86, 90, 106, 112, 173], "register_module_forward_hook": [31, 86, 90, 106, 112, 173], "regardless": [31, 86, 90, 106, 112, 173, 259, 272, 275], "register_forward_pre_hook": [31, 86, 90, 106, 112, 173], "invok": [31, 86, 90, 106, 112, 173], "And": [31, 86, 90, 106, 112, 173, 355], "forward_pr": [31, 86, 90, 106, 112, 173], "register_module_forward_pre_hook": [31, 86, 90, 106, 112, 173], "grad_input": [31, 86, 90, 106, 112, 173], "grad_output": [31, 86, 90, 106, 112, 173], "subsequ": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 112, 121, 173, 352], "technic": [31, 86, 90, 106, 112, 173, 350, 352, 354], "caller": [31, 86, 90, 106, 112, 173], "register_module_full_backward_hook": [31, 86, 90, 106, 112, 173], "register_full_backward_pre_hook": [31, 86, 90, 106, 112, 173], "backward_pr": [31, 86, 90, 106, 112, 173], "register_module_full_backward_pre_hook": [31, 86, 90, 106, 112, 173], "register_load_state_dict_post_hook": [31, 86, 90, 106, 112, 173], "incompatible_kei": [31, 86, 90, 106, 112, 173], "register_modul": [31, 86, 90, 106, 112, 173, 346], "alia": [31, 86, 90, 106, 112, 173], "register_paramet": [31, 86, 90, 106, 112, 173], "register_state_dict_pre_hook": [31, 86, 90, 106, 112, 173], "keep_var": [31, 33, 35, 38, 86, 90, 106, 112, 165, 173, 278], "requires_grad_": [31, 86, 90, 106, 112, 173], "autograd": [31, 86, 90, 106, 112, 165, 173, 278], "freez": [31, 86, 90, 106, 112, 173], "finetun": [31, 86, 90, 106, 112, 173], "gan": [31, 86, 90, 106, 112, 173], "share_memori": [31, 86, 87, 90, 106, 112, 173, 349], "share_memory_": [31, 86, 90, 106, 112, 173, 366], "destin": [31, 33, 35, 38, 86, 90, 106, 112, 124, 130, 131, 133, 165, 167, 171, 173, 181, 278, 307], "averag": [31, 86, 90, 106, 112, 165, 171, 173, 243, 267, 268, 278, 322, 349, 351], "shallow": [31, 86, 90, 106, 112, 165, 173, 278, 352], "detach": [31, 86, 90, 106, 112, 165, 173, 273, 278, 288, 289, 290, 291, 349], "non_block": [31, 33, 35, 38, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 352], "memory_format": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "channels_last": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "unchang": [31, 86, 90, 106, 112, 129, 132, 147, 161, 164, 165, 167, 169, 173, 239, 247, 321, 349, 364], "tri": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 357], "pin": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "4d": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "ignore_w": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "1913": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "3420": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "5113": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "2325": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "torch_doctest_cuda1": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "gpu1": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "1914": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "5112": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 362], "2324": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 351], "float16": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 198, 202, 247], "cdoubl": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "3741": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "j": [31, 34, 65, 66, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 346, 355], "2382": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "5593": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247, 362], "4443": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "complex128": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "6122": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "1150": [31, 86, 90, 106, 112, 129, 147, 161, 164, 165, 167, 169, 173, 247], "to_empti": [31, 86, 90, 106, 112, 173], "dst_type": [31, 86, 90, 106, 112, 173], "xpu": [31, 86, 90, 106, 112, 173], "set_to_non": [31, 86, 90, 106, 112, 173], "unidimension": 32, "keepdim": 32, "user_regist": 32, "priori": 32, "uniqu": [32, 73, 74, 100, 101, 125, 134, 160, 161, 162, 242, 314, 356, 364], "discretebox": [32, 86, 90, 106, 112, 354, 361, 367], "chosen_data": [33, 60], "rewarddata": [33, 60, 342], "rejected_data": [33, 60], "from_dataset": [33, 35, 60], "dataset_nam": [33, 35, 39, 44, 60, 105], "max_length": [33, 35, 36, 42, 44, 60, 358], "550": [33, 35, 39, 44, 60, 73, 74, 362], "root_dir": [33, 35, 44, 60], "from_disk": [33, 35, 44, 60], "carperai": [33, 35, 39, 44], "openai_summarize_comparison": [33, 35, 44], "sequen": [33, 35], "cach": [33, 35, 44, 51, 53, 54, 55, 57, 58, 59, 60, 66, 73, 86, 90, 106, 112, 121, 130, 133, 147, 165, 169, 181, 316, 363], "load_from_disk": [33, 35, 44, 60], "load_dataset": [33, 35, 44, 60], "attention_mask": [33, 35, 36, 38, 39, 42, 44, 60], "92534": 33, "input_id": [33, 35, 36, 38, 39, 42, 44, 60], "end_scor": [33, 38, 39, 60], "sub_data": [33, 35], "from_tensordict": [33, 35, 38], "non_tensordict": [33, 35, 38], "_nodefault": [33, 35, 38], "getattr": [33, 35, 38], "tensorclass": [33, 35, 38, 60, 62, 63, 79], "load_memmap": [33, 35, 38], "fetch": [33, 35, 38, 82, 83, 84, 85, 141, 354, 363, 364], "fromkei": [33, 35, 38], "memmap": [33, 35, 38, 62, 106, 112, 171, 307, 309, 321, 364], "saved_td": [33, 35, 38], "td_load": [33, 35, 38], "from_flatten": [33, 35, 38], "attemptedli": [33, 35, 38], "copy_exist": [33, 35, 38], "return_earli": [33, 35, 38], "share_non_tensor": [33, 35, 38], "mimic": [33, 35, 38, 86, 90, 106, 112], "cross": [33, 35, 38, 183], "anymor": [33, 35, 38, 165, 247], "tensordictfutur": [33, 35, 38], "deepli": [33, 35, 38], "insid": [33, 35, 38, 106, 367], "memmap_": [33, 35, 38, 171], "memmap_lik": [33, 35, 38], "contentless": [33, 35, 38], "1_000_000": [33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 349, 352], "alloc": [33, 35, 38, 63, 208, 209, 349], "setattr": [33, 35, 38], "tent": [33, 35, 38, 44], "to_tensordict": [33, 35, 38, 352], "unbind": [33, 34, 35, 37, 38, 40, 41, 199, 203], "alpha": [34, 40, 65, 66, 184, 185, 187, 188, 189, 190, 196, 210, 258, 265, 274, 276, 278, 349, 364, 366], "ep": [34, 40, 65, 66, 171, 243, 259, 279, 322, 349, 350, 352, 355, 358], "1e": [34, 40, 65, 66, 171, 192, 195, 214, 225, 349, 350, 351, 361], "08": [34, 40, 65, 66, 350, 351, 362], "pin_memori": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 146, 349, 366], "schaul": [34, 65, 66], "quan": [34, 65, 66], "antonogl": [34, 65, 66], "silver": [34, 65, 66], "2015": [34, 65, 66], "arxiv": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 100, 101, 103, 104, 109, 113, 114, 125, 147, 167, 186, 187, 188, 189, 190, 191, 194, 195, 196, 201, 207, 213, 215, 216, 219, 221, 222, 228, 238, 243, 257, 258, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 274, 275, 278, 279, 288, 293, 301, 363], "ab": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 100, 101, 103, 104, 109, 113, 114, 124, 147, 167, 171, 186, 191, 195, 196, 201, 207, 213, 215, 216, 219, 221, 222, 228, 257, 258, 261, 262, 263, 264, 267, 268, 269, 270, 271, 274, 275, 278, 363], "1511": [34, 65, 66, 196], "05952": [34, 65, 66], "expon": [34, 40, 65, 66], "\u03b1": [34, 40, 65, 66], "delta": [34, 40, 65, 66, 197, 201, 225, 244, 248, 342, 345], "null": [34, 40, 65, 66, 123], "max_siz": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 77, 79, 351, 356], "1_000": [34, 37, 40, 41, 364], "merg": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 362], "mini": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 361], "decid": [34, 37, 40, 41, 366], "meth": [34, 37, 40, 41, 273, 362], "incompat": [34, 37, 40, 41, 277, 364], "drop_last": [34, 37, 40, 41, 72, 74], "notion": [34, 37, 40, 41], "caution": [34, 37, 40, 41, 72, 174, 367], "codebas": [34, 37, 40, 41, 362], "approach": [34, 37, 40, 41, 143, 349, 351, 355, 356, 367], "return_info": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 364], "tensordictprioritizedreplaybuff": [34, 342, 366], "simplifi": [34, 354, 362, 364], "_weight": [34, 40, 65, 66, 364, 366], "arrai": [34, 39, 65, 86, 90, 106, 112, 134, 197, 198, 201, 202, 349, 364], "update_prior": [34, 65, 66, 321, 346, 350, 364, 366], "36278465": 34, "tempfil": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 336, 349, 350, 364], "tqdm": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 324, 349, 351, 352, 361, 362], "randomsampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 349], "td_error": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 260, 261, 263, 264, 265, 266, 271, 273, 276, 278, 280, 286, 349, 355, 364, 366], "update_tensordict_prior": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 349, 364, 366], "temporarydirectori": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 349, 350, 364], "tmpdir": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 349, 350], "rb_load": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "cursor": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "insert_transform": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 120, 165], "insert": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 69, 77, 78, 80, 81, 120, 129, 165, 166], "set_sampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_storag": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_writ": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "prompt_rindex": [35, 36, 39], "promptdatatldr": 35, "116722": 35, "prompt": [36, 39], "return_tensordict": [36, 42], "recip": [36, 86, 90, 106, 112, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254], "text": [36, 39, 42, 55, 197, 198, 201, 202, 243, 351], "tensodict": [36, 42], "orign": [36, 42], "valid_sampl": 36, "eough": 36, "toknen": 36, "meet": 36, "criterion": 36, "autotoken": [36, 42, 44], "from_pretrain": [36, 39, 42], "gpt2": [36, 39, 42, 44, 186, 191, 218], "pad_token": [36, 42], "eos_token": 36, "enough": [36, 364], "inde": [36, 132, 351, 362], "roundrobinwrit": [37, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "Not": [37, 82, 83, 95, 96], "depth": [37, 86, 90, 102, 106, 112, 183, 184, 185, 187, 188, 189, 190, 195, 196, 205, 207, 210, 211, 215, 216, 237, 344, 350, 353, 355, 356, 360, 361, 364], "_pytre": [37, 364], "tree_map": [37, 364], "did": [37, 170, 294, 350, 351, 356, 364, 367], "assert0": [37, 364], "ref_model": 39, "reward_model": [39, 253], "kl_coef": 39, "max_new_token": 39, "score_clip": 39, "kl_schedul": 39, "klcontrollerbas": 39, "num_step": 39, "causal": 39, "sentenc": 39, "frozen": [39, 141], "kl": [39, 141, 268, 272], "penalti": [39, 272], "strai": 39, "calcul": [39, 152, 197, 257, 259, 263, 272, 275, 277], "gpt2rewardmodel": 39, "get_dataload": [39, 342], "promptdata": [39, 342], "gpt2lmheadmodel": 39, "dl": 39, "block_siz": [39, 60], "tensorclass_typ": [39, 60], "openai_summarize_tldr": 39, "config_class": 39, "model_path": 39, "rollout_from_model": 39, "rollout_from_data": 39, "600": [39, 357, 362, 364], "reward_kl": [39, 141], "reward_raw": 39, "sample_log_prob": [39, 232, 233, 234, 244, 248, 250, 275, 333, 351, 354, 361, 366], "create_rollout_td": 39, "log_prob": [39, 192, 208, 209, 217, 227, 248], "log_ratio": 39, "replic": 39, "rindex": 39, "eo": 39, "term": [39, 141, 201, 202, 212, 213, 256, 257, 265, 326, 350, 351, 353, 354, 361], "generation_config": 39, "generationconfig": 39, "ti": [39, 297, 298, 299, 300, 302, 303, 304, 305, 350], "log_probs_gen": 39, "logprobs_of_label": 39, "priority_kei": [40, 41, 52, 65, 261, 264, 265, 266, 271, 273, 276, 278, 280, 286, 364, 366], "reduct": [40, 65, 66, 77, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 278, 280], "prioritizedreplaybuff": [40, 342, 366], "min": [40, 65, 66, 77, 225, 226, 227, 236, 243, 258, 259, 265, 274, 276, 278, 350, 351, 361], "median": [40, 65, 66, 77, 95, 96, 244, 248], "include_info": [40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "kw": [41, 52, 69, 78], "huggingfac": [42, 54, 59, 241], "co": [42, 134, 362], "doc": [42, 92, 95, 96, 105, 109, 314, 349, 350, 361, 364, 367], "pad_trunc": 42, "am": 42, "me": 42, "reassur": 42, "ok": 42, "describ": [43, 126, 164, 225, 226, 261, 310, 345, 349, 351, 361, 362, 367], "tokenizer_fn": 44, "tensordicttoken": [44, 342], "pre_tokenization_hook": 44, "valid_s": 44, "tokenizer_class": 44, "tokenizer_model_nam": 44, "tokein": 44, "elementwis": 44, "vocabulari": 44, "loader": [44, 351], "185068": 44, "dataset_to_tensordict": 44, "data_dir": 44, "batch_dim": [44, 340], "valid_mask_kei": 44, "conver": 44, "batch_dimens": 44, "filder": 44, "from_dict": 44, "data_memmap": 44, "recurse_through_entri": 48, "recurse_through_stack": 48, "consolid": 48, "dataset_id": [51, 53, 54, 55, 57, 58, 59], "num_proc": 51, "slice_len": [51, 57, 66, 73, 74, 307], "strict_len": 51, "arari": 51, "2600": 51, "million": [51, 352], "consequ": [51, 201, 356], "50x10": 51, "available_dataset": [51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74], "ataridqn": 51, "immutabledatasetwrit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "greater": [51, 66, 73, 74, 199, 203, 349, 350, 366], "shorter": [51, 57, 66, 73, 74], "Be": [51, 57, 66, 73, 74], "game_nam": 51, "pong": [51, 104, 145, 367], "krull": 51, "1d": [51, 66, 73, 74, 77], "cheapli": 51, "nontensordata": [51, 57], "invalid_rang": 51, "999998": 51, "999999": 51, "add_count": 51, "84": [51, 151, 350, 352, 362, 363], "valueestim": [51, 257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 282, 286, 342, 345, 349, 361], "convolut": [51, 184, 185, 187, 188, 210, 223, 354], "2657628": 51, "2657629": 51, "2657630": 51, "2657631": 51, "2657632": 51, "2657633": 51, "2657634": 51, "2657635": 51, "2657636": 51, "2657637": 51, "2657638": 51, "2657639": 51, "2657640": 51, "2657641": 51, "2657642": 51, "2657643": 51, "2657644": 51, "2657645": 51, "2657646": 51, "2657647": 51, "2657648": 51, "2657649": 51, "2657650": 51, "2657651": 51, "2657652": 51, "2657653": 51, "2657654": 51, "2657655": 51, "2657656": 51, "2657657": 51, "2657658": 51, "2657659": 51, "2657660": 51, "2657661": 51, "2657662": 51, "2657663": 51, "2657664": 51, "2657665": 51, "2657666": 51, "2657667": 51, "2657668": 51, "2657669": 51, "2657670": 51, "2657671": 51, "2657672": 51, "2657673": 51, "2657674": 51, "2657675": 51, "2657676": 51, "2657677": 51, "2657678": 51, "2657679": 51, "2657680": 51, "2657681": 51, "2657682": 51, "2657683": 51, "2657684": 51, "2657685": 51, "2657686": 51, "2657687": 51, "2657688": 51, "2657689": 51, "2657690": 51, "2657691": 51, "1995687": 51, "1995688": 51, "1995689": 51, "1995690": 51, "1995691": 51, "1995692": 51, "1995693": 51, "1995694": 51, "1995695": 51, "1995696": 51, "1995697": 51, "1995698": 51, "1995699": 51, "1995700": 51, "1995701": 51, "1995702": 51, "1995703": 51, "1995704": 51, "1995705": 51, "1995706": 51, "1995707": 51, "1995708": 51, "1995709": 51, "1995710": 51, "1995711": 51, "1995712": 51, "1995713": 51, "1995714": 51, "1995715": 51, "1995716": 51, "1995717": 51, "1995718": 51, "1995719": 51, "1995720": 51, "1995721": 51, "1995722": 51, "1995723": 51, "1995724": 51, "1995725": 51, "1995726": 51, "1995727": 51, "1995728": 51, "1995729": 51, "1995730": 51, "1995731": 51, "1995732": 51, "1995733": 51, "1995734": 51, "1995735": 51, "1995736": 51, "1995737": 51, "1995738": 51, "1995739": 51, "1995740": 51, "1995741": 51, "1995742": 51, "1995743": 51, "1995744": 51, "1995745": 51, "1995746": 51, "1995747": 51, "1995748": 51, "1995749": 51, "1995750": 51, "left": [51, 53, 57, 122, 129, 130, 131, 135, 141, 147, 149, 150, 156, 159, 162, 164, 167, 169, 173, 210, 239, 350, 351, 356, 357], "untouch": [51, 57, 122, 129, 130, 131, 135, 141, 149, 150, 156, 159, 164, 173], "_max_run": 51, "dataset_asterix": 51, "asterix": 51, "dataset_pong": 51, "sample_from_al": [51, 68, 71], "buffer_id": [51, 71, 76], "hidden": [51, 106, 112, 124, 187, 195, 197, 198, 199, 201, 202, 203, 204, 215, 216, 221, 222, 232, 233, 234, 236, 247, 250, 259, 272, 275, 344, 352, 360, 366], "exclusive_field": [51, 360], "stack_dim": [51, 360], "data_path": [51, 52, 53, 54, 55, 56, 57, 58, 59], "data_path_root": [51, 52, 53, 54, 55, 56, 57, 58, 59], "delet": [51, 52, 53, 54, 55, 56, 57, 58, 59, 126, 314], "chunksiz": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pool": [51, 52, 53, 54, 55, 56, 57, 58, 59, 162], "max_tasks_per_child": [51, 52, 53, 54, 55, 56, 57, 58, 59], "worker_thread": [51, 52, 53, 54, 55, 56, 57, 58, 59], "index_with_gener": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pbar": [51, 52, 53, 54, 55, 56, 57, 58, 59, 349, 351, 352, 361, 362], "dest": [51, 52, 53, 54, 55, 56, 57, 58, 59, 147, 167, 169, 247], "num_fram": [51, 52, 53, 54, 55, 56, 57, 58, 59], "unitari": [51, 52, 53, 54, 55, 56, 57, 58, 59, 362], "minariexperiencereplai": [51, 52, 53, 54, 56, 57, 58, 59], "1000000": [51, 52, 53, 54, 55, 56, 57, 58, 59, 352], "distance_from_origin": [51, 52, 53, 54, 55, 56, 57, 58, 59], "forward_reward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qpo": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qvel": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_ctrl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 106], "reward_forward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_surv": [51, 52, 53, 54, 55, 56, 57, 58, 59], "x_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59, 106], "x_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 106], "y_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "y_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59], "achieved_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "desired_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "27": [51, 52, 53, 54, 55, 56, 57, 58, 59, 82, 83, 106, 112, 348, 350, 361, 362, 365], "_collate_id": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x120e21dc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cattensor": [51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 106, 112, 333, 349, 360, 362, 367], "cat_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cat_next_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "new_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "31": [51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 96, 350, 362, 363], "full_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x168406fc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "from_env": 53, "use_truncated_as_don": 53, "direct_download": 53, "terminate_on_end": 53, "env_kwarg": [53, 58, 59, 122, 338, 339, 349], "reconstruct": [53, 73, 74, 268, 349, 367], "get_dataset": 53, "qlearning_dataset": 53, "fewer": 53, "possess": 53, "unexpectedli": 53, "traj_split": 53, "observationnorm": [53, 171, 340, 349, 350, 351, 352, 366], "maze2d": 53, "umaz": 53, "loc": [53, 86, 90, 106, 112, 141, 143, 154, 200, 214, 226, 227, 232, 233, 234, 244, 248, 250, 257, 258, 271, 275, 276, 277, 278, 328, 333, 340, 344, 349, 350, 351, 352, 354, 361, 366], "gen": 54, "dgrl": 54, "accompani": [54, 122, 159], "gap": 54, "2312": 54, "05742": 54, "gen_dgrl": 54, "procgen": 54, "bigfish": 54, "bossfight": 54, "categori": [54, 344, 346], "1m_e": 54, "1m_": 54, "comma": 54, "npy": 54, "extract": [54, 121, 241, 349, 351, 366], "mmap": [54, 58, 59], "minut": [54, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "internet": [54, 59], "connect": [54, 59], "minari": 55, "websit": [55, 57], "currenrtli": 55, "minari_data": 55, "door": 55, "torchrl_logg": [55, 358], "28": [55, 210, 350, 356, 361, 362, 363], "door_body_po": 55, "dua": 56, "graff": 56, "2017": 56, "uci": 56, "archiv": 56, "ic": 56, "edu": 56, "ml": 56, "sklearn": [56, 105], "adult_num": [56, 105], "adult_onehot": [56, 105], "mushroom_num": [56, 105], "mushroom_onehot": [56, 105], "covertyp": [56, 105], "shuttl": [56, 105], "magic": [56, 105, 353], "shuffl": [57, 72, 74, 361], "stream": 57, "embodi": [57, 363], "22": [57, 73, 74, 170, 348, 350, 352, 355, 362, 363, 365], "institut": 57, "demonstr": [57, 351, 356, 361, 362, 364, 367], "527": [57, 362], "skill": 57, "160266": 57, "googl": [57, 58, 82, 83, 100, 101, 351, 352, 361], "open_x_embodi": 57, "2310": [57, 109], "08864": 57, "language_instruct": 57, "get_non_tensor": 57, "neither": [57, 362], "nor": 57, "insuffici": 57, "chosen": [57, 113, 114, 160, 161, 219, 220, 228, 246, 307, 333, 344, 357], "openx": 57, "__will": 57, "change__": 57, "randomli": [57, 72, 142, 143, 161, 239, 244, 248, 354, 361, 362, 364], "crop": [57, 127, 148, 307], "modal": [57, 349], "cmu_stretch": [57, 307], "is_init": [57, 59, 124, 140, 199, 203, 242, 243, 352], "language_embed": 57, "512": [57, 196, 350, 362], "lift": 57, "green": 57, "garbag": 57, "lid": 57, "roboset": 58, "h5": [58, 59], "roboh": [58, 109], "concis": [58, 355], "75": [58, 350, 362, 363], "totensor": 59, "image_s": 59, "v": [59, 171, 197, 198, 201, 202, 232, 264, 271, 278, 344, 349, 350], "npz": 59, "2206": [59, 103, 104], "04779": [59, 258, 263], "vd4rl": 59, "detect": 59, "squar": [59, 127, 200, 226, 227, 307], "rectangular": [59, 184, 185], "walker_walk": 59, "64px": 59, "height": [59, 127, 151], "veloc": [59, 84, 85, 86, 90, 106, 112, 125, 361, 362, 367], "infinit": [60, 100, 101, 113, 114, 356, 364], "three": [60, 344, 346, 351, 353, 354, 361, 362, 364, 367], "block": [60, 61, 81, 344, 352], "pairwisedataset": [60, 342], "256": [60, 100, 101, 191, 350, 351, 361, 362], "immut": [61, 86, 90, 106, 112, 150, 165], "piec": [61, 69, 78, 80, 81, 349, 350, 351, 357, 361, 362, 364], "scratch_dir": [62, 349, 364], "sent": [62, 63, 79, 171], "mistak": [62, 63, 79], "myclass": [62, 63, 79], "foo": [62, 63, 79, 236, 364, 367], "bar": [62, 63, 79, 236, 317, 318, 320, 324, 346, 350], "attach": [62, 63, 64, 75, 76, 79, 350], "entiti": [62, 63, 64, 75, 76, 79], "zero_": [63, 79, 178], "max_capac": [65, 66, 349, 364], "data_0": 65, "data_1": 65, "smoothen": 65, "tdrb": 65, "pack": [65, 197, 201, 351, 353, 367], "end_kei": [66, 73, 74], "cache_valu": [66, 73, 74], "expens": [66, 73, 74, 364], "readili": [66, 73, 74], "conjunct": [66, 73, 74, 350], "Will": [66, 73, 86, 103, 307], "buffer0": [66, 73], "immutablewrit": [66, 73], "buffer1": [66, 73], "other_sampl": [66, 73], "short": [66, 73, 74, 82, 83, 95, 96, 106, 174, 201, 202, 350, 351, 353, 354, 361, 364], "unsqueez": [66, 119, 122, 125, 126, 163, 166, 204, 349, 352, 361, 362], "tolist": 66, "120110917137936e": 66, "06": [66, 192, 225, 350, 351, 362, 363], "uniformli": [67, 273, 367], "storageensembl": [68, 71], "samplerensembl": 68, "writerensembl": [68, 76], "num_buffer_sampl": [68, 71], "ensembl": [68, 71, 76, 81, 247, 276], "forbidden": 68, "collat": 68, "0x13a2ef430": 68, "0x13a2f9310": 68, "interpol": [68, 151, 350, 352], "interpolationmod": [68, 352], "bilinear": [68, 151, 352], "0x13a2f9220": 68, "0x13a2f9f70": 68, "0x13a2d9b50": 68, "0x13a2f95b0": 68, "0x128648260": 68, "roundrobin": [69, 78], "incomplet": [72, 74], "fresh": 72, "haven": [72, 363], "remain": [72, 124, 131, 132, 141, 160, 213, 355], "draw": [72, 239], "slicesamplerwithoutreplac": [73, 364], "320": [73, 74, 84, 85, 350, 362], "700": [73, 74, 348, 357, 365], "dataid": [73, 74], "__len__": 75, "rank_kei": 77, "rank": [77, 183], "samplerwithoutreplac": [77, 351, 361, 364], "get_insert_index": 77, "convers": [82, 83, 95, 96, 345], "2106": [82, 83, 262], "13281": [82, 83], "categorical_action_encod": [82, 83, 86, 89, 90, 91, 92, 95, 96, 103, 104, 106, 109, 112], "frame_skip": [82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 103, 104, 109, 138, 317, 320, 327, 346, 349, 350, 351, 366], "repeat": [82, 83, 84, 85, 89, 91, 92, 95, 96, 103, 104, 109, 183, 351, 361, 362], "allow_done_after_reset": [82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 103, 104, 109], "toler": [82, 83, 84, 85, 89, 91, 92, 95, 96, 103, 104, 109, 192, 225], "availalb": [82, 83, 95, 96], "ant": [82, 83, 86, 90, 93, 106, 112, 363], "87": [82, 83, 350, 362, 363], "acrobot": [82, 83, 84, 85, 367], "advant": [82, 83, 95, 96], "report": [82, 83, 95, 96, 357], "timer": [82, 83, 95, 96], "timeit": [82, 83, 95, 96], "310": [82, 83, 362], "ms": [82, 83, 95, 96], "268": [82, 83, 362], "433": [82, 83, 362], "80": [82, 83, 350, 351, 361, 362, 363, 364], "213": [82, 83, 362, 364], "8605": [82, 83], "pipelineenv": 83, "get_environ": 83, "dm_control": [84, 85, 349, 360, 367], "2006": [84, 85, 258, 263, 362], "12983": [84, 85], "task_nam": [84, 86, 90, 106, 112], "pixels_onli": [84, 85, 89, 91, 92, 109, 349, 350, 357, 358, 366, 367], "cheetah": [84, 85, 86, 90, 106, 112, 307, 349], "240": [84, 85, 362, 366], "swingup": [84, 85, 367], "swingup_spars": [84, 85], "ball_in_cup": [84, 85], "catch": [84, 85], "balance_spars": [84, 85], "three_pol": [84, 85], "two_pol": [84, 85], "finger": [84, 85], "turn_easi": [84, 85], "turn_hard": [84, 85], "fish": [84, 85], "upright": [84, 85, 350], "swim": [84, 85], "hopper": [84, 85], "hop": [84, 85], "humanoid": [84, 85, 106, 112, 360], "walk": [84, 85, 106, 112, 350, 360], "run_pure_st": [84, 85], "bring_bal": [84, 85], "bring_peg": [84, 85], "insert_bal": [84, 85], "insert_peg": [84, 85], "point_mass": [84, 85], "reacher": [84, 85], "swimmer": [84, 85], "swimmer6": [84, 85], "swimmer15": [84, 85], "walker": [84, 85], "dog": [84, 85], "trot": [84, 85], "humanoid_cmu": [84, 85], "lqr": [84, 85], "lqr_2_1": [84, 85], "lqr_6_2": [84, 85], "quadrup": [84, 85], "escap": [84, 85], "stacker": [84, 85], "stack_2": [84, 85], "stack_4": [84, 85], "deviceless": 86, "run_type_check": [86, 102], "counterenv": 86, "unboundedcontinuoustensorspec": [86, 90, 102, 106, 112, 119, 122, 130, 133, 149, 161, 178, 183, 207, 231, 247, 250, 252, 277, 342, 351, 352, 361, 362, 367], "continuousbox": [86, 90, 106, 112, 178, 351, 361, 362, 366, 367], "sort": [86, 90, 106, 112, 126, 243], "another_act": [86, 90, 106, 112], "mutabl": [86, 90, 106, 112], "_callabletransform": [86, 90, 106, 112], "batch_lock": [86, 88, 90, 106, 112, 122, 161, 165, 362], "done_keys_group": [86, 90, 106, 112], "outer": [86, 90, 106, 112, 346, 349, 350, 367], "another_don": [86, 90, 106, 112], "empty_cach": [86, 90, 106, 112, 165], "fake_tensordict": [86, 90, 106, 112, 350], "fake": [86, 90, 106, 112, 349, 350], "afterward": [86, 90, 106, 112, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254, 367], "silent": [86, 90, 106, 112, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 214, 215, 216, 218, 221, 222, 224, 229, 235, 236, 238, 239, 242, 243, 246, 251, 254], "braxenv": [86, 90, 106, 112, 150, 342, 353], "envnam": [86, 90, 106, 112], "pipeline_st": [86, 90, 106, 112], "attibut": [86, 90, 106, 112], "maybe_reset": [86, 90, 106, 112], "speak": [86, 90, 106, 112, 349], "rand_act": [86, 90, 99, 106, 107, 108, 112, 122, 353], "register_gym": [86, 90, 106, 112, 353], "entry_point": [86, 90, 106, 112], "info_kei": [86, 90, 106, 112], "reward_threshold": [86, 90, 106, 112], "nondeterminist": [86, 90, 106, 112], "max_episode_step": [86, 89, 90, 91, 106, 112], "order_enforc": [86, 90, 106, 112], "autoreset": [86, 90, 106, 112], "disable_env_check": [86, 89, 90, 103, 104, 106, 112], "apply_api_compat": [86, 90, 106, 112], "nasium": [86, 90, 106, 112], "scope": [86, 90, 106, 112, 367], "dmcontrolenv": [86, 90, 106, 112, 307, 342, 349, 353, 360, 367], "dmc": [86, 90, 106, 112], "removeemptyspec": [86, 90, 106, 112], "threshold": [86, 90, 106, 112, 239, 258, 259, 351], "learnt": [86, 90, 106, 112, 336], "knowledg": [86, 90, 106, 112, 355], "checker": [86, 89, 90, 103, 104, 106, 112], "stepapicompat": [86, 90, 106, 112], "concept": [86, 90, 106, 112, 350, 364], "deem": [86, 90, 100, 101, 106, 112, 113, 114], "envgym": [86, 90, 106, 112], "0855": [86, 90, 106, 112], "0215": [86, 90, 106, 112], "0881": [86, 90, 106, 112], "0412": [86, 90, 106, 112], "1101": [86, 90, 106, 112], "0080": [86, 90, 106, 112], "0254": [86, 90, 106, 112], "0424": [86, 90, 106, 112], "9609e": [86, 90, 106, 112], "9776e": [86, 90, 106, 112], "04": [86, 90, 94, 106, 112, 350, 351, 361, 362, 363], "6347e": [86, 90, 106, 112], "3842e": [86, 90, 106, 112], "5338e": [86, 90, 106, 112], "3064e": [86, 90, 106, 112], "0381e": [86, 90, 106, 112], "6656e": [86, 90, 106, 112], "05": [86, 90, 106, 112, 350, 361, 362, 363], "0204e": [86, 90, 106, 112], "action_spac": [86, 90, 106, 112, 134, 194, 220, 237, 238, 245, 246, 257, 258, 260, 261, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 352, 354, 358], "0833": [86, 90, 106, 112], "0275": [86, 90, 106, 112], "0612": [86, 90, 106, 112], "0770": [86, 90, 106, 112, 362], "1256": [86, 90, 106, 112, 362], "0082": [86, 90, 106, 112], "0186": [86, 90, 106, 112], "0476": [86, 90, 106, 112], "2221": [86, 90, 106, 112], "2256": [86, 90, 106, 112], "5930": [86, 90, 106, 112], "6937": [86, 90, 106, 112], "5865": [86, 90, 106, 112], "5479": [86, 90, 106, 112], "0187": [86, 90, 106, 112], "6825": [86, 90, 106, 112, 362], "5224": [86, 90, 106, 112], "0018": [86, 90, 106, 112, 362], "1005": [86, 90, 106, 112], "0335": [86, 90, 106, 112], "0268": [86, 90, 106, 112, 362], "0133": [86, 90, 106, 112], "0627": [86, 90, 106, 112], "0074": [86, 90, 106, 112, 362], "0488": [86, 90, 106, 112, 362], "0353": [86, 90, 106, 112], "0075": [86, 90, 106, 112, 362], "0069": [86, 90, 106, 112, 362], "0098": [86, 90, 106, 112, 362], "0058": [86, 90, 106, 112, 362], "0033": [86, 90, 106, 112, 362], "0157": [86, 90, 106, 112], "0004": [86, 90, 106, 112, 362], "0381": [86, 90, 106, 112], "0452": [86, 90, 106, 112], "11355747": [86, 90, 106, 112], "04257728": [86, 90, 106, 112], "00408397": [86, 90, 106, 112], "04155852": [86, 90, 106, 112], "0389733": [86, 90, 106, 112], "01409826": [86, 90, 106, 112], "0978704": [86, 90, 106, 112], "08808327": [86, 90, 106, 112], "03970837": [86, 90, 106, 112], "00535434": [86, 90, 106, 112], "02353762": [86, 90, 106, 112], "05116226": [86, 90, 106, 112], "02788907": [86, 90, 106, 112], "06848346": [86, 90, 106, 112], "05154399": [86, 90, 106, 112], "0371798": [86, 90, 106, 112], "05128025": [86, 90, 106, 112], "dydact": [86, 90, 106, 112], "gym_env": [86, 90, 106, 112, 366], "reset_kei": [86, 90, 106, 112, 125, 155, 160, 161, 162], "multitask": [86, 90, 106, 112], "multiag": [86, 90, 99, 106, 107, 108, 112, 182, 211, 219, 228, 286], "another_reward": [86, 90, 106, 112], "callback": [86, 90, 106, 112, 361], "auto_cast_to_devic": [86, 90, 106, 112, 361], "return_contigu": [86, 90, 106, 112, 174, 360], "soon": [86, 90, 106, 107, 108, 112], "__sort": [86, 90, 106, 112], "as__": [86, 90, 106, 112], "normal": [86, 90, 106, 112, 143, 171, 184, 185, 200, 205, 208, 209, 214, 226, 227, 235, 244, 248, 259, 272, 275, 320, 322, 340, 344, 346, 352, 354, 361, 367], "argmaxmodul": [86, 90, 106, 112], "n_ob": [86, 90, 106, 112, 141, 242, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 355], "n_act": [86, 90, 106, 112, 141, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 355], "ourselv": [86, 90, 106, 112, 351, 367], "emul": [86, 90, 106, 112], "epoch": [86, 90, 106, 112, 324, 351, 361], "input_td": [86, 90, 106, 112], "rollout_td": [86, 90, 106, 112], "concomitt": [86, 90, 106, 112], "workspac": [86, 90, 106, 112], "prevail": [86, 90, 106, 112, 126, 155, 182], "creator": [87, 329, 330, 338, 339, 340], "substitut": [87, 160, 171, 354], "vecnorm": [87, 340], "env_creat": [87, 349], "test_env1": 87, "_td": [87, 349], "observation_count": [87, 367], "test_env2": 87, "sleep": [87, 367], "ps": 87, "p1": 87, "p2": 87, "9934": 87, "env_str": 88, "device_map": 88, "accross": [89, 91], "registri": 89, "asyncvectorenv": 89, "involv": [89, 91, 92, 100, 101, 109, 122, 353, 355], "pixel_observ": [89, 91, 92, 109], "pixelobservationwrapp": [89, 91, 92, 109], "al": [89, 91, 134, 145, 183, 367], "adventur": [89, 91, 367], "v5": [89, 91, 104, 134, 145, 367], "airraid": [89, 91, 367], "alien": [89, 91, 367], "time_limit": 89, "timelimit": [89, 100, 101, 113, 114], "default_info_dict_read": [89, 90, 91, 106], "reader": [89, 90, 91, 106, 350], "set_info_dict_read": [89, 90, 91, 106, 353], "info_dict": [89, 90, 91, 106], "auto_register_info_dict": [89, 90, 91, 106], "info_dict_read": [90, 106], "succe": [90, 106], "halfcheetah": [90, 106, 151, 333, 349], "register_info_dict": 90, "read_act": 90, "read_don": 90, "nonsens": 90, "fallback": 90, "broken": [90, 174], "read_ob": 90, "dictat": [90, 244, 248, 275, 349, 362], "read_reward": 90, "baseinfodictread": 90, "hoc": [90, 106, 354], "dict_read": 90, "my_info_kei": 90, "some_env": 90, "vecenv": 91, "vectorenv": 91, "secur": 92, "habitat3": 92, "ai": [92, 363], "habitatrenderpick": 92, "isaacgym": [93, 94], "isaacgymwrapp": [93, 342], "isaacgymenv": [94, 342], "webpag": 94, "isaac": 94, "essenc": [94, 353], "instadeepai": [95, 96], "2306": [95, 96], "09884": [95, 96], "snake": [95, 96], "grid": [95, 96, 307], "bodi": [95, 96], "body_st": [95, 96], "fruit_posit": [95, 96], "col": [95, 96], "row": [95, 96], "head_posit": [95, 96], "tail": [95, 96], "game2048": [95, 96], "maze": [95, 96], "cleaner": [95, 96], "cvrp": [95, 96], "multicvrp": [95, 96], "minesweep": [95, 96], "rubikscub": [95, 96], "knapsack": [95, 96], "sudoku": [95, 96], "tsp": [95, 96], "connector": [95, 96], "v2": [95, 96, 110, 111, 283, 297, 298, 299, 300, 302, 303, 304, 305, 352], "mmst": [95, 96], "graphcolor": [95, 96], "partli": [95, 96], "scrambl": [95, 96], "robotwarehous": [95, 96], "tetri": [95, 96], "binpack": [95, 96], "jobshop": [95, 96], "0x1fca91910": 95, "122": [95, 96, 362, 367], "0x1ff9baee0": 95, "134": [95, 96, 362], "0x1ff9ba7c0": 95, "172": [95, 96, 362], "rubric": [96, 143, 250], "mo": [97, 98], "minecart": [97, 98], "mo_gym": 98, "qualnam": 99, "leverag": [99, 107, 108, 349, 361, 367], "neural": [99, 107, 108, 184, 185, 223, 247, 344, 350, 351, 352, 354, 361, 362, 367], "group_map": [99, 100, 101, 107, 108, 113, 114, 115], "constructiuon": [99, 107, 108], "premad": [99, 100, 101, 107, 108, 113, 114, 286], "all_in_one_group": [99, 115], "agent_0": [99, 107, 108, 115], "agent_1": [99, 107, 108, 115], "agent_2": [99, 107, 108, 115], "agent_3": 99, "one_group_per_ag": [99, 107, 108], "meltingpot": [100, 101], "2211": [100, 101], "13746": [100, 101], "melt": [100, 101], "pot": [100, 101], "novel": [100, 101, 355], "social": [100, 101], "familiar": [100, 101, 350, 361, 367], "unfamiliar": [100, 101], "broad": [100, 101], "cooper": [100, 101, 361], "decept": [100, 101], "reciproc": [100, 101], "trust": [100, 101, 203], "stubborn": [100, 101], "substrat": [100, 101], "ml_collect": 100, "config_dict": 100, "configdict": 100, "horizon": [100, 101, 113, 114, 183, 207, 351], "categorical_act": [100, 101, 107, 108, 110, 111, 113, 114], "marlgroupmaptyp": [100, 101, 107, 108, 113, 114, 115, 342], "agent_nam": [100, 101, 113, 114, 115], "agent_names_to_indices_map": [100, 101, 113, 114], "env_torchrl": [100, 101], "commons_harvest__open": [100, 101], "rgb": [100, 101], "144": [100, 101, 348, 362, 365], "192": [100, 101, 350, 362], "collective_reward": [100, 101], "ready_to_shoot": [100, 101], "88": [100, 101, 110, 111, 350, 362], "substrate_config": 101, "get_config": 101, "mp_env": 101, "build_from_config": 101, "default_player_rol": 101, "environn": 102, "mymbenv": [102, 183, 207], "world_model": [102, 183, 207, 268], "hidden_observ": [102, 183, 207], "mlp": [102, 183, 184, 185, 187, 188, 189, 190, 196, 199, 203, 204, 207, 211, 232, 237, 261, 263, 333, 344, 350, 354, 355, 358, 360, 363, 366], "worldmodelwrapp": [102, 183, 207], "activation_class": [102, 183, 184, 185, 187, 188, 189, 190, 195, 196, 205, 207, 210, 211, 350, 354, 361, 366], "relu": [102, 183, 191, 207, 214, 256], "activate_last_lay": [102, 183, 190, 205, 207], "sail": [103, 104], "sg": [103, 104], "10558": [103, 104], "readthedoc": 103, "en": 103, "python_interfac": 103, "envpoolmixin": 104, "env_bas": 104, "task_id": 104, "env_typ": 104, "gym_reset_return_info": 104, "envpool_env": 104, "www": [105, 208, 209], "fetch_openml": 105, "106": [105, 362], "my_env_fun": [106, 112], "custom_attribute_list": [106, 112], "custom_attribut": [106, 112], "custom_method_list": [106, 112], "custom_method": [106, 112], "deploi": [106, 112, 122], "slight": [106, 112, 350], "share_individual_td": [106, 112], "shared_memori": [106, 112], "policy_proof": [106, 112], "ll": [106, 112, 197, 198, 201, 202, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 367], "serial_for_singl": [106, 112], "list_of_kwarg": [106, 112], "com_veloc": [106, 112], "extrem": [106, 112, 257, 259, 272, 275, 277], "head_height": [106, 112], "joint_angl": [106, 112], "torso_vert": [106, 112], "stringent": [106, 351, 361], "inter": 106, "penv": 106, "tensordictprim": [106, 352], "reward_run": 106, "env_fix": 106, "drastic": [106, 364], "influenc": 106, "thumb": [106, 351], "suppos": [106, 320, 346, 367], "myenv": [106, 122, 130, 133], "pipe": 106, "update_kwarg": [106, 112], "pettingzoo": [107, 108], "pet": [107, 108], "zoo": [107, 108], "__": [107, 108], "aecenv": [107, 108], "use_mask": [107, 108], "dead": [107, 108], "done_on_ani": [107, 108], "compulsori": [107, 108], "adversary_0": [107, 108], "adversari": [107, 108], "vectoris": [107, 108, 197, 198, 201, 202], "sisl": 107, "multiwalker_v9": 107, "return_st": [107, 108], "aec": [107, 108], "n_piston": [107, 108], "pistonball_v6": [107, 108], "piston": [107, 108], "piston_0": [107, 108], "piston_1": [107, 108], "piston_20": [107, 108], "tictactoe_v3": [107, 108], "player": [107, 108], "player_1": [107, 108], "player_2": [107, 108], "butterfli": 108, "parallel_env": [108, 349, 366, 367], "vikashplu": 109, "wiki": 109, "06828": 109, "smacv2": [110, 111], "starcraft": [110, 111], "challeng": [110, 111, 353, 362, 363], "10gen_terran": [110, 111], "10gen_zerg": [110, 111], "10gen_protoss": [110, 111], "3m": [110, 111], "8m": [110, 111, 363], "25m": [110, 111], "5m_vs_6m": [110, 111], "8m_vs_9m": [110, 111], "10m_vs_11m": [110, 111], "27m_vs_30m": [110, 111], "mmm": [110, 111], "mmm2": [110, 111], "2s3z": [110, 111], "3s5z": [110, 111], "3s5z_vs_3s6z": [110, 111], "3s_vs_3z": [110, 111], "3s_vs_4z": [110, 111], "3s_vs_5z": [110, 111], "1c3s5z": [110, 111], "2m_vs_1z": [110, 111], "corridor": [110, 111], "6h_vs_8z": [110, 111], "2s_vs_1sc": [110, 111], "so_many_banel": [110, 111], "bane_vs_ban": [110, 111], "2c_vs_64zg": [110, 111], "old": [110, 111, 272, 367], "smac": [110, 111], "map_nam": [110, 111], "176": [110, 111, 362], "battle_won": [110, 111], "dead_al": [110, 111], "dead_enemi": [110, 111], "episode_limit": [110, 111], "322": [110, 111, 348, 360, 362, 365], "Or": [110, 111, 210], "procedur": [110, 111], "distribution_config": [110, 111], "n_unit": [110, 111], "n_enemi": [110, 111], "team_gen": [110, 111], "dist_typ": [110, 111], "weighted_team": [110, 111], "unit_typ": [110, 111], "marin": [110, 111], "maraud": [110, 111], "medivac": [110, 111], "exception_unit_typ": [110, 111], "start_posit": [110, 111], "surrounded_and_reflect": [110, 111], "map_x": [110, 111], "map_i": [110, 111], "capability_config": [110, 111], "131": [110, 111, 362], "starcraft2env": 111, "proroklab": [113, 114], "vectorizedmultiagentsimul": [113, 114], "2207": [113, 114], "03530": [113, 114], "basescenario": 113, "descript": [113, 121, 350, 351], "perfrom": [113, 114], "defaultt": 113, "continuous_act": [113, 114, 361], "repositiori": 113, "sparsiti": 113, "unbatched_action_spec": [113, 114, 361], "unbatched_observation_spec": [113, 114], "unbatched_reward_spec": [113, 114], "het_spec": [113, 114], "het_specs_map": [113, 114], "flock": [113, 114], "agent_collision_rew": [113, 114], "agent_distance_rew": [113, 114], "ca": 115, "environment4": 115, "get_group_map": 115, "sumbodul": 116, "model_bas": [117, 183, 207], "masker": 119, "tensor_spec": [119, 182, 264, 265, 275, 277], "binarydiscretetensorspec": [119, 261, 264, 265, 286, 342], "maskedenv": 119, "ones_lik": 119, "scatter": 119, "_set_se": [119, 122, 130, 133, 149, 362], "fill_float": 121, "fill_int": 121, "fill_bool": 121, "someenvclass": 121, "autoresetenv": 121, "argumet": 121, "fooenv": 121, "sign": [121, 157, 288], "envtyp": 121, "reshape_fn": 122, "reset_func": 122, "environmt": 122, "request": [122, 148], "tensordict_batch_s": 122, "els": [122, 197, 198, 201, 202, 215, 344, 346, 349, 350, 351, 352, 361, 362, 363], "tensordict_reset": [122, 362], "transform_env_batch_s": [122, 129, 164, 173], "transform_input_spec": [122, 129, 130, 131, 132, 143, 145, 149, 150, 155, 159, 160, 161, 164, 166, 168, 173], "transform_output_spec": [122, 129, 130, 131, 135, 141, 149, 150, 156, 159, 164, 173], "transform_observation_spec": [122, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 139, 140, 141, 143, 145, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 170, 173, 362], "transform_reward_spec": [122, 123, 128, 129, 130, 131, 135, 141, 149, 150, 153, 154, 155, 156, 157, 159, 164, 166, 173], "transformfull_done_spec": [122, 129, 130, 131, 135, 141, 149, 150, 156, 159, 164, 173], "biner": 123, "burn_in": 124, "burn": 124, "date": [124, 310], "retur": 124, "burnt": 124, "gru_modul": [124, 199], "input_s": [124, 197, 198, 199, 201, 202, 203, 204, 352], "hidden_s": [124, 197, 198, 199, 201, 202, 203, 204, 352], "set_recurrent_mod": [124, 199, 203, 352], "burn_in_transform": 124, "gru": [124, 198, 199], "num_lay": [124, 197, 199, 201, 203, 215, 216], "86": [124, 350, 362], "3008": [124, 350], "0344": 124, "padding_valu": [125, 208, 209], "as_invers": 125, "movement": 125, "pdf": [125, 186, 187, 188, 189, 190, 194, 238, 243, 266, 276, 279, 288, 293, 301, 333], "1312": [125, 350], "5602": 125, "unsqueezetransform": [125, 362, 364], "consumpt": 125, "followin": 125, "pictur": 125, "pixels_trsf": [125, 364], "grayscal": [125, 350, 352, 364, 367], "data_exclud": [125, 364], "del_kei": [126, 167, 360, 362], "unsqueeze_if_oor": 126, "observation_posit": 126, "observation_veloc": 126, "key1": [126, 315, 323], "key2": [126, 315, 323], "center": [127, 307], "width": [127, 151], "out_keys_inv": [128, 130, 131, 133, 143, 144, 145, 149, 150, 157, 164, 362], "scalar": [128, 153, 188, 190, 212, 213, 235, 239, 240, 243, 254, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 286, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 344, 350, 355, 362], "permit": [128, 137, 166, 257, 259, 272, 275, 277], "rewardsc": [129, 165, 349, 350, 352], "rewardclip": 129, "transformed_env": [129, 164, 165, 353], "transform_env_devic": [129, 131, 164, 173], "dtype_in": 130, "dtype_out": 130, "scan": [130, 133, 249, 250], "resp": [130, 133], "not_transform": [130, 133], "constructedw": [130, 133], "orig_devic": 131, "unspecifi": 131, "transform_done_spec": [131, 164, 173], "num_actions_effect": 132, "max_act": 132, "include_forward": 132, "num_act": [132, 265, 354], "action_out": 132, "_call": [132, 137, 362], "eol_kei": 134, "lives_kei": 134, "eol_attribut": 134, "unwrap": 134, "breakout": 134, "210": [134, 145, 362], "160": [134, 145, 350, 362], "eol_transform": 134, "eol": 134, "dqnloss": [134, 257, 258, 260, 263, 265, 266, 267, 270, 271, 273, 275, 276, 277, 278, 279, 280, 281, 286, 331, 342, 345, 350, 352, 358], "register_kei": 134, "loss_or_advantag": 134, "lossmodul": [134, 324, 335, 336, 342], "valueestimatorbas": [134, 273, 342], "excluded_kei": 135, "finit": [136, 354, 364], "first_dim": 137, "last_dim": 137, "allow_positive_dim": [137, 166], "th": [137, 166, 197, 201, 362], "frameskip": 137, "repeatedli": [138, 351, 361], "init_kei": [140, 242], "tracker": 140, "coef": 141, "pi_curr": 141, "pi_0": 141, "overfit": 141, "probabilist": [141, 244, 342, 351, 366], "get_dist": [141, 248, 249], "mod": [141, 199, 203, 242, 251, 352, 358], "normalparamextractor": [141, 344, 351, 354, 361], "probabilisticactor": [141, 232, 233, 234, 236, 257, 258, 262, 264, 265, 271, 274, 275, 276, 277, 278, 280, 344, 349, 351, 354, 361], "tanhnorm": [141, 232, 233, 234, 244, 250, 257, 258, 271, 275, 276, 277, 278, 280, 342, 351, 361, 366], "return_log_prob": [141, 232, 233, 234, 244, 248, 250, 277, 344, 351, 354, 361, 366], "apply_": 141, "copy_": [141, 349], "formulat": 141, "diverg": [141, 199, 203, 244, 248, 268, 272], "noop": [142, 366], "trial": 142, "standard_norm": [143, 154, 349, 350, 352], "affin": [143, 154], "layer": [143, 171, 184, 185, 187, 188, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 210, 211, 212, 213, 215, 216, 223, 224, 230, 241, 251, 344, 350, 351, 352, 354, 363], "set_default_tensor_typ": 143, "doubletensor": 143, "isclos": 143, "next_ob": [143, 288, 289, 290, 291, 366], "init_stat": [143, 349, 350, 351, 352], "3752e": 143, "5087e": 143, "9294e": 143, "9636": 143, "5608": 143, "6408": 143, "num_it": [143, 350, 351], "reduce_dim": [143, 349, 350, 351, 352], "cat_dim": [143, 349, 350, 351, 352], "keep_dim": [143, 350, 352], "statist": [143, 171, 277, 340, 349, 350, 351, 367], "gaussian": [143, 161, 183, 207, 212, 213, 218, 235, 351], "empir": [143, 183, 207, 244, 248, 349, 351, 361], "3d": [143, 184], "third": [143, 238, 361], "reorder": 145, "in_keys_in": 145, "channel": [145, 163, 210, 215, 216, 350], "r3m": [147, 363], "resnet": [147, 167, 169], "visual": [147, 167, 169, 307, 351, 362], "embed": [147, 167, 168, 169, 187, 219, 231, 232, 233, 234, 247, 252, 363], "ego4d": [147, 167, 169], "univers": [147, 167, 169, 353], "suraj": [147, 167], "nair": [147, 167], "aravind": [147, 167], "rajeswaran": [147, 167], "vikash": [147, 167, 169], "kumar": [147, 167, 169], "chelsea": [147, 167], "finn": [147, 167], "abhinav": [147, 167], "gupta": [147, 167], "2203": [147, 167, 207, 363], "12601": [147, 167, 363], "_init": [147, 167, 349], "snippet": [147, 167, 349], "resnet50": [147, 169, 363], "model_nam": [147, 167, 169, 310], "resnet34": 147, "resnet18": 147, "r3m_vec": [147, 363], "feed": [147, 169, 273, 344, 349, 361, 364], "stack_imag": [147, 169], "tread": [147, 169], "separet": [147, 169], "hub": [147, 169, 353, 363], "resnet50_weight": [147, 169], "imagenet1k_v1": [147, 169], "download_path": [147, 169], "tensor_pixels_kei": [147, 169], "sub_seq_len": 148, "sample_dim": [148, 349], "primarili": [148, 354], "hesit": 148, "robust": 148, "mix": [148, 219, 228, 286, 349, 361], "improp": 148, "dummyenv": 149, "another_oth": 149, "other_reward": 149, "create_copi": 150, "stuff": [150, 356], "newnam": 150, "r2g": 152, "reward_to_go": 152, "bernoulli_": 152, "9010": 152, "9404": [152, 294], "9701": [152, 294], "9900": [152, 294], "0000": [152, 162, 239, 240, 251, 294, 351, 352, 362, 366], "crash": 152, "clamp_min": 153, "clamp_max": 153, "clip_min": 153, "clip_max": 153, "episode_": 155, "reward1": 155, "reward2": 155, "episode_reward": [155, 361], "keep_reward": 156, "keep_don": 156, "logical_or": 157, "squeeze_dim": 158, "step_count_kei": 159, "update_don": 159, "disjunct": 159, "recognis": 159, "target_return": 160, "subtract": 160, "primer": [161, 352], "default_valu": [161, 352], "unit": [161, 183, 195, 197, 198, 215, 216, 221, 222, 351], "transfomedenv": 161, "mykei": 161, "__unless": 161, "exists__": 161, "increas": [162, 243, 361], "10th": 162, "0216": 162, "1149": 162, "1990": 162, "2749": 162, "3281": 162, "9290": 162, "3702": 162, "8978": 162, "from_int": 163, "shape_toler": 163, "permuat": 163, "ri": 163, "principl": 164, "cattransform": 164, "notabl": 164, "rewardsum": [164, 173, 181, 361], "smoothli": 165, "add_1": 165, "cache_spec": 165, "set_missing_toler": 165, "keyerror": [165, 349], "unsqueeze_dim": [166, 362], "danger": 166, "vc1": 167, "vc1_vec": 167, "untrain": 167, "make_noload_model": 167, "vip": [168, 169, 363], "toward": 169, "implicit": [169, 264, 271, 364], "jason": 169, "ma": 169, "shagun": 169, "sodhani": 169, "dinesh": 169, "jayaraman": 169, "osbert": 169, "bastani": 169, "ami": 169, "zhang": 169, "vip_vec": 169, "final_nam": 170, "sb3": 170, "terminal_obs_read": 170, "truli": [170, 366], "till": 170, "shared_td": 171, "decai": [171, 235, 239, 279, 322, 349, 350, 352, 367], "9999": [171, 362], "0001": [171, 195, 214, 351, 362], "to_observation_norm": 171, "underflow": [171, 322], "build_td_for_shared_vecnorm": 171, "memmori": 171, "queue": [171, 364], "td_share": 171, "state_dim": [172, 186, 191, 218, 221, 222, 236], "action_dim": [172, 186, 187, 189, 191, 218, 236, 349, 360], "gsde": [172, 276, 340], "gsdemodul": 172, "rb_transform": 173, "resist": 173, "insensit": 173, "sensit": [173, 350], "_orig": 173, "95": [173, 207, 282, 350, 351, 352, 362, 363], "tdreset": [173, 360], "window": [173, 242, 364], "edit": [173, 356], "check_dtyp": 174, "discrep": [174, 257, 259, 260, 261, 272, 275, 277, 286], "temporarili": [174, 356, 364], "rng": [174, 362], "revert": [174, 354, 364], "probabilistictdmodul": [179, 180, 205, 244, 248, 287, 320], "next_tensordict": 181, "keep_oth": [181, 362], "exclude_reward": 181, "exclude_don": 181, "exclude_act": 181, "next_": 181, "funtion": 181, "_stepmdp": 181, "write_full_fals": 182, "_terminated_or_trunc": 182, "entropi": [183, 257, 258, 259, 264, 265, 271, 272, 274, 275, 276, 278, 280, 361], "botev": 183, "et": 183, "2013": 183, "cem": 183, "plan": [183, 206, 207], "varianc": [183, 200, 214, 226, 227, 345, 349, 351, 361], "k": [183, 197, 198, 201, 202], "maximis": [183, 187, 189, 207, 344, 350, 351, 361], "modelbasedenv": [183, 207], "planning_horizon": [183, 207], "optim_step": [183, 207, 350, 358], "mpc": [183, 206, 207], "num_candid": [183, 207], "candid": [183, 207], "top_k": [183, 207], "modelbasedenvbas": [183, 206, 207, 342], "safemodul": [183, 206, 232, 234, 248, 257, 258, 264, 265, 271, 275, 276, 277, 278, 280, 329, 330, 336, 342, 366], "num_cel": [184, 185, 187, 188, 189, 190, 195, 196, 199, 203, 205, 210, 211, 232, 350, 351, 352, 354, 355, 358, 361, 366], "elu": [184, 185, 187, 188, 189, 190, 195, 196, 210, 350, 366], "activation_kwarg": [184, 185, 205], "norm_class": [184, 185, 187, 188, 205], "norm_kwarg": [184, 185, 205], "bias_last_lay": [184, 185, 187, 188, 189, 190, 196, 205], "aggregator_class": [184, 185, 187, 188, 350, 352, 366], "squashdim": [184, 185, 187, 196, 210, 366], "aggregator_kwarg": [184, 185, 187, 188, 350, 352], "squeeze_output": [184, 185, 187, 188, 350, 352], "cell": [184, 185, 197, 198, 199, 201, 202, 203, 205, 210, 211, 351, 353, 354, 355, 356, 357, 358], "kernel": [184, 185, 196, 204, 210], "cnet": [184, 185], "conv3d": 184, "lazyconv2d": [185, 187, 188, 196, 210, 366], "transformer_config": [186, 218, 236], "decisiontransform": [186, 218], "dtconfig": [186, 191, 218], "2202": [186, 191, 274], "05607": [186, 191, 274], "return_to_go": [186, 191, 218, 236], "conv_net_kwarg": [187, 188], "mlp_net_kwarg": [187, 188, 189], "use_avg_pool": [187, 188], "WITH": [187, 188, 189, 190, 243, 279], "1509": [187, 188, 189, 190, 207, 243, 261, 270, 279, 362], "02971": [187, 188, 189, 190, 243, 279], "reus": [187, 314], "convnet": [187, 188, 196, 210, 352, 354, 366], "ndims_in": 187, "avgpool": [187, 188], "lazylinear": [187, 188, 189, 190, 196, 205, 344, 351, 354, 362, 363, 366], "2304": [187, 350], "adaptiveavgpool2d": [188, 350, 352], "output_s": [188, 350, 352], "squeeze2dlay": 188, "400": [189, 190, 357, 361, 362, 364], "mlp_net_kwargs_net1": 190, "mlp_net_kwargs_net2": 190, "mlp1": 190, "mlp2": 190, "decion": 191, "desdescrib": 191, "n_embd": 191, "n_layer": [191, 197, 201], "n_head": 191, "n_inner": 191, "n_posit": 191, "resid_pdrop": 191, "attn_pdrop": 191, "gpt2config": 191, "atol": [192, 225], "rtol": [192, 225], "batch_shap": [192, 225], "event_shap": [192, 225], "absolut": [192, 225, 349], "densiti": [192, 208, 209, 217, 227], "mass": [192, 208, 209, 217, 227, 362], "rsampl": [192, 209, 217, 248], "sample_shap": [192, 208, 209, 217], "softmax": [193, 209, 217, 237, 238], "var_num": [194, 220, 237, 238, 246], "action_value_kei": [194, 220, 237, 238, 245, 246, 273, 286], "action_mask_kei": [194, 220, 237, 238, 239, 240, 245, 246], "perspect": [194, 238, 266, 351], "1707": [194, 238, 266, 275], "06887": [194, 238, 266], "mult": [194, 211, 220, 237, 238, 245, 246], "tensordict_modul": [194, 197, 198, 201, 202, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 258, 260, 264, 265, 271, 275, 276, 277, 278, 280, 344], "nbin": [194, 237, 344], "customdistributionalqv": 194, "log_softmax": [194, 237], "from_modul": [194, 247, 250, 366], "one_hot": [194, 209, 220], "qvalue_actor": [194, 220, 237, 245, 344], "to_modul": [194, 247, 250, 349, 366], "std_bia": 195, "std_min_val": 195, "belief": [195, 215, 221, 222], "1912": [195, 267, 268, 269], "01603": [195, 267, 268, 269], "softplu": [195, 214, 254, 255, 256], "out_features_valu": 196, "cnn_kwarg": [196, 350], "mlp_kwarg": [196, 204, 350], "duel": 196, "cnn": [196, 210, 350, 354, 366], "06581": 196, "batch_first": [197, 199, 201, 203, 352], "bidirect": [197, 201, 352], "cudnn": [197, 198, 201, 202, 352], "vmap": [197, 198, 201, 202, 204, 229, 247, 250, 366], "rnn": [197, 198, 201, 202, 352, 354], "device_count": [197, 198, 201, 202, 367], "n_in": [197, 198, 201, 202], "n_out": [197, 198, 201, 202], "h0": [197, 198, 201, 202], "h1": [197, 198, 201, 202], "call_gru": [197, 198], "h_out": [197, 198, 201, 202], "batched_cal": [197, 198, 201, 202], "gate": [197, 198, 201], "r_t": 197, "sigma": [197, 198, 200, 201, 202, 226, 227, 235, 243, 351], "w_": [197, 198, 201, 202], "ir": [197, 198], "x_t": [197, 201], "b_": [197, 198, 201, 202], "hr": [197, 198, 201], "h_": [197, 198, 201], "z_t": 197, "iz": [197, 198], "hz": [197, 198], "n_t": 197, "odot": [197, 198, 201, 202], "hn": [197, 198, 201], "h_t": [197, 201], "sigmoid": [197, 198, 201, 202], "hadamard": [197, 198, 201, 202], "multilay": [197, 201], "_t": [197, 201, 361, 362], "ge": [197, 201], "multipli": [197, 201, 258, 259, 265, 272, 274, 275, 276, 278, 322, 349], "bernoulli": [197, 201], "b_ih": [197, 198, 201, 202, 203], "b_hh": [197, 198, 201, 202, 203], "seq": [197, 199, 201, 203, 242, 352, 358, 360], "h_0": [197, 201, 202], "unbatch": [197, 201], "pack_padded_sequ": [197, 201], "pack_sequ": [197, 201], "num": [197, 201, 358], "_layer": [197, 201], "_size": [197, 198, 201, 202], "h_n": [197, 201], "packedsequ": [197, 201], "weight_ih_l": [197, 201], "learnabl": [197, 198, 201, 202], "w_ir": 197, "w_iz": 197, "w_in": 197, "num_direct": [197, 201], "weight_hh_l": [197, 201], "w_hr": 197, "w_hz": 197, "w_hn": 197, "bias_ih_l": [197, 201], "b_ir": 197, "b_iz": 197, "b_in": 197, "bias_hh_l": [197, 201], "b_hr": 197, "b_hz": 197, "b_hn": 197, "mathcal": [197, 198, 201, 202], "sqrt": [197, 198, 201, 202, 243], "frac": [197, 198, 201, 202, 351], "seq_len": [197, 201], "subtli": 197, "matrix": [197, 201, 212, 213], "contrast": [197, 270, 364], "hx": [197, 198, 201, 202], "lstmcell": [198, 203], "gru_cel": 198, "z": 198, "weight_ih": [198, 202], "weight_hh": [198, 202], "bias_ih": [198, 202], "bias_hh": [198, 202], "rocm": [198, 202], "embedd": [199, 203, 204], "grucel": [199, 247], "python_bas": [199, 203], "recurrent_st": [199, 352], "custom_kei": [199, 203], "recurrent_mod": [199, 203], "rs": [199, 349], "gru_module_train": 199, "policy_train": [199, 203], "traj_td": [199, 203], "policy_infer": [199, 203], "td_inf": [199, 203], "assert_clos": [199, 203], "upscal": [200, 226, 227], "tanh_loc": [200, 226, 227], "event_dim": [200, 225, 226], "ultim": [200, 226, 227], "poor": [200, 226, 227], "explos": [200, 226, 227], "switch": [200, 227], "formula": [200, 226, 227, 257, 259, 272, 275, 345, 351], "proj_siz": 201, "c0": [201, 202], "c1": [201, 202], "call_lstm": [201, 202], "c_out": [201, 202], "i_t": 201, "ii": [201, 202], "hi": [201, 202], "f_t": 201, "hf": [201, 202], "g_t": 201, "ig": [201, 202], "hg": [201, 202], "o_t": 201, "ho": [201, 202], "c_t": 201, "c_": 201, "forget": 201, "1402": 201, "1128": 201, "c_0": [201, 202], "proj": 201, "c_n": 201, "w_ii": 201, "w_if": 201, "w_ig": 201, "w_io": 201, "w_hi": 201, "w_hf": 201, "w_hg": 201, "w_ho": 201, "b_ii": 201, "b_if": 201, "b_ig": 201, "b_io": 201, "b_hi": 201, "b_hf": 201, "b_hg": 201, "b_ho": 201, "weight_hr_l": 201, "_revers": 201, "analog": [201, 354], "cn": 201, "lstm_cell": 202, "h_1": 202, "c_1": 202, "time_step": [202, 204, 242], "cx": 202, "correspont": 203, "recurrent_state_h": [203, 352], "recurrent_state_c": [203, 352], "triplet": [203, 245, 246], "lstm_modul": 203, "rs_h": 203, "rs_c": 203, "hidden0": 203, "hidden1": 203, "lstm_kwarg": 204, "lstm_backend": 204, "next_observ": [204, 257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 360], "2d": [204, 354, 361], "indeic": 204, "hidden0_in": 204, "hidden1_in": 204, "hidden0_out": 204, "hidden1_out": 204, "single_bias_last_lay": 205, "layer_class": 205, "layer_kwarg": 205, "perceptron": [205, 354], "aslo": 205, "42": [205, 257, 258, 260, 264, 271, 278, 348, 350, 351, 361, 362, 365], "noisylinear": [205, 212, 342, 350], "noisylazylinear": [205, 342], "mpcplanner": 206, "tensordict_out": [206, 367], "mppi": 207, "covari": 207, "william": [207, 277], "aldrich": 207, "theodor": 207, "01149": 207, "hansen": 207, "wang": 207, "su": 207, "04955": 207, "valueoper": [207, 232, 233, 234, 257, 258, 259, 260, 265, 271, 272, 275, 276, 277, 278, 280, 336, 344, 349, 351, 355], "tdlambdaestim": [207, 342, 349], "value_net": [207, 261, 263, 277, 288, 289, 290, 291, 351, 354, 355, 358], "adv": 207, "lmbda": [207, 282, 288, 291, 293, 299, 300, 301, 304, 305, 345, 349, 351, 361], "value_network": [207, 260, 261, 263, 264, 266, 271, 278, 288, 289, 290, 291, 345, 349, 351, 355, 358], "temperatur": [207, 258, 264, 271], "neg_inf": [208, 209], "inf": [208, 209], "api_doc": [208, 209], "tf_agent": [208, 209], "event": [208, 209, 217, 297, 298, 299, 300, 302, 303, 304, 305, 364], "unnorm": [208, 209, 217], "sparse_mask": [208, 209], "dens": [208, 209], "0831": [208, 209], "1203": [208, 209], "0928": [208, 209], "1972": [208, 209], "grad_method": [209, 217], "reparamgradientstrategi": [209, 217], "passthrough": [209, 217], "proxi": [209, 217, 345], "relaxedonehot": [209, 217], "zeros_lik": [209, 362], "sample_non_valid": 209, "centralis": [210, 211, 361], "share_param": [210, 211, 361], "homogen": [210, 211, 361], "agent_network": [210, 211], "modulelist": [210, 211, 333, 366], "2592": [210, 350], "decentralis": [210, 361], "n_agent_input": [211, 361], "n_agent_output": [211, 361], "lazili": [211, 362], "toech": 211, "centalis": 211, "shown": [211, 344, 360, 361, 364], "std_init": [212, 213], "initialize_paramet": 212, "isol": [212, 273], "1706": [213, 228], "10295v3": 213, "induc": 213, "aid": 213, "scale_map": 214, "biased_softplus_1": 214, "scale_lb": [214, 221, 222], "exp": [214, 256], "module_norm": 214, "decod": 215, "1803": [215, 216, 219], "10122": [215, 216], "rnn_hidden": 215, "latent": 216, "excacli": 217, "inres": 218, "mu": [218, 243, 351], "state_shap": [219, 286], "mixing_embed_dim": [219, 286], "qmix": [219, 361], "mixer": [219, 228, 286], "monoton": 219, "hyper": 219, "11485": 219, "qmixerloss": [219, 228], "qmix_vdn": [219, 228], "vdn": [219, 228], "greedi": [220, 238, 239, 240, 246, 350, 352, 354], "hidden_dim": [221, 222], "posterior": [221, 268], "rssm": [221, 222, 268], "1811": [221, 222], "04551": [221, 222], "obs_embed": 221, "rnn_hidden_dim": 222, "dream": 222, "tanhtransform": 226, "decomposit": 228, "05296": 228, "hide": [229, 351, 361], "satisfi": [229, 344], "vmap_dim": 229, "lam": 229, "sample_in": 229, "sample_in_td": 229, "vm": 229, "translat": [231, 244], "character": [231, 237, 244, 245, 247, 364], "overflow": [231, 237, 238, 244, 245, 246, 247, 248], "td_modul": [231, 232, 233, 234, 244, 247, 248, 250, 252, 354, 366], "3635": 231, "0340": 231, "1476": 231, "3911": [231, 362], "1664": [231, 350, 362], "5455": 231, "2247": 231, "4583": 231, "2916": 231, "2160": 231, "5337": 231, "5193": 231, "grad_fn": [231, 239, 240, 366], "addmmbackward0": 231, "actorvalueoper": [232, 344, 354], "get_policy_oper": [232, 233, 234, 259, 272, 275, 344], "standalon": [232, 233, 234, 354], "tdmodul": [232, 233, 234, 336], "get_critic_oper": 232, "common_oper": [232, 234], "policy_oper": [232, 233, 234], "value_oper": [232, 233, 234], "normalparamwrapp": [232, 233, 234, 244, 250, 257, 258, 265, 271, 275, 276, 277, 278, 280, 342, 366], "module_hidden": [232, 234], "td_module_hidden": [232, 234], "module_act": [232, 234], "td_module_act": [232, 233, 234], "module_valu": [232, 233, 234], "td_module_valu": [232, 233, 234], "state_action_valu": [232, 252, 258, 264, 271, 278, 287, 333, 336, 344, 349, 366], "td_clone": [232, 233, 234], "tensordictmodulewrapp": [232, 329, 330, 336], "get_policy_head": [232, 233, 234], "safesequenti": [232, 233, 234, 286], "head": [232, 234, 259, 272, 275], "get_value_head": [232, 233, 234], "get_value_oper": [232, 233, 234, 259, 272, 275], "action_modul": 233, "state_valu": [233, 234, 252, 259, 264, 271, 272, 275, 276, 278, 288, 289, 290, 291, 293, 295, 297, 299, 301, 302, 304, 344, 349, 351, 361], "qualiti": [234, 344], "actorcriticoper": [234, 259, 272, 275, 344, 354], "embeddig": 234, "refet": 234, "actorcriticwrapp": [234, 344, 349], "po": [235, 240], "sigma_init": 235, "epsilon": [235, 239, 240, 243, 279, 322, 350, 351, 352, 354], "sigma_end": 235, "annealing_num_step": [235, 239, 240, 243, 349, 350, 352, 354, 358], "captur": [235, 239, 240, 243], "omiss": [235, 239, 240, 243], "ommit": [235, 239, 240, 243], "inferec": 236, "set_tensor_kei": 236, "dt_inference_wrapp": 236, "baz": 236, "inference_context": 236, "obs_dim": 236, "tanhdelta": [236, 342, 349], "dtactor": 236, "actor_modul": [236, 366], "dist_class": 236, "dist_kwarg": 236, "distribution_kwarg": [236, 244, 248, 351, 361], "inference_actor": 236, "sequence_length": 236, "mask_context": 236, "out_act": 236, "qvaluemodul": [237, 245, 286, 352, 354, 358], "distributionaldqnnet": 237, "make_log_softmax": 237, "my_action_valu": [238, 246], "chanc": 238, "thid": 238, "eps_init": [239, 240, 243, 350, 352, 354, 358], "eps_end": [239, 240, 243, 350], "explorative_polici": [239, 240, 243], "9055": [239, 240, 362], "9277": [239, 240], "6295": [239, 240], "2532": [239, 240], "addbackward0": [239, 240], "lmheadmodel": 241, "actor_head": [241, 259, 272, 275], "base_model": 241, "lm_head": 241, "macro": 242, "lookahead": 242, "n_action": [242, 258, 261, 263, 274, 278], "reshape_cat": 242, "actor_bas": 242, "obs_cat": 242, "obs_cat_reshap": 242, "action_orig": 242, "counter": [242, 317, 346], "ornstein": [243, 349], "uhlenbeck": [243, 349], "ou": [243, 349], "correl": 243, "noise_t": 243, "noise_": 243, "theta": [243, 351, 362], "sigma_t": 243, "sigma_": 243, "anneal": [243, 350, 354], "ou_prev_nois": 243, "ou_step": 243, "x0": 243, "sigma_min": 243, "n_steps_ann": 243, "is_init_kei": 243, "_ou_prev_nois": 243, "_ou_step": 243, "default_interaction_typ": [244, 248, 354], "interaction_typ": [244, 248], "datacollectorbas": [244, 326, 329, 330, 336, 342], "set_interaction_typ": [244, 248], "cache_dist": [244, 248], "n_empirical_estim": [244, 248], "compound": [244, 354], "compositedistribut": [244, 354], "categ": 244, "distribution_map": 244, "chose": 246, "functionalmodul": 247, "functionalmodulewithbuff": 247, "td_fmodul": 247, "td_function": 247, "td_state": 247, "params_repeat": 247, "td_vmap": [247, 250], "random_sampl": [247, 248], "suppli": 248, "fist": 248, "log_prob_kei": [248, 361], "probabilistictensordictsequenti": [249, 257, 259, 272, 275, 277, 329, 330, 366], "partial_toler": [249, 250, 360], "who": [249, 250], "AND": [249, 250], "tensordictsequenci": 250, "tensordictsequ": 250, "safeprobabilisticmodul": [250, 344], "spec1": 250, "net1": 250, "module1": 250, "td_module1": 250, "spec2": 250, "module2": 250, "td_module2": 250, "clamp": [251, 268, 324, 362], "boundari": [251, 351, 361], "resolut": 251, "9944": 251, "9991": 251, "3020": 251, "2299": [251, 362], "5418": 251, "2989": 251, "6849": 251, "3169": 251, "2690": 251, "9649": [251, 362], "5686": 251, "8602": 251, "0315": 251, "8455": [251, 362], "6027": 251, "4746": 251, "7843": 251, "7782": 251, "2111": 251, "5115": 251, "4687": 251, "5760": 251, "custommodul": 252, "imaginari": 253, "imagin": 253, "transition_model": 253, "get_reward_oper": 253, "get_transition_model_oper": 253, "min_val": [254, 256], "_bia": 254, "invert": [255, 351], "surject": 256, "expln": 256, "biased_softplu": [256, 342], "beggin": 256, "biased_softplus_": 256, "syntax": [256, 349], "met": [256, 362], "1602": 257, "01783v2": 257, "actor_network": [257, 258, 259, 260, 262, 264, 265, 271, 272, 274, 275, 276, 277, 278, 280, 349, 351, 355, 361], "critic_network": [257, 259, 272, 275, 277, 351, 361], "entropy_bonu": [257, 259, 272, 275, 351], "favour": [257, 259, 272, 275], "samples_mc_entropi": [257, 259, 272, 274, 275], "mont": [257, 259, 272, 275, 349], "carlo": [257, 259, 272, 275, 349], "entropy_coef": [257, 259, 272, 275, 351, 361], "critic_coef": [257, 259, 272, 275, 351], "loss_critic_typ": [257, 259, 272, 275, 277, 351], "l1": [257, 259, 260, 261, 265, 272, 275, 276, 277, 280, 283, 286, 344, 349], "l2": [257, 259, 260, 261, 262, 263, 265, 268, 269, 272, 275, 276, 277, 280, 283, 286, 349], "smooth_l1": [257, 258, 259, 260, 261, 264, 265, 271, 272, 275, 276, 277, 278, 280, 283, 286, 351], "separate_loss": [257, 259, 260, 264, 265, 271, 272, 275, 276, 277, 278, 280], "propag": [257, 259, 260, 264, 265, 271, 272, 275, 276, 277, 278, 280, 288, 289, 290, 291, 351, 361], "advantage_kei": [257, 259, 272, 275, 277, 288, 289, 290, 291], "value_target_kei": [257, 259, 272, 275, 277, 288, 289, 290, 291], "value_target": [257, 259, 272, 275, 277, 288, 289, 290, 291, 351, 361], "ddp": [257, 259, 272, 275, 277], "fsdp": [257, 259, 272, 275, 277], "divid": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 271, 272, 274, 275, 276, 277, 278, 280, 327, 344, 349, 361, 362], "clip_valu": [257, 259, 272, 275, 277], "loss_crit": [257, 275, 351, 361], "loss_entropi": [257, 275, 351, 361], "loss_object": [257, 275, 351, 361], "recur": [257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 288, 289, 290, 291, 292, 354], "next_reward": [257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 288, 289, 290, 291], "next_don": [257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 288, 289, 290, 291], "next_termin": [257, 258, 260, 261, 263, 264, 265, 271, 275, 276, 277, 278, 280, 288, 289, 290, 291], "loss_obj": 257, "sacloss": [257, 270, 279, 342], "select_out_kei": [257, 258, 260, 264, 265, 271, 275, 276, 278, 280], "make_value_estim": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 281, 286, 345, 349, 350, 361, 366], "value_typ": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 282, 286, 349], "hyperparam": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 349], "enum": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 282, 286, 349], "default_value_estim": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 349, 366], "default_value_kwarg": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 342, 349], "dqn_loss": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 281, 286], "td1": [257, 258, 260, 261, 263, 265, 266, 267, 271, 273, 275, 276, 277, 278, 280, 286, 349], "conserv": [258, 263], "qvalue_network": [258, 264, 265, 271, 276, 278, 280], "loss_funct": [258, 260, 261, 262, 263, 264, 265, 271, 276, 278, 280, 283, 286, 349], "alpha_init": [258, 265, 274, 276, 278], "min_alpha": [258, 265, 274, 276, 278], "max_alpha": [258, 265, 274, 276, 278], "fixed_alpha": [258, 265, 274, 276, 278], "target_entropi": [258, 265, 274, 276, 278], "prod": [258, 274, 278], "delay_actor": [258, 260, 278, 280], "delay_qvalu": [258, 265, 276, 278, 280], "min_q_weight": 258, "max_q_backup": 258, "backup": 258, "deterministic_backup": 258, "num_random": 258, "with_lagrang": 258, "lagrang": 258, "lagrange_thresh": 258, "valueclass": [258, 260, 265, 276, 278, 280], "qvalu": [258, 264, 265, 271, 276, 278, 280, 333], "loss_actor": [258, 260, 264, 265, 271, 276, 277, 278, 280, 319, 349, 355, 366], "loss_actor_bc": 258, "loss_alpha": [258, 265, 276, 278], "loss_cql": [258, 263], "loss_qvalu": [258, 263, 264, 265, 271, 276, 278, 280], "loss_alpha_prim": 258, "clip_epsilon": [259, 351, 361], "normalize_advantag": [259, 272, 275, 361], "value_kei": [259, 272, 275, 288, 289, 290, 291, 349], "somemodul": [259, 272, 275], "someactor": [259, 272, 275], "value_head": [259, 272, 275], "somevalu": [259, 272, 275], "loss_modul": [259, 270, 272, 273, 275, 279, 324, 335, 336, 345, 346, 349, 350, 351, 361, 364], "ppoloss": [259, 272, 342], "delay_valu": [260, 261, 263, 266, 277, 278, 286, 350, 352, 358], "loss_valu": [260, 264, 271, 277, 278, 349, 351, 355, 361, 366], "pred_valu": [260, 263, 280, 349, 355, 366], "pred_value_max": [260, 349, 355, 366], "target_valu": [260, 263, 276, 280, 287, 345, 349, 355, 366], "target_value_max": [260, 349, 355, 366], "qvalueactor": [261, 263, 286, 344, 350, 352], "double_dqn": 261, "06461": [261, 270], "mult_one_hot": [261, 264, 265, 286], "loss_val": [261, 263, 345, 349, 351, 352, 355, 356, 358, 361, 364], "01345": 262, "distanc": [263, 272, 283, 287, 288, 361], "dcql_loss": 263, "2110": [264, 271], "06169": [264, 271], "num_qvalue_net": [264, 265, 271, 276, 278, 280], "expectil": [264, 271], "tau": [264, 271, 279, 349, 350], "antmaz": [264, 271], "sticht": [264, 271], "onehotcategor": [264, 265, 342], "target_entropy_weight": 265, "disctount": 266, "distributionalqvalueactor": [266, 344], "input_tensordict": [266, 349], "actor_model": 267, "value_model": [267, 269], "model_based_env": 267, "dreamerenv": [267, 342], "imagination_horizon": 267, "unrol": [267, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305], "discount_loss": [267, 269], "lambda_kl": 268, "lambda_reco": 268, "lambda_reward": 268, "reco_loss": 268, "reward_loss": 268, "free_nat": 268, "nat": 268, "delayed_clamp": 268, "global_averag": 268, "value_loss": 269, "fake_data": 269, "ddpgloss": [270, 279, 336, 342, 349, 355, 366], "td3loss": [270, 279, 342], "value_network_update_interv": 270, "qvalueclass": 271, "loss_value_diff": 271, "diff": 271, "old_polici": 272, "new_polici": 272, "apart": [272, 361], "dtarg": 272, "samples_mc_kl": 272, "analyt": 272, "decrement": 272, "loss_": [273, 319, 345, 349, 355], "equip": [273, 352, 354], "gh": 273, "_acceptedkei": 273, "dataclass": [273, 333], "_forward_value_estimator_kei": 273, "alter": [273, 344], "value_estim": [273, 288, 289, 290, 291, 292, 345, 349, 361], "myloss": 273, "action2": 273, "convert_to_funct": [273, 349], "expand_dim": 273, "create_target_param": [273, 349], "compare_against": [273, 349], "_param": 273, "expans": 273, "resampl": 273, "_target_param": 273, "blend": 273, "proxim": [275, 351, 361], "optimis": [275, 320, 351, 361], "flavour": [275, 361, 366], "clipppoloss": [275, 342, 351, 361], "klpenppoloss": [275, 342], "regularis": 275, "06347": 275, "gae": [275, 342, 345, 349, 351, 361], "ppo_loss": 275, "tdlambda": [275, 282, 345, 349], "base_lay": 275, "randn_lik": 275, "samplelogprob": 275, "openreview": [276, 333], "ay8zfzm0tdd": [276, 333], "sub_sample_len": 276, "subsampl": [276, 315, 346], "action_log_prob_actor": 276, "state_action_value_actor": [276, 280], "connectionist": 277, "1992": 277, "doi": 277, "1007": 277, "bf00992696": 277, "actor_net": [277, 349, 351], "1801": 278, "01290": 278, "applic": [278, 286, 353, 354, 362], "1812": 278, "05905": 278, "redqloss": [279, 342], "math": 279, "theta_t": [279, 362], "theta_": [279, 362], "polyak": 279, "policy_nois": 280, "noise_clip": 280, "next_state_valu": [280, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 342], "td0": [281, 349], "strict_shap": 283, "view_a": 283, "qmixer": [286, 342], "local_valu": 286, "visibl": [286, 361], "dafault": 286, "acceptedkei": 286, "global_valu": 286, "penultim": 286, "local_value_network": 286, "mixer_network": 286, "value_modul": [286, 351, 366], "qnet": [286, 349], "next_val_kei": 287, "pred_next_v": 287, "usus": 287, "mse": 287, "q_valu": 287, "n_steps_to_next": 287, "value_next_st": 287, "1506": [288, 293, 301], "02438": [288, 293, 301], "exponenti": [288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 322], "average_ga": [288, 351], "skip_exist": [288, 289, 290, 291], "time_dim": [288, 290, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305], "advang": 288, "gradient_mod": 288, "value_error": [288, 289, 290, 291, 292], "target_param": [288, 289, 290, 291, 292, 349, 361], "98": [288, 289, 290, 291, 350, 362], "94": [288, 291, 350, 362], "unpack": [288, 289, 290, 291], "tensor_kei": [288, 289, 290, 291, 292], "next_valu": [288, 289, 290, 291, 292], "aka": [289, 350], "average_reward": [289, 290, 291], "tdestim": [289, 290, 292], "infti": 290, "valuefunctionbas": 292, "old_stat": [293, 295, 297, 299, 301, 302, 304], "new_stat": [293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "rolling_gamma": [297, 298, 299, 300, 302, 303, 304, 305], "g1": [297, 298, 299, 300, 302, 303, 304, 305], "g2": [297, 298, 299, 300, 302, 303, 304, 305], "g3": [297, 298, 299, 300, 302, 303, 304, 305], "g4": [297, 298, 299, 300, 302, 303, 304, 305], "v3": [297, 298, 299, 300, 302, 303, 304, 305], "out_file_bas": 306, "skip_reset": 306, "interv": [306, 307, 316, 326, 350, 362], "center_crop": 307, "make_grid": 307, "mp4": [307, 309, 358], "csvlogger": [307, 342, 350, 357, 358], "csv": [307, 309, 311, 350, 357, 358], "wandb": [307, 311, 314, 357, 366], "tensorboard": [307, 311, 313, 357, 366], "exp_nam": [307, 308, 309, 312, 313, 314, 336, 350, 357, 358], "log_dir": [307, 308, 309, 311, 313, 314, 350, 358], "cheetah_video": 307, "video_format": [307, 309, 358], "run_video": 307, "openxexperiencereplai": 307, "run_video_0": 307, "templat": 308, "pt": [309, 346, 363], "video_fp": 309, "minim": [309, 364], "dependeci": 309, "cur_dir": 309, "csv_log": 309, "video_": 309, "experiment_nam": [310, 311], "uuid": [310, 350, 367], "logger_typ": 311, "logger_nam": 311, "mlflow": [311, 312], "wandb_kwarg": 311, "mlflow_kwarg": 311, "tracking_uri": 312, "uri": 312, "datastor": 312, "tb_log": 313, "tensoarboard": 313, "td_log": 313, "save_dir": 314, "resum": 314, "uncategor": 314, "sub_traj_len": 315, "min_sub_traj_len": 315, "register_op": [315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 346, 350], "process_optim_batch": [315, 321, 322, 346], "td_out": [315, 323], "_process_optim_batch_hook": [315, 346], "batch_subsampl": 315, "clear_cuda": 316, "pre_optim_step": [316, 346], "log_pbar": [317, 318, 320, 322, 346, 350], "progress": [317, 318, 320, 324, 346, 350, 352, 367], "count_fram": 317, "pre_steps_log": [317, 318, 346], "count_frames_log": 317, "lognam": 318, "r_train": [318, 350], "log_reward": [318, 350], "loss_compon": 319, "appl": 319, "optimizer_hook": 319, "record_interv": [320, 349, 350], "record_fram": [320, 327, 349, 350], "policy_explor": [320, 336, 349, 350, 354, 358], "log_kei": [320, 350], "suffix": 320, "underestim": 320, "set_exploration_typ": [320, 342, 351, 352, 354, 366], "r_evalu": [320, 349], "flatten_tensordict": [321, 350], "max_dim": 321, "rb_trainer": 321, "batch_process": [321, 322, 323, 346], "post_loss": [321, 346], "999": [322, 350], "jitter": 322, "finfo": 322, "default_dtyp": 322, "get_default_dtyp": 322, "reward_norm": 322, "update_reward_stat": 322, "normalize_reward": 322, "make_train": [323, 342], "_process_batch_hook": [323, 346], "select_kei": [323, 346], "versatil": [324, 353], "optim_steps_per_batch": [324, 346, 350], "clip_grad_norm": 324, "clip_norm": 324, "progress_bar": 324, "save_trainer_interv": 324, "log_interv": [324, 350], "save_trainer_fil": [324, 346], "update_weights_interv": [326, 350], "update_weight": 326, "post_step": [326, 346, 350], "cfg": [327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340], "dictconfig": [327, 328, 329, 330, 333, 334, 335, 336, 337, 340], "unknowingli": 327, "annealing_fram": [327, 349], "init_env_step": [327, 328, 349], "proof_environ": [328, 333, 349], "sta": 328, "ot": 328, "actor_model_explor": [329, 330, 349], "make_env_kwarg": [329, 330], "targetnetupdat": [331, 332, 335, 336], "redqloss_deprec": 332, "actor_net_kwarg": 333, "qvalue_net_kwarg": 333, "observation_kei": 333, "parser_env_arg": 333, "parser_model_args_continu": 333, "hydra": 333, "config_stor": 333, "configstor": 333, "config_field": 333, "config_cl": 333, "redqmodelconfig": 333, "envconfig": 333, "make_dataclass": 333, "cls_name": 333, "cs": 333, "config_path": 333, "config_nam": 333, "replayargsconfig": 334, "target_net_updat": [336, 349, 350], "constitu": 336, "tensorboardlogg": [336, 342, 357], "egreedywrapp": 336, "env_proof": 336, "obs_spec": 336, "net_valu": 336, "dir": [336, 346, 350], "gettempdir": 336, "argpars": [337, 340], "namespac": [337, 340], "parser": [337, 340], "transformed_env_constructor": [337, 342], "num_env_per_collector": [338, 339], "video_tag": 340, "norm_obs_onli": 340, "use_env_cr": 340, "custom_env_mak": 340, "custom_env": 340, "return_transformed_env": 340, "action_dim_gsd": 340, "state_dim_gsd": 340, "obs_norm_state_dict": 340, "wheter": 340, "maker": 340, "asyncdatacollector": 342, "distributedsyncdatacollector": 342, "submitit_delayed_launch": 342, "raycollector": 342, "rational": 342, "behind": 342, "footnot": 342, "unboundeddiscretetensorspec": 342, "lazystackedtensorspec": 342, "lazystackedcompositespec": 342, "prompttensordicttoken": 342, "rolloutfrommodel": 342, "tokenizeddatasetload": 342, "create_infinite_iter": 342, "consolidate_spec": 342, "check_no_exclusive_kei": 342, "contains_lazy_spec": 342, "check_marl_group": 342, "tensordictrecord": 342, "videorecord": [342, 351, 357, 358], "get_available_librari": 342, "set_exploration_mod": 342, "make_composite_from_td": [342, 362], "terminated_or_trunc": 342, "braxwrapp": 342, "dmcontrolwrapp": 342, "jumanjienv": 342, "jumanjiwrapp": 342, "meltingpotenv": 342, "meltingpotwrapp": 342, "mogymenv": 342, "mogymwrapp": 342, "multithreadedenvwrapp": 342, "openmlenv": 342, "pettingzooenv": 342, "robohiveenv": 342, "smacv2env": 342, "smacv2wrapp": 342, "vmaswrapp": 342, "qvaluehook": 342, "distributionalqvaluehook": 342, "reset_nois": 342, "cemplann": 342, "mpcplannerbas": 342, "mppiplann": 342, "independentnorm": 342, "truncatednorm": 342, "maskedonehotcategor": 342, "inv_softplu": 342, "vmapmodul": 342, "distributionaldqnloss": [342, 350], "discretesacloss": 342, "iqlloss": 342, "discreteiqlloss": 342, "cqlloss": 342, "discretecqlloss": 342, "dtloss": 342, "onlinedtloss": 342, "a2closs": 342, "reinforceloss": 342, "dreameractorloss": 342, "dreamermodelloss": 342, "dreamervalueloss": 342, "td0estim": [342, 349], "td1estim": [342, 349], "td0_return_estim": 342, "td0_advantage_estim": 342, "td1_return_estim": 342, "vec_td1_return_estim": 342, "td1_advantage_estim": 342, "vec_td1_advantage_estim": 342, "td_lambda_return_estim": 342, "vec_td_lambda_return_estim": 342, "td_lambda_advantage_estim": 342, "vec_td_lambda_advantage_estim": 342, "generalized_advantage_estim": 342, "vec_generalized_advantage_estim": 342, "reward2go": 342, "distance_loss": [342, 349], "hold_out_net": 342, "hold_out_param": [342, 349], "softupd": [342, 349, 350, 352, 355, 358], "hardupd": [342, 349, 355], "batchsubsampl": [342, 346], "clearcudacach": 342, "countframeslog": 342, "logreward": [342, 346, 350], "optimizerhook": [342, 350], "replaybuffertrain": [342, 346, 350], "rewardnorm": 342, "selectkei": [342, 346], "trainerhookbas": [342, 346, 350], "updateweight": [342, 346, 350], "make_collector_offpolici": 342, "make_collector_onpolici": 342, "make_dqn_loss": 342, "make_redq_loss": 342, "make_redq_model": 342, "make_replay_buff": [342, 349], "make_target_updat": 342, "parallel_env_constructor": [342, 349], "sync_async_collector": 342, "sync_sync_collector": 342, "correct_for_frame_skip": 342, "get_stats_random_rollout": 342, "mlflowlogg": 342, "wandblogg": [342, 357], "get_logg": 342, "generate_exp_nam": 342, "journei": 343, "textbook": 343, "highlight": 343, "ever": [343, 361], "bump": 343, "think": [343, 351, 361, 367], "benefit": [343, 353, 361, 364], "pr": 343, "ground": [344, 349, 362], "recycl": [344, 364], "impos": 344, "violat": 344, "noisier": 344, "Their": [344, 361], "sd": 344, "prob_modul": 344, "pick": [344, 349, 350, 354], "hopefulli": [344, 350], "functional_modul": 344, "make_funct": 344, "mathbb": [344, 350], "rightarrow": [344, 350], "soften": 344, "backbon": [344, 352, 354, 360, 366], "make_actor": 344, "make_valu": 344, "shared_param": 344, "make_common": 344, "reusabl": [345, 349, 364], "swappabl": [345, 349], "characterist": [345, 349, 362], "trainabl": [345, 349, 355, 363], "whatev": [345, 349], "smth": [345, 349], "metric": [345, 349], "nutshel": [345, 349], "barto": [345, 361], "chapter": [345, 357], "significantli": [345, 349, 350, 355, 361], "next_stat": 345, "value_net_loss": 345, "pow": [345, 349], "room": 345, "signifi": [345, 361], "underperform": 345, "thin": 345, "intric": [345, 354], "believ": 346, "scheme": [346, 367], "substenti": 346, "_pre_steps_log_hook": 346, "_pre_optim_hook": 346, "sub_batch": 346, "_post_loss_hook": 346, "_post_optim_hook": 346, "post_optim": [346, 350], "_post_optim_log": 346, "post_optim_log": 346, "_post_steps_hook": 346, "_post_steps_log_hook": 346, "post_steps_log": 346, "comment": [346, 350, 366], "reserv": 346, "logginghook": 346, "logging_hook": 346, "save_dict": 346, "some_valu": 346, "torchsnapshot": 346, "ckpt_backend": 346, "filepath": 346, "save_train": 346, "load_from_fil": 346, "43": [348, 350, 352, 353, 357, 362, 363, 365], "459": [348, 362, 365], "galleri": [348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "mem": [348, 365], "mb": [348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367], "torchrl_demo": [348, 365, 366], "51": [348, 350, 362, 363, 365, 366], "891": [348, 356, 365, 366], "rb_tutori": [348, 364, 365], "45": [348, 350, 352, 362, 364, 365], "606": [348, 362, 364, 365], "4011": [348, 365], "coding_dqn": [348, 350, 365], "286": [348, 350, 362, 365], "694": [348, 350, 365], "dqn_with_rnn": [348, 352, 365], "940": [348, 352, 365], "1906": [348, 365], "multiagent_ppo": [348, 361, 365], "187": [348, 361, 362, 365], "coding_ddpg": [348, 349, 365], "454": [348, 349, 362, 365], "4002": [348, 349, 365], "coding_ppo": [348, 351, 365], "209": [348, 351, 362, 365], "torchrl_env": [348, 365, 367], "59": [348, 350, 352, 362, 363, 365, 367], "648": [348, 365], "3816": [348, 365], "pretrained_model": [348, 363, 365], "737": [348, 362, 363, 365], "3319": [348, 363, 365], "multi_task": [348, 360, 365], "48": [348, 350, 352, 360, 362, 363, 365], "424": [348, 354, 362, 365], "118": [348, 353, 362, 365], "458": [348, 355, 362, 365], "443": [348, 358, 362, 365], "85": [348, 350, 352, 358, 362, 365], "author": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 364, 367], "vincent": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 364, 367], "moen": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 364, 367], "assembl": 349, "focus": [349, 355], "straightforward": [349, 350, 353, 354, 355, 356, 364], "maxim": [349, 355, 362], "transpar": [349, 352], "illustr": [349, 350, 354, 364], "bash": 349, "is_fork": [349, 350, 351, 352, 361, 363], "get_start_method": [349, 350, 351, 352, 361, 363], "is_avail": [349, 350, 351, 352, 361, 363], "collector_devic": 349, "loss_dict": 349, "oblivi": [349, 351, 364], "elementari": 349, "didact": 349, "dilut": 349, "pessimist": [349, 350, 351], "target_actor_network_param": 349, "actor_in_kei": 349, "actor_crit": 349, "noth": [349, 351], "compromis": 349, "hp": 349, "hasattr": 349, "_value_estim": 349, "elif": [349, 350], "notimplementederror": 349, "unknown": 349, "ifgg": 349, "_loss_actor": 349, "td_copi": 349, "actor_network_param": 349, "value_network_param": 349, "_loss_valu": 349, "pred_val": 349, "target_value_network_param": 349, "glue": 349, "_forward": 349, "ndimens": 349, "remaind": 349, "focu": [349, 350, 351, 354, 355, 356], "env_librari": 349, "env_task": 349, "env_arg": [349, 350], "friendli": 349, "torchr": 349, "rescal": 349, "presum": 349, "make_transformed_env": 349, "reward_sc": 349, "marker": 349, "env_per_collector": 349, "transform_state_dict": 349, "make_t_env": 349, "cheat": 349, "10m": 349, "cautiou": 349, "magnitud": 349, "thousand": [349, 352], "get_env_stat": 349, "proof_env": 349, "5000": [349, 350, 351, 358], "recal": [349, 351, 364], "ddpgmlpactor": 349, "ddpgmlpqnet": 349, "materi": 349, "ornsteinuhlenbeckprocesswrapp": [349, 354], "make_ddpg_actor": 349, "q_net": 349, "tight": 349, "decoupl": [349, 355], "10_000": [349, 351], "traj_len": [349, 352], "make_record": 349, "recorder_obj": 349, "flavor": 349, "circular": 349, "buffer_s": [349, 350], "random_crop_len": 349, "prb": 349, "buffer_scratch_dir": 349, "temporari": 349, "25": [349, 350, 351, 362], "dataflow": 349, "ceil_div": 349, "utd": [349, 352], "update_to_data": 349, "realiz": 349, "_must_": 349, "001": [349, 362], "outdat": 349, "trick": [349, 350], "despit": 349, "adam": [349, 350, 351, 352, 355, 358, 361, 362], "optimizer_actor": 349, "lr": [349, 350, 351, 352, 358, 361, 362], "weight_decai": [349, 350], "optimizer_valu": 349, "total_collection_step": 349, "pretti": [349, 353, 357, 364], "rewards_ev": 349, "collected_fram": 349, "r0": 349, "numel": [349, 351, 352, 358, 363, 364], "current_fram": 349, "sampled_tensordict": 349, "gn1": 349, "clip_grad_norm_": [349, 351, 361, 362], "gn2": 349, "gn": [349, 362], "td_record": 349, "rn": 349, "set_descript": [349, 351, 352, 361, 362], "2f": 349, "traceback": [349, 364, 367], "1126": 349, "1532": [349, 364, 367], "_wrapped_call_impl": [349, 364, 367], "_call_impl": [349, 364, 367], "1582": 349, "forward_cal": [349, 364, 367], "_contextlib": [349, 364, 367], "126": [349, 362, 364, 367], "decorate_context": [349, 364, 367], "364": [349, 362], "342": [349, 362], "1185": 349, "new_func": 349, "_self": [349, 367], "727": 349, "_to_modul": 349, "413": [349, 362], "__dict__": 349, "_modul": 349, "plot": [349, 351, 352, 361, 362], "mention": [349, 352, 364, 367], "matplotlib": [349, 351, 352, 361, 362, 364, 367], "pyplot": [349, 351, 352, 361, 362, 364, 367], "plt": [349, 351, 352, 361, 362, 364, 367], "zip": [349, 359], "legend": 349, "xlabel": [349, 352, 361, 362], "ylabel": [349, 361], "tight_layout": 349, "concret": [349, 351], "takeawai": [349, 350], "distpatch": 349, "jupyt": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "ipynb": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367], "sphinx": [349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367], "customis": [350, 361], "road": 350, "aspect": [350, 355], "highest": [350, 354], "prerequisit": [350, 352], "lookup": 350, "amort": [350, 351], "cart": 350, "pole": 350, "un": 350, "actuat": 350, "frictionless": 350, "duelingcnndqnet": 350, "egreedymodul": [350, 352, 354, 358], "is_notebook": 350, "shell": 350, "get_ipython": 350, "__class__": 350, "zmqinteractiveshel": 350, "qtconsol": 350, "terminalinteractiveshel": 350, "ipython": [350, 361, 362], "nameerror": 350, "umbrella": 350, "misplac": 350, "misus": 350, "orchestr": [350, 355, 357], "five": 350, "64x64": 350, "motion": [350, 362], "obs_norm_sd": 350, "simpler": [350, 353], "get_norm_stat": 350, "test_env": 350, "make_model": 350, "dummy_env": 350, "init_bia": 350, "exploration_modul": [350, 352, 354, 358], "eps_greedy_v": 350, "eps_greedy_val_env": 350, "actor_explor": 350, "get_replay_buff": 350, "n_optim": [350, 355, 356], "themselv": 350, "parametriz": 350, "simplic": [350, 351, 356, 363, 364], "get_collector": 350, "cl": 350, "data_collector": 350, "bunch": 350, "power": 350, "ubiquit": [350, 353], "get_loss_modul": 350, "target_updat": 350, "995": [350, 362], "variat": 350, "2e": [350, 362], "wd": 350, "upd": 350, "harder": [350, 366], "5_000": 350, "500000": 350, "100000": 350, "005": 350, "mandatori": [350, 351, 361, 362], "fairer": 350, "budget": 350, "dqn_exp_": 350, "uuid1": [350, 367], "9895": 350, "0737": 350, "registr": 350, "cumbersom": 350, "buffer_hook": 350, "weight_updat": 350, "aliv": 350, "total_reward": 350, "07": [350, 352, 361, 362], "27it": [350, 362], "3688": [350, 362], "9259": 350, "68it": 350, "96": [350, 362, 363], "34it": 350, "3475": 350, "03it": [350, 362], "3596": 350, "83it": [350, 362], "09": [350, 362], "53": [350, 362, 363, 364], "39it": 350, "3505": 350, "224": [350, 362], "74it": 350, "3415": 350, "60": [350, 351, 361, 362, 366], "60it": 350, "288": [350, 362], "69": [350, 362, 363], "12it": [350, 362], "88it": 350, "3869": 350, "352": [350, 362], "57": [350, 361, 362, 363], "71it": [350, 351, 362], "384": [350, 362], "55": [350, 362, 363], "82": [350, 362, 363, 364], "95it": [350, 351, 362], "416": [350, 362], "24it": [350, 362], "448": [350, 362], "32it": [350, 362], "3293": 350, "480": [350, 362, 363], "89": [350, 362, 363], "18it": [350, 362], "4295": [350, 362], "57it": 350, "3991": 350, "544": [350, 362], "13it": [350, 362], "576": [350, 362], "15it": [350, 362], "4173": 350, "608": [350, 362], "49": [350, 352, 362, 363], "44it": [350, 362], "4021": 350, "640": 350, "58it": [350, 351, 362], "3778": 350, "672": 350, "47": [350, 362, 363], "91": [350, 362], "704": 350, "90": [350, 351, 361, 362], "16it": [350, 351, 362], "736": 350, "768": 350, "29it": [350, 362], "800": 350, "85it": 350, "3718": 350, "832": 350, "10it": [350, 362], "864": 350, "26it": [350, 352, 362], "896": 350, "3748": 350, "928": 350, "960": 350, "992": [350, 362], "92": [350, 362, 363], "46it": 350, "1056": 350, "1088": 350, "84it": 350, "1120": 350, "93": [350, 362, 363, 364], "77it": 350, "1152": 350, "1184": [350, 367], "78it": 350, "1216": 350, "93it": [350, 362], "1248": 350, "53it": [350, 362], "1280": 350, "72it": 350, "05it": [350, 362], "1344": 350, "79it": [350, 362], "1376": 350, "56it": 350, "1408": 350, "1440": 350, "1472": 350, "70it": 350, "1504": 350, "1536": 350, "98it": [350, 362], "1568": 350, "1600": 350, "19it": [350, 362], "1632": 350, "22it": [350, 362], "99it": 350, "1696": 350, "69it": 350, "1728": 350, "76it": 350, "1760": 350, "07it": 350, "1792": 350, "86it": [350, 362], "1824": 350, "1856": 350, "1888": 350, "1920": 350, "1952": 350, "06it": [350, 362], "1984": 350, "97it": 350, "2016": 350, "4082": [350, 362], "2048": [350, 363], "2080": 350, "2112": [350, 362], "2144": 350, "2176": 350, "90it": [350, 352, 362], "2208": 350, "11it": [350, 362], "2240": 350, "35it": 350, "2272": 350, "87it": [350, 362], "2336": 350, "91it": [350, 351, 362], "2368": 350, "89it": 350, "2400": 350, "2432": 350, "64it": 350, "2464": 350, "2496": 350, "2528": [350, 362], "2560": 350, "52": [350, 362, 363], "31it": [350, 362], "2624": 350, "2656": [350, 362], "55it": 350, "54": [350, 362, 363], "2688": 350, "2720": [350, 362], "43it": [350, 362], "2752": 350, "41it": 350, "56": [350, 352, 362, 363], "2784": 350, "75it": [350, 351, 362], "2816": 350, "28it": [350, 362], "2848": 350, "59it": [350, 362], "58": [350, 362, 363], "2880": 350, "48it": 350, "2912": 350, "81it": [350, 362], "2944": [350, 362], "82it": 350, "2976": [350, 362], "62it": 350, "61": [350, 362, 363], "3040": 350, "3072": 350, "08it": [350, 362], "62": [350, 362, 363], "3104": 350, "63": [350, 361, 362, 363], "3136": 350, "3168": 350, "3200": 350, "65": [350, 352, 362, 363, 364], "3232": [350, 362], "8462": 350, "3264": 350, "66": [350, 362, 364], "3296": 350, "3808": 350, "67": [350, 360, 362, 363], "3328": 350, "3360": 350, "68": [350, 362, 363], "3392": 350, "3424": 350, "38it": [350, 362], "3456": [350, 362], "70": [350, 351, 361, 362, 363], "3488": 350, "63it": [350, 362], "3520": 350, "71": [350, 362], "3552": 350, "72": [350, 362, 363], "3584": 350, "01it": [350, 362], "3616": 350, "73": [350, 362, 363, 364], "3648": 350, "74": [350, 362, 363], "3680": 350, "3712": 350, "3744": 350, "76": [350, 362], "3776": 350, "02it": 350, "77": [350, 362], "3840": 350, "3872": 350, "66it": [350, 351], "78": [350, 362, 363], "3904": 350, "79": [350, 362], "3936": 350, "14it": [350, 362], "3968": 350, "4000": [350, 351], "73it": 350, "4032": 350, "4064": 350, "4096": 350, "83": [350, 362, 363], "4128": [350, 362], "4160": 350, "4192": 350, "4224": 350, "4256": [350, 362], "4288": [350, 362], "52it": 350, "4320": 350, "4352": 350, "4384": 350, "61it": [350, 362], "4416": 350, "4448": 350, "4480": 350, "42it": 350, "4512": 350, "4544": 350, "97": [350, 362, 363, 364], "36it": [350, 362], "4576": 350, "00it": 350, "4608": 350, "23it": [350, 352, 362], "4640": 350, "4672": [350, 362], "4704": 350, "4736": 350, "4768": 350, "4800": [350, 362], "4832": 350, "50it": 350, "4864": 350, "4896": 350, "4928": 350, "96it": 350, "4960": 350, "4992": 350, "37it": [350, 362], "5024it": 350, "print_csv_files_in_fold": 350, "folder_path": 350, "csv_file": 350, "output_str": 350, "dirpath": 350, "endswith": 350, "strip": 350, "tmp": [350, 364], "tmpord9ja2m": 350, "dqn_exp_ed6e4092": 350, "fd92": 350, "11ee": 350, "ab79": 350, "0242ac110002": 350, "39912936091423035": 350, "39912933111190796": 350, "40816521644592285": 350, "42945271730422974": 350, "20083284378051758": 350, "21090883016586304": 350, "2923326790332794": 350, "1977071762084961": 350, "2615101635456085": 350, "18400731682777405": 350, "3052646517753601": 350, "442226380109787": 350, "4244447946548462": 350, "grad_norm_0": 350, "0510635375976562": 350, "22715163230896": 350, "207545280456543": 350, "2766470909118652": 350, "5300116539001465": 350, "464931011199951": 350, "0840580463409424": 350, "8360209465026855": 350, "730138301849365": 350, "10000000894069672": 350, "84615421295166": 350, "qvaluenetwork": 350, "worst": 350, "accuraci": 350, "fanci": [350, 356], "talk": 351, "repetit": [351, 353, 356], "six": 351, "sophist": [351, 361], "invent": 351, "overview": [351, 355, 361, 366], "theta_k": 351, "pi_": 351, "exceed": 351, "discourag": [351, 362], "indispens": 351, "analyz": 351, "lingua": 351, "franca": 351, "defaultdict": [351, 362], "3e": [351, 352, 361], "max_grad_norm": [351, 361], "sub_batch_s": 351, "num_epoch": [351, 361], "entropy_ep": [351, 361], "charact": 351, "inverteddoublependulum": 351, "transmit": 351, "stai": 351, "supplementari": [351, 367], "told": 351, "confid": [351, 361], "ran": 351, "f_": 351, "mu_": 351, "difficulti": [351, 367], "d_ob": 351, "d_action": 351, "policy_modul": [351, 361], "That": 351, "said": 351, "briefli": [351, 361], "refil": [351, 361], "conveni": [351, 361, 362, 364], "easiest": [351, 355, 361], "mathemat": [351, 361], "tradeoff": [351, 361], "advantage_modul": 351, "lr_schedul": [351, 362], "cosineannealinglr": [351, 362], "eval_str": 351, "tensordict_data": [351, 361], "data_view": [351, 361], "subdata": [351, 361], "cum_reward_str": 351, "4f": [351, 352, 362], "stepcount_str": 351, "param_group": 351, "lr_str": 351, "eval_rollout": 351, "nice": [351, 353, 356], "477": [351, 362], "119": [351, 362], "4140": 351, "1003": 351, "0003": [351, 362], "481": [351, 362], "1395": 351, "3000": 351, "485": [351, 362], "1588": [351, 362], "488": [351, 362], "1967": 351, "0002": [351, 362], "491": [351, 362], "2087": 351, "6000": 351, "492": [351, 362], "2226": 351, "7000": 351, "494": [351, 362], "49it": 351, "8000": 351, "483": [351, 362], "2462": 351, "9000": 351, "67it": 351, "2513": 351, "25it": [351, 352, 362], "2515": 351, "cap": [351, 364], "figsiz": [351, 362], "subplot": [351, 362, 367], "titl": [351, 352, 361, 362], "bit": [351, 352, 353, 361, 364], "84x84": 352, "accessori": 352, "stamp": 352, "assist": 352, "emb": 352, "n_cell": 352, "customiz": 352, "wouldn": 352, "make_tensordict_prim": 352, "qval": 352, "stoch_polici": 352, "opportun": 352, "uniniti": 352, "again": [352, 353, 354, 356, 361, 363, 364, 367], "redund": 352, "strongli": 352, "sake": [352, 363, 364], "20_000": [352, 362], "longest": 352, "npai": 352, "action_spread": 352, "0005": 352, "0006": [352, 362], "150": [352, 362], "1907": 352, "topic": [353, 354, 355], "straight": 353, "backtrack": 353, "encapsul": [353, 354, 355], "reset_with_act": 353, "1419": 353, "tp": 353, "stepped_data": 353, "tediou": 353, "spatial": 353, "useless": 353, "policyless": 353, "appreci": 353, "monitor": 353, "examin": 353, "tackl": 354, "delv": 354, "bypass": 354, "extractor": 354, "palliat": 354, "additivegaussianwrapp": 354, "had": [354, 356], "exploration_polici": 354, "greedili": 354, "innov": [354, 355], "rollout_explor": 354, "sole": 355, "tradit": 355, "supervis": [355, 356, 364, 367], "n_collect": 355, "get_next_batch": 355, "ddpg_loss": 355, "total_loss": 355, "prove": 355, "reliev": 355, "concern": 355, "accustom": 356, "surprisingli": 356, "fundament": 356, "augment": [356, 358, 364], "art": 356, "pseudo": [356, 362], "multirpocess": 356, "countless": 356, "yourself": [356, 361], "lightweight": 357, "portabl": 357, "everywher": 357, "hyperapamet": 357, "my_exp": 357, "log_scalar": 357, "elaps": 357, "my_scalar": 357, "saw": [357, 362, 364], "my_video": 357, "record_env": [357, 358], "uncom": 357, "lesson": 358, "voluntarili": 358, "refresh": [358, 361], "value_mlp": 358, "100_000": 358, "init_rand_step": 358, "training_loop": 358, "video_record": 358, "arbitrarili": 358, "total_count": 358, "total_episod": 358, "t0": 358, "t1": 358, "conclud": [358, 363], "tutorials_python": 359, "tutorials_jupyt": 359, "env1_obs_kei": 360, "observation_stand": 360, "env2_obs_kei": 360, "observation_walk": 360, "tdreset1": 360, "tdreset2": 360, "policy_common": 360, "policy_stand": 360, "policy_walk": 360, "But": 360, "env1_mak": 360, "env2_mak": 360, "_single_task": 360, "td_rollout": 360, "matteo": 361, "bettini": 361, "benchmarl": 361, "maddpg": 361, "lidar": 361, "sensor": 361, "collis": 361, "tie": 361, "mappo": 361, "ippo": 361, "phase": [361, 364], "mathbf": 361, "pi": [361, 362], "fed": [361, 364], "literatur": 361, "overcom": 361, "stationari": 361, "concurr": 361, "analys": 361, "gui": 361, "visualis": 361, "multiagentmlp": 361, "vmas_devic": 361, "6_000": 361, "team": [361, 366], "n_iter": 361, "minibatch_s": 361, "generalis": 361, "simd": 361, "parallelis": 361, "warp": 361, "todai": 361, "circl": 361, "surround": 361, "dot": [361, 362], "collid": 361, "drag": 361, "elast": 361, "acceler": 361, "penalis": 361, "num_vmas_env": 361, "scenario_nam": 361, "four": [361, 362], "environmnet": 361, "final_rew": 361, "agent_collis": 361, "stress": 361, "paramount": 361, "n_rollout_step": 361, "evolut": 361, "utilis": 361, "n_actions_per_ag": 361, "n_obs_per_ag": 361, "share_parameters_polici": 361, "policy_net": 361, "denot": 361, "carefulli": [361, 367], "grant": 361, "converg": 361, "share_parameters_crit": 361, "critic_net": 361, "fantast": 361, "minibatch": 361, "desc": 361, "episode_reward_mean": 361, "episode_reward_mean_list": 361, "get_item_shap": 361, "critic_network_param": 361, "target_critic_network_param": 361, "4579917788505554": 361, "39507877826690674": 361, "2842429876327515": 361, "5311583280563354": 361, "0912442207336426": 361, "4949307441711426": 361, "478776454925537": 361, "7761335372924805": 361, "738668441772461": 361, "9966132640838623": 361, "xvfb": 361, "pyvirtualdisplai": 361, "1400": [361, 362], "900": 361, "pil": 361, "rendering_callback": 361, "fromarrai": 361, "rgb_arrai": [361, 362], "gif": 361, "save_al": 361, "append_imag": 361, "profici": 361, "master": 361, "freeli": 362, "touch": 362, "undertaken": 362, "broader": 362, "wider": 362, "algebra": 362, "acquaint": 362, "avenu": 362, "_apply_to_composit": 362, "default_x": 362, "default_i": 362, "torqu": 362, "upward": 362, "angular": 362, "sin": 362, "rad": 362, "sec": 362, "gravit": 362, "angl": 362, "deleg": 362, "new_th": 362, "new_thdot": 362, "thdot": 362, "g_forc": 362, "max_torqu": 362, "angle_norm": 362, "max_spe": 362, "albeit": 362, "gen_param": 362, "high_th": 362, "high_thdot": 362, "low_th": 362, "low_thdot": 362, "trivial": 362, "shortcut": [362, 367], "irrelev": 362, "_make_spec": 362, "td_param": 362, "render_mod": 362, "render_fp": 362, "random_": 362, "_make_step": 362, "staticmethod": 362, "showcas": 362, "skeleton": 362, "_apply_transform": [362, 367], "_inv_apply_transform": [362, 367], "subset": [362, 363], "sine": 362, "cosin": 362, "sintransform": 362, "costransform": 362, "t_sin": 362, "t_co": 362, "cat_transform": 362, "simple_rollout": 362, "unexplor": 362, "init_td": 362, "traj_return": 362, "last_reward": 362, "is_ipython": 362, "inlin": 362, "get_backend": 362, "ion": 362, "gcf": 362, "clear_output": 362, "625": 362, "0748": 362, "519": 362, "47it": 362, "0499": 362, "4472": 362, "073": 362, "0685": 362, "0408": 362, "552": 362, "5154": 362, "9086": 362, "9385": 362, "155": 362, "2568": 362, "4981": 362, "223": 362, "8929": 362, "4491": 362, "581": 362, "09it": 362, "3233": 362, "0664": 362, "596": 362, "1021": 362, "5263": 362, "9579": 362, "5807": 362, "8075": 362, "212": [362, 364], "2009": 362, "5525": 362, "914": 362, "2894": 362, "0115": 362, "20it": 362, "0977": 362, "1845": 362, "21it": 362, "1830": 362, "4858": 362, "233": 362, "2863": 362, "0297": 362, "464": 362, "4617": 362, "5997": 362, "904": 362, "1647": 362, "0777": 362, "901": 362, "4709": 362, "6813": 362, "8317": 362, "3221": 362, "5554": 362, "276": 362, "3353": 362, "701": 362, "8570": 362, "6656": 362, "463": 362, "7779": 362, "6911": 362, "875": 362, "17it": 362, "0796": 362, "7082": 362, "308": 362, "0421": 362, "1496": 362, "5037": 362, "1755": 362, "5029": 362, "9454": 362, "665": 362, "9330": 362, "2118": 362, "444": 362, "0995": 362, "6294": 362, "3146": 362, "2909": 362, "461": 362, "9720": 362, "1298": 362, "9923": 362, "0345": 362, "3438": 362, "6953": 362, "5233": 362, "411": 362, "8011": 362, "5329": 362, "2677": 362, "6969": 362, "7010": 362, "376": 362, "9352": 362, "7707": 362, "6178": 362, "5646": 362, "348": 362, "7304": 362, "9407": 362, "942": 362, "3882": 362, "7604": 362, "30it": 362, "3507": 362, "8928": 362, "258": 362, "6978": 362, "4641": 362, "549": 362, "6047": 362, "5005": 362, "4136": 362, "2993": 362, "3222": 362, "4046": 362, "7314": 362, "275": 362, "6331": 362, "9318": 362, "961": 362, "8331": 362, "1604": 362, "4099": 362, "4761": 362, "125": 362, "4262": 362, "6363": 362, "382": 362, "3593": 362, "7377": 362, "2847": 362, "3443": 362, "867": 362, "3592": 362, "4760": 362, "441": 362, "9950": 362, "8021": 362, "3528": 362, "1214": 362, "708": 362, "4023": 362, "3583": 362, "041": 362, "3801": 362, "0310": 362, "120": 362, "4244": 362, "2039": 362, "4850": 362, "8748": 362, "706": 362, "4897": 362, "9210": 362, "8964": 362, "0832": 362, "3934": 362, "456": 362, "8971": 362, "2933": 362, "3377": 362, "6996": 362, "2274": 362, "8916": 362, "098": 362, "2660": 362, "9110": 362, "4503": 362, "6956": 362, "9172": 362, "4026": 362, "946": 362, "9229": 362, "5205": 362, "294": 362, "8872": 362, "6637": 362, "019": 362, "9281": 362, "2082": 362, "724": 362, "8561": 362, "6574": 362, "357": 362, "4138": 362, "5230": 362, "385": 362, "4065": 362, "5642": 362, "921": 362, "9786": 362, "4129": 362, "5831": 362, "266": 362, "7723": 362, "4152": 362, "0898": 362, "389": 362, "5155": 362, "5376": 362, "5616": 362, "4094": 362, "283": 362, "5333": 362, "4803": 362, "895": 362, "6566": 362, "2588": 362, "662": 362, "4732": 362, "7503": 362, "068": 362, "0714": 362, "3370": 362, "059": 362, "8612": 362, "1915": 362, "3855": 362, "0349": 362, "9644": 362, "4538": 362, "445": 362, "0392": 362, "4080": 362, "1648": 362, "9599": 362, "143": 362, "4284": 362, "5946": 362, "2590": 362, "9181": 362, "4621": 362, "9075": 362, "674": 362, "1772": 362, "9444": 362, "351": 362, "9391": 362, "5595": 362, "8673": 362, "6240": 362, "5919": 362, "1071": 362, "9127": 362, "251": 362, "9799": 362, "3131": 362, "9612": 362, "9705": 362, "8741": 362, "2230": 362, "0972": 362, "0337": 362, "0350": 362, "0654": 362, "102": 362, "2441": 362, "4596": 362, "362": 362, "103": 362, "4362": 362, "171": 362, "104": 362, "4041": 362, "6907": 362, "105": 362, "4664": 362, "2760": 362, "0299": 362, "9712": 362, "349": 362, "107": 362, "3332": 362, "4479": 362, "772": 362, "108": 362, "4357": 362, "9591": 362, "543": 362, "109": 362, "6216": 362, "1353": 362, "692": 362, "110": [362, 364], "6261": 362, "7086": 362, "496": 362, "111": 362, "7758": 362, "9818": 362, "112": 362, "7772": 362, "5055": 362, "113": 362, "5840": 362, "3180": 362, "2083": 362, "115": 362, "5275": 362, "6873": 362, "116": 362, "4107": 362, "1624": 362, "117": 362, "6372": 362, "2571": 362, "4039": 362, "4428": 362, "4728": 362, "5628": 362, "6767": 362, "2466": 362, "522": 362, "121": [362, 367], "5873": 362, "5072": 362, "6548": 362, "3766": 362, "123": 362, "5134": 362, "1955": 362, "124": 362, "2481": 362, "0591": 362, "4500": 362, "3368": 362, "9708": 362, "7059": 362, "127": 362, "3031": 362, "2534": 362, "843": 362, "3327": 362, "6193": 362, "129": 362, "4831": 362, "1172": 362, "2593": 362, "4219": 362, "962": 362, "8380": 362, "899": 362, "132": [362, 364], "2721": 362, "9048": 362, "166": 362, "133": 362, "2419": 362, "5248": 362, "2139": 362, "4278": 362, "135": 362, "0690": 362, "5140": 362, "136": [362, 364], "1140": 362, "7402": 362, "137": 362, "5356": 362, "1636": 362, "138": 362, "0671": 362, "8798": 362, "139": 362, "8918": 362, "3298": 362, "307": 362, "140": 362, "1779": 362, "141": 362, "1771": 362, "3624": 362, "936": 362, "142": 362, "1683": 362, "4810": 362, "9373": 362, "4435": 362, "4396": 362, "8092": 362, "145": [362, 367], "2572": 362, "146": 362, "4212": 362, "0260": 362, "147": 362, "0939": 362, "6478": 362, "605": 362, "148": 362, "6606": 362, "7289": 362, "149": 362, "9300": 362, "7193": 362, "563": 362, "1166": 362, "8514": 362, "151": 362, "9108": 362, "0672": 362, "292": 362, "152": 362, "8591": 362, "3768": 362, "153": 362, "9976": 362, "154": 362, "0576": 362, "0067": 362, "935": 362, "4199": 362, "1722": 362, "156": 362, "8310": 362, "3466": 362, "157": 362, "8631": 362, "2492": 362, "158": 362, "8763": 362, "1277": 362, "159": 362, "5562": 362, "7446": 362, "1082": 362, "9830": 362, "161": 362, "0946": 362, "5229": 362, "162": 362, "4574": 362, "6900": 362, "163": [362, 363], "2229": 362, "0318": 362, "482": 362, "164": 362, "0543": 362, "0817": 362, "761": 362, "165": 362, "2809": 362, "5118": 362, "366": 362, "1142": 362, "5635": 362, "167": 362, "1949": 362, "2327": 362, "982": 362, "168": 362, "0967": 362, "0387": 362, "457": 362, "169": 362, "0782": 362, "2150": 362, "170": 362, "5222": 362, "3725": 362, "9288": 362, "9837": 362, "1416": 362, "1099": 362, "173": 362, "8620": 362, "8475": 362, "174": 362, "1807": 362, "4375": 362, "175": 362, "1148": 362, "0645": 362, "2751": 362, "8313": 362, "177": 362, "9286": 362, "9770": 362, "178": 362, "5735": 362, "2837": 362, "179": 362, "2926": 362, "9489": 362, "180": 362, "1507": 362, "181": [362, 364], "8724": 362, "3567": 362, "182": 362, "3574": 362, "6140": 362, "183": 362, "7895": 362, "2518": 362, "184": 362, "6146": 362, "185": 362, "8776": 362, "7358": 362, "186": 362, "3722": 362, "8428": 362, "7955": 362, "188": 362, "0092": 362, "7106": 362, "829": 362, "189": 362, "2264": 362, "6919": 362, "190": 362, "1438": 362, "1362": 362, "191": 362, "0618": 362, "8217": 362, "9420": 362, "6765": 362, "193": 362, "7745": 362, "0709": 362, "194": [362, 364], "9478": 362, "6867": 362, "195": 362, "6507": 362, "6225": 362, "196": 362, "2244": 362, "2195": 362, "197": 362, "5385": 362, "9263": 362, "198": 362, "1878": 362, "2374": 362, "8054": 362, "3504": 362, "557": 362, "0766": 362, "201": 362, "2011": 362, "8393": 362, "202": 362, "0803": 362, "7815": 362, "203": 362, "8363": 362, "2460": 362, "204": 362, "8643": 362, "2191": 362, "593": 362, "205": [362, 367], "0773": 362, "1343": 362, "206": 362, "8657": 362, "207": 362, "9304": 362, "7584": 362, "208": 362, "8752": 362, "2307": 362, "5250": 362, "4869": 362, "7837": 362, "5762": 362, "211": 362, "6661": 362, "8600": 362, "2502": 362, "1752": 362, "3075": 362, "8871": 362, "214": 362, "9406": 362, "8090": 362, "215": 362, "6291": 362, "8923": 362, "876": 362, "216": 362, "9504": 362, "21e": 362, "217": 362, "7431": 362, "7880": 362, "218": 362, "4463": 362, "5432": 362, "219": 362, "3793": 362, "3313": 362, "220": 362, "92it": 362, "8843": 362, "0369": 362, "065": 362, "221": 362, "4828": 362, "8391": 362, "222": 362, "6265": 362, "2913": 362, "947": 362, "5541": 362, "1252": 362, "7342": 362, "2396": 362, "225": 362, "5936": 362, "1924": 362, "226": 362, "9975": 362, "2045": 362, "227": 362, "8367": 362, "9540": 362, "228": 362, "7259": 362, "6743": 362, "229": 362, "4827": 362, "7528": 362, "230": 362, "7361": 362, "8756": 362, "231": 362, "7646": 362, "1116": 362, "232": 362, "5426": 362, "8385": 362, "5662": 362, "8585": 362, "234": 362, "8234": 362, "7930": 362, "235": 362, "2648": 362, "9309": 362, "236": 362, "6817": 362, "237": 362, "0943": 362, "1533": 362, "238": 362, "3045": 362, "0483": 362, "239": 362, "6415": 362, "0201": 362, "241": 362, "4437": 362, "4365": 362, "242": 362, "0358": 362, "4943": 362, "243": 362, "1272": 362, "5003": 362, "1180": 362, "2637": 362, "245": 362, "7197": 362, "0873": 362, "246": 362, "2917": 362, "247": 362, "0160": 362, "0738": 362, "248": 362, "3689": 362, "0120": 362, "249": 362, "5570": 362, "0475": 362, "250": 362, "4423": 362, "2220": 362, "6803": 362, "252": 362, "1465": 362, "7214": 362, "253": 362, "8801": 362, "7034": 362, "254": 362, "9136": 362, "4076": 362, "7589": 362, "5013": 362, "8150": 362, "2241": 362, "257": 362, "0753": 362, "8081": 362, "1951": 362, "8314": 362, "259": 362, "0038": 362, "260": 362, "0889": 362, "4616": 362, "261": [362, 367], "0655": 362, "262": 362, "8333": 362, "9476": 362, "263": 362, "7554": 362, "3798": 362, "264": 362, "3717": 362, "3947": 362, "529": 362, "265": 362, "3060": 362, "6495": 362, "7467": 362, "8889": 362, "267": 362, "8457": 362, "591": 362, "7137": 362, "0536": 362, "771": 362, "269": 362, "1651": 362, "388": 362, "270": 362, "8246": 362, "5709": 362, "281": 362, "271": 362, "7502": 362, "0521": 362, "032": 362, "272": 362, "5475": 362, "7253": 362, "273": 362, "2856": 362, "7130": 362, "274": 362, "2778": 362, "4122": 362, "8368": 362, "1841": 362, "9622": 362, "1603": 362, "003e": 362, "277": 362, "0247": 362, "346": 362, "278": 362, "2238": 362, "6418": 362, "279": 362, "0626": 362, "2538": 362, "280": 362, "0149": 362, "7380": 362, "2167": 362, "8911": 362, "282": 362, "8725": 362, "1983": 362, "8142": 362, "3709": 362, "284": 362, "4989": 362, "285": 362, "6464": 362, "6210": 362, "9726": 362, "0820": 362, "287": 362, "6975": 362, "9091": 362, "4926": 362, "4791": 362, "289": [362, 367], "0905": 362, "3500": 362, "290": 362, "2287": 362, "291": 362, "9918": 362, "5543": 362, "9245": 362, "6444": 362, "631": 362, "293": 362, "0448": 362, "4769": 362, "8566": 362, "7208": 362, "295": 362, "0966": 362, "296": 362, "5303": 362, "1537": 362, "023": 362, "297": 362, "2682": 362, "564": 362, "298": 362, "04it": 362, "4318": 362, "5063": 362, "299": 362, "7475": 362, "4190": 362, "8186": 362, "5077": 362, "301": 362, "1883": 362, "5291": 362, "472": 362, "302": 362, "3998": 362, "303": 362, "3622": 362, "0930": 362, "626": 362, "304": 362, "9500": 362, "5664": 362, "305": 362, "5697": 362, "3024": 362, "306": 362, "3117": 362, "0052": 362, "006": 362, "0981": 362, "9312": 362, "3873": 362, "309": 362, "0411": 362, "2650": 362, "1656": 362, "0228": 362, "004": 362, "311": 362, "1196": 362, "2478": 362, "312": 362, "7353": 362, "0812": 362, "313": 362, "3022": 362, "758": 362, "314": 362, "1406": 362, "4626": 362, "315": 362, "2156": 362, "851": 362, "316": 362, "1953": 362, "3774": 362, "317": 362, "6385": 362, "9917": 362, "318": 362, "2764": 362, "905": 362, "319": 362, "6391": 362, "9317": 362, "9748": 362, "2679": 362, "321": 362, "8495": 362, "5125": 362, "8177": 362, "6602": 362, "323": 362, "0704": 362, "5776": 362, "324": 362, "9833": [362, 366], "1339": 362, "402": 362, "325": 362, "1238": 362, "326": 362, "9299": 362, "0227": 362, "327": 362, "7727": 362, "1607": 362, "336": 362, "328": 362, "3958": 362, "3223": 362, "763": 362, "329": 362, "4742": 362, "1797": 362, "330": 362, "0144": 362, "0085": 362, "791": 362, "331": 362, "8284": 362, "0428": 362, "332": 362, "7365": 362, "333": 362, "4566": 362, "0781": 362, "086": 362, "334": 362, "3355": 362, "0230": 362, "335": 362, "9346": 362, "0423": 362, "076": 362, "3711": 362, "1335": 362, "6855": 362, "337": 362, "0304": 362, "0023": 362, "8459": 362, "338": 362, "9998": 362, "4399": 362, "339": 362, "2303": 362, "1346": 362, "340": 362, "2915": 362, "7116": 362, "341": 362, "5560": 362, "0487": 362, "5119": 362, "061": 362, "343": 362, "3305": 362, "3705": 362, "957": 362, "344": 362, "6068": 362, "345": 362, "5731": 362, "3897": 362, "0376": 362, "347": 362, "0434": 362, "012": 362, "1300": 362, "1215": 362, "0968": 362, "0885": 362, "350": 362, "1348": 362, "0073": 362, "5052": 362, "4184": 362, "2817": 362, "8887": 362, "353": 362, "4779": 362, "1009": 362, "354": 362, "0604": 362, "599": 362, "355": 362, "4486": 362, "1176": 362, "656": 362, "356": 362, "2436": 362, "0668": 362, "8849": 362, "0012": 362, "358": 362, "7511": 362, "8804": 362, "359": 362, "8870": 362, "6728": 362, "360": 362, "8841": 362, "5508": 362, "361": 362, "5242": 362, "0013": 362, "6185": 362, "363": 362, "1378": 362, "0204": 362, "0355": 362, "685": 362, "365": 362, "4884": 362, "0231": 362, "0014": 362, "6793": 362, "367": 362, "9834": 362, "863": 362, "368": 362, "6709": 362, "462": 362, "369": 362, "5199": 362, "9790": 362, "370": 362, "9401": 362, "7802": 362, "371": 362, "6723": 362, "372": 362, "2678": 362, "6201": 362, "373": 362, "2184": 362, "7385": 362, "374": 362, "6344": 362, "617": 362, "375": 362, "9945": 362, "0772": 362, "567": 362, "7576": 362, "0398": 362, "377": 362, "3396": 362, "0022": 362, "094": 362, "378": 362, "3073": 362, "4018": 362, "379": 362, "1869": 362, "380": 362, "0481": 362, "1117": 362, "381": 362, "6823": 362, "981": 362, "8305": 362, "0210": 362, "383": 362, "4908": 362, "0272": 362, "538": 362, "3267": 362, "0111": 362, "7965": 362, "1796": 362, "0039": 362, "5396": 362, "386": 362, "3757": 362, "0490": 362, "387": 362, "1394": 362, "4187": 362, "2986": 362, "7954": 362, "1274": 362, "0063": 362, "813": 362, "390": 362, "8706": 362, "0114": 362, "391": 362, "6922": 362, "2423": 362, "392": 362, "9115": 362, "2602": 362, "393": 362, "2449": 362, "0783": 362, "394": 362, "0631": 362, "0057": 362, "7444": 362, "395": 362, "3339": 362, "0167": 362, "396": 362, "4806": 362, "397": 362, "4171": 362, "067": 362, "398": 362, "2618": 362, "5809": 362, "399": 362, "0054": 362, "3364": 362, "8733": 362, "0184": 362, "401": 362, "9137": 362, "0113": 362, "025": 362, "0386": 362, "0625": 362, "403": 362, "1332": 362, "0582": 362, "7816": 362, "404": 362, "8341": 362, "0941": 362, "854": 362, "405": 362, "8615": 362, "588": 362, "406": 362, "3849": 362, "008": 362, "407": 362, "9395": 362, "0765": 362, "055": 362, "408": 362, "2685": 362, "2235": 362, "688": 362, "409": 362, "3052": 362, "4249": 362, "410": 362, "6806": 362, "6383": 362, "3721": 362, "9981": 362, "412": 362, "1862": 362, "822": 362, "9811": 362, "0171": 362, "013": 362, "414": 362, "0252": 362, "0049": 362, "6205": 362, "415": 362, "1108": 362, "4921": 362, "9142": 362, "8130": 362, "417": 362, "1725": 362, "0036": 362, "3196": 362, "418": 362, "7795": 362, "0242": 362, "799": 362, "419": 362, "7737": 362, "0138": 362, "420": 362, "1462": 362, "0053": 362, "421": 362, "9226": 362, "6139": 362, "422": 362, "9889": 362, "0403": 362, "423": 362, "6194": 362, "0032": 362, "3989": 362, "0104": 362, "425": 362, "9960": 362, "0009": 362, "6009": 362, "426": 362, "2697": 362, "0914": 362, "427": 362, "1114": 362, "428": 362, "9862": 362, "1932": 362, "429": 362, "0637": 362, "0623": 362, "082": 362, "430": 362, "9906": 362, "2031": 362, "431": 362, "9948": 362, "0895": 362, "432": 362, "1970": 362, "0256": 362, "4231": 362, "0449": 362, "644": 362, "434": 362, "1039": 362, "1973": 362, "435": 362, "4561": 362, "1225": 362, "436": 362, "0211": 362, "2125": 362, "437": 362, "3866": 362, "0050": 362, "7202": 362, "438": 362, "6388": 362, "0072": 362, "439": 362, "1187": 362, "0015": 362, "5116": 362, "440": 362, "0432": 362, "0025": 362, "7809": 362, "1925": 362, "0103": 362, "442": 362, "9570": 362, "33it": 362, "0871": 362, "5601": 362, "0165": 362, "0047": 362, "6061": 362, "2746": 362, "0027": 362, "7887": 362, "446": 362, "1835": 362, "0035": 362, "855": 362, "447": 362, "8420": 362, "548": 362, "2653": 362, "0126": 362, "9736": 362, "449": 362, "0594": 362, "0119": 362, "6196": 362, "450": 362, "4509": 362, "0373": 362, "451": 362, "0620": 362, "452": 362, "6898": 362, "3235": 362, "687": 362, "453": 362, "5879": 362, "8406": 362, "0694": 362, "455": 362, "8259": 362, "0235": 362, "8500": 362, "0024": 362, "4054": 362, "2027": 362, "0894": 362, "5966": 362, "460": 362, "6942": 362, "0016": 362, "4254": 362, "6703": 362, "0145": 362, "8124": 362, "0218": 362, "9196": 362, "0188": 362, "8986": 362, "0884": 362, "0084": 362, "5624": 362, "465": 362, "8862": 362, "5384": 362, "466": 362, "5837": 362, "467": 362, "8954": 362, "0101": 362, "6751": 362, "468": 362, "8063": 362, "0122": 362, "9635": 362, "469": 362, "0692": 362, "4216": 362, "470": 362, "1227": 362, "0586": 362, "162e": 362, "471": 362, "9690": 362, "4166": 362, "6324": 362, "473": 362, "0778": 362, "474": 362, "8548": 362, "0017": 362, "4408": 362, "475": 362, "8125": 362, "1515": 362, "476": 362, "2733": 362, "0044": 362, "2836": 362, "7497": 362, "7681": 362, "478": 362, "8547": 362, "0105": 362, "7212": 362, "479": 362, "9848": 362, "0019": 362, "6498": 362, "1987": 362, "0011": 362, "5473": 362, "8991": 362, "6091": 362, "9189": 362, "5771": 362, "6781": 362, "7542": 362, "484": 362, "5959": 362, "0064": 362, "2547": 362, "486": 362, "0636": 362, "547": 362, "487": 362, "0065": 362, "1694": 362, "0083": 362, "5759": 362, "489": 362, "0493": 362, "0021": 362, "7805": 362, "490": 362, "0950": 362, "497": 362, "9717": 362, "3672": 362, "0207": 362, "493": 362, "8266": 362, "5365": 362, "2623": 362, "5078": 362, "495": 362, "4545": 362, "09636": 362, "8754": 362, "0010": 362, "498": 362, "0031": 362, "8269": 362, "499": 362, "6642": 362, "2284": 362, "501": 362, "9130": 362, "0008": 362, "502": 362, "503": 362, "7624": 362, "0056": 362, "3858": 362, "504": 362, "0890": 362, "0042": 362, "505": 362, "7505": 362, "2157": 362, "506": 362, "8394": 362, "3413": 362, "507": 362, "9609": 362, "0041": 362, "6905": 362, "508": 362, "8467": 362, "4409": 362, "509": 362, "510": 362, "8128": 362, "3559": 362, "511": 362, "1479": 362, "0264": 362, "1589": 362, "566": 362, "513": 362, "2756": 362, "0046": 362, "5266": 362, "514": 362, "9873": 362, "0112": 362, "9314": 362, "515": 362, "3791": 362, "0721": 362, "516": 362, "4580": 362, "0758": 362, "6114": 362, "517": 362, "2431": 362, "518": 362, "1958": 362, "5553": 362, "8924": 362, "0097": 362, "520": 362, "3737": 362, "0234": 362, "521": 362, "9125": 362, "4623": 362, "3230": 362, "0589": 362, "3784": 362, "523": 362, "9482": 362, "0051": 362, "524": 362, "1979": 362, "0045": 362, "6401": 362, "525": 362, "0048": 362, "6255": 362, "526": 362, "6084": 362, "3477": 362, "1475": 362, "0209": 362, "528": 362, "7611": 362, "1040": 362, "0099": 362, "0173": 362, "643": 362, "530": 362, "8189": 362, "4358": 362, "531": 362, "9897": 362, "532": 362, "1548": 362, "9751": 362, "533": 362, "6362": 362, "7495": 362, "534": 362, "1749": 362, "9513": 362, "535": 362, "7708": 362, "0371": 362, "536": 362, "2649": 362, "0437": 362, "537": 362, "5491": 362, "0276": 362, "6426": 362, "7294": 362, "078e": 362, "539": 362, "9928": 362, "540": 362, "7937": 362, "0124": 362, "9664": 362, "541": 362, "3342": 362, "542": 362, "2046": 362, "5496": 362, "0956": 362, "0059": 362, "545": 362, "9028": 362, "5843": 362, "546": 362, "0674": 362, "0178": 362, "797": 362, "2815": 362, "0599": 362, "1587": 362, "9276": 362, "8228": 362, "6164": 362, "551": 362, "6850": 362, "9167": 362, "3092": 362, "0670": 362, "9177": 362, "553": 362, "1599": 362, "0043": 362, "554": 362, "6367": 362, "555": 362, "3657": 362, "556": 362, "6694": 362, "2622": 362, "0372": 362, "4841": 362, "558": 362, "2707": 362, "757": 362, "559": 362, "2267": 362, "5415": 362, "560": 362, "4556": 362, "0163": 362, "561": 362, "1839": 362, "0809": 362, "6262": 362, "562": 362, "0278": 362, "1112": 362, "6155": 362, "565": 362, "1427": 362, "3582": 362, "624": 362, "7870": 362, "9490": 362, "0439": 362, "8796": 362, "568": 362, "8026": 362, "612": 362, "569": 362, "3147": 362, "8486": 362, "570": 362, "7917": 362, "0129": 362, "571": 362, "9553": 362, "0020": 362, "6871": 362, "572": 362, "3132": 362, "0159": 362, "8646": 362, "573": 362, "5320": 362, "0269": 362, "574": 362, "2955": 362, "0245": 362, "575": 362, "3347": 362, "0179": 362, "9718": 362, "1629": 362, "804": 362, "577": 362, "4164": 362, "0070": 362, "4335": 362, "578": 362, "579": 362, "3049": 362, "9063": 362, "580": 362, "8785": 362, "3295": 362, "5184": 362, "0546": 362, "582": 362, "4589": 362, "583": 362, "4697": 362, "2476": 362, "584": 362, "2397": 362, "585": 362, "4953": 362, "1775": 362, "586": 362, "2258": 362, "0110": 362, "7671": 362, "587": 362, "3981": 362, "8590": 362, "0007": 362, "589": 362, "9820": 362, "4221": 362, "590": 362, "1293": 362, "0116": 362, "868": 362, "1675": 362, "5931": 362, "592": 362, "2910": 362, "5219": 362, "2124": 362, "1730": 362, "594": 362, "2914": 362, "0206": 362, "595": 362, "0172": 362, "3982": 362, "0945": 362, "0121": 362, "4789": 362, "597": 362, "3805": 362, "4074": 362, "598": 362, "3310": 362, "5065": 362, "6028": 362, "6316": 362, "6724": 362, "6523": 362, "601": 362, "0136": 362, "4298": 362, "602": 362, "3524": 362, "2629": 362, "603": 362, "2635": 362, "7839": 362, "604": 362, "6041": 362, "8027": 362, "4170": 362, "4675": 362, "3153": 362, "9316": 362, "607": 362, "0649": 362, "9722": 362, "7989": 362, "0329": 362, "609": 362, "1976": 362, "6852": 362, "610": 362, "4793": 362, "1255": 362, "611": 362, "4581": 362, "0394": 362, "2047": 362, "0326": 362, "613": 362, "8967": 362, "8619": 362, "614": 362, "5906": 362, "6491": 362, "615": 362, "6634": 362, "4394": 362, "616": 362, "0624": 362, "0061": 362, "5676": 362, "3259": 362, "0131": 362, "7733": 362, "618": 362, "7515": 362, "0189": 362, "5575": 362, "619": 362, "9313": 362, "6286": 362, "620": 362, "4325": 362, "7832": 362, "621": 362, "1134": 362, "622": 362, "4572": 362, "0500": 362, "5838": 362, "623": 362, "3818": 362, "8623": 362, "1253": 362, "6622": 362, "subject": 362, "explain": 363, "semat": 363, "r3mtransform": 363, "env_transform": [363, 367], "s3": 363, "amazonaw": 363, "r3m_50": 363, "374m": 363, "5m": 363, "112mb": 363, "2m": 363, "129mb": 363, "9m": 363, "8mb": 363, "9mb": 363, "0m": 363, "3mb": 363, "4mb": 363, "106m": 363, "115m": 363, "128m": 363, "1mb": 363, "138m": 363, "7mb": 363, "148m": 363, "164m": 363, "2mb": 363, "179m": 363, "6mb": 363, "188m": 363, "195m": 363, "203m": 363, "5mb": 363, "212m": 363, "218m": 363, "228m": 363, "233m": 363, "244m": 363, "250m": 363, "0mb": 363, "262m": 363, "268m": 363, "277m": 363, "282m": 363, "293m": 363, "299m": 363, "311m": 363, "326m": 363, "332m": 363, "342m": 363, "348m": 363, "360m": 363, "wiser": 363, "_storag": [363, 364], "pull": 364, "batteri": 364, "filesystem": 364, "buffer_list": 364, "lowest": 364, "medium": 364, "buffer_lazytensor": 364, "buffer_lazymemmap": 364, "tempdir": 364, "tmpkrw0jrq2": 364, "fullest": 364, "mydata": 364, "background": 364, "question": [364, 366], "_i": 364, "artifici": 364, "0893e": 364, "hamper": 364, "she": 364, "pars": 364, "proport": 364, "hist": 364, "barcontain": 364, "artist": 364, "reappear": 364, "unfold": 364, "problemat": 364, "4th": 364, "794": 364, "1106": 364, "ret": 364, "_sampl": 364, "decorated_fun": 364, "1146": 364, "_transform": 364, "1541": [364, 367], "1051": 364, "2988": 364, "3113": 364, "rep": 364, "tensorlist": 364, "prioritizedslicesampl": 364, "tensordictmaxvaluewrit": 364, "4012": 364, "demo": 366, "icml": 366, "vmoen": 366, "fb": 366, "invest": 366, "platform": 366, "media": 366, "predominantli": 366, "tensordict1": 366, "tensordict2": 366, "tensordict_sampl": 366, "_sampler": 366, "_sum_tre": 366, "modulenotfounderror": 366, "28791671991348267": 366, "noopresetenv": [366, 367], "6400": 366, "backbone_modul": 366, "params_expand": 366, "exec_sequ": 366, "tensordict_exp": 366, "base_modul": 366, "0137": 366, "1524": 366, "0641": 366, "viewbackward0": 366, "asstridedbackward0": 366, "8728": 366, "1334": 366, "3494": 366, "6887": 366, "6402": 366, "_safetanhbackward": 366, "1132": 366, "1762": 366, "3430": 366, "2668": 366, "2918": 366, "6239": 366, "roughli": 366, "tensordicts_prealloc": 366, "tensordicts_stack": 366, "tensordict_rollout": [366, 367], "disclaim": 366, "concatmodul": 366, "loss_td": 366, "year": 366, "roadmap": 366, "compris": 366, "contributor": 366, "curiou": 366, "nascent": 366, "unsupervis": 367, "unifi": 367, "_build_env": 367, "amidar": 367, "assault": 367, "1945": 367, "deserv": 367, "__episode__": 367, "__trajectory__": 367, "void": 367, "reproduct": 367, "tensordict_tprim": 367, "2562": 367, "_rollout_stop_earli": 367, "2630": 367, "1224": 367, "err": 367, "1198": 367, "_call_modul": 367, "1141": 367, "1525": 367, "imshow": 367, "wrapper1": 367, "wrapper2": 367, "obviou": 367, "truth": 367, "env0": 367, "env_transformed_bi": 367, "stanc": 367, "transformeddistribut": 367, "base_dist": 367, "concat": 367, "mofidi": 367, "transformedenviron": 367, "moderet": 367, "computation": 367, "legitim": 367, "incom": 367, "amongst": 367, "has_cuda": 367, "wor": 367, "convention": 367, "markovian": 367, "constain": 367, "bar_": 367, "get_someth": 367, "aargh": 367, "foo_list": 367, "parallen": 367, "particularili": 367, "evolv": 367, "steadi": 367, "approx": 367, "_extra_st": 367, "observation_ssq": 367, "observation_sum": 367, "dispach": 367, "absor": 367, "649": 367, "3817": 367}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "OneHotDiscreteTensorSpec"], [33, 0, 1, "", "PairwiseDataset"], [34, 0, 1, "", "PrioritizedReplayBuffer"], [35, 0, 1, "", "PromptData"], [36, 0, 1, "", "PromptTensorDictTokenizer"], [37, 0, 1, "", "ReplayBuffer"], [38, 0, 1, "", "RewardData"], [39, 0, 1, "", "RolloutFromModel"], [40, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [41, 0, 1, "", "TensorDictReplayBuffer"], [42, 0, 1, "", "TensorDictTokenizer"], [43, 0, 1, "", "TensorSpec"], [44, 0, 1, "", "TokenizedDatasetLoader"], [45, 0, 1, "", "UnboundedContinuousTensorSpec"], [46, 0, 1, "", "UnboundedDiscreteTensorSpec"], [47, 0, 1, "", "check_no_exclusive_keys"], [48, 0, 1, "", "consolidate_spec"], [49, 0, 1, "", "contains_lazy_spec"], [50, 0, 1, "", "create_infinite_iterator"], [60, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "flatten"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "reshape"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "unflatten"], [23, 1, 1, "", "view"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[33, 3, 1, "", "batch_size"], [33, 3, 1, "", "device"], [33, 1, 1, "", "from_dataset"], [33, 1, 1, "", "from_tensordict"], [33, 1, 1, "", "get"], [33, 1, 1, "", "load_memmap"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "memmap"], [33, 1, 1, "", "memmap_"], [33, 1, 1, "", "memmap_like"], [33, 3, 1, "", "names"], [33, 1, 1, "", "set"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to_tensordict"], [33, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "dumps"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "loads"], [34, 1, 1, "", "sample"], [34, 3, 1, "", "sampler"], [34, 1, 1, "", "set_sampler"], [34, 1, 1, "", "set_storage"], [34, 1, 1, "", "set_writer"], [34, 3, 1, "", "storage"], [34, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[35, 3, 1, "", "batch_size"], [35, 3, 1, "", "device"], [35, 1, 1, "", "from_dataset"], [35, 1, 1, "", "from_tensordict"], [35, 1, 1, "", "get"], [35, 1, 1, "", "load_memmap"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "memmap"], [35, 1, 1, "", "memmap_"], [35, 1, 1, "", "memmap_like"], [35, 3, 1, "", "names"], [35, 1, 1, "", "set"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to_tensordict"], [35, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 3, 1, "", "sampler"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"], [37, 3, 1, "", "storage"], [37, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_memmap"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[39, 1, 1, "", "create_rollout_td"], [39, 1, 1, "", "generate"], [39, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 3, 1, "", "sampler"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"], [40, 3, 1, "", "storage"], [40, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[44, 1, 1, "", "dataset_to_tensordict"], [44, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "AtariDQNExperienceReplay"], [52, 0, 1, "", "BaseDatasetExperienceReplay"], [53, 0, 1, "", "D4RLExperienceReplay"], [54, 0, 1, "", "GenDGRLExperienceReplay"], [55, 0, 1, "", "MinariExperienceReplay"], [56, 0, 1, "", "OpenMLExperienceReplay"], [57, 0, 1, "", "OpenXExperienceReplay"], [58, 0, 1, "", "RobosetExperienceReplay"], [59, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 3, 1, "", "data_path"], [51, 3, 1, "", "data_path_root"], [51, 1, 1, "", "delete"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "preprocess"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 3, 1, "", "data_path"], [52, 3, 1, "", "data_path_root"], [52, 1, 1, "", "delete"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "preprocess"], [52, 1, 1, "", "sample"], [52, 3, 1, "", "sampler"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 3, 1, "", "storage"], [52, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 3, 1, "", "data_path"], [53, 3, 1, "", "data_path_root"], [53, 1, 1, "", "delete"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "preprocess"], [53, 1, 1, "", "sample"], [53, 3, 1, "", "sampler"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 3, 1, "", "storage"], [53, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[61, 0, 1, "", "ImmutableDatasetWriter"], [62, 0, 1, "", "LazyMemmapStorage"], [63, 0, 1, "", "LazyTensorStorage"], [64, 0, 1, "", "ListStorage"], [65, 0, 1, "", "PrioritizedSampler"], [66, 0, 1, "", "PrioritizedSliceSampler"], [67, 0, 1, "", "RandomSampler"], [68, 0, 1, "", "ReplayBufferEnsemble"], [69, 0, 1, "", "RoundRobinWriter"], [70, 0, 1, "", "Sampler"], [71, 0, 1, "", "SamplerEnsemble"], [72, 0, 1, "", "SamplerWithoutReplacement"], [73, 0, 1, "", "SliceSampler"], [74, 0, 1, "", "SliceSamplerWithoutReplacement"], [75, 0, 1, "", "Storage"], [76, 0, 1, "", "StorageEnsemble"], [77, 0, 1, "", "TensorDictMaxValueWriter"], [78, 0, 1, "", "TensorDictRoundRobinWriter"], [79, 0, 1, "", "TensorStorage"], [80, 0, 1, "", "Writer"], [81, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[61, 1, 1, "", "add"], [61, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[66, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[69, 1, 1, "", "add"], [69, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[79, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.envs": [[82, 2, 1, "", "BraxEnv"], [83, 2, 1, "", "BraxWrapper"], [84, 2, 1, "", "DMControlEnv"], [85, 2, 1, "", "DMControlWrapper"], [86, 0, 1, "", "EnvBase"], [87, 0, 1, "", "EnvCreator"], [88, 0, 1, "", "EnvMetaData"], [89, 2, 1, "", "GymEnv"], [90, 0, 1, "", "GymLikeEnv"], [91, 2, 1, "", "GymWrapper"], [92, 2, 1, "", "HabitatEnv"], [93, 2, 1, "", "IsaacGymEnv"], [94, 2, 1, "", "IsaacGymWrapper"], [95, 2, 1, "", "JumanjiEnv"], [96, 2, 1, "", "JumanjiWrapper"], [97, 2, 1, "", "MOGymEnv"], [98, 2, 1, "", "MOGymWrapper"], [99, 2, 1, "", "MarlGroupMapType"], [100, 2, 1, "", "MeltingpotEnv"], [101, 2, 1, "", "MeltingpotWrapper"], [102, 2, 1, "", "ModelBasedEnvBase"], [103, 2, 1, "", "MultiThreadedEnv"], [104, 2, 1, "", "MultiThreadedEnvWrapper"], [105, 2, 1, "", "OpenMLEnv"], [106, 0, 1, "", "ParallelEnv"], [107, 2, 1, "", "PettingZooEnv"], [108, 2, 1, "", "PettingZooWrapper"], [109, 2, 1, "", "RoboHiveEnv"], [110, 2, 1, "", "SMACv2Env"], [111, 2, 1, "", "SMACv2Wrapper"], [112, 0, 1, "", "SerialEnv"], [113, 2, 1, "", "VmasEnv"], [114, 2, 1, "", "VmasWrapper"], [115, 2, 1, "", "check_marl_grouping"], [116, 2, 1, "", "gym_backend"], [102, 1, 1, "", "rand_step"], [102, 1, 1, "", "reset"], [102, 1, 1, "", "rollout"], [118, 2, 1, "", "set_gym_backend"], [102, 1, 1, "", "set_seed"], [102, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[86, 3, 1, "", "action_key"], [86, 3, 1, "", "action_keys"], [86, 3, 1, "", "action_spec"], [86, 1, 1, "", "add_module"], [86, 1, 1, "", "add_truncated_keys"], [86, 1, 1, "", "append_transform"], [86, 1, 1, "", "apply"], [86, 3, 1, "", "batch_locked"], [86, 3, 1, "", "batch_size"], [86, 1, 1, "", "bfloat16"], [86, 1, 1, "", "buffers"], [86, 1, 1, "", "children"], [86, 1, 1, "", "compile"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 3, 1, "", "done_key"], [86, 3, 1, "", "done_keys"], [86, 3, 1, "", "done_keys_groups"], [86, 3, 1, "", "done_spec"], [86, 1, 1, "", "double"], [86, 1, 1, "", "empty_cache"], [86, 1, 1, "", "eval"], [86, 1, 1, "", "extra_repr"], [86, 1, 1, "", "fake_tensordict"], [86, 1, 1, "", "float"], [86, 1, 1, "", "forward"], [86, 3, 1, "", "full_action_spec"], [86, 3, 1, "", "full_done_spec"], [86, 3, 1, "", "full_reward_spec"], [86, 3, 1, "", "full_state_spec"], [86, 1, 1, "", "get_buffer"], [86, 1, 1, "", "get_extra_state"], [86, 1, 1, "", "get_parameter"], [86, 1, 1, "", "get_submodule"], [86, 1, 1, "", "half"], [86, 3, 1, "", "input_spec"], [86, 1, 1, "", "ipu"], [86, 1, 1, "", "load_state_dict"], [86, 1, 1, "", "maybe_reset"], [86, 1, 1, "", "modules"], [86, 1, 1, "", "named_buffers"], [86, 1, 1, "", "named_children"], [86, 1, 1, "", "named_modules"], [86, 1, 1, "", "named_parameters"], [86, 3, 1, "", "observation_spec"], [86, 3, 1, "", "output_spec"], [86, 1, 1, "", "parameters"], [86, 1, 1, "", "rand_action"], [86, 1, 1, "id0", "rand_step"], [86, 1, 1, "", "register_backward_hook"], [86, 1, 1, "", "register_buffer"], [86, 1, 1, "", "register_forward_hook"], [86, 1, 1, "", "register_forward_pre_hook"], [86, 1, 1, "", "register_full_backward_hook"], [86, 1, 1, "", "register_full_backward_pre_hook"], [86, 1, 1, "", "register_gym"], [86, 1, 1, "", "register_load_state_dict_post_hook"], [86, 1, 1, "", "register_module"], [86, 1, 1, "", "register_parameter"], [86, 1, 1, "", "register_state_dict_pre_hook"], [86, 1, 1, "", "requires_grad_"], [86, 1, 1, "id1", "reset"], [86, 3, 1, "", "reset_keys"], [86, 3, 1, "", "reward_key"], [86, 3, 1, "", "reward_keys"], [86, 3, 1, "", "reward_spec"], [86, 1, 1, "id2", "rollout"], [86, 1, 1, "", "set_extra_state"], [86, 1, 1, "id3", "set_seed"], [86, 3, 1, "", "shape"], [86, 1, 1, "", "share_memory"], [86, 3, 1, "", "specs"], [86, 1, 1, "", "state_dict"], [86, 3, 1, "", "state_spec"], [86, 1, 1, "id4", "step"], [86, 1, 1, "", "step_and_maybe_reset"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_empty"], [86, 1, 1, "", "train"], [86, 1, 1, "", "type"], [86, 1, 1, "", "xpu"], [86, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[90, 3, 1, "", "action_key"], [90, 3, 1, "", "action_keys"], [90, 3, 1, "", "action_spec"], [90, 1, 1, "", "add_module"], [90, 1, 1, "", "add_truncated_keys"], [90, 1, 1, "", "append_transform"], [90, 1, 1, "", "apply"], [90, 1, 1, "", "auto_register_info_dict"], [90, 3, 1, "", "batch_locked"], [90, 3, 1, "", "batch_size"], [90, 1, 1, "", "bfloat16"], [90, 1, 1, "", "buffers"], [90, 1, 1, "", "children"], [90, 1, 1, "", "close"], [90, 1, 1, "", "compile"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 3, 1, "", "done_key"], [90, 3, 1, "", "done_keys"], [90, 3, 1, "", "done_keys_groups"], [90, 3, 1, "", "done_spec"], [90, 1, 1, "", "double"], [90, 1, 1, "", "empty_cache"], [90, 1, 1, "", "eval"], [90, 1, 1, "", "extra_repr"], [90, 1, 1, "", "fake_tensordict"], [90, 1, 1, "", "float"], [90, 1, 1, "", "forward"], [90, 3, 1, "", "full_action_spec"], [90, 3, 1, "", "full_done_spec"], [90, 3, 1, "", "full_reward_spec"], [90, 3, 1, "", "full_state_spec"], [90, 1, 1, "", "get_buffer"], [90, 1, 1, "", "get_extra_state"], [90, 1, 1, "", "get_parameter"], [90, 1, 1, "", "get_submodule"], [90, 1, 1, "", "half"], [90, 3, 1, "", "input_spec"], [90, 1, 1, "", "ipu"], [90, 1, 1, "", "load_state_dict"], [90, 1, 1, "", "maybe_reset"], [90, 1, 1, "", "modules"], [90, 1, 1, "", "named_buffers"], [90, 1, 1, "", "named_children"], [90, 1, 1, "", "named_modules"], [90, 1, 1, "", "named_parameters"], [90, 3, 1, "", "observation_spec"], [90, 3, 1, "", "output_spec"], [90, 1, 1, "", "parameters"], [90, 1, 1, "", "rand_action"], [90, 1, 1, "", "rand_step"], [90, 1, 1, "", "read_action"], [90, 1, 1, "", "read_done"], [90, 1, 1, "", "read_obs"], [90, 1, 1, "", "read_reward"], [90, 1, 1, "", "register_backward_hook"], [90, 1, 1, "", "register_buffer"], [90, 1, 1, "", "register_forward_hook"], [90, 1, 1, "", "register_forward_pre_hook"], [90, 1, 1, "", "register_full_backward_hook"], [90, 1, 1, "", "register_full_backward_pre_hook"], [90, 1, 1, "", "register_gym"], [90, 1, 1, "", "register_load_state_dict_post_hook"], [90, 1, 1, "", "register_module"], [90, 1, 1, "", "register_parameter"], [90, 1, 1, "", "register_state_dict_pre_hook"], [90, 1, 1, "", "requires_grad_"], [90, 1, 1, "", "reset"], [90, 3, 1, "", "reset_keys"], [90, 3, 1, "", "reward_key"], [90, 3, 1, "", "reward_keys"], [90, 3, 1, "", "reward_spec"], [90, 1, 1, "", "rollout"], [90, 1, 1, "", "set_extra_state"], [90, 1, 1, "", "set_info_dict_reader"], [90, 1, 1, "", "set_seed"], [90, 3, 1, "", "shape"], [90, 1, 1, "", "share_memory"], [90, 3, 1, "", "specs"], [90, 1, 1, "", "state_dict"], [90, 3, 1, "", "state_spec"], [90, 1, 1, "", "step"], [90, 1, 1, "", "step_and_maybe_reset"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_empty"], [90, 1, 1, "", "train"], [90, 1, 1, "", "type"], [90, 1, 1, "", "xpu"], [90, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[106, 3, 1, "", "action_key"], [106, 3, 1, "", "action_keys"], [106, 3, 1, "", "action_spec"], [106, 1, 1, "", "add_module"], [106, 1, 1, "", "add_truncated_keys"], [106, 1, 1, "", "append_transform"], [106, 1, 1, "", "apply"], [106, 3, 1, "", "batch_locked"], [106, 3, 1, "", "batch_size"], [106, 1, 1, "", "bfloat16"], [106, 1, 1, "", "buffers"], [106, 1, 1, "", "children"], [106, 1, 1, "", "compile"], [106, 1, 1, "", "cpu"], [106, 1, 1, "", "cuda"], [106, 3, 1, "", "done_key"], [106, 3, 1, "", "done_keys"], [106, 3, 1, "", "done_keys_groups"], [106, 3, 1, "", "done_spec"], [106, 1, 1, "", "double"], [106, 1, 1, "", "empty_cache"], [106, 1, 1, "", "eval"], [106, 1, 1, "", "extra_repr"], [106, 1, 1, "", "fake_tensordict"], [106, 1, 1, "", "float"], [106, 1, 1, "", "forward"], [106, 3, 1, "", "full_action_spec"], [106, 3, 1, "", "full_done_spec"], [106, 3, 1, "", "full_reward_spec"], [106, 3, 1, "", "full_state_spec"], [106, 1, 1, "", "get_buffer"], [106, 1, 1, "", "get_extra_state"], [106, 1, 1, "", "get_parameter"], [106, 1, 1, "", "get_submodule"], [106, 1, 1, "", "half"], [106, 3, 1, "", "input_spec"], [106, 1, 1, "", "ipu"], [106, 1, 1, "", "load_state_dict"], [106, 1, 1, "", "maybe_reset"], [106, 1, 1, "", "modules"], [106, 1, 1, "", "named_buffers"], [106, 1, 1, "", "named_children"], [106, 1, 1, "", "named_modules"], [106, 1, 1, "", "named_parameters"], [106, 3, 1, "", "observation_spec"], [106, 3, 1, "", "output_spec"], [106, 1, 1, "", "parameters"], [106, 1, 1, "", "rand_action"], [106, 1, 1, "", "rand_step"], [106, 1, 1, "", "register_backward_hook"], [106, 1, 1, "", "register_buffer"], [106, 1, 1, "", "register_forward_hook"], [106, 1, 1, "", "register_forward_pre_hook"], [106, 1, 1, "", "register_full_backward_hook"], [106, 1, 1, "", "register_full_backward_pre_hook"], [106, 1, 1, "", "register_gym"], [106, 1, 1, "", "register_load_state_dict_post_hook"], [106, 1, 1, "", "register_module"], [106, 1, 1, "", "register_parameter"], [106, 1, 1, "", "register_state_dict_pre_hook"], [106, 1, 1, "", "requires_grad_"], [106, 1, 1, "", "reset"], [106, 3, 1, "", "reset_keys"], [106, 3, 1, "", "reward_key"], [106, 3, 1, "", "reward_keys"], [106, 3, 1, "", "reward_spec"], [106, 1, 1, "", "rollout"], [106, 1, 1, "", "set_extra_state"], [106, 1, 1, "", "set_seed"], [106, 3, 1, "", "shape"], [106, 1, 1, "", "share_memory"], [106, 3, 1, "", "specs"], [106, 1, 1, "", "state_dict"], [106, 3, 1, "", "state_spec"], [106, 1, 1, "", "step"], [106, 1, 1, "", "step_and_maybe_reset"], [106, 1, 1, "", "to"], [106, 1, 1, "", "to_empty"], [106, 1, 1, "", "train"], [106, 1, 1, "", "type"], [106, 1, 1, "", "update_kwargs"], [106, 1, 1, "", "xpu"], [106, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[112, 3, 1, "", "action_key"], [112, 3, 1, "", "action_keys"], [112, 3, 1, "", "action_spec"], [112, 1, 1, "", "add_module"], [112, 1, 1, "", "add_truncated_keys"], [112, 1, 1, "", "append_transform"], [112, 1, 1, "", "apply"], [112, 3, 1, "", "batch_locked"], [112, 3, 1, "", "batch_size"], [112, 1, 1, "", "bfloat16"], [112, 1, 1, "", "buffers"], [112, 1, 1, "", "children"], [112, 1, 1, "", "compile"], [112, 1, 1, "", "cpu"], [112, 1, 1, "", "cuda"], [112, 3, 1, "", "done_key"], [112, 3, 1, "", "done_keys"], [112, 3, 1, "", "done_keys_groups"], [112, 3, 1, "", "done_spec"], [112, 1, 1, "", "double"], [112, 1, 1, "", "empty_cache"], [112, 1, 1, "", "eval"], [112, 1, 1, "", "extra_repr"], [112, 1, 1, "", "fake_tensordict"], [112, 1, 1, "", "float"], [112, 1, 1, "", "forward"], [112, 3, 1, "", "full_action_spec"], [112, 3, 1, "", "full_done_spec"], [112, 3, 1, "", "full_reward_spec"], [112, 3, 1, "", "full_state_spec"], [112, 1, 1, "", "get_buffer"], [112, 1, 1, "", "get_extra_state"], [112, 1, 1, "", "get_parameter"], [112, 1, 1, "", "get_submodule"], [112, 1, 1, "", "half"], [112, 3, 1, "", "input_spec"], [112, 1, 1, "", "ipu"], [112, 1, 1, "", "load_state_dict"], [112, 1, 1, "", "maybe_reset"], [112, 1, 1, "", "modules"], [112, 1, 1, "", "named_buffers"], [112, 1, 1, "", "named_children"], [112, 1, 1, "", "named_modules"], [112, 1, 1, "", "named_parameters"], [112, 3, 1, "", "observation_spec"], [112, 3, 1, "", "output_spec"], [112, 1, 1, "", "parameters"], [112, 1, 1, "", "rand_action"], [112, 1, 1, "", "rand_step"], [112, 1, 1, "", "register_backward_hook"], [112, 1, 1, "", "register_buffer"], [112, 1, 1, "", "register_forward_hook"], [112, 1, 1, "", "register_forward_pre_hook"], [112, 1, 1, "", "register_full_backward_hook"], [112, 1, 1, "", "register_full_backward_pre_hook"], [112, 1, 1, "", "register_gym"], [112, 1, 1, "", "register_load_state_dict_post_hook"], [112, 1, 1, "", "register_module"], [112, 1, 1, "", "register_parameter"], [112, 1, 1, "", "register_state_dict_pre_hook"], [112, 1, 1, "", "requires_grad_"], [112, 1, 1, "", "reset"], [112, 3, 1, "", "reset_keys"], [112, 3, 1, "", "reward_key"], [112, 3, 1, "", "reward_keys"], [112, 3, 1, "", "reward_spec"], [112, 1, 1, "", "rollout"], [112, 1, 1, "", "set_extra_state"], [112, 1, 1, "", "set_seed"], [112, 3, 1, "", "shape"], [112, 1, 1, "", "share_memory"], [112, 3, 1, "", "specs"], [112, 1, 1, "", "state_dict"], [112, 3, 1, "", "state_spec"], [112, 1, 1, "", "step"], [112, 1, 1, "", "step_and_maybe_reset"], [112, 1, 1, "", "to"], [112, 1, 1, "", "to_empty"], [112, 1, 1, "", "train"], [112, 1, 1, "", "type"], [112, 1, 1, "", "update_kwargs"], [112, 1, 1, "", "xpu"], [112, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[117, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[119, 0, 1, "", "ActionMask"], [120, 0, 1, "", "AutoResetEnv"], [121, 0, 1, "", "AutoResetTransform"], [122, 0, 1, "", "BatchSizeTransform"], [123, 0, 1, "", "BinarizeReward"], [124, 0, 1, "", "BurnInTransform"], [125, 0, 1, "", "CatFrames"], [126, 0, 1, "", "CatTensors"], [127, 0, 1, "", "CenterCrop"], [128, 0, 1, "", "ClipTransform"], [129, 0, 1, "", "Compose"], [130, 0, 1, "", "DTypeCastTransform"], [131, 0, 1, "", "DeviceCastTransform"], [132, 0, 1, "", "DiscreteActionProjection"], [133, 0, 1, "", "DoubleToFloat"], [134, 0, 1, "", "EndOfLifeTransform"], [135, 0, 1, "", "ExcludeTransform"], [136, 0, 1, "", "FiniteTensorDictCheck"], [137, 0, 1, "", "FlattenObservation"], [138, 0, 1, "", "FrameSkipTransform"], [139, 0, 1, "", "GrayScale"], [140, 0, 1, "", "InitTracker"], [141, 0, 1, "", "KLRewardTransform"], [142, 0, 1, "", "NoopResetEnv"], [143, 0, 1, "", "ObservationNorm"], [144, 0, 1, "", "ObservationTransform"], [145, 0, 1, "", "PermuteTransform"], [146, 0, 1, "", "PinMemoryTransform"], [147, 0, 1, "", "R3MTransform"], [148, 0, 1, "", "RandomCropTensorDict"], [149, 0, 1, "", "RemoveEmptySpecs"], [150, 0, 1, "", "RenameTransform"], [151, 0, 1, "", "Resize"], [152, 0, 1, "", "Reward2GoTransform"], [153, 0, 1, "", "RewardClipping"], [154, 0, 1, "", "RewardScaling"], [155, 0, 1, "", "RewardSum"], [156, 0, 1, "", "SelectTransform"], [157, 0, 1, "", "SignTransform"], [158, 0, 1, "", "SqueezeTransform"], [159, 0, 1, "", "StepCounter"], [160, 0, 1, "", "TargetReturn"], [161, 0, 1, "", "TensorDictPrimer"], [162, 0, 1, "", "TimeMaxPool"], [163, 0, 1, "", "ToTensorImage"], [164, 0, 1, "", "Transform"], [165, 0, 1, "", "TransformedEnv"], [166, 0, 1, "", "UnsqueezeTransform"], [167, 0, 1, "", "VC1Transform"], [168, 0, 1, "", "VIPRewardTransform"], [169, 0, 1, "", "VIPTransform"], [170, 0, 1, "", "VecGymEnvTransform"], [171, 0, 1, "", "VecNorm"], [172, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[119, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[120, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[121, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "transform_env_batch_size"], [122, 1, 1, "", "transform_input_spec"], [122, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[124, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[128, 1, 1, "", "transform_observation_spec"], [128, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[129, 1, 1, "", "append"], [129, 1, 1, "", "forward"], [129, 1, 1, "", "insert"], [129, 1, 1, "", "to"], [129, 1, 1, "", "transform_env_batch_size"], [129, 1, 1, "", "transform_env_device"], [129, 1, 1, "", "transform_input_spec"], [129, 1, 1, "", "transform_observation_spec"], [129, 1, 1, "", "transform_output_spec"], [129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_observation_spec"], [130, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "transform_done_spec"], [131, 1, 1, "", "transform_env_device"], [131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_observation_spec"], [131, 1, 1, "", "transform_output_spec"], [131, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[132, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "register_keys"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[136, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[138, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[140, 1, 1, "", "forward"], [140, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[143, 1, 1, "", "init_stats"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[146, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[147, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[148, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[151, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[152, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[153, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[154, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_observation_spec"], [155, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[157, 1, 1, "", "transform_observation_spec"], [157, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "transform_input_spec"], [159, 1, 1, "", "transform_observation_spec"], [159, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_input_spec"], [160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "to"], [161, 1, 1, "", "transform_input_spec"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[163, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[164, 3, 1, "", "container"], [164, 1, 1, "", "forward"], [164, 3, 1, "", "parent"], [164, 1, 1, "", "to"], [164, 1, 1, "", "transform_done_spec"], [164, 1, 1, "", "transform_env_batch_size"], [164, 1, 1, "", "transform_env_device"], [164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"], [164, 1, 1, "", "transform_output_spec"], [164, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[165, 1, 1, "", "add_truncated_keys"], [165, 1, 1, "", "append_transform"], [165, 3, 1, "", "batch_locked"], [165, 3, 1, "", "batch_size"], [165, 1, 1, "", "empty_cache"], [165, 1, 1, "", "eval"], [165, 3, 1, "", "input_spec"], [165, 1, 1, "", "insert_transform"], [165, 1, 1, "", "load_state_dict"], [165, 3, 1, "", "output_spec"], [165, 1, 1, "", "set_missing_tolerance"], [165, 1, 1, "", "set_seed"], [165, 1, 1, "", "state_dict"], [165, 1, 1, "", "to"], [165, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[166, 1, 1, "", "transform_input_spec"], [166, 1, 1, "", "transform_observation_spec"], [166, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[167, 1, 1, "", "forward"], [167, 1, 1, "", "make_noload_model"], [167, 1, 1, "", "to"], [167, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[169, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[170, 1, 1, "", "forward"], [170, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[171, 1, 1, "", "build_td_for_shared_vecnorm"], [171, 1, 1, "", "forward"], [171, 1, 1, "", "get_extra_state"], [171, 1, 1, "", "set_extra_state"], [171, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.rb_transforms": [[173, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[173, 1, 1, "", "add_module"], [173, 1, 1, "", "apply"], [173, 1, 1, "", "bfloat16"], [173, 1, 1, "", "buffers"], [173, 1, 1, "", "children"], [173, 1, 1, "", "compile"], [173, 3, 1, "", "container"], [173, 1, 1, "", "cpu"], [173, 1, 1, "", "cuda"], [173, 1, 1, "", "double"], [173, 1, 1, "", "eval"], [173, 1, 1, "", "extra_repr"], [173, 1, 1, "", "float"], [173, 1, 1, "", "forward"], [173, 1, 1, "", "get_buffer"], [173, 1, 1, "", "get_extra_state"], [173, 1, 1, "", "get_parameter"], [173, 1, 1, "", "get_submodule"], [173, 1, 1, "", "half"], [173, 1, 1, "", "ipu"], [173, 1, 1, "", "load_state_dict"], [173, 1, 1, "", "modules"], [173, 3, 1, "", "n_steps"], [173, 1, 1, "", "named_buffers"], [173, 1, 1, "", "named_children"], [173, 1, 1, "", "named_modules"], [173, 1, 1, "", "named_parameters"], [173, 1, 1, "", "parameters"], [173, 3, 1, "", "parent"], [173, 1, 1, "", "register_backward_hook"], [173, 1, 1, "", "register_buffer"], [173, 1, 1, "", "register_forward_hook"], [173, 1, 1, "", "register_forward_pre_hook"], [173, 1, 1, "", "register_full_backward_hook"], [173, 1, 1, "", "register_full_backward_pre_hook"], [173, 1, 1, "", "register_load_state_dict_post_hook"], [173, 1, 1, "", "register_module"], [173, 1, 1, "", "register_parameter"], [173, 1, 1, "", "register_state_dict_pre_hook"], [173, 1, 1, "", "requires_grad_"], [173, 1, 1, "", "set_extra_state"], [173, 1, 1, "", "share_memory"], [173, 1, 1, "", "state_dict"], [173, 1, 1, "", "to"], [173, 1, 1, "", "to_empty"], [173, 1, 1, "", "train"], [173, 1, 1, "", "transform_done_spec"], [173, 1, 1, "", "transform_env_batch_size"], [173, 1, 1, "", "transform_env_device"], [173, 1, 1, "", "transform_input_spec"], [173, 1, 1, "", "transform_observation_spec"], [173, 1, 1, "", "transform_output_spec"], [173, 1, 1, "", "transform_reward_spec"], [173, 1, 1, "", "type"], [173, 1, 1, "", "xpu"], [173, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[174, 2, 1, "", "check_env_specs"], [175, 2, 1, "", "exploration_mode"], [176, 2, 1, "", "exploration_type"], [177, 2, 1, "", "get_available_libraries"], [178, 2, 1, "", "make_composite_from_td"], [179, 2, 1, "", "set_exploration_mode"], [180, 2, 1, "", "set_exploration_type"], [181, 2, 1, "", "step_mdp"], [182, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[183, 0, 1, "", "CEMPlanner"], [184, 0, 1, "", "Conv3dNet"], [185, 0, 1, "", "ConvNet"], [186, 0, 1, "", "DTActor"], [187, 0, 1, "", "DdpgCnnActor"], [188, 0, 1, "", "DdpgCnnQNet"], [189, 0, 1, "", "DdpgMlpActor"], [190, 0, 1, "", "DdpgMlpQNet"], [191, 0, 1, "", "DecisionTransformer"], [192, 0, 1, "", "Delta"], [193, 0, 1, "", "DistributionalDQNnet"], [194, 0, 1, "", "DistributionalQValueHook"], [195, 0, 1, "", "DreamerActor"], [196, 0, 1, "", "DuelingCnnDQNet"], [197, 0, 1, "", "GRU"], [198, 0, 1, "", "GRUCell"], [199, 0, 1, "", "GRUModule"], [200, 0, 1, "", "IndependentNormal"], [201, 0, 1, "", "LSTM"], [202, 0, 1, "", "LSTMCell"], [203, 0, 1, "", "LSTMModule"], [204, 0, 1, "", "LSTMNet"], [205, 0, 1, "", "MLP"], [206, 0, 1, "", "MPCPlannerBase"], [207, 0, 1, "", "MPPIPlanner"], [208, 0, 1, "", "MaskedCategorical"], [209, 0, 1, "", "MaskedOneHotCategorical"], [210, 0, 1, "", "MultiAgentConvNet"], [211, 0, 1, "", "MultiAgentMLP"], [212, 0, 1, "", "NoisyLazyLinear"], [213, 0, 1, "", "NoisyLinear"], [214, 0, 1, "", "NormalParamWrapper"], [215, 0, 1, "", "ObsDecoder"], [216, 0, 1, "", "ObsEncoder"], [217, 0, 1, "", "OneHotCategorical"], [218, 0, 1, "", "OnlineDTActor"], [219, 0, 1, "", "QMixer"], [220, 0, 1, "", "QValueHook"], [221, 0, 1, "", "RSSMPosterior"], [222, 0, 1, "", "RSSMPrior"], [223, 0, 1, "", "Squeeze2dLayer"], [224, 0, 1, "", "SqueezeLayer"], [225, 0, 1, "", "TanhDelta"], [226, 0, 1, "", "TanhNormal"], [227, 0, 1, "", "TruncatedNormal"], [228, 0, 1, "", "VDNMixer"], [229, 0, 1, "", "VmapModule"], [230, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[183, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[184, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[185, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[186, 1, 1, "", "default_config"], [186, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[187, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[188, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[189, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[190, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[191, 0, 1, "", "DTConfig"], [191, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[192, 1, 1, "", "log_prob"], [192, 3, 1, "", "mean"], [192, 3, 1, "", "mode"], [192, 1, 1, "", "rsample"], [192, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[193, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[195, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[196, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[197, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[198, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[199, 1, 1, "", "forward"], [199, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[200, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[201, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[202, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[203, 1, 1, "", "forward"], [203, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[204, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[205, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[207, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[208, 1, 1, "", "log_prob"], [208, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[209, 1, 1, "", "log_prob"], [209, 1, 1, "", "rsample"], [209, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[212, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[214, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[215, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[216, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[217, 1, 1, "", "log_prob"], [217, 3, 1, "", "mode"], [217, 1, 1, "", "rsample"], [217, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[218, 1, 1, "", "default_config"], [218, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[219, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[221, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[222, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[224, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[225, 3, 1, "", "mean"], [225, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[226, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[227, 1, 1, "", "log_prob"], [227, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[228, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[229, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[231, 0, 1, "", "Actor"], [232, 0, 1, "", "ActorCriticOperator"], [233, 0, 1, "", "ActorCriticWrapper"], [234, 0, 1, "", "ActorValueOperator"], [235, 0, 1, "", "AdditiveGaussianWrapper"], [236, 0, 1, "", "DecisionTransformerInferenceWrapper"], [237, 0, 1, "", "DistributionalQValueActor"], [238, 0, 1, "", "DistributionalQValueModule"], [239, 0, 1, "", "EGreedyModule"], [240, 0, 1, "", "EGreedyWrapper"], [241, 0, 1, "", "LMHeadActorValueOperator"], [242, 0, 1, "", "MultiStepActorWrapper"], [243, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [244, 0, 1, "", "ProbabilisticActor"], [245, 0, 1, "", "QValueActor"], [246, 0, 1, "", "QValueModule"], [247, 0, 1, "", "SafeModule"], [248, 0, 1, "", "SafeProbabilisticModule"], [249, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [250, 0, 1, "", "SafeSequential"], [251, 0, 1, "", "TanhModule"], [252, 0, 1, "", "ValueOperator"], [253, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[232, 1, 1, "", "get_critic_operator"], [232, 1, 1, "", "get_policy_head"], [232, 1, 1, "", "get_value_head"], [232, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[233, 1, 1, "", "get_policy_head"], [233, 1, 1, "", "get_policy_operator"], [233, 1, 1, "", "get_value_head"], [233, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[234, 1, 1, "", "get_policy_head"], [234, 1, 1, "", "get_policy_operator"], [234, 1, 1, "", "get_value_head"], [234, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "mask_context"], [236, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[238, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[242, 1, 1, "", "forward"], [242, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[246, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[247, 1, 1, "", "random"], [247, 1, 1, "", "random_sample"], [247, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[248, 1, 1, "", "random"], [248, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[251, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[253, 1, 1, "", "get_reward_operator"], [253, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[254, 0, 1, "", "biased_softplus"], [255, 0, 1, "", "inv_softplus"], [256, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[254, 1, 1, "", "forward"]], "torchrl.objectives": [[257, 0, 1, "", "A2CLoss"], [258, 0, 1, "", "CQLLoss"], [259, 0, 1, "", "ClipPPOLoss"], [260, 0, 1, "", "DDPGLoss"], [261, 0, 1, "", "DQNLoss"], [262, 0, 1, "", "DTLoss"], [263, 0, 1, "", "DiscreteCQLLoss"], [264, 0, 1, "", "DiscreteIQLLoss"], [265, 0, 1, "", "DiscreteSACLoss"], [266, 0, 1, "", "DistributionalDQNLoss"], [267, 0, 1, "", "DreamerActorLoss"], [268, 0, 1, "", "DreamerModelLoss"], [269, 0, 1, "", "DreamerValueLoss"], [270, 0, 1, "", "HardUpdate"], [271, 0, 1, "", "IQLLoss"], [272, 0, 1, "", "KLPENPPOLoss"], [273, 0, 1, "", "LossModule"], [274, 0, 1, "", "OnlineDTLoss"], [275, 0, 1, "", "PPOLoss"], [276, 0, 1, "", "REDQLoss"], [277, 0, 1, "", "ReinforceLoss"], [278, 0, 1, "", "SACLoss"], [279, 0, 1, "", "SoftUpdate"], [280, 0, 1, "", "TD3Loss"], [281, 0, 1, "", "ValueEstimators"], [282, 0, 1, "", "default_value_kwargs"], [283, 0, 1, "", "distance_loss"], [284, 0, 1, "", "hold_out_net"], [285, 0, 1, "", "hold_out_params"], [287, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[259, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[262, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[264, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[268, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[269, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "loss_value_diff"], [271, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[272, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[273, 1, 1, "", "convert_to_functional"], [273, 1, 1, "", "forward"], [273, 1, 1, "", "make_value_estimator"], [273, 1, 1, "", "named_parameters"], [273, 1, 1, "", "parameters"], [273, 1, 1, "", "set_keys"], [273, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[274, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "load_state_dict"], [278, 1, 1, "", "make_value_estimator"], [278, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[286, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[288, 0, 1, "", "GAE"], [289, 0, 1, "", "TD0Estimator"], [290, 0, 1, "", "TD1Estimator"], [291, 0, 1, "", "TDLambdaEstimator"], [292, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[291, 1, 1, "", "forward"], [291, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[292, 1, 1, "", "forward"], [292, 1, 1, "", "set_keys"], [292, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[293, 0, 1, "", "generalized_advantage_estimate"], [294, 0, 1, "", "reward2go"], [295, 0, 1, "", "td0_advantage_estimate"], [296, 0, 1, "", "td0_return_estimate"], [297, 0, 1, "", "td1_advantage_estimate"], [298, 0, 1, "", "td1_return_estimate"], [299, 0, 1, "", "td_lambda_advantage_estimate"], [300, 0, 1, "", "td_lambda_return_estimate"], [301, 0, 1, "", "vec_generalized_advantage_estimate"], [302, 0, 1, "", "vec_td1_advantage_estimate"], [303, 0, 1, "", "vec_td1_return_estimate"], [304, 0, 1, "", "vec_td_lambda_advantage_estimate"], [305, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[306, 2, 1, "", "TensorDictRecorder"], [307, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[308, 2, 1, "", "Logger"], [310, 2, 1, "", "generate_exp_name"], [311, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[309, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[312, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[313, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[314, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[315, 0, 1, "", "BatchSubSampler"], [316, 0, 1, "", "ClearCudaCache"], [317, 0, 1, "", "CountFramesLog"], [318, 0, 1, "", "LogReward"], [319, 0, 1, "", "OptimizerHook"], [320, 0, 1, "", "Recorder"], [321, 0, 1, "", "ReplayBufferTrainer"], [322, 0, 1, "", "RewardNormalizer"], [323, 0, 1, "", "SelectKeys"], [324, 0, 1, "", "Trainer"], [325, 0, 1, "", "TrainerHookBase"], [326, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[315, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[316, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[317, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[318, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[319, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[320, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[321, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[322, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[323, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[325, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[326, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[327, 2, 1, "", "correct_for_frame_skip"], [328, 2, 1, "", "get_stats_random_rollout"], [329, 2, 1, "", "make_collector_offpolicy"], [330, 2, 1, "", "make_collector_onpolicy"], [331, 2, 1, "", "make_dqn_loss"], [332, 2, 1, "", "make_redq_loss"], [333, 2, 1, "", "make_redq_model"], [334, 2, 1, "", "make_replay_buffer"], [335, 2, 1, "", "make_target_updater"], [336, 2, 1, "", "make_trainer"], [337, 2, 1, "", "parallel_env_constructor"], [338, 2, 1, "", "sync_async_collector"], [339, 2, 1, "", "sync_sync_collector"], [340, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 344, 345, 346, 347, 349, 350, 351, 354, 361, 362, 366, 367], "instal": [0, 6, 7, 366], "get": [0, 353, 354, 355, 356, 357, 358], "start": [0, 353, 354, 355, 356, 357, 358], "tutori": [0, 351, 361], "basic": [0, 364], "intermedi": [0, 8], "advanc": 0, "refer": [0, 342], "knowledg": [0, 343], "base": [0, 2, 7, 343], "indic": 0, "tabl": 0, "collector": [1, 349, 350, 351, 352, 356, 358, 361, 366], "packag": [1, 2, 3, 344, 345, 346, 347], "batch": [1, 349, 362, 364], "size": [1, 349, 364], "replai": [1, 2, 349, 350, 351, 352, 356, 358, 361, 364, 366], "buffer": [1, 2, 349, 350, 351, 352, 356, 358, 361, 364, 366], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 349, 350, 351, 356, 358, 361, 366], "distribut": [1, 344], "helper": [1, 3], "function": [1, 4, 345, 350, 351, 355, 361, 366], "compos": [2, 129], "support": 2, "type": 2, "choos": 2, "storag": [2, 75, 349, 356, 364], "sampl": [2, 364], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 350, 364], "trajectori": [2, 364], "checkpoint": [2, 346], "episod": [2, 4], "format": 2, "ted": [2, 353], "The": [2, 349], "rational": 2, "behind": 2, "structur": [2, 364], "dimension": [2, 4], "tensordict": [2, 344, 364, 366], "special": [2, 354, 366], "case": 2, "footnot": 2, "multi": [2, 3, 344, 345, 360, 361], "agent": [2, 3, 4, 344, 345, 361], "present": 2, "memori": 2, "polici": [2, 4, 349, 351, 352, 354, 358, 360, 361, 362], "rnn": 2, "transform": [2, 3, 164, 349, 351, 353, 361, 362, 364, 366, 367], "step": [2, 349, 351, 353, 356, 361, 364, 367], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 43], "reinforc": [2, 345, 351, 361], "learn": [2, 4, 351, 361], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 344, 345, 346], "env": [3, 362, 366, 367], "vector": [3, 366], "environ": [3, 4, 6, 7, 349, 350, 351, 352, 353, 358, 360, 361, 362, 366, 367], "auto": 3, "reset": [3, 362, 367], "clone": [3, 7], "mask": 3, "action": [3, 4, 352, 362], "record": [3, 320, 346, 349, 357], "domain": [3, 344], "specif": [3, 344, 360], "librari": [3, 366], "thing": [4, 349, 362], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 353, 355, 366], "gener": [4, 344], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 349, 358, 362], "algorithm": [4, 344], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 349, 350, 355, 358], "return": [4, 345], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 366], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 360], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 349, 350, 351], "standard": 4, "explor": [4, 344, 349, 350, 354], "valu": [4, 344, 345, 349, 351, 352, 354], "loss": [4, 349, 350, 351, 352, 358, 361], "earli": 4, "train": [4, 8, 345, 349, 351, 352, 355, 358, 361, 362], "roughli": 4, "uniformli": 4, "random": [4, 361], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 350], "increas": 4, "an": [4, 351, 352, 353, 362], "dynam": [4, 364], "can": 4, "low": 4, "forward": [4, 349], "model": [4, 344, 349, 350, 352, 355, 363, 366], "also": 4, "us": [4, 6, 9, 352, 363, 364, 366], "offlin": 4, "observ": [4, 349], "space": 4, "effect": [4, 362], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 367], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 349], "render": [7, 358, 361, 367], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 349], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 362], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "onehotdiscretetensorspec": 32, "pairwisedataset": 33, "prioritizedreplaybuff": 34, "promptdata": 35, "prompttensordicttoken": 36, "replaybuff": 37, "rewarddata": 38, "rolloutfrommodel": 39, "tensordictprioritizedreplaybuff": 40, "tensordictreplaybuff": 41, "tensordicttoken": 42, "tokenizeddatasetload": 44, "unboundedcontinuoustensorspec": 45, "unboundeddiscretetensorspec": 46, "check_no_exclusive_kei": 47, "consolidate_spec": 48, "contains_lazy_spec": 49, "create_infinite_iter": 50, "ataridqnexperiencereplai": 51, "basedatasetexperiencereplai": 52, "d4rlexperiencereplai": 53, "gendgrlexperiencereplai": 54, "minariexperiencereplai": 55, "openmlexperiencereplai": 56, "openxexperiencereplai": 57, "robosetexperiencereplai": 58, "vd4rlexperiencereplai": 59, "get_dataload": 60, "immutabledatasetwrit": 61, "lazymemmapstorag": 62, "lazytensorstorag": 63, "liststorag": 64, "prioritizedsampl": 65, "prioritizedslicesampl": 66, "randomsampl": 67, "replaybufferensembl": 68, "roundrobinwrit": 69, "sampler": 70, "samplerensembl": 71, "samplerwithoutreplac": 72, "slicesampl": 73, "slicesamplerwithoutreplac": 74, "storageensembl": 76, "tensordictmaxvaluewrit": 77, "tensordictroundrobinwrit": 78, "tensorstorag": 79, "writer": 80, "writerensembl": 81, "braxenv": 82, "braxwrapp": 83, "dmcontrolenv": 84, "dmcontrolwrapp": 85, "envbas": [86, 362], "envcreat": 87, "envmetadata": 88, "gymenv": 89, "gymlikeenv": 90, "gymwrapp": 91, "habitatenv": 92, "isaacgymenv": 93, "isaacgymwrapp": 94, "jumanjienv": 95, "jumanjiwrapp": 96, "mogymenv": 97, "mogymwrapp": 98, "marlgroupmaptyp": 99, "meltingpotenv": 100, "meltingpotwrapp": 101, "modelbasedenvbas": 102, "multithreadedenv": 103, "multithreadedenvwrapp": 104, "openmlenv": 105, "parallelenv": 106, "pettingzooenv": 107, "pettingzoowrapp": 108, "robohiveenv": 109, "smacv2env": 110, "smacv2wrapp": 111, "serialenv": 112, "vmasenv": 113, "vmaswrapp": 114, "check_marl_group": 115, "gym_backend": 116, "dreamerenv": 117, "set_gym_backend": 118, "actionmask": 119, "autoresetenv": 120, "autoresettransform": 121, "batchsizetransform": 122, "binarizereward": 123, "burnintransform": 124, "catfram": [125, 364], "cattensor": 126, "centercrop": 127, "cliptransform": 128, "dtypecasttransform": 130, "devicecasttransform": 131, "discreteactionproject": 132, "doubletofloat": 133, "endoflifetransform": 134, "excludetransform": 135, "finitetensordictcheck": 136, "flattenobserv": 137, "frameskiptransform": 138, "grayscal": 139, "inittrack": 140, "klrewardtransform": 141, "noopresetenv": 142, "observationnorm": 143, "observationtransform": 144, "permutetransform": 145, "pinmemorytransform": 146, "r3mtransform": 147, "randomcroptensordict": 148, "removeemptyspec": 149, "renametransform": 150, "resiz": 151, "reward2gotransform": 152, "rewardclip": 153, "rewardsc": 154, "rewardsum": 155, "selecttransform": 156, "signtransform": 157, "squeezetransform": 158, "stepcount": 159, "targetreturn": 160, "tensordictprim": 161, "timemaxpool": 162, "totensorimag": 163, "transformedenv": 165, "unsqueezetransform": 166, "vc1transform": 167, "viprewardtransform": 168, "viptransform": 169, "vecgymenvtransform": 170, "vecnorm": [171, 367], "gsdenois": 172, "multisteptransform": 173, "check_env_spec": 174, "exploration_mod": 175, "exploration_typ": 176, "get_available_librari": 177, "make_composite_from_td": 178, "set_exploration_mod": 179, "set_exploration_typ": 180, "step_mdp": 181, "terminated_or_trunc": 182, "cemplann": 183, "conv3dnet": 184, "convnet": 185, "dtactor": 186, "ddpgcnnactor": 187, "ddpgcnnqnet": 188, "ddpgmlpactor": 189, "ddpgmlpqnet": 190, "decisiontransform": 191, "delta": 192, "distributionaldqnnet": 193, "distributionalqvaluehook": 194, "dreameractor": 195, "duelingcnndqnet": 196, "gru": 197, "grucel": 198, "grumodul": 199, "independentnorm": 200, "lstm": [201, 352], "lstmcell": 202, "lstmmodul": 203, "lstmnet": 204, "mlp": [205, 352], "mpcplannerbas": 206, "mppiplann": 207, "maskedcategor": 208, "maskedonehotcategor": 209, "multiagentconvnet": 210, "multiagentmlp": 211, "noisylazylinear": 212, "noisylinear": 213, "normalparamwrapp": 214, "obsdecod": 215, "obsencod": 216, "onehotcategor": 217, "onlinedtactor": 218, "qmixer": [219, 345], "qvaluehook": 220, "rssmposterior": 221, "rssmprior": 222, "squeeze2dlay": 223, "squeezelay": 224, "tanhdelta": 225, "tanhnorm": 226, "truncatednorm": 227, "vdnmixer": 228, "vmapmodul": 229, "reset_nois": 230, "actor": [231, 344, 349, 354], "actorcriticoper": 232, "actorcriticwrapp": 233, "actorvalueoper": 234, "additivegaussianwrapp": 235, "decisiontransformerinferencewrapp": 236, "distributionalqvalueactor": 237, "distributionalqvaluemodul": 238, "egreedymodul": 239, "egreedywrapp": 240, "lmheadactorvalueoper": 241, "multistepactorwrapp": 242, "ornsteinuhlenbeckprocesswrapp": 243, "probabilisticactor": 244, "qvalueactor": 245, "qvaluemodul": 246, "safemodul": [247, 344], "safeprobabilisticmodul": 248, "safeprobabilistictensordictsequenti": 249, "safesequenti": 250, "tanhmodul": 251, "valueoper": 252, "worldmodelwrapp": 253, "biased_softplu": 254, "inv_softplu": 255, "map": 256, "a2closs": 257, "cqlloss": 258, "clipppoloss": 259, "ddpgloss": 260, "dqnloss": 261, "dtloss": 262, "discretecqlloss": 263, "discreteiqlloss": 264, "discretesacloss": 265, "distributionaldqnloss": 266, "dreameractorloss": 267, "dreamermodelloss": 268, "dreamervalueloss": 269, "hardupd": 270, "iqlloss": 271, "klpenppoloss": 272, "lossmodul": [273, 349, 355], "onlinedtloss": 274, "ppoloss": 275, "redqloss": 276, "reinforceloss": 277, "sacloss": 278, "softupd": 279, "td3loss": 280, "valueestim": 281, "default_value_kwarg": 282, "distance_loss": 283, "hold_out_net": 284, "hold_out_param": 285, "qmixerloss": 286, "next_state_valu": 287, "gae": 288, "td0estim": 289, "td1estim": 290, "tdlambdaestim": 291, "valueestimatorbas": 292, "generalized_advantage_estim": 293, "reward2go": 294, "td0_advantage_estim": 295, "td0_return_estim": 296, "td1_advantage_estim": 297, "td1_return_estim": 298, "td_lambda_advantage_estim": 299, "td_lambda_return_estim": 300, "vec_generalized_advantage_estim": 301, "vec_td1_advantage_estim": 302, "vec_td1_return_estim": 303, "vec_td_lambda_advantage_estim": 304, "vec_td_lambda_return_estim": 305, "tensordictrecord": 306, "videorecord": 307, "logger": [308, 346, 357, 358], "csvlogger": 309, "generate_exp_nam": 310, "get_logg": 311, "mlflowlogg": 312, "tensorboardlogg": 313, "wandblogg": 314, "batchsubsampl": 315, "clearcudacach": 316, "countframeslog": 317, "logreward": 318, "optimizerhook": 319, "replaybuffertrain": 321, "rewardnorm": 322, "selectkei": 323, "trainer": [324, 346, 350], "trainerhookbas": 325, "updateweight": 326, "correct_for_frame_skip": 327, "get_stats_random_rollout": 328, "make_collector_offpolici": 329, "make_collector_onpolici": 330, "make_dqn_loss": 331, "make_redq_loss": 332, "make_redq_model": 333, "make_replay_buff": 334, "make_target_updat": 335, "make_train": 336, "parallel_env_constructor": 337, "sync_async_collector": 338, "sync_sync_collector": 339, "transformed_env_constructor": 340, "readm": [341, 359], "tuto": [341, 359], "api": 342, "contribut": [343, 366], "content": 343, "modul": [344, 349, 352, 354, 358, 366], "tensordictmodul": [344, 354, 366], "wrapper": [344, 354], "probabilist": [344, 354], "q": [344, 350, 352, 354], "oper": 344, "join": 344, "hook": [344, 346, 350], "regular": 344, "planner": 344, "object": [345, 349, 355, 366], "dqn": [345, 350, 352], "ddpg": [345, 349], "sac": 345, "redq": 345, "iql": 345, "cql": 345, "dt": 345, "td3": 345, "ppo": [345, 351, 361], "a2c": 345, "dreamer": 345, "builder": 346, "_util": 347, "comput": [348, 350, 362, 365], "time": [348, 349, 365], "code": [349, 362], "overview": [349, 352], "setup": [349, 352], "__init__": 349, "method": 349, "estim": 349, "put": 349, "togeth": [349, 362], "call": 349, "parallel": [349, 360, 367], "execut": [349, 360, 362], "stat": 349, "build": [349, 350, 358, 364], "evalu": 349, "construct": 349, "target": [349, 350, 355], "network": [349, 350, 351, 352, 354, 361], "updat": 349, "experi": [349, 362], "result": [349, 351, 361], "conclus": [349, 350, 351, 352, 361, 362, 364], "next": [349, 351, 353, 356, 361, 364], "A": [350, 364], "exampl": [350, 364], "deep": 350, "collect": [350, 351, 356], "paramet": [350, 351, 355], "hyperparamet": [350, 351, 361], "regist": 350, "possibl": 350, "improv": 350, "defin": [351, 361], "loop": [351, 352, 358, 361, 362], "recurr": 352, "convolut": 352, "select": 352, "further": [352, 355], "read": 352, "creat": 353, "run": [353, 367], "rollout": [353, 360, 361, 362, 367], "s": [354, 355], "output": 355, "consider": 355, "log": 357, "video": 357, "own": 358, "first": 358, "design": 358, "divers": 360, "critic": 361, "pendulum": 362, "write": 362, "_step": 362, "simul": 362, "_reset": 362, "metadata": 362, "_spec": 362, "spec": [362, 367], "shape": 362, "seed": [362, 367], "wrap": 362, "class": [362, 366], "test": 362, "our": 362, "custom": [362, 364], "simpl": 362, "pretrain": 363, "vanilla": 364, "integr": 364, "tensorclass": 364, "other": 364, "tensor": 364, "pytre": 364, "iter": 364, "over": 364, "fix": 364, "priorit": 364, "save": 364, "raw": 364, "imag": 364, "more": 364, "complex": 364, "introduct": 366, "config": 366, "sequenc": 366, "program": 366, "ensembl": 366, "meta": 366, "state": 366, "frame_skip": 367, "deepmind": 367, "control": 367, "devic": 367, "close": 367, "access": 367, "attribut": 367, "kwarg": 367}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})