Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 71, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 100, 101, 103, 104, 105, 106, 107, 110, 113, 117, 119, 120, 122, 125, 127, 128, 131, 137, 138, 142, 143, 144, 145, 147, 155, 156, 157, 158, 159, 160, 162, 165, 166, 168, 178, 179, 181, 182, 183, 184, 191, 193, 195, 197, 198, 199, 200, 204, 205, 206, 210, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 241, 242, 246, 249, 250, 251, 252, 254, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 303, 307, 312, 313, 317, 318, 321, 330, 331, 332, 333, 336, 337, 338, 342, 343, 347, 348, 350, 351, 353, 354], "open": [0, 5, 7, 11, 57, 343, 348, 353], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "reinforc": [0, 3, 9, 54, 120, 181, 182, 183, 184, 188, 232, 236, 250, 251, 255, 256, 257, 259, 263, 264, 270, 271, 272, 335, 341, 343, 346, 349, 352, 353], "learn": [0, 3, 7, 8, 9, 18, 32, 54, 55, 56, 58, 59, 103, 120, 181, 182, 183, 184, 188, 201, 207, 232, 236, 250, 251, 255, 256, 257, 259, 263, 264, 269, 270, 271, 272, 335, 337, 338, 341, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 52, 100, 155, 207, 225, 237, 245, 250, 252, 265, 266, 268, 270, 308, 336, 337, 338, 339, 342, 343, 344, 348, 350, 351, 354], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 84, 85, 94, 101, 171, 335, 336, 337, 340, 342, 343, 344, 348, 349, 354], "pytorch": [0, 1, 2, 3, 55, 111, 112, 158, 168, 191, 195, 206, 207, 317, 336, 339, 342, 344, 345, 348, 349, 350, 353, 354], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 32, 43, 54, 86, 90, 94, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 166, 195, 307, 336, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 117, 119, 120, 123, 124, 125, 127, 128, 129, 137, 138, 142, 143, 147, 150, 154, 155, 156, 159, 160, 162, 164, 166, 168, 176, 177, 191, 193, 194, 195, 197, 200, 201, 204, 205, 207, 208, 221, 223, 225, 229, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 307, 313, 326, 331, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "directli": [0, 3, 4, 8, 52, 68, 82, 83, 86, 89, 90, 100, 104, 110, 147, 165, 266, 333, 337, 343, 344, 348, 349, 351], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 172, 175, 176, 177, 181, 182, 183, 184, 185, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 213, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 273, 275, 279, 280, 281, 282, 283, 284, 287, 299, 300, 308, 314, 317, 320, 321, 326, 327, 329, 330, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354], "pypi": [0, 2, 353], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 86, 90, 93, 101, 104, 105, 106, 107, 110, 111, 112, 124, 142, 156, 158, 159, 160, 162, 164, 167, 178, 179, 191, 194, 195, 199, 205, 206, 213, 221, 222, 226, 228, 240, 241, 300, 307, 314, 342, 343, 344, 345, 348, 349, 351, 354], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 77, 86, 90, 93, 94, 104, 105, 106, 107, 110, 111, 112, 158, 162, 167, 188, 195, 199, 206, 208, 225, 229, 231, 232, 240, 245, 250, 259, 266, 268, 281, 286, 294, 307, 312, 336, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 354], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 55, 58, 59, 338, 342, 343, 344, 348, 349, 353, 354], "instruct": [0, 6, 7, 10, 22, 53, 127, 129, 342, 343, 344, 345, 348, 351], "dedic": [0, 1, 2, 3, 18, 19, 20, 21, 104, 110, 226, 227, 228, 337, 342, 347, 348], "section": [0, 2, 3, 4, 191, 195, 343, 348], "below": [0, 2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 60, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 178, 179, 191, 194, 195, 199, 205, 221, 240, 314, 342, 343, 344, 345, 349], "pip": [0, 10, 56, 348, 353, 354], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 119, 120, 121, 122, 123, 125, 128, 132, 137, 138, 140, 142, 143, 146, 147, 150, 151, 155, 156, 157, 160, 162, 164, 165, 166, 176, 178, 179, 185, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 223, 225, 229, 232, 233, 234, 236, 237, 238, 239, 244, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 308, 314, 321, 326, 329, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "python": [0, 3, 5, 6, 7, 10, 21, 102, 116, 191, 192, 193, 195, 196, 197, 202, 203, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 52, 53, 54, 55, 57, 58, 59, 62, 63, 66, 73, 74, 79, 86, 90, 104, 110, 120, 121, 132, 138, 142, 143, 158, 160, 162, 191, 193, 195, 197, 199, 204, 205, 206, 210, 225, 230, 231, 232, 237, 238, 240, 241, 252, 261, 265, 266, 268, 299, 300, 316, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "low": [0, 25, 86, 90, 104, 110, 123, 127, 172, 232, 237, 244, 342, 343, 344, 348, 349, 353, 354], "high": [0, 9, 25, 41, 86, 90, 104, 110, 123, 127, 137, 172, 232, 237, 244, 281, 286, 294, 342, 343, 344, 348, 349, 351, 353, 354], "level": [0, 2, 3, 4, 22, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 120, 154, 265, 342, 343, 353], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 80, 86, 139, 200, 285, 309, 318, 339, 344, 349, 353], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 71, 72, 74, 75, 76, 79, 86, 87, 89, 90, 91, 99, 100, 103, 104, 105, 106, 107, 110, 111, 112, 119, 120, 123, 124, 125, 127, 128, 129, 131, 132, 136, 137, 140, 142, 147, 150, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 172, 176, 177, 184, 186, 191, 192, 193, 195, 196, 197, 198, 200, 202, 203, 204, 207, 211, 213, 216, 230, 231, 233, 236, 237, 238, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 285, 307, 314, 329, 333, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 119, 127, 223, 266, 337, 353], "effici": [0, 1, 2, 4, 8, 191, 207, 337, 342, 343, 344, 345, 347, 348, 350, 351, 353], "modular": [0, 52, 243, 351, 353], "document": [0, 2, 5, 7, 18, 19, 21, 32, 57, 86, 90, 104, 110, 160, 343, 345, 353], "properli": [0, 86, 90, 104, 110, 344, 348, 349, 353], "test": [0, 3, 5, 82, 83, 95, 96, 162, 168, 193, 197, 198, 313, 329, 344, 345, 353], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 119, 120, 124, 125, 128, 129, 130, 138, 140, 142, 147, 149, 150, 151, 154, 155, 156, 159, 160, 162, 164, 165, 168, 175, 176, 177, 181, 182, 183, 184, 185, 188, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 214, 215, 216, 225, 226, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 287, 300, 302, 305, 306, 307, 308, 312, 329, 331, 332, 335, 337, 338, 339, 343, 344, 345, 348, 349, 350, 351, 353, 354], "code": [0, 3, 5, 7, 8, 57, 86, 90, 104, 110, 142, 160, 162, 191, 192, 193, 195, 196, 197, 243, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354], "aim": [0, 2, 3, 7, 28, 29, 142, 162, 164, 199, 320, 336, 337, 338, 342, 343, 353], "support": [0, 1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 56, 59, 60, 62, 63, 75, 76, 79, 81, 82, 83, 91, 95, 96, 101, 103, 105, 107, 120, 129, 138, 156, 157, 159, 171, 188, 223, 231, 232, 237, 240, 243, 259, 281, 282, 283, 284, 305, 335, 337, 339, 344, 345, 348, 349, 351, 353], "research": [0, 7, 9, 353], "most": [0, 2, 3, 7, 8, 32, 73, 74, 86, 90, 104, 110, 127, 165, 168, 342, 344, 349, 353, 354], "written": [0, 3, 11, 34, 36, 39, 45, 53, 54, 57, 62, 66, 68, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 120, 129, 136, 150, 154, 157, 165, 175, 176, 225, 236, 237, 240, 241, 245, 250, 252, 265, 268, 270, 280, 299, 300, 337, 338, 339, 342, 345, 347, 349, 353], "highli": [0, 2, 353, 354], "wai": [0, 2, 3, 4, 52, 55, 68, 94, 142, 145, 164, 165, 195, 268, 281, 282, 283, 284, 337, 342, 343, 344, 347, 348, 349, 350, 351, 353, 354], "easili": [0, 2, 3, 7, 86, 90, 104, 110, 326, 338, 342, 343, 344, 348, 353, 354], "swap": [0, 3, 89, 165, 344, 350, 353], "compon": [0, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 188, 214, 231, 232, 239, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 312, 317, 342, 343, 344, 345, 347, 348, 349, 350, 353], "transform": [0, 1, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 87, 90, 104, 105, 106, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 180, 181, 185, 188, 189, 212, 213, 214, 222, 230, 235, 244, 247, 249, 255, 267, 300, 314, 326, 333, 335, 341, 343, 345, 346, 350, 352], "them": [0, 2, 3, 7, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 81, 86, 87, 90, 94, 99, 104, 105, 106, 110, 111, 112, 125, 128, 160, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 222, 223, 229, 230, 232, 233, 236, 239, 244, 247, 265, 271, 300, 342, 343, 345, 347, 348, 349, 350, 351, 353, 354], "write": [0, 2, 3, 8, 23, 32, 34, 36, 37, 39, 45, 68, 76, 81, 86, 90, 123, 140, 141, 150, 152, 154, 158, 176, 225, 240, 241, 243, 245, 253, 254, 256, 257, 258, 264, 269, 271, 273, 280, 285, 300, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354], "new": [0, 2, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 90, 101, 104, 108, 109, 110, 150, 159, 166, 175, 176, 191, 193, 197, 236, 240, 241, 246, 250, 251, 252, 254, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 307, 342, 344, 345, 348, 349, 353, 354], "ones": [0, 2, 15, 26, 32, 35, 38, 41, 42, 86, 90, 104, 110, 121, 124, 125, 126, 128, 138, 142, 147, 156, 159, 160, 162, 164, 202, 203, 223, 240, 250, 251, 253, 264, 268, 269, 271, 273, 287, 342, 344, 348, 349, 351, 353, 354], "littl": [0, 3, 43, 250, 252, 265, 268, 270, 344, 345, 351, 353, 354], "effort": [0, 3, 349, 351, 353], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 110, 111, 112, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 142, 143, 144, 145, 147, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 285, 299, 307, 308, 310, 313, 314, 317, 319, 320, 321, 326, 329, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "repo": [0, 6, 53, 120, 157, 162, 336, 348, 353], "attempt": [0, 13, 14, 16, 17, 18, 19, 20, 21, 73, 74, 84, 85, 89, 91, 92, 107, 229, 234, 236, 254, 257, 264, 279, 353], "align": [0, 191, 195, 353], "exist": [0, 3, 4, 11, 18, 21, 32, 34, 36, 39, 45, 86, 90, 104, 110, 121, 126, 160, 271, 321, 333, 348, 353, 354], "ecosystem": [0, 353], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 44, 46, 47, 52, 57, 68, 71, 73, 77, 86, 87, 90, 94, 104, 110, 111, 112, 120, 154, 155, 156, 157, 160, 191, 193, 195, 197, 204, 229, 232, 234, 236, 241, 265, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 71, 73, 74, 103, 166, 335, 342, 343, 350, 351, 353, 354], "pillar": [0, 353], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 121, 125, 126, 127, 128, 133, 137, 138, 142, 143, 144, 150, 154, 155, 156, 157, 159, 160, 162, 165, 166, 168, 177, 193, 197, 198, 200, 201, 229, 236, 256, 260, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 310, 313, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 335, 336, 337, 341, 346, 350, 351, 352], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 86, 90, 100, 104, 110, 125, 142, 156, 162, 164, 167, 178, 179, 180, 185, 193, 197, 199, 200, 201, 205, 212, 213, 222, 226, 227, 228, 235, 240, 246, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 279, 317, 322, 323, 324, 325, 326, 335, 336, 339, 341, 344, 346, 348, 349, 351, 352, 354], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 117, 119, 120, 125, 126, 128, 130, 136, 138, 144, 147, 154, 165, 168, 172, 176, 177, 188, 193, 197, 198, 201, 204, 205, 214, 223, 225, 231, 233, 234, 236, 237, 238, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 307, 308, 314, 317, 319, 322, 329, 331, 332, 333, 335, 337, 338, 339, 345, 349, 350, 351, 354], "util": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 38, 40, 83, 86, 90, 95, 96, 104, 105, 106, 110, 113, 142, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 185, 191, 195, 247, 248, 249, 266, 329, 335, 340, 342, 344, 348, 349, 351, 353, 354], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 62, 63, 65, 66, 79, 86, 87, 90, 104, 110, 111, 119, 121, 124, 132, 138, 142, 150, 156, 159, 160, 162, 164, 168, 191, 193, 194, 195, 197, 201, 205, 208, 214, 220, 221, 230, 232, 237, 239, 240, 241, 271, 280, 281, 282, 283, 284, 308, 320, 332, 337, 343, 344, 348, 350, 353, 354], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 33, 86, 87, 90, 104, 110, 111, 119, 121, 124, 132, 138, 142, 150, 156, 159, 160, 162, 164, 168, 191, 193, 194, 195, 196, 197, 201, 205, 220, 221, 230, 237, 240, 241, 271, 280, 290, 291, 292, 293, 295, 296, 297, 298, 332, 337, 343, 344, 348, 349, 350, 353, 354], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 52, 57, 120, 147, 154, 236, 314, 317, 319, 322, 323, 329, 331, 332, 335, 339, 351, 354], "contain": [0, 2, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 73, 74, 75, 78, 80, 81, 86, 90, 100, 104, 110, 124, 125, 128, 142, 156, 159, 160, 162, 164, 165, 166, 175, 176, 177, 178, 179, 191, 192, 195, 196, 199, 201, 205, 225, 231, 232, 237, 239, 240, 245, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 287, 304, 308, 320, 326, 329, 330, 331, 332, 333, 337, 338, 339, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "etc": [0, 2, 3, 7, 8, 11, 32, 46, 47, 57, 86, 90, 104, 110, 136, 160, 199, 205, 343, 344, 351, 353, 354], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 75, 86, 90, 104, 105, 106, 110, 120, 125, 128, 129, 136, 137, 138, 154, 159, 160, 166, 168, 176, 178, 179, 198, 199, 204, 205, 223, 242, 243, 250, 252, 265, 268, 276, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 317, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "few": [0, 2, 8, 90, 300, 308, 344, 345, 348, 351, 353, 354], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 89, 91, 92, 107, 111, 112, 125, 128, 245, 268, 337, 342, 344, 345, 348, 349, 353, 354], "possibl": [0, 2, 3, 4, 27, 29, 32, 33, 34, 36, 39, 54, 57, 59, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 178, 179, 191, 192, 195, 196, 240, 313, 317, 337, 342, 344, 345, 348, 349, 351, 353, 354], "standard": [0, 3, 138, 149, 166, 177, 189, 201, 206, 207, 229, 230, 273, 281, 282, 283, 284, 342, 343, 348, 351, 353], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 86, 90, 104, 110, 158, 317, 349, 351, 353, 354], "common": [0, 2, 3, 4, 90, 95, 117, 226, 227, 228, 235, 250, 251, 252, 257, 258, 264, 265, 268, 269, 270, 271, 273, 329, 336, 337, 339, 342, 344, 347, 348, 349, 350, 353, 354], "openai": [0, 7, 89, 91, 107, 344, 349, 353, 354], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 86, 87, 89, 90, 91, 92, 94, 101, 102, 104, 107, 110, 111, 112, 114, 116, 120, 123, 129, 135, 136, 138, 140, 145, 147, 150, 156, 159, 165, 166, 326, 329, 336, 342, 343, 344, 345, 349, 350, 351, 353], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 84, 85, 86, 89, 90, 91, 92, 94, 101, 102, 104, 105, 106, 107, 110, 120, 121, 123, 124, 125, 127, 128, 132, 138, 142, 143, 147, 154, 155, 156, 157, 159, 160, 162, 164, 166, 195, 197, 198, 204, 205, 225, 230, 231, 237, 238, 240, 241, 242, 243, 250, 252, 253, 257, 258, 264, 265, 266, 268, 269, 270, 271, 272, 273, 281, 282, 283, 284, 285, 307, 321, 339, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 132, 133, 135, 136, 137, 138, 142, 143, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 219, 220, 221, 223, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 305, 307, 308, 310, 311, 312, 313, 314, 315, 317, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 337, 345, 348, 349, 351, 353], "On": [0, 3, 7, 18, 19, 20, 21, 26, 54, 192, 196, 337, 343, 348], "end": [0, 2, 3, 13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 104, 110, 129, 140, 154, 155, 160, 178, 179, 191, 192, 195, 196, 200, 271, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "come": [0, 1, 2, 3, 8, 90, 99, 104, 110, 125, 128, 225, 226, 227, 228, 237, 245, 250, 252, 265, 268, 270, 342, 343, 344, 345, 348, 351, 353, 354], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 72, 75, 79, 86, 88, 90, 100, 104, 105, 106, 110, 111, 112, 116, 117, 120, 121, 124, 125, 128, 135, 136, 142, 147, 154, 155, 156, 157, 159, 160, 162, 164, 166, 168, 173, 174, 176, 191, 193, 195, 197, 200, 204, 205, 229, 230, 240, 258, 266, 268, 271, 285, 308, 313, 314, 323, 333, 336, 337, 338, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "re": [0, 3, 8, 32, 72, 86, 90, 104, 110, 197, 202, 203, 237, 241, 307, 339, 342, 344, 345, 347, 349, 353, 354], "usabl": [0, 339, 345, 353], "function": [0, 2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 62, 63, 64, 68, 75, 76, 79, 86, 87, 90, 104, 110, 116, 125, 128, 160, 166, 168, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 208, 209, 210, 211, 212, 215, 216, 218, 221, 223, 226, 227, 228, 229, 230, 232, 233, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 326, 329, 335, 337, 342, 345, 347, 349, 351, 354], "cost": [0, 2, 27, 57, 250, 252, 265, 268, 270, 342, 343, 348, 349, 351], "return": [0, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 69, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 211, 212, 213, 215, 216, 219, 220, 221, 222, 225, 226, 227, 228, 230, 237, 239, 240, 241, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 304, 317, 320, 322, 326, 329, 330, 331, 332, 333, 335, 337, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "process": [0, 1, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 43, 45, 52, 54, 58, 59, 65, 86, 87, 90, 94, 99, 101, 104, 105, 106, 110, 119, 125, 128, 158, 166, 204, 205, 232, 236, 239, 335, 339, 342, 343, 345, 348, 349, 350, 351, 353, 354], "good": [0, 1, 4, 9, 104, 342, 344, 345, 348, 353, 354], "runtim": [0, 3, 32, 86, 90, 104, 110, 349], "perform": [0, 2, 3, 4, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 113, 125, 128, 137, 160, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 261, 268, 271, 313, 317, 338, 342, 343, 344, 345, 347, 348, 349, 354], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 76, 81, 82, 83, 86, 89, 90, 91, 95, 96, 99, 104, 105, 106, 107, 108, 109, 110, 111, 154, 166, 226, 227, 228, 236, 258, 266, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 337, 338, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "read": [0, 2, 3, 7, 23, 37, 40, 57, 62, 63, 64, 65, 68, 75, 76, 79, 86, 89, 90, 91, 104, 110, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 140, 141, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 159, 162, 163, 165, 166, 176, 211, 225, 226, 227, 228, 231, 237, 240, 241, 243, 245, 246, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 313, 317, 326, 337, 342, 343, 344, 347, 348, 349, 350, 354], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 339, 342, 347, 350, 354], "beyond": 0, "api": [0, 2, 3, 5, 105, 106, 107, 142, 164, 338, 339, 348, 349, 353, 354], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 46, 47, 48, 50, 73, 86, 87, 90, 100, 104, 110, 113, 120, 121, 131, 136, 143, 158, 168, 193, 197, 225, 231, 232, 237, 238, 239, 240, 241, 300, 337, 338, 343, 344, 345, 347, 348, 349, 350, 351, 354], "paper": [0, 54, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 107, 111, 112, 142, 162, 164, 191, 213, 222, 256, 263, 326, 342, 344, 348], "releas": [0, 4, 7, 10, 32, 86, 90, 104, 110, 160, 271, 353], "sync": [0, 13, 14, 17, 18, 19, 20, 21, 319, 329, 339, 342, 353], "so": [0, 2, 3, 4, 6, 7, 10, 32, 34, 36, 39, 40, 86, 90, 104, 110, 156, 166, 242, 243, 342, 344, 345, 348, 349, 354], "make": [0, 2, 3, 4, 7, 32, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 75, 76, 81, 86, 90, 91, 94, 96, 98, 102, 104, 110, 130, 138, 142, 143, 147, 154, 162, 168, 191, 192, 195, 196, 204, 205, 206, 231, 241, 250, 252, 265, 268, 270, 281, 282, 283, 284, 314, 323, 333, 337, 338, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "sure": [0, 3, 4, 7, 56, 75, 90, 94, 147, 231, 333, 337, 342, 344, 345, 348, 349, 351, 353, 354], "alwai": [0, 2, 3, 20, 26, 28, 32, 52, 60, 86, 90, 104, 110, 136, 137, 259, 266, 337, 338, 343, 344, 345, 348, 349, 351], "enjoi": [0, 2, 3, 57], "latest": [0, 2, 3, 10, 101, 105, 106, 314, 344, 348, 349, 353], "featur": [0, 2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 55, 66, 73, 74, 86, 90, 99, 104, 105, 106, 108, 109, 110, 120, 132, 136, 140, 156, 157, 161, 166, 168, 178, 179, 189, 190, 191, 192, 193, 195, 196, 197, 199, 206, 207, 241, 250, 252, 265, 268, 270, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 333, 337, 342, 343, 344, 345, 349, 351, 354], "recent": [0, 7, 11, 165, 353, 354], "version": [0, 1, 2, 3, 6, 11, 32, 34, 36, 40, 54, 59, 73, 86, 89, 90, 91, 92, 101, 102, 104, 105, 107, 110, 111, 112, 165, 228, 266, 271, 281, 284, 336, 337, 342, 344, 345, 348, 349, 350, 354], "although": [0, 1, 8, 86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 339, 342, 343, 351], "core": [0, 3, 8, 326, 339, 345, 353], "guarante": [0, 2, 32, 34, 36, 39, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 166, 353], "backward": [0, 8, 32, 82, 83, 86, 90, 104, 110, 166, 191, 192, 195, 196, 250, 251, 253, 257, 258, 264, 268, 269, 270, 271, 273, 342, 344, 345, 348, 349], "compat": [0, 3, 7, 11, 32, 34, 36, 39, 53, 68, 71, 73, 74, 75, 86, 90, 92, 103, 104, 110, 120, 154, 162, 166, 191, 192, 193, 195, 196, 197, 238, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 276, 342, 345, 351, 353], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 136, 138, 140, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 172, 175, 177, 178, 179, 180, 181, 182, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 247, 250, 251, 252, 253, 254, 256, 257, 258, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 287, 289, 290, 291, 295, 296, 298, 308, 313, 314, 315, 326, 329, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "13": [0, 5, 10, 11, 73, 74, 107, 165, 342, 343, 344, 349, 350, 351], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 35, 38, 41, 42, 53, 55, 56, 57, 58, 59, 90, 104, 142, 159, 164, 255, 266, 338, 339, 342, 343, 344, 345, 351, 354], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 175, 176, 177, 187, 188, 193, 197, 198, 200, 201, 213, 214, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 299, 308, 312, 313, 314, 316, 317, 326, 335, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 354], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 26, 28, 136, 144, 226, 227, 228, 240, 257, 264, 326, 335, 342, 349, 353], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 32, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 68, 86, 90, 104, 110, 116, 142, 164, 201, 302, 307, 317, 339, 343], "root": [0, 2, 3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 104, 120, 157, 175, 194, 220, 221, 345, 348, 349, 350, 351, 354], "http": [0, 2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 52, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 103, 105, 106, 107, 111, 112, 120, 142, 162, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 201, 202, 203, 207, 209, 210, 212, 213, 215, 216, 222, 232, 236, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 281, 286, 294, 326, 350, 353], "github": [0, 2, 5, 6, 7, 10, 18, 19, 20, 52, 54, 55, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 162, 353], "com": [0, 2, 5, 6, 7, 10, 18, 19, 20, 54, 57, 58, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 105, 106, 107, 111, 112, 350, 353], "setup": [0, 7, 82, 83, 94, 95, 96], "py": [0, 3, 116, 213, 222, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354], "develop": [0, 3, 4, 7, 94, 342, 353], "ppo": [0, 4, 8, 237, 241, 252, 265, 268, 335, 337, 341, 342, 343, 346, 352], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 84, 85, 86, 87, 89, 90, 91, 101, 104, 110, 120, 123, 124, 130, 135, 136, 138, 145, 147, 152, 154, 156, 157, 159, 160, 166, 193, 197, 329, 337, 341, 343, 344, 346, 352, 353, 354], "your": [0, 2, 3, 7, 8, 10, 18, 32, 86, 90, 94, 99, 104, 105, 106, 110, 166, 333, 336, 337, 338, 341, 343, 344, 345, 346, 348, 351, 352, 353], "introduct": [0, 338, 341, 346, 348, 352, 354], "multi": [0, 7, 9, 28, 29, 32, 86, 90, 104, 108, 109, 110, 191, 193, 195, 197, 198, 199, 204, 205, 279, 281, 282, 283, 284, 335, 341, 342, 343, 344, 345, 346, 349, 352, 353], "agent": [0, 9, 28, 29, 99, 105, 106, 108, 109, 111, 112, 113, 154, 155, 202, 203, 204, 205, 207, 213, 222, 279, 335, 341, 346, 349, 352], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 53, 55, 57, 58, 59, 68, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 193, 197, 200, 201, 240, 266, 299, 300, 321, 322, 323, 326, 329, 331, 332, 333, 335, 337, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 138, 142, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 207, 208, 211, 212, 213, 214, 220, 221, 222, 223, 225, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 294, 300, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 327, 329, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 354], "pretrain": [0, 341, 346, 352], "recurr": [0, 2, 119, 191, 192, 193, 195, 197, 216, 341, 343, 346, 351, 352], "dqn": [0, 2, 52, 129, 188, 231, 232, 250, 251, 253, 254, 256, 258, 259, 260, 263, 264, 266, 268, 269, 270, 271, 272, 273, 279, 324, 335, 337, 341, 346, 352], "train": [0, 1, 2, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 39, 40, 45, 52, 54, 60, 86, 90, 104, 105, 106, 110, 125, 133, 142, 155, 160, 162, 164, 168, 181, 183, 193, 197, 229, 233, 234, 236, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 317, 319, 329, 335, 339, 341, 343, 346, 350, 351, 352, 354], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 82, 83, 86, 90, 100, 104, 110, 127, 136, 155, 173, 174, 188, 193, 197, 204, 205, 207, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 250, 251, 252, 253, 257, 258, 264, 265, 267, 268, 269, 270, 271, 273, 313, 319, 322, 323, 329, 331, 332, 337, 338, 339, 341, 343, 346, 350, 351, 352, 353, 354], "replai": [0, 8, 16, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 119, 120, 127, 143, 147, 156, 253, 254, 256, 257, 258, 264, 269, 271, 273, 314, 317, 327, 329, 335, 339, 341, 346, 349, 350, 352], "buffer": [0, 1, 3, 4, 8, 16, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 86, 90, 100, 104, 110, 119, 120, 124, 127, 142, 143, 147, 156, 159, 160, 162, 164, 240, 243, 253, 254, 256, 257, 258, 264, 269, 271, 273, 314, 317, 327, 329, 335, 339, 341, 346, 349, 350, 352, 354], "task": [0, 2, 3, 9, 28, 29, 40, 45, 54, 57, 84, 85, 86, 90, 93, 104, 105, 106, 107, 110, 111, 112, 142, 154, 162, 164, 257, 264, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354], "specif": [0, 2, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 41, 42, 90, 111, 185, 230, 317, 335, 338, 339, 341, 344, 345, 346, 348, 351, 352], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 36, 39, 45, 62, 63, 64, 68, 71, 75, 76, 79, 81, 86, 90, 95, 104, 110, 125, 128, 129, 138, 142, 159, 160, 162, 166, 201, 213, 222, 225, 226, 237, 240, 241, 242, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 321, 322, 323, 328, 329, 333, 335, 337, 339, 341, 343, 344, 345, 346, 348, 349, 351, 352, 354], "ddpg": [0, 181, 182, 183, 184, 253, 263, 272, 335, 337, 341, 343, 346, 352], "loss": [0, 3, 8, 36, 129, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 312, 317, 324, 325, 326, 329, 338, 339, 341, 346, 349, 351, 352, 353], "trainer": [0, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 341, 342, 346, 352], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 86, 88, 90, 92, 93, 104, 107, 110, 119, 123, 127, 133, 136, 142, 143, 145, 152, 156, 159, 160, 162, 163, 165, 166, 167, 168, 175, 177, 178, 179, 188, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 207, 208, 223, 229, 230, 231, 232, 233, 237, 238, 241, 243, 244, 247, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 276, 279, 281, 282, 283, 284, 285, 287, 301, 302, 305, 307, 310, 317, 319, 326, 329, 338, 341, 342, 344, 346, 348, 349, 352, 354], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 135, 136, 138, 140, 142, 144, 145, 146, 147, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 172, 175, 176, 177, 178, 179, 180, 185, 188, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 208, 211, 212, 213, 214, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 275, 279, 281, 282, 283, 284, 287, 300, 308, 309, 310, 311, 312, 314, 315, 316, 319, 326, 329, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354], "packag": [0, 6, 7, 10, 116, 335, 336, 354], "singl": [0, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 86, 89, 90, 104, 110, 111, 112, 120, 121, 142, 147, 164, 178, 179, 191, 192, 193, 195, 196, 197, 198, 199, 205, 239, 243, 252, 254, 256, 258, 259, 265, 268, 269, 273, 281, 282, 283, 284, 290, 291, 292, 293, 295, 296, 297, 298, 326, 333, 335, 342, 343, 344, 345, 347, 348, 349, 350, 351], "node": [0, 2, 18, 19, 20, 21, 22, 59, 326, 335], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 105, 106, 136, 138, 177, 186, 187, 188, 189, 194, 201, 202, 203, 208, 211, 212, 215, 216, 219, 220, 221, 229, 230, 231, 232, 237, 241, 242, 250, 251, 252, 257, 258, 259, 264, 265, 268, 269, 270, 271, 273, 335, 339, 343, 344, 348, 349, 353, 354], "helper": [0, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 342, 343, 345, 349], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 77, 78, 86, 90, 104, 110, 120, 146, 159, 160, 166, 235, 261, 271, 326, 335, 342, 343, 344, 345, 347, 348, 351, 353, 354], "episod": [0, 52, 53, 57, 58, 59, 66, 73, 74, 86, 90, 104, 110, 147, 150, 155, 177, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 335, 343, 348], "format": [0, 31, 32, 33, 52, 53, 54, 55, 56, 57, 58, 59, 71, 86, 90, 104, 105, 110, 124, 142, 156, 159, 160, 162, 164, 240, 300, 335, 342, 343, 354], "ted": [0, 52, 53, 54, 55, 56, 57, 58, 59, 335], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 86, 90, 100, 104, 110, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 176, 216, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 251, 254, 257, 258, 269, 271, 273, 279, 335, 349], "human": [0, 55, 335, 349], "feedback": [0, 335, 353], "rlhf": [0, 40, 45, 60, 136, 335, 337], "envbas": [0, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 87, 90, 104, 110, 117, 125, 128, 137, 144, 145, 159, 160, 166, 168, 177, 200, 201, 313, 321, 322, 323, 326, 329, 331, 332, 333, 335], "gymlikeenv": [0, 89, 91, 335], "envmetadata": [0, 335], "vector": [0, 1, 8, 24, 27, 33, 82, 83, 95, 96, 99, 105, 106, 107, 111, 112, 127, 165, 181, 183, 191, 192, 195, 196, 199, 281, 284, 294, 295, 296, 297, 298, 335, 342, 343, 345, 347, 348, 349, 350, 354], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 105, 106, 117, 143, 188, 202, 203, 214, 230, 231, 232, 233, 234, 238, 239, 314, 335, 343, 345, 354], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 52, 55, 57, 58, 59, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 123, 125, 127, 128, 129, 130, 133, 136, 137, 140, 144, 145, 147, 151, 154, 160, 165, 172, 175, 177, 180, 181, 182, 183, 184, 185, 188, 189, 193, 197, 199, 200, 201, 202, 203, 204, 212, 213, 214, 216, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 329, 333, 335, 337, 338, 339, 342, 343, 344, 347, 348, 350, 351, 353, 354], "record": [0, 2, 32, 86, 90, 104, 110, 136, 268, 299, 300, 301, 302, 303, 304, 305, 306, 307, 329, 335, 343, 344], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 86, 90, 104, 110, 127, 156, 172, 225, 231, 232, 237, 238, 239, 240, 241, 242, 243, 335, 344, 345, 348, 349, 353, 354], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 77, 82, 83, 86, 90, 99, 100, 103, 104, 110, 116, 119, 124, 127, 129, 136, 142, 143, 155, 156, 159, 160, 162, 164, 166, 167, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 277, 279, 281, 282, 283, 284, 285, 317, 324, 325, 329, 335, 338, 339, 343, 344, 347, 348, 349, 350, 351], "actor": [0, 3, 4, 15, 21, 136, 177, 180, 181, 183, 188, 189, 201, 212, 214, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 279, 326, 335, 338, 343, 345, 350, 353], "explor": [0, 1, 167, 207, 225, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 250, 313, 322, 323, 329, 335, 344, 345, 348, 349], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 86, 90, 99, 104, 110, 116, 118, 120, 121, 123, 125, 127, 128, 129, 137, 138, 142, 143, 146, 147, 148, 150, 152, 156, 157, 159, 160, 164, 166, 172, 176, 181, 182, 183, 184, 186, 188, 189, 190, 193, 194, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 310, 311, 312, 313, 314, 317, 326, 329, 335, 339, 343, 347, 348, 349, 351, 353, 354], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 40, 54, 70, 72, 86, 87, 90, 100, 103, 104, 105, 106, 108, 109, 110, 124, 125, 126, 130, 136, 138, 144, 145, 150, 151, 154, 159, 165, 176, 186, 202, 203, 211, 225, 237, 241, 245, 246, 269, 275, 281, 286, 294, 303, 317, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "hook": [0, 32, 86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 214, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 335], "planner": [0, 177, 201, 335], "sac": [0, 258, 269, 271, 335], "redq": [0, 269, 325, 326, 335], "iql": [0, 257, 264, 335, 342, 348], "cql": [0, 251, 256, 335], "dt": [0, 236, 335, 349], "td3": [0, 273, 335], "a2c": [0, 250, 335], "dreamer": [0, 115, 189, 260, 261, 262, 335, 337], "checkpoint": [0, 335, 350], "builder": [0, 335, 343, 354], "logger": [0, 300, 302, 303, 304, 305, 306, 307, 311, 317, 329, 333, 335, 343], "_util": [0, 3, 11, 335], "implement_for": [0, 3, 335], "thing": [0, 3, 7, 8, 336, 344, 345, 348, 351, 354], "consid": [0, 1, 2, 3, 8, 20, 32, 34, 36, 39, 62, 63, 79, 86, 90, 104, 110, 127, 166, 186, 204, 219, 336, 342, 349, 351], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 76, 79, 86, 87, 90, 99, 101, 103, 104, 105, 106, 110, 111, 112, 117, 119, 120, 124, 125, 127, 128, 136, 137, 138, 142, 143, 150, 156, 159, 160, 162, 164, 165, 166, 173, 174, 177, 188, 191, 192, 195, 196, 199, 200, 201, 202, 203, 206, 214, 220, 237, 240, 241, 243, 247, 252, 254, 259, 265, 268, 271, 274, 279, 280, 281, 282, 283, 284, 299, 300, 314, 333, 336, 337, 339, 342, 343, 344, 345, 348, 349, 350, 351, 354], "debug": [0, 6, 8, 40, 336, 354], "work": [0, 2, 3, 4, 8, 11, 32, 34, 36, 38, 39, 66, 71, 73, 74, 76, 81, 86, 89, 90, 91, 94, 104, 107, 110, 121, 136, 142, 162, 165, 166, 178, 179, 199, 232, 239, 244, 252, 265, 268, 317, 336, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "habitat": [0, 3, 92, 336, 350], "lab": [0, 3, 84, 85, 92, 336], "mujoco": [0, 6, 8, 107, 336, 342, 344, 345], "error": [0, 1, 3, 7, 10, 11, 29, 32, 86, 90, 104, 110, 113, 143, 168, 336, 342, 344, 348, 354], "solut": [0, 2, 3, 6, 7, 9, 21, 336, 337, 339, 353], "resourc": [0, 1, 21, 92, 336, 342, 344, 348], "issu": [0, 4, 5, 8, 52, 55, 62, 63, 79, 94, 120, 143, 157, 225, 231, 232, 237, 238, 239, 240, 241, 336, 353], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 78, 79, 80, 81, 86, 90, 104, 110, 111, 112, 120, 127, 175, 202, 203, 335, 347, 348, 351, 353], "search": [0, 103, 176, 343], "page": [0, 7, 307], "somewhat": [1, 2, 338, 354], "equival": [1, 3, 24, 26, 27, 30, 31, 32, 33, 34, 36, 39, 45, 53, 55, 57, 58, 59, 60, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 126, 129, 160, 188, 195, 214, 231, 232, 238, 239, 268, 314, 353, 354], "dataload": [1, 60, 72, 74, 343, 351], "except": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 57, 86, 90, 104, 110, 120, 131, 147, 155, 156, 157, 191, 193, 195, 197, 211, 229, 233, 234, 236, 300, 337, 343, 351, 353, 354], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 86, 90, 99, 104, 105, 106, 110, 111, 112, 119, 131, 136, 142, 151, 159, 160, 164, 197, 198, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 314, 317, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "collect": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 104, 107, 110, 120, 138, 142, 164, 168, 236, 251, 253, 256, 258, 269, 271, 273, 308, 314, 317, 319, 320, 321, 329, 339, 342, 345, 348, 349, 350, 351, 353, 354], "over": [1, 2, 3, 4, 8, 32, 38, 42, 43, 45, 51, 52, 57, 72, 86, 90, 104, 110, 127, 138, 150, 157, 175, 223, 243, 259, 261, 266, 287, 320, 339, 342, 343, 344, 348, 349, 354], "non": [1, 2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 35, 36, 39, 41, 42, 57, 64, 86, 90, 104, 105, 106, 110, 118, 124, 132, 142, 156, 159, 160, 161, 162, 164, 175, 191, 193, 195, 197, 204, 240, 241, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 337, 342, 345, 348, 349, 351, 354], "static": [1, 11, 40, 45, 66, 73, 74, 92, 166, 264, 349, 351], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 52, 57, 58, 60, 65, 66, 68, 73, 74, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 119, 121, 124, 125, 126, 127, 128, 136, 138, 140, 142, 144, 147, 150, 154, 155, 156, 159, 160, 162, 164, 166, 172, 176, 178, 179, 180, 181, 182, 183, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 208, 212, 223, 230, 231, 232, 233, 234, 236, 240, 244, 245, 250, 251, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 337, 338, 341, 342, 343, 344, 345, 347, 348, 349, 351, 352, 353, 354], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 64, 68, 74, 86, 90, 92, 99, 104, 105, 106, 110, 129, 158, 168, 191, 195, 205, 235, 250, 252, 265, 268, 269, 270, 338, 342, 344, 345, 348, 349, 350, 351, 354], "being": [1, 2, 3, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 60, 86, 89, 90, 91, 92, 104, 107, 110, 119, 125, 127, 128, 137, 145, 160, 173, 174, 193, 197, 233, 236, 252, 265, 268, 271, 300, 314, 319, 331, 332, 333, 337, 342, 343, 344, 345, 348, 349, 351], "s": [1, 2, 3, 6, 7, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 74, 82, 83, 86, 90, 94, 95, 96, 101, 104, 105, 106, 110, 111, 112, 120, 124, 142, 154, 156, 158, 159, 160, 162, 164, 166, 168, 178, 179, 193, 197, 203, 204, 205, 207, 213, 222, 226, 228, 229, 232, 233, 237, 240, 241, 244, 251, 257, 264, 266, 271, 281, 282, 283, 284, 285, 326, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 55, 58, 59, 60, 86, 90, 100, 104, 110, 120, 124, 132, 142, 150, 156, 159, 160, 161, 162, 164, 223, 240, 241, 242, 271, 300, 339, 344, 351, 354], "two": [1, 2, 3, 4, 8, 10, 32, 40, 57, 68, 72, 74, 86, 90, 104, 110, 138, 142, 164, 184, 191, 193, 195, 197, 217, 241, 265, 276, 313, 317, 326, 338, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354], "main": [1, 2, 3, 5, 20, 22, 59, 87, 241, 317, 337, 338, 342, 343, 347, 354], "argument": [1, 2, 3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 54, 55, 57, 58, 59, 60, 66, 68, 71, 72, 73, 74, 76, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 107, 110, 111, 112, 123, 124, 142, 151, 154, 156, 158, 159, 160, 162, 164, 175, 178, 179, 191, 193, 195, 197, 199, 202, 203, 204, 205, 206, 223, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 271, 273, 275, 279, 281, 282, 283, 284, 285, 289, 299, 307, 310, 320, 326, 329, 330, 333, 342, 343, 344, 345, 348, 349, 351, 353, 354], "list": [1, 2, 6, 7, 8, 9, 13, 14, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 71, 72, 73, 74, 75, 76, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 113, 118, 119, 123, 125, 128, 136, 138, 140, 142, 150, 152, 158, 160, 162, 164, 166, 175, 187, 193, 197, 199, 202, 203, 209, 214, 232, 238, 239, 241, 243, 244, 245, 266, 271, 278, 281, 284, 299, 313, 314, 331, 332, 337, 342, 344, 347, 349, 350, 351, 353, 354], "constructor": [1, 2, 16, 18, 19, 20, 21, 38, 45, 57, 65, 86, 90, 101, 104, 110, 111, 159, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 326, 330, 333, 337, 342, 343, 344, 348, 351], "iter": [1, 2, 11, 14, 16, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 68, 72, 82, 83, 86, 90, 95, 96, 104, 110, 130, 138, 151, 178, 179, 199, 204, 205, 218, 225, 231, 237, 238, 240, 242, 243, 245, 266, 278, 313, 316, 317, 326, 338, 339, 342, 344, 345, 348, 349], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 87, 90, 91, 92, 94, 95, 96, 100, 101, 104, 107, 110, 117, 160, 191, 193, 195, 197, 233, 242, 243, 321, 333, 337, 339, 341, 343, 344, 345, 348, 351, 352, 354], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 52, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 117, 119, 132, 135, 138, 154, 155, 156, 157, 160, 165, 175, 176, 177, 189, 191, 193, 195, 197, 198, 200, 201, 229, 233, 234, 236, 237, 241, 250, 260, 268, 280, 281, 282, 283, 284, 287, 288, 289, 299, 302, 308, 313, 317, 339, 343, 345, 347, 349, 350, 351, 353], "queri": [1, 3, 13, 32, 34, 36, 39, 86, 90, 104, 110, 142, 159, 162, 166, 243, 342, 349, 353], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 86, 90, 104, 110, 143, 155, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 254, 256, 266, 281, 282, 283, 284, 285, 299, 330, 342, 343, 345, 349, 351, 354], "number": [1, 2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 119, 120, 127, 133, 137, 138, 149, 154, 157, 166, 177, 178, 179, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 204, 205, 208, 209, 210, 213, 215, 216, 219, 220, 221, 222, 225, 229, 230, 233, 234, 236, 237, 240, 241, 245, 249, 251, 257, 258, 260, 264, 265, 267, 269, 271, 273, 308, 310, 313, 317, 319, 320, 321, 331, 332, 333, 337, 342, 343, 344, 345, 348, 349, 350, 354], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 56, 72, 86, 90, 104, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 168, 191, 193, 197, 199, 206, 207, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 282, 283, 284, 314, 342, 344, 345, 348, 349, 351, 354], "deliv": [1, 2, 16, 57, 342, 343, 353], "stack": [1, 2, 3, 7, 8, 18, 20, 21, 28, 29, 35, 38, 41, 42, 50, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 86, 90, 99, 104, 105, 106, 110, 166, 191, 193, 195, 196, 197, 242, 243, 299, 308, 337, 343, 347, 349, 353], "user": [1, 2, 3, 5, 8, 32, 52, 53, 57, 59, 74, 86, 90, 104, 110, 155, 160, 168, 185, 198, 268, 271, 300, 330, 338, 339, 342, 343, 349, 353, 354], "reset": [1, 2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 120, 129, 132, 135, 137, 142, 150, 154, 155, 156, 157, 159, 162, 165, 166, 168, 176, 191, 193, 197, 224, 236, 299, 326, 342, 343, 344, 345, 347, 348, 353], "whenev": [1, 2, 3, 32, 35, 38, 41, 42, 52, 57, 66, 73, 74, 84, 85, 89, 91, 92, 107, 111, 112, 116, 135, 160, 165, 266, 281, 282, 283, 284, 319, 337], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 72, 86, 90, 104, 110, 111, 112, 154, 229, 233, 234, 236, 342, 344, 348, 353, 354], "done": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 55, 57, 58, 59, 66, 68, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 125, 126, 128, 129, 130, 137, 138, 140, 144, 145, 147, 149, 151, 154, 156, 157, 159, 160, 166, 175, 176, 177, 191, 193, 197, 201, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 326, 338, 342, 344, 345, 347, 348, 349, 350, 351, 353, 354], "state": [1, 2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 104, 105, 106, 107, 108, 109, 110, 119, 120, 121, 123, 129, 138, 145, 154, 155, 159, 160, 166, 168, 175, 176, 177, 180, 185, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 209, 212, 213, 215, 216, 222, 226, 240, 246, 250, 252, 256, 265, 266, 268, 269, 270, 271, 279, 280, 281, 282, 283, 284, 285, 333, 337, 338, 342, 343, 344, 345, 348, 349, 354], "after": [1, 2, 3, 8, 13, 14, 17, 18, 20, 21, 26, 32, 40, 52, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 175, 191, 193, 197, 206, 229, 231, 233, 238, 261, 271, 343, 344, 345, 348, 349, 350, 351, 354], "predefin": [1, 343, 345, 351], "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 52, 86, 90, 104, 110, 129, 136, 154, 159, 165, 184, 198, 205, 225, 231, 232, 237, 238, 239, 240, 241, 342, 343, 345, 347, 348, 349, 351, 354], "potenti": [1, 2, 349, 351], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 82, 83, 86, 90, 95, 96, 104, 110, 138, 152, 160, 163, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 226, 229, 230, 232, 233, 236, 237, 239, 241, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 321, 338, 342, 344, 345, 347, 348, 350, 351], "heavi": [1, 8, 52, 351], "crucial": [1, 2, 229, 233, 234, 236, 257, 264, 266, 342, 343, 344, 345, 348, 349, 354], "configur": [1, 8, 21, 22, 40, 136, 180, 185, 212, 266, 268, 326, 337, 342, 343, 344, 348, 349], "hyperparamet": [1, 71, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342, 349, 351], "appropri": [1, 3, 4, 7, 61, 69, 77, 78, 80, 81, 104, 110, 129, 330, 333, 342, 351], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 337, 338, 342, 345, 348, 349, 350, 353], "take": [1, 3, 8, 23, 40, 54, 82, 83, 86, 90, 95, 96, 104, 110, 123, 154, 157, 159, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 234, 235, 236, 237, 239, 244, 247, 249, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 319, 337, 339, 342, 343, 344, 348, 349, 351, 354], "consider": [1, 2, 3, 8, 343, 348, 351], "whether": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 105, 106, 110, 111, 112, 125, 128, 155, 160, 176, 178, 179, 193, 197, 199, 245, 250, 251, 252, 253, 254, 256, 258, 259, 265, 266, 268, 269, 270, 271, 273, 279, 281, 284, 342, 343, 344, 348, 349, 354], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 73, 74, 75, 77, 84, 85, 86, 89, 90, 91, 92, 99, 100, 104, 105, 106, 110, 111, 112, 120, 123, 124, 125, 126, 129, 130, 132, 136, 138, 143, 144, 145, 147, 150, 151, 154, 155, 157, 159, 160, 165, 166, 168, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 237, 239, 240, 241, 244, 247, 250, 252, 258, 263, 265, 266, 268, 269, 270, 272, 280, 281, 282, 283, 284, 285, 300, 302, 312, 313, 314, 317, 329, 331, 332, 333, 337, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "occur": [1, 8, 14, 28, 29, 52, 86, 92, 121, 138, 143, 165, 176, 225, 231, 232, 237, 238, 239, 240, 241, 261, 351, 354], "serial": [1, 2, 3, 32, 86, 90, 104, 110, 166], "optim": [1, 2, 8, 32, 40, 82, 83, 86, 90, 104, 110, 160, 177, 201, 206, 207, 251, 266, 267, 268, 271, 312, 317, 329, 338, 339, 344, 345, 348, 349], "parallel": [1, 3, 8, 89, 91, 104, 105, 106, 110, 165, 168, 250, 330, 331, 332, 333, 343, 344, 348], "syncdatacollector": [1, 2, 13, 14, 17, 18, 19, 20, 21, 120, 147, 329, 332, 335, 342, 343, 344, 345, 348, 351], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 99, 100, 103, 104, 105, 106, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 331, 332, 333, 337, 338, 339, 342, 343, 344, 345, 348, 351, 354], "worker": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 54, 59, 60, 87, 101, 104, 110, 166, 331, 332, 333, 342, 344, 353, 354], "multisyncdatacollector": [1, 18, 19, 20, 21, 332, 335, 344, 353], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 53, 55, 57, 58, 59, 60, 66, 73, 74, 99, 105, 106, 191, 195, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 337, 339, 344, 351, 353], "workload": 1, "across": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 66, 73, 74, 82, 83, 84, 85, 89, 91, 92, 94, 95, 96, 101, 102, 104, 107, 166, 204, 236, 319, 335, 337, 342, 348, 349], "aggreg": [1, 3, 52, 176, 178, 179, 181, 182, 243], "result": [1, 2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 87, 90, 104, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 175, 176, 191, 193, 195, 197, 199, 204, 214, 230, 232, 233, 239, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 319, 337, 343, 345, 349, 350, 353, 354], "final": [1, 2, 3, 4, 21, 34, 36, 39, 40, 165, 191, 193, 195, 197, 204, 229, 233, 234, 235, 236, 242, 281, 313, 337, 342, 343, 344, 348, 349, 354], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 331, 335, 342, 343, 344, 353], "sever": [1, 2, 8, 30, 32, 45, 54, 86, 90, 104, 110, 121, 123, 160, 268, 342, 344, 351, 354], "batch": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 74, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 110, 111, 112, 120, 132, 138, 140, 143, 147, 156, 160, 161, 165, 166, 176, 186, 191, 192, 193, 195, 196, 197, 198, 202, 203, 204, 205, 206, 211, 213, 219, 223, 236, 240, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 311, 314, 315, 316, 317, 319, 331, 332, 333, 339, 343, 344, 345, 347, 348, 350, 353, 354], "gather": [1, 3, 18, 20, 21, 45, 60, 62, 63, 79, 143, 203, 211, 280, 321, 336, 343, 344, 345, 348, 349, 351, 354], "continu": [1, 9, 25, 46, 74, 86, 90, 104, 105, 106, 110, 111, 112, 172, 181, 182, 183, 184, 236, 243, 250, 251, 257, 258, 264, 268, 269, 270, 271, 272, 273, 281, 286, 294, 337, 342, 344, 345, 348, 349, 351, 353, 354], "concomitantli": 1, "network": [1, 4, 8, 32, 86, 90, 99, 104, 105, 106, 110, 178, 179, 181, 182, 183, 184, 187, 189, 190, 195, 199, 204, 205, 207, 209, 210, 213, 215, 216, 217, 222, 226, 227, 228, 230, 240, 244, 251, 252, 253, 254, 256, 257, 258, 259, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 277, 279, 281, 282, 283, 284, 285, 328, 329, 337, 338, 339, 347, 349, 354], "impli": [1, 354], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 66, 68, 71, 82, 83, 86, 90, 104, 108, 109, 110, 124, 142, 156, 159, 160, 162, 164, 191, 192, 193, 195, 196, 197, 204, 207, 240, 250, 251, 252, 258, 261, 271, 319, 328, 337, 339, 342, 343, 344, 345, 347, 349, 351, 353], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 53, 59, 86, 89, 90, 91, 92, 104, 107, 110, 136, 138, 151, 160, 161, 166, 168, 199, 204, 338, 339, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "slightli": [1, 52, 337, 338, 345, 349, 350, 351, 354], "lag": [1, 342, 343, 344], "therefor": [1, 2, 3, 7, 58, 59, 86, 90, 104, 110, 147, 268, 279, 354], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 99, 100, 103, 104, 105, 106, 110, 117, 120, 129, 136, 142, 147, 150, 154, 155, 157, 159, 161, 164, 165, 175, 176, 191, 192, 195, 196, 202, 203, 204, 229, 233, 234, 236, 237, 240, 241, 249, 250, 251, 252, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 338, 339, 342, 343, 344, 347, 348, 349, 351, 354], "asynchron": [1, 9, 14, 21, 32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 250, 331, 342, 343, 344], "off": [1, 2, 4, 194, 221, 231, 271, 313, 322, 337, 339, 342, 343, 344, 348, 350, 354], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 86, 90, 104, 105, 106, 110, 111, 125, 128, 132, 138, 155, 160, 165, 168, 188, 191, 193, 195, 197, 205, 206, 226, 228, 230, 232, 238, 250, 257, 259, 264, 268, 313, 337, 339, 342, 343, 344, 345, 348, 349, 350, 351, 354], "remot": [1, 2, 18, 19, 20, 21, 104, 110, 354], "rollout": [1, 2, 3, 13, 14, 16, 17, 21, 23, 40, 82, 83, 86, 90, 92, 93, 95, 96, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 123, 125, 128, 129, 130, 136, 140, 144, 145, 150, 151, 152, 154, 155, 157, 168, 177, 193, 197, 201, 236, 250, 300, 321, 337, 342, 344, 345, 350, 351, 353], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 18, 19, 20, 21, 52, 54, 55, 57, 58, 59, 86, 90, 104, 110, 111, 112, 151, 269, 281, 282, 283, 284, 285, 338, 342, 344], "synchronis": [1, 87, 348], "either": [1, 2, 5, 22, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 86, 90, 104, 110, 154, 155, 246, 273, 304, 339, 342, 343, 345, 350, 351, 353, 354], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 342, 348, 353], "update_at_each_batch": [1, 13, 14, 17], "true": [1, 2, 3, 4, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 124, 127, 132, 135, 136, 137, 138, 142, 143, 145, 146, 149, 151, 154, 156, 158, 159, 160, 161, 162, 164, 166, 168, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 220, 221, 225, 226, 227, 228, 229, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 281, 282, 283, 284, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 307, 310, 311, 313, 314, 317, 333, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "second": [1, 3, 8, 52, 54, 191, 193, 195, 197, 232, 252, 265, 268, 271, 302, 316, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 55, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 128, 129, 130, 136, 140, 141, 142, 144, 145, 147, 151, 154, 156, 158, 159, 160, 162, 164, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 207, 212, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 314, 319, 326, 327, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 86, 90, 104, 110, 132, 136, 159, 187, 188, 192, 196, 208, 226, 227, 228, 231, 232, 235, 240, 246, 250, 252, 253, 254, 259, 265, 268, 270, 279, 280, 281, 282, 283, 284, 317, 326, 335, 339, 342, 343, 344, 345, 347, 348, 349, 354], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 85, 86, 87, 90, 100, 104, 110, 120, 138, 156, 159, 166, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 231, 232, 233, 236, 237, 238, 239, 241, 242, 243, 244, 247, 254, 257, 258, 266, 279, 281, 282, 283, 284, 300, 304, 313, 321, 322, 323, 326, 329, 331, 332, 337, 338, 339, 342, 344, 345, 349, 351, 354], "cpu": [1, 2, 3, 8, 10, 13, 14, 16, 17, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 52, 55, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 128, 129, 130, 140, 142, 144, 145, 147, 151, 154, 156, 159, 160, 162, 164, 172, 175, 177, 191, 192, 193, 195, 196, 197, 201, 206, 207, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 314, 326, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 52, 53, 57, 66, 71, 73, 74, 76, 77, 86, 90, 94, 104, 107, 110, 145, 184, 193, 195, 197, 199, 208, 223, 225, 229, 231, 240, 245, 266, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 336, 338, 342, 343, 344, 348, 349, 351, 353, 354], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 120, 123, 125, 126, 127, 128, 137, 138, 142, 147, 150, 153, 155, 156, 157, 159, 160, 161, 164, 166, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 211, 212, 214, 215, 216, 218, 223, 225, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 288, 289, 302, 310, 312, 313, 317, 321, 326, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354], "cuda": [1, 2, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 86, 90, 92, 93, 94, 104, 110, 124, 136, 141, 142, 156, 159, 160, 162, 164, 191, 192, 195, 196, 240, 256, 309, 342, 343, 344, 345, 348, 350, 354], "multipl": [1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 68, 82, 83, 95, 96, 104, 110, 121, 123, 127, 137, 147, 150, 154, 159, 166, 191, 195, 197, 198, 204, 206, 207, 225, 231, 237, 238, 240, 241, 244, 252, 258, 265, 268, 269, 273, 287, 326, 333, 337, 339, 342, 343, 344, 348, 349, 351, 353], "infer": [1, 104, 110, 120, 166, 193, 197, 206, 230, 256, 342, 344, 351], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 52, 54, 66, 73, 74, 82, 83, 84, 85, 86, 89, 90, 95, 96, 100, 101, 102, 104, 110, 137, 138, 160, 166, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 242, 243, 244, 247, 271, 300, 307, 313, 331, 332, 333, 336, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353], "dispatch": [1, 18, 19, 20, 21, 223, 300, 342], "avail": [1, 3, 4, 6, 21, 52, 54, 59, 66, 72, 73, 74, 84, 85, 94, 104, 105, 106, 107, 111, 112, 119, 136, 188, 214, 237, 241, 266, 300, 331, 332, 337, 342, 343, 344, 345, 348, 349, 351, 354], "speed": [1, 2, 4, 8, 27, 104, 110, 338, 342, 343, 344, 345, 348, 349, 351], "up": [1, 2, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 27, 40, 53, 59, 104, 110, 119, 157, 159, 268, 336, 337, 338, 342, 343, 344, 345, 348, 349, 351, 354], "avoid": [1, 2, 32, 62, 63, 79, 86, 90, 104, 110, 116, 160, 166, 225, 240, 245, 252, 265, 268, 271, 320, 344, 348], "oom": [1, 62, 63, 79], "choic": [1, 2, 53, 59, 104, 208, 337, 338, 342, 343, 348], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 121, 125, 128, 129, 130, 132, 140, 142, 144, 145, 147, 151, 153, 154, 156, 158, 159, 160, 161, 164, 166, 172, 175, 177, 178, 179, 180, 185, 186, 188, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 216, 219, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 300, 308, 314, 326, 337, 343, 344, 345, 347, 348, 349, 350, 353, 354], "pass": [1, 2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 28, 32, 35, 38, 40, 41, 42, 45, 52, 54, 55, 57, 58, 59, 62, 63, 68, 77, 79, 86, 87, 88, 90, 99, 101, 104, 105, 106, 110, 111, 125, 128, 145, 159, 161, 166, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 218, 222, 223, 225, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 252, 265, 266, 268, 281, 282, 283, 284, 285, 314, 331, 332, 333, 337, 342, 343, 344, 345, 347, 348, 349, 351, 354], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 57, 65, 74, 86, 90, 94, 103, 104, 110, 120, 132, 161, 166, 176, 193, 197, 230, 250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 281, 282, 283, 284, 337, 338, 343, 348, 351], "store": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 79, 86, 90, 104, 110, 165, 166, 177, 198, 201, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 307, 326, 335, 339, 342, 344, 345, 348, 350, 351, 354], "while": [1, 2, 3, 7, 8, 32, 86, 90, 104, 110, 147, 160, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 257, 264, 265, 268, 271, 337, 342, 344, 345, 348, 349, 350, 351, 353], "wait": [1, 20, 21, 22, 345, 349], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 38, 39, 41, 52, 54, 55, 57, 58, 59, 60, 62, 63, 68, 79, 86, 90, 104, 105, 106, 110, 111, 112, 116, 119, 120, 127, 138, 145, 147, 150, 151, 154, 156, 160, 191, 195, 216, 237, 242, 243, 244, 250, 251, 253, 254, 256, 257, 258, 264, 268, 271, 281, 288, 289, 337, 339, 342, 343, 344, 345, 347, 348, 349, 351, 354], "impact": [1, 57, 125, 128, 343, 345, 348], "memori": [1, 3, 8, 21, 27, 32, 34, 36, 39, 45, 52, 53, 54, 55, 57, 58, 59, 62, 86, 87, 90, 94, 104, 110, 120, 124, 142, 156, 159, 160, 162, 164, 166, 195, 196, 240, 333, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "manag": [1, 8, 277, 278, 281, 282, 283, 284, 313], "kei": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 65, 66, 68, 71, 73, 74, 77, 86, 90, 95, 96, 104, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 142, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 175, 176, 177, 187, 188, 193, 197, 200, 201, 214, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 300, 311, 312, 313, 315, 316, 317, 321, 326, 338, 339, 342, 344, 345, 347, 348, 349, 351, 353, 354], "control": [1, 3, 5, 8, 16, 84, 85, 86, 90, 99, 104, 105, 106, 110, 127, 175, 181, 182, 183, 184, 193, 197, 200, 201, 216, 223, 236, 240, 241, 242, 250, 252, 265, 268, 272, 281, 286, 294, 337, 339, 342, 343, 344, 348, 349, 351], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 71, 72, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 111, 112, 120, 121, 125, 128, 133, 136, 137, 138, 142, 143, 154, 156, 157, 159, 160, 162, 168, 191, 192, 194, 195, 196, 197, 202, 203, 204, 221, 226, 227, 228, 230, 237, 240, 241, 243, 250, 251, 252, 254, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 300, 308, 312, 326, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 343, 348, 353], "dure": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 68, 71, 86, 90, 104, 105, 106, 110, 120, 123, 125, 128, 133, 140, 152, 160, 193, 197, 313, 317, 338, 342, 343, 344, 345, 348, 349, 351, 354], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 236, 342, 354], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 53, 71, 82, 83, 86, 90, 95, 96, 104, 110, 207, 268, 281, 282, 283, 284, 285, 299, 326, 336, 337, 339, 342, 343, 344, 345, 348, 351, 354], "same": [1, 2, 3, 4, 11, 16, 18, 19, 20, 21, 26, 28, 29, 32, 34, 36, 39, 43, 45, 53, 57, 72, 76, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 120, 125, 127, 128, 133, 137, 138, 159, 160, 166, 178, 179, 192, 193, 196, 197, 199, 202, 203, 204, 205, 230, 236, 244, 271, 342, 343, 344, 347, 348, 350, 351, 354], "storag": [1, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 72, 73, 74, 76, 77, 79, 86, 88, 90, 104, 110, 119, 120, 125, 128, 147, 335, 339, 343, 344, 345, 348, 350], "default": [1, 2, 3, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 118, 119, 120, 121, 125, 127, 128, 129, 132, 136, 137, 138, 140, 142, 143, 147, 149, 151, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 215, 216, 218, 219, 220, 221, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 276, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 329, 333, 339, 342, 343, 344, 345, 350, 351, 353, 354], "behaviour": [1, 3, 21, 57, 90, 121, 125, 128, 138, 143, 155, 175, 193, 194, 197, 221, 313, 337, 343, 351], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 28, 104, 110, 120, 125, 128, 138, 156, 157, 197, 237, 241, 242, 243, 319, 331, 332, 337, 342, 343, 348, 349, 354], "choos": [1, 99, 193, 197, 268, 335, 337, 338, 342, 343, 344, 348, 351], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 86, 90, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 136, 142, 162, 178, 179, 191, 193, 195, 197, 199, 232, 238, 239, 249, 250, 251, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 300, 317, 326, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 320, 342, 344, 353], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 52, 120, 133, 229, 233, 236, 299, 300, 302, 310, 313, 317, 320, 321, 342, 343, 344, 345, 348, 351, 353, 354], "call": [1, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 72, 75, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 107, 110, 120, 123, 124, 127, 132, 135, 136, 138, 140, 141, 142, 150, 152, 156, 159, 160, 162, 164, 165, 166, 168, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 206, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 234, 236, 239, 240, 241, 243, 244, 247, 252, 265, 268, 271, 280, 281, 282, 283, 284, 299, 313, 339, 343, 344, 345, 348, 349, 351, 353, 354], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 120, 147, 320, 342, 343, 344, 345, 348, 351, 353], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 38, 40, 41, 52, 53, 54, 57, 68, 71, 73, 74, 86, 87, 90, 104, 105, 106, 110, 111, 112, 142, 147, 150, 154, 155, 156, 157, 164, 166, 188, 191, 192, 193, 195, 197, 204, 205, 209, 213, 214, 222, 229, 231, 232, 233, 239, 243, 287, 290, 291, 292, 293, 295, 296, 297, 298, 313, 314, 331, 332, 337, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 320, 342, 343], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 57, 59, 67, 86, 90, 100, 104, 110, 127, 137, 138, 156, 168, 191, 193, 195, 197, 233, 237, 240, 241, 251, 269, 313, 321, 337, 342, 343, 344, 345, 349, 350, 351, 353, 354], "rand_step": [1, 3, 84, 85, 86, 87, 89, 90, 91, 97, 98, 100, 101, 102, 104, 110, 135, 156, 166, 349, 353, 354], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 342], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 53, 55, 57, 58, 59, 342, 343, 344], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 53, 54, 55, 57, 58, 59, 65, 66, 73, 74, 82, 83, 86, 90, 95, 96, 104, 110, 143, 154, 159, 177, 197, 201, 236, 268, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 308, 335, 338, 342, 343, 344, 345, 349, 351, 353, 354], "pad": [1, 2, 3, 23, 37, 43, 53, 55, 57, 58, 59, 120, 178, 179, 181, 182, 197, 198, 202, 203, 204, 314], "along": [1, 2, 3, 23, 28, 29, 34, 36, 39, 40, 45, 53, 55, 57, 58, 59, 63, 66, 68, 73, 74, 79, 119, 120, 121, 138, 140, 143, 150, 158, 197, 199, 202, 203, 207, 231, 237, 240, 241, 266, 337, 342, 343, 345, 348, 349, 351], "point": [1, 2, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 56, 61, 65, 66, 69, 77, 78, 80, 81, 86, 90, 104, 110, 119, 120, 124, 142, 155, 156, 158, 159, 160, 162, 164, 200, 240, 249, 259, 317, 336, 343, 344, 347, 348, 349, 351, 354], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 66, 73, 74, 90, 143, 154, 176, 202, 203, 229, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 339, 345], "repres": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 55, 84, 85, 86, 90, 104, 110, 111, 112, 133, 143, 166, 188, 202, 203, 214, 231, 232, 238, 239, 241, 276, 281, 314, 342, 344, 345, 348], "valid": [1, 2, 3, 23, 34, 36, 37, 45, 60, 113, 143, 160, 178, 179, 199, 202, 203, 229, 236, 265, 281, 282, 283, 284, 314, 339, 354], "exploration_typ": [1, 13, 14, 16, 17, 18, 19, 20, 21, 313, 335, 342, 343], "strategi": [1, 2, 16, 57, 71, 99, 203, 211, 233, 337, 339, 342, 343, 348, 351], "reset_when_don": [1, 13, 14, 16, 17], "These": [1, 2, 7, 32, 40, 54, 59, 86, 90, 104, 110, 111, 142, 164, 337, 338, 342, 344, 348, 349, 351, 354], "tool": [1, 2, 3, 5, 345, 349, 351, 354], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 86, 89, 90, 104, 110, 114, 116, 339, 342, 344, 345, 349], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 335], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 335], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 136, 138, 140, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 172, 175, 176, 177, 178, 179, 180, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 308, 315, 316, 326, 329, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "multiprocess": [1, 2, 3, 18, 19, 20, 52, 59, 87, 88, 166, 342, 343, 344, 345, 348, 349, 350, 354], "synchron": [1, 13, 19, 21, 101, 331, 332, 343, 344], "mode": [1, 6, 13, 14, 16, 17, 18, 19, 20, 21, 32, 86, 90, 101, 104, 110, 125, 128, 155, 160, 166, 169, 173, 174, 186, 193, 194, 197, 211, 219, 220, 221, 237, 241, 266, 313, 342, 343, 345, 348, 353, 354], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 73, 74, 195, 229, 236, 311, 315, 342, 343, 348], "folder": [1, 2, 111, 343], "sub": [1, 2, 3, 13, 14, 17, 18, 19, 20, 21, 52, 57, 66, 73, 86, 90, 104, 110, 143, 242, 243, 308, 317, 337, 342, 343, 344, 347, 353, 354], "all": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 87, 89, 90, 91, 92, 100, 104, 105, 106, 110, 111, 112, 113, 119, 120, 123, 124, 125, 126, 128, 131, 136, 137, 138, 142, 150, 152, 156, 157, 159, 160, 162, 164, 166, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 240, 241, 243, 244, 247, 261, 266, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 312, 317, 320, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354], "variou": [1, 2, 3, 193, 197, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 274, 279, 300, 331, 332, 342, 343, 344, 348, 351, 354], "machin": [1, 2, 7, 18, 19, 20, 32, 56, 94, 348], "One": [1, 2, 4, 8, 31, 33, 45, 82, 83, 120, 147, 162, 211, 229, 240, 244, 272, 276, 304, 342, 343, 351, 354], "wonder": 1, "why": [1, 2, 3, 349, 354], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 86, 90, 101, 105, 106, 107, 110, 330, 335, 342, 343, 344, 347, 353, 354], "instead": [1, 4, 7, 8, 11, 27, 32, 57, 86, 90, 104, 110, 132, 156, 160, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 250, 252, 254, 257, 258, 259, 264, 265, 268, 269, 270, 271, 279, 281, 285, 289, 333, 337, 349, 351, 354], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 52, 53, 55, 57, 58, 59, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 124, 125, 126, 128, 142, 147, 151, 155, 156, 158, 159, 160, 162, 164, 165, 191, 194, 195, 199, 204, 216, 220, 221, 240, 243, 249, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 319, 331, 332, 333, 337, 338, 342, 343, 344, 345, 347, 348, 349, 350, 351, 354], "lower": [1, 2, 3, 21, 25, 123, 166, 215, 216, 244, 344, 349], "io": [1, 52, 57, 95, 96, 101, 195, 196], "footprint": [1, 2, 351], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 75, 86, 90, 94, 99, 104, 105, 106, 110, 120, 123, 132, 142, 145, 157, 160, 164, 166, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 238, 239, 240, 244, 247, 249, 258, 269, 270, 271, 273, 280, 285, 300, 317, 333, 337, 338, 342, 343, 344, 345, 348, 349, 351, 353, 354], "commun": [1, 2, 3, 104, 336, 344, 354], "yet": [1, 82, 83, 95, 96, 350], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 53, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 107, 110, 111, 112, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 172, 176, 188, 214, 216, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 326, 337, 342, 343, 344, 345, 347, 348, 353], "plai": [1, 3, 105, 106, 120, 343, 344, 351, 354], "role": [1, 3, 343, 354], "opposit": 1, "direct": [1, 2, 32, 86, 90, 104, 110, 191, 195, 266, 343], "sinc": [1, 2, 3, 4, 5, 7, 32, 35, 38, 41, 42, 52, 59, 74, 86, 90, 104, 105, 106, 107, 110, 168, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 231, 232, 233, 234, 236, 238, 239, 244, 247, 342, 343, 344, 345, 349, 350, 351, 353, 354], "faster": [1, 2, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 58, 59, 101, 281, 282, 283, 284, 345, 348], "share": [1, 3, 6, 8, 34, 36, 39, 62, 63, 64, 75, 76, 79, 87, 104, 110, 166, 193, 197, 204, 205, 226, 227, 228, 250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 333, 335, 337, 344, 345, 347, 348, 353, 354], "among": [1, 3, 105, 106, 348], "achiev": [1, 2, 3, 4, 32, 86, 90, 94, 104, 110, 155, 176, 314, 339, 342, 343, 344, 345, 348, 349, 354], "prohibit": [1, 3], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 57, 313, 338, 342, 344, 348, 351, 354], "gpu": [1, 7, 8, 32, 62, 63, 79, 86, 90, 94, 104, 110, 342, 344, 345, 348, 354], "nativ": [1, 7, 9, 55, 86, 90, 104, 110, 120, 300, 345, 351], "driver": [1, 7], "practic": [1, 2, 3, 4, 5, 8, 52, 194, 220, 221, 249, 336, 342, 343, 344, 345, 348, 350, 354], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 41, 52, 65, 66, 77, 82, 83, 90, 138, 166, 177, 186, 189, 191, 193, 195, 197, 198, 201, 219, 229, 237, 241, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 337, 338, 342, 343, 344, 348, 349, 351, 353, 354], "keyword": [1, 2, 3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 54, 55, 57, 58, 59, 60, 66, 71, 73, 74, 76, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 123, 124, 142, 151, 156, 158, 159, 160, 162, 164, 193, 197, 202, 203, 225, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 244, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 271, 273, 275, 279, 281, 282, 283, 284, 285, 289, 307, 330, 342, 343, 344, 348, 351, 353, 354], "build": [1, 3, 7, 23, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 91, 92, 95, 96, 101, 104, 107, 110, 111, 112, 147, 166, 177, 193, 197, 201, 235, 237, 241, 317, 324, 325, 327, 328, 337, 339, 344, 345, 348, 349, 350, 353, 354], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 86, 90, 100, 104, 110, 124, 127, 138, 142, 156, 159, 160, 162, 164, 175, 177, 188, 189, 191, 195, 201, 214, 218, 225, 231, 232, 233, 236, 239, 240, 241, 242, 243, 245, 249, 253, 254, 256, 280, 281, 282, 283, 284, 285, 287, 309, 313, 329, 337, 339, 342, 343, 344, 348, 349, 354], "mani": [1, 3, 4, 38, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107, 250, 252, 258, 265, 268, 269, 273, 337, 342, 343, 344, 348, 349, 351, 354], "eg": [1, 2, 3, 11, 34, 36, 39, 62, 63, 64, 75, 76, 79, 84, 85, 86, 89, 90, 91, 92, 94, 104, 107, 110, 127, 154, 160, 204, 230, 300], "gymnasium": [1, 3, 5, 11, 86, 89, 90, 91, 97, 98, 104, 110, 114, 116, 130, 151, 154, 165, 343, 344, 349, 353], "other": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 42, 45, 52, 53, 55, 57, 58, 59, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 79, 86, 89, 90, 91, 100, 104, 110, 123, 126, 127, 144, 151, 158, 162, 166, 191, 193, 197, 207, 208, 230, 232, 233, 239, 241, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 314, 326, 331, 332, 337, 339, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "warn": [1, 3, 229, 233, 234, 236, 343], "quickli": [1, 3, 343, 348, 354], "becom": [1, 3, 4, 21, 191, 195, 348, 354], "quit": [1, 3, 52, 104, 337, 342, 343, 344, 348, 354], "annoi": [1, 3], "By": [1, 2, 3, 33, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 107, 110, 111, 112, 223, 241, 266, 313, 333, 342, 350, 351, 354], "filter": [1, 2, 3, 4, 45, 250, 251, 253, 257, 258, 264, 268, 269, 271], "out": [1, 2, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 53, 57, 86, 90, 104, 105, 106, 110, 156, 168, 191, 192, 195, 202, 203, 206, 207, 225, 230, 231, 232, 236, 237, 238, 239, 240, 241, 277, 278, 339, 342, 343, 344, 345, 348, 349, 351, 353, 354], "If": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 71, 72, 73, 74, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 94, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 114, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 136, 137, 138, 142, 143, 146, 147, 150, 151, 155, 156, 157, 158, 159, 160, 162, 164, 166, 175, 176, 178, 179, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 223, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 295, 296, 297, 298, 304, 307, 312, 314, 317, 319, 321, 326, 329, 333, 336, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354], "still": [1, 2, 3, 9, 57, 82, 83, 86, 90, 95, 96, 104, 110, 229, 265, 266, 342, 343, 345, 347, 349, 351, 354], "wish": [1, 3, 13, 14, 17, 57, 116, 351], "displai": [1, 3, 7, 317, 339, 342, 343, 348, 349], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 121, 124, 125, 128, 129, 130, 132, 135, 136, 137, 138, 140, 142, 143, 144, 145, 147, 149, 151, 154, 156, 158, 159, 160, 161, 162, 164, 166, 168, 175, 176, 177, 178, 179, 181, 188, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 213, 214, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 290, 291, 292, 293, 295, 296, 297, 298, 307, 310, 311, 313, 314, 315, 317, 326, 333, 337, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "central": [2, 204, 342, 343, 348, 351], "part": [2, 4, 8, 32, 40, 52, 54, 55, 57, 58, 59, 82, 86, 90, 95, 104, 110, 119, 138, 147, 150, 193, 197, 245, 308, 333, 342, 344, 345, 349, 354], "algorithm": [2, 3, 8, 9, 13, 14, 100, 133, 250, 268, 269, 270, 271, 308, 322, 335, 338, 339, 342, 343, 344, 345, 348, 350, 351, 353], "implement": [2, 3, 9, 11, 16, 32, 75, 86, 90, 101, 104, 110, 124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 166, 178, 191, 192, 193, 194, 195, 196, 197, 219, 220, 221, 250, 251, 255, 256, 257, 264, 266, 267, 268, 271, 326, 337, 339, 342, 343, 344, 345, 349, 353], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 53, 57, 59, 72, 74, 82, 83, 86, 87, 90, 94, 95, 96, 104, 110, 120, 136, 142, 145, 162, 165, 166, 168, 177, 197, 198, 204, 205, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "give": [2, 3, 7, 41, 54, 86, 90, 100, 104, 110, 120, 336, 338, 342, 343, 348, 349, 350, 353], "abil": [2, 266, 349, 351], "panel": [2, 344], "usag": [2, 5, 7, 13, 14, 16, 17, 18, 19, 20, 21, 53, 59, 120, 129, 193, 197, 257, 264, 271, 274, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "includ": [2, 3, 4, 7, 9, 21, 32, 59, 62, 63, 64, 75, 76, 79, 86, 90, 100, 104, 110, 155, 160, 166, 266, 271, 320, 337, 339, 342, 343, 344, 345, 348, 349, 351, 354], "almost": [2, 345], "ani": [2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 101, 104, 105, 106, 110, 111, 112, 117, 132, 142, 143, 147, 160, 162, 166, 168, 176, 178, 179, 185, 199, 207, 230, 240, 241, 242, 243, 250, 251, 253, 254, 256, 257, 258, 264, 266, 268, 269, 270, 271, 273, 281, 305, 317, 336, 342, 343, 344, 348, 349, 351, 353, 354], "physic": [2, 6, 7, 104, 107, 339, 342, 348, 349], "theori": 2, "t": [2, 3, 4, 6, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 57, 65, 66, 72, 86, 87, 89, 90, 101, 102, 104, 110, 120, 125, 128, 129, 142, 146, 147, 155, 157, 164, 166, 168, 175, 191, 195, 231, 236, 240, 272, 281, 282, 283, 284, 285, 287, 307, 317, 319, 333, 336, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "crude": 2, "made": [2, 3, 32, 38, 52, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 236, 254, 279, 342, 343, 345, 348, 350, 351], "replaybuff": [2, 41, 42, 65, 68, 80, 120, 143, 147, 254, 259, 279, 327, 329, 335, 344, 348, 350, 351, 353], "liststorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 351], "veri": [2, 3, 95, 96, 343, 349, 351, 353, 354], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 52, 57, 66, 68, 71, 73, 74, 82, 83, 86, 90, 95, 96, 104, 110, 145, 175, 199, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 276, 279, 337, 339, 342, 344, 345, 348, 349, 351, 354], "complex": [2, 32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 342, 343], "tensor": [2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 135, 138, 140, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 250, 251, 253, 254, 256, 257, 258, 261, 262, 264, 266, 268, 269, 270, 271, 273, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 326, 337, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "contigu": [2, 8, 54, 57, 58, 86, 90, 104, 110, 172, 344, 348, 349, 351, 353, 354], "tensorstorag": [2, 38, 351], "lazytensorstorag": [2, 38, 41, 42, 65, 77, 147, 344, 348, 351], "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 119, 120, 342, 343, 345, 350, 351], "citizen": 2, "pytre": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68], "tupl": [2, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 76, 77, 84, 85, 86, 90, 104, 110, 117, 127, 129, 135, 136, 138, 143, 151, 175, 181, 187, 188, 193, 196, 197, 198, 199, 205, 208, 212, 213, 214, 231, 232, 238, 239, 244, 250, 251, 253, 257, 258, 260, 264, 266, 268, 269, 270, 271, 273, 281, 282, 283, 284, 300, 311, 313, 315, 324, 325, 351], "dictionari": [2, 13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 66, 71, 73, 74, 86, 89, 90, 91, 104, 110, 111, 112, 156, 160, 237, 241, 271, 313, 331, 332, 333, 339, 343, 344, 349, 354], "nest": [2, 3, 26, 28, 32, 34, 36, 38, 39, 48, 62, 63, 68, 79, 86, 89, 90, 91, 104, 110, 120, 154, 157, 176, 281, 282, 283, 284, 285, 339, 343, 344, 348, 349, 351, 353], "construct": [2, 5, 32, 35, 38, 41, 42, 52, 68, 86, 89, 90, 104, 105, 110, 125, 128, 168, 193, 197, 216, 241, 317, 337, 343, 344, 345, 349, 351, 354], "time": [2, 3, 4, 7, 8, 14, 16, 18, 19, 20, 21, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 107, 110, 116, 119, 121, 143, 150, 156, 157, 166, 175, 189, 191, 195, 197, 198, 236, 252, 258, 261, 265, 266, 268, 269, 273, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317, 337, 338, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "wherea": [2, 22, 57, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 127, 266, 339], "ram": [2, 89, 91, 351, 354], "prealloc": [2, 3, 349], "ve": [2, 40, 342, 345], "been": [2, 3, 5, 7, 8, 18, 20, 21, 40, 68, 72, 86, 90, 94, 104, 110, 136, 154, 155, 159, 191, 195, 229, 234, 236, 342, 343, 344, 345, 347, 348, 349, 351, 354], "extend": [2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 73, 74, 76, 77, 78, 80, 81, 119, 147, 314, 339, 342, 343, 344, 345, 348, 350, 351, 353], "here": [2, 3, 4, 7, 8, 9, 10, 58, 59, 84, 85, 86, 90, 94, 104, 105, 106, 110, 120, 307, 337, 338, 342, 343, 344, 345, 348, 349, 351, 353, 354], "start": [2, 3, 4, 5, 13, 21, 45, 59, 66, 73, 74, 87, 99, 175, 312, 342, 343, 348, 349, 351, 354], "replay_buff": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 314, 329, 342, 343, 344, 348, 351], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 119, 120, 123, 129, 130, 135, 136, 138, 140, 142, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 159, 164, 166, 172, 175, 176, 177, 188, 191, 192, 193, 195, 196, 197, 199, 201, 204, 205, 208, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 300, 310, 313, 326, 329, 337, 338, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 120, 147, 343, 345, 348, 350, 351, 353], "10": [2, 7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 62, 63, 65, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 100, 104, 105, 106, 108, 109, 110, 111, 112, 117, 119, 120, 155, 157, 158, 177, 180, 185, 191, 192, 195, 196, 198, 201, 212, 223, 233, 234, 236, 237, 244, 251, 254, 256, 258, 268, 269, 270, 273, 279, 281, 282, 283, 284, 287, 308, 339, 342, 343, 344, 345, 348, 349, 351, 353, 354], "add": [2, 3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 68, 69, 77, 78, 80, 81, 86, 90, 104, 110, 120, 136, 193, 197, 206, 235, 250, 312, 344, 345, 348, 349, 351, 353], "string": [2, 18, 19, 20, 32, 37, 45, 60, 86, 90, 104, 110, 116, 142, 154, 164, 193, 197, 231, 237, 238, 249, 299, 316, 326, 338, 342, 344, 345, 351], "element": [2, 13, 14, 16, 17, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 74, 77, 79, 103, 120, 143, 152, 155, 178, 179, 191, 192, 195, 225, 229, 231, 240, 241, 245, 308, 342, 344, 351, 354], "30": [2, 38, 55, 137, 215, 216, 302, 342, 343, 344, 348, 349, 351], "none": [2, 3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 76, 77, 79, 86, 87, 88, 89, 90, 99, 100, 104, 105, 106, 110, 111, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 132, 134, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 311, 312, 313, 314, 315, 316, 317, 321, 322, 323, 326, 329, 331, 332, 333, 337, 339, 342, 343, 344, 345, 348, 349, 351, 353, 354], "int": [2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 119, 120, 121, 122, 127, 132, 133, 137, 138, 140, 142, 143, 146, 153, 154, 157, 160, 161, 162, 164, 168, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 250, 251, 252, 258, 260, 261, 265, 266, 267, 268, 269, 273, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 308, 309, 310, 313, 314, 317, 319, 326, 327, 331, 332, 333, 349], "tell": [2, 3, 4, 7, 105, 106, 342, 345, 348], "our": [2, 3, 7, 8, 18, 38, 120, 300, 337, 342, 343, 344, 345, 347, 348, 350, 351, 353], "want": [2, 3, 6, 7, 8, 74, 138, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 337, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "far": [2, 40, 194, 220, 221, 349, 354], "restrict": [2, 3, 343, 350, 351, 354], "empti": [2, 3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 86, 90, 103, 104, 110, 125, 128, 142, 144, 157, 160, 162, 164, 304, 342, 349], "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 84, 85, 86, 89, 90, 91, 92, 93, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 117, 120, 124, 127, 129, 130, 136, 138, 140, 142, 144, 145, 147, 150, 151, 154, 155, 156, 158, 159, 160, 162, 164, 172, 177, 178, 179, 181, 182, 185, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 208, 211, 213, 223, 225, 226, 227, 228, 231, 232, 237, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 287, 290, 291, 292, 293, 295, 296, 297, 298, 300, 316, 337, 339, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354], "64": [2, 3, 34, 36, 39, 52, 57, 68, 120, 146, 181, 182, 190, 193, 197, 205, 213, 279, 342, 343, 344, 345, 347, 349, 350, 351, 353, 354], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 55, 57, 58, 59, 60, 62, 63, 65, 66, 73, 74, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 124, 125, 126, 127, 128, 129, 130, 136, 138, 140, 142, 144, 145, 147, 151, 154, 156, 158, 159, 160, 162, 164, 168, 172, 175, 176, 177, 188, 191, 192, 193, 195, 196, 197, 201, 206, 207, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 287, 326, 337, 344, 345, 347, 348, 349, 350, 351, 353, 354], "unit8": 2, "img": 2, "randint": [2, 45, 68, 158, 351], "255": [2, 68, 158, 349, 351], "uint8": [2, 3, 34, 36, 39, 47, 52, 57, 84, 85, 129, 140, 158, 343, 350, 351, 353, 354], "next": [2, 3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 100, 104, 108, 109, 110, 111, 112, 119, 120, 125, 128, 129, 130, 135, 136, 140, 144, 145, 147, 150, 151, 154, 156, 165, 166, 172, 175, 177, 192, 193, 196, 197, 201, 216, 246, 250, 251, 253, 254, 256, 257, 258, 259, 264, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 311, 313, 315, 343, 345, 347, 349, 350, 351, 353, 354], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 57, 59, 60, 86, 87, 90, 94, 104, 105, 110, 111, 112, 120, 142, 159, 160, 162, 165, 166, 172, 175, 178, 179, 181, 182, 183, 184, 185, 190, 193, 197, 199, 200, 204, 205, 230, 241, 254, 259, 269, 271, 279, 300, 314, 321, 322, 323, 329, 331, 332, 337, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "ask": [2, 8, 52, 57, 66, 73, 74, 300, 344, 345, 348, 350, 354], "do": [2, 3, 4, 7, 59, 86, 90, 104, 110, 111, 112, 143, 165, 166, 175, 205, 206, 227, 281, 339, 342, 343, 344, 345, 347, 348, 349, 351, 353, 354], "automat": [2, 3, 5, 59, 62, 63, 68, 79, 86, 89, 90, 91, 104, 105, 106, 110, 125, 128, 138, 165, 178, 225, 237, 337, 342, 344, 348, 349, 351, 353], "hand": [2, 3, 7, 21, 26, 348, 349], "look": [2, 3, 5, 7, 8, 32, 86, 90, 99, 104, 105, 106, 110, 142, 143, 162, 237, 241, 242, 243, 338, 344, 345, 348, 349, 350, 351, 353, 354], "assum": [2, 3, 6, 26, 33, 40, 41, 42, 53, 55, 57, 58, 59, 90, 104, 110, 119, 122, 132, 142, 143, 150, 156, 162, 164, 172, 193, 197, 198, 223, 244, 254, 259, 271, 279, 290, 291, 292, 293, 295, 296, 297, 298, 300, 342, 344, 345, 347, 349], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 53, 72, 84, 85, 86, 89, 91, 92, 156, 194, 213, 220, 221, 342, 345, 348, 349, 351, 353], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 44, 45, 46, 47, 53, 55, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 104, 110, 111, 112, 119, 120, 121, 132, 138, 140, 143, 150, 153, 158, 161, 166, 178, 179, 180, 185, 193, 195, 197, 199, 202, 203, 204, 206, 207, 212, 213, 217, 218, 219, 220, 223, 231, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 333, 337, 342, 343, 344, 345, 348, 349, 351], "leav": [2, 26, 38, 86, 168, 176, 342, 351], "tree": [2, 34, 36, 39, 86, 90, 104, 110, 351], "match": [2, 3, 6, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 84, 85, 86, 87, 89, 90, 91, 92, 104, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 178, 179, 186, 193, 197, 199, 204, 205, 219, 225, 230, 231, 237, 238, 240, 241, 244, 245, 251, 258, 265, 267, 269, 271, 314, 319, 337, 342, 344, 347, 348, 349, 351, 353, 354], "don": [2, 3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 120, 343, 344, 351, 353, 354], "throw": [2, 32, 34, 36, 39, 86, 90, 104, 110, 354], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 125, 128, 129, 130, 140, 144, 145, 147, 151, 154, 156, 159, 175, 176, 177, 185, 188, 193, 197, 201, 213, 214, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 308, 314, 326, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "max": [2, 23, 33, 36, 41, 45, 60, 65, 66, 77, 127, 157, 219, 220, 221, 230, 236, 251, 252, 258, 267, 269, 271, 342, 344, 345, 348], "label": [2, 36, 37, 40, 45, 342, 351], "100": [2, 13, 14, 16, 17, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 82, 83, 86, 90, 95, 96, 104, 110, 123, 129, 138, 147, 152, 154, 204, 232, 300, 309, 329, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "rb_pytre": 2, "dim": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 73, 120, 121, 140, 156, 161, 166, 196, 198, 218, 223, 333, 343, 344, 349, 351], "b": [2, 3, 7, 8, 23, 26, 28, 34, 36, 38, 39, 40, 41, 42, 77, 191, 192, 195, 196, 204, 205, 206, 207, 213, 222, 244, 281, 282, 283, 284, 285, 287, 300, 337, 343, 350, 351], "randn": [2, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 119, 138, 172, 180, 185, 188, 191, 192, 195, 196, 198, 202, 203, 204, 208, 211, 212, 214, 225, 226, 227, 228, 230, 231, 237, 238, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284, 316, 337, 351, 353, 354], "c": [2, 3, 6, 7, 26, 34, 36, 38, 39, 41, 42, 56, 138, 158, 195, 196, 343, 351], "zero": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 42, 44, 45, 46, 47, 53, 63, 73, 74, 79, 86, 90, 104, 110, 119, 121, 125, 127, 128, 138, 144, 147, 172, 175, 177, 191, 192, 193, 195, 196, 197, 198, 202, 203, 205, 213, 222, 233, 234, 236, 239, 247, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 287, 345, 351, 353], "assert": [2, 3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 90, 93, 104, 110, 116, 120, 123, 125, 128, 136, 145, 152, 166, 168, 172, 205, 208, 223, 281, 282, 283, 284, 308, 316, 347, 351, 354], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 79, 140, 178, 179, 199, 205, 342, 349, 350, 351, 353], "ambigu": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "signatur": [2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 338, 342, 349], "deal": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 342, 344, 348, 351], "interpret": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 343], "put": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 90, 111, 112, 166, 307, 333, 337, 343, 344, 345, 349], "slice": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 119], "solv": [2, 4, 9, 10, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 336, 342, 343, 344, 348, 349, 351], "clear": [2, 26, 28, 29, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 94, 104, 110, 309], "cut": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "distinct": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 347], "between": [2, 3, 4, 5, 13, 14, 17, 21, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 74, 86, 90, 104, 110, 111, 112, 127, 137, 148, 160, 168, 178, 179, 191, 193, 197, 199, 204, 205, 232, 237, 241, 250, 252, 253, 256, 257, 258, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 276, 281, 313, 317, 338, 342, 343, 345, 348, 349, 354], "view": [2, 3, 8, 27, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 188, 191, 195, 199, 349, 351, 353, 354], "indic": [2, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 120, 121, 154, 155, 156, 157, 160, 176, 178, 179, 199, 202, 203, 205, 236, 238, 239, 247, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 321, 333, 336, 339, 344, 345, 349, 351, 354], "through": [2, 3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 57, 82, 83, 94, 95, 96, 99, 104, 105, 106, 110, 125, 128, 143, 199, 213, 237, 241, 242, 243, 247, 281, 282, 283, 284, 337, 342, 343, 344, 347, 348, 349, 350, 351, 354], "seri": [2, 7, 8, 33, 61, 69, 77, 78, 80, 81, 110, 137, 159, 300, 337, 338, 342, 343, 344, 348, 351, 354], "collate_fn": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 351, 353], "__init__": [2, 3, 7, 86, 100, 116, 117, 125, 128, 144, 177, 188, 191, 195, 201, 245, 251, 253, 257, 258, 264, 269, 271, 273, 339, 349, 353, 354], "expect": [2, 3, 4, 7, 26, 32, 38, 44, 45, 72, 86, 90, 100, 103, 104, 110, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 168, 191, 192, 193, 195, 196, 197, 204, 205, 232, 236, 240, 243, 250, 251, 252, 253, 254, 256, 257, 258, 264, 265, 266, 268, 269, 270, 271, 273, 279, 321, 336, 337, 338, 339, 342, 344, 345, 348, 349, 351, 354], "major": 2, "worri": [2, 43], "even": [2, 3, 4, 8, 14, 18, 19, 20, 21, 62, 63, 64, 75, 76, 79, 86, 87, 90, 94, 104, 110, 176, 342, 344, 348, 349, 354], "though": [2, 4, 86, 90, 104, 110, 199, 344, 348], "regular": [2, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 65, 71, 86, 90, 104, 110, 160, 214, 232, 238, 239, 240, 241, 259, 319, 335, 339, 342, 343, 351, 354], "too": [2, 7, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 86, 90, 104, 110, 137, 156, 194, 220, 221, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 343, 349, 351, 354], "latter": [2, 18, 19, 20, 32, 53, 86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 268, 331, 332], "inv": [2, 3, 123, 127, 140, 147, 152, 349], "method": [2, 3, 4, 11, 15, 16, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 77, 79, 86, 89, 90, 91, 92, 104, 107, 110, 120, 124, 125, 126, 129, 130, 132, 136, 138, 142, 144, 145, 146, 147, 151, 154, 156, 159, 160, 162, 164, 177, 198, 225, 226, 227, 228, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 285, 299, 330, 338, 339, 340, 343, 344, 345, 349, 351, 354], "obvious": 2, "ignor": [2, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 86, 90, 104, 110, 127, 130, 151, 158, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 281, 351], "preprocess": [2, 45, 52, 54, 343], "multithread": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 101, 102, 351], "thread": [2, 13, 14, 17, 34, 36, 39, 82, 83, 95, 96, 104, 110], "prefetch": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 342, 343, 345, 351], "advis": [2, 54, 354], "benchmark": [2, 3, 9, 83, 95, 96, 348], "techniqu": [2, 8, 343, 351], "real": [2, 5, 57, 241, 338, 345, 349], "life": [2, 129], "adopt": [2, 3, 5, 342, 354], "throughput": [2, 9, 342], "constant": [2, 120, 138, 155, 339, 342, 344, 345, 354], "throughout": [2, 3, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 344, 354], "further": [2, 3, 5, 342, 344], "refin": [2, 57, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279], "sampler": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 143, 254, 259, 279, 342, 344, 348, 351], "coupl": [2, 345, 349, 351], "how": [2, 3, 18, 19, 20, 32, 35, 41, 57, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 250, 252, 263, 265, 268, 300, 302, 317, 336, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "get": [2, 3, 4, 6, 7, 8, 9, 26, 28, 34, 35, 36, 38, 39, 52, 53, 57, 62, 63, 66, 73, 74, 75, 76, 77, 79, 86, 87, 90, 104, 110, 117, 119, 121, 125, 127, 128, 136, 138, 143, 155, 156, 158, 166, 225, 233, 234, 237, 238, 241, 281, 282, 283, 284, 285, 304, 337, 342, 343, 344, 345, 348, 349, 351, 353, 354], "first_elt": 2, "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 21, 22, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 79, 82, 83, 86, 89, 90, 92, 93, 95, 96, 100, 101, 102, 104, 107, 108, 109, 110, 117, 118, 120, 121, 123, 124, 126, 127, 136, 137, 138, 142, 147, 150, 152, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 177, 178, 179, 181, 182, 184, 185, 189, 191, 193, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 211, 215, 216, 219, 220, 221, 223, 225, 229, 230, 232, 233, 234, 236, 239, 240, 243, 244, 247, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 279, 280, 281, 282, 283, 284, 287, 288, 289, 308, 315, 329, 333, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354], "128": [2, 52, 53, 57, 74, 82, 83, 95, 96, 182, 185, 343, 345, 349, 350, 351], "wa": [2, 3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 104, 110, 160, 168, 176, 195, 263, 272, 287, 338, 343, 344, 347, 351, 353], "print": [2, 3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 52, 54, 57, 59, 60, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 120, 121, 125, 126, 127, 128, 135, 138, 144, 145, 147, 150, 154, 156, 157, 158, 166, 172, 175, 176, 178, 179, 185, 188, 193, 199, 202, 203, 204, 205, 208, 211, 214, 225, 226, 227, 228, 230, 231, 233, 234, 236, 238, 240, 243, 245, 266, 326, 329, 337, 339, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 121], "larger": [2, 4, 257, 264], "volum": 2, "due": [2, 3, 5, 350, 351, 354], "serialis": [2, 34, 36, 39], "memorymappedtensor": [2, 34, 36, 45, 52, 62, 302, 350], "well": [2, 3, 8, 21, 32, 35, 37, 38, 41, 42, 71, 75, 86, 90, 104, 110, 195, 215, 216, 266, 285, 342, 343, 345, 350, 351, 353, 354], "specifi": [2, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 105, 106, 110, 111, 112, 125, 126, 128, 150, 153, 155, 161, 177, 195, 240, 241, 266, 272, 307, 337, 342, 344, 345], "file": [2, 6, 7, 8, 34, 36, 39, 52, 53, 54, 55, 57, 58, 59, 111, 299, 300, 302, 339, 341, 343, 351, 352, 353], "locat": [2, 7, 34, 36, 39, 45, 59, 86, 90, 104, 110, 129, 138, 149, 194, 208, 220, 221, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 342, 343, 344, 348, 351], "improv": [2, 4, 133, 250, 338, 348, 351], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 16, 17, 18, 19, 20, 21, 104, 110, 344, 351], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 52, 53, 54, 55, 57, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 94, 104, 110, 117, 120, 147, 150, 157, 166, 176, 233, 234, 237, 241, 265, 266, 268, 342, 343, 345], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 66, 127, 195, 196, 345, 351], "sharabl": [2, 104, 110], "popul": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 135, 156, 342, 344, 345, 349, 351], "collabor": [2, 57], "rather": [2, 4, 76, 145, 342, 343, 344, 348], "incur": [2, 82, 83, 95, 96], "some": [2, 3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 53, 59, 62, 63, 68, 77, 79, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 111, 112, 142, 160, 162, 168, 181, 193, 197, 218, 241, 242, 243, 300, 308, 320, 337, 339, 342, 343, 344, 345, 348, 349, 351, 353, 354], "transmiss": 2, "overhead": [2, 82, 83, 95, 96, 104, 110], "subclass": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 86, 90, 104, 110, 159, 165, 168, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 240, 241, 242, 244, 247, 266, 268, 343, 345, 349, 351], "instanti": [2, 3, 21, 34, 36, 39, 94, 159, 205, 342, 343, 348, 349, 351, 354], "content": [2, 8, 16, 26, 28, 34, 35, 36, 38, 39, 41, 42, 72, 86, 89, 90, 91, 101, 104, 110, 144, 178, 179, 199, 204, 205, 237, 266, 344, 349, 353], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 86, 90, 99, 104, 105, 106, 108, 109, 110, 111, 112, 113, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 172, 188, 208, 225, 226, 227, 228, 231, 237, 238, 240, 241, 243, 244, 245, 246, 271, 279, 313, 335, 337, 338, 342, 343, 344, 345, 350], "writer": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 69, 77, 78, 81, 344], "tensordictroundrobinwrit": [2, 68], "current": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 74, 86, 90, 92, 101, 104, 110, 120, 143, 155, 156, 157, 159, 160, 169, 170, 175, 189, 198, 216, 236, 259, 271, 303, 339, 342, 343, 344, 345, 348, 349, 353, 354], "goe": [2, 4, 105, 106, 342, 344, 348, 354], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 254, 259, 279, 342, 351], "access": [2, 3, 7, 8, 32, 35, 54, 56, 86, 90, 104, 110, 142, 162, 333, 336, 342, 348, 349, 351], "show": [2, 32, 86, 90, 104, 110, 205, 300, 337, 342, 344, 345, 348, 349, 351, 353], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 119, 120, 314, 329, 335, 342, 343, 345, 351], "mp": [2, 18, 19, 20, 87, 166], "def": [2, 3, 11, 22, 32, 38, 86, 87, 90, 100, 104, 110, 116, 117, 125, 128, 144, 177, 188, 191, 192, 195, 196, 201, 237, 245, 251, 253, 257, 258, 264, 266, 269, 271, 273, 339, 342, 343, 347, 348, 349, 351, 353, 354], "updat": [2, 3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 65, 66, 86, 90, 100, 104, 105, 106, 110, 117, 125, 127, 128, 144, 154, 155, 160, 163, 166, 176, 177, 191, 193, 197, 201, 229, 233, 234, 236, 237, 238, 239, 240, 241, 250, 251, 253, 254, 256, 258, 259, 260, 263, 264, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 285, 313, 317, 319, 322, 323, 328, 329, 339, 343, 344, 345, 348, 349, 351, 353, 354], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 97, 98, 104, 110, 117, 119, 121, 125, 126, 127, 128, 135, 136, 138, 147, 150, 156, 158, 160, 166, 175, 177, 188, 193, 197, 200, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 240, 243, 245, 279, 282, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 308, 316, 326, 337, 338, 342, 345, 348, 349, 353, 354], "__name__": [2, 22, 87, 343], "__main__": [2, 22, 87], "21": [2, 57, 58, 74, 104, 105, 106, 110, 343, 344, 347, 349, 350], "proc": 2, "target": [2, 4, 8, 21, 32, 86, 87, 90, 104, 110, 155, 159, 240, 241, 250, 251, 252, 253, 254, 256, 258, 259, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 281, 282, 283, 284, 285, 320, 328, 329, 338, 339, 345, 349], "arg": [2, 12, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 52, 62, 63, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 124, 142, 144, 153, 156, 159, 160, 161, 163, 164, 177, 178, 179, 187, 193, 197, 199, 200, 201, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 307, 310, 314, 317, 333, 343], "join": [2, 87, 335, 343, 344], "now": [2, 3, 7, 35, 104, 120, 205, 342, 343, 344, 345, 347, 348, 350, 351, 354], "length": [2, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 52, 57, 60, 66, 73, 74, 76, 86, 90, 95, 96, 104, 110, 143, 166, 177, 178, 179, 181, 183, 185, 191, 195, 199, 201, 204, 205, 225, 240, 245, 308, 314, 342, 344, 345, 349, 351, 354], "20": [2, 45, 58, 73, 74, 77, 86, 90, 94, 104, 110, 155, 191, 192, 195, 196, 230, 308, 341, 342, 343, 344, 345, 348, 349, 352, 353, 354], "_data": [2, 349], "It": [2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 53, 59, 68, 71, 81, 86, 90, 92, 100, 101, 104, 105, 106, 110, 111, 112, 119, 129, 136, 138, 143, 155, 160, 165, 168, 181, 183, 189, 204, 205, 213, 215, 216, 222, 223, 232, 233, 236, 239, 241, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 280, 281, 307, 313, 326, 336, 337, 338, 342, 343, 345, 348, 349, 350, 351, 353, 354], "difficult": [2, 4, 104], "pai": [2, 8, 342, 345], "attent": [2, 8, 342, 345, 354], "word": [2, 3, 40, 52, 53, 55, 57, 58, 59, 266, 342, 349, 354], "1m": [2, 52, 57, 320, 342, 344, 345, 350], "multidimension": [2, 41, 65, 66, 351], "doe": [2, 3, 18, 34, 35, 36, 39, 41, 45, 52, 53, 57, 65, 66, 75, 76, 81, 86, 90, 104, 110, 111, 112, 185, 191, 192, 193, 195, 196, 197, 206, 223, 230, 242, 243, 250, 252, 259, 265, 268, 280, 317, 337, 339, 342, 343, 344, 345, 349, 351, 354], "howev": [2, 3, 5, 7, 32, 86, 90, 104, 110, 120, 150, 155, 160, 271, 337, 342, 343, 345, 349, 351, 354], "flatten": [2, 34, 36, 39, 132, 314, 345, 348], "capac": [2, 65, 344], "desir": [2, 3, 32, 86, 90, 104, 110, 124, 138, 140, 142, 143, 156, 159, 160, 162, 164, 173, 174, 178, 179, 199, 205, 225, 231, 232, 237, 238, 239, 240, 241, 337, 342, 348, 349], "diversifi": 2, "offer": [2, 3, 7, 82, 83, 86, 90, 95, 96, 104, 110, 337, 342, 343, 349, 354], "accomplish": [2, 168], "slicesampl": [2, 52, 66], "anoth": [2, 3, 8, 34, 36, 39, 57, 86, 89, 90, 91, 94, 104, 110, 125, 126, 128, 156, 159, 199, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 337, 338, 342, 344, 345, 347, 348, 349, 354], "recommend": [2, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 94, 348], "__especially__": 2, "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 52, 54, 120, 168, 251, 256, 257, 264, 307, 339, 350, 351, 353], "convent": [2, 3, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 111, 112, 338, 342, 345, 348, 349], "reshap": [2, 32, 57, 73, 193, 197, 199, 344, 348], "extens": [2, 74, 339, 351], "detail": [2, 3, 5, 6, 7, 32, 86, 90, 104, 105, 106, 110, 158, 160, 188, 191, 195, 232, 250, 259, 268, 336, 343, 347, 351], "independ": [2, 13, 14, 16, 17, 18, 19, 20, 21, 54, 104, 110, 159, 161, 205, 338, 339, 342, 343, 348, 351, 353], "differ": [2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 53, 54, 57, 71, 82, 83, 86, 90, 95, 96, 99, 104, 105, 106, 110, 120, 127, 138, 145, 160, 161, 188, 191, 192, 193, 195, 196, 197, 199, 201, 204, 205, 214, 264, 268, 276, 281, 282, 283, 287, 288, 289, 313, 317, 319, 331, 332, 337, 338, 339, 342, 343, 344, 347, 348, 349, 350, 351, 354], "congruent": 2, "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 57, 58, 59, 60, 62, 63, 65, 68, 79, 84, 85, 86, 89, 90, 91, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 119, 121, 125, 128, 129, 130, 136, 138, 140, 144, 145, 147, 151, 154, 156, 158, 166, 167, 168, 172, 175, 177, 180, 185, 186, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 219, 222, 225, 226, 227, 228, 230, 231, 232, 237, 238, 239, 240, 243, 244, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 308, 314, 317, 329, 337, 342, 343, 344, 345, 347, 348, 350, 351, 353, 354], "custom": [2, 3, 5, 32, 86, 90, 104, 110, 162, 204, 205, 244, 259, 268, 274, 333, 337, 342, 343, 344, 345, 348], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 54, 56, 59, 60, 82, 84, 86, 90, 95, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 127, 130, 145, 150, 151, 154, 160, 162, 165, 176, 193, 197, 231, 238, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 285, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 326, 339, 342, 343, 344, 345, 348, 349, 354], "randomcroptensordict": [2, 342], "note": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 86, 90, 104, 110, 125, 128, 166, 176, 191, 193, 195, 197, 236, 237, 241, 259, 343, 347, 348, 354], "unlik": [2, 72, 111, 112, 259, 268, 343, 353], "stop": [2, 3, 16, 21, 40, 59, 66, 73, 74, 86, 90, 104, 110, 344, 348, 353, 354], "signal": [2, 3, 52, 53, 55, 57, 58, 59, 66, 73, 74, 90, 111, 112, 120, 129, 154, 157, 176, 338, 342, 344, 348, 351, 354], "isn": [2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 57, 65, 129, 168, 231, 240, 348], "separ": [2, 4, 8, 13, 14, 17, 18, 20, 21, 23, 52, 54, 142, 164, 251, 253, 256, 258, 269, 271, 273, 342, 343, 348, 351, 354], "save": [2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 165, 299, 300, 302, 307, 317, 339, 348], "disk": [2, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 317, 339, 342, 343, 345, 351], "dump": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 299, 300], "load": [2, 6, 7, 13, 14, 16, 17, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 68, 85, 86, 90, 104, 110, 116, 166, 333, 339, 342, 344, 351], "json": 2, "metadata": [2, 52, 53, 344, 348, 354], "cannot": [2, 3, 4, 7, 22, 26, 27, 28, 31, 33, 64, 66, 73, 74, 86, 89, 90, 91, 94, 104, 110, 125, 128, 143, 150, 238, 343, 344, 345, 348, 349], "anticip": [2, 125, 128], "compli": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 57], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 53, 165, 168, 225, 231, 232, 237, 238, 239, 240, 241, 344, 348, 349, 351], "exact": [2, 3, 104, 195], "statu": [2, 3, 86], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 44, 46, 47, 49, 68, 86, 90, 100, 104, 105, 106, 110, 111, 113, 119, 120, 129, 136, 154, 155, 159, 160, 165, 166, 178, 179, 202, 203, 204, 205, 229, 231, 237, 238, 241, 244, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 300, 317, 329, 339, 342, 343, 344, 345, 348, 349, 350, 351, 354], "prioriti": [2, 4, 35, 41, 42, 62, 63, 64, 65, 66, 75, 76, 79, 253, 254, 256, 257, 258, 259, 264, 269, 271, 273, 279, 339, 342, 343, 351], "heap": 2, "under": [2, 3, 4, 21, 32, 40, 52, 53, 54, 55, 57, 58, 59, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 225, 231, 232, 237, 238, 239, 240, 241, 266, 281, 282, 283, 284, 285, 300, 338, 342, 343, 349, 354], "hood": [2, 21, 52, 349], "just": [2, 3, 4, 11, 76, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 123, 176, 205, 308, 337, 339, 342, 343, 344, 345, 348, 349, 351, 353, 354], "public": [2, 56, 142, 164], "serializ": 2, "altern": [2, 4, 27, 101, 185, 202, 203, 204, 249, 342, 344, 348], "state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 86, 90, 104, 110, 160, 166, 271, 333, 339, 342, 343, 354], "load_state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 86, 90, 104, 110, 160, 166, 271, 339, 342], "drawback": 2, "struggl": 2, "big": [2, 344, 351, 354], "sequenti": [2, 9, 32, 86, 90, 104, 110, 119, 136, 242, 243, 268, 337, 344, 345, 348, 349, 350, 354], "consist": [2, 3, 32, 35, 38, 41, 42, 54, 57, 86, 90, 104, 110, 136, 165, 179, 199, 342, 343, 344, 349, 350, 354], "known": [2, 3, 5, 7, 8, 288, 289, 342, 343], "seamless": [2, 199], "integr": [2, 32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 184, 193, 197, 201, 240, 337, 348, 349, 350], "within": [2, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 57, 86, 90, 104, 107, 110, 120, 125, 128, 129, 154, 165, 166, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 254, 259, 279, 337, 343, 349, 353], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 342, 343], "essenti": [2, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 343, 349, 351], "understand": [2, 3, 8, 342, 343, 348], "purpos": [2, 3, 7, 86, 90, 104, 110, 120, 191, 329, 342, 344, 345, 348, 350, 354], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 57, 237, 241, 342, 344, 348, 349, 354], "guid": [2, 105, 106, 108, 109, 155, 336, 342, 348], "explan": [2, 32, 86, 90, 104, 110], "effect": [2, 3, 26, 32, 52, 57, 66, 68, 71, 73, 74, 86, 90, 104, 110, 120, 160, 317, 342, 351, 354], "realm": 2, "As": [2, 3, 4, 52, 86, 90, 99, 104, 105, 106, 110, 147, 241, 281, 337, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "practition": 2, "often": [2, 3, 8, 263, 317, 342, 343, 349, 351, 354], "encount": [2, 4, 57, 336, 343, 349], "situat": 2, "sometim": [2, 3, 345, 354], "discard": [2, 3, 45, 53, 55, 90, 162, 175, 299, 351, 354], "variabl": [2, 4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 54, 55, 58, 59, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 102, 103, 107, 111, 112, 191, 192, 193, 195, 196, 197, 201, 226, 227, 228, 266, 269, 339, 343], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 53, 55, 57, 58, 59, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 175, 180, 181, 182, 183, 184, 185, 188, 193, 197, 198, 204, 209, 210, 212, 214, 215, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 245, 246, 250, 251, 252, 253, 254, 256, 257, 258, 261, 264, 265, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 326, 329, 337, 339, 343, 344, 345, 347, 348, 349, 351, 353, 354], "immedi": [2, 26, 28, 32, 86, 90, 104, 110, 280, 348], "200": [2, 13, 14, 16, 21, 32, 52, 86, 89, 90, 91, 104, 110, 111, 112, 147, 181, 182, 189, 215, 216, 342, 345, 349], "199": [2, 349], "4": [2, 3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 74, 82, 83, 84, 85, 86, 90, 95, 96, 97, 98, 99, 100, 102, 104, 108, 109, 110, 117, 120, 129, 147, 154, 155, 166, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 192, 195, 196, 198, 199, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 299, 337, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "info": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 71, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 108, 109, 110, 111, 112, 162, 165, 167, 307, 348, 351], "At": [2, 200, 233, 343, 344, 345, 347, 349, 350], "glanc": 2, "seem": [2, 342, 345], "togeth": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 86, 90, 99, 104, 105, 106, 110, 120, 143, 191, 193, 195, 197, 222, 226, 227, 228, 246, 337, 343, 345], "suggest": [2, 279, 342, 348], "less": [2, 101, 223, 331, 332, 338, 344, 345, 351, 353], "must": [2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 52, 54, 55, 57, 58, 59, 60, 62, 63, 64, 66, 73, 74, 75, 76, 79, 82, 86, 87, 90, 95, 104, 105, 106, 107, 110, 111, 120, 123, 129, 133, 136, 138, 140, 151, 155, 156, 157, 160, 161, 166, 178, 179, 188, 193, 197, 199, 202, 203, 204, 205, 214, 225, 231, 232, 237, 238, 239, 240, 241, 244, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326, 342, 343, 344, 345, 347, 349, 351, 353], "omit": [2, 312, 344, 349, 351], "last": [2, 3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 53, 72, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 119, 132, 138, 143, 155, 157, 158, 178, 179, 191, 193, 195, 197, 198, 199, 202, 203, 209, 217, 223, 229, 230, 233, 241, 343, 344, 345, 348, 349, 350, 351, 353, 354], "without": [2, 3, 7, 9, 32, 40, 52, 53, 57, 73, 74, 86, 90, 104, 110, 111, 112, 117, 125, 128, 158, 191, 192, 195, 196, 227, 228, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 285, 329, 336, 337, 342, 343, 344, 348, 349, 351, 354], "proper": [2, 3, 4, 6, 7, 281, 282, 283, 284, 343, 344, 348, 351], "imposs": [2, 168, 250, 252, 265, 268, 270], "determin": [2, 34, 35, 36, 39, 41, 53, 65, 66, 86, 90, 104, 110, 111, 112, 142, 164, 204, 236, 343, 348], "correspond": [2, 3, 4, 13, 14, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 54, 57, 59, 65, 66, 86, 90, 100, 104, 110, 142, 156, 160, 164, 166, 193, 195, 197, 202, 203, 233, 234, 236, 237, 241, 254, 257, 258, 271, 279, 281, 282, 283, 284, 285, 342, 343, 344, 348, 349, 350], "complic": [2, 349, 351, 354], "matter": 2, "inconsist": [2, 354], "miss": [2, 3, 4, 6, 7, 11, 26, 32, 86, 90, 104, 110, 160, 175, 242, 243, 271, 336, 342, 345], "behavior": [2, 4, 32, 86, 90, 104, 110, 160, 257, 264, 345, 348, 349], "primari": 2, "elimin": [2, 3], "represent": [2, 28, 29, 32, 86, 90, 104, 110, 142, 162, 164, 342, 349, 350, 354], "built": [2, 3, 5, 7, 68, 82, 83, 89, 95, 96, 103, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279, 327, 329, 330, 333, 342, 343, 344, 345, 351, 354], "upon": [2, 8, 349], "canon": 2, "definit": [2, 33, 75, 204], "markov": [2, 3, 354], "decis": [2, 3, 180, 212, 230, 255, 267, 345, 348, 351, 354], "mdp": [2, 349], "context": [2, 3, 5, 8, 32, 86, 87, 90, 103, 104, 110, 156, 161, 205, 206, 230, 277, 278, 281, 282, 283, 284, 286, 294, 300, 313, 337, 338, 342, 343, 344, 348, 349, 350, 351], "condit": [2, 45, 155, 231, 232, 238, 239, 249, 342, 349, 351], "complet": [2, 7, 9, 72, 90, 120, 154, 336, 338, 342, 344, 347], "termin": [2, 3, 7, 32, 40, 52, 53, 55, 57, 58, 59, 84, 85, 86, 89, 90, 91, 95, 96, 104, 105, 106, 108, 109, 110, 111, 112, 129, 144, 176, 177, 193, 197, 201, 242, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "truncat": [2, 3, 13, 14, 16, 17, 37, 43, 45, 52, 53, 55, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 104, 105, 106, 110, 111, 112, 129, 130, 137, 144, 147, 154, 176, 193, 197, 221, 287, 342, 344, 345, 347, 350, 351, 353, 354], "reward": [2, 3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 52, 55, 57, 58, 59, 60, 65, 66, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 117, 118, 123, 124, 125, 126, 128, 129, 130, 136, 140, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 159, 160, 161, 163, 164, 166, 172, 175, 177, 193, 201, 230, 246, 250, 251, 253, 254, 256, 257, 258, 261, 264, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 310, 311, 313, 315, 333, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "imit": [2, 3], "addit": [2, 3, 4, 32, 53, 86, 90, 104, 110, 111, 124, 142, 156, 159, 160, 162, 164, 191, 229, 230, 240, 249, 266, 281, 338, 342, 343, 348, 351], "inform": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 43, 57, 86, 87, 90, 93, 104, 110, 178, 179, 199, 205, 338, 339, 342, 343, 344, 345, 348, 349, 351], "stateless": [2, 3, 86, 90, 104, 110, 159, 266, 342, 349, 354], "simul": [2, 3, 5, 7, 8, 82, 83, 92, 95, 96, 107, 111, 112, 115, 177, 201, 337, 342, 344, 348], "furthermor": [2, 348], "certain": [2, 4, 18, 19, 20, 21, 32, 45, 86, 90, 104, 110, 116, 133, 154, 160, 192, 196, 233, 265, 337, 342, 343, 344, 348, 354], "scenario": [2, 104, 111, 112, 342, 348, 349], "organ": [2, 349, 351], "composit": [2, 3, 26, 28, 71, 76, 81, 86, 90, 104, 110, 300, 344, 349], "accommod": [2, 3], "uniform": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 65, 66], "unambigu": 2, "distinguish": [2, 111, 112], "happen": [2, 3, 86, 90, 104, 110, 229, 343, 350, 354], "limit": [2, 40, 86, 90, 100, 104, 110, 120, 136, 342, 343, 345, 348, 349], "everyth": [2, 343, 344, 345], "belong": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 57, 165, 166, 337, 342, 348], "rule": [2, 104, 125, 128, 241, 337, 344], "entri": [2, 3, 13, 14, 17, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 53, 54, 55, 56, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 111, 112, 120, 122, 123, 125, 128, 129, 132, 135, 138, 140, 142, 145, 147, 150, 152, 154, 155, 156, 164, 166, 175, 176, 193, 202, 203, 230, 231, 238, 239, 251, 271, 281, 282, 283, 284, 337, 342, 344, 345, 348, 349, 350, 351, 354], "field": [2, 3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 52, 55, 57, 58, 59, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 125, 128, 129, 130, 140, 144, 145, 147, 151, 154, 156, 160, 175, 177, 188, 193, 197, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 321, 326, 336, 337, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "taken": [2, 3, 86, 90, 104, 110, 146, 202, 203, 234, 338, 342, 344, 345, 348, 349], "is_shar": [2, 3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 52, 55, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 125, 128, 129, 130, 140, 144, 145, 147, 151, 154, 156, 166, 175, 177, 188, 193, 197, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 326, 337, 344, 345, 347, 348, 349, 350, 351, 353, 354], "brought": [2, 344, 345], "step_mdp": [2, 3, 193, 197, 335, 345, 349, 353, 354], "count": [2, 3, 86, 87, 154, 236, 313, 317, 320, 342, 343, 344, 345, 351, 354], "trigger": [2, 7], "partial": [2, 3, 86, 90, 104, 110, 119, 120, 155, 156, 157, 317, 345], "turn": [2, 18, 19, 20, 21, 34, 36, 39, 134, 161, 165, 231, 313, 338, 342, 343, 345, 349, 350], "retain": 2, "regard": [2, 53, 59, 188, 232, 250, 259, 268, 342, 344, 349], "posit": [2, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 90, 104, 110, 132, 133, 153, 154, 157, 160, 161, 208, 271, 338, 344, 348, 349, 351], "both": [2, 3, 7, 32, 57, 86, 87, 89, 90, 104, 105, 106, 110, 120, 145, 160, 176, 178, 179, 193, 196, 197, 199, 204, 205, 226, 227, 228, 232, 239, 250, 252, 253, 257, 258, 264, 265, 266, 268, 269, 270, 271, 273, 313, 337, 342, 344, 348, 349, 350, 351, 354], "ensur": [2, 3, 32, 35, 41, 65, 66, 72, 86, 90, 104, 110, 120, 142, 154, 162, 166, 231, 337, 343, 344, 349, 351], "clearli": 2, "mark": [2, 3, 16, 59, 86, 90, 104, 110, 193, 197], "identifi": [2, 37], "marl": [2, 99, 113, 120, 157, 204, 348], "abov": [2, 3, 7, 32, 86, 90, 104, 110, 194, 220, 221, 249, 338, 339, 342, 344, 348, 349, 354], "output": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 118, 120, 123, 124, 125, 126, 128, 130, 136, 138, 142, 144, 145, 150, 151, 154, 157, 159, 162, 164, 165, 168, 176, 178, 179, 180, 181, 182, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 214, 223, 225, 226, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 300, 308, 337, 338, 342, 343, 344, 345, 347, 348, 349, 350, 353, 354], "typic": [2, 3, 4, 8, 32, 86, 90, 104, 110, 129, 155, 237, 251, 266, 268, 271, 337, 338, 339, 344, 348, 349], "adjust": [2, 342, 348, 349], "grumodul": [2, 119], "lstmmodul": [2, 345], "skip": [2, 32, 52, 86, 90, 104, 110, 133, 160, 168, 237, 241, 266, 271, 281, 282, 283, 284, 299, 300, 310, 313, 342, 343, 349], "accumul": [2, 8], "upcom": [2, 266, 290, 291, 292, 293, 295, 296, 297, 298, 342], "n": [2, 3, 6, 7, 24, 27, 32, 33, 40, 86, 90, 104, 110, 120, 127, 132, 161, 191, 192, 195, 201, 236, 241, 250, 258, 266, 280, 314, 337, 339, 343, 345, 348, 351, 354], "popular": [2, 3, 337, 345, 348], "rainbow": 2, "multistep": [2, 13, 14, 16, 17, 18, 19, 20, 21, 335, 343], "fail": [2, 7, 22, 26, 28, 104, 117, 168], "shift": [2, 32, 247, 281, 282, 283, 284, 344], "naiv": [2, 162], "consum": [2, 72, 74, 343, 344, 348, 351], "approxim": [2, 348, 354], "twice": [2, 8], "flat": 2, "would": [2, 3, 32, 40, 86, 90, 104, 110, 191, 193, 195, 197, 199, 204, 339, 343, 344, 345, 349, 351, 354], "intens": [2, 3, 8], "ataridqnexperiencereplai": [2, 335], "onlin": [2, 8, 13, 17, 120, 185, 212, 250, 255, 267, 268, 308, 333, 344, 345, 348, 351], "2x": 2, "small": [2, 162, 342, 344, 348, 354], "clearer": 2, "lazi": [2, 28, 29, 49, 50, 86, 90, 104, 110, 111, 112, 142, 162, 178, 206, 242, 243, 342, 343, 347, 351, 354], "certainli": 2, "benefici": 2, "welcom": 2, "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 165, 208, 223, 229, 230, 234, 236, 241, 246, 281, 305, 306, 307, 333, 335, 344, 345, 348, 350, 354], "around": [2, 5, 7, 15, 17, 41, 42, 100, 241, 281, 342, 343, 348, 354], "selecttransform": [2, 86, 90, 104, 110], "excludetransform": [2, 58, 151, 351], "promptli": 2, "virtual": [2, 3, 89], "instal": [2, 3, 5, 10, 18, 19, 20, 53, 56, 86, 90, 104, 105, 106, 108, 109, 110, 302, 317, 336, 342, 344, 345, 348, 354], "respons": [2, 3, 8, 317, 354], "d4rl": [2, 53, 59], "repositori": [2, 7, 54, 55, 56, 59, 112], "wheel": [2, 344], "publish": 2, "openml": [2, 56, 103], "scikit": [2, 56, 103], "panda": [2, 56], "customari": [2, 337], "moreov": [2, 3], "fine": [2, 86, 90, 104, 110, 136, 350], "grain": [2, 86, 90, 104, 110], "nomenclatur": 2, "compact": 2, "propos": [2, 120, 129, 200, 263, 272, 326, 337, 345, 351], "replaybufferensembl": [2, 52, 71, 76, 81], "primit": [2, 3, 4, 57, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273], "onc": [2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 57, 68, 86, 90, 104, 110, 147, 160, 229, 234, 236, 315, 339, 343, 344, 345, 349, 351, 354], "individu": [2, 4, 18, 19, 20, 21, 32, 45, 68, 86, 90, 104, 110, 342, 348], "dummi": [2, 326, 342, 354], "semant": [2, 28, 29, 337], "ident": [2, 3, 13, 14, 16, 32, 34, 36, 39, 101, 104, 110, 129, 204, 205, 281, 282, 283, 284, 331, 332, 343, 348, 351], "another_kei": [2, 68], "renam": [2, 34, 36, 39, 68, 145, 147, 175, 342], "resiz": [2, 3, 59, 68, 120, 343, 345, 351, 354], "imag": [2, 4, 7, 57, 122, 142, 158, 164, 199, 300, 342, 343, 348, 350, 354], "comops": 2, "totensorimag": [2, 3, 59, 68, 120, 146, 343, 345, 351, 353, 354], "renametransform": [2, 68, 86, 90, 104, 110], "rb0": [2, 68], "in_kei": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 53, 68, 82, 83, 86, 90, 100, 104, 110, 118, 119, 120, 121, 122, 123, 125, 127, 128, 132, 134, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 155, 157, 158, 159, 160, 162, 164, 166, 177, 187, 193, 197, 201, 213, 222, 223, 225, 226, 227, 228, 230, 231, 237, 238, 240, 241, 243, 244, 245, 250, 251, 252, 253, 254, 256, 257, 258, 264, 265, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 299, 300, 326, 329, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "pixel": [2, 3, 7, 26, 59, 68, 84, 85, 89, 91, 92, 107, 120, 122, 129, 132, 134, 138, 140, 142, 146, 158, 162, 164, 181, 209, 210, 300, 326, 337, 342, 343, 345, 350, 351, 353, 354], "32": [2, 22, 26, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 108, 109, 111, 112, 178, 179, 180, 181, 182, 185, 190, 199, 204, 205, 209, 210, 212, 213, 222, 279, 342, 343, 344, 345, 349, 350, 351, 353, 354], "rb1": [2, 68], "p": [2, 4, 68, 71, 87, 108, 109], "5": [2, 3, 24, 26, 28, 35, 38, 41, 42, 52, 68, 73, 74, 87, 95, 96, 101, 108, 109, 111, 112, 119, 147, 154, 155, 177, 178, 179, 188, 189, 191, 194, 195, 198, 199, 201, 204, 205, 209, 214, 220, 221, 230, 231, 238, 244, 265, 268, 270, 273, 337, 342, 343, 348, 349, 351, 353, 354], "33": [2, 26, 32, 68, 86, 90, 104, 110, 178, 179, 199, 342, 343, 349], "out_kei": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 68, 82, 83, 86, 90, 100, 104, 110, 118, 119, 120, 121, 122, 123, 125, 128, 132, 134, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 155, 157, 158, 159, 162, 164, 166, 177, 187, 188, 193, 197, 201, 213, 214, 222, 223, 225, 226, 227, 228, 230, 232, 237, 238, 239, 240, 241, 243, 244, 245, 250, 251, 252, 257, 258, 264, 265, 268, 269, 270, 271, 279, 281, 282, 283, 284, 300, 313, 329, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "pixels33": [2, 68], "data0": [2, 68], "244": [2, 68, 142, 164, 349, 351], "data1": [2, 68], "_": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 87, 94, 111, 112, 121, 125, 127, 128, 136, 138, 145, 158, 166, 225, 240, 245, 249, 250, 251, 253, 257, 258, 264, 268, 269, 271, 273, 281, 282, 283, 284, 302, 342, 343, 344, 345, 348, 349, 351, 353], "rang": [2, 3, 4, 8, 11, 27, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 86, 87, 90, 104, 110, 147, 158, 166, 192, 196, 265, 273, 338, 339, 342, 344, 345, 348, 349, 351, 353], "parent": [2, 3, 21, 26, 28, 44, 68, 76, 81, 86, 90, 104, 110, 120, 121, 124, 126, 129, 132, 133, 138, 142, 150, 154, 155, 156, 157, 159, 161, 162, 226, 266, 268, 285, 342, 349, 353, 354], "basic": [2, 100, 337, 344, 354], "properti": [2, 3, 32, 34, 36, 39, 86, 90, 100, 104, 110, 159, 160, 186, 194, 206, 211, 219, 220, 221, 266, 271, 349, 351], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 86, 90, 100, 103, 104, 105, 106, 110, 111, 112, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 175, 176, 178, 179, 181, 182, 183, 184, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 206, 207, 214, 215, 216, 217, 218, 223, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 311, 315, 320, 329, 337, 338, 339, 342, 343, 344, 345, 348, 349, 353, 354], "send": [2, 3, 8, 307, 353], "receiv": [2, 3, 32, 40, 86, 90, 104, 110, 159, 199, 287, 338, 342, 344, 347, 349], "spawn": [2, 3, 4, 18, 22, 94, 101, 343, 348], "check_env_spec": [2, 3, 90, 104, 144, 335, 344, 348, 349], "saniti": [2, 3, 7, 168, 344], "utmost": 2, "commonli": [2, 66, 73, 74, 354], "emploi": [2, 207], "languag": [2, 40], "scarc": 2, "address": [2, 351], "subdomain": 2, "facilit": [2, 3, 7, 141, 142, 162, 164, 226, 227, 228, 337, 342, 345, 349], "extern": [2, 3, 125, 128, 354], "token": [2, 36, 37, 40, 43, 45, 60], "manner": [2, 90, 142, 162, 337, 342, 343, 344, 347, 349, 351], "handl": [3, 21, 32, 86, 90, 104, 110, 165, 166, 197, 199, 317, 331, 332, 342, 343, 344, 348, 351], "dm": [3, 342, 354], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 57, 70, 77, 78, 80, 82, 83, 86, 90, 94, 95, 96, 100, 101, 102, 104, 110, 111, 147, 156, 162, 163, 204, 226, 235, 250, 251, 253, 254, 256, 257, 258, 260, 264, 268, 269, 270, 271, 273, 307, 317, 326, 337, 338, 339, 342, 343, 345, 348, 349, 351, 354], "goal": [3, 4, 155, 342, 343, 344, 345, 348, 349], "abl": [3, 99, 105, 106, 342, 344, 345, 347, 348, 349, 351, 353], "experi": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 168, 302, 303, 304, 305, 306, 307, 336, 343, 344, 348, 351], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 86, 87, 90, 104, 105, 106, 108, 109, 110, 120, 123, 129, 135, 136, 138, 140, 145, 147, 150, 156, 159, 165, 166, 326, 329, 342, 343, 344, 345, 347, 348, 350, 351, 353, 354], "hope": 3, "nn": [3, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 82, 83, 86, 90, 100, 104, 110, 124, 127, 129, 136, 142, 156, 159, 160, 162, 164, 177, 178, 179, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 203, 204, 205, 208, 213, 214, 222, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 326, 329, 337, 338, 342, 343, 344, 345, 347, 348, 349, 350, 353], "organis": [3, 58, 343], "arbitrari": [3, 33, 38, 86, 90, 104, 110, 337, 342, 343, 349, 351], "structur": [3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 77, 86, 90, 104, 110, 125, 128, 176, 204, 236, 281, 282, 283, 284, 285, 335, 338, 342, 344, 345, 348, 349, 350, 351], "attribut": [3, 4, 32, 34, 36, 39, 45, 57, 86, 89, 90, 91, 104, 110, 129, 142, 162, 193, 197, 241, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342, 345, 349], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 110, 129], "actual": [3, 4, 7, 52, 53, 54, 55, 57, 58, 59, 86, 90, 104, 110, 165, 320, 338, 342, 344, 348, 349], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 86, 89, 90, 91, 104, 110, 121, 126, 129, 138, 175, 177, 178, 201, 237, 241, 244, 250, 251, 252, 254, 265, 268, 269, 271, 273, 279, 281, 282, 283, 284, 326, 333, 339, 343, 344, 349, 354], "care": [3, 8, 86, 90, 104, 110, 159, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 300, 342, 344, 348, 349, 351], "parametr": [3, 207, 241, 251, 257, 264, 271, 342, 344], "hardwar": 3, "observation_spec": [3, 86, 90, 100, 104, 110, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 134, 135, 136, 138, 140, 142, 144, 146, 150, 152, 154, 155, 156, 157, 158, 159, 161, 162, 165, 177, 193, 197, 201, 321, 329, 342, 344, 347, 348, 349, 354], "compositespec": [3, 28, 29, 49, 86, 88, 90, 100, 104, 110, 117, 125, 126, 127, 128, 130, 136, 144, 145, 151, 154, 156, 159, 172, 176, 177, 201, 225, 229, 237, 243, 244, 335, 342, 344, 345, 348, 349, 354], "pair": [3, 32, 34, 36, 39, 53, 84, 85, 86, 90, 104, 110, 147, 156, 193, 226, 237, 241, 266, 281, 282, 283, 284, 285, 337, 338, 342, 343, 344, 347, 349, 354], "state_spec": [3, 86, 90, 100, 104, 110, 117, 177, 201, 349, 354], "action_spec": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 82, 83, 86, 90, 95, 96, 100, 104, 105, 106, 110, 117, 120, 125, 128, 136, 144, 147, 177, 188, 201, 214, 216, 225, 231, 237, 238, 251, 254, 256, 269, 271, 273, 329, 337, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "reward_spec": [3, 86, 90, 100, 104, 110, 117, 118, 123, 124, 125, 126, 128, 144, 148, 149, 150, 152, 159, 161, 177, 201, 344, 348, 349, 354], "done_spec": [3, 86, 90, 104, 110, 125, 126, 128, 129, 144, 159, 176, 348, 349, 354], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 111, 112, 236, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 337, 348, 349, 350], "input_spec": [3, 86, 90, 100, 104, 110, 124, 125, 126, 127, 138, 140, 144, 145, 150, 151, 154, 155, 156, 159, 160, 161, 163, 344, 349], "full_action_spec": [3, 86, 90, 104, 110, 177, 201, 344, 348], "full_state_spec": [3, 86, 90, 104, 110, 177, 201, 344], "lock": [3, 26, 28, 34, 36, 39, 86, 90, 104, 110, 156, 166, 349], "modifi": [3, 7, 8, 26, 28, 32, 45, 86, 90, 104, 110, 124, 132, 136, 142, 156, 159, 160, 162, 164, 230, 236, 240, 320, 326, 342, 343, 344, 348, 349], "output_spec": [3, 86, 90, 104, 110, 124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 160, 349], "full_observation_spec": [3, 86, 90, 104, 110, 177, 201], "full_reward_spec": [3, 86, 90, 104, 110, 144, 348], "full_done_spec": [3, 86, 90, 104, 110, 144, 176, 348], "importantli": [3, 237, 241], "action_s": 3, "help": [3, 4, 32, 86, 90, 104, 110, 129, 336, 338, 342, 343, 344, 345, 348], "With": [3, 95, 96, 99, 155, 339, 343, 348, 351, 354], "necessarili": [3, 86, 90, 104, 110, 354], "requir": [3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 53, 55, 57, 86, 90, 94, 101, 104, 107, 110, 124, 142, 156, 159, 160, 162, 164, 199, 223, 240, 242, 243, 250, 251, 252, 257, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 300, 302, 337, 339, 342, 343, 344, 345, 348, 349, 351, 354], "present": [3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 89, 90, 104, 110, 130, 147, 151, 175, 176, 180, 181, 182, 183, 184, 190, 195, 207, 212, 236, 240, 241, 242, 243, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 333, 339, 342, 347, 348, 351, 353], "0s": [3, 52, 57, 156, 345], "step_and_maybe_reset": [3, 86, 90, 104, 110], "done_kei": [3, 86, 90, 104, 110, 129, 147, 154, 175, 348], "assign": [3, 4, 13, 14, 17, 32, 34, 36, 39, 86, 90, 104, 110, 160, 253, 254, 256, 271, 344, 348, 351], "_reset": [3, 86, 90, 100, 104, 110, 117, 120, 125, 128, 144, 176, 177, 201], "data_": [3, 86, 90, 104, 110], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 62, 63, 65, 66, 74, 79, 86, 90, 104, 110, 142, 147, 150, 160, 164, 192, 196, 208, 214, 232, 237, 239, 240, 241, 281, 282, 283, 284, 308, 320, 342, 343, 344, 345, 348, 349, 351, 353, 354], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 104, 110, 123, 147, 156, 165, 192, 193, 196, 197, 231, 238, 342, 343, 344, 345, 348, 349, 350, 351, 353], "set_se": [3, 13, 14, 16, 17, 21, 82, 83, 86, 90, 95, 96, 100, 104, 110, 138, 145, 150, 155, 157, 160, 349, 353, 354], "seed": [3, 13, 14, 16, 17, 21, 58, 86, 90, 100, 104, 105, 106, 110, 111, 112, 117, 125, 128, 144, 160, 168, 317], "determinist": [3, 32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 180, 189, 209, 216, 225, 234, 240, 241, 244, 251, 337, 342, 343, 345, 349, 354], "preced": [3, 198, 345], "risk": [3, 143], "overlap": [3, 41], "consecut": [3, 52, 72, 94, 197, 236, 345, 348, 354], "reproduc": [3, 120, 168, 342, 344, 348], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 60, 62, 63, 64, 65, 79, 86, 90, 104, 110, 127, 148, 154, 155, 157, 219, 220, 221, 244, 251, 257, 258, 264, 266, 267, 271, 314, 342, 343, 344, 345, 348, 351], "max_step": [3, 13, 86, 90, 100, 104, 110, 111, 112, 154, 348, 353, 354], "tensordictmodul": [3, 13, 14, 16, 17, 18, 19, 20, 21, 40, 82, 83, 100, 119, 136, 188, 193, 197, 201, 213, 214, 222, 223, 226, 227, 228, 229, 230, 231, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 251, 253, 257, 258, 260, 261, 262, 264, 266, 269, 271, 273, 279, 280, 281, 282, 283, 284, 313, 329, 337, 342, 344, 345, 347, 348, 349, 350], "trail": [3, 166], "treat": 3, "figur": [3, 342, 344, 345, 348, 349, 354], "summar": [3, 349], "brief": [3, 344], "deliveri": 3, "design": [3, 32, 33, 71, 76, 81, 86, 90, 104, 110, 120, 143, 160, 230, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 342, 343, 344, 345, 347, 348, 349, 351, 354], "metaclass": 3, "everi": [3, 8, 26, 28, 32, 33, 75, 86, 90, 104, 110, 154, 155, 166, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 317, 339, 342, 343, 344, 345, 348, 349], "flank": [3, 345], "dual": 3, "strictli": [3, 8, 32, 86, 90, 104, 110, 160, 271, 342, 344], "refer": [3, 7, 8, 9, 21, 32, 40, 86, 89, 90, 91, 104, 110, 160, 166, 177, 188, 189, 201, 202, 203, 204, 209, 210, 215, 216, 232, 250, 259, 260, 261, 262, 268, 271, 281, 286, 294, 341, 342, 344, 348, 353], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 65, 66, 86, 90, 104, 110, 117, 127, 129, 135, 138, 142, 143, 147, 149, 151, 162, 164, 166, 175, 178, 179, 181, 182, 183, 184, 186, 188, 190, 198, 199, 202, 203, 204, 205, 206, 207, 211, 213, 214, 219, 220, 221, 222, 240, 256, 258, 263, 269, 272, 294, 300, 311, 313, 314, 322, 323, 326, 327, 329, 330, 331, 332, 333], "carri": [3, 21, 45, 86, 90, 104, 110, 156, 266, 343, 345, 348, 349, 351], "assess": [3, 13, 14, 16, 17, 18, 19, 20, 21, 113, 342], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 52, 57, 66, 73, 74, 335], "adjac": [3, 23, 132], "reli": [3, 191, 192, 195, 196, 250, 338, 342, 344, 349, 354], "traj_id": [3, 13, 14, 16, 23, 147, 345, 351], "junction": 3, "inittrack": [3, 193, 197, 342, 345], "tutori": [3, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354], "scratch": [3, 8, 343, 349], "better": [3, 8, 9, 193, 197, 338, 344, 349], "gym3": 3, "envpool": [3, 101, 102], "interfac": [3, 93, 103, 199, 206, 337, 342, 344, 349, 351], "simultan": [3, 20, 101, 102, 104, 110, 349], "competit": [3, 348], "advantag": [3, 8, 190, 250, 252, 265, 268, 270, 281, 282, 283, 284, 285, 286, 288, 290, 292, 294, 295, 297, 338, 339, 342, 343, 344, 345, 348, 349, 354], "scale": [3, 4, 53, 120, 136, 138, 149, 155, 158, 189, 194, 208, 215, 216, 220, 221, 226, 227, 228, 237, 241, 243, 250, 251, 264, 268, 269, 270, 271, 315, 321, 326, 333, 337, 342, 343, 344, 345, 348, 353], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 86, 90, 104, 105, 106, 110, 300, 343, 344, 348, 349], "inherit": [3, 86, 90, 104, 110, 200, 266, 339, 344, 348], "serialenv": [3, 86, 90, 104, 156, 335, 354], "Of": [3, 7, 336, 349, 354], "cours": [3, 4, 336, 349, 354], "make_env": [3, 104, 110, 112, 166, 322, 323, 342, 343, 354], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 86, 87, 90, 92, 104, 110, 120, 123, 124, 129, 135, 136, 138, 140, 145, 146, 147, 150, 152, 155, 156, 157, 159, 160, 166, 193, 197, 300, 326, 329, 335, 337, 342, 343, 344, 345, 350, 351, 353, 354], "v1": [3, 13, 14, 16, 17, 21, 22, 53, 55, 86, 87, 89, 90, 91, 95, 96, 101, 104, 110, 120, 123, 130, 135, 136, 138, 145, 147, 150, 152, 154, 155, 156, 157, 159, 193, 197, 276, 290, 291, 292, 293, 295, 296, 297, 298, 337, 343, 345, 349, 351, 353, 354], "from_pixel": [3, 82, 83, 84, 85, 89, 91, 92, 95, 96, 107, 120, 146, 300, 326, 342, 343, 345, 350, 351, 353, 354], "9": [3, 7, 32, 35, 38, 41, 58, 59, 66, 74, 77, 84, 85, 99, 105, 106, 155, 166, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279, 338, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352], "81": [3, 343, 349, 351], "simpli": [3, 6, 34, 36, 39, 45, 76, 81, 130, 151, 165, 266, 337, 338, 342, 344, 348, 354], "d": [3, 35, 54, 56, 58, 59, 60, 65, 66, 191, 195, 237, 241, 353], "forc": [3, 6, 7, 13, 14, 17, 18, 19, 20, 21, 52, 54, 55, 57, 58, 59, 343, 348, 349], "privat": [3, 86, 90, 104, 110, 165, 349, 354], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 52, 74, 252, 265, 268, 308, 310, 313, 317, 320, 321, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 57, 72, 86, 90, 104, 110, 344], "behav": [3, 92, 100, 191, 195, 211, 257, 264, 350], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 40, 68, 71, 138, 149, 194, 206, 215, 220, 221, 279, 337, 349, 351], "inner": [3, 86, 90, 104, 110, 127, 339, 343, 344, 348, 354], "logic": 3, "nevertheless": [3, 344, 351], "kept": [3, 72, 74, 127, 151, 159, 168, 175, 194, 220, 221], "mind": [3, 52, 57, 66, 73, 74, 86, 90, 104, 110, 348], "desig": 3, "previou": [3, 4, 10, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 156, 176, 191, 195, 216, 230, 344, 345, 349, 354], "wherev": 3, "expos": [3, 107, 125, 128, 242, 343], "modif": [3, 5, 26, 28, 32, 86, 90, 104, 110, 132, 176, 266, 344, 349], "lost": [3, 8, 165], "eras": [3, 86, 90, 104, 110, 160], "intern": [3, 340], "face": [3, 5, 8, 9, 354], "NOT": [3, 143], "outsid": [3, 16, 348, 349], "keep": [3, 4, 7, 8, 14, 42, 72, 77, 104, 110, 138, 142, 164, 166, 175, 236, 310, 317, 342, 343, 344, 345, 348, 349, 351, 353, 354], "right": [3, 6, 7, 40, 198, 343, 344, 348, 349, 354], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 86, 90, 104, 110, 159, 160, 168, 281, 282, 283, 284], "assumpt": [3, 349, 351], "preclud": 3, "presenc": 3, "annihil": 3, "reason": [3, 4, 8, 32, 57, 86, 90, 104, 105, 106, 110, 142, 162, 197, 338, 342, 343, 344, 349, 351], "advanc": [3, 21, 35, 38, 41, 42, 351], "explicitli": [3, 4, 343, 345, 348, 351], "place": [3, 26, 28, 32, 34, 36, 39, 62, 63, 68, 71, 79, 86, 87, 90, 104, 110, 111, 112, 124, 129, 142, 156, 159, 160, 162, 164, 165, 166, 176, 230, 240, 314, 319, 320, 343, 344, 348, 349, 351], "superse": 3, "pettingzoowrapp": [3, 335], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 86, 90, 99, 104, 105, 106, 110, 111, 112, 113, 337, 343, 348], "associ": [3, 32, 34, 36, 39, 86, 90, 104, 110, 215, 333, 342, 351], "environemtn": 3, "__not__": 3, "constrain": [3, 136, 193, 197, 268], "li": 3, "fact": [3, 7, 8, 342, 344, 348, 349, 350, 351, 354], "predict": [3, 32, 40, 189, 200, 201, 230, 246, 256, 259, 261, 262, 280, 337, 342, 343], "know": [3, 4, 9, 35, 38, 41, 42, 229, 269, 313, 342, 343, 344, 345, 348, 351], "meaning": 3, "could": [3, 4, 6, 343, 344, 348, 350, 354], "perfectli": [3, 339, 342, 349], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 86, 90, 104, 110, 125, 126, 128, 158, 160, 168, 197, 199, 205, 237, 240, 241, 243, 244, 249, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284, 308, 319, 331, 332, 333, 335, 337, 339, 342, 343, 344, 345, 348, 349, 351, 354], "meaningless": 3, "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 353], "agent0": 3, "agent1": 3, "overridden": [3, 52, 54, 55, 57, 58, 59, 86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 345], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 52, 86, 90, 104, 110, 333, 337], "bool": [3, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 121, 125, 127, 128, 129, 130, 132, 136, 137, 138, 140, 142, 144, 145, 147, 149, 151, 154, 156, 158, 160, 161, 162, 164, 166, 168, 175, 176, 177, 178, 179, 181, 182, 191, 192, 193, 194, 195, 196, 197, 199, 201, 204, 205, 206, 207, 220, 221, 225, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279, 281, 282, 283, 284, 287, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 307, 310, 311, 313, 314, 315, 317, 326, 333, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "500": [3, 342, 343, 349, 353, 354], "launch": [3, 13, 14, 17, 18, 19, 20, 22, 52, 54, 104, 110], "bottleneck": [3, 8], "great": [3, 7, 8, 353], "speedup": [3, 8, 354], "precis": [3, 125, 128, 175, 192, 196, 342, 344], "misspecifi": 3, "caus": [3, 7, 8, 62, 63, 79, 86, 90, 94, 104, 110, 143, 354], "breakag": 3, "rais": [3, 13, 14, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 57, 86, 90, 104, 110, 113, 120, 131, 137, 147, 155, 156, 157, 160, 168, 229, 233, 234, 236, 271, 342, 344, 348, 351], "mismatch": [3, 343], "mostli": [3, 17, 300, 338, 351, 354], "subprocess": [3, 13, 14, 17, 87, 104, 110], "multithreadedenv": [3, 335], "underneath": 3, "higher": [3, 4, 123, 244, 342, 343, 344, 351, 354], "flexibl": [3, 9, 101, 274, 338, 339, 342, 351, 354], "cover": [3, 336, 344, 349, 353], "type": [3, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 59, 60, 68, 86, 90, 99, 100, 103, 104, 105, 106, 110, 124, 125, 126, 129, 130, 136, 142, 144, 145, 151, 154, 156, 159, 160, 162, 164, 166, 170, 174, 178, 179, 199, 204, 205, 207, 213, 222, 229, 231, 237, 240, 241, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 287, 326, 331, 335, 337, 342, 343, 344, 348, 349, 351, 354], "atari": [3, 4, 52, 120, 300, 354], "classic": [3, 100, 106, 343], "benchmark_batched_env": 3, "pipelin": [3, 7, 337, 344], "seamlessli": [3, 349], "infrastructur": [3, 348], "act": [3, 4, 73, 74, 105, 106, 205, 251, 253, 264, 269, 271, 273, 345, 348], "world": [3, 5, 100, 246, 261, 348, 349, 354], "paradigm": [3, 17, 348], "decpodp": 3, "game": [3, 4, 5, 52, 300], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 54, 94, 95, 96, 104, 105, 106, 123, 150, 189, 204, 205, 233, 302, 317, 331, 332, 342, 343, 344, 345, 348, 351, 353], "thank": [3, 342], "carrier": [3, 344, 345, 351], "particular": [3, 32, 45, 53, 54, 86, 90, 104, 110, 160, 338, 339, 343, 345, 347, 348, 351], "thu": [3, 265, 348], "let": [3, 6, 7, 32, 38, 43, 86, 90, 104, 105, 106, 110, 120, 193, 197, 204, 205, 231, 313, 338, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "go": [3, 7, 99, 104, 143, 147, 230, 287, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "vma": [3, 111, 112, 348], "robot": [3, 5, 7, 57, 142, 162, 164, 348], "what": [3, 8, 35, 44, 52, 86, 90, 104, 110, 129, 156, 168, 175, 238, 336, 337, 338, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354], "vmasenv": [3, 335, 348], "balanc": [3, 84, 85, 342, 343, 354], "num_env": [3, 21, 89, 93, 102, 111, 112, 348], "n_agent": [3, 111, 112, 204, 205, 213, 222, 279, 348], "ground_rew": 3, "pos_rew": [3, 348], "16": [3, 32, 58, 66, 74, 82, 83, 86, 90, 95, 96, 104, 110, 120, 342, 343, 344, 345, 349, 351], "style": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59], "relat": [3, 4, 10, 35, 104, 132, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 343, 349], "vari": [3, 89, 91, 92, 105, 106, 107, 111, 143, 348], "creation": [3, 104, 110, 354], "info_spec": [3, 104], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 117, 144, 176, 254, 257, 258, 279, 335, 348, 354], "simpl": [3, 9, 32, 33, 86, 90, 104, 110, 181, 241, 254, 256, 266, 270, 281, 337, 338, 342, 343, 344, 348, 354], "prefix": [3, 23, 32, 34, 36, 39, 45, 86, 90, 104, 110, 160, 266, 271, 299, 345, 354], "exactli": [3, 32, 86, 90, 92, 104, 110, 160, 191, 195, 271, 342, 345, 348], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 86, 90, 104, 110, 117, 127, 175, 177, 200, 201, 229, 233, 234, 236, 348], "reward_kei": [3, 86, 90, 104, 110, 175, 177, 201, 311, 315, 348], "set_kei": [3, 129, 250, 252, 254, 257, 258, 259, 264, 265, 266, 268, 269, 270, 271, 279, 285, 342, 348], "awai": [3, 344, 348], "eas": [3, 348], "leaf": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 30, 31, 33, 44, 46, 47, 86, 90, 104, 110, 154, 241], "full": [3, 86, 90, 104, 110, 193, 197, 232, 308, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "raw": [3, 4, 40, 194, 220, 221, 343, 349], "torchvis": [3, 142, 164, 302, 353, 354], "transformedenv": [3, 13, 86, 87, 90, 104, 110, 117, 120, 123, 124, 125, 128, 129, 130, 132, 135, 136, 137, 138, 140, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 159, 166, 193, 197, 300, 326, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "base_env": [3, 83, 86, 90, 91, 96, 104, 110, 117, 123, 125, 127, 128, 136, 140, 144, 146, 152, 154, 156, 157, 300, 342, 343, 344, 350, 353, 354], "appar": [3, 310], "bring": [3, 344, 354], "signific": [3, 5, 8, 344, 354], "kind": [3, 38, 44, 175, 351], "consult": 3, "interest": [3, 237, 241, 337, 343, 344, 348, 349, 354], "resize_par": 3, "easi": [3, 5, 52, 56, 84, 85, 95, 96, 229, 233, 234, 236, 337, 338, 342, 343, 344, 348, 350, 351, 354], "graph": [3, 4, 8, 82, 83, 95, 96, 277, 278, 342, 349], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 141, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 191, 195, 220, 231, 281, 312, 339, 342, 343, 344, 349, 353, 354], "revers": [3, 195], "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 74, 86, 90, 104, 110, 125, 128, 140, 160, 225, 231, 240, 242, 243, 245, 250, 251, 253, 257, 258, 264, 268, 269, 270, 271, 273, 343, 348], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 124, 127, 178, 179, 243, 354], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 120, 125, 128, 138, 147, 248, 257, 264, 349], "in_keys_inv": [3, 123, 125, 128, 138, 139, 140, 144, 145, 147, 152, 159, 342, 347, 349, 354], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 119, 142, 156, 162, 342, 345, 349, 353, 354], "doubletofloat": [3, 326, 342, 344, 347], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 52, 55, 57, 59, 62, 63, 65, 66, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 103, 104, 108, 109, 110, 111, 112, 125, 128, 129, 130, 138, 140, 144, 145, 147, 151, 154, 156, 158, 172, 175, 177, 188, 193, 197, 201, 213, 214, 222, 225, 226, 227, 228, 230, 231, 236, 237, 238, 239, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 279, 326, 337, 344, 345, 347, 348, 349, 350, 351, 353, 354], "float64": [3, 32, 55, 57, 58, 84, 85, 86, 90, 104, 110, 124, 125, 128, 142, 156, 159, 160, 162, 164, 240, 347, 354], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 86, 89, 90, 91, 104, 110, 125, 128, 129, 160, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 339, 342, 344, 351], "manipul": [3, 4, 8, 84, 85, 142, 162, 354], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 52, 57, 66, 73, 74, 127, 129, 175, 233, 337, 351], "unexpect": [3, 32, 86, 90, 104, 110, 160, 271, 353, 354], "behviour": 3, "fortun": [3, 345], "alreadi": [3, 8, 11, 32, 34, 36, 39, 45, 52, 86, 90, 104, 110, 156, 176, 241, 281, 282, 283, 284, 342, 344, 348], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 52, 62, 63, 64, 72, 75, 76, 79, 86, 90, 104, 110, 124, 125, 126, 128, 130, 136, 144, 145, 151, 154, 159, 160, 166, 195, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 338, 342, 345, 348, 349, 350, 351, 354], "catfram": [3, 343], "hold": [3, 277, 278, 349, 351], "notic": [3, 120, 344, 349], "parenthood": 3, "henc": [3, 35, 143, 176, 204, 337, 342, 344, 348, 349], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 104, 110, 349], "discret": [3, 24, 27, 30, 31, 33, 47, 86, 90, 104, 105, 106, 110, 111, 112, 127, 211, 214, 256, 257, 258, 259, 337, 343, 348, 349, 354], "might": [3, 34, 36, 37, 39, 304, 336, 342, 354], "action_mask": [3, 95, 96, 105, 106, 108, 109, 117], "unavail": [3, 105, 106], "probabl": [3, 4, 8, 40, 68, 71, 186, 188, 191, 193, 195, 197, 199, 202, 203, 211, 221, 233, 237, 241, 337, 343, 353], "categor": [3, 27, 31, 33, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 129, 188, 211, 214, 231, 232, 237, 238, 239, 254, 257, 258, 279, 345], "probabilistictensordictmodul": [3, 136, 241, 242, 353], "tensordictsequenti": [3, 193, 197, 231, 233, 242, 337, 342, 343, 345, 347, 350, 353], "maskedcategor": [3, 203, 335], "linear": [3, 13, 14, 16, 17, 21, 32, 82, 83, 86, 90, 100, 104, 110, 124, 136, 142, 156, 159, 160, 162, 164, 177, 178, 179, 188, 199, 201, 204, 205, 206, 207, 208, 214, 215, 216, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 243, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 329, 337, 343, 347, 350, 353], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 202, 203, 211, 232, 237, 257, 258, 337], "dist": [3, 10, 202, 203, 211], "distribution_class": [3, 136, 226, 227, 228, 230, 237, 241, 243, 250, 251, 257, 258, 264, 268, 269, 270, 271, 337, 342, 344, 348, 353], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 55, 82, 83, 86, 90, 91, 95, 96, 102, 104, 105, 106, 110, 112, 168, 193, 197, 223, 226, 227, 228, 229, 234, 236, 238, 246, 279, 337, 342, 343, 344, 345, 348, 354], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 117, 143], "enviorn": [3, 105, 106, 111, 112, 348], "itself": [3, 32, 86, 90, 104, 110, 114, 266, 344], "log": [3, 4, 8, 40, 186, 187, 188, 202, 203, 211, 221, 231, 232, 237, 241, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 307, 310, 311, 313, 317, 329, 337, 338, 339, 342, 343, 344, 348, 349, 353], "mission": 3, "irrespect": [3, 240, 241], "dmcontrol": [3, 86, 90, 104, 110], "jumanji": [3, 86, 90, 95, 96, 104, 110], "natur": [3, 342, 345], "special": [3, 335, 337, 342, 345, 354], "framework": [3, 4, 9, 22, 82, 83, 86, 90, 95, 96, 100, 104, 110, 191, 353, 354], "Its": [3, 32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 166, 240, 285], "success": [3, 55, 120, 159, 233, 343, 349, 351, 353], "foundat": [3, 5, 105, 106, 344, 348], "inspir": [3, 349], "gone": [3, 4, 5], "hard": [3, 7, 84, 85, 104, 263, 343, 354], "prefer": [3, 17, 20, 35, 38, 41, 42, 143, 151, 268, 314, 337, 344, 348, 351], "maintain": [3, 5, 9, 349], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 343, 344, 345, 348, 349, 351, 354], "decor": [3, 8, 11, 116, 266, 281, 282, 283, 284], "set_gym_backend": [3, 86, 89, 90, 104, 110, 114, 335], "relev": [3, 40, 281, 282, 283, 284, 285, 307, 349], "gym_backend": [3, 116, 335], "env1": [3, 347], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 58, 116], "env2": [3, 347], "_env": [3, 6, 89, 354], "classic_control": 3, "pendulumenv": [3, 349], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 98, 114], "handi": 3, "side": [3, 4, 354], "v0": [3, 86, 90, 92, 95, 96, 97, 98, 104, 110, 124, 160, 166, 329], "26": [3, 86, 90, 104, 110, 343, 349, 350], "fun": [3, 11, 116, 344, 348], "reveal": 4, "bug": [4, 353], "curv": 4, "won": [4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 57, 86, 87, 89, 90, 101, 102, 104, 110, 142, 164, 317, 333, 343, 344], "exploit": 4, "video": [4, 9, 300, 302, 313, 333, 348], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 136, 348, 350], "coeffici": [4, 40, 136, 348], "bonu": [4, 250, 252, 265, 268], "beta": [4, 35, 41, 65, 66, 257, 264, 265, 342, 343, 351, 353], "reduc": [4, 6, 27, 77, 155, 343], "downstream": [4, 342], "formul": [4, 348], "ob": [4, 8, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 73, 74, 77, 86, 90, 104, 110, 117, 125, 126, 128, 138, 152, 158, 172, 175, 204, 205, 238, 245, 251, 253, 257, 258, 264, 269, 271, 273, 281, 282, 283, 284, 343, 347, 349, 353, 354], "rate": [4, 52, 166, 280, 343, 344, 348], "gradient": [4, 32, 86, 90, 104, 110, 160, 194, 203, 207, 211, 220, 221, 250, 252, 253, 257, 258, 264, 265, 266, 268, 269, 270, 271, 273, 280, 281, 282, 283, 284, 317, 342, 344, 348, 349], "norm": [4, 8, 82, 83, 317, 342, 343, 344, 348, 349], "easier": [4, 337, 342], "local": [4, 7, 10, 16, 21, 32, 86, 90, 104, 110, 160, 204, 205, 213, 222, 279, 305, 307, 348], "optima": 4, "sens": [4, 349], "product": [4, 9, 191, 192, 195, 196, 331, 332], "sum": [4, 21, 31, 33, 77, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 119, 150, 202, 203, 222, 261, 280, 287, 338, 342, 343, 344, 345, 348, 349, 354], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 72, 150, 166, 236, 305, 310, 343, 345, 348, 349, 351], "stat": [4, 138, 321, 333, 343, 344], "w": [4, 68, 120, 122, 146, 158, 191, 236, 300, 343, 345, 351], "r": [4, 32, 104, 110, 117, 123, 138, 152, 192, 241, 249, 280, 337, 343, 349, 354], "yield": [4, 16, 21, 32, 86, 90, 104, 110, 266, 342], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 34, 36, 39, 86, 90, 104, 110, 142, 160, 164, 199, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 336, 353], "past": [4, 343, 351], "spars": [4, 345], "ad": [4, 16, 32, 35, 38, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 86, 90, 104, 110, 150, 160, 206, 207, 236, 250, 252, 254, 259, 265, 268, 271, 279, 343, 345, 351, 354], "intermedi": [4, 119, 193, 197, 232, 342, 350], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 342], "discov": 4, "score": [4, 40], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 353], "select": [4, 15, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 105, 106, 111, 112, 117, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 162, 163, 165, 166, 177, 193, 197, 231, 238, 316, 342, 351], "fall": [4, 53], "explicit": [4, 11, 45, 68, 198, 351], "mechan": [4, 32, 86, 90, 104, 110, 160, 343, 349], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 86, 90, 104, 110, 195, 257, 264, 344, 348], "addition": 4, "timestep": [4, 40, 53, 147, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 348], "realli": 4, "larg": [4, 27, 34, 36, 39, 125, 128, 162, 343, 344, 348, 351], "huge": [4, 205, 345], "std": [4, 138, 166, 208, 212, 229, 342, 354], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 341, 345, 346, 347, 350, 351, 352], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 86, 90, 104, 110, 119, 138, 142, 156, 159, 160, 162, 167, 177, 191, 192, 195, 196, 201, 206, 207, 229, 233, 234, 236, 250, 251, 253, 254, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 326, 333, 342, 343, 345, 349, 354], "estim": [4, 52, 66, 73, 74, 129, 136, 226, 227, 228, 250, 251, 252, 253, 254, 256, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 279, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 338, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 216, 261, 348], "freshli": 4, "doesn": [4, 11, 101, 125, 128], "drop": [4, 72, 74, 175], "meant": [4, 100], "encourag": [4, 104, 342, 343, 351], "measur": [4, 82, 83, 95, 96, 344], "novelti": 4, "revisit": 4, "previous": [4, 344, 354], "diminish": 4, "decreas": 4, "ideal": [4, 138, 349], "down": [4, 13, 14, 16, 17, 345], "anyth": [4, 13, 14, 16, 17, 18, 19, 20, 21], "try": [4, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 34, 36, 39, 343, 344, 345, 348, 349, 353, 354], "distil": 4, "nois": [4, 167, 207, 224, 236, 269, 273, 313, 333, 342], "exploratori": [4, 250, 252, 265, 268], "misalign": 4, "trade": 4, "unavoid": 4, "schedul": [4, 7, 40, 313, 344, 349], "divers": [4, 104, 110], "bootstrap": [4, 259, 282, 288, 289, 342, 345], "noisi": [4, 206, 207, 224, 337], "unstabl": [4, 194, 220, 221], "inher": 4, "stochast": [4, 136, 189, 207, 209, 216, 251, 255, 257, 258, 264, 267, 269, 271, 337, 344, 348], "enemi": 4, "pomdp": [4, 351], "loos": [4, 337, 343, 344], "nonexist": 4, "architectur": [4, 185, 348], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 57, 60, 61, 68, 69, 71, 76, 77, 78, 80, 81, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 118, 119, 120, 121, 122, 125, 127, 128, 132, 134, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 155, 157, 158, 159, 166, 178, 179, 186, 188, 191, 195, 199, 202, 203, 204, 205, 211, 214, 218, 230, 242, 243, 255, 299, 300, 312, 313, 314, 316, 317, 326, 337, 342, 344, 345, 347, 348, 354], "lstm": [4, 196, 197, 198, 208], "rel": [4, 68, 156, 186, 219, 342, 343, 348, 351], "tend": 4, "stabl": [4, 9, 10, 103], "compens": 4, "descent": [4, 207], "1000": [4, 38, 65, 73, 74, 86, 90, 104, 110, 120, 166, 233, 236, 237, 241, 263, 342, 343, 344, 345, 350, 351], "minimum": [4, 104, 110, 148, 189, 208, 219, 220, 221, 244, 247, 249, 251, 258, 266, 267, 271, 308, 342, 344, 348], "manual": [4, 18, 20, 21, 90, 342, 345, 351], "deviat": [4, 138, 166, 177, 189, 201, 206, 207, 229, 268, 273, 342, 348], "radic": 4, "begin": [4, 13, 14, 16, 17, 18, 19, 20, 21, 191, 192, 195, 196], "stabil": [4, 133], "stage": [4, 342, 349], "never": [4, 13, 14, 17], "prevent": [4, 26, 28, 194, 220, 221, 265, 268, 315, 351], "entir": [4, 57, 204, 344, 349, 351], "submit": [4, 336, 353], "suffici": [4, 342], "system": [4, 5, 344, 348, 349], "adequ": [4, 168, 344, 348], "infeas": 4, "allevi": [4, 337], "prune": 4, "fire": [4, 32, 86, 90, 104, 110], "illeg": 4, "move": [4, 32, 59, 86, 90, 104, 110, 124, 126, 142, 156, 159, 160, 162, 164, 166, 175, 199, 240, 315, 342, 343, 345, 353, 354], "chess": 4, "combin": [4, 159, 343, 351], "grasp": 4, "top": [4, 77, 82, 83, 95, 96, 177, 201], "sampl": [4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 79, 86, 90, 100, 103, 104, 110, 119, 120, 143, 147, 169, 170, 173, 174, 177, 186, 194, 201, 202, 203, 211, 212, 215, 220, 221, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 250, 251, 252, 253, 254, 256, 265, 267, 268, 273, 308, 314, 317, 320, 335, 337, 342, 343, 344, 345, 348, 350, 351, 353, 354], "wherein": 4, "cumul": [4, 150, 155, 177, 287, 344], "q": [4, 9, 86, 90, 104, 110, 181, 182, 183, 184, 187, 188, 190, 213, 214, 222, 228, 232, 238, 239, 251, 253, 254, 256, 257, 258, 259, 263, 264, 269, 271, 273, 279, 326, 335, 342], "flow": [4, 342, 344, 348, 349, 351], "reparameter": [4, 186, 203, 211], "soft": [4, 263, 271, 272], "critic": [4, 8, 226, 235, 250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 342], "clip": [4, 40, 123, 148, 252, 273, 317, 344, 348, 349], "oppos": [4, 45], "incorrect": 4, "thought": [4, 86, 90, 104, 110], "bound": [4, 21, 25, 26, 32, 86, 90, 104, 110, 123, 137, 166, 215, 216, 225, 231, 232, 236, 237, 238, 239, 240, 241, 244, 273, 337, 342, 343, 344, 354], "region": 4, "squash": [4, 345, 353], "tanh": [4, 178, 179, 191, 192, 194, 195, 196, 199, 205, 219, 220, 221, 244, 344, 348, 349, 350, 353], "correct": [4, 34, 36, 39, 86, 90, 104, 110, 136, 320, 344, 345], "prob": [4, 202, 203, 211, 344, 348], "rememb": 4, "remap": 4, "origin": [4, 8, 34, 36, 39, 40, 94, 126, 127, 136, 142, 160, 164, 191, 237, 240, 241, 263, 266, 268, 326, 342, 347, 349, 354], "histor": 5, "ceas": 5, "fork": [5, 342, 343, 344, 345, 348, 350], "farama": [5, 55, 97, 98, 105, 106, 344, 349], "bc": [5, 353], "break": [5, 13, 14, 16, 21, 32, 38, 42, 52, 54, 55, 57, 58, 59, 60, 66, 73, 74, 86, 90, 104, 110, 120, 147, 166, 343, 351, 353], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 86, 90, 104, 110, 168, 225, 231, 232, 237, 238, 239, 240, 241, 344, 348], "best": [5, 9, 94, 193, 197, 348, 351, 353], "gymwrapp": [5, 86, 90, 104, 110, 130, 151, 154, 165, 335, 344, 353], "feel": [5, 336, 353], "free": [5, 7, 125, 128, 250, 261, 268, 339, 344, 348, 353], "gladli": 5, "prepar": [6, 54, 344], "conda": [6, 7, 336], "7": [6, 10, 27, 33, 35, 38, 41, 66, 74, 86, 90, 104, 110, 155, 177, 178, 179, 198, 199, 201, 204, 287, 341, 342, 343, 345, 348, 349, 351, 352, 353], "cmake": 6, "14": [6, 11, 59, 73, 74, 86, 90, 104, 110, 138, 342, 343, 344, 349, 350, 351], "activ": [6, 7, 9, 178, 179, 185, 189, 199, 204, 205, 252, 265, 268, 337, 349, 353], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 54, 336], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 92], "y": [6, 7, 38, 103, 198, 204, 223, 342, 348, 351], "facebookresearch": [6, 54, 92], "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 86, 90, 104, 110, 144, 153, 266, 348, 354], "command": [6, 7, 10, 344, 348, 349, 354], "readm": [6, 7, 111], "md": [6, 7], "habitatenv": [6, 335], "_has_habitat": 6, "available_env": [6, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 97, 103, 104, 107, 108, 109, 110, 111, 112, 354], "startswith": [6, 338, 342], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 87, 266, 342], "env_nam": [6, 82, 84, 86, 89, 90, 92, 95, 97, 101, 104, 107, 110, 342, 344, 354], "llvmlite": 6, "config": [6, 7, 142, 164, 180, 185, 212, 321, 322, 323, 326, 327, 330], "var": [6, 7, 32, 86, 90, 104, 110, 160, 266, 271], "ld_preload": [6, 7], "8": [6, 7, 38, 57, 58, 65, 66, 73, 74, 82, 83, 84, 85, 86, 90, 104, 110, 155, 178, 179, 181, 182, 190, 199, 226, 227, 228, 237, 240, 243, 264, 341, 342, 343, 344, 348, 349, 350, 351, 352, 353], "bind": 6, "deactiv": [6, 7, 231], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 86, 90, 104, 110, 160, 266, 271, 351], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 86, 343], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 53], "stand": [7, 84, 85, 104, 110, 347, 349, 354], "joint": [7, 343], "dynam": [7, 54, 57, 59, 257, 264, 344, 349], "contact": [7, 37], "engin": [7, 107, 349], "biomechan": 7, "graphic": 7, "anim": [7, 348], "area": 7, "demand": [7, 354], "fast": [7, 9, 82, 83, 145, 269, 342, 343, 344], "accur": [7, 53, 59, 343, 349, 351], "articul": 7, "acquir": [7, 344], "deepmind": [7, 8, 9, 57, 84, 85, 86, 90, 104, 110, 129, 344], "whomev": 7, "licenc": 7, "incorpor": [7, 86, 90, 104, 110, 229, 233, 234, 236, 345, 349], "relianc": 7, "obsolet": 7, "legaci": 7, "pro": [7, 336], "tip": [7, 336], "glfw": [7, 342], "osmesa": 7, "egl": 7, "advic": [7, 57, 354], "sudo": [7, 336], "enabl": [7, 8, 53, 62, 63, 72, 79, 193, 197, 236, 313, 344, 348, 349, 351], "apt": [7, 348], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 62, 63, 64, 75, 76, 79, 343, 345], "workflow": [7, 226, 227, 228], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 57, 63, 86, 90, 104, 110, 142, 162, 164, 354], "binari": [7, 24, 27, 33, 118, 188, 214, 231, 232, 238, 239, 254, 257, 258, 279], "mkdir": 7, "tag": [7, 300, 302, 305, 333], "earlier": [7, 342, 344, 345, 348, 351], "roboti": 7, "download": [7, 10, 52, 53, 54, 55, 57, 58, 59, 94, 142, 164, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "html": [7, 101, 103], "wget": 7, "mujoco210": 7, "tar": [7, 54], "gz": 7, "xf": 7, "charg": [7, 13, 14, 17, 104, 110], "obtain": [7, 40, 52, 86, 90, 104, 110, 119, 142, 155, 164, 177, 213, 314, 342, 344, 348], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 60], "bin": [7, 188, 232, 337], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 184, 237, 241, 342, 344, 351], "nvidia": [7, 94], "older": [7, 11], "hack": [7, 342], "line": [7, 32, 52, 86, 90, 104, 110, 343, 348, 353], "adatp": 7, "script": [7, 54, 168, 326, 329, 333, 337, 338, 339, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "unnot": [7, 143], "until": [7, 21, 157, 159, 344, 345, 348], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 343, 351], "troubleshoot": 7, "gl": 7, "h": [7, 68, 120, 122, 146, 158, 191, 192, 193, 195, 196, 197, 201, 300, 343, 345, 351], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 16, 17, 18, 19, 20, 21], "directori": [7, 34, 36, 39, 45, 52, 53, 54, 55, 57, 58, 59, 62, 305, 307, 339, 342], "devel": 7, "ubuntu": [7, 94], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 343, 348, 349], "disappear": [7, 343, 345, 347], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 52, 58, 59, 66, 74, 84, 85, 104, 108, 109, 138, 140, 155, 178, 179, 186, 192, 198, 199, 204, 205, 209, 219, 237, 245, 326, 343, 348, 349, 350, 351, 353, 354], "glibcxx_3": 7, "29": [7, 342, 343, 349, 351], "compil": [7, 32, 86, 90, 104, 110, 191, 192, 195, 196], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 16, 17, 18, 19, 20, 21, 165, 344, 347], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 86, 90, 104, 110, 137, 160, 271, 354], "job": [7, 18, 19, 20, 22, 38, 351], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 82, 83, 341, 343, 345, 347, 349, 350, 352], "114": [7, 349], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 349], "offscreenopenglcontext": 7, "opengl": [7, 348], "global": [7, 32, 86, 90, 104, 105, 106, 110, 213, 222, 237, 241, 279, 339, 342, 348], "cuda_visible_devic": 7, "id": [7, 23, 40, 66, 68, 73, 74, 86, 89, 90, 104, 110, 236, 269, 303, 307, 326], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 349], "correctli": [7, 32, 86, 90, 104, 110], "lgl": 7, "libegl": 7, "x11": [7, 348], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 34, 36, 39, 90, 175, 229, 233, 234, 236, 268, 317, 339, 342, 343, 347, 351], "sketch": [8, 339], "n_training_step": 8, "datapoint": [8, 45, 351], "n_data_per_train": 8, "no_grad": [8, 32, 86, 90, 104, 110, 136, 191, 192, 195, 196, 281, 282, 283, 284, 344, 345, 348], "loss_fn": [8, 345, 353], "zero_grad": [8, 32, 86, 90, 104, 110, 339, 342, 344, 345, 348, 349], "backpropag": [8, 82, 83, 95, 96, 250, 251, 252, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 279, 348, 349], "differenti": [8, 45, 82, 83, 136, 281, 282, 283, 284, 345, 348, 349], "denomin": 8, "artifact": 8, "numer": [8, 38, 90, 166, 194, 220, 221, 225, 231, 232, 237, 238, 239, 240, 241, 315, 344, 351, 354], "misconcept": 8, "freed": 8, "appear": [8, 33, 52, 57, 66, 73, 74, 349, 351], "compuat": 8, "fix": [8, 104, 156, 251, 267, 271, 343, 349, 354], "retain_graph": [8, 82, 83], "discuss": [8, 9, 348], "inplac": [8, 32, 34, 36, 39, 86, 90, 104, 110, 160, 271, 342], "onto": [8, 33, 34, 36, 39, 172, 225, 229, 231, 232, 236, 237, 238, 239, 240, 241, 345, 349], "exclud": [8, 53, 58, 86, 90, 104, 110, 120, 130, 175, 213, 348, 351], "forward": [8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 86, 90, 104, 110, 117, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 142, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 162, 163, 165, 166, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 210, 212, 213, 215, 216, 218, 222, 223, 229, 230, 232, 233, 236, 237, 239, 240, 241, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 338, 349, 353], "submodul": [8, 32, 86, 90, 104, 110, 114, 266], "param": [8, 32, 40, 86, 90, 100, 104, 110, 124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 186, 188, 219, 230, 237, 240, 243, 245, 266, 275, 278, 281, 282, 283, 284, 285, 342, 348, 349, 350, 353], "grad": [8, 32, 82, 83, 86, 90, 104, 110, 342, 344], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 86, 90, 104, 105, 106, 110, 124, 142, 156, 159, 160, 162, 164, 208, 213, 240], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 65, 66, 120, 132, 143, 161, 260, 338, 344, 348, 349], "much": [8, 13, 14, 17, 35, 41, 57, 65, 66, 104, 110, 265, 268, 344, 348, 349, 351, 354], "render": [8, 111, 300, 313, 342, 343, 344], "factor": [8, 32, 147, 194, 207, 220, 221, 229, 233, 234, 236, 251, 256, 259, 260, 262, 272, 287, 342, 343, 348, 351, 354], "fit": [8, 11, 138, 338, 339, 342], "bottlneck": 8, "brax": [8, 82, 83, 86, 90, 104, 110, 145, 354], "jax": [8, 11, 82, 83, 95, 96], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 60, 72, 77, 86, 90, 104, 110, 131, 160, 202, 203, 253, 254, 256, 271, 308, 338, 339, 342, 344, 345, 348, 349, 351], "underli": [8, 86, 90, 104, 110, 266, 349], "tedeiou": 8, "priorit": [8, 35, 41, 65, 66, 253, 254, 256, 257, 258, 264, 269, 271, 273, 342, 343], "amount": [8, 236, 343, 351], "costli": [8, 349], "concaten": [8, 21, 30, 31, 57, 120, 121, 138, 159, 195, 199, 243, 342, 343, 348, 349, 351, 354], "constitut": [8, 343, 348, 349], "plain": 8, "profil": 8, "fulli": [8, 32, 86, 90, 104, 110, 192, 196, 343, 349, 351], "frequent": [8, 351], "program": [8, 257, 264, 354], "functorch": [8, 10], "incl": 8, "suit": [8, 85, 344, 354], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 73, 74, 240, 243, 266, 348, 349, 353], "new_shap": 8, "permut": [8, 72, 140, 353, 354], "idea": [9, 269, 339, 345, 348], "introductori": 9, "intro": [9, 344, 345], "dai": [9, 353], "2022": [9, 10, 349, 353], "spin": [9, 84, 85, 354], "deep": [9, 120, 181, 182, 183, 184, 187, 236, 250, 263, 271, 272, 342], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 138, 166, 342, 343, 344, 345], "reddit": 9, "reagent": 9, "orient": [9, 59, 354], "baselines3": 9, "tf": 9, "bandit": [9, 103], "tensorflow": [9, 202, 203], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 353], "grade": 9, "factori": [9, 43, 342], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 86, 90, 104, 110, 123, 127, 172, 185, 188, 204, 210, 214, 225, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 254, 256, 257, 258, 273, 279, 337, 343, 344, 345, 348, 349, 353, 354], "mbrl": [9, 100, 337], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 349], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 344, 345, 348], "notebook": [10, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "24": [10, 58, 74, 89, 101, 102, 341, 342, 343, 344, 349, 350, 352], "11": [10, 27, 33, 45, 62, 63, 65, 74, 79, 87, 158, 177, 201, 341, 343, 344, 348, 349, 350, 351, 352], "12": [10, 58, 62, 63, 74, 79, 95, 96, 104, 108, 109, 110, 342, 343, 344, 345, 348, 349, 351], "pip3": [10, 342, 344, 345, 348], "extra": [10, 32, 86, 90, 104, 110, 120, 166, 175, 307, 337, 344, 345, 351], "url": [10, 92], "org": [10, 35, 54, 55, 57, 59, 65, 66, 82, 83, 84, 85, 92, 95, 96, 101, 102, 103, 107, 111, 112, 120, 142, 162, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 201, 202, 203, 207, 209, 210, 212, 213, 215, 216, 222, 232, 236, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 270, 271, 272, 281, 286, 294, 350], "whl": 10, "u": [10, 56, 191, 192, 195, 196, 349], "There": [10, 68, 193, 197, 337, 339, 344, 345, 348, 349, 351, 354], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 266], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 68, 77, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 120, 127, 129, 135, 136, 138, 142, 143, 146, 151, 154, 155, 160, 162, 164, 165, 166, 169, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 190, 193, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 213, 214, 222, 225, 231, 232, 237, 238, 239, 240, 241, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279, 280, 281, 282, 283, 284, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 326, 327, 333, 343, 344], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 100, 104, 110, 116, 129, 249, 322, 323, 331, 332, 333, 343, 351], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 193, 197, 198, 353], "longer": [11, 343, 348, 351], "self": [11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 36, 39, 86, 90, 100, 104, 110, 117, 124, 125, 128, 142, 144, 156, 159, 160, 162, 164, 177, 188, 201, 213, 222, 229, 233, 237, 240, 245, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 281, 282, 283, 284, 285, 339, 342, 349, 353], "x": [11, 23, 26, 32, 38, 40, 57, 74, 136, 158, 179, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 204, 205, 223, 231, 237, 238, 247, 249, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 317, 342, 349, 351, 353], "23": [11, 58, 74, 341, 342, 343, 344, 349, 352], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 86, 87, 90, 104, 110, 116, 136, 156, 223, 231, 238, 260, 262, 281, 284, 292, 293, 297, 298, 329, 338, 342, 343, 348, 351, 353, 354], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 58, 82, 83, 90, 95, 96, 196, 249, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 342, 343, 344, 345, 348, 349, 351, 354], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 120, 127, 138, 155, 156, 157, 160, 166, 191, 194, 195, 204, 205, 220, 221, 231, 238, 244, 251, 261, 266, 267, 271, 313, 314, 339, 342, 343, 344, 345, 349, 354], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 86, 90, 104, 110, 162, 180, 212], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 38, 39, 58, 86, 87, 88, 90, 101, 104, 105, 106, 110, 111, 112, 113, 136, 156, 160, 165, 166, 178, 179, 180, 181, 182, 183, 184, 185, 190, 198, 199, 212, 237, 241, 271, 304, 305, 313, 322, 323, 326, 331, 332, 333, 342, 343, 344, 351, 354], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 57, 86, 90, 104, 110, 145, 155, 160, 175, 193, 197, 230, 266, 271, 338, 342, 343, 345, 351], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 86, 88, 90, 104, 110, 117, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 135, 136, 141, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 165, 166, 175, 176, 177, 193, 197, 200, 201, 229, 230, 232, 233, 236, 239, 240, 241, 250, 251, 252, 253, 254, 255, 256, 258, 259, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 280, 281, 282, 283, 284, 285, 317, 342, 349], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 87, 104, 110, 342, 353], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 120, 147, 317, 320, 329, 339, 342, 343, 344, 345, 348, 351, 353], "device_typ": [13, 16, 17, 27, 30, 33, 178, 179, 180, 181, 182, 183, 184, 190, 199, 206, 207, 212], "env_devic": [13, 14, 16, 17, 18, 19, 20, 21], "policy_devic": [13, 14, 16, 17, 18, 19, 20, 21], "create_env_kwarg": [13, 14, 16, 17, 21, 87, 101, 104, 110, 342, 354], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 147, 343, 351], "explorationtyp": [13, 14, 16, 17, 18, 19, 20, 21, 266, 313, 342, 343, 344, 345, 353], "interactiontyp": [13, 16, 17, 18, 19, 20, 21, 170, 174, 237, 241, 313], "exploration_mod": [13, 16, 17, 18, 19, 20, 335, 337], "preemptive_threshold": [13, 14, 17], "float": [13, 14, 17, 25, 27, 32, 33, 35, 40, 41, 46, 57, 65, 66, 68, 86, 90, 104, 110, 120, 124, 125, 128, 136, 138, 142, 147, 148, 149, 155, 156, 158, 159, 160, 162, 164, 166, 186, 189, 191, 194, 195, 199, 202, 203, 206, 207, 215, 216, 219, 221, 229, 240, 244, 247, 248, 249, 250, 251, 256, 257, 258, 261, 262, 263, 264, 267, 269, 271, 272, 273, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 315, 342, 343, 351, 354], "num_thread": [13, 14, 17, 34, 36, 39, 104, 110], "num_sub_thread": [13, 14, 17, 104, 110], "datacollector": [13, 14, 16, 17, 237, 241, 268, 344], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 225, 229, 231, 232, 236, 237, 238, 239, 240, 241, 243, 337, 353], "stepcount": [13, 86, 90, 104, 110, 111, 112, 159, 342, 343, 344, 345, 348, 353], "env_mak": [13, 14, 16, 21, 329, 354], "50": [13, 14, 16, 21, 37, 40, 52, 59, 73, 74, 341, 343, 344, 345, 348, 349, 350, 352], "2000": [13, 14, 16, 45, 93, 344, 351], "enumer": [13, 14, 16, 21, 32, 38, 42, 74, 86, 90, 104, 110, 274, 338, 342, 343, 344, 345, 351, 353], "int64": [13, 14, 16, 27, 30, 34, 36, 37, 39, 40, 41, 43, 45, 52, 55, 57, 58, 59, 60, 65, 86, 90, 99, 103, 104, 105, 106, 108, 109, 110, 129, 140, 147, 154, 188, 214, 231, 232, 236, 237, 238, 239, 337, 344, 345, 349, 351, 353, 354], "step_count": [13, 14, 16, 86, 90, 95, 96, 104, 110, 154, 344, 345, 353], "shutdown": [13, 14, 16, 17, 21, 342, 353], "del": [13, 14, 16, 342, 344, 347, 353, 354], "randompolici": [13, 14, 16, 17, 18, 19, 20, 21, 22, 120, 147, 335, 351], "tensordictmodulebas": [13, 14, 16, 17, 18, 19, 20, 21, 119, 223, 231, 238, 345], "undergon": [13, 14, 16, 17, 18, 19, 20, 21, 45], "env_obs_kei": [13, 14, 16, 17, 18, 19, 20, 21], "lifespan": [13, 14, 16, 17, 18, 19, 20, 343], "divis": [13, 14, 16, 17, 18, 19, 20, 52, 57, 66, 73, 74, 348], "endless": [13, 14, 16, 17, 18, 19, 20], "fill": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 90, 156, 165, 197, 345, 349, 350], "sit": [13, 14, 16, 17, 18, 19, 20, 21, 319, 343], "cast": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 60, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 101, 102, 104, 107, 110, 124, 125, 128, 136, 142, 156, 159, 160, 162, 164, 166, 240, 326, 354], "span": [13, 14, 16, 17, 18, 19, 20, 21, 57], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 343, 344, 348], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 307, 337, 348, 349], "round": [13, 14, 16, 17, 18, 19, 20, 21, 52], "closest": [13, 14, 16, 17, 18, 19, 20, 21], "post": [13, 14, 16, 17, 18, 19, 20, 21, 32, 55, 86, 90, 104, 110], "boolm": [13, 14, 17], "update_policy_weight_": [13, 14, 17], "async": [13, 14, 17, 18, 19, 20, 21, 165, 353], "ratio": [13, 14, 17, 40, 342, 344], "finish": [13, 14, 17, 21, 90, 147, 354], "rest": [13, 14, 17, 337, 344, 345, 349, 353], "earli": [13, 14, 17, 90, 154, 353], "equal": [13, 14, 17, 52, 66, 73, 74, 101, 104, 110, 137, 138, 178, 179, 191, 193, 195, 197, 199, 205, 272, 276, 308, 331, 332, 342, 344, 350], "plu": [13, 14, 17, 40, 104, 110, 349], "safeti": [13, 14, 17, 100, 104, 110], "harm": [13, 14, 17, 104, 110], "ordereddict": [13, 14, 16, 17, 21, 32, 86, 90, 104, 110, 160, 166, 271, 343], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 166, 191, 193, 195, 197, 249, 250, 252, 265, 268, 317, 337, 348], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 86, 90, 104, 110, 160], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 66, 73, 74, 75, 86, 90, 104, 110, 129, 133, 138, 154, 178, 179, 199, 204, 205, 257, 264, 271, 351], "increment": [13, 14, 16, 17, 86, 90, 104, 110, 265], "env_fn": [13, 14, 16, 17, 87, 331, 332], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 73, 74, 183, 184, 349], "out_se": [13, 14, 16, 17, 354], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 46, 52, 53, 54, 62, 63, 65, 68, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 124, 142, 144, 153, 156, 159, 160, 161, 163, 164, 167, 177, 178, 179, 181, 182, 183, 184, 187, 190, 193, 194, 197, 199, 200, 201, 204, 205, 211, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 279, 280, 281, 282, 283, 284, 285, 300, 304, 305, 307, 310, 317, 322, 323, 326, 330, 331, 332, 338, 344, 348], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 95, 96, 100, 117, 125, 128, 144, 177, 201, 237, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 271, 273, 349, 353, 354], "describ": [15, 44, 121, 159, 219, 220, 254, 303, 338, 342, 344, 348, 349, 354], "tensor_spec": [15, 117, 176, 257, 258, 268, 270], "boundedtensorspec": [15, 22, 26, 86, 90, 104, 110, 233, 234, 236, 237, 244, 250, 251, 253, 264, 268, 269, 271, 273, 335, 344, 348, 349, 353, 354], "cube": 15, "envcreat": [16, 22, 104, 110, 329, 330, 333, 335, 342, 343, 353, 354], "return_same_td": 16, "interruptor": 16, "cautious": [16, 268], "whole": [16, 26, 28, 32, 45, 86, 90, 104, 110, 160, 237, 271, 308, 342, 344], "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 90, 101, 136, 250, 252, 265, 268, 342, 343, 347, 349, 353], "mere": 17, "exporationtyp": [18, 19, 20], "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 19, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 317], "respect": [18, 19, 20, 32, 86, 90, 104, 110, 118, 124, 125, 128, 142, 143, 152, 156, 159, 160, 162, 164, 191, 195, 204, 216, 240, 245, 312, 344, 345, 348], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 336, 343, 344, 347, 351], "serv": [18, 20, 21, 92, 351, 354], "fashion": [18, 20, 21, 34, 36, 39, 74], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 19, 20, 21, 52, 54, 55, 57, 58, 59, 86, 90, 104, 110, 132], "seen": [18, 19, 20, 21, 86, 90, 104, 110, 338, 342, 343, 345, 348, 351], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 53, 86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 342], "whilst": [18, 19, 20], "homonym": [18, 19, 20, 349], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 342], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 52, 237, 241], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 331, 332, 342, 343], "coordin": 21, "init": [21, 32, 86, 90, 104, 110, 307, 343, 344], "autodetect": 21, "similarli": [21, 32, 72, 76, 86, 90, 104, 110, 204, 242, 243, 257, 264, 354], "num_cpu": 21, "num_gpu": 21, "1024": [21, 185, 343, 351], "equat": [21, 57, 90, 236, 249, 252, 272, 344, 349], "exce": [21, 351], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 317, 342, 344, 345], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 180, 185, 212, 230], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "durat": [23, 348], "meta": [23, 44, 53, 88, 92, 250, 252, 265, 268, 270, 339, 344, 348, 351], "aren": [23, 155, 345], "int8": [24, 86, 99, 105, 106, 118], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "clear_device_": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "op": [24, 25, 27, 30, 31, 33, 44, 46, 47, 137, 165, 229, 233, 300, 319], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 42, 44, 46, 47, 82, 83, 86, 89, 91, 92, 95, 96, 101, 102, 107, 127, 210, 211, 215, 249, 337, 343, 344, 345, 349, 351], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 90, 236, 244], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 90, 244, 349], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 86, 123, 354], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 178, 179, 199, 217, 218], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 354], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 127, 195, 225, 229, 231, 232, 236, 237, 238, 239, 240, 241, 307, 337, 353, 354], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 68, 156, 172, 349, 351], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 120, 153, 155, 178, 179, 217, 218, 342, 349, 351], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 86, 90, 104, 110], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 159, 160, 208, 219, 333], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 127, 188, 211, 214, 231, 232, 238, 239, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 345], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 188, 214, 231, 238, 254, 256, 257, 258, 279, 335, 337], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 124, 125, 128, 142, 156, 159, 160, 162, 164, 166, 240, 249, 266, 342, 343, 344, 349, 351], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "upper": [25, 71, 137], "unnam": 26, "constraint": [26, 100, 344, 348], "pixels_spec": 26, "observation_vector_spec": 26, "composite_spec": 26, "observation_vector": [26, 121, 326, 342], "td_project": 26, "absent": [26, 28, 53, 86, 90, 104, 110], "is_empti": [26, 28, 349], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "children": [26, 28, 32, 86, 90, 104, 110], "keysview": [26, 28], "reflect": [26, 28, 91, 105, 106, 165, 175, 266, 320, 343, 344, 345, 348], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 86, 90, 104, 110, 266], "succeed": [26, 28], "selected_kei": [26, 28, 151, 342], "unlock_": [26, 28], "unlock": [26, 28, 34, 36, 39], "valuesview": 26, "onehottensorspec": [27, 82, 83, 89, 91, 92, 95, 96, 101, 102, 107], "action_valu": [27, 33, 187, 188, 214, 231, 232, 238, 239, 258, 266, 279, 337, 345], "arang": [27, 33, 66, 188, 203, 231, 308, 337, 351], "argmax": [27, 188, 214, 232, 239], "chosen_action_valu": [27, 33, 213, 214, 222, 238, 239, 279, 337, 345], "outcom": [27, 33, 186, 219], "drawn": [28, 29, 156, 233, 237, 241, 344, 348], "lazystackedtensordict": [28, 52, 86, 90, 100, 104, 110, 347, 354], "heterogen": [28, 29, 99, 105, 106, 168, 204, 205, 342, 343], "thrown": [29, 32, 86, 90, 104, 110, 351], "nvec": [30, 31], "cardin": [30, 31, 188, 214, 231, 232, 239, 344], "ax": [30, 206, 207], "m": [30, 32, 86, 90, 104, 110, 127, 241, 337, 343, 349], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 254, 257, 258, 279, 335], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 335], "gamma": [32, 147, 201, 250, 251, 253, 254, 256, 258, 259, 260, 262, 264, 266, 268, 269, 270, 271, 273, 274, 275, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 329, 338, 342, 343, 344, 348, 353], "sutton": [32, 338, 348], "1988": 32, "tempor": [32, 193, 197, 201, 282, 283, 288, 289], "44": [32, 341, 343, 348, 349, 352], "discount": [32, 57, 87, 147, 251, 256, 259, 260, 262, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 338, 343, 344, 348], "ahead": [32, 354], "add_modul": [32, 86, 90, 104, 110], "child": [32, 86, 90, 104, 110], "fn": [32, 37, 86, 90, 104, 110, 208, 331, 332], "init_weight": [32, 86, 90, 104, 110], "fill_": [32, 86, 90, 104, 110, 343, 345, 354], "net": [32, 86, 90, 104, 110, 198, 205, 250, 251, 257, 258, 264, 268, 269, 270, 271, 326, 329, 343, 349, 350, 353], "in_featur": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 178, 179, 181, 182, 183, 184, 198, 199, 205, 206, 207, 226, 240, 254, 256, 353], "out_featur": [32, 86, 90, 100, 104, 110, 124, 142, 156, 159, 160, 162, 164, 177, 178, 179, 181, 182, 183, 184, 189, 190, 193, 197, 198, 199, 201, 204, 205, 206, 207, 226, 231, 240, 254, 256, 337, 342, 345, 353], "bia": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 178, 179, 189, 191, 192, 193, 195, 196, 197, 199, 205, 206, 207, 208, 233, 234, 236, 240, 247, 248, 249, 266, 271, 338, 342, 343, 344, 345, 348, 353], "requires_grad": [32, 82, 83, 86, 90, 104, 110, 136], "bfloat16": [32, 86, 90, 104, 110], "datatyp": [32, 86, 90, 104, 110, 351], "member": [32, 86, 90, 104, 110, 266, 300], "xdoctest": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 266, 271], "buf": [32, 86, 90, 104, 110], "20l": [32, 86, 90, 104, 110, 266], "1l": [32, 86, 90, 104, 110, 266], "5l": [32, 86, 90, 104, 110, 266], "__call__": [32, 37, 86, 90, 104, 110, 241, 339], "doubl": [32, 46, 86, 90, 104, 110, 124, 125, 126, 128, 142, 156, 159, 160, 162, 164, 240, 254, 259, 263, 269, 272, 279, 342, 343, 344, 345, 354], "eval": [32, 86, 90, 104, 110, 160, 166, 342, 343, 344], "evalu": [32, 86, 90, 104, 110, 160, 186, 202, 203, 211, 221, 269, 322, 323, 343, 344], "dropout": [32, 86, 90, 104, 110, 160, 191, 193, 195, 197, 199, 345], "batchnorm": [32, 86, 90, 104, 110, 160], "disabl": [32, 86, 90, 104, 110, 160, 194, 221, 342], "comparison": [32, 86, 90, 104, 110, 160, 266, 342, 343], "similar": [32, 38, 57, 86, 90, 104, 105, 106, 110, 124, 142, 156, 159, 160, 162, 163, 164, 166, 226, 228, 237, 240, 241, 338, 342, 343, 344, 345, 349, 351, 354], "confus": [32, 86, 90, 104, 110, 160], "extra_repr": [32, 86, 90, 104, 110], "nontermin": 32, "original_reward": 32, "newli": [32, 86, 90, 104, 110], "OR": 32, "get_buff": [32, 86, 90, 104, 110], "docstr": [32, 86, 90, 104, 110], "get_submodul": [32, 86, 90, 104, 110], "qualifi": [32, 86, 90, 104, 110], "referenc": [32, 86, 90, 104, 110], "attributeerror": [32, 86, 90, 104, 110], "invalid": [32, 86, 90, 104, 110, 113, 202, 203], "resolv": [32, 86, 90, 104, 110], "someth": [32, 86, 90, 99, 104, 110, 336, 343, 344, 349, 354], "get_extra_st": [32, 86, 90, 104, 110, 166], "set_extra_st": [32, 86, 90, 104, 110, 166], "picklabl": [32, 86, 90, 104, 110, 166], "pickl": [32, 86, 90, 104, 110, 166], "get_paramet": [32, 86, 90, 104, 110], "sai": [32, 86, 90, 104, 110, 204, 350, 354], "net_b": [32, 86, 90, 104, 110], "net_c": [32, 86, 90, 104, 110], "conv": [32, 86, 90, 104, 110, 178, 179, 343], "conv2d": [32, 86, 90, 104, 110, 179, 204, 353], "kernel_s": [32, 86, 90, 104, 110, 178, 179, 181, 182, 204, 209, 343, 353], "stride": [32, 86, 90, 104, 110, 178, 179, 181, 182, 190, 204, 343, 353], "diagram": [32, 86, 90, 104, 110], "degre": [32, 86, 90, 104, 110], "named_modul": [32, 86, 90, 104, 110], "o": [32, 86, 90, 104, 110, 196], "transit": [32, 53, 57, 74, 86, 90, 104, 110, 246, 342, 345, 349, 351], "half": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 342], "ipu": [32, 86, 90, 104, 110], "strict": [32, 34, 36, 39, 86, 90, 104, 110, 160, 271], "descend": [32, 86, 90, 104, 110, 160, 271], "persist": [32, 86, 90, 104, 110, 160, 175, 271], "enforc": [32, 72, 86, 90, 104, 110, 160, 242, 271, 349], "preserv": [32, 86, 90, 104, 110, 160, 271], "missing_kei": [32, 86, 90, 104, 110, 160, 271], "unexpected_kei": [32, 86, 90, 104, 110, 160, 271], "namedtupl": [32, 86, 90, 104, 110, 160, 271], "duplic": [32, 72, 86, 90, 104, 110, 254, 259, 266, 279], "l": [32, 86, 90, 104, 110, 191, 195, 280, 344, 349], "idx": [32, 86, 90, 104, 110], "named_buff": [32, 86, 90, 104, 110], "remove_dupl": [32, 86, 90, 104, 110, 266], "prepend": [32, 86, 90, 104, 110, 266], "running_var": [32, 86, 90, 104, 110], "named_children": [32, 86, 90, 104, 110], "conv4": [32, 86, 90, 104, 110], "conv5": [32, 86, 90, 104, 110], "memo": [32, 86, 90, 104, 110], "named_paramet": [32, 86, 90, 104, 110, 136, 266], "register_backward_hook": [32, 86, 90, 104, 110], "removablehandl": [32, 86, 90, 104, 110], "deprec": [32, 86, 90, 104, 110, 160, 169, 173, 234, 250, 252, 254, 257, 258, 259, 264, 265, 268, 269, 270, 271, 279, 281, 282, 283, 284, 289, 354], "favor": [32, 86, 90, 104, 110, 344], "register_full_backward_hook": [32, 86, 90, 104, 110], "register_buff": [32, 86, 90, 104, 110], "running_mean": [32, 86, 90, 104, 110], "alongsid": [32, 86, 90, 104, 110, 348], "num_featur": [32, 86, 90, 104, 110], "register_forward_hook": [32, 86, 90, 104, 110, 188, 214], "with_kwarg": [32, 86, 90, 104, 110], "always_cal": [32, 86, 90, 104, 110], "register_module_forward_hook": [32, 86, 90, 104, 110], "regardless": [32, 86, 90, 104, 110, 252, 265, 268], "register_forward_pre_hook": [32, 86, 90, 104, 110], "invok": [32, 86, 90, 104, 110], "And": [32, 86, 90, 104, 110], "forward_pr": [32, 86, 90, 104, 110], "register_module_forward_pre_hook": [32, 86, 90, 104, 110], "grad_input": [32, 86, 90, 104, 110], "grad_output": [32, 86, 90, 104, 110], "subsequ": [32, 86, 90, 104, 110, 345], "technic": [32, 86, 90, 104, 110, 343, 345], "caller": [32, 86, 90, 104, 110], "register_module_full_backward_hook": [32, 86, 90, 104, 110], "register_full_backward_pre_hook": [32, 86, 90, 104, 110], "backward_pr": [32, 86, 90, 104, 110], "register_module_full_backward_pre_hook": [32, 86, 90, 104, 110], "register_load_state_dict_post_hook": [32, 86, 90, 104, 110], "incompatible_kei": [32, 86, 90, 104, 110], "register_modul": [32, 86, 90, 104, 110, 339], "alia": [32, 86, 90, 104, 110], "register_paramet": [32, 86, 90, 104, 110], "register_state_dict_pre_hook": [32, 86, 90, 104, 110], "keep_var": [32, 34, 36, 39, 86, 90, 104, 110, 160, 271], "requires_grad_": [32, 86, 90, 104, 110], "autograd": [32, 86, 90, 104, 110, 160, 271], "freez": [32, 86, 90, 104, 110], "finetun": [32, 86, 90, 104, 110], "gan": [32, 86, 90, 104, 110], "share_memori": [32, 86, 87, 90, 104, 110, 342], "share_memory_": [32, 86, 90, 104, 110, 353], "destin": [32, 34, 36, 39, 86, 90, 104, 110, 119, 125, 126, 128, 160, 162, 166, 175, 271, 300], "averag": [32, 86, 90, 104, 110, 160, 166, 236, 260, 261, 271, 315, 342, 344], "shallow": [32, 86, 90, 104, 110, 160, 271, 345], "pleas": [32, 55, 86, 90, 104, 105, 106, 110, 120, 157, 160, 271, 336], "detach": [32, 86, 90, 104, 110, 160, 266, 271, 281, 282, 283, 284, 342], "non_block": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 345], "memory_format": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "channels_last": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "unchang": [32, 86, 90, 104, 110, 124, 127, 142, 156, 159, 160, 162, 164, 233, 240, 314, 342, 351], "tri": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "pin": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "4d": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "ignore_w": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "1913": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "3420": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "5113": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "2325": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "torch_doctest_cuda1": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "gpu1": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "1914": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "5112": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 349], "2324": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "float16": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 192, 196, 240], "cdoubl": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "3741": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "j": [32, 35, 65, 66, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 339], "2382": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "5593": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240, 349], "4443": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "complex128": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "6122": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "1150": [32, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 240], "to_empti": [32, 86, 90, 104, 110], "dst_type": [32, 86, 90, 104, 110], "xpu": [32, 86, 90, 104, 110], "set_to_non": [32, 86, 90, 104, 110], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "uniqu": [33, 73, 74, 120, 129, 155, 156, 157, 307, 351], "discretebox": [33, 86, 90, 104, 110, 348, 354], "chosen_data": [34, 60], "rewarddata": [34, 60, 335], "rejected_data": [34, 60], "from_dataset": [34, 36, 60], "dataset_nam": [34, 36, 40, 45, 60, 103], "max_length": [34, 36, 37, 43, 45, 60], "550": [34, 36, 40, 45, 60, 73, 74, 349], "root_dir": [34, 36, 45, 60], "from_disk": [34, 36, 45, 60], "num_work": [34, 36, 45, 59, 60, 101, 104, 110, 342, 343], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 52, 53, 54, 55, 57, 58, 59, 60, 66, 73, 86, 90, 104, 110, 125, 128, 142, 160, 164, 309, 350], "load_from_disk": [34, 36, 45, 60], "load_dataset": [34, 36, 45, 60], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 60], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 60], "end_scor": [34, 39, 40, 60], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 333], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 186, 219], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 60, 62, 63, 79], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "memmap": [34, 36, 39, 62, 104, 110, 166, 300, 302, 314, 351], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "mimic": [34, 36, 39, 86, 90, 104, 110], "cross": [34, 36, 39, 177], "anymor": [34, 36, 39, 160, 240], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 104, 354], "memmap_": [34, 36, 39, 166], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 342, 345], "alloc": [34, 36, 39, 63, 202, 203, 342], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 345], "unbind": [34, 36, 39, 193, 197], "alpha": [35, 41, 65, 66, 178, 179, 204, 251, 258, 267, 269, 271, 342, 351, 353], "ep": [35, 41, 65, 66, 166, 236, 252, 272, 315, 342, 343, 345], "1e": [35, 41, 65, 66, 166, 186, 189, 208, 219, 342, 343, 344, 348], "08": [35, 41, 65, 66, 342, 343, 344, 349], "pin_memori": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 141, 342, 353], "schaul": [35, 65, 66], "quan": [35, 65, 66], "antonogl": [35, 65, 66], "silver": [35, 65, 66], "2015": [35, 65, 66], "arxiv": [35, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 120, 142, 162, 180, 181, 182, 183, 184, 185, 188, 189, 190, 195, 201, 207, 209, 210, 212, 213, 215, 216, 222, 232, 236, 250, 251, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 267, 268, 271, 272, 281, 286, 294, 350], "ab": [35, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 119, 142, 162, 166, 180, 185, 189, 190, 195, 201, 207, 209, 210, 212, 213, 215, 216, 222, 250, 251, 254, 255, 256, 257, 260, 261, 262, 263, 264, 267, 268, 271, 350], "1511": [35, 65, 66, 190], "05952": [35, 65, 66], "expon": [35, 41, 65, 66], "\u03b1": [35, 41, 65, 66], "delta": [35, 41, 65, 66, 191, 195, 219, 237, 241, 335, 338], "null": [35, 41, 65, 66, 118], "max_siz": [35, 38, 41, 42, 62, 63, 64, 75, 79, 344], "1_000": [35, 38, 41, 42, 351], "merg": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 349], "mini": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 348], "decid": [35, 38, 41, 42, 353], "meth": [35, 38, 41, 42, 266, 349], "incompat": [35, 38, 41, 42, 270, 351], "drop_last": [35, 38, 41, 42, 72, 74], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 351], "tensordictprioritizedreplaybuff": [35, 335, 353], "simplifi": [35, 349, 351], "manual_se": [35, 38, 41, 42, 54, 58, 59, 73, 74, 82, 83, 86, 90, 104, 110, 117, 127, 138, 147, 150, 155, 157, 202, 203, 211, 225, 232, 233, 234, 236, 244, 250, 251, 253, 257, 264, 271, 348, 349, 353, 354], "_weight": [35, 41, 65, 66, 351, 353], "arrai": [35, 40, 65, 86, 90, 104, 110, 129, 191, 192, 195, 196, 342, 351], "update_prior": [35, 65, 66, 314, 339, 343, 351, 353], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 68, 329, 342, 343, 351], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 317, 342, 344, 345, 348, 349], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 342], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 253, 254, 256, 257, 258, 259, 264, 266, 269, 271, 273, 279, 342, 351, 353], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68, 342, 351, 353], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 68, 342, 343, 351], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 68, 342, 343], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "cursor": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 69, 77, 78, 80, 81, 161], "set_sampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_storag": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_writ": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 59, 68], "prompt_rindex": [36, 37, 40], "os": [36, 45, 60, 343], "cpu_count": [36, 45, 60], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247], "text": [37, 40, 43, 55, 191, 192, 195, 196, 236, 344], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 180, 185, 212], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 351], "inde": [37, 127, 344, 349], "roundrobinwrit": [38, 42, 54], "Not": [38, 82, 83, 95, 96], "depth": [38, 86, 90, 100, 104, 110, 177, 178, 179, 181, 182, 183, 184, 189, 190, 199, 201, 204, 205, 209, 210, 231, 337, 343, 347, 348, 351], "_pytre": [38, 351], "tree_map": [38, 351], "did": [38, 165, 287, 343, 344, 351, 354], "assert0": [38, 351], "ref_model": 40, "reward_model": [40, 246], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 136], "kl": [40, 136, 261, 265], "penalti": [40, 265], "strai": 40, "calcul": [40, 147, 191, 256], "gpt2rewardmodel": 40, "get_dataload": [40, 335], "promptdata": [40, 335], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 60], "tensorclass_typ": [40, 60], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 349, 351], "reward_kl": [40, 136], "reward_raw": 40, "sample_log_prob": [40, 226, 227, 228, 237, 241, 243, 268, 326, 344, 348, 353], "create_rollout_td": 40, "log_prob": [40, 186, 202, 203, 211, 221, 241], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 191, 195, 251, 252, 258, 265, 267, 268, 269, 271, 315, 342], "term": [40, 136, 195, 196, 206, 207, 249, 250, 258, 319, 343, 344, 348], "subtract": [40, 155], "eo": 40, "generation_config": 40, "generationconfig": 40, "ti": [40, 290, 291, 292, 293, 295, 296, 297, 298, 343], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 65, 254, 257, 258, 259, 264, 266, 269, 271, 273, 279, 351, 353], "reduct": [41, 65, 66, 77], "prioritizedreplaybuff": [41, 335, 353], "min": [41, 65, 66, 77, 219, 220, 221, 230, 236, 251, 252, 258, 267, 269, 271, 343, 344, 348], "median": [41, 65, 66, 77, 95, 96, 237, 241], "include_info": [41, 42, 52, 53, 54, 55, 56, 57, 58, 59], "kw": [42, 69, 78], "int32": [42, 52, 57, 73, 95, 96, 172], "huggingfac": [43, 54, 59, 235], "co": [43, 129, 349], "doc": [43, 92, 95, 96, 103, 107, 307, 343, 348, 353], "pad_trunc": 43, "am": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 335], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "elementwis": 45, "vocabulari": 45, "loader": [45, 344], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 66, 73, 74, 86, 90, 104, 110, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 166, 175, 176, 229, 230, 233, 234, 236, 241, 254, 279, 300], "valid_mask_kei": 45, "conver": 45, "batch_dimens": 45, "filder": 45, "data_memmap": 45, "exclus": [48, 49, 52, 57, 66, 73, 74, 132, 191, 193, 195, 197, 202, 203, 231, 232, 238, 239, 272, 273, 281, 282, 283, 284, 285, 307, 333, 337], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "dataset_id": [52, 53, 54, 55, 57, 58, 59], "num_proc": 52, "num_slic": [52, 57, 66, 73, 74], "slice_len": [52, 57, 66, 73, 74], "strict_len": 52, "arari": 52, "2600": 52, "million": [52, 345], "consequ": [52, 195], "50x10": 52, "available_dataset": [52, 54, 55, 57, 58, 59, 73, 74], "ataridqn": 52, "immutabledatasetwrit": [52, 53, 55, 56, 57, 58, 59], "greater": [52, 66, 73, 74, 193, 197, 342, 343, 353], "strict_length": [52, 57, 66, 73, 74], "shorter": [52, 57, 66, 73, 74], "Be": [52, 57, 66, 73, 74], "game_nam": 52, "pong": [52, 102, 140, 354], "krull": 52, "1d": [52, 66, 73, 74], "cheapli": 52, "nontensordata": [52, 57], "invalid_rang": 52, "999998": 52, "999999": 52, "add_count": 52, "84": [52, 146, 342, 343, 345, 349, 351], "valueestim": [52, 250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 335, 338, 342, 348], "convolut": [52, 178, 179, 181, 182, 204, 217], "2657628": 52, "2657629": 52, "2657630": 52, "2657631": 52, "2657632": 52, "2657633": 52, "2657634": 52, "2657635": 52, "2657636": 52, "2657637": 52, "2657638": 52, "2657639": 52, "2657640": 52, "2657641": 52, "2657642": 52, "2657643": 52, "2657644": 52, "2657645": 52, "2657646": 52, "2657647": 52, "2657648": 52, "2657649": 52, "2657650": 52, "2657651": 52, "2657652": 52, "2657653": 52, "2657654": 52, "2657655": 52, "2657656": 52, "2657657": 52, "2657658": 52, "2657659": 52, "2657660": 52, "2657661": 52, "2657662": 52, "2657663": 52, "2657664": 52, "2657665": 52, "2657666": 52, "2657667": 52, "2657668": 52, "2657669": 52, "2657670": 52, "2657671": 52, "2657672": 52, "2657673": 52, "2657674": 52, "2657675": 52, "2657676": 52, "2657677": 52, "2657678": 52, "2657679": 52, "2657680": 52, "2657681": 52, "2657682": 52, "2657683": 52, "2657684": 52, "2657685": 52, "2657686": 52, "2657687": 52, "2657688": 52, "2657689": 52, "2657690": 52, "2657691": 52, "1995687": 52, "1995688": 52, "1995689": 52, "1995690": 52, "1995691": 52, "1995692": 52, "1995693": 52, "1995694": 52, "1995695": 52, "1995696": 52, "1995697": 52, "1995698": 52, "1995699": 52, "1995700": 52, "1995701": 52, "1995702": 52, "1995703": 52, "1995704": 52, "1995705": 52, "1995706": 52, "1995707": 52, "1995708": 52, "1995709": 52, "1995710": 52, "1995711": 52, "1995712": 52, "1995713": 52, "1995714": 52, "1995715": 52, "1995716": 52, "1995717": 52, "1995718": 52, "1995719": 52, "1995720": 52, "1995721": 52, "1995722": 52, "1995723": 52, "1995724": 52, "1995725": 52, "1995726": 52, "1995727": 52, "1995728": 52, "1995729": 52, "1995730": 52, "1995731": 52, "1995732": 52, "1995733": 52, "1995734": 52, "1995735": 52, "1995736": 52, "1995737": 52, "1995738": 52, "1995739": 52, "1995740": 52, "1995741": 52, "1995742": 52, "1995743": 52, "1995744": 52, "1995745": 52, "1995746": 52, "1995747": 52, "1995748": 52, "1995749": 52, "1995750": 52, "quick": 52, "left": [52, 53, 57, 124, 125, 126, 130, 136, 142, 144, 145, 151, 154, 157, 159, 162, 164, 233, 343, 344], "untouch": [52, 57, 124, 125, 126, 130, 136, 144, 145, 151, 154, 159], "_max_run": 52, "dataset_asterix": 52, "asterix": 52, "dataset_pong": 52, "sample_from_al": [52, 68, 71], "buffer_id": [52, 71, 76], "hidden": [52, 104, 110, 119, 189, 191, 192, 193, 195, 196, 197, 198, 209, 210, 215, 216, 226, 227, 228, 230, 240, 243, 252, 265, 268, 337, 345, 347, 353], "exclusive_field": [52, 347, 354], "stack_dim": [52, 347, 354], "from_env": 53, "use_truncated_as_don": 53, "direct_download": 53, "terminate_on_end": 53, "env_kwarg": [53, 58, 59, 331, 332, 342], "reconstruct": [53, 73, 74, 261, 342, 354], "recov": [53, 55, 57, 58, 59, 73, 74, 229, 234, 236, 242, 257, 264, 347], "get_dataset": 53, "qlearning_dataset": 53, "fewer": 53, "possess": 53, "unexpectedli": 53, "traj_split": 53, "observationnorm": [53, 166, 333, 342, 343, 344, 345, 353], "maze2d": 53, "umaz": 53, "loc": [53, 136, 138, 149, 194, 208, 220, 221, 226, 227, 228, 237, 241, 243, 250, 251, 264, 268, 269, 270, 271, 321, 326, 333, 337, 342, 343, 344, 345, 348, 353], "gen": 54, "dgrl": 54, "accompani": [54, 154], "gap": 54, "2312": 54, "05742": 54, "gen_dgrl": 54, "procgen": 54, "bigfish": 54, "bossfight": 54, "categori": [54, 337, 339], "1m_e": 54, "1m_": 54, "comma": 54, "npy": 54, "extract": [54, 235, 342, 344], "mmap": [54, 58, 59], "minut": [54, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "internet": [54, 59], "connect": [54, 59], "minari": 55, "websit": [55, 57], "currenrtli": 55, "minari_data": 55, "door": 55, "torchrl_logg": [55, 58], "28": [55, 204, 342, 343, 344, 349], "39": [55, 95, 96, 343, 345, 349, 350], "door_body_po": 55, "qpo": 55, "qvel": 55, "dua": 56, "graff": 56, "2017": 56, "uci": 56, "archiv": 56, "ic": 56, "edu": 56, "ml": 56, "sklearn": [56, 103], "adult_num": [56, 103], "adult_onehot": [56, 103], "mushroom_num": [56, 103], "mushroom_onehot": [56, 103], "covertyp": [56, 103], "shuttl": [56, 103], "magic": [56, 103], "shuffl": [57, 72, 74, 348], "stream": 57, "embodi": [57, 350], "22": [57, 73, 74, 165, 341, 342, 343, 349, 352, 354], "institut": 57, "demonstr": [57, 344, 348, 349, 351, 354], "527": [57, 349], "skill": 57, "160266": 57, "googl": [57, 58, 82, 83, 344, 345, 348], "open_x_embodi": 57, "2310": [57, 107], "08864": 57, "language_instruct": 57, "get_non_tensor": 57, "neither": [57, 349], "nor": 57, "insuffici": 57, "chosen": [57, 111, 112, 155, 156, 213, 214, 222, 239, 300, 326, 337], "openx": 57, "__will": 57, "change__": 57, "randomli": [57, 72, 137, 138, 156, 233, 237, 241, 348, 349, 351], "crop": [57, 122, 143, 300], "modal": [57, 342], "cmu_stretch": 57, "is_init": [57, 59, 119, 135, 193, 197, 236, 345], "language_embed": 57, "512": [57, 190, 343, 349], "lift": 57, "green": 57, "garbag": 57, "lid": 57, "roboset": 58, "h5": [58, 59], "roboh": [58, 107], "fk1": 58, "v4": [58, 90, 104, 146, 290, 291, 292, 293, 295, 296, 297, 298, 326, 342, 344, 350], "expert": 58, "fk1_microopenrandom_v2d": 58, "concis": 58, "17": [58, 74, 104, 326, 341, 342, 343, 345, 349, 352], "18": [58, 74, 108, 109, 111, 112, 205, 341, 342, 343, 344, 345, 348, 349, 350, 352, 354], "15": [58, 74, 86, 90, 104, 110, 230, 236, 260, 342, 343, 345, 349, 351], "19": [58, 73, 74, 77, 342, 343, 345, 348, 349, 351], "75": [58, 342, 343, 349, 350], "totensor": 59, "image_s": 59, "v": [59, 166, 191, 192, 195, 196, 226, 257, 264, 271, 337, 342, 343], "npz": 59, "2206": [59, 101, 102], "04779": [59, 251, 256], "vd4rl": 59, "detect": 59, "squar": [59, 122, 194, 220, 221, 300], "rectangular": [59, 178, 179], "walker_walk": 59, "64px": 59, "height": [59, 122, 146], "veloc": [59, 84, 85, 86, 90, 104, 110, 120, 348, 349, 354], "infinit": [60, 111, 112, 351], "three": [60, 337, 339, 344, 348, 349, 351, 354], "block": [60, 61, 81, 337, 345], "pairwisedataset": [60, 335], "256": [60, 185, 343, 344, 348, 349], "immut": [61, 86, 90, 104, 110, 145, 160], "piec": [61, 69, 78, 80, 81, 342, 343, 344, 348, 349, 351], "scratch_dir": [62, 342, 351], "sent": [62, 63, 79, 166], "mistak": [62, 63, 79], "myclass": [62, 63, 79], "foo": [62, 63, 79, 230, 351, 354], "bar": [62, 63, 79, 230, 310, 311, 313, 317, 339, 343], "attach": [62, 63, 64, 75, 76, 79, 343], "entiti": [62, 63, 64, 75, 76, 79], "auto": [63, 79, 165, 236, 251, 258, 267, 269, 271, 273, 338, 348], "zero_": [63, 79, 172], "max_capac": [65, 66, 342, 351], "data_0": 65, "data_1": 65, "smoothen": 65, "tdrb": 65, "pack": [65, 191, 195, 344, 354], "end_kei": [66, 73, 74], "traj_kei": [66, 73, 74], "cache_valu": [66, 73, 74], "truncated_kei": [66, 73, 74, 147, 154], "expens": [66, 73, 74, 351], "readili": [66, 73, 74], "conjunct": [66, 73, 74, 343], "Will": [66, 73, 86, 101, 300], "unsqueez": [66, 117, 120, 121, 158, 161, 198, 342, 345, 348, 349], "tolist": 66, "120110917137936e": 66, "06": [66, 186, 219, 342, 343, 344, 348, 349, 350], "uniformli": [67, 266, 354], "storageensembl": [68, 71], "samplerensembl": 68, "writerensembl": [68, 76], "num_buffer_sampl": [68, 71], "ensembl": [68, 71, 76, 81, 240, 269], "forbidden": 68, "collat": 68, "0x13a2ef430": 68, "0x13a2f9310": 68, "interpol": [68, 146, 343, 345], "interpolationmod": [68, 345], "bilinear": [68, 146, 345], "0x13a2f9220": 68, "0x13a2f9f70": 68, "0x13a2d9b50": 68, "0x13a2f95b0": 68, "0x128648260": 68, "roundrobin": [69, 78], "incomplet": [72, 74], "fresh": 72, "caution": [72, 168, 354], "haven": [72, 350], "remain": [72, 119, 126, 127, 136, 155, 207], "draw": [72, 233], "slicesamplerwithoutreplac": 73, "320": [73, 74, 84, 85, 343, 349, 354], "700": [73, 74], "robosetexperiencereplai": [73, 74, 335], "dataid": [73, 74], "__len__": 75, "rank_kei": 77, "rank": [77, 177], "samplerwithoutreplac": [77, 344, 348, 351], "get_insert_index": 77, "convers": [82, 83, 95, 96, 338], "2106": [82, 83, 255], "13281": [82, 83], "categorical_action_encod": [82, 83, 89, 91, 92, 95, 96, 101, 102, 107], "frame_skip": [82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 107, 133, 310, 313, 320, 339, 342, 343, 344, 353], "repeat": [82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 177, 344, 348, 349], "allow_done_after_reset": [82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107], "availalb": [82, 83, 95, 96], "ant": [82, 83, 86, 90, 93, 104, 110, 350], "87": [82, 83, 342, 343, 349, 350], "acrobot": [82, 83, 84, 85, 354], "fetch": [82, 83, 84, 85, 136, 350, 351, 354], "advant": [82, 83, 95, 96], "report": [82, 83, 95, 96], "short": [82, 83, 95, 96, 104, 168, 195, 196, 343, 344, 348], "timer": [82, 83, 95, 96], "timeit": [82, 83, 95, 96], "310": [82, 83, 349], "00": [82, 83, 341, 342, 343, 344, 345, 348, 349, 350, 352], "ms": [82, 83, 95, 96], "268": [82, 83, 349], "433": [82, 83, 349], "80": [82, 83, 342, 343, 344, 348, 349, 350], "27": [82, 83, 104, 110, 342, 343, 349], "213": [82, 83, 349], "8605": [82, 83], "pipelineenv": 83, "get_environ": 83, "dm_control": [84, 85, 342, 347, 354], "2006": [84, 85, 251, 256, 349], "12983": [84, 85], "task_nam": [84, 86, 90, 104, 110], "pixels_onli": [84, 85, 89, 91, 92, 107, 342, 343, 353, 354], "cheetah": [84, 85, 86, 90, 104, 110, 300, 342, 354], "240": [84, 85, 349, 353, 354], "swingup": [84, 85, 354], "swingup_spars": [84, 85, 354], "ball_in_cup": [84, 85, 354], "catch": [84, 85, 354], "cartpol": [84, 85, 86, 90, 104, 110, 120, 150, 155, 343, 345, 351, 354], "balance_spars": [84, 85, 354], "three_pol": [84, 85, 354], "two_pol": [84, 85, 354], "finger": [84, 85, 354], "turn_easi": [84, 85, 354], "turn_hard": [84, 85, 354], "fish": [84, 85, 354], "upright": [84, 85, 343, 354], "swim": [84, 85, 354], "hopper": [84, 85, 354], "hop": [84, 85, 354], "humanoid": [84, 85, 104, 110, 347, 354], "walk": [84, 85, 104, 110, 343, 347, 354], "run_pure_st": [84, 85, 354], "bring_bal": [84, 85, 354], "bring_peg": [84, 85, 354], "insert_bal": [84, 85, 354], "insert_peg": [84, 85, 354], "point_mass": [84, 85, 354], "reacher": [84, 85, 354], "swimmer": [84, 85, 354], "swimmer6": [84, 85, 354], "swimmer15": [84, 85, 354], "walker": [84, 85, 354], "dog": [84, 85, 354], "trot": [84, 85, 354], "humanoid_cmu": [84, 85, 354], "lqr": [84, 85, 354], "lqr_2_1": [84, 85, 354], "lqr_6_2": [84, 85, 354], "quadrup": [84, 85, 354], "escap": [84, 85, 354], "stacker": [84, 85, 354], "stack_2": [84, 85, 354], "stack_4": [84, 85, 354], "deviceless": 86, "run_type_check": [86, 100], "counterenv": 86, "unboundedcontinuoustensorspec": [86, 90, 100, 104, 110, 117, 125, 128, 144, 156, 172, 177, 201, 225, 240, 243, 245, 270, 335, 344, 345, 348, 349, 354], "_step": [86, 90, 104, 110, 117, 125, 128, 132, 144, 145], "continuousbox": [86, 90, 104, 110, 172, 344, 348, 349, 353, 354], "sort": [86, 90, 104, 110, 236], "another_act": [86, 90, 104, 110], "mutabl": [86, 90, 104, 110], "batch_lock": [86, 88, 90, 104, 110, 156, 160, 349], "done_keys_group": [86, 90, 104, 110], "outer": [86, 90, 104, 110, 339, 342, 343, 354], "another_don": [86, 90, 104, 110], "empty_cach": [86, 90, 104, 110, 160], "fake_tensordict": [86, 90, 104, 110, 343], "fake": [86, 90, 104, 110, 342, 343], "afterward": [86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247, 354], "silent": [86, 90, 104, 110, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 204, 205, 208, 209, 210, 212, 215, 216, 218, 223, 229, 230, 232, 233, 236, 239, 244, 247], "braxenv": [86, 90, 104, 110, 145, 335], "envnam": [86, 90, 104, 110], "pipeline_st": [86, 90, 104, 110], "attibut": [86, 90, 104, 110], "speak": [86, 90, 104, 110, 342], "rand_act": [86, 90, 99, 104, 105, 106, 110], "register_gym": [86, 90, 104, 110], "entry_point": [86, 90, 104, 110], "info_kei": [86, 90, 104, 110], "reward_threshold": [86, 90, 104, 110], "nondeterminist": [86, 90, 104, 110], "max_episode_step": [86, 89, 90, 91, 104, 110], "order_enforc": [86, 90, 104, 110], "autoreset": [86, 90, 104, 110], "disable_env_check": [86, 89, 90, 101, 102, 104, 110], "apply_api_compat": [86, 90, 104, 110], "nasium": [86, 90, 104, 110], "scope": [86, 90, 104, 110, 354], "dmcontrolenv": [86, 90, 104, 110, 300, 335, 342, 347, 354], "dmc": [86, 90, 104, 110], "removeemptyspec": [86, 90, 104, 110], "threshold": [86, 90, 104, 110, 233, 251, 252, 344], "learnt": [86, 90, 104, 110, 329], "knowledg": [86, 90, 104, 110], "checker": [86, 89, 90, 101, 102, 104, 110], "stepapicompat": [86, 90, 104, 110], "concept": [86, 90, 104, 110, 343, 351], "deem": [86, 90, 104, 110, 111, 112], "envgym": [86, 90, 104, 110], "0855": [86, 90, 104, 110], "0215": [86, 90, 104, 110], "0881": [86, 90, 104, 110], "0412": [86, 90, 104, 110], "1101": [86, 90, 104, 110], "0080": [86, 90, 104, 110], "0254": [86, 90, 104, 110], "0424": [86, 90, 104, 110], "9609e": [86, 90, 104, 110], "02": [86, 90, 104, 110, 341, 342, 343, 344, 349, 350, 352], "9776e": [86, 90, 104, 110], "04": [86, 90, 94, 104, 110, 342, 343, 344, 345, 349, 350], "6347e": [86, 90, 104, 110], "03": [86, 90, 104, 110, 138, 341, 342, 343, 349, 350, 352], "3842e": [86, 90, 104, 110], "5338e": [86, 90, 104, 110], "3064e": [86, 90, 104, 110], "0381e": [86, 90, 104, 110], "6656e": [86, 90, 104, 110], "05": [86, 90, 104, 110, 342, 343, 345, 348, 349, 350], "0204e": [86, 90, 104, 110], "action_spac": [86, 90, 104, 110, 129, 188, 214, 231, 232, 238, 239, 250, 251, 253, 254, 256, 257, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 345], "0833": [86, 90, 104, 110], "0275": [86, 90, 104, 110], "0612": [86, 90, 104, 110], "0770": [86, 90, 104, 110, 349], "1256": [86, 90, 104, 110, 349], "0082": [86, 90, 104, 110], "0186": [86, 90, 104, 110], "0476": [86, 90, 104, 110], "2221": [86, 90, 104, 110], "2256": [86, 90, 104, 110], "5930": [86, 90, 104, 110], "6937": [86, 90, 104, 110], "5865": [86, 90, 104, 110], "5479": [86, 90, 104, 110], "0187": [86, 90, 104, 110], "6825": [86, 90, 104, 110, 349], "5224": [86, 90, 104, 110], "0018": [86, 90, 104, 110, 349], "cattensor": [86, 90, 104, 110, 326, 342, 347, 349, 354], "1005": [86, 90, 104, 110], "0335": [86, 90, 104, 110], "0268": [86, 90, 104, 110, 349], "0133": [86, 90, 104, 110], "0627": [86, 90, 104, 110], "0074": [86, 90, 104, 110, 349], "0488": [86, 90, 104, 110, 349], "0353": [86, 90, 104, 110], "0075": [86, 90, 104, 110, 349], "0069": [86, 90, 104, 110, 349], "0098": [86, 90, 104, 110, 349], "0058": [86, 90, 104, 110, 349], "0033": [86, 90, 104, 110, 349], "0157": [86, 90, 104, 110], "0004": [86, 90, 104, 110, 349], "0381": [86, 90, 104, 110], "0452": [86, 90, 104, 110], "11355747": [86, 90, 104, 110], "04257728": [86, 90, 104, 110], "00408397": [86, 90, 104, 110], "04155852": [86, 90, 104, 110], "0389733": [86, 90, 104, 110], "01409826": [86, 90, 104, 110], "0978704": [86, 90, 104, 110], "08808327": [86, 90, 104, 110], "03970837": [86, 90, 104, 110], "00535434": [86, 90, 104, 110], "02353762": [86, 90, 104, 110], "05116226": [86, 90, 104, 110], "02788907": [86, 90, 104, 110], "06848346": [86, 90, 104, 110], "05154399": [86, 90, 104, 110], "0371798": [86, 90, 104, 110], "05128025": [86, 90, 104, 110], "dydact": [86, 90, 104, 110], "gym_env": [86, 90, 104, 110, 353], "reset_kei": [86, 90, 104, 110, 120, 150, 155, 156, 157], "multitask": [86, 90, 104, 110], "multiag": [86, 90, 99, 104, 105, 106, 110, 176, 205, 213, 222, 279], "another_reward": [86, 90, 104, 110], "callback": [86, 90, 104, 110, 348], "auto_reset": [86, 90, 104, 110, 349], "auto_cast_to_devic": [86, 90, 104, 110, 348], "break_when_any_don": [86, 90, 104, 110, 348], "return_contigu": [86, 90, 104, 110, 168, 347], "soon": [86, 90, 104, 105, 106, 110], "ndim": [86, 90, 104, 110], "concomitt": [86, 90, 104, 110], "workspac": [86, 90, 104, 110], "prevail": [86, 90, 104, 110, 150, 176], "creator": [87, 322, 323, 331, 332, 333], "substitut": [87, 155, 166], "vecnorm": [87, 333], "env_creat": [87, 342], "test_env1": 87, "_td": 87, "observation_count": [87, 354], "test_env2": 87, "sleep": [87, 354], "ps": 87, "p1": 87, "p2": 87, "9934": 87, "env_str": 88, "device_map": 88, "accross": [89, 91], "registri": 89, "asyncvectorenv": 89, "involv": [89, 91, 92, 107], "pixel_observ": [89, 91, 92, 107], "pixelobservationwrapp": [89, 91, 92, 107], "al": [89, 91, 129, 140, 177, 354], "adventur": [89, 91, 354], "v5": [89, 91, 102, 129, 140, 354], "airraid": [89, 91, 354], "alien": [89, 91, 354], "time_limit": 89, "timelimit": [89, 111, 112], "default_info_dict_read": [89, 90, 91, 104], "reader": [89, 90, 91, 104, 343], "set_info_dict_read": [89, 90, 91, 104], "info_dict": [89, 90, 91, 104], "auto_register_info_dict": [89, 90, 91, 104], "info_dict_read": [90, 104], "succe": [90, 104], "halfcheetah": [90, 104, 146, 326, 342], "register_info_dict": 90, "read_act": 90, "read_don": 90, "interrupt": [90, 287], "nonsens": 90, "fallback": 90, "broken": [90, 168], "read_ob": 90, "dictat": [90, 237, 241, 268, 342, 349], "read_reward": 90, "baseinfodictread": 90, "hoc": [90, 104], "dict_read": 90, "my_info_kei": 90, "some_env": 90, "vecenv": 91, "vectorenv": 91, "placehold": [92, 129, 160], "secur": 92, "habitat3": 92, "ai": [92, 350], "habitatrenderpick": 92, "isaacgym": [93, 94], "isaacgymwrapp": [93, 335], "isaacgymenv": [94, 335], "webpag": 94, "isaac": 94, "essenc": 94, "instadeepai": [95, 96], "2306": [95, 96], "09884": [95, 96], "snake": [95, 96], "grid": [95, 96, 300], "bodi": [95, 96], "body_st": [95, 96], "fruit_posit": [95, 96], "col": [95, 96], "row": [95, 96], "head_posit": [95, 96], "tail": [95, 96], "game2048": [95, 96], "maze": [95, 96], "cleaner": [95, 96], "cvrp": [95, 96], "multicvrp": [95, 96], "minesweep": [95, 96], "rubikscub": [95, 96], "knapsack": [95, 96], "sudoku": [95, 96], "tsp": [95, 96], "connector": [95, 96], "v2": [95, 96, 108, 109, 276, 290, 291, 292, 293, 295, 296, 297, 298, 345], "mmst": [95, 96], "graphcolor": [95, 96], "partli": [95, 96], "scrambl": [95, 96], "robotwarehous": [95, 96], "tetri": [95, 96], "binpack": [95, 96], "jobshop": [95, 96], "0x1fca91910": 95, "122": [95, 96, 349, 354], "40": [95, 96, 342, 343, 344, 345, 348, 349, 351], "0x1ff9baee0": 95, "134": [95, 96, 349], "0x1ff9ba7c0": 95, "172": [95, 96, 349], "31": [95, 96, 342, 343, 348, 349, 350], "rubric": [96, 138, 243], "mo": [97, 98], "minecart": [97, 98], "mo_gym": 98, "qualnam": 99, "leverag": [99, 105, 106, 342, 348, 354], "neural": [99, 105, 106, 178, 179, 217, 240, 337, 343, 344, 345, 348, 349, 354], "group_map": [99, 105, 106, 111, 112, 113], "constructiuon": [99, 105, 106], "premad": [99, 105, 106, 111, 112, 279], "all_in_one_group": [99, 113], "agent_0": [99, 105, 106, 113], "agent_1": [99, 105, 106, 113], "agent_2": [99, 105, 106, 113], "agent_3": 99, "one_group_per_ag": [99, 105, 106], "environn": 100, "mymbenv": [100, 177, 201], "world_model": [100, 177, 201, 261], "super": [100, 117, 125, 128, 144, 177, 188, 201, 245, 251, 253, 257, 258, 264, 269, 271, 273, 342, 349, 353], "hidden_observ": [100, 177, 201], "mlp": [100, 177, 178, 179, 181, 182, 183, 184, 193, 197, 198, 201, 205, 226, 231, 254, 256, 326, 337, 343, 347, 350, 353], "worldmodelwrapp": [100, 177, 201], "activation_class": [100, 177, 178, 179, 181, 182, 183, 184, 189, 190, 199, 201, 204, 205, 343, 348, 353], "relu": [100, 177, 185, 201, 208, 249], "activate_last_lay": [100, 177, 184, 199, 201], "sail": [101, 102], "sg": [101, 102], "10558": [101, 102], "readthedoc": 101, "en": 101, "python_interfac": 101, "envpoolmixin": 102, "env_bas": 102, "task_id": 102, "env_typ": 102, "gym_reset_return_info": 102, "envpool_env": 102, "www": [103, 202, 203], "fetch_openml": 103, "106": [103, 349], "my_env_fun": [104, 110], "custom_attribute_list": [104, 110], "custom_attribut": [104, 110], "custom_method_list": [104, 110], "custom_method": [104, 110], "deploi": [104, 110], "slight": [104, 110, 343], "share_individual_td": [104, 110], "shared_memori": [104, 110], "policy_proof": [104, 110], "ll": [104, 110, 191, 192, 195, 196, 342, 343, 344, 345, 348, 354], "introduc": [104, 110, 191, 193, 195, 197, 236, 342], "serial_for_singl": [104, 110], "com_veloc": [104, 110], "extrem": [104, 110], "head_height": [104, 110], "joint_angl": [104, 110], "torso_vert": [104, 110], "stringent": [104, 344, 348], "inter": 104, "penv": 104, "tensordictprim": [104, 345], "reward_ctrl": 104, "reward_run": 104, "x_posit": 104, "x_veloc": 104, "env_fix": 104, "drastic": [104, 351], "influenc": 104, "thumb": [104, 344], "suppos": [104, 313, 339, 354], "myenv": [104, 125, 128], "update_kwarg": [104, 110], "pettingzoo": [105, 106], "pet": [105, 106], "zoo": [105, 106], "__": [105, 106], "aecenv": [105, 106], "use_mask": [105, 106], "dead": [105, 106], "compulsori": [105, 106], "adversary_0": [105, 106], "adversari": [105, 106], "marlgroupmaptyp": [105, 106, 111, 112, 113, 335], "vectoris": [105, 106, 191, 192, 195, 196], "sisl": 105, "multiwalker_v9": 105, "return_st": [105, 106], "categorical_act": [105, 106, 108, 109, 111, 112], "n_piston": [105, 106], "pistonball_v6": [105, 106], "piston": [105, 106], "piston_0": [105, 106], "piston_1": [105, 106], "piston_20": [105, 106], "aec": [105, 106], "tictactoe_v3": [105, 106], "player": [105, 106], "player_1": [105, 106], "player_2": [105, 106], "butterfli": 106, "parallel_env": [106, 342, 353, 354], "vikashplu": 107, "wiki": 107, "06828": 107, "smacv2": [108, 109], "starcraft": [108, 109], "challeng": [108, 109, 349, 350], "10gen_terran": [108, 109], "10gen_zerg": [108, 109], "10gen_protoss": [108, 109], "3m": [108, 109], "8m": [108, 109], "25m": [108, 109], "5m_vs_6m": [108, 109], "8m_vs_9m": [108, 109], "10m_vs_11m": [108, 109], "27m_vs_30m": [108, 109], "mmm": [108, 109], "mmm2": [108, 109], "2s3z": [108, 109], "3s5z": [108, 109], "3s5z_vs_3s6z": [108, 109], "3s_vs_3z": [108, 109], "3s_vs_4z": [108, 109], "3s_vs_5z": [108, 109], "1c3s5z": [108, 109], "2m_vs_1z": [108, 109], "corridor": [108, 109], "6h_vs_8z": [108, 109], "2s_vs_1sc": [108, 109], "so_many_banel": [108, 109], "bane_vs_ban": [108, 109], "2c_vs_64zg": [108, 109], "old": [108, 109, 265, 354], "smac": [108, 109], "map_nam": [108, 109], "176": [108, 109, 349], "battle_won": [108, 109], "dead_al": [108, 109], "dead_enemi": [108, 109], "episode_limit": [108, 109], "322": [108, 109, 349], "Or": [108, 109, 204], "procedur": [108, 109], "distribution_config": [108, 109], "n_unit": [108, 109], "n_enemi": [108, 109], "team_gen": [108, 109], "dist_typ": [108, 109], "weighted_team": [108, 109], "unit_typ": [108, 109], "marin": [108, 109], "maraud": [108, 109], "medivac": [108, 109], "exception_unit_typ": [108, 109], "start_posit": [108, 109], "surrounded_and_reflect": [108, 109], "map_x": [108, 109], "map_i": [108, 109], "capability_config": [108, 109], "88": [108, 109, 342, 343, 349], "131": [108, 109, 349], "starcraft2env": 109, "proroklab": [111, 112], "vectorizedmultiagentsimul": [111, 112], "2207": [111, 112], "03530": [111, 112], "basescenario": 111, "descript": [111, 343, 344], "perfrom": [111, 112], "defaultt": 111, "continuous_act": [111, 112, 348], "repositiori": 111, "horizon": [111, 112, 177, 201, 344], "sparsiti": 111, "agent_nam": [111, 112, 113], "agent_names_to_indices_map": [111, 112], "unbatched_action_spec": [111, 112, 348], "unbatched_observation_spec": [111, 112], "unbatched_reward_spec": [111, 112], "het_spec": [111, 112], "het_specs_map": [111, 112], "flock": [111, 112], "agent_collision_rew": [111, 112], "agent_distance_rew": [111, 112], "ca": 113, "environment4": 113, "get_group_map": 113, "sumbodul": 114, "model_bas": [115, 177, 201], "adapt": [117, 154, 265, 342, 349], "masker": 117, "binarydiscretetensorspec": [117, 254, 257, 258, 279, 335], "maskedenv": 117, "ones_lik": 117, "scatter": 117, "_set_se": [117, 125, 128, 144, 349], "biner": 118, "transform_reward_spec": [118, 123, 124, 125, 126, 130, 136, 144, 145, 148, 149, 151, 152, 154, 159, 161], "burn_in": 119, "burn": 119, "date": [119, 303], "retur": 119, "burnt": 119, "gru_modul": [119, 193], "input_s": [119, 191, 192, 193, 195, 196, 197, 198, 345], "hidden_s": [119, 191, 192, 193, 195, 196, 197, 198, 345], "set_recurrent_mod": [119, 193, 197, 345], "burn_in_transform": 119, "gru": [119, 192, 193], "num_lay": [119, 191, 193, 195, 197, 209, 210], "86": [119, 343, 345, 349, 350], "3008": [119, 343], "37": [119, 342, 343, 349, 350], "0344": 119, "padding_valu": [120, 202, 203], "as_invers": 120, "account": [120, 202, 203, 337, 343, 345, 351, 354], "movement": 120, "pdf": [120, 180, 181, 182, 183, 184, 188, 212, 232, 236, 259, 269, 272, 281, 286, 294, 326], "1312": [120, 343], "5602": 120, "unsqueezetransform": [120, 349, 351], "consumpt": 120, "followin": 120, "pictur": 120, "pixels_trsf": [120, 351], "grayscal": [120, 343, 345, 351, 354], "data_exclud": [120, 351], "transform_observation_spec": [120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 165, 349], "del_kei": [121, 162, 347, 349], "unsqueeze_if_oor": 121, "observation_posit": 121, "observation_veloc": 121, "delet": [121, 307], "key1": [121, 308, 316], "key2": [121, 308, 316], "center": [122, 300], "width": [122, 146], "out_keys_inv": [123, 125, 128, 138, 139, 140, 144, 145, 152, 159, 349], "scalar": [123, 148, 182, 184, 206, 207, 229, 233, 234, 236, 247, 250, 251, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 279, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 337, 343, 349], "permit": [123, 132, 161, 250, 252, 265, 268, 270], "rewardsc": [124, 160, 342, 343, 345], "rewardclip": 124, "transformed_env": [124, 159, 160], "transform_env_devic": [124, 126, 159], "transform_input_spec": [124, 125, 126, 127, 138, 140, 144, 145, 150, 154, 155, 156, 159, 161, 163], "transform_output_spec": [124, 125, 126, 130, 136, 144, 145, 151, 154, 159], "transformfull_done_spec": [124, 125, 126, 130, 136, 144, 145, 151, 154, 159], "dtype_in": 125, "dtype_out": 125, "scan": [125, 128, 242, 243], "resp": [125, 128], "not_transform": [125, 128], "constructedw": [125, 128], "orig_devic": 126, "unspecifi": 126, "transform_done_spec": [126, 159], "num_actions_effect": 127, "max_act": 127, "include_forward": 127, "dimension": [127, 193, 197, 281, 286, 294, 348], "num_act": [127, 258], "action_out": 127, "_call": [127, 132, 349], "eol_kei": 129, "lives_kei": 129, "eol_attribut": 129, "unwrap": 129, "breakout": 129, "210": [129, 140, 349, 354], "160": [129, 140, 343, 349, 354], "eol_transform": 129, "eol": 129, "dqnloss": [129, 250, 251, 253, 256, 258, 259, 260, 263, 264, 266, 268, 269, 270, 271, 272, 273, 274, 279, 324, 335, 338, 343, 345], "register_kei": 129, "loss_or_advantag": 129, "lossmodul": [129, 317, 328, 329, 335], "valueestimatorbas": [129, 266, 335], "excluded_kei": 130, "finit": [131, 351], "first_dim": 132, "last_dim": 132, "allow_positive_dim": [132, 161], "th": [132, 161, 191, 195, 349], "frameskip": 132, "repeatedli": [133, 344, 348], "init_kei": 135, "tracker": 135, "coef": 136, "pi_curr": 136, "pi_0": 136, "overfit": 136, "probabilist": [136, 237, 335, 344, 353], "get_dist": [136, 241, 242], "mod": [136, 193, 197, 244, 345], "normalparamextractor": [136, 337, 344, 348], "probabilisticactor": [136, 226, 227, 228, 230, 250, 251, 255, 257, 258, 264, 267, 268, 269, 270, 271, 273, 337, 342, 344, 348], "tanhnorm": [136, 226, 227, 228, 237, 243, 250, 251, 264, 268, 269, 270, 271, 273, 335, 344, 348, 353], "n_ob": [136, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273], "n_act": [136, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273], "return_log_prob": [136, 226, 227, 228, 237, 241, 243, 270, 337, 344, 348, 353], "apply_": 136, "copy_": [136, 342], "formulat": 136, "diverg": [136, 193, 197, 237, 241, 261, 265], "noop": [137, 353], "trial": 137, "standard_norm": [138, 149, 342, 343, 345], "affin": [138, 149], "layer": [138, 166, 178, 179, 181, 182, 189, 191, 192, 193, 195, 196, 197, 199, 204, 205, 206, 207, 209, 210, 217, 218, 224, 235, 244, 337, 343, 344, 345, 350], "normal": [138, 166, 178, 179, 194, 199, 202, 203, 208, 220, 221, 229, 237, 241, 252, 265, 268, 313, 315, 333, 337, 339, 345, 348, 354], "set_default_tensor_typ": 138, "doubletensor": 138, "isclos": 138, "next_ob": [138, 281, 282, 283, 284, 353], "init_stat": [138, 342, 343, 344, 345], "3752e": 138, "01": [138, 236, 247, 252, 265, 268, 341, 342, 343, 345, 348, 349, 350, 352], "5087e": 138, "9294e": 138, "9636": 138, "5608": 138, "6408": 138, "num_it": [138, 343, 344], "reduce_dim": [138, 342, 343, 344, 345], "cat_dim": [138, 342, 343, 344, 345], "keep_dim": [138, 343, 345], "statist": [138, 166, 270, 333, 342, 343, 344, 354], "approach": [138, 342, 344, 354], "gaussian": [138, 156, 177, 201, 206, 207, 212, 229, 344], "empir": [138, 177, 201, 237, 241, 342, 344, 348], "3d": [138, 178], "third": [138, 232, 348], "reorder": 140, "in_keys_in": 140, "channel": [140, 158, 204, 209, 210, 343], "r3m": [142, 350], "resnet": [142, 162, 164], "visual": [142, 162, 164, 344, 349], "embed": [142, 162, 163, 164, 213, 225, 226, 227, 228, 240, 245, 350], "ego4d": [142, 162, 164], "univers": [142, 162, 164], "suraj": [142, 162], "nair": [142, 162], "aravind": [142, 162], "rajeswaran": [142, 162], "vikash": [142, 162, 164], "kumar": [142, 162, 164], "chelsea": [142, 162], "finn": [142, 162], "abhinav": [142, 162], "gupta": [142, 162], "2203": [142, 162, 201, 350], "12601": [142, 162, 350], "_init": [142, 162, 342], "snippet": [142, 162, 342], "resnet50": [142, 164, 350], "model_nam": [142, 162, 164, 303], "resnet34": 142, "resnet18": 142, "r3m_vec": [142, 350], "feed": [142, 164, 266, 337, 342, 348, 351], "stack_imag": [142, 164], "tread": [142, 164], "separet": [142, 164], "hub": [142, 164, 350], "resnet50_weight": [142, 164], "imagenet1k_v1": [142, 164], "download_path": [142, 164], "tensor_pixels_kei": [142, 164], "dest": [142, 162, 164, 240], "sub_seq_len": 143, "sample_dim": [143, 342], "primarili": 143, "hesit": 143, "request": 143, "robust": 143, "mix": [143, 213, 222, 279, 342, 348], "improp": 143, "dummyenv": 144, "another_oth": 144, "other_reward": 144, "create_copi": 145, "stuff": 145, "newnam": 145, "r2g": 147, "99": [147, 166, 201, 262, 275, 280, 287, 329, 342, 343, 344, 349, 353], "reward_to_go": 147, "bernoulli_": 147, "9010": 147, "9404": [147, 287], "9701": [147, 287], "9900": [147, 287], "0000": [147, 157, 233, 234, 244, 287, 343, 344, 345, 349, 353], "crash": 147, "clamp_min": 148, "clamp_max": 148, "clip_min": 148, "clip_max": 148, "episode_": 150, "reward1": 150, "reward2": 150, "episode_reward": [150, 348], "keep_reward": 151, "keep_don": 151, "sign": [152, 281], "logical_or": 152, "squeeze_dim": 153, "step_count_kei": 154, "update_don": 154, "accordingli": [154, 155, 195, 238, 345], "disjunct": 154, "recognis": 154, "target_return": 155, "primer": [156, 345], "default_valu": [156, 345], "unit": [156, 177, 189, 191, 192, 209, 210, 215, 216, 344], "transfomedenv": 156, "mykei": 156, "__unless": 156, "exists__": 156, "pool": 157, "increas": [157, 236, 348], "10th": 157, "0216": 157, "1149": 157, "1990": 157, "2749": 157, "3281": 157, "9290": 157, "3702": 157, "8978": 157, "from_int": 158, "shape_toler": 158, "permuat": 158, "ri": 158, "principl": 159, "cattransform": 159, "notabl": 159, "rewardsum": [159, 348], "cache_spec": 160, "set_missing_toler": 160, "keyerror": 160, "unsqueeze_dim": [161, 349], "danger": 161, "vc1": 162, "vc1_vec": 162, "untrain": 162, "make_noload_model": 162, "vip": [163, 164, 350], "toward": 164, "implicit": [164, 257, 264, 351], "jason": 164, "ma": 164, "shagun": 164, "sodhani": 164, "dinesh": 164, "jayaraman": 164, "osbert": 164, "bastani": 164, "ami": 164, "zhang": 164, "vip_vec": 164, "final_nam": 165, "sb3": 165, "terminal_obs_read": 165, "truli": [165, 353], "till": 165, "nan": 165, "shared_td": 166, "decai": [166, 229, 233, 272, 315, 342, 343, 345, 354], "9999": [166, 349], "0001": [166, 189, 208, 344, 349], "fly": [166, 265, 338, 344, 349, 351, 354], "to_observation_norm": 166, "underflow": [166, 315], "build_td_for_shared_vecnorm": 166, "memmori": 166, "queue": [166, 351], "td_share": 166, "state_dim": [167, 180, 185, 212, 215, 216, 230], "action_dim": [167, 180, 181, 183, 185, 212, 230, 342, 347], "gsde": [167, 269, 333], "func": 167, "gsdemodul": 167, "check_dtyp": 168, "discrep": [168, 250, 252, 253, 254, 265, 268, 270, 279], "temporarili": [168, 351], "rng": [168, 349], "revert": [168, 351], "probabilistictdmodul": [173, 174, 199, 237, 241, 280, 313], "next_tensordict": 175, "keep_oth": [175, 349], "exclude_reward": 175, "exclude_don": 175, "exclude_act": 175, "next_": 175, "funtion": 175, "write_full_fals": 176, "_terminated_or_trunc": 176, "entropi": [177, 250, 251, 252, 257, 258, 264, 265, 267, 268, 269, 271, 273, 348], "botev": 177, "et": 177, "2013": 177, "cem": 177, "plan": [177, 200, 201], "varianc": [177, 194, 208, 220, 221, 338, 342, 344, 348], "k": [177, 191, 192, 195, 196], "maximis": [177, 181, 183, 201, 337, 343, 344, 348], "modelbasedenv": [177, 201], "planning_horizon": [177, 201], "optim_step": [177, 201, 343], "mpc": [177, 200, 201], "num_candid": [177, 201], "candid": [177, 201], "top_k": [177, 201], "modelbasedenvbas": [177, 200, 201, 335], "safemodul": [177, 200, 226, 228, 241, 250, 251, 257, 258, 264, 268, 269, 270, 271, 273, 322, 323, 329, 335, 353], "num_cel": [178, 179, 181, 182, 183, 184, 189, 190, 193, 197, 199, 204, 205, 226, 343, 344, 345, 348, 353], "elu": [178, 179, 181, 182, 183, 184, 189, 190, 204, 343, 353], "activation_kwarg": [178, 179, 199], "norm_class": [178, 179, 181, 182, 199], "norm_kwarg": [178, 179, 199], "bias_last_lay": [178, 179, 181, 182, 183, 184, 190, 199], "aggregator_class": [178, 179, 181, 182, 343, 345, 353], "squashdim": [178, 179, 181, 204, 353], "aggregator_kwarg": [178, 179, 181, 182, 343, 345], "squeeze_output": [178, 179, 181, 182, 343, 345], "produc": [178, 179, 199, 205, 211, 226, 228, 230, 300, 344, 345, 351, 354], "cell": [178, 179, 191, 192, 193, 195, 196, 197, 199, 204, 205, 344], "kernel": [178, 179, 190, 198, 204], "cnet": [178, 179], "conv3d": 178, "34": [178, 179, 199, 341, 343, 345, 348, 349, 352], "35": [178, 179, 199, 341, 343, 347, 348, 349, 350, 351, 352], "transformer_config": [180, 212, 230], "decisiontransform": [180, 212], "dtconfig": [180, 185, 212], "2202": [180, 185, 212, 267], "05607": [180, 185, 212, 267], "return_to_go": [180, 185, 212, 230], "conv_net_kwarg": [181, 182], "mlp_net_kwarg": [181, 182, 183], "use_avg_pool": [181, 182], "WITH": [181, 182, 183, 184, 236, 272], "1509": [181, 182, 183, 184, 201, 236, 254, 263, 272, 349], "02971": [181, 182, 183, 184, 236, 272], "convnet": [181, 204, 345, 353], "ndims_in": 181, "avgpool": [181, 182], "adaptiveavgpool2d": [182, 343, 345], "400": [183, 184, 348, 349, 351], "mlp_net_kwargs_net1": 184, "mlp_net_kwargs_net2": 184, "decion": 185, "desdescrib": 185, "n_embd": 185, "n_layer": [185, 191, 195], "n_head": 185, "n_inner": 185, "n_posit": 185, "resid_pdrop": 185, "attn_pdrop": 185, "gpt2config": 185, "atol": [186, 219], "rtol": [186, 219], "batch_shap": [186, 219], "event_shap": [186, 219], "absolut": [186, 219, 342], "densiti": [186, 202, 203, 211, 221], "mass": [186, 202, 203, 211, 221, 349], "rsampl": [186, 203, 211, 241], "sample_shap": [186, 202, 203, 211], "softmax": [187, 203, 211, 231, 232], "var_num": [188, 214, 231, 232, 239], "action_value_kei": [188, 214, 231, 232, 238, 239, 266, 279], "action_mask_kei": [188, 214, 231, 232, 233, 234, 238, 239], "perspect": [188, 232, 259, 344], "1707": [188, 232, 259, 268], "06887": [188, 232, 259], "mult": [188, 205, 214, 231, 232, 238, 239], "tensordict_modul": [188, 191, 192, 195, 196, 214, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 253, 257, 258, 264, 268, 269, 270, 271, 273, 337], "nbin": [188, 231, 337], "customdistributionalqv": 188, "log_softmax": [188, 231], "from_modul": [188, 237, 240, 243, 245], "one_hot": [188, 203, 214], "qvalue_actor": [188, 214, 231, 238, 337], "to_modul": [188, 237, 240, 243, 245], "std_bia": 189, "std_min_val": 189, "belief": [189, 209, 215, 216], "1912": [189, 260, 261, 262], "01603": [189, 260, 261, 262], "softplu": [189, 208, 247, 248, 249], "out_features_valu": 190, "cnn_kwarg": [190, 343], "mlp_kwarg": [190, 198, 343], "duel": 190, "cnn": [190, 204, 343, 353], "06581": 190, "batch_first": [191, 193, 195, 197, 345], "bidirect": [191, 195, 345], "cudnn": [191, 192, 195, 196, 345], "vmap": [191, 192, 195, 196, 223, 240, 243, 353], "rnn": [191, 192, 195, 196, 345], "device_count": [191, 192, 195, 196, 354], "els": [191, 192, 195, 196, 209, 337, 339, 342, 343, 344, 345, 348, 349, 350], "n_in": [191, 192, 195, 196], "n_out": [191, 192, 195, 196], "h0": [191, 192, 195, 196], "h1": [191, 192, 195, 196], "call_gru": [191, 192], "h_out": [191, 192, 195, 196], "batched_cal": [191, 192, 195, 196], "gate": [191, 192, 195], "r_t": 191, "sigma": [191, 192, 194, 195, 196, 212, 220, 221, 229, 236, 344], "w_": [191, 192, 195, 196], "ir": [191, 192], "x_t": [191, 195], "b_": [191, 192, 195, 196], "hr": [191, 192, 195], "h_": [191, 192, 195], "z_t": 191, "iz": [191, 192], "hz": [191, 192], "n_t": 191, "odot": [191, 192, 195, 196], "hn": [191, 192, 195], "h_t": [191, 195], "sigmoid": [191, 192, 195, 196], "hadamard": [191, 192, 195, 196], "multilay": [191, 195], "_t": [191, 195, 348, 349], "ge": [191, 195], "bernoulli": [191, 195], "b_ih": [191, 192, 195, 196, 197], "b_hh": [191, 192, 195, 196, 197], "seq": [191, 193, 195, 197, 345, 347], "h_0": [191, 195, 196], "unbatch": [191, 195], "pack_padded_sequ": [191, 195], "pack_sequ": [191, 195], "num": [191, 195], "_layer": [191, 195], "_size": [191, 192, 195, 196], "h_n": [191, 195], "packedsequ": [191, 195], "weight_ih_l": [191, 195], "learnabl": [191, 192, 195, 196], "w_ir": 191, "w_iz": 191, "w_in": 191, "num_direct": [191, 195], "weight_hh_l": [191, 195], "w_hr": 191, "w_hz": 191, "w_hn": 191, "bias_ih_l": [191, 195], "b_ir": 191, "b_iz": 191, "b_in": 191, "bias_hh_l": [191, 195], "b_hr": 191, "b_hz": 191, "b_hn": 191, "bias": [191, 192, 195, 196, 247, 338, 342], "mathcal": [191, 192, 195, 196], "sqrt": [191, 192, 195, 196, 236], "frac": [191, 192, 195, 196, 344], "seq_len": [191, 195], "subtli": 191, "matrix": [191, 195, 206, 207], "contrast": [191, 263, 351], "hx": [191, 192, 195, 196], "lstmcell": [192, 197], "gru_cel": 192, "z": 192, "weight_ih": [192, 196], "weight_hh": [192, 196], "bias_ih": [192, 196], "bias_hh": [192, 196], "rocm": [192, 196], "embedd": [193, 197, 198], "grucel": [193, 240], "python_bas": [193, 197], "recurrent_st": [193, 345], "custom_kei": [193, 197], "recurrent_mod": [193, 197], "rs": [193, 342], "gru_module_train": 193, "policy_train": [193, 197], "traj_td": [193, 197], "policy_infer": [193, 197], "td_inf": [193, 197], "assert_clos": [193, 197], "upscal": [194, 220, 221], "tanh_loc": [194, 220, 221], "event_dim": [194, 219, 220], "ultim": [194, 220, 221], "poor": [194, 220, 221], "explos": [194, 220, 221], "switch": [194, 221], "formula": [194, 220, 221, 250, 252, 265, 268, 338, 344], "proj_siz": 195, "c0": [195, 196], "c1": [195, 196], "call_lstm": [195, 196], "c_out": [195, 196], "i_t": 195, "ii": [195, 196], "hi": [195, 196], "f_t": 195, "hf": [195, 196], "g_t": 195, "ig": [195, 196], "hg": [195, 196], "o_t": 195, "ho": [195, 196], "c_t": 195, "c_": 195, "forget": 195, "1402": 195, "1128": 195, "c_0": [195, 196], "proj": 195, "c_n": 195, "w_ii": 195, "w_if": 195, "w_ig": 195, "w_io": 195, "w_hi": 195, "w_hf": 195, "w_hg": 195, "w_ho": 195, "b_ii": 195, "b_if": 195, "b_ig": 195, "b_io": 195, "b_hi": 195, "b_hf": 195, "b_hg": 195, "b_ho": 195, "weight_hr_l": 195, "_revers": 195, "analog": 195, "cn": 195, "lstm_cell": 196, "h_1": 196, "c_1": 196, "time_step": [196, 198], "cx": 196, "trust": 197, "correspont": 197, "recurrent_state_h": [197, 345], "recurrent_state_c": [197, 345], "triplet": [197, 238, 239], "lstm_modul": 197, "rs_h": 197, "rs_c": 197, "hidden0": 197, "hidden1": 197, "lstm_kwarg": 198, "next_observ": [198, 250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 347], "2d": [198, 348], "hidden0_in": 198, "hidden1_in": 198, "hidden0_out": 198, "hidden1_out": 198, "single_bias_last_lay": 199, "layer_class": 199, "layer_kwarg": 199, "perceptron": 199, "lazylinear": [199, 337, 344, 349, 350, 353], "42": [199, 250, 251, 253, 257, 264, 271, 342, 343, 344, 349], "noisylinear": [199, 206, 335, 343], "noisylazylinear": [199, 335], "mpcplanner": 200, "tensordict_out": [200, 354], "mppi": 201, "covari": 201, "william": [201, 270], "aldrich": 201, "theodor": 201, "01149": 201, "hansen": 201, "wang": 201, "su": 201, "04955": 201, "valueoper": [201, 226, 227, 228, 250, 251, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 329, 337, 342, 344], "tdlambdaestim": [201, 335, 342], "value_net": [201, 254, 256, 270, 281, 282, 283, 284, 344], "adv": 201, "lmbda": [201, 275, 281, 284, 286, 292, 293, 294, 297, 298, 338, 342, 344, 348], "95": [201, 275, 342, 343, 344, 345, 349], "value_network": [201, 253, 254, 256, 257, 259, 264, 271, 281, 282, 283, 284, 338, 342, 344], "temperatur": [201, 251, 257, 264], "neg_inf": [202, 203], "inf": [202, 203], "api_doc": [202, 203], "tf_agent": [202, 203], "event": [202, 203, 211, 290, 291, 292, 293, 295, 296, 297, 298, 351], "unnorm": [202, 203, 211], "sparse_mask": [202, 203], "dens": [202, 203], "0831": [202, 203], "1203": [202, 203, 341, 352], "0928": [202, 203], "1972": [202, 203], "grad_method": [203, 211], "reparamgradientstrategi": [203, 211], "passthrough": [203, 211], "proxi": [203, 211, 338], "relaxedonehot": [203, 211], "zeros_lik": [203, 349], "sample_non_valid": 203, "centralis": [204, 205, 348], "share_param": [204, 205, 348], "basi": [204, 351], "homogen": [204, 205, 348], "agent_network": [204, 205], "modulelist": [204, 205, 326, 353], "lazyconv2d": [204, 353], "2592": [204, 343], "decentralis": [204, 348], "n_agent_input": [205, 348], "n_agent_output": [205, 348], "toech": 205, "centalis": 205, "shown": [205, 337, 347, 348, 351], "std_init": [206, 207], "initialize_paramet": 206, "isol": [206, 266], "1706": [207, 222], "10295v3": 207, "induc": 207, "aid": 207, "scale_map": 208, "biased_softplus_1": 208, "scale_lb": [208, 215, 216], "exp": [208, 249], "module_norm": 208, "decod": 209, "1803": [209, 210, 213], "10122": [209, 210], "rnn_hidden": 209, "latent": 210, "excacli": 211, "inres": 212, "mu": [212, 236, 344], "state_shap": [213, 279], "mixing_embed_dim": [213, 279], "qmix": [213, 348], "mixer": [213, 222, 279], "monoton": 213, "hyper": 213, "11485": 213, "qmixerloss": [213, 222], "qmix_vdn": [213, 222], "eventu": [213, 345, 349], "vdn": [213, 222], "greedi": [214, 232, 233, 234, 239, 343, 345], "hidden_dim": [215, 216], "posterior": [215, 261], "rssm": [215, 216, 261], "1811": [215, 216], "04551": [215, 216], "obs_embed": 215, "rnn_hidden_dim": 216, "dream": 216, "tanhtransform": 220, "decomposit": 222, "05296": 222, "hide": [223, 344, 348], "satisfi": [223, 337], "vmap_dim": 223, "lam": 223, "sample_in": 223, "sample_in_td": 223, "vm": 223, "translat": [225, 237], "character": [225, 231, 237, 238, 240, 351], "overflow": [225, 231, 232, 237, 238, 239, 240, 241], "td_modul": [225, 226, 227, 228, 237, 240, 241, 243, 245, 353], "3635": 225, "0340": 225, "1476": 225, "3911": [225, 349], "1664": [225, 343, 349], "5455": 225, "2247": 225, "4583": 225, "2916": 225, "2160": 225, "5337": 225, "5193": 225, "grad_fn": [225, 233, 234, 353], "addmmbackward0": 225, "actorvalueoper": [226, 337], "get_policy_oper": [226, 227, 228, 252, 265, 268, 337], "standalon": [226, 227, 228], "tdmodul": [226, 227, 228, 329], "get_critic_oper": 226, "common_oper": [226, 228], "policy_oper": [226, 227, 228], "value_oper": [226, 227, 228], "normalparamwrapp": [226, 227, 228, 237, 243, 250, 251, 257, 258, 264, 268, 269, 270, 271, 273, 335, 353], "module_hidden": [226, 228], "td_module_hidden": [226, 228], "module_act": [226, 228], "td_module_act": [226, 227, 228], "module_valu": [226, 227, 228], "td_module_valu": [226, 227, 228], "state_action_valu": [226, 245, 251, 257, 271, 280, 326, 329, 337, 342, 353], "td_clone": [226, 227, 228], "tensordictmodulewrapp": [226, 322, 323, 329], "get_policy_head": [226, 227, 228], "safesequenti": [226, 227, 228, 279], "head": [226, 228, 252, 265, 268], "get_value_head": [226, 227, 228], "get_value_oper": [226, 227, 228, 252, 265, 268], "action_modul": 227, "state_valu": [227, 228, 245, 252, 257, 265, 268, 269, 271, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 297, 337, 342, 344, 348], "qualiti": [228, 337], "actorcriticoper": [228, 252, 265, 268, 337], "embeddig": 228, "refet": 228, "actorcriticwrapp": [228, 337, 342], "po": [229, 234], "sigma_init": 229, "epsilon": [229, 233, 234, 236, 272, 315, 343, 344, 345], "sigma_end": 229, "annealing_num_step": [229, 233, 234, 236, 342, 343, 345], "captur": [229, 233, 234, 236], "omiss": [229, 233, 234, 236], "ommit": [229, 233, 234, 236], "inferec": 230, "set_tensor_kei": 230, "dt_inference_wrapp": 230, "baz": 230, "inference_context": 230, "obs_dim": 230, "tanhdelta": [230, 335, 342], "dtactor": 230, "actor_modul": [230, 353], "dist_class": 230, "dist_kwarg": 230, "distribution_kwarg": [230, 237, 241, 344, 348], "inference_actor": 230, "sequence_length": 230, "mask_context": 230, "out_act": 230, "qvaluemodul": [231, 238, 279, 345], "distributionaldqnnet": 231, "make_log_softmax": 231, "my_action_valu": [232, 239], "chanc": 232, "thid": 232, "eps_init": [233, 234, 236, 343, 345], "eps_end": [233, 234, 236, 343], "explorative_polici": [233, 234, 236], "9055": [233, 234, 349], "9277": [233, 234], "6295": [233, 234], "2532": [233, 234], "addbackward0": [233, 234], "lmheadmodel": 235, "actor_head": [235, 252, 265, 268], "base_model": 235, "lm_head": 235, "ornstein": [236, 342], "uhlenbeck": [236, 342], "ou": [236, 342], "correl": 236, "noise_t": 236, "noise_": 236, "theta": [236, 344, 349], "sigma_t": 236, "sigma_": 236, "anneal": [236, 343], "ou_prev_nois": 236, "ou_step": 236, "x0": 236, "sigma_min": 236, "n_steps_ann": 236, "is_init_kei": 236, "_ou_prev_nois": 236, "_ou_step": 236, "default_interaction_typ": [237, 241], "interaction_typ": [237, 241], "set_interaction_typ": [237, 241], "cache_dist": [237, 241], "n_empirical_estim": [237, 241], "compound": 237, "compositedistribut": 237, "categ": 237, "distribution_map": 237, "chose": 239, "functionalmodul": 240, "functionalmodulewithbuff": 240, "td_fmodul": 240, "td_function": 240, "td_state": 240, "params_repeat": 240, "td_vmap": [240, 243], "random_sampl": [240, 241], "suppli": 241, "fist": 241, "log_prob_kei": [241, 348], "probabilistictensordictsequenti": [242, 250, 252, 265, 268, 270, 322, 323, 353], "partial_toler": [242, 243, 347], "who": [242, 243], "AND": [242, 243], "tensordictsequenci": 243, "tensordictsequ": 243, "safeprobabilisticmodul": [243, 337], "spec1": 243, "net1": 243, "module1": 243, "td_module1": 243, "spec2": 243, "module2": 243, "td_module2": 243, "clamp": [244, 261, 317, 349], "boundari": [244, 344, 348], "resolut": 244, "simplest": [244, 342, 344, 345, 348, 351, 354], "9944": 244, "9991": 244, "3020": 244, "2299": [244, 349], "5418": 244, "2989": 244, "6849": 244, "3169": 244, "2690": 244, "9649": [244, 349], "5686": 244, "8602": 244, "0315": 244, "8455": [244, 349], "6027": 244, "4746": 244, "7843": 244, "7782": 244, "2111": 244, "5115": 244, "4687": 244, "5760": 244, "custommodul": 245, "cat": [245, 251, 253, 264, 269, 271, 273, 353], "imaginari": 246, "imagin": 246, "transition_model": 246, "get_reward_oper": 246, "get_transition_model_oper": 246, "min_val": [247, 249], "_bia": 247, "invert": [248, 344], "surject": 249, "expln": 249, "biased_softplu": [249, 335], "beggin": 249, "biased_softplus_": 249, "syntax": [249, 342], "met": [249, 349], "1602": 250, "01783v2": 250, "actor_network": [250, 251, 252, 253, 255, 257, 258, 264, 265, 267, 268, 269, 270, 271, 273, 342, 344, 348], "critic_network": [250, 252, 265, 268, 270, 344, 348], "entropy_bonu": [250, 252, 265, 268, 344], "favour": [250, 252, 265, 268], "samples_mc_entropi": [250, 252, 265, 267, 268], "mont": [250, 252, 265, 268, 342], "carlo": [250, 252, 265, 268, 342], "entropy_coef": [250, 252, 265, 268, 344, 348], "critic_coef": [250, 252, 265, 268, 344], "loss_critic_typ": [250, 252, 265, 268, 270, 344], "l1": [250, 252, 253, 254, 258, 265, 268, 269, 270, 273, 276, 279, 337, 342], "l2": [250, 252, 253, 254, 255, 256, 258, 261, 262, 265, 268, 269, 270, 273, 276, 279, 342], "smooth_l1": [250, 251, 252, 253, 254, 257, 258, 264, 265, 268, 269, 270, 271, 273, 276, 279, 344], "separate_loss": [250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273], "propag": [250, 252, 253, 257, 258, 264, 265, 268, 269, 270, 271, 273, 281, 282, 283, 284, 344, 348], "advantage_kei": [250, 252, 265, 268, 270, 281, 282, 283, 284], "value_target_kei": [250, 252, 265, 268, 270, 281, 282, 283, 284], "value_target": [250, 252, 265, 268, 270, 281, 282, 283, 284, 344, 348], "ddp": [250, 252, 265, 268, 270], "fsdp": [250, 252, 265, 268, 270], "loss_crit": [250, 268, 344, 348], "loss_entropi": [250, 268, 344, 348], "loss_object": [250, 268, 344, 348], "recur": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284, 285], "next_reward": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284], "next_don": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284], "next_termin": [250, 251, 253, 254, 256, 257, 258, 264, 268, 269, 270, 271, 273, 281, 282, 283, 284], "loss_obj": 250, "sacloss": [250, 263, 272, 335], "select_out_kei": [250, 251, 253, 257, 258, 264, 268, 269, 271, 273], "make_value_estim": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279, 338, 342, 343, 348], "value_typ": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 342], "hyperparam": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342], "enum": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 275, 279, 342], "default_value_estim": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342], "default_value_kwarg": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 335, 342], "dqn_loss": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 274, 279], "td1": [250, 251, 253, 254, 256, 258, 259, 260, 264, 266, 268, 269, 270, 271, 273, 279, 342], "conserv": [251, 256], "qvalue_network": [251, 257, 258, 264, 269, 271, 273], "loss_funct": [251, 253, 254, 255, 256, 257, 258, 264, 269, 271, 273, 276, 279, 342], "alpha_init": [251, 258, 267, 269, 271], "min_alpha": [251, 258, 267, 269, 271], "max_alpha": [251, 258, 267, 269, 271], "fixed_alpha": [251, 258, 267, 269, 271], "target_entropi": [251, 258, 267, 269, 271], "prod": [251, 267, 271], "n_action": [251, 254, 256, 267, 271], "delay_actor": [251, 253, 271, 273], "delay_qvalu": [251, 258, 269, 271, 273], "min_q_weight": 251, "max_q_backup": 251, "backup": 251, "deterministic_backup": 251, "num_random": 251, "with_lagrang": 251, "lagrang": 251, "lagrange_thresh": 251, "valueclass": [251, 253, 257, 258, 264, 269, 271, 273], "qvalu": [251, 257, 258, 264, 269, 271, 273, 326], "loss_actor": [251, 253, 257, 258, 264, 269, 270, 271, 273, 312, 342], "loss_alpha": [251, 258, 269, 271], "loss_alpha_prim": 251, "loss_qvalu": [251, 257, 258, 264, 269, 271, 273], "clip_epsilon": [252, 344, 348], "normalize_advantag": [252, 265, 268, 348], "value_kei": [252, 265, 268, 281, 282, 283, 284, 342], "somemodul": [252, 265, 268], "someactor": [252, 265, 268], "value_head": [252, 265, 268], "somevalu": [252, 265, 268], "loss_modul": [252, 263, 265, 266, 268, 272, 317, 328, 329, 338, 339, 342, 343, 344, 348, 351], "ppoloss": [252, 265, 335], "delay_valu": [253, 254, 256, 259, 270, 271, 279, 343, 345], "loss_valu": [253, 257, 264, 270, 271, 342, 344, 348], "pred_valu": [253, 273, 342], "pred_value_max": [253, 342], "target_valu": [253, 269, 273, 280, 338, 342], "target_value_max": [253, 342], "qvalueactor": [254, 256, 279, 337, 343, 345], "double_dqn": 254, "06461": [254, 263], "mult_one_hot": [254, 257, 258, 279], "loss_val": [254, 256, 338, 342, 344, 345, 348, 351], "01345": 255, "distanc": [256, 265, 276, 280, 281, 348], "loss_cql": 256, "dcql_loss": 256, "2110": [257, 264], "06169": [257, 264], "num_qvalue_net": [257, 258, 264, 269, 271, 273], "expectil": [257, 264], "tau": [257, 264, 272, 342, 343], "antmaz": [257, 264], "sticht": [257, 264], "onehotcategor": [257, 258, 335], "target_entropy_weight": 258, "disctount": 259, "distributionalqvalueactor": [259, 337], "input_tensordict": [259, 342], "actor_model": 260, "value_model": [260, 262], "model_based_env": 260, "dreamerenv": [260, 335], "imagination_horizon": 260, "unrol": [260, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298], "discount_loss": [260, 262], "lambda_kl": 261, "lambda_reco": 261, "lambda_reward": 261, "reco_loss": 261, "reward_loss": 261, "free_nat": 261, "nat": 261, "delayed_clamp": 261, "global_averag": 261, "value_loss": 262, "fake_data": 262, "ddpgloss": [263, 272, 329, 335, 342, 353], "td3loss": [263, 272, 335], "value_network_update_interv": 263, "loss_value_diff": 264, "diff": 264, "old_polici": 265, "new_polici": 265, "apart": [265, 348], "dtarg": 265, "samples_mc_kl": 265, "analyt": 265, "decrement": 265, "loss_": [266, 312, 338, 342], "equip": [266, 345], "gh": 266, "_acceptedkei": 266, "dataclass": [266, 326], "_forward_value_estimator_kei": 266, "alter": [266, 337], "value_estim": [266, 281, 282, 283, 284, 285, 338, 342, 348], "myloss": 266, "action2": 266, "convert_to_funct": [266, 342], "expand_dim": 266, "create_target_param": [266, 342], "compare_against": [266, 342], "_param": 266, "expans": 266, "resampl": 266, "_target_param": 266, "blend": 266, "proxim": [268, 344, 348], "optimis": [268, 313, 344, 348], "flavour": [268, 348, 353], "clipppoloss": [268, 335, 344, 348], "klpenppoloss": [268, 335], "regularis": 268, "06347": 268, "gae": [268, 335, 338, 342, 344, 348], "ppo_loss": 268, "tdlambda": [268, 275, 338, 342], "base_lay": 268, "randn_lik": 268, "samplelogprob": 268, "openreview": [269, 326], "ay8zfzm0tdd": [269, 326], "sub_sample_len": 269, "subsampl": [269, 308, 339], "action_log_prob_actor": 269, "state_action_value_actor": [269, 273], "connectionist": 270, "1992": 270, "doi": 270, "1007": 270, "bf00992696": 270, "actor_net": [270, 342, 344], "1801": 271, "01290": 271, "applic": [271, 279, 349], "1812": 271, "05905": 271, "redqloss": [272, 335], "math": 272, "theta_t": [272, 349], "theta_": [272, 349], "polyak": 272, "policy_nois": 273, "noise_clip": 273, "next_state_valu": [273, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 335], "td0": [274, 342], "strict_shap": 276, "view_a": 276, "qmixer": [279, 335], "local_valu": 279, "visibl": [279, 348], "dafault": 279, "acceptedkei": 279, "global_valu": 279, "penultim": 279, "local_value_network": 279, "mixer_network": 279, "value_modul": [279, 344, 353], "qnet": [279, 342], "next_val_kei": 280, "pred_next_v": 280, "usus": 280, "mse": 280, "q_valu": 280, "n_steps_to_next": 280, "value_next_st": 280, "1506": [281, 286, 294], "02438": [281, 286, 294], "exponenti": [281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 315], "average_ga": [281, 344], "skip_exist": [281, 282, 283, 284], "advang": 281, "gradient_mod": 281, "value_error": [281, 282, 283, 284, 285], "target_param": [281, 282, 283, 284, 285, 342, 348], "98": [281, 282, 283, 284, 342, 343, 349, 350], "94": [281, 284, 342, 343, 349], "unpack": [281, 282, 283, 284], "tensor_kei": [281, 282, 283, 284, 285], "next_valu": [281, 282, 283, 284, 285], "aka": [282, 343], "average_reward": [282, 283, 284], "tdestim": [282, 283, 285], "infti": 283, "valuefunctionbas": 285, "time_dim": [286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298], "old_stat": [286, 288, 290, 292, 294, 295, 297], "new_stat": [286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "rolling_gamma": [290, 291, 292, 293, 295, 296, 297, 298], "g1": [290, 291, 292, 293, 295, 296, 297, 298], "g2": [290, 291, 292, 293, 295, 296, 297, 298], "g3": [290, 291, 292, 293, 295, 296, 297, 298], "g4": [290, 291, 292, 293, 295, 296, 297, 298], "v3": [290, 291, 292, 293, 295, 296, 297, 298], "out_file_bas": 299, "skip_reset": 299, "interv": [299, 300, 309, 319, 343, 349], "center_crop": 300, "make_grid": 300, "mp4": [300, 302], "csvlogger": [300, 335, 343], "csv": [300, 302, 304, 343], "wandb": [300, 304, 307, 353], "tensorboard": [300, 304, 306, 353], "exp_nam": [300, 301, 302, 305, 306, 307, 329, 343], "log_dir": [300, 301, 302, 304, 306, 307, 343], "cheetah_video": 300, "video_format": [300, 302], "run_video": 300, "run_video_0": 300, "templat": 301, "pt": [302, 339, 350], "video_fp": 302, "minim": [302, 351], "dependeci": 302, "cur_dir": 302, "csv_log": 302, "video_": 302, "experiment_nam": [303, 304], "uuid": [303, 343, 354], "logger_typ": 304, "logger_nam": 304, "mlflow": [304, 305], "wandb_kwarg": 304, "mlflow_kwarg": 304, "tracking_uri": 305, "uri": 305, "datastor": 305, "tb_log": 306, "tensoarboard": 306, "td_log": 306, "save_dir": 307, "resum": 307, "reus": 307, "uncategor": 307, "sub_traj_len": 308, "min_sub_traj_len": 308, "register_op": [308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 339, 343], "process_optim_batch": [308, 314, 315, 339], "td_out": [308, 316], "_process_optim_batch_hook": [308, 339], "batch_subsampl": 308, "clear_cuda": 309, "pre_optim_step": [309, 339], "counter": [310, 339], "log_pbar": [310, 311, 313, 315, 339, 343], "progress": [310, 311, 313, 317, 339, 343, 345, 354], "count_fram": 310, "pre_steps_log": [310, 311, 339], "count_frames_log": 310, "lognam": 311, "r_train": [311, 343], "log_reward": [311, 343], "loss_compon": 312, "appl": 312, "optimizer_hook": 312, "record_interv": [313, 342, 343], "record_fram": [313, 320, 342, 343], "policy_explor": [313, 329, 342, 343], "log_kei": [313, 343], "suffix": 313, "underestim": 313, "set_exploration_typ": [313, 335, 344, 345, 353], "r_evalu": [313, 342], "flatten_tensordict": [314, 343], "max_dim": 314, "rb_trainer": 314, "batch_process": [314, 315, 316, 339], "post_loss": [314, 339], "999": [315, 343], "jitter": 315, "finfo": 315, "default_dtyp": 315, "get_default_dtyp": 315, "reward_norm": 315, "update_reward_stat": 315, "normalize_reward": 315, "make_train": [316, 335], "_process_batch_hook": [316, 339], "select_kei": [316, 339], "versatil": 317, "optim_steps_per_batch": [317, 339, 343], "epoch": [317, 344, 348], "clip_grad_norm": 317, "clip_norm": 317, "progress_bar": 317, "save_trainer_interv": 317, "log_interv": [317, 343], "save_trainer_fil": [317, 339], "datacollectorbas": [319, 322, 323, 329, 335], "update_weights_interv": [319, 343], "update_weight": 319, "post_step": [319, 339, 343], "cfg": [320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333], "dictconfig": [320, 321, 322, 323, 326, 327, 328, 329, 330, 333], "divid": [320, 337, 342, 348, 349], "unknowingli": 320, "annealing_fram": [320, 342], "init_env_step": [320, 321, 342], "proof_environ": [321, 326, 342], "sta": 321, "ot": 321, "actor_model_explor": [322, 323, 342], "make_env_kwarg": [322, 323], "targetnetupdat": [324, 325, 328, 329], "redqloss_deprec": 325, "actor_net_kwarg": 326, "qvalue_net_kwarg": 326, "observation_kei": 326, "parser_env_arg": 326, "parser_model_args_continu": 326, "hydra": 326, "config_stor": 326, "configstor": 326, "config_field": 326, "config_cl": 326, "redqmodelconfig": 326, "envconfig": 326, "make_dataclass": 326, "cls_name": 326, "cs": 326, "config_path": 326, "config_nam": 326, "replayargsconfig": 327, "target_net_updat": [329, 342, 343], "constitu": 329, "tensorboardlogg": [329, 335], "egreedywrapp": 329, "env_proof": 329, "obs_spec": 329, "net_valu": 329, "dir": [329, 339, 343], "gettempdir": 329, "argpars": [330, 333], "namespac": [330, 333], "parser": [330, 333], "transformed_env_constructor": [330, 335], "num_env_per_collector": [331, 332], "video_tag": 333, "norm_obs_onli": 333, "use_env_cr": 333, "custom_env_mak": 333, "custom_env": 333, "return_transformed_env": 333, "action_dim_gsd": 333, "state_dim_gsd": 333, "obs_norm_state_dict": 333, "wheter": 333, "maker": 333, "asyncdatacollector": 335, "distributedsyncdatacollector": 335, "submitit_delayed_launch": 335, "raycollector": 335, "rational": 335, "behind": 335, "footnot": 335, "d4rlexperiencereplai": 335, "gendgrlexperiencereplai": 335, "minariexperiencereplai": 335, "openmlexperiencereplai": 335, "openxexperiencereplai": 335, "vd4rlexperiencereplai": 335, "unboundeddiscretetensorspec": [335, 354], "lazystackedtensorspec": 335, "lazystackedcompositespec": 335, "prompttensordicttoken": 335, "rolloutfrommodel": 335, "tokenizeddatasetload": 335, "create_infinite_iter": 335, "consolidate_spec": 335, "check_no_exclusive_kei": 335, "contains_lazy_spec": 335, "check_marl_group": 335, "tensordictrecord": 335, "videorecord": [335, 344], "get_available_librari": 335, "set_exploration_mod": 335, "make_composite_from_td": [335, 349], "terminated_or_trunc": 335, "braxwrapp": 335, "dmcontrolwrapp": 335, "jumanjienv": 335, "jumanjiwrapp": 335, "mogymenv": 335, "mogymwrapp": 335, "multithreadedenvwrapp": 335, "openmlenv": 335, "pettingzooenv": 335, "robohiveenv": 335, "smacv2env": 335, "smacv2wrapp": 335, "vmaswrapp": 335, "qvaluehook": 335, "distributionalqvaluehook": 335, "reset_nois": 335, "cemplann": 335, "mpcplannerbas": 335, "mppiplann": 335, "independentnorm": 335, "truncatednorm": 335, "maskedonehotcategor": 335, "inv_softplu": 335, "vmapmodul": 335, "distributionaldqnloss": [335, 343], "discretesacloss": 335, "iqlloss": 335, "discreteiqlloss": 335, "cqlloss": 335, "discretecqlloss": 335, "dtloss": 335, "onlinedtloss": 335, "a2closs": 335, "reinforceloss": 335, "dreameractorloss": 335, "dreamermodelloss": 335, "dreamervalueloss": 335, "td0estim": [335, 342], "td1estim": [335, 342], "td0_return_estim": 335, "td0_advantage_estim": 335, "td1_return_estim": 335, "vec_td1_return_estim": 335, "td1_advantage_estim": 335, "vec_td1_advantage_estim": 335, "td_lambda_return_estim": 335, "vec_td_lambda_return_estim": 335, "td_lambda_advantage_estim": 335, "vec_td_lambda_advantage_estim": 335, "generalized_advantage_estim": 335, "vec_generalized_advantage_estim": 335, "reward2go": 335, "distance_loss": [335, 342], "hold_out_net": 335, "hold_out_param": [335, 342], "softupd": [335, 342, 343, 345], "hardupd": [335, 342], "batchsubsampl": [335, 339], "clearcudacach": 335, "countframeslog": 335, "logreward": [335, 339, 343], "optimizerhook": [335, 343], "replaybuffertrain": [335, 339, 343], "rewardnorm": 335, "selectkei": [335, 339], "trainerhookbas": [335, 339, 343], "updateweight": [335, 339, 343], "make_collector_offpolici": 335, "make_collector_onpolici": 335, "make_dqn_loss": 335, "make_redq_loss": 335, "make_redq_model": 335, "make_replay_buff": [335, 342], "make_target_updat": 335, "parallel_env_constructor": [335, 342], "sync_async_collector": 335, "sync_sync_collector": 335, "correct_for_frame_skip": 335, "get_stats_random_rollout": 335, "mlflowlogg": 335, "wandblogg": 335, "get_logg": 335, "generate_exp_nam": 335, "journei": 336, "textbook": 336, "highlight": 336, "ever": [336, 348], "bump": 336, "think": [336, 344, 348, 354], "benefit": [336, 348, 351], "pr": 336, "ground": [337, 342, 349], "recycl": [337, 351], "impos": 337, "violat": 337, "noisier": 337, "Their": [337, 348], "sd": 337, "prob_modul": 337, "pick": [337, 342, 343], "tabl": [337, 343], "hopefulli": [337, 343], "functional_modul": 337, "make_funct": [337, 353], "mathbb": [337, 343], "rightarrow": [337, 343], "soften": 337, "backbon": [337, 345, 347, 353], "make_actor": 337, "make_valu": 337, "shared_param": 337, "make_common": 337, "reusabl": [338, 342, 351], "swappabl": [338, 342], "characterist": [338, 342, 349], "trainabl": [338, 342, 350], "whatev": [338, 342], "smth": [338, 342], "metric": [338, 342], "nutshel": [338, 342], "barto": [338, 348], "chapter": 338, "significantli": [338, 342, 343, 348], "next_stat": 338, "value_net_loss": 338, "pow": [338, 342], "therebi": [338, 342, 343], "room": 338, "signifi": [338, 348], "underperform": 338, "thin": 338, "intric": 338, "believ": 339, "scheme": [339, 354], "substenti": 339, "_pre_steps_log_hook": 339, "_pre_optim_hook": 339, "sub_batch": 339, "_post_loss_hook": 339, "_post_optim_hook": 339, "post_optim": [339, 343], "_post_optim_log": 339, "post_optim_log": 339, "_post_steps_hook": 339, "_post_steps_log_hook": 339, "post_steps_log": 339, "comment": [339, 343, 353], "reserv": 339, "logginghook": 339, "logging_hook": 339, "save_dict": 339, "some_valu": 339, "torchsnapshot": 339, "ckpt_backend": 339, "filepath": 339, "save_train": 339, "load_from_fil": 339, "280": [341, 342, 349, 352], "galleri": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "mem": [341, 352], "mb": [341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354], "torchrl_env": [341, 352, 354], "702": [341, 352, 354], "77": [341, 342, 343, 349, 352, 354], "torchrl_demo": [341, 352, 353], "668": [341, 352, 353], "2824": [341, 352, 353], "36": [341, 343, 345, 348, 349, 352], "923": [341, 349, 352], "coding_dqn": [341, 343, 352], "903": [341, 343, 352], "856": [341, 343, 352], "rb_tutori": [341, 351, 352], "865": [341, 351, 352], "dqn_with_rnn": [341, 345, 352], "297": [341, 342, 345, 349, 352], "1961": [341, 352], "multiagent_ppo": [341, 348, 352], "218": [341, 348, 349, 352], "coding_ddpg": [341, 342, 352], "52": [341, 342, 343, 349, 350, 351, 352], "475": [341, 342, 349, 352], "coding_ppo": [341, 344, 352], "223": [341, 344, 349, 352], "pretrained_model": [341, 350, 352], "186": [341, 349, 350, 352], "2005": [341, 350, 352], "multi_task": [341, 347, 352], "820": [341, 347, 352], "author": [342, 343, 344, 345, 348, 349, 351], "vincent": [342, 343, 344, 345, 349, 351], "moen": [342, 343, 344, 345, 349, 351], "assembl": 342, "focus": 342, "straightforward": [342, 343, 351], "maxim": [342, 349], "transpar": [342, 345], "understood": 342, "sota": [342, 343, 353], "illustr": [342, 343, 351], "bash": 342, "is_fork": [342, 343, 344, 345, 348, 350], "get_start_method": [342, 343, 344, 345, 348, 350], "is_avail": [342, 343, 344, 345, 348, 350], "collector_devic": 342, "loss_dict": 342, "oblivi": [342, 344, 351], "elementari": 342, "didact": 342, "dilut": 342, "pessimist": [342, 343, 344], "target_actor_network_param": 342, "actor_in_kei": 342, "actor_crit": 342, "noth": [342, 344], "compromis": 342, "hp": 342, "hasattr": 342, "_value_estim": 342, "elif": [342, 343], "notimplementederror": 342, "unknown": 342, "ifgg": 342, "_loss_actor": 342, "td_copi": 342, "actor_network_param": 342, "value_network_param": 342, "_loss_valu": 342, "pred_val": 342, "target_value_network_param": 342, "glue": 342, "_forward": 342, "ndimens": 342, "remaind": 342, "focu": [342, 343, 344], "env_librari": 342, "env_task": 342, "env_arg": [342, 343], "friendli": 342, "torchr": 342, "rescal": 342, "presum": 342, "make_transformed_env": 342, "reward_sc": 342, "marker": 342, "env_per_collector": 342, "transform_state_dict": 342, "make_t_env": 342, "cheat": 342, "10m": 342, "cautiou": 342, "magnitud": 342, "thousand": [342, 345], "get_env_stat": 342, "proof_env": 342, "5000": [342, 343, 344], "recal": [342, 344], "ddpgmlpactor": 342, "ddpgmlpqnet": 342, "materi": 342, "ornsteinuhlenbeckprocesswrapp": 342, "make_ddpg_actor": 342, "q_net": 342, "tight": 342, "decoupl": 342, "10_000": [342, 344], "traj_len": [342, 345], "make_record": 342, "recorder_obj": 342, "flavor": 342, "circular": 342, "buffer_s": [342, 343], "random_crop_len": 342, "prb": 342, "buffer_scratch_dir": 342, "temporari": 342, "25": [342, 343, 344, 348, 349], "dataflow": 342, "ceil_div": 342, "utd": [342, 345], "update_to_data": 342, "realiz": 342, "_must_": 342, "001": [342, 349], "outdat": 342, "trick": [342, 343], "despit": 342, "adam": [342, 343, 344, 345, 348, 349], "optimizer_actor": 342, "lr": [342, 343, 344, 345, 348, 349], "weight_decai": [342, 343], "optimizer_valu": 342, "total_collection_step": 342, "pretti": [342, 351], "rewards_ev": 342, "collected_fram": 342, "pbar": [342, 344, 345, 348, 349], "r0": 342, "numel": [342, 344, 345, 350, 351], "current_fram": 342, "sampled_tensordict": 342, "gn1": 342, "clip_grad_norm_": [342, 344, 348, 349], "gn2": 342, "gn": [342, 349], "td_record": 342, "rn": 342, "set_descript": [342, 344, 345, 348, 349], "2f": 342, "800": [342, 343], "3101": 342, "44it": [342, 343], "1600": [342, 343], "09": [342, 343, 349], "897": 342, "70it": [342, 343, 349], "2400": [342, 343], "1322": 342, "13it": [342, 343], "3200": [342, 343], "1703": 342, "88it": [342, 343, 349], "4000": [342, 343, 344], "2027": [342, 349], "76it": [342, 343], "48": [342, 343, 349, 350, 351], "4800": [342, 343, 349], "2291": 342, "02it": [342, 343], "56": [342, 343, 349, 350], "5600": 342, "2436": [342, 349], "25it": [342, 343, 349], "78": [342, 343, 349, 351], "227": [342, 349], "6400": [342, 353], "809": 342, "19it": [342, 343], "63": [342, 343, 349], "166": [342, 349], "82": [342, 343, 344, 349], "07": [342, 343, 349, 350], "72": [342, 343, 348, 349, 350], "7200": 342, "516": [342, 349], "16it": [342, 343, 345], "55": [342, 343, 349], "192": [342, 343, 349, 351], "49": [342, 343, 349, 350], "76": [342, 343, 349, 350, 351], "8000": [342, 344], "413": [342, 349], "68it": [342, 349], "230": [342, 349], "8800": 342, "370": [342, 349], "95it": [342, 343], "68": [342, 343, 349, 350], "85": [342, 343, 349], "59": [342, 343, 345, 348, 349, 350], "89": [342, 343, 349, 350], "147": [342, 349], "51": [342, 343, 348, 349, 350], "96": [342, 343, 345, 349, 350, 351], "9600": 342, "301": [342, 349], "27it": [342, 343, 349], "74": [342, 343, 349, 350], "143": [342, 349, 351], "206": [342, 349], "10400it": 342, "89it": [342, 343, 345], "73": [342, 343, 349, 350], "165": [342, 349], "57": [342, 343, 348, 349, 350], "plot": [342, 344, 345, 348, 349], "mention": [342, 345, 351, 354], "matplotlib": [342, 344, 345, 348, 349, 351, 354], "pyplot": [342, 344, 345, 348, 349, 351, 354], "plt": [342, 344, 345, 348, 349, 351, 354], "zip": [342, 346], "legend": 342, "xlabel": [342, 345, 348, 349], "ylabel": [342, 348], "tight_layout": 342, "concret": [342, 344], "takeawai": [342, 343], "distpatch": 342, "jupyt": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "ipynb": [342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354], "sphinx": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354], "customis": [343, 348], "road": 343, "aspect": 343, "highest": 343, "prerequisit": [343, 345], "familiar": [343, 348, 354], "lookup": 343, "amort": [343, 344], "cart": 343, "pole": 343, "un": 343, "actuat": 343, "frictionless": 343, "duelingcnndqnet": 343, "egreedymodul": [343, 345], "is_notebook": 343, "shell": 343, "get_ipython": 343, "__class__": 343, "zmqinteractiveshel": 343, "qtconsol": 343, "terminalinteractiveshel": 343, "ipython": [343, 348, 349], "nameerror": 343, "umbrella": 343, "misplac": 343, "misus": 343, "orchestr": 343, "five": 343, "64x64": 343, "motion": [343, 349], "obs_norm_sd": 343, "simpler": 343, "get_norm_stat": 343, "test_env": 343, "make_model": 343, "dummy_env": 343, "output_s": [343, 345], "init_bia": 343, "exploration_modul": [343, 345], "eps_greedy_v": 343, "eps_greedy_val_env": 343, "actor_explor": 343, "get_replay_buff": 343, "n_optim": 343, "themselv": 343, "simplic": [343, 344, 350, 351], "get_collector": 343, "cl": 343, "data_collector": 343, "bunch": 343, "power": 343, "ubiquit": 343, "get_loss_modul": 343, "target_updat": 343, "995": [343, 349], "sensit": 343, "variat": 343, "2e": [343, 349], "wd": 343, "upd": 343, "harder": [343, 353], "5_000": 343, "500000": 343, "100000": 343, "005": 343, "mandatori": [343, 344, 348, 349], "fairer": 343, "budget": 343, "dqn_exp_": 343, "uuid1": [343, 354], "9895": 343, "0737": 343, "registr": 343, "cumbersom": 343, "buffer_hook": 343, "weight_updat": 343, "aliv": 343, "total_reward": 343, "4497": 343, "9434": 343, "15it": 343, "4045": 343, "53it": [343, 349], "3802": 343, "11it": [343, 349], "3650": 343, "3682": 343, "96it": 343, "224": [343, 349], "51it": 343, "4434": 343, "17it": 343, "3712": 343, "288": [343, 349], "65": [343, 349, 350], "70": [343, 344, 348, 349, 350], "91it": 343, "352": [343, 349], "79it": [343, 345], "384": [343, 349], "4676": 343, "416": [343, 349], "54": [343, 349, 350], "83": [343, 349, 350], "4526": 343, "448": [343, 349], "24it": 343, "4314": 343, "480": [343, 349, 350], "05it": 343, "4254": [343, 349], "41it": [343, 349], "544": [343, 349], "60it": [343, 349], "4948": 343, "576": [343, 349], "58it": [343, 344, 349], "608": [343, 349], "66it": [343, 349], "640": 343, "80it": 343, "672": 343, "50it": [343, 349], "704": 343, "47": [343, 345, 349], "85it": [343, 349], "736": 343, "90": [343, 344, 348, 349, 350], "01it": 343, "768": 343, "4224": 343, "832": 343, "23it": 343, "4797": 343, "864": 343, "91": [343, 349], "97it": 343, "896": 343, "92": [343, 349, 350], "928": 343, "43": [343, 345, 349, 350], "69it": [343, 349], "960": 343, "992": [343, 349], "45": [343, 349, 350], "4134": 343, "1056": 343, "43it": 343, "1088": 343, "1120": 343, "64it": [343, 349], "1152": 343, "1184": 343, "35it": 343, "1216": 343, "93": [343, 349], "38it": 343, "4586": 343, "1248": 343, "1280": 343, "18it": 343, "1344": 343, "57it": [343, 349], "1376": 343, "61it": [343, 349], "1408": 343, "1440": 343, "78it": 343, "1472": 343, "1504": 343, "71it": [343, 349], "4102": 343, "1536": 343, "42it": 343, "1568": 343, "56it": [343, 349], "1632": 343, "20it": [343, 345, 349], "1696": 343, "99it": [343, 344], "1728": 343, "1760": 343, "1792": 343, "1824": 343, "1856": 343, "22it": 343, "1888": 343, "97": [343, 349, 351], "1920": 343, "1952": 343, "82it": 343, "1984": 343, "2016": 343, "41": [343, 345, 349], "2048": [343, 350], "12it": [343, 349], "2080": 343, "2112": [343, 349], "2144": 343, "2176": 343, "2208": 343, "73it": [343, 349], "2240": 343, "30it": 343, "2272": 343, "2304": 343, "83it": [343, 344], "2336": 343, "52it": [343, 349], "2368": 343, "90it": [343, 344, 349], "2432": 343, "2464": 343, "2496": 343, "2528": [343, 349], "2560": 343, "87it": 343, "2624": 343, "09it": 343, "53": [343, 349], "2656": [343, 349], "2688": 343, "2720": [343, 349], "2752": 343, "72it": [343, 349], "4345": 343, "2784": 343, "74it": [343, 349], "2816": 343, "2848": 343, "08it": [343, 349], "58": [343, 349, 350], "2880": 343, "2912": 343, "2944": [343, 349], "60": [343, 344, 348, 349, 350, 353], "2976": [343, 349], "21it": [343, 349], "61": [343, 349, 350], "3040": 343, "3072": 343, "07it": 343, "62": [343, 349, 350], "3104": 343, "3136": 343, "33it": 343, "3168": 343, "3232": [343, 349], "46it": 343, "3264": 343, "66": [343, 345, 349, 350], "3296": 343, "67": [343, 347, 349, 350], "3328": 343, "3360": 343, "3392": 343, "94it": 343, "3424": 343, "69": [343, 349, 351], "3456": [343, 349], "3488": 343, "71": [343, 349, 350], "3520": 343, "3552": 343, "36it": 343, "3584": 343, "4074": [343, 349], "3616": 343, "04it": 343, "3648": 343, "59it": [343, 349], "3680": 343, "00it": 343, "3744": 343, "3776": 343, "98it": 343, "3808": 343, "3840": 343, "3872": 343, "3904": 343, "32it": 343, "79": [343, 349, 350], "3936": 343, "3968": 343, "4032": 343, "67it": [343, 349], "4064": 343, "4096": 343, "03it": 343, "4128": [343, 349], "4160": 343, "4192": 343, "54it": [343, 349], "4256": [343, 349], "4288": [343, 349], "4320": 343, "65it": [343, 349], "4352": 343, "4384": 343, "4416": 343, "4448": 343, "4480": 343, "40it": [343, 349], "4512": 343, "4544": 343, "31it": [343, 344], "4576": 343, "4608": 343, "86it": [343, 349], "4640": 343, "4672": [343, 349], "4704": 343, "45it": 343, "4736": 343, "4768": 343, "4832": 343, "4864": 343, "4896": 343, "77it": 343, "4928": 343, "4960": 343, "4992": 343, "5024it": 343, "print_csv_files_in_fold": 343, "folder_path": 343, "csv_file": 343, "output_str": 343, "dirpath": 343, "endswith": 343, "strip": 343, "tmp": [343, 351], "tmpirt_limo": 343, "dqn_exp_52576006": 343, "c5f8": 343, "11ee": [343, 354], "b5ab": [343, 354], "0242ac110002": [343, 354], "4044681489467621": 343, "4134137034416199": 343, "4948333501815796": 343, "4074399769306183": 343, "2356531322002411": 343, "25836804509162903": 343, "38199493288993835": 343, "39603209495544434": 343, "3822322487831116": 343, "29792842268943787": 343, "48815295100212097": 343, "36428776383399963": 343, "45010751485824585": 343, "grad_norm_0": 343, "237006902694702": 343, "274329662322998": 343, "1974761486053467": 343, "131011009216309": 343, "2784488201141357": 343, "833012580871582": 343, "919684410095215": 343, "3105602264404297": 343, "04936408996582": 343, "10000000894069672": 343, "qvaluenetwork": 343, "worst": 343, "accuraci": 343, "fanci": 343, "talk": 344, "repetit": 344, "six": 344, "sophist": [344, 348], "invent": 344, "overview": [344, 348, 353], "theta_k": 344, "pi_": 344, "exceed": 344, "discourag": [344, 349], "indispens": 344, "analyz": 344, "lingua": 344, "franca": 344, "defaultdict": [344, 349], "3e": [344, 345, 348], "max_grad_norm": [344, 348], "ourselv": [344, 354], "sub_batch_s": 344, "num_epoch": [344, 348], "entropy_ep": [344, 348], "interchang": [344, 350, 351], "charact": 344, "inverteddoublependulum": 344, "transmit": 344, "stai": 344, "supplementari": [344, 354], "told": 344, "confid": [344, 348], "ran": 344, "f_": 344, "mu_": 344, "difficulti": [344, 354], "d_ob": 344, "d_action": 344, "policy_modul": [344, 348], "That": 344, "said": 344, "briefli": [344, 348], "refil": [344, 348], "conveni": [344, 348, 349], "easiest": [344, 348], "mathemat": [344, 348], "tradeoff": [344, 348], "advantage_modul": 344, "lr_schedul": [344, 349], "cosineannealinglr": [344, 349], "eval_str": 344, "tensordict_data": [344, 348], "data_view": [344, 348], "subdata": [344, 348], "cum_reward_str": 344, "4f": [344, 345, 349], "stepcount_str": 344, "param_group": 344, "lr_str": 344, "eval_rollout": 344, "nice": 344, "474": [344, 349], "8164": 344, "0922": [344, 354], "0003": [344, 349], "93it": 344, "1236": 344, "3000": 344, "477": [344, 349], "1548": [344, 349], "479": [344, 349], "1744": 344, "0002": [344, 349], "482": [344, 349], "2043": 344, "6000": 344, "484": [344, 349], "2142": 344, "7000": 344, "487": [344, 349], "26it": 344, "2249": 344, "14it": 344, "2230": [344, 349], "9000": 344, "481": [344, 349], "2260": 344, "483": [344, 349], "06it": 344, "2408": 344, "cap": [344, 351], "figsiz": [344, 349], "subplot": [344, 349, 354], "titl": [344, 345, 348, 349], "bit": [344, 345, 348, 351], "84x84": 345, "accessori": 345, "stamp": 345, "assist": 345, "emb": 345, "n_cell": 345, "customiz": 345, "wouldn": 345, "make_tensordict_prim": 345, "qval": 345, "stoch_polici": 345, "opportun": 345, "uniniti": 345, "again": [345, 348, 350, 351, 354], "redund": 345, "strongli": 345, "sake": [345, 350, 351], "20_000": [345, 349], "longest": 345, "npai": 345, "action_spread": 345, "1000000": 345, "133": [345, 349], "0010": [345, 349], "0009": [345, 349], "150": [345, 349], "0007": [345, 349], "1962": 345, "tutorials_python": 346, "tutorials_jupyt": 346, "env1_obs_kei": 347, "observation_stand": 347, "env2_obs_kei": 347, "observation_walk": 347, "tdreset1": 347, "tdreset2": 347, "tdreset": 347, "policy_common": 347, "policy_stand": 347, "policy_walk": 347, "But": 347, "env1_mak": 347, "env2_mak": 347, "_single_task": 347, "td_rollout": 347, "matteo": 348, "bettini": 348, "benchmarl": 348, "maddpg": 348, "navig": 348, "lidar": 348, "sensor": 348, "collis": 348, "tie": 348, "mappo": 348, "ippo": 348, "phase": [348, 351], "mathbf": 348, "pi": [348, 349], "fed": [348, 351], "literatur": 348, "overcom": 348, "stationari": 348, "concurr": 348, "analys": 348, "gui": 348, "visualis": 348, "multiagentmlp": 348, "vmas_devic": 348, "6_000": 348, "team": [348, 353], "n_iter": 348, "minibatch_s": 348, "generalis": 348, "simd": 348, "parallelis": 348, "warp": 348, "todai": 348, "circl": 348, "surround": 348, "dot": [348, 349], "collid": 348, "drag": 348, "elast": 348, "acceler": 348, "penalis": 348, "num_vmas_env": 348, "scenario_nam": 348, "four": [348, 349], "environmnet": 348, "final_rew": 348, "agent_collis": 348, "stress": 348, "paramount": 348, "n_rollout_step": 348, "evolut": 348, "yourself": 348, "utilis": 348, "n_actions_per_ag": 348, "n_obs_per_ag": 348, "share_parameters_polici": 348, "policy_net": 348, "denot": 348, "carefulli": [348, 354], "grant": 348, "converg": 348, "cooper": 348, "share_parameters_crit": 348, "critic_net": 348, "fantast": 348, "minibatch": 348, "desc": 348, "episode_reward_mean": 348, "episode_reward_mean_list": 348, "get_item_shap": 348, "critic_network_param": 348, "target_critic_network_param": 348, "refresh": 348, "4579917788505554": 348, "39507877826690674": 348, "2842429876327515": 348, "5311583280563354": 348, "0912442207336426": 348, "4949307441711426": 348, "478776454925537": 348, "7761335372924805": 348, "738668441772461": 348, "9966132640838623": 348, "xvfb": 348, "pyvirtualdisplai": 348, "1400": [348, 349], "900": 348, "pil": 348, "rendering_callback": 348, "fromarrai": 348, "rgb_arrai": [348, 349], "gif": 348, "save_al": 348, "append_imag": 348, "profici": 348, "master": 348, "freeli": 349, "codebas": 349, "touch": 349, "undertaken": 349, "broader": 349, "wider": 349, "algebra": 349, "acquaint": 349, "avenu": 349, "_apply_to_composit": 349, "default_x": 349, "default_i": 349, "torqu": 349, "upward": 349, "angular": 349, "sin": 349, "rad": 349, "sec": 349, "gravit": 349, "angl": 349, "deleg": 349, "new_th": 349, "new_thdot": 349, "thdot": 349, "g_forc": 349, "max_torqu": 349, "angle_norm": 349, "max_spe": 349, "albeit": 349, "gen_param": 349, "high_th": 349, "high_thdot": 349, "low_th": 349, "low_thdot": 349, "lazili": 349, "trivial": 349, "shortcut": [349, 354], "irrelev": 349, "_make_spec": 349, "td_param": 349, "pseudo": 349, "render_mod": 349, "render_fp": 349, "random_": 349, "_make_step": 349, "staticmethod": 349, "showcas": 349, "skeleton": 349, "_apply_transform": [349, 354], "_inv_apply_transform": [349, 354], "subset": [349, 350], "unitari": 349, "sine": 349, "cosin": 349, "sintransform": 349, "tensordict_reset": 349, "costransform": 349, "t_sin": 349, "t_co": 349, "cat_transform": 349, "simple_rollout": 349, "unexplor": 349, "recreat": 349, "init_td": 349, "traj_return": 349, "last_reward": 349, "is_ipython": 349, "inlin": 349, "get_backend": 349, "ion": 349, "gcf": 349, "clear_output": 349, "625": 349, "0748": 349, "519": 349, "48it": 349, "0499": 349, "4472": 349, "073": 349, "0685": 349, "0408": 349, "552": 349, "5154": 349, "9086": 349, "9385": 349, "155": 349, "2568": 349, "4981": 349, "8929": 349, "4491": 349, "581": 349, "3233": 349, "0664": 349, "596": 349, "1021": 349, "5263": 349, "9579": 349, "5807": 349, "8075": 349, "212": 349, "2009": 349, "5525": 349, "914": 349, "2894": 349, "0115": 349, "0977": 349, "1845": 349, "1830": 349, "4858": 349, "233": 349, "2863": 349, "0297": 349, "464": 349, "4617": 349, "5997": 349, "904": 349, "1647": 349, "0777": 349, "901": 349, "4709": 349, "6813": 349, "8317": 349, "3221": 349, "5554": 349, "276": 349, "3353": 349, "701": 349, "8570": 349, "6656": 349, "463": 349, "7779": 349, "6911": 349, "875": 349, "0796": 349, "7082": 349, "308": 349, "0421": 349, "1496": 349, "5037": 349, "1755": 349, "5029": 349, "9454": 349, "665": 349, "9330": 349, "2118": 349, "444": 349, "0995": 349, "6294": 349, "3146": 349, "2909": 349, "461": 349, "9720": 349, "1298": 349, "9923": 349, "0345": 349, "3438": 349, "3688": 349, "424": 349, "6953": 349, "5233": 349, "411": 349, "8011": 349, "5329": 349, "2677": 349, "6969": 349, "7010": 349, "376": 349, "9352": 349, "7707": 349, "6178": 349, "5646": 349, "348": 349, "7304": 349, "9407": 349, "942": 349, "3882": 349, "7604": 349, "3507": 349, "8928": 349, "258": 349, "6978": 349, "4641": 349, "549": 349, "6047": 349, "5005": 349, "4136": 349, "2993": 349, "3222": 349, "4046": 349, "7314": 349, "275": 349, "6331": 349, "9318": 349, "961": 349, "8331": 349, "1604": 349, "4099": 349, "4761": 349, "125": 349, "4262": 349, "6363": 349, "382": 349, "3593": 349, "7377": 349, "2847": 349, "3443": 349, "867": 349, "3592": 349, "4760": 349, "441": 349, "9950": 349, "8021": 349, "3528": 349, "1214": 349, "708": 349, "4023": 349, "3583": 349, "041": 349, "3801": 349, "0310": 349, "120": 349, "4244": 349, "2039": 349, "4850": 349, "8748": 349, "706": 349, "4897": 349, "9210": 349, "8964": 349, "0832": 349, "3934": 349, "456": 349, "8971": 349, "2933": 349, "3377": 349, "6996": 349, "2274": 349, "8916": 349, "098": 349, "2660": 349, "9110": 349, "4503": 349, "6956": 349, "9172": 349, "4026": 349, "946": 349, "9229": 349, "5205": 349, "294": 349, "8872": 349, "6637": 349, "019": 349, "9281": 349, "2082": 349, "724": 349, "8561": 349, "6574": 349, "357": 349, "4138": 349, "5230": 349, "385": 349, "4065": 349, "5642": 349, "921": 349, "9786": 349, "4129": 349, "5831": 349, "266": 349, "7723": 349, "4152": 349, "0898": 349, "389": 349, "5155": 349, "5376": 349, "5616": 349, "4094": 349, "283": 349, "5333": 349, "4803": 349, "895": 349, "6566": 349, "2588": 349, "662": 349, "4732": 349, "7503": 349, "068": 349, "0714": 349, "3370": 349, "059": 349, "8612": 349, "1915": 349, "3855": 349, "0349": 349, "9644": 349, "4538": 349, "445": 349, "0392": 349, "4080": 349, "1648": 349, "9599": 349, "4284": 349, "5946": 349, "2590": 349, "9181": 349, "4621": 349, "9075": 349, "674": 349, "1772": 349, "9444": 349, "351": 349, "9391": 349, "5595": 349, "8673": 349, "6240": 349, "5919": 349, "1071": 349, "9127": 349, "251": 349, "9799": 349, "3131": 349, "9612": 349, "9705": 349, "8741": 349, "0972": 349, "0337": 349, "0350": 349, "0654": 349, "102": [349, 351], "2441": 349, "4596": 349, "362": 349, "103": 349, "4362": 349, "171": 349, "104": 349, "4041": 349, "6907": 349, "105": 349, "4664": 349, "2760": 349, "0299": 349, "9712": 349, "349": 349, "107": 349, "3332": 349, "4479": 349, "772": 349, "108": 349, "4357": 349, "9591": 349, "543": 349, "109": 349, "6216": 349, "1353": 349, "692": 349, "110": 349, "6261": 349, "7086": 349, "496": 349, "111": 349, "7758": 349, "9818": 349, "112": 349, "7772": 349, "5055": 349, "113": 349, "5840": 349, "3180": 349, "2083": 349, "115": 349, "5275": 349, "6873": 349, "116": 349, "4107": 349, "1624": 349, "117": 349, "6372": 349, "2571": 349, "118": 349, "4039": 349, "4428": 349, "119": 349, "4728": 349, "5628": 349, "6767": 349, "2466": 349, "522": 349, "121": [349, 354], "5873": 349, "5072": 349, "6548": 349, "3766": 349, "123": 349, "5134": 349, "1955": 349, "124": [349, 351], "2481": 349, "0591": 349, "4500": 349, "3368": 349, "126": 349, "9708": 349, "7059": 349, "127": 349, "3031": 349, "2534": 349, "843": 349, "3327": 349, "6193": 349, "129": 349, "4831": 349, "1172": 349, "2593": 349, "4219": 349, "962": 349, "8380": 349, "899": 349, "132": 349, "2721": 349, "9048": 349, "2419": 349, "5248": 349, "2139": 349, "4278": 349, "135": 349, "0690": 349, "5140": 349, "136": 349, "1140": 349, "7402": 349, "137": 349, "5356": 349, "1636": 349, "138": 349, "0671": 349, "8798": 349, "139": 349, "8918": 349, "3298": 349, "307": 349, "140": 349, "1779": 349, "141": 349, "1771": 349, "3624": 349, "936": 349, "142": 349, "1683": 349, "4810": 349, "9373": 349, "4435": 349, "144": 349, "4396": 349, "8092": 349, "145": 349, "2572": 349, "146": 349, "4212": 349, "0260": 349, "0939": 349, "6478": 349, "605": 349, "148": 349, "6606": 349, "7289": 349, "149": 349, "9300": 349, "7193": 349, "563": 349, "1166": 349, "8514": 349, "151": 349, "9108": 349, "0672": 349, "292": 349, "152": 349, "8591": 349, "3768": 349, "153": 349, "9976": 349, "154": 349, "0576": 349, "0067": [349, 354], "935": 349, "4199": 349, "1722": 349, "156": 349, "8310": 349, "3466": 349, "157": 349, "8631": 349, "2492": 349, "158": 349, "8763": 349, "1277": 349, "159": 349, "5562": 349, "7446": 349, "1082": 349, "9830": 349, "161": 349, "0946": 349, "5229": 349, "162": 349, "4574": 349, "6900": 349, "163": [349, 350], "2229": 349, "0318": 349, "164": 349, "0543": 349, "0817": 349, "761": 349, "2809": 349, "5118": 349, "366": 349, "1142": 349, "5635": 349, "167": 349, "1949": 349, "2327": 349, "982": 349, "168": 349, "0967": 349, "0387": 349, "457": 349, "169": 349, "0782": 349, "2150": 349, "170": 349, "5222": 349, "3725": 349, "9288": 349, "9837": 349, "1416": 349, "1099": 349, "173": 349, "8620": 349, "8475": 349, "174": 349, "1807": 349, "4375": 349, "175": 349, "1148": 349, "0645": 349, "2751": 349, "8313": 349, "177": 349, "9286": 349, "9770": 349, "178": 349, "39it": 349, "5735": 349, "2837": 349, "179": 349, "49it": 349, "2926": 349, "9489": 349, "180": 349, "1507": 349, "181": 349, "8724": 349, "3567": 349, "182": 349, "63it": 349, "3574": 349, "6140": 349, "183": 349, "7895": 349, "2518": 349, "184": 349, "6146": 349, "185": 349, "8776": 349, "7358": 349, "3722": 349, "8428": 349, "187": 349, "7955": 349, "188": 349, "0092": 349, "7106": 349, "829": 349, "189": 349, "2264": 349, "6919": 349, "190": 349, "1438": 349, "1362": 349, "191": 349, "0618": 349, "8217": 349, "9420": 349, "6765": 349, "193": 349, "7745": 349, "0709": 349, "194": 349, "9478": 349, "6867": 349, "195": 349, "6507": 349, "6225": 349, "196": 349, "2244": 349, "2195": 349, "197": 349, "5385": 349, "9263": 349, "198": 349, "1878": 349, "2374": 349, "8054": 349, "3504": 349, "557": 349, "0766": 349, "201": 349, "2011": 349, "8393": 349, "202": 349, "0803": 349, "7815": 349, "203": 349, "8363": 349, "2460": 349, "204": 349, "8643": 349, "2191": 349, "593": 349, "205": 349, "0773": 349, "1343": 349, "8657": 349, "207": 349, "9304": 349, "7584": 349, "208": 349, "8752": 349, "2307": 349, "209": 349, "5250": 349, "4869": 349, "7837": 349, "5762": 349, "211": 349, "6661": 349, "8600": 349, "2502": 349, "1752": 349, "3075": 349, "8871": 349, "214": 349, "9406": 349, "8090": 349, "215": [349, 351], "6291": 349, "8923": 349, "876": 349, "216": 349, "9504": 349, "21e": 349, "217": 349, "7431": 349, "7880": 349, "4463": 349, "5432": 349, "219": 349, "3793": 349, "3313": 349, "220": 349, "8843": 349, "0369": 349, "065": 349, "221": 349, "4828": 349, "8391": 349, "222": 349, "6265": 349, "2913": 349, "947": 349, "5541": 349, "1252": 349, "7342": 349, "2396": 349, "225": 349, "5936": 349, "1924": 349, "226": 349, "9975": 349, "2045": 349, "8367": 349, "9540": 349, "228": 349, "7259": 349, "6743": 349, "229": [349, 351], "4827": 349, "7528": 349, "7361": 349, "8756": 349, "231": 349, "7646": 349, "1116": 349, "232": 349, "5426": 349, "8385": 349, "5662": 349, "8585": 349, "234": 349, "8234": 349, "7930": 349, "235": 349, "2648": 349, "9309": 349, "236": 349, "6817": 349, "237": 349, "0943": 349, "1533": 349, "238": 349, "3045": 349, "0483": 349, "239": 349, "6415": 349, "0201": 349, "241": 349, "4437": 349, "4365": 349, "242": 349, "0358": 349, "4943": 349, "243": 349, "1272": 349, "5003": 349, "1180": 349, "2637": 349, "245": 349, "7197": 349, "0873": 349, "246": 349, "2917": 349, "247": 349, "0160": 349, "0738": 349, "248": 349, "3689": 349, "0120": 349, "249": 349, "5570": 349, "0475": 349, "250": 349, "4423": 349, "2220": 349, "6803": 349, "252": 349, "1465": 349, "7214": 349, "253": 349, "8801": 349, "7034": 349, "254": 349, "9136": 349, "4076": 349, "7589": 349, "5013": 349, "8150": 349, "2241": 349, "257": 349, "0753": 349, "8081": 349, "1951": 349, "8314": 349, "259": 349, "0038": 349, "260": 349, "0889": 349, "4616": 349, "261": 349, "0655": 349, "262": 349, "8333": 349, "9476": 349, "263": 349, "7554": 349, "3798": 349, "264": 349, "3717": 349, "3947": 349, "529": 349, "265": 349, "3060": 349, "6495": 349, "7467": 349, "8889": 349, "267": 349, "8457": 349, "591": 349, "7137": 349, "0536": 349, "771": 349, "269": 349, "1651": 349, "388": 349, "270": 349, "8246": 349, "5709": 349, "281": 349, "271": 349, "7502": 349, "0521": 349, "032": 349, "272": 349, "5475": 349, "7253": 349, "273": 349, "2856": 349, "7130": 349, "274": 349, "2778": 349, "4122": 349, "8368": 349, "1841": 349, "9622": 349, "1603": 349, "003e": 349, "277": 349, "0247": 349, "346": 349, "278": 349, "2238": 349, "6418": 349, "279": 349, "0626": 349, "2538": 349, "0149": 349, "7380": 349, "2167": 349, "8911": 349, "282": 349, "8725": 349, "1983": 349, "8142": 349, "3709": 349, "284": 349, "4989": 349, "285": 349, "6464": 349, "6210": 349, "286": 349, "9726": 349, "0820": 349, "287": 349, "6975": 349, "9091": 349, "4926": 349, "4791": 349, "289": 349, "0905": 349, "3500": 349, "290": 349, "2287": 349, "291": 349, "9918": 349, "5543": 349, "9245": 349, "6444": 349, "631": 349, "293": 349, "0448": 349, "4769": 349, "8566": 349, "7208": 349, "295": 349, "0966": 349, "296": 349, "5303": 349, "1537": 349, "023": 349, "2682": 349, "564": 349, "298": 349, "4318": 349, "5063": 349, "299": 349, "7475": 349, "4190": 349, "8186": 349, "5077": 349, "1883": 349, "5291": 349, "472": 349, "302": 349, "3998": 349, "303": 349, "3622": 349, "0930": 349, "626": 349, "304": 349, "9500": 349, "5664": 349, "305": 349, "5697": 349, "3024": 349, "306": 349, "62it": 349, "3117": 349, "0052": 349, "006": 349, "0981": 349, "9312": 349, "3873": 349, "309": 349, "0411": 349, "2650": 349, "1656": 349, "0228": 349, "004": 349, "311": 349, "1196": 349, "2478": 349, "312": 349, "7353": 349, "0812": 349, "313": 349, "3022": 349, "758": 349, "314": 349, "1406": 349, "4626": 349, "315": 349, "2156": 349, "851": 349, "316": 349, "1953": 349, "3774": 349, "317": 349, "6385": 349, "9917": 349, "318": 349, "2764": 349, "905": 349, "319": 349, "6391": 349, "9317": 349, "9748": 349, "2679": 349, "321": 349, "8495": 349, "5125": 349, "8177": 349, "6602": 349, "323": 349, "0704": 349, "5776": 349, "324": 349, "9833": [349, 353], "1339": 349, "402": 349, "325": 349, "1238": 349, "326": 349, "9299": 349, "0227": 349, "327": 349, "7727": 349, "1607": 349, "336": 349, "328": 349, "3958": 349, "3223": 349, "763": 349, "329": 349, "4742": 349, "1797": 349, "330": 349, "0144": 349, "0085": 349, "791": 349, "331": 349, "8284": 349, "0428": 349, "332": 349, "7365": 349, "333": 349, "4566": 349, "0781": 349, "086": 349, "334": 349, "3355": 349, "0230": 349, "335": 349, "9346": 349, "0423": 349, "076": 349, "3711": 349, "1335": 349, "6855": 349, "337": 349, "0304": 349, "0023": 349, "8459": 349, "338": 349, "9998": 349, "4399": 349, "339": 349, "2303": 349, "1346": 349, "340": 349, "2915": 349, "7116": 349, "341": 349, "5560": 349, "0487": 349, "342": 349, "5119": 349, "061": 349, "343": 349, "3305": 349, "3705": 349, "957": 349, "344": 349, "6068": 349, "345": 349, "5731": 349, "3897": 349, "0376": 349, "347": 349, "0434": 349, "012": 349, "1300": 349, "1215": 349, "0968": 349, "0885": 349, "350": 349, "1348": 349, "0073": 349, "5052": 349, "4184": 349, "2817": 349, "8887": 349, "353": 349, "4779": 349, "1009": 349, "354": 349, "0604": 349, "599": 349, "355": 349, "4486": 349, "1176": 349, "656": 349, "356": 349, "0668": 349, "8849": 349, "0012": 349, "358": 349, "7511": 349, "8804": 349, "359": 349, "8870": 349, "6728": 349, "360": 349, "8841": 349, "5508": 349, "361": 349, "5242": 349, "0013": 349, "6185": 349, "363": 349, "1378": 349, "0204": 349, "364": 349, "0355": 349, "685": 349, "365": 349, "4884": 349, "0231": 349, "0014": 349, "6793": 349, "367": 349, "9834": 349, "863": 349, "368": 349, "6709": 349, "462": 349, "369": 349, "5199": 349, "9790": 349, "9401": 349, "7802": 349, "371": 349, "6723": 349, "372": 349, "2678": 349, "6201": 349, "373": 349, "2184": 349, "7385": 349, "374": 349, "6344": 349, "617": 349, "375": 349, "9945": 349, "0772": 349, "567": 349, "7576": 349, "0398": 349, "377": 349, "3396": 349, "0022": 349, "094": 349, "378": 349, "3073": 349, "4018": 349, "379": 349, "1869": 349, "380": 349, "0481": 349, "1117": 349, "381": 349, "6823": 349, "981": 349, "8305": 349, "0210": 349, "383": 349, "4908": 349, "0272": 349, "538": 349, "3267": 349, "0111": 349, "7965": 349, "1796": 349, "0039": 349, "5396": 349, "386": 349, "3757": 349, "0490": 349, "387": 349, "1394": 349, "4187": 349, "2986": 349, "7954": 349, "1274": 349, "0063": 349, "813": 349, "390": 349, "8706": 349, "0114": 349, "391": 349, "6922": 349, "2423": 349, "392": 349, "9115": 349, "2602": 349, "393": 349, "2449": 349, "0783": 349, "394": 349, "0631": 349, "0057": 349, "7444": 349, "395": 349, "3339": 349, "0167": 349, "396": 349, "4806": 349, "397": 349, "28it": 349, "4171": 349, "067": 349, "398": 349, "2618": 349, "5809": 349, "399": 349, "0054": 349, "3364": 349, "55it": 349, "8733": 349, "0184": 349, "401": 349, "9137": 349, "0113": 349, "025": 349, "0386": 349, "0625": 349, "403": 349, "1332": 349, "0582": 349, "7816": 349, "404": 349, "8341": 349, "0941": 349, "854": 349, "405": 349, "8615": 349, "588": 349, "406": 349, "3849": 349, "008": 349, "407": 349, "9395": 349, "0765": 349, "055": 349, "408": 349, "2685": 349, "2235": 349, "688": 349, "409": 349, "3052": 349, "4249": 349, "410": 349, "6806": 349, "6383": 349, "3721": 349, "9981": 349, "412": 349, "1862": 349, "822": 349, "9811": 349, "0171": 349, "013": 349, "414": 349, "0252": 349, "0049": 349, "6205": 349, "415": 349, "1108": 349, "4921": 349, "9142": 349, "8130": 349, "417": 349, "1725": 349, "0036": 349, "3196": 349, "418": 349, "7795": 349, "0242": 349, "799": 349, "419": 349, "7737": 349, "0138": 349, "420": 349, "1462": 349, "0053": 349, "421": 349, "9226": 349, "6139": 349, "422": 349, "9889": 349, "0403": 349, "423": 349, "6194": 349, "0032": 349, "3989": 349, "0104": 349, "425": 349, "9960": 349, "6009": 349, "426": 349, "2697": 349, "0914": 349, "427": 349, "1114": 349, "428": 349, "9862": 349, "1932": 349, "429": 349, "0637": 349, "0623": 349, "082": 349, "430": 349, "9906": 349, "2031": 349, "431": 349, "9948": 349, "0895": 349, "432": 349, "1970": 349, "0256": 349, "4231": 349, "0449": 349, "644": 349, "434": 349, "1039": 349, "1973": 349, "435": 349, "4561": 349, "1225": 349, "436": 349, "0211": 349, "2125": 349, "437": 349, "3866": 349, "0050": 349, "7202": 349, "438": 349, "6388": 349, "0072": 349, "439": 349, "1187": 349, "0015": 349, "5116": 349, "440": 349, "0432": 349, "0025": 349, "7809": 349, "1925": 349, "0103": 349, "442": 349, "9570": 349, "443": 349, "0871": 349, "5601": 349, "0165": 349, "0047": 349, "6061": 349, "2746": 349, "0027": 349, "7887": 349, "446": 349, "1835": 349, "0035": 349, "855": 349, "447": 349, "8420": 349, "548": 349, "2653": 349, "0126": 349, "9736": 349, "449": 349, "0594": 349, "0119": 349, "6196": 349, "450": 349, "4509": 349, "0373": 349, "451": 349, "0620": 349, "452": 349, "6898": 349, "3235": 349, "687": 349, "453": 349, "5879": 349, "454": 349, "8406": 349, "0694": 349, "455": 349, "8259": 349, "0235": 349, "8500": 349, "0024": 349, "4054": 349, "458": 349, "0894": 349, "459": 349, "5966": 349, "460": 349, "6942": 349, "0016": 349, "6703": 349, "0145": 349, "8124": 349, "0218": 349, "9196": 349, "0188": 349, "8986": 349, "0884": 349, "0084": 349, "5624": 349, "465": 349, "8862": 349, "0006": 349, "5384": 349, "466": 349, "5837": 349, "467": 349, "8954": 349, "0101": 349, "6751": 349, "468": 349, "8063": 349, "0122": 349, "9635": 349, "469": 349, "0692": 349, "4216": 349, "470": 349, "1227": 349, "0586": 349, "162e": 349, "471": 349, "9690": 349, "4166": 349, "6324": 349, "473": 349, "0778": 349, "10it": 349, "8548": 349, "0017": 349, "4408": 349, "8125": 349, "1515": 349, "476": 349, "2733": 349, "0044": [349, 354], "2836": 349, "7497": 349, "7681": 349, "478": 349, "8547": 349, "0105": 349, "7212": 349, "9848": 349, "0019": 349, "6498": 349, "1987": 349, "0011": 349, "5473": 349, "8991": 349, "6091": 349, "9189": 349, "5771": 349, "6781": 349, "7542": 349, "5959": 349, "0064": 349, "4295": 349, "485": 349, "2547": 349, "486": 349, "0636": 349, "547": 349, "0065": 349, "488": 349, "1694": 349, "0083": 349, "5759": 349, "489": 349, "0493": 349, "0021": 349, "7805": 349, "490": 349, "0950": 349, "497": 349, "491": 349, "9717": 349, "3672": 349, "492": 349, "0207": 349, "493": 349, "8266": 349, "5365": 349, "494": 349, "2623": 349, "5078": 349, "495": 349, "4545": 349, "09636": 349, "8754": 349, "498": 349, "0031": 349, "8269": 349, "499": 349, "4082": 349, "6642": 349, "2284": 349, "501": 349, "9130": 349, "0008": 349, "502": 349, "503": 349, "7624": 349, "0056": 349, "3858": 349, "504": 349, "0890": 349, "0042": 349, "505": 349, "7505": 349, "2157": 349, "506": 349, "8394": 349, "3413": 349, "507": 349, "9609": 349, "0041": 349, "6905": 349, "508": 349, "8467": 349, "4409": 349, "509": 349, "510": 349, "8128": 349, "3559": 349, "511": 349, "1479": 349, "0264": 349, "1589": 349, "566": 349, "513": 349, "2756": 349, "0046": 349, "5266": 349, "514": 349, "9873": 349, "0112": 349, "9314": 349, "515": 349, "3791": 349, "0721": 349, "4580": 349, "0758": 349, "6114": 349, "517": 349, "2431": 349, "518": 349, "1958": 349, "5553": 349, "8924": 349, "0097": 349, "520": 349, "3737": 349, "0234": 349, "521": 349, "9125": 349, "4623": 349, "3230": 349, "0589": 349, "3784": 349, "523": 349, "9482": 349, "0051": 349, "524": 349, "1979": 349, "0045": 349, "6401": 349, "525": 349, "1588": 349, "0048": 349, "6255": 349, "526": 349, "6084": 349, "3477": 349, "1475": 349, "0209": 349, "528": 349, "7611": 349, "1040": 349, "0099": 349, "0173": 349, "643": 349, "530": 349, "8189": 349, "4358": 349, "531": 349, "9897": 349, "532": 349, "9751": 349, "533": 349, "6362": 349, "7495": 349, "534": 349, "1749": 349, "9513": 349, "535": 349, "7708": 349, "0371": 349, "536": 349, "2649": 349, "0437": 349, "537": 349, "5491": 349, "0276": 349, "6426": 349, "7294": 349, "078e": 349, "539": 349, "9928": 349, "540": 349, "7937": 349, "0124": 349, "9664": 349, "541": 349, "3342": 349, "542": 349, "2046": 349, "5496": 349, "47it": 349, "0956": 349, "0059": 349, "545": 349, "9028": 349, "5843": 349, "546": 349, "0674": 349, "0178": 349, "797": 349, "2815": 349, "0599": 349, "1587": 349, "9276": 349, "8228": 349, "6164": 349, "551": 349, "6850": 349, "9167": 349, "3092": 349, "0670": 349, "9177": 349, "553": 349, "1599": 349, "0043": 349, "554": 349, "6367": 349, "555": 349, "3657": 349, "556": 349, "6694": 349, "2622": 349, "0372": 349, "4841": 349, "558": 349, "2707": 349, "757": 349, "559": 349, "2267": 349, "5415": 349, "560": 349, "4556": 349, "0163": 349, "561": 349, "1839": 349, "0809": 349, "6262": 349, "562": 349, "0278": 349, "1112": 349, "6155": 349, "565": 349, "1427": 349, "3582": 349, "624": 349, "7870": 349, "9490": 349, "0439": 349, "8796": 349, "568": 349, "8026": 349, "612": 349, "569": 349, "3147": 349, "8486": 349, "570": 349, "7917": 349, "0129": 349, "571": 349, "9553": 349, "0020": 349, "6871": 349, "572": 349, "3132": 349, "0159": 349, "8646": 349, "573": 349, "5320": 349, "0269": 349, "574": 349, "2955": 349, "0245": 349, "575": 349, "3347": 349, "0179": 349, "9718": 349, "1629": 349, "804": 349, "577": 349, "4164": 349, "0070": 349, "4335": 349, "578": 349, "579": 349, "3049": 349, "9063": 349, "580": 349, "8785": 349, "3295": 349, "5184": 349, "0546": 349, "582": 349, "4589": 349, "583": 349, "4697": 349, "2476": 349, "584": 349, "2397": 349, "585": 349, "4953": 349, "1775": 349, "586": 349, "2258": 349, "0110": 349, "7671": 349, "587": 349, "3981": 349, "8590": 349, "589": 349, "9820": 349, "4221": 349, "590": 349, "1293": 349, "0116": 349, "868": 349, "1675": 349, "5931": 349, "592": 349, "2910": 349, "5219": 349, "2124": 349, "1730": 349, "737": 349, "594": 349, "2914": 349, "0206": 349, "595": 349, "0172": 349, "3982": 349, "0945": 349, "0121": 349, "4789": 349, "597": 349, "3805": 349, "598": 349, "3310": 349, "5065": 349, "6028": 349, "6316": 349, "6724": 349, "6523": 349, "601": 349, "0136": 349, "4298": 349, "602": 349, "3524": 349, "2629": 349, "603": 349, "2635": 349, "7839": 349, "604": 349, "6041": 349, "8027": 349, "4170": 349, "4675": 349, "606": 349, "3153": 349, "9316": 349, "607": 349, "0649": 349, "9722": 349, "7989": 349, "0329": 349, "609": 349, "1976": 349, "6852": 349, "610": 349, "4793": 349, "1255": 349, "611": 349, "4581": 349, "0394": 349, "2047": 349, "0326": 349, "613": 349, "8967": 349, "8619": 349, "614": 349, "5906": 349, "6491": 349, "615": 349, "6634": 349, "4394": 349, "616": 349, "0624": 349, "0061": 349, "5676": 349, "3259": 349, "0131": 349, "7733": 349, "618": 349, "7515": 349, "0189": 349, "5575": 349, "619": 349, "9313": 349, "6286": 349, "620": 349, "4325": 349, "7832": 349, "621": 349, "1134": 349, "622": 349, "4572": 349, "0500": 349, "5838": 349, "623": 349, "3818": 349, "8623": 349, "1253": 349, "6622": 349, "subject": 349, "saw": [349, 351], "explain": 350, "semat": 350, "r3mtransform": 350, "env_transform": [350, 354], "s3": 350, "amazonaw": 350, "r3m_50": 350, "374m": 350, "9m": 350, "8mb": 350, "5mb": 350, "5m": 350, "1mb": 350, "3mb": 350, "2m": 350, "6m": 350, "7mb": 350, "4m": 350, "9mb": 350, "6mb": 350, "115m": 350, "130m": 350, "138m": 350, "148m": 350, "162m": 350, "169m": 350, "179m": 350, "185m": 350, "195m": 350, "0mb": 350, "201m": 350, "212m": 350, "218m": 350, "4mb": 350, "229m": 350, "246m": 350, "262m": 350, "268m": 350, "277m": 350, "284m": 350, "295m": 350, "311m": 350, "326m": 350, "2mb": 350, "333m": 350, "344m": 350, "359m": 350, "365m": 350, "373m": 350, "wiser": 350, "conclud": 350, "_storag": [350, 351], "supervis": [351, 354], "pull": 351, "batteri": 351, "dataliststorag": 351, "datalazytensorstorag": 351, "tensordidct": 351, "datalazymemmapstorag": 351, "buffer_list": 351, "lowest": 351, "medium": 351, "buffer_lazytensor": 351, "buffer_lazymemmap": 351, "tempdir": 351, "tmp3pb4q4ec": 351, "fullest": 351, "convini": 351, "mydata": 351, "bri": 351, "background": 351, "question": [351, 353], "_i": 351, "artifici": 351, "0893e": 351, "hamper": 351, "she": 351, "augment": 351, "pars": 351, "proport": 351, "hist": 351, "barcontain": 351, "artist": 351, "reappear": 351, "unfold": 351, "problemat": 351, "window": 351, "4th": 351, "1204": 351, "demo": 353, "icml": 353, "vmoen": 353, "fb": 353, "invest": 353, "platform": 353, "media": 353, "predominantli": 353, "tensordict1": 353, "tensordict2": 353, "tensordict_sampl": 353, "_sampler": 353, "_sum_tre": 353, "modulenotfounderror": 353, "06984967738389969": 353, "28791671991348267": 353, "noopresetenv": [353, 354], "backbone_modul": 353, "params_expand": 353, "tensordict_exp": 353, "base_modul": 353, "0137": 353, "1524": 353, "0641": 353, "viewbackward0": 353, "asstridedbackward0": 353, "8728": 353, "1334": 353, "3494": 353, "6887": 353, "6402": 353, "_safetanhbackward": 353, "1132": 353, "1762": 353, "3430": 353, "2668": 353, "2918": 353, "6239": 353, "roughli": 353, "tensordicts_prealloc": 353, "tensordicts_stack": 353, "tensordict_rollout": [353, 354], "traceback": 353, "743": 353, "typeerror": 353, "got": 353, "disclaim": 353, "concatmodul": 353, "loss_td": 353, "year": 353, "roadmap": 353, "compris": 353, "contributor": 353, "curiou": 353, "nascent": 353, "unsupervis": 354, "rom": 354, "licens": 354, "pygam": 354, "unifi": 354, "_build_env": 354, "amidar": 354, "assault": 354, "1945": 354, "deserv": 354, "__episode__": 354, "__trajectory__": 354, "void": 354, "reproduct": 354, "tensordict_tprim": 354, "imshow": 354, "axesimag": 354, "0x7f98082302e0": 354, "wrapper1": 354, "wrapper2": 354, "obviou": 354, "truth": 354, "env0": 354, "env_transformed_bi": 354, "stanc": 354, "transformeddistribut": 354, "base_dist": 354, "concat": 354, "mofidi": 354, "transformedenviron": 354, "moderet": 354, "computation": 354, "legitim": 354, "incom": 354, "amongst": 354, "has_cuda": 354, "wor": 354, "convention": 354, "markovian": 354, "3288080526": 354, "constain": 354, "bar_": 354, "get_someth": 354, "bar_e53af5c8": 354, "c5f7": 354, "aargh": 354, "foo_list": 354, "batched_env": 354, "_dispatch_caller_parallel": 354, "0x7f97e9dbfc10": 354, "bar_eaff9b58": 354, "843f": 354, "bar_eaf6b66": 354, "b735": 354, "bar_eafc08d0": 354, "a5d0": 354, "parallen": 354, "particularili": 354, "evolv": 354, "steadi": 354, "approx": 354, "5080": 354, "6527": 354, "1917": 354, "2562": 354, "9663": 354, "_extra_st": 354, "observation_ssq": 354, "observation_sum": 354, "0793": 354, "0954": 354, "1449": 354, "1733": 354, "dispach": 354, "absor": 354}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [60, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "get"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "get"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "clear_device_"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "clear_device_"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"], [35, 1, 1, "", "set_sampler"], [35, 1, 1, "", "set_storage"], [35, 1, 1, "", "set_writer"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"], [38, 1, 1, "", "set_sampler"], [38, 1, 1, "", "set_storage"], [38, 1, 1, "", "set_writer"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"], [42, 1, 1, "", "set_sampler"], [42, 1, 1, "", "set_storage"], [42, 1, 1, "", "set_writer"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "clear_device_"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "clear_device_"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "AtariDQNExperienceReplay"], [53, 0, 1, "", "D4RLExperienceReplay"], [54, 0, 1, "", "GenDGRLExperienceReplay"], [55, 0, 1, "", "MinariExperienceReplay"], [56, 0, 1, "", "OpenMLExperienceReplay"], [57, 0, 1, "", "OpenXExperienceReplay"], [58, 0, 1, "", "RobosetExperienceReplay"], [59, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "sample"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"]], "torchrl.data.replay_buffers": [[61, 0, 1, "", "ImmutableDatasetWriter"], [62, 0, 1, "", "LazyMemmapStorage"], [63, 0, 1, "", "LazyTensorStorage"], [64, 0, 1, "", "ListStorage"], [65, 0, 1, "", "PrioritizedSampler"], [66, 0, 1, "", "PrioritizedSliceSampler"], [67, 0, 1, "", "RandomSampler"], [68, 0, 1, "", "ReplayBufferEnsemble"], [69, 0, 1, "", "RoundRobinWriter"], [70, 0, 1, "", "Sampler"], [71, 0, 1, "", "SamplerEnsemble"], [72, 0, 1, "", "SamplerWithoutReplacement"], [73, 0, 1, "", "SliceSampler"], [74, 0, 1, "", "SliceSamplerWithoutReplacement"], [75, 0, 1, "", "Storage"], [76, 0, 1, "", "StorageEnsemble"], [77, 0, 1, "", "TensorDictMaxValueWriter"], [78, 0, 1, "", "TensorDictRoundRobinWriter"], [79, 0, 1, "", "TensorStorage"], [80, 0, 1, "", "Writer"], [81, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[61, 1, 1, "", "add"], [61, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[66, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "sample"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[69, 1, 1, "", "add"], [69, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[79, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.envs": [[82, 2, 1, "", "BraxEnv"], [83, 2, 1, "", "BraxWrapper"], [84, 2, 1, "", "DMControlEnv"], [85, 2, 1, "", "DMControlWrapper"], [86, 0, 1, "", "EnvBase"], [87, 0, 1, "", "EnvCreator"], [88, 0, 1, "", "EnvMetaData"], [89, 2, 1, "", "GymEnv"], [90, 0, 1, "", "GymLikeEnv"], [91, 2, 1, "", "GymWrapper"], [92, 2, 1, "", "HabitatEnv"], [93, 2, 1, "", "IsaacGymEnv"], [94, 2, 1, "", "IsaacGymWrapper"], [95, 2, 1, "", "JumanjiEnv"], [96, 2, 1, "", "JumanjiWrapper"], [97, 2, 1, "", "MOGymEnv"], [98, 2, 1, "", "MOGymWrapper"], [99, 2, 1, "", "MarlGroupMapType"], [100, 2, 1, "", "ModelBasedEnvBase"], [101, 2, 1, "", "MultiThreadedEnv"], [102, 2, 1, "", "MultiThreadedEnvWrapper"], [103, 2, 1, "", "OpenMLEnv"], [104, 0, 1, "", "ParallelEnv"], [105, 2, 1, "", "PettingZooEnv"], [106, 2, 1, "", "PettingZooWrapper"], [107, 2, 1, "", "RoboHiveEnv"], [108, 2, 1, "", "SMACv2Env"], [109, 2, 1, "", "SMACv2Wrapper"], [110, 0, 1, "", "SerialEnv"], [111, 2, 1, "", "VmasEnv"], [112, 2, 1, "", "VmasWrapper"], [113, 2, 1, "", "check_marl_grouping"], [114, 2, 1, "", "gym_backend"], [100, 1, 1, "", "rand_step"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "rollout"], [116, 2, 1, "", "set_gym_backend"], [100, 1, 1, "", "set_seed"], [100, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[86, 3, 1, "", "action_key"], [86, 3, 1, "", "action_keys"], [86, 3, 1, "", "action_spec"], [86, 1, 1, "", "add_module"], [86, 1, 1, "", "apply"], [86, 3, 1, "", "batch_locked"], [86, 1, 1, "", "bfloat16"], [86, 1, 1, "", "buffers"], [86, 1, 1, "", "children"], [86, 1, 1, "", "compile"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 3, 1, "", "done_key"], [86, 3, 1, "", "done_keys"], [86, 3, 1, "", "done_keys_groups"], [86, 3, 1, "", "done_spec"], [86, 1, 1, "", "double"], [86, 1, 1, "", "empty_cache"], [86, 1, 1, "", "eval"], [86, 1, 1, "", "extra_repr"], [86, 1, 1, "", "fake_tensordict"], [86, 1, 1, "", "float"], [86, 1, 1, "", "forward"], [86, 3, 1, "", "full_action_spec"], [86, 3, 1, "", "full_done_spec"], [86, 3, 1, "", "full_reward_spec"], [86, 3, 1, "", "full_state_spec"], [86, 1, 1, "", "get_buffer"], [86, 1, 1, "", "get_extra_state"], [86, 1, 1, "", "get_parameter"], [86, 1, 1, "", "get_submodule"], [86, 1, 1, "", "half"], [86, 3, 1, "", "input_spec"], [86, 1, 1, "", "ipu"], [86, 1, 1, "", "load_state_dict"], [86, 1, 1, "", "modules"], [86, 1, 1, "", "named_buffers"], [86, 1, 1, "", "named_children"], [86, 1, 1, "", "named_modules"], [86, 1, 1, "", "named_parameters"], [86, 3, 1, "", "observation_spec"], [86, 3, 1, "", "output_spec"], [86, 1, 1, "", "parameters"], [86, 1, 1, "", "rand_action"], [86, 1, 1, "id0", "rand_step"], [86, 1, 1, "", "register_backward_hook"], [86, 1, 1, "", "register_buffer"], [86, 1, 1, "", "register_forward_hook"], [86, 1, 1, "", "register_forward_pre_hook"], [86, 1, 1, "", "register_full_backward_hook"], [86, 1, 1, "", "register_full_backward_pre_hook"], [86, 1, 1, "", "register_gym"], [86, 1, 1, "", "register_load_state_dict_post_hook"], [86, 1, 1, "", "register_module"], [86, 1, 1, "", "register_parameter"], [86, 1, 1, "", "register_state_dict_pre_hook"], [86, 1, 1, "", "requires_grad_"], [86, 1, 1, "id1", "reset"], [86, 3, 1, "", "reset_keys"], [86, 3, 1, "", "reward_key"], [86, 3, 1, "", "reward_keys"], [86, 3, 1, "", "reward_spec"], [86, 1, 1, "id2", "rollout"], [86, 1, 1, "", "set_extra_state"], [86, 1, 1, "id3", "set_seed"], [86, 1, 1, "", "share_memory"], [86, 3, 1, "", "specs"], [86, 1, 1, "", "state_dict"], [86, 3, 1, "", "state_spec"], [86, 1, 1, "id4", "step"], [86, 1, 1, "", "step_and_maybe_reset"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_empty"], [86, 1, 1, "", "train"], [86, 1, 1, "", "type"], [86, 1, 1, "", "xpu"], [86, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[90, 3, 1, "", "action_key"], [90, 3, 1, "", "action_keys"], [90, 3, 1, "", "action_spec"], [90, 1, 1, "", "add_module"], [90, 1, 1, "", "apply"], [90, 1, 1, "", "auto_register_info_dict"], [90, 3, 1, "", "batch_locked"], [90, 1, 1, "", "bfloat16"], [90, 1, 1, "", "buffers"], [90, 1, 1, "", "children"], [90, 1, 1, "", "close"], [90, 1, 1, "", "compile"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 3, 1, "", "done_key"], [90, 3, 1, "", "done_keys"], [90, 3, 1, "", "done_keys_groups"], [90, 3, 1, "", "done_spec"], [90, 1, 1, "", "double"], [90, 1, 1, "", "empty_cache"], [90, 1, 1, "", "eval"], [90, 1, 1, "", "extra_repr"], [90, 1, 1, "", "fake_tensordict"], [90, 1, 1, "", "float"], [90, 1, 1, "", "forward"], [90, 3, 1, "", "full_action_spec"], [90, 3, 1, "", "full_done_spec"], [90, 3, 1, "", "full_reward_spec"], [90, 3, 1, "", "full_state_spec"], [90, 1, 1, "", "get_buffer"], [90, 1, 1, "", "get_extra_state"], [90, 1, 1, "", "get_parameter"], [90, 1, 1, "", "get_submodule"], [90, 1, 1, "", "half"], [90, 3, 1, "", "input_spec"], [90, 1, 1, "", "ipu"], [90, 1, 1, "", "load_state_dict"], [90, 1, 1, "", "modules"], [90, 1, 1, "", "named_buffers"], [90, 1, 1, "", "named_children"], [90, 1, 1, "", "named_modules"], [90, 1, 1, "", "named_parameters"], [90, 3, 1, "", "observation_spec"], [90, 3, 1, "", "output_spec"], [90, 1, 1, "", "parameters"], [90, 1, 1, "", "rand_action"], [90, 1, 1, "", "rand_step"], [90, 1, 1, "", "read_action"], [90, 1, 1, "", "read_done"], [90, 1, 1, "", "read_obs"], [90, 1, 1, "", "read_reward"], [90, 1, 1, "", "register_backward_hook"], [90, 1, 1, "", "register_buffer"], [90, 1, 1, "", "register_forward_hook"], [90, 1, 1, "", "register_forward_pre_hook"], [90, 1, 1, "", "register_full_backward_hook"], [90, 1, 1, "", "register_full_backward_pre_hook"], [90, 1, 1, "", "register_gym"], [90, 1, 1, "", "register_load_state_dict_post_hook"], [90, 1, 1, "", "register_module"], [90, 1, 1, "", "register_parameter"], [90, 1, 1, "", "register_state_dict_pre_hook"], [90, 1, 1, "", "requires_grad_"], [90, 1, 1, "", "reset"], [90, 3, 1, "", "reset_keys"], [90, 3, 1, "", "reward_key"], [90, 3, 1, "", "reward_keys"], [90, 3, 1, "", "reward_spec"], [90, 1, 1, "", "rollout"], [90, 1, 1, "", "set_extra_state"], [90, 1, 1, "", "set_info_dict_reader"], [90, 1, 1, "", "set_seed"], [90, 1, 1, "", "share_memory"], [90, 3, 1, "", "specs"], [90, 1, 1, "", "state_dict"], [90, 3, 1, "", "state_spec"], [90, 1, 1, "", "step"], [90, 1, 1, "", "step_and_maybe_reset"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_empty"], [90, 1, 1, "", "train"], [90, 1, 1, "", "type"], [90, 1, 1, "", "xpu"], [90, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[104, 3, 1, "", "action_key"], [104, 3, 1, "", "action_keys"], [104, 3, 1, "", "action_spec"], [104, 1, 1, "", "add_module"], [104, 1, 1, "", "apply"], [104, 3, 1, "", "batch_locked"], [104, 1, 1, "", "bfloat16"], [104, 1, 1, "", "buffers"], [104, 1, 1, "", "children"], [104, 1, 1, "", "compile"], [104, 1, 1, "", "cpu"], [104, 1, 1, "", "cuda"], [104, 3, 1, "", "done_key"], [104, 3, 1, "", "done_keys"], [104, 3, 1, "", "done_keys_groups"], [104, 3, 1, "", "done_spec"], [104, 1, 1, "", "double"], [104, 1, 1, "", "empty_cache"], [104, 1, 1, "", "eval"], [104, 1, 1, "", "extra_repr"], [104, 1, 1, "", "fake_tensordict"], [104, 1, 1, "", "float"], [104, 1, 1, "", "forward"], [104, 3, 1, "", "full_action_spec"], [104, 3, 1, "", "full_done_spec"], [104, 3, 1, "", "full_reward_spec"], [104, 3, 1, "", "full_state_spec"], [104, 1, 1, "", "get_buffer"], [104, 1, 1, "", "get_extra_state"], [104, 1, 1, "", "get_parameter"], [104, 1, 1, "", "get_submodule"], [104, 1, 1, "", "half"], [104, 3, 1, "", "input_spec"], [104, 1, 1, "", "ipu"], [104, 1, 1, "", "load_state_dict"], [104, 1, 1, "", "modules"], [104, 1, 1, "", "named_buffers"], [104, 1, 1, "", "named_children"], [104, 1, 1, "", "named_modules"], [104, 1, 1, "", "named_parameters"], [104, 3, 1, "", "observation_spec"], [104, 3, 1, "", "output_spec"], [104, 1, 1, "", "parameters"], [104, 1, 1, "", "rand_action"], [104, 1, 1, "", "rand_step"], [104, 1, 1, "", "register_backward_hook"], [104, 1, 1, "", "register_buffer"], [104, 1, 1, "", "register_forward_hook"], [104, 1, 1, "", "register_forward_pre_hook"], [104, 1, 1, "", "register_full_backward_hook"], [104, 1, 1, "", "register_full_backward_pre_hook"], [104, 1, 1, "", "register_gym"], [104, 1, 1, "", "register_load_state_dict_post_hook"], [104, 1, 1, "", "register_module"], [104, 1, 1, "", "register_parameter"], [104, 1, 1, "", "register_state_dict_pre_hook"], [104, 1, 1, "", "requires_grad_"], [104, 1, 1, "", "reset"], [104, 3, 1, "", "reset_keys"], [104, 3, 1, "", "reward_key"], [104, 3, 1, "", "reward_keys"], [104, 3, 1, "", "reward_spec"], [104, 1, 1, "", "rollout"], [104, 1, 1, "", "set_extra_state"], [104, 1, 1, "", "set_seed"], [104, 1, 1, "", "share_memory"], [104, 3, 1, "", "specs"], [104, 1, 1, "", "state_dict"], [104, 3, 1, "", "state_spec"], [104, 1, 1, "", "step"], [104, 1, 1, "", "step_and_maybe_reset"], [104, 1, 1, "", "to"], [104, 1, 1, "", "to_empty"], [104, 1, 1, "", "train"], [104, 1, 1, "", "type"], [104, 1, 1, "", "update_kwargs"], [104, 1, 1, "", "xpu"], [104, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[110, 3, 1, "", "action_key"], [110, 3, 1, "", "action_keys"], [110, 3, 1, "", "action_spec"], [110, 1, 1, "", "add_module"], [110, 1, 1, "", "apply"], [110, 3, 1, "", "batch_locked"], [110, 1, 1, "", "bfloat16"], [110, 1, 1, "", "buffers"], [110, 1, 1, "", "children"], [110, 1, 1, "", "compile"], [110, 1, 1, "", "cpu"], [110, 1, 1, "", "cuda"], [110, 3, 1, "", "done_key"], [110, 3, 1, "", "done_keys"], [110, 3, 1, "", "done_keys_groups"], [110, 3, 1, "", "done_spec"], [110, 1, 1, "", "double"], [110, 1, 1, "", "empty_cache"], [110, 1, 1, "", "eval"], [110, 1, 1, "", "extra_repr"], [110, 1, 1, "", "fake_tensordict"], [110, 1, 1, "", "float"], [110, 1, 1, "", "forward"], [110, 3, 1, "", "full_action_spec"], [110, 3, 1, "", "full_done_spec"], [110, 3, 1, "", "full_reward_spec"], [110, 3, 1, "", "full_state_spec"], [110, 1, 1, "", "get_buffer"], [110, 1, 1, "", "get_extra_state"], [110, 1, 1, "", "get_parameter"], [110, 1, 1, "", "get_submodule"], [110, 1, 1, "", "half"], [110, 3, 1, "", "input_spec"], [110, 1, 1, "", "ipu"], [110, 1, 1, "", "load_state_dict"], [110, 1, 1, "", "modules"], [110, 1, 1, "", "named_buffers"], [110, 1, 1, "", "named_children"], [110, 1, 1, "", "named_modules"], [110, 1, 1, "", "named_parameters"], [110, 3, 1, "", "observation_spec"], [110, 3, 1, "", "output_spec"], [110, 1, 1, "", "parameters"], [110, 1, 1, "", "rand_action"], [110, 1, 1, "", "rand_step"], [110, 1, 1, "", "register_backward_hook"], [110, 1, 1, "", "register_buffer"], [110, 1, 1, "", "register_forward_hook"], [110, 1, 1, "", "register_forward_pre_hook"], [110, 1, 1, "", "register_full_backward_hook"], [110, 1, 1, "", "register_full_backward_pre_hook"], [110, 1, 1, "", "register_gym"], [110, 1, 1, "", "register_load_state_dict_post_hook"], [110, 1, 1, "", "register_module"], [110, 1, 1, "", "register_parameter"], [110, 1, 1, "", "register_state_dict_pre_hook"], [110, 1, 1, "", "requires_grad_"], [110, 1, 1, "", "reset"], [110, 3, 1, "", "reset_keys"], [110, 3, 1, "", "reward_key"], [110, 3, 1, "", "reward_keys"], [110, 3, 1, "", "reward_spec"], [110, 1, 1, "", "rollout"], [110, 1, 1, "", "set_extra_state"], [110, 1, 1, "", "set_seed"], [110, 1, 1, "", "share_memory"], [110, 3, 1, "", "specs"], [110, 1, 1, "", "state_dict"], [110, 3, 1, "", "state_spec"], [110, 1, 1, "", "step"], [110, 1, 1, "", "step_and_maybe_reset"], [110, 1, 1, "", "to"], [110, 1, 1, "", "to_empty"], [110, 1, 1, "", "train"], [110, 1, 1, "", "type"], [110, 1, 1, "", "update_kwargs"], [110, 1, 1, "", "xpu"], [110, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[115, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[117, 0, 1, "", "ActionMask"], [118, 0, 1, "", "BinarizeReward"], [119, 0, 1, "", "BurnInTransform"], [120, 0, 1, "", "CatFrames"], [121, 0, 1, "", "CatTensors"], [122, 0, 1, "", "CenterCrop"], [123, 0, 1, "", "ClipTransform"], [124, 0, 1, "", "Compose"], [125, 0, 1, "", "DTypeCastTransform"], [126, 0, 1, "", "DeviceCastTransform"], [127, 0, 1, "", "DiscreteActionProjection"], [128, 0, 1, "", "DoubleToFloat"], [129, 0, 1, "", "EndOfLifeTransform"], [130, 0, 1, "", "ExcludeTransform"], [131, 0, 1, "", "FiniteTensorDictCheck"], [132, 0, 1, "", "FlattenObservation"], [133, 0, 1, "", "FrameSkipTransform"], [134, 0, 1, "", "GrayScale"], [135, 0, 1, "", "InitTracker"], [136, 0, 1, "", "KLRewardTransform"], [137, 0, 1, "", "NoopResetEnv"], [138, 0, 1, "", "ObservationNorm"], [139, 0, 1, "", "ObservationTransform"], [140, 0, 1, "", "PermuteTransform"], [141, 0, 1, "", "PinMemoryTransform"], [142, 0, 1, "", "R3MTransform"], [143, 0, 1, "", "RandomCropTensorDict"], [144, 0, 1, "", "RemoveEmptySpecs"], [145, 0, 1, "", "RenameTransform"], [146, 0, 1, "", "Resize"], [147, 0, 1, "", "Reward2GoTransform"], [148, 0, 1, "", "RewardClipping"], [149, 0, 1, "", "RewardScaling"], [150, 0, 1, "", "RewardSum"], [151, 0, 1, "", "SelectTransform"], [152, 0, 1, "", "SignTransform"], [153, 0, 1, "", "SqueezeTransform"], [154, 0, 1, "", "StepCounter"], [155, 0, 1, "", "TargetReturn"], [156, 0, 1, "", "TensorDictPrimer"], [157, 0, 1, "", "TimeMaxPool"], [158, 0, 1, "", "ToTensorImage"], [159, 0, 1, "", "Transform"], [160, 0, 1, "", "TransformedEnv"], [161, 0, 1, "", "UnsqueezeTransform"], [162, 0, 1, "", "VC1Transform"], [163, 0, 1, "", "VIPRewardTransform"], [164, 0, 1, "", "VIPTransform"], [165, 0, 1, "", "VecGymEnvTransform"], [166, 0, 1, "", "VecNorm"], [167, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[118, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[119, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[123, 1, 1, "", "transform_observation_spec"], [123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "to"], [124, 1, 1, "", "transform_env_device"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"], [124, 1, 1, "", "transform_output_spec"], [124, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"], [125, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "transform_done_spec"], [126, 1, 1, "", "transform_env_device"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_observation_spec"], [126, 1, 1, "", "transform_output_spec"], [126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[127, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "register_keys"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[131, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[133, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[138, 1, 1, "", "init_stats"], [138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[141, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[142, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[143, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_input_spec"], [144, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[147, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[152, 1, 1, "", "transform_observation_spec"], [152, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_observation_spec"], [154, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "to"], [156, 1, 1, "", "transform_input_spec"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[159, 3, 1, "", "container"], [159, 1, 1, "", "forward"], [159, 3, 1, "", "parent"], [159, 1, 1, "", "to"], [159, 1, 1, "", "transform_done_spec"], [159, 1, 1, "", "transform_env_device"], [159, 1, 1, "", "transform_input_spec"], [159, 1, 1, "", "transform_observation_spec"], [159, 1, 1, "", "transform_output_spec"], [159, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[160, 3, 1, "", "batch_locked"], [160, 1, 1, "", "empty_cache"], [160, 1, 1, "", "eval"], [160, 3, 1, "", "input_spec"], [160, 1, 1, "", "load_state_dict"], [160, 3, 1, "", "output_spec"], [160, 1, 1, "", "set_missing_tolerance"], [160, 1, 1, "", "set_seed"], [160, 1, 1, "", "state_dict"], [160, 1, 1, "", "to"], [160, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[161, 1, 1, "", "transform_input_spec"], [161, 1, 1, "", "transform_observation_spec"], [161, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "make_noload_model"], [162, 1, 1, "", "to"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[164, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[166, 1, 1, "", "build_td_for_shared_vecnorm"], [166, 1, 1, "", "forward"], [166, 1, 1, "", "get_extra_state"], [166, 1, 1, "", "set_extra_state"], [166, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[168, 2, 1, "", "check_env_specs"], [169, 2, 1, "", "exploration_mode"], [170, 2, 1, "", "exploration_type"], [171, 2, 1, "", "get_available_libraries"], [172, 2, 1, "", "make_composite_from_td"], [173, 2, 1, "", "set_exploration_mode"], [174, 2, 1, "", "set_exploration_type"], [175, 2, 1, "", "step_mdp"], [176, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[177, 0, 1, "", "CEMPlanner"], [178, 0, 1, "", "Conv3dNet"], [179, 0, 1, "", "ConvNet"], [180, 0, 1, "", "DTActor"], [181, 0, 1, "", "DdpgCnnActor"], [182, 0, 1, "", "DdpgCnnQNet"], [183, 0, 1, "", "DdpgMlpActor"], [184, 0, 1, "", "DdpgMlpQNet"], [185, 0, 1, "", "DecisionTransformer"], [186, 0, 1, "", "Delta"], [187, 0, 1, "", "DistributionalDQNnet"], [188, 0, 1, "", "DistributionalQValueHook"], [189, 0, 1, "", "DreamerActor"], [190, 0, 1, "", "DuelingCnnDQNet"], [191, 0, 1, "", "GRU"], [192, 0, 1, "", "GRUCell"], [193, 0, 1, "", "GRUModule"], [194, 0, 1, "", "IndependentNormal"], [195, 0, 1, "", "LSTM"], [196, 0, 1, "", "LSTMCell"], [197, 0, 1, "", "LSTMModule"], [198, 0, 1, "", "LSTMNet"], [199, 0, 1, "", "MLP"], [200, 0, 1, "", "MPCPlannerBase"], [201, 0, 1, "", "MPPIPlanner"], [202, 0, 1, "", "MaskedCategorical"], [203, 0, 1, "", "MaskedOneHotCategorical"], [204, 0, 1, "", "MultiAgentConvNet"], [205, 0, 1, "", "MultiAgentMLP"], [206, 0, 1, "", "NoisyLazyLinear"], [207, 0, 1, "", "NoisyLinear"], [208, 0, 1, "", "NormalParamWrapper"], [209, 0, 1, "", "ObsDecoder"], [210, 0, 1, "", "ObsEncoder"], [211, 0, 1, "", "OneHotCategorical"], [212, 0, 1, "", "OnlineDTActor"], [213, 0, 1, "", "QMixer"], [214, 0, 1, "", "QValueHook"], [215, 0, 1, "", "RSSMPosterior"], [216, 0, 1, "", "RSSMPrior"], [217, 0, 1, "", "Squeeze2dLayer"], [218, 0, 1, "", "SqueezeLayer"], [219, 0, 1, "", "TanhDelta"], [220, 0, 1, "", "TanhNormal"], [221, 0, 1, "", "TruncatedNormal"], [222, 0, 1, "", "VDNMixer"], [223, 0, 1, "", "VmapModule"], [224, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[177, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[178, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[179, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[180, 1, 1, "", "default_config"], [180, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[181, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[182, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[183, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[184, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[185, 0, 1, "", "DTConfig"], [185, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[186, 1, 1, "", "log_prob"], [186, 3, 1, "", "mean"], [186, 3, 1, "", "mode"], [186, 1, 1, "", "rsample"], [186, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[187, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[189, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[190, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[191, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[192, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[193, 1, 1, "", "forward"], [193, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[194, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[195, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[196, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[197, 1, 1, "", "forward"], [197, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[198, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[199, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[201, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[202, 1, 1, "", "log_prob"], [202, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[203, 1, 1, "", "log_prob"], [203, 1, 1, "", "rsample"], [203, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[204, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[205, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[206, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[208, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[209, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[210, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[211, 1, 1, "", "log_prob"], [211, 3, 1, "", "mode"], [211, 1, 1, "", "rsample"], [211, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[212, 1, 1, "", "default_config"], [212, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[213, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[215, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[216, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[218, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[219, 3, 1, "", "mean"], [219, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[220, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[221, 1, 1, "", "log_prob"], [221, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[222, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[223, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[225, 0, 1, "", "Actor"], [226, 0, 1, "", "ActorCriticOperator"], [227, 0, 1, "", "ActorCriticWrapper"], [228, 0, 1, "", "ActorValueOperator"], [229, 0, 1, "", "AdditiveGaussianWrapper"], [230, 0, 1, "", "DecisionTransformerInferenceWrapper"], [231, 0, 1, "", "DistributionalQValueActor"], [232, 0, 1, "", "DistributionalQValueModule"], [233, 0, 1, "", "EGreedyModule"], [234, 0, 1, "", "EGreedyWrapper"], [235, 0, 1, "", "LMHeadActorValueOperator"], [236, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [237, 0, 1, "", "ProbabilisticActor"], [238, 0, 1, "", "QValueActor"], [239, 0, 1, "", "QValueModule"], [240, 0, 1, "", "SafeModule"], [241, 0, 1, "", "SafeProbabilisticModule"], [242, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [243, 0, 1, "", "SafeSequential"], [244, 0, 1, "", "TanhModule"], [245, 0, 1, "", "ValueOperator"], [246, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[226, 1, 1, "", "get_critic_operator"], [226, 1, 1, "", "get_policy_head"], [226, 1, 1, "", "get_value_head"], [226, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[227, 1, 1, "", "get_policy_head"], [227, 1, 1, "", "get_policy_operator"], [227, 1, 1, "", "get_value_head"], [227, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[228, 1, 1, "", "get_policy_head"], [228, 1, 1, "", "get_policy_operator"], [228, 1, 1, "", "get_value_head"], [228, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "mask_context"], [230, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[232, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[239, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[240, 1, 1, "", "random"], [240, 1, 1, "", "random_sample"], [240, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[241, 1, 1, "", "random"], [241, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[244, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[246, 1, 1, "", "get_reward_operator"], [246, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[247, 0, 1, "", "biased_softplus"], [248, 0, 1, "", "inv_softplus"], [249, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[247, 1, 1, "", "forward"]], "torchrl.objectives": [[250, 0, 1, "", "A2CLoss"], [251, 0, 1, "", "CQLLoss"], [252, 0, 1, "", "ClipPPOLoss"], [253, 0, 1, "", "DDPGLoss"], [254, 0, 1, "", "DQNLoss"], [255, 0, 1, "", "DTLoss"], [256, 0, 1, "", "DiscreteCQLLoss"], [257, 0, 1, "", "DiscreteIQLLoss"], [258, 0, 1, "", "DiscreteSACLoss"], [259, 0, 1, "", "DistributionalDQNLoss"], [260, 0, 1, "", "DreamerActorLoss"], [261, 0, 1, "", "DreamerModelLoss"], [262, 0, 1, "", "DreamerValueLoss"], [263, 0, 1, "", "HardUpdate"], [264, 0, 1, "", "IQLLoss"], [265, 0, 1, "", "KLPENPPOLoss"], [266, 0, 1, "", "LossModule"], [267, 0, 1, "", "OnlineDTLoss"], [268, 0, 1, "", "PPOLoss"], [269, 0, 1, "", "REDQLoss"], [270, 0, 1, "", "ReinforceLoss"], [271, 0, 1, "", "SACLoss"], [272, 0, 1, "", "SoftUpdate"], [273, 0, 1, "", "TD3Loss"], [274, 0, 1, "", "ValueEstimators"], [275, 0, 1, "", "default_value_kwargs"], [276, 0, 1, "", "distance_loss"], [277, 0, 1, "", "hold_out_net"], [278, 0, 1, "", "hold_out_params"], [280, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[252, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[255, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[261, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[262, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "loss_value_diff"], [264, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[265, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[266, 1, 1, "", "convert_to_functional"], [266, 1, 1, "", "forward"], [266, 1, 1, "", "make_value_estimator"], [266, 1, 1, "", "named_parameters"], [266, 1, 1, "", "parameters"], [266, 1, 1, "", "set_keys"], [266, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[267, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "load_state_dict"], [271, 1, 1, "", "make_value_estimator"], [271, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[279, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[281, 0, 1, "", "GAE"], [282, 0, 1, "", "TD0Estimator"], [283, 0, 1, "", "TD1Estimator"], [284, 0, 1, "", "TDLambdaEstimator"], [285, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "set_keys"], [285, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[286, 0, 1, "", "generalized_advantage_estimate"], [287, 0, 1, "", "reward2go"], [288, 0, 1, "", "td0_advantage_estimate"], [289, 0, 1, "", "td0_return_estimate"], [290, 0, 1, "", "td1_advantage_estimate"], [291, 0, 1, "", "td1_return_estimate"], [292, 0, 1, "", "td_lambda_advantage_estimate"], [293, 0, 1, "", "td_lambda_return_estimate"], [294, 0, 1, "", "vec_generalized_advantage_estimate"], [295, 0, 1, "", "vec_td1_advantage_estimate"], [296, 0, 1, "", "vec_td1_return_estimate"], [297, 0, 1, "", "vec_td_lambda_advantage_estimate"], [298, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[299, 2, 1, "", "TensorDictRecorder"], [300, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[301, 2, 1, "", "Logger"], [303, 2, 1, "", "generate_exp_name"], [304, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[302, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[305, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[306, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[307, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[308, 0, 1, "", "BatchSubSampler"], [309, 0, 1, "", "ClearCudaCache"], [310, 0, 1, "", "CountFramesLog"], [311, 0, 1, "", "LogReward"], [312, 0, 1, "", "OptimizerHook"], [313, 0, 1, "", "Recorder"], [314, 0, 1, "", "ReplayBufferTrainer"], [315, 0, 1, "", "RewardNormalizer"], [316, 0, 1, "", "SelectKeys"], [317, 0, 1, "", "Trainer"], [318, 0, 1, "", "TrainerHookBase"], [319, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[308, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[309, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[310, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[311, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[312, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[313, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[314, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[315, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[316, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[318, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[319, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[320, 2, 1, "", "correct_for_frame_skip"], [321, 2, 1, "", "get_stats_random_rollout"], [322, 2, 1, "", "make_collector_offpolicy"], [323, 2, 1, "", "make_collector_onpolicy"], [324, 2, 1, "", "make_dqn_loss"], [325, 2, 1, "", "make_redq_loss"], [326, 2, 1, "", "make_redq_model"], [327, 2, 1, "", "make_replay_buffer"], [328, 2, 1, "", "make_target_updater"], [329, 2, 1, "", "make_trainer"], [330, 2, 1, "", "parallel_env_constructor"], [331, 2, 1, "", "sync_async_collector"], [332, 2, 1, "", "sync_sync_collector"], [333, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 337, 338, 339, 340, 342, 343, 344, 348, 349, 353, 354], "instal": [0, 6, 7, 353], "tutori": [0, 344, 348], "basic": [0, 351], "intermedi": [0, 8], "advanc": 0, "refer": [0, 335], "knowledg": [0, 336], "base": [0, 2, 7, 336], "indic": 0, "tabl": 0, "collector": [1, 342, 343, 344, 345, 348, 353], "packag": [1, 2, 3, 337, 338, 339, 340], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 342, 343, 344, 348, 353], "distribut": [1, 337], "helper": [1, 3], "function": [1, 4, 338, 343, 344, 348, 353], "replai": [2, 342, 343, 344, 345, 348, 351, 353], "buffer": [2, 342, 343, 344, 345, 348, 351, 353], "compos": [2, 124], "support": 2, "type": 2, "choos": 2, "storag": [2, 75, 342, 351], "sampl": 2, "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 343], "trajectori": 2, "checkpoint": [2, 339], "episod": [2, 4], "format": 2, "ted": 2, "The": [2, 342], "rational": 2, "behind": 2, "structur": 2, "dimension": [2, 4], "tensordict": [2, 337, 351, 353], "special": [2, 353], "case": 2, "footnot": 2, "multi": [2, 3, 337, 338, 347, 348], "agent": [2, 3, 4, 337, 338, 348], "present": 2, "memori": 2, "polici": [2, 4, 342, 344, 345, 347, 348, 349], "rnn": 2, "transform": [2, 3, 159, 342, 344, 348, 349, 351, 353, 354], "step": [2, 342, 344, 348, 354], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 338, 344, 348], "learn": [2, 4, 344, 348], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 337, 338, 339], "env": [3, 349, 353, 354], "vector": [3, 353], "environ": [3, 4, 6, 7, 342, 343, 344, 345, 347, 348, 349, 353, 354], "clone": [3, 7], "mask": 3, "action": [3, 4, 345, 349], "record": [3, 313, 339, 342], "domain": [3, 337], "specif": [3, 337, 347], "librari": [3, 353], "thing": [4, 342, 349], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 353], "gener": [4, 337], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 342, 349], "algorithm": [4, 337], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 342, 343], "return": [4, 338], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 353], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 347], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 342, 343, 344], "standard": 4, "explor": [4, 337, 342, 343], "valu": [4, 337, 338, 342, 344, 345], "loss": [4, 342, 343, 344, 345, 348], "earli": 4, "train": [4, 8, 338, 342, 344, 345, 348, 349], "roughli": 4, "uniformli": 4, "random": [4, 348], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 343], "increas": 4, "an": [4, 344, 345, 349], "dynam": [4, 351], "can": 4, "low": 4, "forward": [4, 342], "model": [4, 337, 342, 343, 345, 350, 353], "also": 4, "us": [4, 6, 9, 345, 350, 351, 353], "offlin": 4, "observ": [4, 342], "space": 4, "effect": [4, 349], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 354], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 342], "render": [7, 348, 354], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 342], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 349], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "ataridqnexperiencereplai": 52, "d4rlexperiencereplai": 53, "gendgrlexperiencereplai": 54, "minariexperiencereplai": 55, "openmlexperiencereplai": 56, "openxexperiencereplai": 57, "robosetexperiencereplai": 58, "vd4rlexperiencereplai": 59, "get_dataload": 60, "immutabledatasetwrit": 61, "lazymemmapstorag": 62, "lazytensorstorag": 63, "liststorag": 64, "prioritizedsampl": 65, "prioritizedslicesampl": 66, "randomsampl": 67, "replaybufferensembl": 68, "roundrobinwrit": 69, "sampler": 70, "samplerensembl": 71, "samplerwithoutreplac": 72, "slicesampl": 73, "slicesamplerwithoutreplac": 74, "storageensembl": 76, "tensordictmaxvaluewrit": 77, "tensordictroundrobinwrit": 78, "tensorstorag": 79, "writer": 80, "writerensembl": 81, "braxenv": 82, "braxwrapp": 83, "dmcontrolenv": 84, "dmcontrolwrapp": 85, "envbas": [86, 349], "envcreat": 87, "envmetadata": 88, "gymenv": 89, "gymlikeenv": 90, "gymwrapp": 91, "habitatenv": 92, "isaacgymenv": 93, "isaacgymwrapp": 94, "jumanjienv": 95, "jumanjiwrapp": 96, "mogymenv": 97, "mogymwrapp": 98, "marlgroupmaptyp": 99, "modelbasedenvbas": 100, "multithreadedenv": 101, "multithreadedenvwrapp": 102, "openmlenv": 103, "parallelenv": 104, "pettingzooenv": 105, "pettingzoowrapp": 106, "robohiveenv": 107, "smacv2env": 108, "smacv2wrapp": 109, "serialenv": 110, "vmasenv": 111, "vmaswrapp": 112, "check_marl_group": 113, "gym_backend": 114, "dreamerenv": 115, "set_gym_backend": 116, "actionmask": 117, "binarizereward": 118, "burnintransform": 119, "catfram": [120, 351], "cattensor": 121, "centercrop": 122, "cliptransform": 123, "dtypecasttransform": 125, "devicecasttransform": 126, "discreteactionproject": 127, "doubletofloat": 128, "endoflifetransform": 129, "excludetransform": 130, "finitetensordictcheck": 131, "flattenobserv": 132, "frameskiptransform": 133, "grayscal": 134, "inittrack": 135, "klrewardtransform": 136, "noopresetenv": 137, "observationnorm": 138, "observationtransform": 139, "permutetransform": 140, "pinmemorytransform": 141, "r3mtransform": 142, "randomcroptensordict": 143, "removeemptyspec": 144, "renametransform": 145, "resiz": 146, "reward2gotransform": 147, "rewardclip": 148, "rewardsc": 149, "rewardsum": 150, "selecttransform": 151, "signtransform": 152, "squeezetransform": 153, "stepcount": 154, "targetreturn": 155, "tensordictprim": 156, "timemaxpool": 157, "totensorimag": 158, "transformedenv": 160, "unsqueezetransform": 161, "vc1transform": 162, "viprewardtransform": 163, "viptransform": 164, "vecgymenvtransform": 165, "vecnorm": [166, 354], "gsdenois": 167, "check_env_spec": 168, "exploration_mod": 169, "exploration_typ": 170, "get_available_librari": 171, "make_composite_from_td": 172, "set_exploration_mod": 173, "set_exploration_typ": 174, "step_mdp": 175, "terminated_or_trunc": 176, "cemplann": 177, "conv3dnet": 178, "convnet": 179, "dtactor": 180, "ddpgcnnactor": 181, "ddpgcnnqnet": 182, "ddpgmlpactor": 183, "ddpgmlpqnet": 184, "decisiontransform": 185, "delta": 186, "distributionaldqnnet": 187, "distributionalqvaluehook": 188, "dreameractor": 189, "duelingcnndqnet": 190, "gru": 191, "grucel": 192, "grumodul": 193, "independentnorm": 194, "lstm": [195, 345], "lstmcell": 196, "lstmmodul": 197, "lstmnet": 198, "mlp": [199, 345], "mpcplannerbas": 200, "mppiplann": 201, "maskedcategor": 202, "maskedonehotcategor": 203, "multiagentconvnet": 204, "multiagentmlp": 205, "noisylazylinear": 206, "noisylinear": 207, "normalparamwrapp": 208, "obsdecod": 209, "obsencod": 210, "onehotcategor": 211, "onlinedtactor": 212, "qmixer": [213, 338], "qvaluehook": 214, "rssmposterior": 215, "rssmprior": 216, "squeeze2dlay": 217, "squeezelay": 218, "tanhdelta": 219, "tanhnorm": 220, "truncatednorm": 221, "vdnmixer": 222, "vmapmodul": 223, "reset_nois": 224, "actor": [225, 337, 342], "actorcriticoper": 226, "actorcriticwrapp": 227, "actorvalueoper": 228, "additivegaussianwrapp": 229, "decisiontransformerinferencewrapp": 230, "distributionalqvalueactor": 231, "distributionalqvaluemodul": 232, "egreedymodul": 233, "egreedywrapp": 234, "lmheadactorvalueoper": 235, "ornsteinuhlenbeckprocesswrapp": 236, "probabilisticactor": 237, "qvalueactor": 238, "qvaluemodul": 239, "safemodul": [240, 337], "safeprobabilisticmodul": 241, "safeprobabilistictensordictsequenti": 242, "safesequenti": 243, "tanhmodul": 244, "valueoper": 245, "worldmodelwrapp": 246, "biased_softplu": 247, "inv_softplu": 248, "map": 249, "a2closs": 250, "cqlloss": 251, "clipppoloss": 252, "ddpgloss": 253, "dqnloss": 254, "dtloss": 255, "discretecqlloss": 256, "discreteiqlloss": 257, "discretesacloss": 258, "distributionaldqnloss": 259, "dreameractorloss": 260, "dreamermodelloss": 261, "dreamervalueloss": 262, "hardupd": 263, "iqlloss": 264, "klpenppoloss": 265, "lossmodul": [266, 342], "onlinedtloss": 267, "ppoloss": 268, "redqloss": 269, "reinforceloss": 270, "sacloss": 271, "softupd": 272, "td3loss": 273, "valueestim": 274, "default_value_kwarg": 275, "distance_loss": 276, "hold_out_net": 277, "hold_out_param": 278, "qmixerloss": 279, "next_state_valu": 280, "gae": 281, "td0estim": 282, "td1estim": 283, "tdlambdaestim": 284, "valueestimatorbas": 285, "generalized_advantage_estim": 286, "reward2go": 287, "td0_advantage_estim": 288, "td0_return_estim": 289, "td1_advantage_estim": 290, "td1_return_estim": 291, "td_lambda_advantage_estim": 292, "td_lambda_return_estim": 293, "vec_generalized_advantage_estim": 294, "vec_td1_advantage_estim": 295, "vec_td1_return_estim": 296, "vec_td_lambda_advantage_estim": 297, "vec_td_lambda_return_estim": 298, "tensordictrecord": 299, "videorecord": 300, "logger": [301, 339], "csvlogger": 302, "generate_exp_nam": 303, "get_logg": 304, "mlflowlogg": 305, "tensorboardlogg": 306, "wandblogg": 307, "batchsubsampl": 308, "clearcudacach": 309, "countframeslog": 310, "logreward": 311, "optimizerhook": 312, "replaybuffertrain": 314, "rewardnorm": 315, "selectkei": 316, "trainer": [317, 339, 343], "trainerhookbas": 318, "updateweight": 319, "correct_for_frame_skip": 320, "get_stats_random_rollout": 321, "make_collector_offpolici": 322, "make_collector_onpolici": 323, "make_dqn_loss": 324, "make_redq_loss": 325, "make_redq_model": 326, "make_replay_buff": 327, "make_target_updat": 328, "make_train": 329, "parallel_env_constructor": 330, "sync_async_collector": 331, "sync_sync_collector": 332, "transformed_env_constructor": 333, "readm": [334, 346], "tuto": [334, 346], "api": 335, "contribut": [336, 353], "content": 336, "modul": [337, 342, 345, 353], "wrapper": 337, "probabilist": 337, "q": [337, 343, 345], "oper": 337, "join": 337, "hook": [337, 339, 343], "regular": 337, "planner": 337, "object": [338, 342, 353], "dqn": [338, 343, 345], "ddpg": [338, 342], "sac": 338, "redq": 338, "iql": 338, "cql": 338, "dt": 338, "td3": 338, "ppo": [338, 344, 348], "a2c": 338, "dreamer": 338, "builder": 339, "_util": 340, "comput": [341, 343, 349, 352], "time": [341, 342, 352], "code": [342, 349], "overview": [342, 345], "setup": [342, 345], "__init__": 342, "method": 342, "estim": 342, "put": 342, "togeth": [342, 349], "call": 342, "parallel": [342, 347, 354], "execut": [342, 347, 349], "stat": 342, "build": [342, 343, 351], "evalu": 342, "batch": [342, 349, 351], "size": [342, 351], "construct": 342, "target": [342, 343], "network": [342, 343, 344, 345, 348], "updat": 342, "experi": [342, 349], "result": [342, 344, 348], "conclus": [342, 343, 344, 345, 348, 349, 351], "next": [342, 344, 348], "A": [343, 351], "exampl": [343, 351], "deep": 343, "collect": [343, 344], "paramet": [343, 344], "hyperparamet": [343, 344, 348], "regist": 343, "possibl": 343, "improv": 343, "defin": [344, 348], "loop": [344, 345, 348, 349], "recurr": 345, "convolut": 345, "select": 345, "further": 345, "read": 345, "divers": 347, "rollout": [347, 348, 349, 354], "critic": 348, "pendulum": 349, "write": 349, "_step": 349, "reset": [349, 354], "simul": 349, "_reset": 349, "metadata": 349, "_spec": 349, "spec": [349, 354], "shape": 349, "seed": [349, 354], "wrap": 349, "class": [349, 353], "test": 349, "our": 349, "custom": [349, 351], "simpl": 349, "pretrain": 350, "vanilla": 351, "integr": 351, "tensorclass": 351, "pytre": 351, "fix": 351, "iter": 351, "over": 351, "priorit": 351, "save": 351, "raw": 351, "imag": 351, "more": 351, "complex": 351, "introduct": 353, "config": 353, "tensordictmodul": 353, "sequenc": 353, "program": 353, "ensembl": 353, "meta": 353, "state": 353, "frame_skip": 354, "deepmind": 354, "control": 354, "devic": 354, "run": 354, "close": 354, "access": 354, "attribut": 354, "kwarg": 354}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})