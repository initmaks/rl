Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 71, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 100, 101, 103, 104, 105, 106, 107, 110, 113, 117, 118, 120, 121, 123, 126, 128, 129, 132, 138, 139, 143, 144, 145, 146, 148, 156, 157, 158, 159, 160, 161, 163, 166, 167, 169, 170, 180, 181, 183, 184, 185, 186, 193, 195, 197, 199, 200, 201, 202, 206, 207, 208, 212, 219, 220, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 249, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 303, 306, 310, 315, 316, 320, 321, 324, 333, 334, 335, 336, 339, 340, 341, 345, 346, 350, 351, 352, 353, 354, 356, 357, 359, 360, 362, 363], "open": [0, 5, 7, 11, 57, 346, 357, 362], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "reinforc": [0, 3, 9, 54, 121, 183, 184, 185, 186, 190, 234, 239, 253, 254, 258, 259, 260, 262, 266, 267, 273, 274, 275, 338, 344, 346, 349, 350, 355, 358, 361, 362], "learn": [0, 3, 7, 8, 9, 17, 31, 54, 55, 56, 58, 59, 103, 121, 183, 184, 185, 186, 190, 203, 209, 234, 239, 253, 254, 258, 259, 260, 262, 266, 267, 272, 273, 274, 275, 338, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 51, 100, 156, 209, 227, 240, 248, 253, 255, 268, 269, 271, 273, 311, 337, 339, 340, 341, 342, 345, 346, 347, 352, 355, 357, 359, 360, 363], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 36, 42, 84, 85, 94, 101, 173, 338, 339, 340, 343, 345, 346, 347, 349, 350, 352, 357, 358, 363], "pytorch": [0, 1, 2, 3, 55, 111, 112, 159, 170, 193, 197, 208, 209, 320, 337, 339, 342, 345, 347, 348, 351, 355, 357, 358, 359, 360, 362, 363], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 42, 54, 86, 90, 94, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 167, 169, 197, 310, 339, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 117, 118, 120, 121, 124, 125, 126, 128, 129, 130, 138, 139, 143, 144, 148, 151, 155, 156, 157, 160, 161, 163, 165, 167, 169, 170, 178, 179, 180, 181, 183, 193, 195, 196, 197, 199, 202, 203, 206, 207, 209, 210, 223, 225, 227, 231, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 247, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 310, 316, 329, 334, 335, 336, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "directli": [0, 3, 4, 8, 22, 51, 68, 82, 83, 86, 89, 90, 100, 104, 110, 148, 166, 269, 336, 340, 346, 347, 349, 357, 358, 360], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 174, 177, 178, 179, 180, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 210, 213, 214, 215, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 267, 268, 269, 271, 272, 273, 274, 276, 278, 282, 283, 284, 285, 286, 287, 290, 302, 303, 311, 317, 320, 323, 324, 329, 330, 332, 333, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363], "pypi": [0, 2, 362], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 86, 90, 93, 101, 104, 105, 106, 107, 110, 111, 112, 125, 143, 157, 159, 160, 161, 163, 165, 168, 169, 180, 181, 193, 196, 197, 201, 207, 208, 215, 223, 224, 228, 230, 243, 244, 303, 310, 317, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 360, 363], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 77, 86, 90, 93, 94, 104, 105, 106, 107, 110, 111, 112, 159, 163, 168, 169, 190, 197, 201, 208, 210, 227, 231, 233, 234, 243, 248, 253, 262, 269, 271, 284, 289, 297, 310, 315, 339, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 363], "about": [0, 3, 5, 7, 9, 17, 18, 19, 42, 55, 58, 59, 341, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 360, 362, 363], "instruct": [0, 6, 7, 10, 21, 53, 128, 130, 345, 346, 347, 348, 357, 360], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 104, 110, 228, 229, 230, 340, 345, 349, 351, 352, 354, 356, 357], "section": [0, 2, 3, 4, 193, 197, 346, 349, 354, 357], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 60, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 180, 181, 193, 196, 197, 201, 207, 223, 243, 317, 345, 346, 347, 348, 349, 358], "pip": [0, 10, 56, 349, 350, 351, 352, 353, 354, 357, 362, 363], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 34, 37, 40, 41, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 118, 120, 121, 122, 123, 124, 126, 129, 133, 138, 139, 141, 143, 144, 147, 148, 151, 152, 156, 157, 158, 161, 163, 165, 166, 167, 169, 178, 180, 181, 187, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 225, 227, 231, 234, 235, 236, 238, 239, 240, 241, 242, 247, 253, 254, 255, 256, 257, 259, 261, 262, 263, 267, 268, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 307, 311, 317, 324, 329, 332, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363], "python": [0, 3, 5, 6, 7, 10, 20, 102, 116, 193, 194, 195, 197, 198, 199, 204, 205, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 86, 90, 104, 110, 118, 121, 122, 133, 139, 143, 144, 159, 161, 163, 181, 193, 195, 197, 199, 201, 206, 207, 208, 212, 227, 232, 233, 234, 240, 241, 243, 244, 255, 264, 268, 269, 271, 302, 303, 319, 340, 344, 345, 346, 347, 348, 349, 352, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363], "low": [0, 24, 86, 90, 104, 110, 124, 128, 174, 234, 240, 247, 345, 346, 347, 357, 358, 362, 363], "high": [0, 9, 24, 33, 35, 38, 40, 86, 90, 104, 110, 124, 128, 138, 174, 234, 240, 247, 284, 289, 297, 345, 346, 347, 357, 358, 360, 362, 363], "level": [0, 2, 3, 4, 21, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 121, 155, 268, 345, 346, 352, 362], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 43, 45, 46, 51, 52, 56, 80, 86, 140, 202, 288, 312, 321, 342, 347, 358, 362], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 71, 72, 74, 75, 76, 77, 79, 86, 87, 89, 90, 91, 99, 100, 103, 104, 105, 106, 107, 110, 111, 112, 118, 120, 121, 124, 125, 126, 128, 129, 130, 132, 133, 137, 138, 141, 143, 148, 151, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 174, 178, 179, 186, 188, 193, 194, 195, 197, 198, 199, 200, 202, 204, 205, 206, 209, 213, 215, 218, 232, 233, 235, 238, 239, 240, 241, 243, 244, 245, 246, 247, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 279, 282, 283, 284, 285, 286, 287, 288, 310, 317, 332, 336, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 44, 120, 128, 225, 269, 340, 362], "effici": [0, 1, 2, 4, 8, 193, 209, 340, 345, 346, 347, 348, 351, 352, 354, 356, 357, 359, 360, 362], "modular": [0, 51, 246, 360, 362], "document": [0, 2, 5, 7, 17, 18, 20, 31, 57, 86, 90, 104, 110, 161, 169, 337, 346, 348, 349, 352, 355, 362], "properli": [0, 1, 86, 90, 104, 110, 347, 353, 357, 358, 362], "test": [0, 3, 5, 82, 83, 95, 96, 163, 170, 195, 199, 200, 316, 332, 347, 348, 362], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 118, 120, 121, 125, 126, 129, 130, 131, 139, 141, 143, 148, 150, 151, 152, 155, 156, 157, 160, 161, 163, 165, 166, 169, 170, 177, 178, 179, 183, 184, 185, 186, 187, 190, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 216, 217, 218, 227, 228, 232, 233, 234, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 290, 303, 305, 308, 309, 310, 311, 315, 332, 334, 335, 338, 340, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 362, 363], "code": [0, 3, 5, 7, 8, 57, 86, 90, 104, 110, 143, 161, 163, 193, 194, 195, 197, 198, 199, 246, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363], "aim": [0, 2, 3, 7, 27, 28, 143, 163, 165, 201, 323, 339, 340, 341, 345, 346, 362], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 56, 59, 60, 62, 63, 75, 76, 79, 81, 82, 83, 91, 95, 96, 101, 103, 104, 105, 107, 118, 121, 130, 139, 157, 158, 160, 173, 190, 225, 233, 234, 240, 243, 246, 262, 284, 285, 286, 287, 308, 338, 340, 342, 347, 348, 349, 350, 357, 358, 360, 362], "research": [0, 7, 9, 362], "most": [0, 1, 2, 3, 7, 8, 13, 14, 31, 73, 74, 86, 90, 104, 110, 128, 166, 170, 345, 347, 349, 350, 351, 352, 353, 354, 358, 360, 362, 363], "written": [0, 1, 3, 11, 33, 35, 38, 44, 53, 54, 57, 62, 66, 68, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 121, 130, 137, 151, 155, 158, 166, 169, 177, 178, 227, 239, 240, 243, 244, 248, 253, 255, 268, 271, 273, 283, 302, 303, 340, 341, 342, 345, 348, 350, 356, 358, 362], "highli": [0, 2, 349, 362, 363], "wai": [0, 1, 2, 3, 4, 51, 55, 68, 77, 94, 143, 146, 165, 166, 197, 271, 284, 285, 286, 287, 340, 345, 346, 347, 349, 351, 352, 356, 357, 358, 359, 360, 362, 363], "easili": [0, 1, 2, 3, 7, 86, 90, 104, 110, 329, 341, 345, 346, 347, 349, 350, 351, 354, 357, 362, 363], "swap": [0, 1, 3, 89, 166, 347, 359, 362], "compon": [0, 1, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 190, 216, 233, 234, 242, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 315, 320, 345, 346, 347, 348, 350, 351, 354, 356, 357, 358, 359, 362], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 87, 90, 104, 105, 106, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 182, 183, 187, 190, 191, 214, 215, 216, 224, 232, 237, 238, 247, 250, 252, 258, 270, 303, 317, 329, 336, 338, 344, 346, 348, 350, 352, 353, 354, 355, 359, 361], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 81, 86, 87, 90, 94, 99, 104, 105, 106, 110, 111, 112, 126, 129, 161, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 224, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 268, 303, 345, 346, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363], "write": [0, 2, 3, 8, 22, 31, 33, 35, 36, 38, 44, 66, 68, 73, 76, 81, 86, 90, 124, 141, 142, 151, 153, 155, 159, 178, 227, 243, 244, 246, 248, 256, 257, 259, 260, 261, 267, 272, 274, 276, 283, 288, 303, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 90, 101, 104, 108, 109, 110, 118, 151, 160, 167, 169, 177, 178, 193, 195, 199, 239, 243, 244, 249, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 310, 345, 347, 348, 349, 351, 357, 358, 362, 363], "ones": [0, 2, 22, 25, 31, 34, 37, 40, 41, 86, 90, 104, 110, 122, 125, 126, 127, 129, 139, 143, 148, 157, 160, 161, 163, 165, 169, 204, 205, 225, 243, 253, 254, 256, 267, 271, 272, 274, 276, 290, 345, 347, 357, 358, 360, 362, 363], "littl": [0, 1, 3, 42, 86, 90, 104, 110, 161, 253, 255, 268, 271, 273, 347, 348, 352, 360, 362, 363], "effort": [0, 3, 358, 360, 362], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 110, 111, 112, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 143, 144, 145, 146, 148, 151, 152, 153, 155, 157, 158, 160, 161, 163, 164, 165, 166, 167, 169, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 282, 284, 285, 286, 287, 288, 302, 310, 311, 313, 316, 317, 320, 322, 323, 324, 329, 332, 336, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "repo": [0, 6, 53, 121, 158, 163, 339, 357, 362], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 73, 74, 84, 85, 89, 91, 92, 107, 231, 236, 239, 257, 260, 267, 282, 351, 362], "align": [0, 193, 197, 362], "exist": [0, 2, 3, 4, 11, 17, 20, 31, 33, 35, 38, 44, 86, 90, 104, 110, 122, 127, 161, 169, 274, 324, 336, 357, 362, 363], "ecosystem": [0, 352, 362], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 45, 46, 51, 57, 62, 63, 68, 71, 73, 77, 79, 86, 87, 90, 94, 104, 110, 111, 112, 118, 121, 155, 156, 157, 158, 161, 169, 193, 195, 197, 199, 206, 231, 234, 236, 238, 239, 244, 268, 345, 346, 347, 348, 349, 352, 353, 356, 357, 358, 359, 360, 362, 363], "dataset": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 71, 73, 74, 103, 167, 338, 345, 346, 349, 359, 360, 362, 363], "pillar": [0, 362], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 120, 121, 122, 126, 127, 128, 129, 134, 138, 139, 143, 144, 145, 148, 151, 155, 156, 157, 158, 160, 161, 163, 166, 167, 170, 179, 195, 199, 200, 202, 203, 231, 238, 239, 259, 263, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 313, 316, 323, 324, 325, 326, 329, 332, 333, 334, 335, 336, 338, 339, 340, 344, 350, 351, 352, 353, 355, 359, 360, 361], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 44, 86, 90, 100, 104, 110, 126, 143, 157, 163, 165, 168, 169, 180, 181, 182, 187, 189, 195, 199, 201, 202, 203, 207, 214, 215, 224, 228, 229, 230, 237, 243, 249, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 282, 320, 325, 326, 327, 328, 329, 338, 339, 342, 344, 347, 349, 352, 355, 357, 358, 360, 361, 363], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 117, 118, 120, 121, 126, 127, 129, 131, 137, 139, 145, 148, 155, 161, 166, 169, 170, 174, 178, 179, 190, 195, 199, 200, 203, 206, 207, 216, 225, 227, 233, 235, 236, 238, 239, 240, 241, 243, 246, 247, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 310, 311, 317, 320, 322, 325, 332, 334, 335, 336, 338, 340, 341, 342, 344, 348, 349, 350, 351, 355, 358, 359, 360, 361, 363], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 37, 39, 83, 86, 90, 95, 96, 104, 105, 106, 110, 113, 121, 143, 148, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 187, 193, 197, 250, 251, 252, 269, 332, 338, 343, 345, 347, 350, 351, 352, 357, 358, 360, 362, 363], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 32, 33, 35, 38, 62, 63, 65, 66, 77, 79, 86, 87, 90, 104, 110, 111, 118, 120, 122, 125, 133, 139, 143, 151, 157, 160, 161, 163, 165, 169, 170, 193, 195, 196, 197, 199, 203, 207, 210, 216, 222, 223, 232, 234, 238, 240, 242, 243, 244, 274, 283, 284, 285, 286, 287, 311, 323, 335, 340, 346, 347, 350, 351, 353, 357, 359, 360, 362, 363], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 35, 38, 77, 86, 87, 90, 104, 110, 111, 118, 120, 122, 125, 133, 139, 143, 151, 157, 160, 161, 163, 165, 169, 170, 193, 195, 196, 197, 198, 199, 203, 207, 222, 223, 232, 240, 243, 244, 274, 283, 293, 294, 295, 296, 298, 299, 300, 301, 335, 340, 346, 347, 350, 353, 357, 358, 359, 360, 362, 363], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 39, 51, 57, 118, 121, 148, 155, 169, 239, 317, 320, 322, 325, 326, 332, 334, 335, 338, 342, 360, 363], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 73, 74, 75, 78, 80, 81, 86, 90, 100, 104, 110, 125, 126, 129, 143, 157, 160, 161, 163, 165, 166, 167, 169, 177, 178, 179, 180, 181, 193, 194, 197, 198, 201, 203, 207, 227, 233, 234, 240, 242, 243, 248, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 290, 307, 311, 323, 329, 332, 333, 334, 335, 336, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 362, 363], "etc": [0, 2, 3, 7, 8, 11, 31, 45, 46, 57, 86, 90, 104, 110, 137, 161, 169, 201, 207, 346, 347, 352, 360, 362, 363], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 75, 86, 90, 104, 105, 106, 110, 121, 126, 129, 130, 137, 138, 139, 155, 160, 161, 167, 169, 170, 178, 180, 181, 200, 201, 206, 207, 225, 238, 245, 246, 253, 255, 268, 271, 273, 279, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 320, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "few": [0, 2, 8, 90, 303, 311, 347, 348, 350, 357, 360, 362, 363], "depend": [0, 1, 2, 3, 4, 7, 8, 33, 35, 89, 91, 92, 107, 111, 112, 126, 129, 248, 271, 340, 345, 347, 348, 357, 358, 362, 363], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 32, 54, 57, 59, 77, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 180, 181, 193, 194, 197, 198, 243, 316, 320, 340, 345, 347, 348, 350, 352, 353, 357, 358, 360, 362, 363], "standard": [0, 3, 139, 150, 167, 179, 191, 203, 208, 209, 214, 231, 232, 276, 284, 285, 286, 287, 345, 346, 349, 350, 357, 360, 362], "numpi": [0, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 159, 320, 358, 360, 362, 363], "common": [0, 2, 3, 4, 90, 95, 117, 228, 229, 230, 237, 253, 254, 255, 260, 261, 267, 268, 271, 272, 273, 274, 276, 332, 339, 340, 342, 345, 347, 350, 353, 356, 357, 358, 359, 362, 363], "openai": [0, 7, 89, 91, 107, 347, 358, 362, 363], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 86, 87, 89, 90, 91, 92, 94, 101, 102, 104, 107, 110, 111, 112, 114, 116, 121, 124, 130, 136, 137, 139, 141, 146, 148, 151, 157, 160, 166, 167, 169, 329, 332, 339, 345, 346, 347, 348, 349, 353, 354, 358, 359, 360, 362], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 84, 85, 86, 89, 90, 91, 92, 94, 101, 102, 104, 105, 106, 107, 110, 121, 122, 124, 125, 126, 128, 129, 133, 139, 143, 144, 148, 155, 156, 157, 158, 160, 161, 163, 165, 167, 169, 197, 199, 200, 206, 207, 227, 232, 233, 240, 241, 243, 244, 245, 246, 253, 255, 256, 260, 261, 267, 268, 269, 271, 272, 273, 274, 275, 276, 284, 285, 286, 287, 288, 310, 324, 342, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 358, 360, 362, 363], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 133, 134, 136, 137, 138, 139, 143, 144, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 225, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 288, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 305, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 336, 340, 348, 349, 352, 357, 358, 360, 362], "On": [0, 3, 7, 17, 18, 19, 20, 25, 54, 194, 198, 340, 346, 357], "end": [0, 2, 3, 13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 104, 110, 130, 141, 155, 156, 161, 169, 180, 181, 193, 194, 197, 198, 202, 238, 274, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "come": [0, 1, 2, 3, 8, 31, 77, 86, 90, 99, 104, 110, 126, 129, 227, 228, 229, 230, 240, 248, 253, 255, 268, 271, 273, 345, 346, 347, 348, 351, 352, 353, 354, 357, 360, 362, 363], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 72, 75, 79, 86, 88, 90, 100, 104, 105, 106, 110, 111, 112, 116, 117, 118, 121, 122, 125, 126, 129, 136, 137, 143, 148, 155, 156, 157, 158, 160, 161, 163, 165, 167, 169, 170, 175, 176, 178, 193, 195, 197, 199, 202, 206, 207, 231, 232, 243, 261, 269, 271, 274, 288, 311, 316, 317, 326, 336, 339, 340, 341, 343, 345, 346, 347, 348, 350, 351, 352, 356, 357, 358, 359, 360, 362, 363], "re": [0, 2, 3, 8, 31, 72, 86, 90, 104, 110, 169, 199, 204, 205, 240, 244, 310, 342, 345, 347, 348, 349, 351, 356, 358, 362, 363], "usabl": [0, 342, 348, 362], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 86, 87, 90, 104, 110, 116, 118, 126, 129, 161, 167, 169, 170, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 210, 211, 212, 213, 214, 217, 218, 220, 223, 225, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 329, 332, 338, 340, 345, 348, 349, 350, 353, 356, 358, 360, 363], "cost": [0, 2, 26, 57, 253, 255, 268, 271, 273, 345, 346, 357, 358, 360], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 69, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 177, 178, 179, 182, 183, 184, 185, 186, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 213, 214, 215, 217, 218, 221, 222, 223, 224, 227, 228, 229, 230, 232, 238, 240, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 279, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 307, 320, 323, 325, 329, 332, 333, 334, 335, 336, 338, 340, 342, 345, 346, 347, 348, 350, 351, 353, 356, 357, 358, 359, 360, 362, 363], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 42, 44, 51, 54, 58, 59, 65, 66, 73, 86, 87, 90, 94, 99, 101, 104, 105, 106, 110, 120, 126, 129, 159, 167, 169, 206, 207, 234, 239, 242, 338, 342, 345, 346, 348, 349, 357, 358, 359, 360, 362, 363], "good": [0, 1, 4, 9, 104, 345, 347, 348, 350, 357, 362, 363], "runtim": [0, 2, 3, 31, 86, 90, 104, 110, 169, 358], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 113, 126, 129, 138, 161, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 255, 264, 271, 274, 316, 320, 341, 345, 346, 347, 348, 349, 352, 354, 356, 357, 358, 363], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 76, 81, 82, 83, 86, 89, 90, 91, 95, 96, 99, 104, 105, 106, 107, 108, 109, 110, 111, 155, 167, 169, 228, 229, 230, 239, 261, 269, 303, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 362, 363], "read": [0, 2, 3, 7, 22, 36, 39, 57, 62, 63, 64, 65, 68, 75, 76, 79, 86, 89, 90, 91, 104, 110, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 141, 142, 144, 145, 146, 148, 151, 152, 153, 155, 156, 157, 158, 160, 163, 164, 166, 167, 169, 178, 213, 227, 228, 229, 230, 233, 238, 240, 243, 244, 246, 248, 249, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 303, 316, 320, 329, 340, 345, 346, 347, 349, 350, 356, 357, 358, 359, 363], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 342, 345, 349, 352, 356, 359, 363], "beyond": 0, "api": [0, 2, 3, 5, 105, 106, 107, 143, 165, 341, 342, 349, 350, 351, 352, 353, 357, 358, 360, 362, 363], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 45, 46, 47, 49, 73, 86, 87, 90, 100, 104, 110, 113, 121, 122, 132, 137, 144, 159, 161, 169, 170, 195, 199, 227, 233, 234, 240, 241, 242, 243, 244, 303, 337, 340, 341, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363], "paper": [0, 54, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 107, 111, 112, 143, 163, 165, 193, 215, 224, 259, 266, 329, 345, 347, 357], "releas": [0, 4, 7, 10, 31, 86, 90, 104, 110, 161, 169, 274, 362], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 322, 332, 342, 345, 362], "so": [0, 2, 3, 4, 6, 7, 10, 31, 33, 35, 38, 39, 86, 90, 104, 110, 157, 167, 169, 245, 246, 345, 347, 348, 351, 354, 357, 358, 363], "make": [0, 2, 3, 4, 7, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 75, 76, 81, 86, 90, 91, 94, 96, 98, 102, 104, 110, 131, 139, 143, 144, 148, 155, 163, 169, 170, 193, 194, 197, 198, 206, 207, 208, 233, 244, 253, 255, 268, 271, 273, 284, 285, 286, 287, 317, 326, 336, 340, 341, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 357, 358, 359, 360, 362, 363], "sure": [0, 3, 4, 7, 56, 75, 90, 94, 148, 233, 336, 340, 345, 347, 348, 351, 357, 358, 360, 362, 363], "alwai": [0, 2, 3, 13, 14, 19, 25, 27, 31, 51, 60, 86, 90, 104, 110, 137, 138, 169, 262, 269, 340, 341, 346, 347, 348, 357, 358, 360], "enjoi": [0, 2, 3, 57, 352], "latest": [0, 2, 3, 10, 101, 105, 106, 317, 347, 357, 358, 362], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 32, 44, 55, 66, 73, 74, 86, 90, 99, 104, 105, 106, 108, 109, 110, 118, 121, 133, 137, 141, 157, 158, 162, 167, 170, 180, 181, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 208, 209, 244, 253, 255, 268, 271, 273, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 336, 340, 345, 346, 347, 348, 350, 351, 352, 354, 358, 360, 363], "recent": [0, 7, 11, 166, 345, 360, 363], "version": [0, 1, 2, 3, 6, 11, 31, 33, 35, 39, 54, 59, 73, 86, 89, 90, 91, 92, 101, 102, 104, 105, 107, 110, 111, 112, 166, 169, 230, 253, 255, 268, 269, 271, 273, 274, 284, 287, 339, 340, 345, 347, 348, 349, 351, 354, 357, 358, 359, 363], "although": [0, 1, 3, 8, 86, 90, 104, 110, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 342, 345, 346, 352, 360], "core": [0, 3, 8, 329, 342, 348, 350, 362], "guarante": [0, 2, 31, 33, 35, 38, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 167, 169, 352, 362], "backward": [0, 8, 31, 82, 83, 86, 90, 104, 110, 167, 169, 193, 194, 197, 198, 253, 254, 256, 260, 261, 267, 271, 272, 273, 274, 276, 345, 347, 348, 351, 352, 354, 357, 358], "compat": [0, 2, 3, 7, 11, 13, 14, 31, 53, 68, 71, 73, 74, 75, 77, 86, 90, 92, 103, 104, 110, 121, 155, 163, 167, 169, 193, 194, 195, 197, 198, 199, 241, 253, 254, 256, 257, 259, 260, 261, 267, 269, 271, 272, 273, 274, 276, 279, 345, 348, 360, 362], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 141, 143, 144, 145, 146, 148, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 169, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 247, 248, 250, 253, 254, 255, 256, 257, 259, 260, 261, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 298, 299, 301, 311, 316, 317, 318, 329, 332, 336, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363], "13": [0, 2, 5, 10, 11, 73, 74, 107, 166, 169, 344, 346, 347, 353, 357, 358, 359, 360, 361], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 34, 37, 40, 41, 53, 55, 56, 57, 58, 59, 90, 104, 143, 160, 165, 258, 269, 341, 342, 345, 346, 347, 348, 350, 352, 360, 363], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 174, 177, 178, 179, 189, 190, 195, 199, 200, 202, 203, 215, 216, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 302, 311, 315, 316, 317, 319, 320, 329, 338, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 363], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 137, 145, 228, 229, 230, 243, 260, 267, 329, 338, 345, 358, 362], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 68, 86, 90, 104, 110, 116, 143, 165, 169, 203, 305, 310, 320, 342, 346, 354], "root": [0, 2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 104, 121, 158, 177, 196, 222, 223, 348, 349, 357, 358, 359, 360, 363], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 34, 42, 51, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 103, 105, 106, 107, 111, 112, 121, 143, 163, 182, 183, 184, 185, 186, 187, 190, 191, 192, 197, 203, 204, 205, 209, 211, 212, 215, 217, 218, 224, 234, 239, 253, 254, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 284, 289, 297, 329, 337, 355, 359, 362], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 51, 54, 55, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 118, 163, 350, 354, 362], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 54, 57, 58, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 105, 106, 107, 111, 112, 359, 362], "setup": [0, 7, 82, 83, 94, 95, 96], "py": [0, 3, 116, 215, 224, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363], "develop": [0, 3, 4, 7, 94, 345, 362], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 86, 88, 90, 92, 93, 104, 107, 110, 118, 120, 124, 128, 134, 137, 143, 144, 146, 153, 157, 160, 161, 163, 164, 166, 167, 168, 169, 170, 177, 179, 180, 181, 190, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 207, 209, 210, 225, 231, 232, 233, 234, 235, 238, 240, 241, 244, 246, 247, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 282, 284, 285, 286, 287, 288, 290, 304, 305, 308, 310, 313, 320, 322, 329, 332, 341, 344, 345, 347, 350, 351, 352, 355, 357, 358, 361, 363], "seri": [0, 2, 7, 8, 32, 61, 69, 77, 78, 80, 81, 110, 138, 160, 303, 340, 341, 345, 346, 347, 353, 354, 357, 360, 363], "quick": [0, 51], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 39, 53, 59, 86, 90, 104, 110, 120, 158, 160, 169, 271, 339, 340, 341, 345, 346, 347, 348, 350, 354, 357, 358, 360, 363], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 71, 72, 73, 74, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 94, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 114, 118, 121, 122, 123, 124, 126, 127, 128, 129, 131, 133, 137, 138, 139, 143, 144, 147, 148, 151, 152, 156, 157, 158, 159, 160, 161, 163, 165, 167, 169, 177, 178, 180, 181, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 225, 227, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 298, 299, 300, 301, 307, 310, 315, 317, 320, 322, 324, 329, 332, 336, 339, 345, 346, 347, 348, 349, 351, 354, 356, 357, 358, 360, 362, 363], "hurri": [0, 349], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 43, 45, 46, 53, 72, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 120, 133, 139, 144, 156, 158, 159, 180, 181, 193, 195, 197, 199, 200, 201, 204, 205, 211, 219, 225, 231, 232, 235, 238, 244, 284, 286, 287, 345, 346, 347, 348, 349, 350, 357, 358, 359, 360, 362, 363], "item": [0, 8, 13, 25, 27, 37, 44, 60, 72, 77, 132, 204, 205, 256, 257, 259, 311, 341, 342, 345, 347, 348, 351, 352, 357, 358, 360], "navig": [0, 357], "previou": [0, 3, 4, 10, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 157, 169, 178, 193, 197, 218, 232, 347, 348, 349, 350, 354, 358, 363], "whenev": [0, 1, 2, 3, 22, 31, 34, 37, 40, 41, 51, 57, 66, 73, 74, 84, 85, 89, 91, 92, 107, 111, 112, 116, 136, 161, 166, 269, 284, 285, 286, 287, 322, 340, 360], "want": [0, 2, 3, 6, 7, 8, 74, 139, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 340, 345, 346, 347, 348, 349, 351, 352, 353, 357, 358, 359, 360, 362, 363], "ted": [0, 51, 53, 54, 55, 56, 57, 58, 59, 338, 344, 355, 361], "s": [0, 1, 2, 3, 6, 7, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 74, 77, 82, 83, 86, 90, 94, 95, 96, 101, 104, 105, 106, 110, 111, 112, 121, 125, 143, 155, 157, 159, 160, 161, 163, 165, 167, 169, 170, 180, 181, 195, 199, 205, 206, 207, 209, 215, 224, 228, 230, 231, 234, 235, 238, 240, 243, 244, 247, 254, 260, 267, 269, 274, 284, 285, 286, 287, 288, 329, 340, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 77, 82, 83, 86, 90, 99, 100, 103, 104, 110, 116, 120, 125, 128, 130, 137, 143, 144, 156, 157, 160, 161, 163, 165, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 280, 282, 284, 285, 286, 287, 288, 320, 327, 328, 332, 338, 341, 342, 344, 346, 347, 349, 351, 352, 353, 355, 356, 357, 358, 359, 360, 361, 363], "optim": [0, 1, 2, 8, 31, 39, 82, 83, 86, 90, 104, 110, 161, 169, 179, 203, 208, 209, 254, 269, 270, 271, 274, 315, 320, 332, 341, 342, 344, 347, 348, 349, 350, 352, 355, 357, 358, 361], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 104, 107, 110, 118, 121, 139, 143, 165, 170, 238, 239, 254, 256, 259, 261, 272, 274, 276, 311, 317, 320, 322, 323, 324, 332, 342, 344, 345, 348, 349, 350, 351, 354, 355, 357, 358, 359, 360, 361, 362, 363], "storag": [0, 1, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 72, 73, 74, 76, 77, 79, 86, 88, 90, 104, 110, 120, 121, 126, 129, 148, 169, 338, 342, 344, 346, 347, 348, 349, 351, 354, 355, 357, 359, 361], "log": [0, 3, 4, 8, 39, 188, 189, 190, 204, 205, 213, 223, 233, 234, 240, 244, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 310, 313, 314, 316, 320, 332, 340, 341, 342, 344, 345, 346, 347, 349, 350, 354, 355, 357, 358, 361, 362], "your": [0, 2, 3, 7, 8, 10, 17, 31, 86, 90, 94, 99, 104, 105, 106, 110, 167, 169, 336, 339, 340, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 360, 361, 362], "own": [0, 1, 3, 13, 14, 16, 21, 31, 86, 90, 104, 105, 106, 110, 169, 303, 344, 346, 347, 349, 355, 357, 358, 361], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 35, 38, 39, 44, 51, 54, 60, 86, 90, 104, 105, 106, 110, 126, 134, 143, 156, 161, 163, 165, 169, 170, 183, 185, 195, 199, 231, 235, 236, 239, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 320, 322, 332, 338, 342, 344, 346, 349, 352, 353, 355, 359, 360, 361, 363], "loop": [0, 8, 33, 35, 38, 86, 90, 104, 110, 177, 231, 235, 236, 239, 271, 320, 342, 344, 345, 346, 349, 351, 352, 353, 355, 356, 360, 361], "ppo": [0, 4, 8, 240, 244, 255, 268, 271, 338, 340, 344, 345, 346, 350, 351, 355, 361], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 77, 84, 85, 86, 87, 89, 90, 91, 101, 104, 110, 121, 124, 125, 131, 136, 137, 139, 146, 148, 153, 155, 157, 158, 160, 161, 167, 169, 195, 199, 332, 340, 344, 346, 347, 349, 350, 351, 355, 361, 362, 363], "introduct": [0, 341, 344, 349, 355, 357, 361, 363], "multi": [0, 1, 7, 9, 27, 28, 31, 34, 37, 40, 41, 86, 90, 104, 108, 109, 110, 161, 169, 193, 195, 197, 199, 200, 201, 206, 207, 238, 282, 284, 285, 286, 287, 338, 344, 345, 346, 347, 348, 349, 350, 355, 358, 361, 362], "agent": [0, 9, 27, 28, 99, 105, 106, 108, 109, 111, 112, 113, 155, 156, 204, 205, 206, 207, 209, 215, 224, 282, 338, 344, 349, 355, 358, 361], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 195, 199, 202, 203, 238, 243, 269, 302, 303, 324, 325, 326, 329, 332, 334, 335, 336, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 136, 137, 139, 143, 144, 145, 146, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 209, 210, 213, 214, 215, 216, 222, 223, 224, 225, 227, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 297, 303, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 330, 332, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 363], "pretrain": [0, 344, 355, 361], "recurr": [0, 2, 120, 193, 194, 195, 197, 199, 218, 344, 346, 350, 355, 360, 361], "dqn": [0, 2, 51, 130, 190, 233, 234, 253, 254, 256, 257, 259, 261, 262, 263, 266, 267, 269, 271, 272, 273, 274, 275, 276, 282, 327, 338, 340, 344, 350, 351, 354, 355, 361], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 82, 83, 86, 90, 100, 104, 110, 128, 137, 156, 175, 176, 190, 195, 199, 206, 207, 209, 216, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 253, 254, 255, 256, 260, 261, 267, 268, 270, 271, 272, 273, 274, 276, 316, 322, 325, 326, 332, 334, 335, 340, 341, 342, 344, 346, 349, 351, 352, 355, 359, 360, 361, 362, 363], "replai": [0, 8, 15, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 120, 121, 128, 144, 148, 157, 169, 256, 257, 259, 260, 261, 267, 272, 274, 276, 317, 320, 330, 332, 338, 342, 344, 355, 358, 359, 361], "buffer": [0, 3, 4, 8, 15, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 86, 90, 100, 104, 110, 120, 121, 125, 128, 143, 144, 148, 157, 160, 161, 163, 165, 169, 243, 246, 256, 257, 259, 260, 261, 267, 272, 274, 276, 317, 320, 330, 332, 338, 342, 344, 353, 355, 358, 359, 361, 363], "task": [0, 2, 3, 9, 27, 28, 39, 44, 54, 57, 84, 85, 86, 90, 93, 104, 105, 106, 107, 110, 111, 112, 143, 155, 161, 163, 165, 260, 267, 344, 345, 346, 347, 348, 349, 350, 355, 357, 358, 361, 362, 363], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 90, 111, 187, 232, 320, 338, 341, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 360, 361], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 44, 62, 63, 64, 68, 71, 75, 76, 79, 81, 86, 90, 95, 104, 110, 126, 129, 130, 139, 143, 160, 161, 163, 167, 169, 203, 215, 224, 227, 228, 240, 243, 244, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 324, 325, 326, 331, 332, 336, 338, 340, 342, 344, 346, 347, 348, 352, 354, 355, 357, 358, 360, 361, 363], "ddpg": [0, 183, 184, 185, 186, 256, 266, 275, 338, 340, 344, 346, 351, 355, 361], "loss": [0, 3, 8, 35, 130, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 284, 315, 320, 327, 328, 329, 332, 341, 342, 344, 349, 351, 352, 353, 355, 358, 360, 361, 362], "trainer": [0, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 344, 345, 355, 361], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 136, 137, 139, 141, 143, 145, 146, 147, 148, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 169, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 206, 207, 210, 213, 214, 215, 216, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 247, 248, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 277, 278, 282, 284, 285, 286, 287, 290, 303, 311, 312, 313, 314, 315, 317, 318, 319, 322, 329, 332, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363], "packag": [0, 6, 7, 10, 116, 338, 339, 345, 360, 363], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 110, 111, 112, 118, 121, 125, 133, 139, 141, 144, 148, 157, 160, 161, 162, 166, 167, 169, 178, 188, 193, 194, 195, 197, 198, 199, 200, 204, 205, 206, 207, 208, 213, 215, 221, 225, 238, 239, 243, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 314, 317, 318, 319, 320, 322, 334, 335, 336, 338, 342, 346, 347, 348, 349, 352, 354, 356, 357, 359, 362, 363], "size": [0, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 122, 125, 126, 129, 130, 131, 133, 141, 143, 145, 146, 148, 152, 154, 155, 157, 159, 160, 161, 162, 165, 167, 169, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 210, 213, 214, 215, 216, 217, 218, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 267, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 303, 311, 317, 329, 338, 340, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 362, 363], "interoper": [0, 13, 14, 338], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 37, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 86, 89, 90, 104, 110, 111, 112, 121, 122, 143, 148, 161, 165, 169, 180, 181, 193, 194, 195, 197, 198, 199, 200, 201, 207, 242, 246, 255, 257, 259, 261, 262, 268, 271, 272, 276, 284, 285, 286, 287, 293, 294, 295, 296, 298, 299, 300, 301, 329, 336, 338, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360], "node": [0, 2, 17, 18, 19, 20, 21, 33, 35, 38, 59, 329, 338, 352], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 105, 106, 137, 139, 179, 188, 189, 190, 191, 196, 203, 204, 205, 210, 213, 214, 217, 218, 221, 222, 223, 231, 232, 233, 234, 240, 244, 245, 253, 254, 255, 260, 261, 262, 267, 268, 271, 272, 273, 274, 276, 338, 342, 346, 347, 350, 352, 357, 358, 362, 363], "helper": [0, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 345, 346, 348, 358], "compos": [0, 3, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 77, 78, 86, 90, 104, 110, 121, 147, 160, 161, 167, 169, 237, 238, 264, 274, 303, 329, 338, 345, 346, 347, 348, 352, 356, 357, 360, 362, 363], "episod": [0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 86, 90, 104, 110, 148, 151, 156, 179, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 338, 346, 349, 354, 357, 360], "format": [0, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 77, 86, 90, 104, 105, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 303, 338, 345, 346, 349, 351, 353, 363], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 45, 46, 47, 48, 49, 86, 90, 100, 104, 110, 111, 112, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 139, 141, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 178, 218, 227, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 247, 254, 257, 260, 261, 272, 274, 276, 282, 338, 358], "human": [0, 55, 338, 358], "feedback": [0, 338, 354, 362], "rlhf": [0, 39, 44, 60, 137, 338, 340], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 87, 90, 104, 110, 117, 118, 126, 129, 138, 145, 146, 160, 161, 167, 169, 170, 179, 202, 203, 316, 324, 325, 326, 329, 332, 334, 335, 336, 338, 349], "gymlikeenv": [0, 89, 91, 338], "envmetadata": [0, 338], "vector": [0, 1, 8, 23, 26, 32, 82, 83, 95, 96, 99, 105, 106, 107, 111, 112, 128, 166, 183, 185, 193, 194, 197, 198, 201, 284, 287, 297, 298, 299, 300, 301, 338, 345, 346, 348, 356, 357, 358, 359, 363], "mask": [0, 1, 4, 22, 26, 29, 30, 32, 105, 106, 117, 144, 169, 190, 204, 205, 216, 232, 233, 234, 235, 236, 241, 242, 317, 338, 346, 348, 363], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 32, 39, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 124, 126, 128, 129, 130, 131, 134, 137, 138, 141, 145, 146, 148, 152, 155, 161, 166, 174, 177, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 195, 199, 201, 202, 203, 204, 205, 206, 214, 215, 216, 218, 221, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 247, 248, 253, 254, 256, 257, 259, 260, 261, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 329, 332, 336, 338, 340, 341, 342, 345, 346, 347, 349, 350, 351, 352, 353, 356, 357, 359, 360, 362, 363], "record": [0, 2, 31, 86, 90, 104, 110, 137, 169, 271, 302, 303, 304, 305, 306, 307, 308, 309, 310, 332, 338, 346, 347, 350, 354], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 128, 157, 174, 227, 233, 234, 240, 241, 242, 243, 244, 245, 246, 338, 347, 348, 350, 351, 357, 358, 362, 363], "actor": [0, 3, 4, 20, 137, 179, 182, 183, 185, 190, 191, 203, 214, 216, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 282, 329, 338, 341, 346, 348, 349, 351, 354, 359, 362], "explor": [0, 1, 168, 209, 227, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 253, 316, 325, 326, 332, 338, 347, 348, 349, 351, 352, 354, 357, 358], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 86, 90, 99, 104, 110, 116, 119, 121, 122, 124, 126, 128, 129, 130, 138, 139, 143, 144, 147, 148, 149, 151, 153, 157, 158, 160, 161, 165, 167, 169, 174, 178, 183, 184, 185, 186, 188, 189, 190, 191, 192, 195, 196, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 215, 216, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 313, 314, 315, 316, 317, 320, 329, 332, 338, 342, 346, 351, 352, 353, 356, 357, 358, 360, 362, 363], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 72, 86, 87, 90, 100, 103, 104, 105, 106, 108, 109, 110, 118, 125, 126, 127, 131, 137, 139, 145, 146, 151, 152, 155, 160, 166, 169, 178, 188, 204, 205, 213, 227, 240, 244, 248, 249, 272, 278, 284, 289, 297, 306, 320, 338, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "hook": [0, 31, 86, 90, 104, 110, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 216, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 338], "planner": [0, 179, 203, 338], "sac": [0, 261, 272, 274, 338], "redq": [0, 272, 328, 329, 338], "iql": [0, 260, 267, 338, 345, 357], "cql": [0, 254, 259, 338], "dt": [0, 239, 338, 358], "td3": [0, 276, 338], "a2c": [0, 253, 338], "dreamer": [0, 115, 191, 263, 264, 265, 338, 340], "checkpoint": [0, 338, 359], "builder": [0, 338, 346, 363], "logger": [0, 303, 305, 306, 307, 308, 309, 310, 314, 320, 332, 336, 338, 346], "_util": [0, 3, 11, 338, 354], "implement_for": [0, 3, 338], "thing": [0, 3, 7, 8, 86, 90, 104, 110, 339, 347, 348, 349, 350, 351, 352, 353, 357, 360, 363], "consid": [0, 1, 2, 3, 8, 19, 31, 34, 37, 40, 41, 62, 63, 79, 86, 90, 104, 110, 128, 167, 169, 188, 206, 221, 284, 286, 287, 339, 345, 349, 350, 351, 358, 360], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 76, 79, 86, 87, 90, 99, 101, 103, 104, 105, 106, 110, 111, 112, 117, 120, 121, 125, 126, 128, 129, 137, 138, 139, 143, 144, 151, 157, 160, 161, 163, 165, 166, 167, 169, 175, 176, 179, 190, 193, 194, 197, 198, 201, 202, 203, 204, 205, 208, 216, 222, 238, 240, 243, 244, 246, 250, 255, 257, 262, 268, 271, 274, 277, 282, 283, 284, 285, 286, 287, 302, 303, 317, 336, 339, 340, 342, 345, 346, 347, 348, 350, 352, 353, 357, 358, 359, 360, 363], "debug": [0, 6, 8, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 339, 363], "work": [0, 1, 2, 3, 4, 8, 11, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 71, 73, 74, 76, 81, 86, 89, 90, 91, 94, 104, 107, 110, 122, 137, 143, 163, 166, 167, 169, 180, 181, 200, 201, 234, 242, 247, 255, 268, 271, 320, 339, 340, 345, 346, 347, 348, 349, 352, 356, 357, 358, 359, 360, 362, 363], "habitat": [0, 3, 92, 339, 359], "lab": [0, 3, 84, 85, 92, 339], "mujoco": [0, 6, 8, 107, 339, 345, 347, 348], "error": [0, 1, 3, 7, 10, 11, 28, 31, 33, 35, 38, 86, 90, 104, 110, 113, 144, 169, 170, 339, 345, 347, 357, 363], "solut": [0, 2, 3, 6, 7, 9, 20, 339, 340, 342, 362], "resourc": [0, 1, 20, 92, 339, 345, 347, 357], "issu": [0, 4, 5, 8, 51, 55, 62, 63, 79, 94, 121, 144, 158, 227, 233, 234, 240, 241, 242, 243, 244, 339, 362], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 78, 79, 80, 81, 86, 90, 104, 110, 111, 112, 121, 125, 128, 161, 177, 204, 205, 338, 349, 356, 357, 360, 362], "search": [0, 103, 178, 346], "page": [0, 7, 310, 351], "somewhat": [1, 2, 341, 350, 363], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 118, 127, 130, 161, 169, 190, 197, 201, 216, 233, 234, 241, 242, 271, 317, 352, 362, 363], "dataload": [1, 60, 72, 74, 346, 352, 360], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 104, 110, 121, 132, 148, 156, 157, 158, 161, 169, 193, 195, 197, 199, 213, 231, 235, 236, 239, 274, 303, 340, 346, 349, 360, 362, 363], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 99, 104, 105, 106, 110, 111, 112, 120, 132, 137, 143, 152, 160, 161, 165, 169, 199, 200, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 317, 320, 340, 341, 342, 345, 346, 347, 348, 351, 356, 357, 358, 359, 360, 362, 363], "over": [1, 2, 3, 4, 8, 13, 14, 31, 37, 41, 42, 44, 50, 51, 57, 72, 86, 90, 104, 110, 128, 139, 151, 158, 169, 177, 225, 246, 262, 264, 269, 290, 323, 342, 345, 346, 347, 349, 350, 351, 352, 357, 358, 363], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 38, 40, 41, 57, 64, 86, 90, 104, 105, 106, 110, 118, 119, 125, 133, 143, 157, 160, 161, 162, 163, 165, 169, 177, 193, 195, 197, 199, 206, 243, 244, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 340, 345, 348, 357, 358, 360, 363], "static": [1, 11, 39, 44, 66, 73, 74, 92, 167, 267, 349, 358, 360], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 118, 120, 122, 125, 126, 127, 128, 129, 137, 139, 141, 143, 145, 148, 151, 155, 156, 157, 160, 161, 163, 165, 167, 169, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 207, 210, 214, 225, 232, 233, 234, 235, 236, 238, 239, 243, 247, 248, 253, 254, 255, 256, 260, 261, 267, 268, 271, 272, 273, 274, 276, 283, 284, 285, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 356, 357, 358, 360, 361, 362, 363], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 34, 37, 40, 41, 44, 64, 68, 74, 86, 90, 92, 99, 104, 105, 106, 110, 130, 159, 169, 170, 193, 197, 207, 237, 253, 255, 268, 271, 272, 273, 341, 345, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 363], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 60, 77, 86, 89, 90, 91, 92, 104, 107, 110, 120, 126, 128, 129, 138, 146, 161, 169, 175, 176, 195, 199, 235, 239, 255, 268, 271, 274, 303, 317, 322, 334, 335, 336, 340, 345, 346, 347, 348, 352, 357, 358, 360], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 54, 55, 58, 59, 60, 86, 90, 100, 104, 110, 121, 125, 133, 143, 151, 157, 160, 161, 162, 163, 165, 169, 201, 225, 243, 244, 245, 274, 303, 342, 347, 349, 353, 360, 363], "two": [1, 2, 3, 4, 8, 10, 31, 34, 37, 39, 40, 41, 57, 68, 72, 74, 86, 90, 104, 110, 118, 139, 143, 165, 169, 186, 193, 195, 197, 199, 219, 244, 268, 279, 316, 320, 329, 341, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 360, 362, 363], "main": [1, 2, 3, 5, 19, 21, 59, 87, 244, 320, 340, 341, 345, 346, 356, 363], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 68, 71, 72, 73, 74, 76, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 107, 110, 111, 112, 118, 122, 124, 125, 143, 152, 155, 157, 159, 160, 161, 163, 165, 169, 177, 180, 181, 193, 195, 197, 199, 200, 201, 204, 205, 206, 207, 208, 225, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 282, 284, 285, 286, 287, 288, 292, 302, 310, 313, 323, 329, 332, 333, 336, 345, 346, 347, 348, 349, 350, 352, 357, 358, 360, 363], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 71, 72, 73, 74, 75, 76, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 113, 119, 120, 124, 126, 129, 137, 139, 141, 143, 151, 153, 159, 161, 163, 165, 167, 169, 177, 180, 181, 183, 189, 192, 195, 199, 201, 204, 205, 211, 216, 234, 238, 241, 242, 244, 246, 247, 248, 269, 274, 281, 284, 287, 302, 316, 317, 334, 335, 340, 345, 347, 349, 350, 351, 352, 356, 358, 359, 360, 362, 363], "constructor": [1, 2, 15, 17, 18, 19, 20, 37, 44, 57, 65, 77, 86, 90, 101, 104, 110, 111, 160, 180, 181, 201, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 329, 333, 336, 340, 345, 346, 347, 349, 352, 357, 360], "iter": [1, 2, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 68, 72, 82, 83, 86, 90, 95, 96, 104, 110, 131, 139, 152, 169, 180, 181, 201, 206, 207, 220, 227, 233, 240, 241, 243, 245, 246, 248, 269, 281, 316, 319, 320, 329, 341, 342, 345, 347, 348, 352, 354, 357, 358], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 87, 90, 91, 92, 94, 95, 96, 100, 101, 104, 107, 110, 117, 161, 169, 193, 195, 197, 199, 235, 238, 245, 246, 324, 336, 340, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 357, 360, 361, 363], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 51, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 117, 120, 133, 136, 139, 155, 156, 157, 158, 161, 166, 169, 177, 178, 179, 191, 193, 195, 197, 199, 200, 202, 203, 231, 235, 236, 238, 239, 240, 244, 253, 263, 271, 283, 284, 285, 286, 287, 290, 291, 292, 302, 305, 311, 316, 320, 342, 346, 348, 350, 351, 353, 354, 356, 358, 359, 362], "queri": [1, 3, 13, 31, 33, 35, 38, 86, 90, 104, 110, 143, 160, 163, 167, 169, 246, 345, 351, 358, 362], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 104, 110, 144, 156, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 257, 259, 269, 284, 285, 286, 287, 288, 302, 333, 345, 346, 348, 351, 354, 358, 360, 363], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 120, 121, 128, 134, 138, 139, 150, 155, 158, 161, 167, 169, 179, 180, 181, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 210, 211, 212, 215, 217, 218, 221, 222, 223, 224, 227, 231, 232, 235, 236, 238, 239, 240, 243, 244, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 276, 311, 313, 316, 320, 322, 323, 324, 334, 335, 336, 340, 345, 346, 347, 348, 349, 350, 352, 354, 357, 358, 359, 360, 363], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 44, 56, 72, 77, 86, 90, 104, 110, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 141, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 169, 170, 193, 195, 199, 201, 208, 209, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 285, 286, 287, 317, 345, 347, 348, 352, 353, 357, 358, 360, 363], "deliv": [1, 2, 15, 57, 345, 346, 349, 352, 362], "stack": [1, 2, 3, 7, 8, 13, 14, 17, 19, 20, 27, 28, 33, 34, 35, 37, 38, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 86, 90, 99, 104, 105, 106, 110, 167, 193, 195, 197, 198, 199, 238, 245, 246, 302, 311, 340, 346, 349, 356, 358, 360, 362], "user": [1, 2, 3, 5, 8, 31, 51, 53, 57, 59, 74, 86, 90, 104, 110, 122, 156, 161, 169, 170, 187, 200, 271, 274, 303, 333, 341, 342, 345, 346, 349, 351, 352, 358, 362, 363], "reset": [1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 118, 121, 130, 133, 136, 138, 143, 151, 155, 156, 157, 158, 160, 161, 163, 166, 167, 169, 170, 178, 193, 195, 199, 226, 238, 239, 302, 329, 345, 346, 347, 348, 349, 352, 356, 357, 362], "reach": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 72, 86, 90, 104, 110, 111, 112, 155, 231, 235, 236, 239, 345, 347, 354, 357, 362, 363], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 121, 126, 127, 129, 130, 131, 138, 139, 141, 145, 146, 148, 150, 152, 155, 157, 158, 160, 161, 167, 169, 177, 178, 179, 193, 195, 199, 203, 238, 253, 254, 255, 256, 257, 259, 260, 261, 267, 268, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 329, 341, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 104, 105, 106, 107, 108, 109, 110, 120, 121, 122, 124, 130, 139, 146, 155, 156, 160, 161, 167, 169, 170, 177, 178, 179, 182, 187, 191, 193, 194, 195, 197, 198, 199, 200, 201, 203, 211, 214, 215, 217, 218, 224, 228, 238, 243, 249, 253, 255, 259, 268, 269, 271, 272, 273, 274, 282, 283, 284, 285, 286, 287, 288, 336, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 363], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 39, 51, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 139, 141, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 177, 193, 195, 199, 208, 231, 233, 235, 241, 264, 274, 346, 347, 348, 349, 350, 352, 354, 357, 358, 359, 360, 363], "predefin": [1, 346, 348, 352, 360], "becaus": [1, 3, 4, 7, 33, 35, 38, 39, 51, 86, 90, 104, 110, 130, 137, 155, 160, 166, 169, 186, 200, 207, 227, 233, 234, 238, 240, 241, 242, 243, 244, 345, 346, 348, 350, 351, 352, 356, 357, 358, 360, 363], "potenti": [1, 2, 358, 360], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 39, 82, 83, 86, 90, 95, 96, 104, 110, 139, 153, 161, 164, 169, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 210, 211, 212, 213, 214, 217, 218, 220, 222, 223, 225, 228, 231, 232, 234, 235, 238, 239, 240, 242, 244, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 324, 341, 345, 347, 348, 349, 350, 356, 357, 359, 360], "heavi": [1, 8, 51, 360], "crucial": [1, 2, 231, 235, 236, 239, 260, 267, 269, 345, 346, 347, 348, 349, 351, 353, 357, 358, 363], "configur": [1, 8, 20, 21, 39, 137, 182, 187, 214, 269, 271, 329, 340, 345, 346, 347, 351, 357, 358], "hyperparamet": [1, 71, 169, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 345, 358, 360], "appropri": [1, 3, 4, 7, 61, 69, 77, 78, 80, 81, 104, 110, 130, 333, 336, 345, 353, 360], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 336, 340, 341, 345, 348, 350, 354, 357, 358, 359, 362], "take": [1, 2, 3, 8, 22, 39, 54, 82, 83, 86, 90, 95, 96, 104, 110, 124, 155, 158, 160, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 247, 250, 252, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 322, 340, 342, 345, 346, 347, 349, 350, 351, 357, 358, 360, 363], "consider": [1, 2, 3, 8, 346, 357, 360], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 105, 106, 110, 111, 112, 126, 129, 156, 161, 169, 178, 180, 181, 195, 199, 201, 248, 253, 254, 255, 256, 257, 259, 261, 262, 268, 269, 271, 272, 273, 274, 276, 282, 284, 287, 345, 346, 347, 349, 357, 358, 363], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 73, 74, 75, 77, 84, 85, 86, 89, 90, 91, 92, 99, 100, 104, 105, 106, 110, 111, 112, 118, 121, 124, 125, 126, 127, 130, 131, 133, 137, 139, 144, 145, 146, 148, 151, 152, 155, 156, 158, 160, 161, 166, 167, 169, 170, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 207, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 240, 242, 243, 244, 247, 250, 253, 255, 261, 266, 268, 269, 271, 272, 273, 275, 283, 284, 285, 286, 287, 288, 303, 305, 315, 316, 317, 320, 332, 334, 335, 336, 340, 342, 345, 346, 347, 348, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363], "occur": [1, 8, 14, 27, 28, 51, 86, 90, 92, 104, 110, 122, 139, 144, 166, 178, 227, 233, 234, 240, 241, 242, 243, 244, 264, 360, 363], "serial": [1, 2, 3, 31, 86, 90, 104, 110, 167, 169], "parallel": [1, 3, 8, 86, 89, 90, 91, 104, 105, 106, 110, 161, 166, 170, 253, 333, 334, 335, 336, 346, 347, 357], "syncdatacollector": [1, 2, 13, 14, 16, 17, 18, 19, 20, 31, 118, 121, 148, 332, 335, 338, 345, 346, 347, 348, 352, 354, 357, 360], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 99, 100, 103, 104, 105, 106, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 334, 335, 336, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 360, 363], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 35, 38, 44, 54, 59, 60, 87, 101, 104, 110, 167, 334, 335, 336, 345, 347, 362, 363], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 335, 338, 347, 352, 362], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 73, 74, 99, 105, 106, 193, 197, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 340, 342, 347, 350, 360, 362], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 66, 73, 74, 82, 83, 84, 85, 89, 91, 92, 94, 95, 96, 101, 102, 104, 107, 167, 169, 206, 239, 322, 338, 340, 345, 349, 353, 357, 358], "aggreg": [1, 3, 51, 77, 178, 180, 181, 183, 184, 246], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 87, 90, 104, 110, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 139, 141, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 177, 178, 193, 195, 197, 199, 201, 206, 216, 232, 234, 235, 242, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 284, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 322, 340, 346, 348, 349, 350, 353, 354, 358, 359, 362, 363], "final": [1, 2, 3, 4, 20, 33, 35, 38, 39, 166, 193, 195, 197, 199, 206, 231, 235, 236, 237, 239, 245, 284, 316, 340, 345, 346, 347, 353, 354, 357, 358, 363], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 334, 338, 345, 346, 347, 352, 362], "sever": [1, 2, 8, 29, 31, 44, 54, 86, 90, 104, 110, 122, 124, 161, 169, 271, 345, 347, 353, 354, 360, 363], "gather": [1, 3, 17, 19, 20, 44, 60, 62, 63, 79, 144, 205, 213, 283, 324, 339, 346, 347, 348, 352, 357, 358, 360, 363], "continu": [1, 9, 24, 45, 74, 86, 90, 104, 105, 106, 110, 111, 112, 174, 183, 184, 185, 186, 239, 246, 253, 254, 261, 267, 271, 272, 273, 274, 275, 276, 284, 289, 297, 340, 345, 347, 348, 350, 357, 358, 360, 362, 363], "concomitantli": 1, "network": [1, 4, 8, 31, 86, 90, 99, 104, 105, 106, 110, 169, 180, 181, 183, 184, 185, 186, 189, 191, 192, 197, 201, 206, 207, 209, 211, 212, 215, 217, 218, 219, 224, 228, 229, 230, 232, 243, 247, 254, 255, 256, 257, 259, 260, 261, 262, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 280, 282, 284, 285, 286, 287, 288, 331, 332, 340, 341, 342, 351, 354, 356, 358, 363], "impli": [1, 363], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 39, 66, 68, 71, 82, 83, 86, 90, 104, 108, 109, 110, 125, 143, 157, 160, 161, 163, 165, 169, 193, 194, 195, 197, 198, 199, 206, 209, 243, 253, 254, 255, 261, 264, 274, 322, 331, 340, 342, 345, 346, 347, 348, 356, 358, 360, 362], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 33, 35, 38, 53, 59, 86, 89, 90, 91, 92, 104, 107, 110, 137, 139, 152, 161, 162, 167, 169, 170, 201, 206, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 362, 363], "slightli": [1, 51, 340, 341, 348, 358, 359, 360, 363], "lag": [1, 345, 346, 347], "therefor": [1, 2, 3, 7, 34, 37, 40, 41, 58, 59, 86, 90, 104, 110, 148, 271, 282, 351, 363], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 99, 100, 103, 104, 105, 106, 110, 117, 118, 121, 130, 137, 143, 148, 151, 155, 156, 158, 160, 162, 165, 166, 177, 178, 193, 194, 197, 198, 200, 204, 205, 206, 231, 235, 236, 239, 240, 243, 244, 252, 253, 254, 255, 260, 261, 262, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 341, 342, 345, 346, 347, 349, 356, 357, 358, 360, 363], "asynchron": [1, 9, 14, 20, 31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 253, 334, 345, 346, 347], "off": [1, 2, 4, 196, 223, 233, 274, 316, 325, 340, 342, 345, 346, 347, 350, 351, 357, 359, 363], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 79, 86, 90, 104, 105, 106, 110, 111, 126, 129, 133, 139, 156, 161, 166, 169, 170, 190, 193, 195, 197, 199, 207, 208, 228, 230, 232, 234, 241, 253, 260, 262, 267, 271, 316, 340, 342, 345, 346, 347, 348, 349, 350, 352, 353, 357, 358, 359, 360, 363], "remot": [1, 2, 17, 18, 19, 20, 104, 110, 363], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 39, 77, 82, 83, 86, 90, 92, 93, 95, 96, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 121, 124, 126, 129, 130, 131, 137, 141, 145, 146, 151, 152, 153, 155, 156, 158, 169, 170, 179, 195, 199, 203, 238, 239, 253, 303, 324, 340, 345, 347, 348, 350, 351, 352, 353, 354, 359, 360, 362], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 111, 112, 152, 272, 284, 285, 286, 287, 288, 341, 345, 347, 350, 351, 352], "synchronis": [1, 87, 357], "either": [1, 2, 5, 21, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 86, 90, 104, 110, 155, 156, 169, 249, 276, 307, 342, 345, 346, 348, 359, 360, 362, 363], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 345, 357, 362], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 125, 128, 133, 136, 137, 138, 139, 143, 144, 146, 147, 150, 152, 155, 157, 159, 160, 161, 162, 163, 165, 167, 169, 170, 174, 177, 178, 179, 180, 181, 183, 184, 185, 186, 192, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 222, 223, 227, 228, 229, 230, 231, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 284, 285, 286, 287, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 310, 313, 314, 316, 317, 320, 336, 340, 341, 342, 345, 346, 347, 348, 349, 350, 353, 354, 356, 357, 358, 359, 360, 362, 363], "second": [1, 3, 8, 51, 54, 77, 118, 193, 195, 197, 199, 234, 255, 268, 271, 274, 305, 319, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 125, 126, 127, 129, 130, 131, 137, 141, 142, 143, 145, 146, 148, 152, 155, 157, 159, 160, 161, 163, 165, 169, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 214, 215, 216, 224, 227, 228, 229, 230, 232, 233, 234, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 317, 322, 329, 330, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 44, 45, 46, 66, 73, 86, 90, 104, 110, 118, 133, 137, 160, 169, 189, 190, 194, 198, 210, 228, 229, 230, 233, 234, 237, 243, 249, 253, 255, 256, 257, 262, 268, 271, 273, 282, 283, 284, 285, 286, 287, 320, 329, 338, 342, 345, 346, 347, 348, 349, 350, 356, 357, 358, 363], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 85, 86, 87, 90, 100, 104, 110, 121, 139, 157, 160, 161, 167, 169, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 257, 260, 261, 269, 282, 284, 285, 286, 287, 303, 307, 316, 324, 325, 326, 329, 332, 334, 335, 340, 341, 342, 345, 347, 348, 349, 350, 358, 360, 363], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 125, 126, 127, 129, 130, 131, 141, 143, 145, 146, 148, 152, 155, 157, 160, 161, 163, 165, 169, 174, 177, 179, 189, 193, 194, 195, 197, 198, 199, 203, 208, 209, 215, 216, 224, 227, 228, 229, 230, 232, 233, 234, 238, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 317, 329, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "slower": [1, 200], "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 57, 66, 73, 74, 76, 77, 86, 90, 94, 104, 107, 110, 146, 186, 195, 197, 199, 201, 210, 225, 227, 231, 233, 243, 248, 269, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 339, 341, 345, 346, 347, 349, 351, 352, 357, 358, 360, 362, 363], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 118, 121, 124, 126, 127, 128, 129, 138, 139, 143, 148, 151, 154, 156, 157, 158, 160, 161, 162, 165, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 207, 210, 211, 212, 213, 214, 216, 217, 218, 220, 225, 227, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 267, 268, 269, 271, 272, 273, 274, 275, 276, 282, 284, 285, 286, 287, 291, 292, 305, 313, 315, 316, 320, 324, 329, 336, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 363], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 92, 93, 94, 104, 110, 125, 137, 142, 143, 157, 160, 161, 163, 165, 169, 193, 194, 197, 198, 243, 312, 345, 346, 347, 348, 357, 359, 363], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 42, 68, 82, 83, 95, 96, 104, 110, 122, 124, 128, 138, 148, 151, 155, 160, 167, 193, 197, 199, 200, 206, 208, 209, 227, 233, 240, 241, 243, 244, 247, 255, 261, 268, 271, 272, 276, 290, 329, 336, 340, 342, 345, 346, 347, 349, 351, 352, 357, 358, 360, 362], "infer": [1, 104, 110, 121, 167, 195, 199, 208, 232, 259, 345, 347, 352, 354, 360], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 51, 54, 66, 73, 74, 82, 83, 84, 85, 86, 89, 90, 95, 96, 100, 101, 102, 104, 110, 138, 139, 161, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 245, 246, 247, 250, 274, 303, 310, 316, 334, 335, 336, 339, 342, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362], "dispatch": [1, 17, 18, 19, 20, 225, 238, 303, 345], "avail": [1, 3, 4, 6, 20, 34, 37, 40, 41, 51, 54, 59, 66, 72, 73, 74, 84, 85, 94, 104, 105, 106, 107, 111, 112, 120, 137, 190, 216, 240, 244, 269, 303, 334, 335, 340, 345, 346, 347, 348, 349, 350, 357, 358, 360, 363], "speed": [1, 2, 4, 8, 26, 86, 90, 104, 110, 341, 345, 346, 347, 348, 357, 358, 360], "avoid": [1, 2, 31, 62, 63, 79, 86, 90, 104, 110, 116, 161, 167, 169, 227, 243, 248, 255, 268, 271, 274, 323, 347, 357], "oom": [1, 33, 35, 38, 62, 63, 79], "choic": [1, 2, 53, 59, 104, 210, 340, 341, 345, 346, 351, 357], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 34, 37, 39, 40, 41, 44, 51, 54, 55, 57, 58, 59, 62, 63, 66, 68, 73, 74, 77, 79, 86, 87, 88, 90, 99, 101, 104, 105, 106, 110, 111, 118, 126, 129, 146, 160, 162, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 208, 210, 211, 212, 214, 215, 217, 218, 220, 224, 225, 227, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 255, 268, 269, 271, 284, 285, 286, 287, 288, 317, 334, 335, 336, 340, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 360, 363], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 43, 44, 45, 46, 57, 65, 74, 86, 90, 94, 103, 104, 110, 121, 133, 162, 167, 178, 195, 199, 232, 253, 255, 256, 260, 261, 267, 268, 271, 272, 273, 274, 276, 284, 285, 286, 287, 340, 341, 346, 357], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 77, 79, 86, 90, 104, 110, 166, 167, 169, 179, 200, 203, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 310, 329, 338, 342, 345, 347, 348, 350, 352, 354, 357, 359, 363], "while": [1, 2, 3, 7, 8, 31, 86, 90, 104, 110, 148, 161, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 260, 267, 268, 271, 274, 340, 345, 347, 348, 350, 352, 353, 357, 358, 359, 360, 362], "wait": [1, 19, 20, 21, 348, 358], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 31, 33, 35, 37, 38, 40, 51, 54, 55, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 104, 105, 106, 110, 111, 112, 116, 118, 120, 121, 128, 139, 146, 148, 151, 152, 155, 157, 161, 169, 180, 181, 193, 197, 218, 238, 240, 245, 246, 247, 253, 254, 256, 257, 259, 260, 261, 267, 271, 274, 284, 291, 292, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 360, 363], "impact": [1, 57, 126, 129, 253, 255, 268, 271, 273, 346, 348, 357], "memori": [1, 3, 8, 20, 26, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 86, 87, 90, 94, 104, 110, 121, 125, 143, 157, 160, 161, 163, 165, 167, 169, 197, 198, 243, 336, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "manag": [1, 8, 280, 281, 284, 285, 286, 287, 316, 351], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 65, 66, 68, 71, 73, 74, 77, 86, 90, 95, 96, 104, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 143, 144, 145, 146, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 177, 178, 179, 189, 190, 195, 199, 202, 203, 216, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 303, 314, 315, 316, 318, 319, 320, 324, 329, 341, 342, 345, 347, 348, 349, 351, 356, 357, 358, 360, 362, 363], "control": [1, 3, 5, 8, 15, 84, 85, 86, 90, 99, 104, 105, 106, 110, 128, 177, 183, 184, 185, 186, 195, 199, 202, 203, 218, 225, 239, 243, 244, 245, 253, 255, 268, 271, 275, 284, 289, 297, 340, 342, 345, 346, 347, 349, 350, 351, 357, 358, 360], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 71, 72, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 111, 112, 121, 122, 126, 129, 134, 137, 138, 139, 143, 144, 155, 157, 158, 160, 161, 163, 169, 170, 189, 193, 194, 196, 197, 198, 199, 204, 205, 206, 223, 228, 229, 230, 232, 238, 240, 243, 244, 246, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 279, 282, 284, 285, 286, 287, 303, 311, 315, 329, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 360, 363], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 346, 357], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 35, 37, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 71, 73, 86, 90, 104, 105, 106, 110, 118, 121, 124, 126, 129, 134, 141, 153, 161, 169, 195, 199, 207, 284, 286, 287, 316, 320, 341, 345, 346, 347, 348, 350, 351, 352, 354, 357, 358, 360, 363], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 238, 239, 345, 352, 363], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 53, 71, 77, 82, 83, 86, 90, 95, 96, 104, 110, 209, 271, 284, 285, 286, 287, 288, 302, 329, 339, 340, 342, 345, 346, 347, 348, 350, 352, 353, 357, 360, 363], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 33, 35, 38, 42, 44, 53, 57, 72, 73, 76, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 121, 126, 128, 129, 134, 138, 139, 160, 161, 167, 169, 180, 181, 194, 195, 198, 199, 201, 204, 205, 206, 207, 232, 239, 247, 274, 345, 346, 347, 349, 350, 352, 356, 357, 359, 360, 363], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 118, 119, 120, 121, 122, 126, 128, 129, 130, 133, 137, 138, 139, 141, 143, 144, 148, 150, 152, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 169, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 220, 221, 222, 223, 227, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 329, 332, 336, 342, 345, 346, 347, 348, 350, 359, 360, 362, 363], "behaviour": [1, 3, 13, 14, 20, 57, 90, 122, 126, 129, 139, 144, 156, 177, 195, 196, 199, 223, 316, 340, 346, 360], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 86, 90, 104, 110, 121, 126, 129, 139, 157, 158, 199, 240, 244, 245, 246, 322, 334, 335, 340, 345, 346, 349, 350, 357, 358, 363], "choos": [1, 99, 195, 199, 271, 338, 340, 341, 345, 346, 347, 357, 360], "follow": [1, 2, 3, 6, 7, 8, 31, 33, 35, 36, 38, 39, 51, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 86, 90, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 137, 143, 163, 169, 180, 181, 193, 195, 197, 199, 201, 234, 241, 242, 252, 253, 254, 255, 256, 260, 261, 267, 268, 271, 272, 273, 274, 276, 303, 320, 329, 340, 341, 342, 345, 346, 347, 348, 351, 352, 356, 357, 358, 360, 362, 363], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 323, 345, 347, 362], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 121, 134, 169, 231, 235, 238, 239, 302, 303, 305, 313, 316, 320, 323, 324, 345, 346, 347, 348, 350, 357, 360, 362, 363], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 75, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 107, 110, 118, 121, 124, 125, 128, 133, 136, 137, 139, 141, 142, 143, 151, 153, 157, 160, 161, 163, 165, 166, 167, 169, 170, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 207, 208, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 236, 238, 239, 242, 243, 244, 246, 247, 250, 255, 268, 271, 274, 283, 284, 285, 286, 287, 302, 316, 342, 346, 347, 348, 349, 350, 352, 353, 357, 358, 360, 362, 363], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 118, 121, 148, 323, 345, 346, 347, 348, 352, 354, 357, 360, 362], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 37, 39, 40, 51, 53, 54, 57, 68, 71, 73, 74, 77, 86, 87, 90, 104, 105, 106, 110, 111, 112, 143, 148, 151, 155, 156, 157, 158, 165, 167, 169, 190, 193, 194, 195, 197, 199, 206, 207, 211, 215, 216, 224, 231, 233, 234, 235, 242, 246, 290, 293, 294, 295, 296, 298, 299, 300, 301, 316, 317, 334, 335, 340, 345, 346, 347, 348, 350, 351, 352, 354, 357, 358, 359, 360, 362, 363], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 323, 345, 346, 354], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 45, 46, 57, 59, 67, 77, 86, 90, 100, 104, 110, 128, 138, 139, 157, 170, 193, 195, 197, 199, 235, 240, 243, 244, 254, 272, 316, 324, 340, 345, 346, 347, 348, 349, 350, 352, 358, 359, 360, 362, 363], "rand_step": [1, 3, 84, 85, 86, 87, 89, 90, 91, 97, 98, 100, 101, 102, 104, 110, 136, 157, 167, 358, 362, 363], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 345], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 53, 55, 57, 58, 59, 345, 346, 347], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 40, 51, 53, 54, 55, 57, 58, 59, 65, 66, 73, 74, 77, 82, 83, 86, 90, 95, 96, 104, 110, 144, 155, 160, 169, 179, 199, 203, 239, 271, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 311, 338, 341, 345, 346, 347, 348, 349, 352, 354, 358, 362, 363], "pad": [1, 2, 3, 22, 36, 42, 53, 55, 57, 58, 59, 121, 180, 181, 183, 184, 199, 200, 204, 205, 206, 317], "along": [1, 2, 3, 13, 14, 22, 27, 28, 33, 35, 38, 39, 44, 53, 55, 57, 58, 59, 63, 66, 68, 73, 74, 77, 79, 120, 121, 122, 139, 141, 144, 151, 159, 199, 201, 204, 205, 209, 233, 240, 243, 244, 269, 340, 345, 346, 348, 349, 351, 357, 358, 360], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 61, 65, 66, 69, 77, 78, 80, 81, 86, 90, 104, 110, 120, 121, 125, 143, 156, 157, 159, 160, 161, 163, 165, 169, 202, 243, 252, 262, 320, 339, 346, 347, 356, 357, 358, 360, 363], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 66, 73, 74, 90, 144, 155, 178, 204, 205, 231, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 342, 348], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 40, 55, 84, 85, 86, 90, 104, 110, 111, 112, 134, 144, 167, 169, 190, 204, 205, 216, 233, 234, 241, 242, 244, 279, 284, 317, 345, 347, 348, 349, 350, 351, 357], "valid": [1, 2, 3, 22, 33, 35, 36, 44, 60, 77, 113, 144, 161, 169, 180, 181, 201, 204, 205, 231, 239, 268, 284, 285, 286, 287, 317, 342, 363], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 316, 338, 345, 346], "strategi": [1, 2, 15, 57, 71, 99, 205, 213, 235, 340, 342, 345, 346, 350, 357, 360], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 43, 45, 46, 48, 68, 86, 90, 100, 104, 105, 106, 110, 111, 113, 118, 120, 121, 130, 137, 155, 156, 160, 161, 166, 167, 169, 180, 181, 204, 205, 206, 207, 231, 233, 240, 241, 244, 247, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 303, 320, 332, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 363], "organ": [1, 2, 358, 360], "within": [1, 2, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 107, 110, 118, 121, 126, 129, 130, 148, 155, 166, 167, 169, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 257, 262, 282, 340, 346, 349, 350, 351, 352, 353, 354, 358, 362], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 53, 54, 57, 71, 82, 83, 86, 90, 95, 96, 99, 104, 105, 106, 110, 121, 128, 139, 146, 161, 162, 169, 190, 193, 194, 195, 197, 198, 199, 201, 203, 206, 207, 216, 267, 271, 279, 284, 285, 286, 290, 291, 292, 316, 320, 322, 334, 335, 340, 341, 342, 345, 346, 347, 349, 351, 353, 356, 357, 358, 359, 360, 363], "how": [1, 2, 3, 17, 18, 19, 31, 34, 40, 57, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 169, 253, 255, 266, 268, 271, 303, 305, 320, 339, 340, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363], "tabl": [1, 340, 346, 350], "summar": [1, 3, 358], "what": [1, 3, 8, 34, 43, 51, 86, 90, 104, 110, 130, 157, 170, 177, 241, 339, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 360, 362, 363], "expect": [1, 2, 3, 4, 7, 25, 31, 37, 43, 44, 66, 72, 73, 86, 90, 100, 103, 104, 110, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 139, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 169, 170, 193, 194, 195, 197, 198, 199, 206, 207, 234, 239, 243, 246, 253, 254, 255, 256, 257, 259, 260, 261, 267, 268, 269, 271, 272, 273, 274, 276, 282, 324, 339, 340, 341, 342, 345, 347, 348, 349, 350, 351, 352, 357, 358, 360, 363], "n": [1, 2, 3, 6, 7, 23, 26, 31, 32, 39, 86, 90, 104, 110, 121, 128, 133, 162, 169, 193, 194, 197, 203, 238, 239, 244, 253, 261, 269, 283, 317, 340, 342, 346, 348, 350, 357, 360, 363], "b": [1, 2, 3, 7, 8, 22, 25, 27, 33, 35, 37, 38, 39, 40, 41, 77, 193, 194, 197, 198, 206, 207, 208, 209, 215, 224, 247, 284, 285, 286, 287, 288, 290, 303, 340, 346, 359, 360], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 79, 82, 83, 86, 89, 90, 92, 93, 95, 96, 100, 101, 102, 104, 107, 108, 109, 110, 117, 119, 121, 122, 124, 125, 127, 128, 137, 138, 139, 143, 148, 151, 153, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 169, 179, 180, 181, 183, 184, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 213, 217, 218, 221, 222, 223, 225, 227, 231, 232, 234, 235, 236, 239, 242, 243, 246, 247, 250, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 282, 283, 284, 285, 286, 287, 290, 291, 292, 311, 318, 332, 336, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 72, 77, 86, 87, 89, 90, 101, 102, 104, 110, 121, 126, 129, 130, 143, 147, 148, 156, 158, 165, 167, 169, 170, 177, 193, 197, 233, 239, 243, 275, 284, 285, 286, 287, 288, 290, 310, 320, 322, 336, 339, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "p": [1, 2, 4, 68, 71, 87, 108, 109], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 51, 53, 55, 57, 58, 59, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 125, 126, 127, 129, 143, 148, 152, 156, 157, 159, 160, 161, 163, 165, 166, 169, 193, 196, 197, 201, 206, 218, 222, 223, 243, 246, 252, 253, 254, 256, 257, 259, 260, 261, 267, 269, 271, 272, 273, 274, 276, 322, 334, 335, 336, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 363], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 77, 86, 90, 104, 110, 126, 127, 129, 159, 161, 170, 199, 201, 207, 240, 243, 244, 246, 247, 252, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 284, 285, 286, 287, 311, 322, 334, 335, 336, 338, 340, 342, 345, 346, 347, 348, 349, 350, 352, 353, 357, 358, 360, 363], "dimens": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 53, 55, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 104, 110, 111, 112, 120, 121, 122, 133, 139, 141, 144, 151, 154, 159, 162, 167, 180, 181, 182, 187, 195, 197, 199, 201, 204, 205, 206, 208, 209, 214, 215, 219, 220, 221, 222, 225, 233, 238, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 336, 340, 345, 346, 347, 348, 349, 357, 358, 360], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 107, 110, 116, 120, 122, 144, 151, 157, 158, 161, 167, 169, 177, 191, 193, 197, 199, 200, 238, 239, 255, 261, 264, 268, 269, 271, 272, 276, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 320, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "adapt": [1, 117, 155, 268, 345, 358], "equal": [1, 13, 14, 16, 51, 66, 73, 74, 101, 104, 110, 138, 139, 180, 181, 193, 195, 197, 199, 201, 207, 275, 279, 311, 334, 335, 345, 347, 359], "introduc": [1, 2, 104, 110, 193, 195, 197, 199, 239, 345], "some": [1, 2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 46, 53, 59, 62, 63, 68, 77, 79, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 111, 112, 143, 161, 163, 169, 170, 183, 195, 199, 220, 244, 245, 246, 303, 311, 323, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 360, 362, 363], "confus": [1, 31, 86, 90, 104, 110, 161, 169], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 33, 34, 35, 38, 40, 41, 44, 51, 53, 55, 57, 58, 59, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 79, 86, 89, 90, 91, 100, 104, 110, 124, 127, 128, 145, 152, 159, 163, 167, 169, 193, 195, 199, 209, 210, 232, 234, 235, 242, 244, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 317, 329, 334, 335, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 362, 363], "better": [1, 3, 8, 9, 13, 14, 195, 199, 341, 347, 349, 358], "consist": [1, 2, 3, 31, 34, 37, 40, 41, 54, 57, 86, 90, 104, 110, 137, 166, 169, 181, 201, 345, 346, 347, 358, 359, 363], "interact": [1, 2, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 57, 86, 90, 104, 110, 161, 240, 244, 345, 347, 349, 350, 352, 357, 358, 363], "keep": [1, 3, 4, 7, 8, 14, 34, 37, 40, 41, 72, 77, 104, 110, 139, 143, 165, 167, 169, 177, 239, 313, 320, 345, 346, 347, 348, 352, 353, 354, 357, 358, 360, 362, 363], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 51, 54, 143, 165, 254, 256, 259, 261, 272, 274, 276, 345, 346, 350, 351, 357, 360, 363], "interchang": [1, 347, 349, 353, 359, 360], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 104, 110, 111, 112, 128, 138, 149, 161, 169, 170, 180, 181, 189, 193, 195, 199, 201, 206, 207, 234, 240, 244, 253, 255, 256, 259, 260, 261, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 279, 284, 316, 320, 341, 345, 346, 348, 352, 357, 358, 360, 363], "wherea": [1, 2, 21, 57, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 128, 169, 269, 342, 353], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 46, 54, 57, 59, 65, 66, 86, 90, 100, 104, 110, 143, 157, 161, 165, 167, 169, 195, 197, 199, 204, 205, 235, 236, 239, 240, 244, 257, 260, 261, 274, 282, 284, 285, 286, 287, 288, 345, 346, 347, 349, 351, 352, 353, 357, 358, 359], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 51, 57, 66, 73, 77, 86, 90, 104, 110, 144, 245, 246, 311, 320, 340, 345, 346, 347, 352, 356, 362, 363], "doesn": [1, 4, 11, 77, 101, 126, 129, 349], "understood": [1, 345], "serv": [1, 17, 19, 20, 92, 360, 363], "basi": [1, 77, 206, 360], "simplest": [1, 77, 247, 345, 347, 348, 350, 357, 360, 363], "scenario": [1, 2, 104, 111, 112, 345, 350, 357, 358], "transit": [1, 31, 53, 57, 74, 77, 86, 90, 104, 110, 169, 249, 345, 348, 349, 350, 352, 358, 360], "sampl": [1, 4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 79, 86, 90, 100, 103, 104, 110, 120, 121, 144, 148, 171, 172, 175, 176, 179, 188, 196, 203, 204, 205, 213, 214, 217, 222, 223, 227, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 253, 254, 255, 256, 257, 259, 268, 270, 271, 276, 311, 317, 320, 323, 338, 340, 345, 346, 347, 348, 349, 350, 352, 354, 357, 359, 362, 363], "attent": [1, 2, 8, 345, 348, 363], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 86, 90, 100, 104, 110, 125, 128, 139, 143, 157, 160, 161, 163, 165, 169, 177, 179, 190, 191, 193, 197, 203, 216, 220, 227, 233, 234, 235, 238, 239, 242, 243, 244, 245, 246, 248, 252, 256, 257, 259, 283, 284, 285, 286, 287, 288, 290, 312, 316, 332, 340, 342, 345, 346, 347, 349, 350, 351, 352, 353, 357, 358, 363], "built": [1, 2, 3, 5, 7, 68, 82, 83, 89, 95, 96, 103, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 277, 282, 330, 332, 333, 336, 345, 346, 347, 348, 351, 353, 360, 363], "flatten": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 77, 118, 133, 317, 348, 357], "suffici": [1, 4, 345], "preprocess": [1, 2, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 346], "popul": [1, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 136, 157, 345, 347, 348, 350, 352, 358, 360], "replaybuff": [1, 2, 34, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 80, 121, 144, 148, 169, 257, 262, 282, 330, 332, 338, 347, 352, 354, 357, 359, 360, 362], "lazytensorstorag": [1, 2, 34, 37, 40, 41, 65, 77, 148, 169, 347, 354, 357, 360], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 37, 77, 86, 87, 90, 104, 110, 116, 118, 137, 157, 169, 225, 233, 238, 241, 263, 265, 284, 287, 295, 296, 300, 301, 332, 341, 345, 346, 357, 360, 362, 363], "reshap": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 73, 77, 118, 195, 199, 201, 347, 357], "extend": [1, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 73, 74, 76, 77, 78, 80, 81, 120, 148, 169, 317, 342, 345, 346, 347, 348, 352, 354, 357, 359, 360, 362], "slice": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 120, 360], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 77, 94, 352, 357], "achiev": [1, 2, 3, 4, 31, 86, 90, 94, 104, 110, 156, 169, 178, 317, 342, 345, 346, 347, 348, 357, 358, 360, 363], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 44, 57, 59, 60, 77, 86, 87, 90, 94, 104, 105, 110, 111, 112, 118, 121, 143, 160, 161, 163, 166, 167, 169, 174, 177, 180, 181, 183, 184, 185, 186, 187, 192, 195, 199, 201, 202, 206, 207, 232, 244, 257, 262, 272, 274, 282, 303, 317, 324, 325, 326, 332, 334, 335, 340, 345, 346, 347, 348, 350, 353, 357, 358, 359, 360, 362, 363], "multidimension": [1, 2, 40, 65, 66, 360], "slicesampl": [1, 2, 51, 66, 360], "sampler": [1, 2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 144, 257, 262, 282, 345, 347, 357, 360], "One": [1, 2, 4, 8, 30, 32, 44, 77, 82, 83, 121, 148, 163, 213, 231, 243, 247, 275, 279, 307, 345, 346, 360, 363], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 73, 74, 75, 76, 77, 79, 82, 86, 87, 90, 95, 104, 105, 106, 107, 110, 111, 118, 121, 124, 130, 134, 137, 139, 141, 152, 156, 157, 158, 161, 162, 167, 169, 180, 181, 190, 195, 199, 201, 204, 205, 206, 207, 216, 227, 233, 234, 238, 240, 241, 242, 243, 244, 247, 248, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 275, 276, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 329, 345, 346, 347, 348, 350, 356, 358, 360], "ensur": [1, 2, 3, 31, 34, 40, 65, 66, 72, 86, 90, 104, 110, 121, 143, 155, 161, 163, 167, 169, 233, 340, 346, 347, 358, 360], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 77, 79, 84, 85, 86, 89, 90, 91, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 118, 120, 122, 126, 129, 130, 131, 137, 139, 141, 145, 146, 148, 152, 155, 157, 159, 167, 168, 169, 170, 174, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 221, 224, 227, 228, 229, 230, 232, 233, 234, 238, 240, 241, 242, 243, 246, 247, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 279, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 311, 317, 320, 332, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 360, 362, 363], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 51, 196, 222, 223, 252, 339, 345, 346, 347, 348, 351, 357, 359, 363], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 33, 35, 75, 77, 86, 90, 94, 99, 104, 105, 106, 110, 121, 124, 133, 143, 146, 158, 161, 165, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 208, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 241, 242, 243, 247, 250, 252, 261, 272, 273, 274, 276, 283, 288, 303, 320, 336, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 360, 362, 363], "dimension": [1, 34, 37, 40, 41, 128, 195, 199, 284, 289, 297, 357], "num_slic": [1, 2, 51, 57, 66, 73, 74, 360], "4": [1, 2, 3, 7, 23, 25, 26, 27, 31, 32, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 73, 74, 79, 82, 83, 84, 85, 86, 90, 95, 96, 97, 98, 99, 100, 102, 104, 108, 109, 110, 117, 118, 121, 130, 148, 155, 156, 167, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 197, 198, 200, 201, 203, 206, 207, 210, 211, 212, 213, 214, 215, 216, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 302, 340, 344, 345, 346, 347, 348, 350, 352, 353, 357, 358, 359, 360, 361, 362, 363], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 118, 148, 348, 352, 360, 362], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 118, 121, 148, 320, 323, 332, 342, 345, 346, 347, 348, 352, 354, 357, 360, 362], "dim": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 121, 122, 141, 157, 162, 167, 198, 200, 220, 225, 238, 336, 346, 347, 358, 360], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 53, 55, 57, 66, 73, 74, 86, 90, 94, 101, 104, 107, 110, 118, 125, 143, 157, 160, 161, 163, 165, 169, 201, 225, 243, 245, 246, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 303, 305, 340, 342, 345, 346, 347, 348, 349, 350, 351, 353, 357, 358, 360, 363], "ndim": [1, 2, 34, 37, 40, 41, 62, 63, 77, 79, 86, 90, 104, 110, 169, 238], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 77, 86, 90, 101, 105, 106, 107, 110, 333, 338, 345, 346, 347, 349, 356, 362, 363], "make_env": [1, 3, 104, 110, 112, 167, 325, 326, 345, 346, 363], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 65, 71, 86, 90, 104, 110, 161, 189, 216, 234, 241, 242, 243, 244, 262, 322, 338, 342, 345, 346, 349, 350, 354, 360, 363], "behav": [1, 3, 92, 100, 193, 197, 213, 260, 267, 359], "iif": 1, "accordingli": [1, 155, 156, 197, 241, 348], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 93, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 117, 118, 121, 125, 128, 130, 131, 137, 139, 141, 143, 145, 146, 148, 151, 152, 155, 156, 157, 159, 160, 161, 163, 165, 169, 174, 179, 180, 181, 183, 184, 185, 187, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 206, 207, 210, 213, 215, 225, 227, 228, 229, 230, 233, 234, 240, 242, 243, 246, 247, 248, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 290, 293, 294, 295, 296, 298, 299, 300, 301, 303, 319, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 357, 358, 359, 360, 361, 362, 363], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 57, 65, 77, 130, 170, 233, 243, 350, 351, 353, 357], "current": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 74, 86, 90, 92, 101, 104, 110, 118, 121, 144, 156, 157, 158, 160, 161, 169, 171, 172, 177, 191, 200, 218, 238, 239, 253, 255, 262, 268, 271, 273, 274, 306, 342, 345, 346, 347, 348, 351, 357, 358, 360, 362, 363], "fulli": [1, 8, 31, 86, 90, 104, 110, 169, 194, 198, 346, 351, 358, 360], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 101, 104, 105, 106, 110, 111, 112, 117, 133, 143, 144, 148, 161, 163, 167, 169, 170, 178, 180, 181, 187, 201, 209, 232, 238, 243, 244, 245, 246, 253, 254, 256, 257, 259, 260, 261, 267, 269, 271, 272, 273, 274, 276, 284, 286, 287, 308, 320, 339, 345, 346, 347, 350, 351, 357, 358, 360, 362, 363], "consecut": [1, 3, 51, 72, 94, 199, 239, 348, 349, 352, 357, 360, 363], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 57, 86, 87, 89, 90, 101, 102, 104, 110, 143, 165, 169, 320, 336, 346, 347, 349, 350], "therebi": [1, 341, 345, 346], "interrupt": [1, 2, 90, 238, 290], "These": [1, 2, 7, 31, 39, 54, 59, 86, 90, 104, 110, 111, 143, 165, 169, 340, 341, 345, 347, 357, 358, 360, 363], "tool": [1, 2, 3, 5, 348, 349, 358, 360, 363], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 86, 89, 90, 104, 110, 114, 116, 200, 342, 345, 347, 348, 349, 352, 353, 358], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 338], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 338], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 137, 139, 141, 143, 145, 146, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 169, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 251, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 305, 311, 318, 319, 329, 332, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "multiprocess": [1, 2, 3, 17, 18, 19, 51, 59, 87, 88, 104, 110, 167, 345, 346, 347, 348, 357, 358, 359, 363], "synchron": [1, 13, 18, 20, 101, 334, 335, 346, 347], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 86, 90, 101, 104, 110, 126, 129, 156, 161, 167, 169, 171, 175, 176, 188, 195, 196, 199, 213, 221, 222, 223, 240, 244, 269, 316, 345, 346, 348, 357, 362, 363], "find": [1, 4, 6, 7, 17, 18, 19, 34, 36, 42, 73, 74, 197, 231, 239, 314, 318, 345, 346, 350, 351, 357], "folder": [1, 2, 33, 35, 38, 111, 346], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 87, 89, 90, 91, 92, 100, 104, 105, 106, 110, 111, 112, 113, 120, 121, 124, 125, 126, 127, 129, 132, 137, 138, 139, 143, 151, 153, 157, 158, 160, 161, 163, 165, 167, 169, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 243, 244, 246, 247, 250, 264, 269, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 315, 320, 323, 334, 335, 336, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 362, 363], "variou": [1, 2, 3, 195, 199, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 277, 282, 303, 334, 335, 345, 346, 347, 349, 350, 351, 353, 357, 360, 363], "machin": [1, 2, 7, 17, 18, 19, 31, 56, 94, 357], "wonder": 1, "why": [1, 2, 3, 358, 363], "instead": [1, 4, 7, 8, 11, 26, 31, 57, 86, 90, 104, 110, 133, 157, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 253, 255, 257, 260, 261, 262, 267, 268, 271, 272, 273, 274, 282, 284, 288, 292, 336, 340, 349, 350, 354, 358, 360, 363], "lower": [1, 2, 3, 20, 24, 124, 167, 217, 218, 247, 347, 358], "io": [1, 51, 57, 95, 96, 101, 197, 198], "footprint": [1, 2, 360], "commun": [1, 2, 3, 104, 339, 347, 363], "yet": [1, 82, 83, 95, 96, 359], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 47, 48, 49, 53, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 107, 110, 111, 112, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 174, 178, 190, 216, 218, 227, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 246, 247, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 329, 340, 345, 346, 347, 348, 349, 350, 356, 357, 362], "plai": [1, 3, 105, 106, 121, 346, 347, 351, 360, 363], "role": [1, 3, 346, 351, 363], "opposit": 1, "direct": [1, 2, 31, 86, 90, 104, 110, 169, 193, 197, 269, 346, 351], "sinc": [1, 2, 3, 4, 5, 7, 31, 34, 37, 40, 41, 51, 59, 74, 77, 86, 90, 104, 105, 106, 107, 110, 169, 170, 177, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 247, 250, 345, 346, 347, 348, 349, 350, 351, 358, 359, 360, 362, 363], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 58, 59, 101, 284, 285, 286, 287, 348, 357], "share": [1, 3, 6, 8, 22, 33, 35, 38, 62, 63, 64, 66, 73, 75, 76, 79, 87, 104, 110, 167, 195, 199, 206, 207, 228, 229, 230, 253, 255, 256, 260, 261, 267, 268, 271, 272, 273, 274, 276, 336, 338, 340, 347, 348, 354, 356, 357, 362, 363], "among": [1, 3, 105, 106, 357], "prohibit": [1, 3, 77], "slow": [1, 3, 4, 33, 35, 38], "compar": [1, 3, 57, 77, 316, 341, 345, 347, 350, 351, 357, 360, 363], "gpu": [1, 7, 8, 31, 62, 63, 79, 86, 90, 94, 104, 110, 169, 345, 347, 348, 357, 363], "nativ": [1, 7, 9, 55, 86, 90, 104, 110, 121, 303, 348, 360], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 40, 51, 65, 66, 77, 82, 83, 90, 139, 167, 179, 188, 191, 193, 195, 197, 199, 200, 203, 214, 221, 231, 240, 244, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 274, 276, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 340, 341, 345, 346, 347, 350, 357, 358, 360, 362, 363], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 71, 73, 74, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 118, 122, 124, 125, 143, 152, 157, 159, 160, 161, 163, 165, 169, 195, 199, 200, 204, 205, 206, 227, 231, 232, 233, 235, 236, 238, 239, 240, 241, 243, 244, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 282, 284, 285, 286, 287, 288, 292, 310, 333, 345, 346, 347, 350, 353, 357, 360, 363], "build": [1, 3, 7, 22, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 91, 92, 95, 96, 101, 104, 107, 110, 111, 112, 148, 167, 169, 179, 195, 199, 203, 237, 240, 244, 320, 327, 328, 330, 331, 340, 342, 347, 348, 350, 351, 352, 353, 357, 358, 359, 362, 363], "mani": [1, 2, 3, 4, 37, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107, 253, 255, 261, 268, 271, 272, 276, 340, 345, 346, 347, 349, 350, 352, 354, 357, 358, 360, 363], "eg": [1, 2, 3, 11, 33, 35, 38, 62, 63, 64, 75, 76, 79, 84, 85, 86, 89, 90, 91, 92, 94, 104, 107, 110, 128, 155, 161, 206, 232, 303], "gymnasium": [1, 3, 5, 11, 86, 89, 90, 91, 97, 98, 104, 110, 114, 116, 131, 152, 155, 166, 346, 347, 358, 362], "warn": [1, 3, 231, 235, 236, 239, 346], "quickli": [1, 3, 346, 357, 363], "becom": [1, 3, 4, 20, 193, 197, 357, 363], "quit": [1, 3, 51, 86, 90, 104, 110, 340, 345, 346, 347, 350, 357, 363], "annoi": [1, 3], "By": [1, 2, 3, 32, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 107, 110, 111, 112, 225, 244, 269, 316, 336, 345, 359, 360, 363], "filter": [1, 2, 3, 4, 44, 66, 73, 74, 253, 254, 256, 260, 261, 267, 271, 272, 274, 349], "out": [1, 2, 3, 4, 5, 9, 20, 31, 44, 53, 57, 66, 73, 74, 86, 90, 104, 105, 106, 110, 157, 169, 170, 193, 194, 197, 204, 205, 208, 209, 227, 232, 233, 234, 239, 240, 241, 242, 243, 244, 280, 281, 342, 345, 346, 347, 348, 349, 350, 352, 357, 358, 360, 362, 363], "still": [1, 2, 3, 9, 57, 82, 83, 86, 90, 95, 96, 104, 110, 231, 268, 269, 345, 346, 348, 356, 358, 360, 363], "wish": [1, 3, 13, 14, 16, 57, 116, 351, 360], "displai": [1, 3, 7, 86, 90, 104, 110, 320, 342, 345, 346, 357, 358], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 121, 122, 125, 126, 129, 130, 131, 133, 136, 137, 138, 139, 141, 143, 144, 145, 146, 148, 150, 152, 155, 157, 159, 160, 161, 162, 163, 165, 167, 169, 170, 177, 178, 179, 180, 181, 183, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 215, 216, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 282, 284, 285, 286, 287, 293, 294, 295, 296, 298, 299, 300, 301, 310, 313, 314, 316, 317, 318, 320, 329, 336, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "central": [2, 206, 345, 346, 349, 357, 360], "part": [2, 4, 8, 31, 39, 51, 54, 55, 57, 58, 59, 82, 86, 90, 95, 104, 110, 120, 139, 148, 151, 169, 195, 199, 248, 311, 336, 345, 347, 348, 354, 358, 363], "algorithm": [2, 3, 8, 9, 100, 253, 271, 272, 274, 338, 341, 342, 345, 346, 347, 348, 351, 352, 353, 357, 359, 360], "implement": [2, 3, 9, 11, 13, 14, 15, 31, 75, 86, 90, 100, 101, 104, 110, 118, 125, 126, 127, 131, 134, 137, 145, 146, 152, 155, 160, 161, 167, 169, 180, 193, 194, 195, 196, 197, 198, 199, 221, 222, 223, 253, 254, 258, 259, 260, 267, 269, 270, 271, 273, 274, 311, 325, 329, 340, 342, 345, 346, 347, 348, 350, 351, 352, 357, 358, 362], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 34, 37, 39, 40, 41, 51, 53, 57, 59, 72, 74, 77, 82, 83, 86, 87, 90, 94, 95, 96, 104, 110, 121, 137, 143, 146, 163, 166, 167, 169, 170, 179, 199, 200, 206, 207, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "give": [2, 3, 7, 40, 54, 86, 90, 100, 104, 110, 121, 339, 341, 345, 346, 357, 358, 359, 362], "abil": [2, 269, 358, 360], "panel": [2, 347], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 53, 59, 77, 118, 121, 130, 195, 199, 260, 267, 274, 277, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "includ": [2, 3, 4, 7, 9, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 79, 86, 90, 100, 104, 110, 156, 161, 167, 169, 269, 274, 323, 340, 342, 345, 346, 347, 348, 357, 358, 360, 363], "almost": [2, 348], "physic": [2, 6, 7, 104, 107, 342, 345, 357, 358], "theori": 2, "crude": 2, "made": [2, 3, 31, 37, 51, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 169, 239, 257, 282, 345, 346, 348, 357, 359, 360], "liststorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 360], "veri": [2, 3, 95, 96, 346, 349, 352, 358, 360, 362, 363], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 32, 33, 35, 38, 51, 57, 66, 68, 71, 73, 74, 82, 83, 86, 90, 95, 96, 104, 110, 118, 146, 169, 177, 201, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 277, 279, 282, 340, 342, 345, 347, 348, 349, 350, 351, 357, 358, 360, 363], "complex": [2, 31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 345, 346, 349, 350], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 120, 121, 122, 125, 126, 128, 129, 130, 131, 133, 136, 139, 141, 143, 144, 145, 146, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 253, 254, 256, 257, 259, 260, 261, 264, 265, 267, 269, 271, 272, 273, 274, 276, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 329, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 362, 363], "contigu": [2, 8, 54, 57, 58, 86, 90, 104, 110, 174, 347, 357, 358, 360, 362, 363], "tensorstorag": [2, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 352, 360], "lazymemmapstorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 120, 121, 345, 346, 348, 352, 359, 360], "citizen": 2, "pytre": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 76, 77, 84, 85, 86, 90, 104, 110, 117, 128, 130, 136, 137, 139, 144, 152, 169, 177, 183, 189, 190, 195, 198, 199, 200, 201, 210, 214, 215, 216, 233, 234, 238, 241, 242, 247, 253, 254, 256, 260, 261, 263, 267, 269, 271, 272, 273, 274, 276, 284, 285, 286, 287, 303, 314, 316, 318, 327, 328, 360], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 35, 38, 44, 66, 71, 73, 74, 86, 89, 90, 91, 104, 110, 111, 112, 157, 161, 169, 240, 244, 274, 316, 334, 335, 336, 342, 346, 347, 349, 351, 358, 363], "nest": [2, 3, 25, 27, 31, 33, 35, 37, 38, 47, 62, 63, 68, 79, 86, 89, 90, 91, 104, 110, 121, 155, 158, 169, 178, 238, 284, 285, 286, 287, 288, 342, 346, 347, 357, 358, 360, 362], "construct": [2, 5, 31, 34, 37, 40, 41, 51, 68, 86, 89, 90, 104, 105, 110, 126, 129, 169, 170, 195, 199, 218, 244, 320, 340, 346, 347, 348, 350, 358, 360, 363], "ram": [2, 89, 91, 360, 363], "prealloc": [2, 3, 358], "ve": [2, 39, 345, 348, 354], "been": [2, 3, 5, 7, 8, 17, 19, 20, 39, 68, 72, 86, 90, 94, 104, 110, 137, 155, 156, 160, 193, 197, 231, 236, 238, 239, 345, 346, 347, 348, 356, 357, 358, 360, 363], "here": [2, 3, 4, 7, 8, 9, 10, 58, 59, 77, 84, 85, 86, 90, 94, 104, 105, 106, 110, 121, 310, 340, 341, 345, 346, 347, 348, 349, 350, 352, 354, 357, 358, 360, 362, 363], "start": [2, 3, 4, 5, 13, 20, 44, 51, 59, 66, 73, 74, 87, 99, 104, 110, 177, 315, 344, 345, 346, 355, 357, 358, 360, 361, 363], "replay_buff": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 317, 332, 345, 346, 347, 352, 357, 360], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 120, 121, 124, 130, 131, 136, 137, 139, 141, 143, 145, 146, 147, 148, 151, 152, 153, 155, 156, 157, 158, 160, 165, 167, 169, 174, 177, 178, 179, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 197, 198, 199, 201, 203, 206, 207, 210, 215, 216, 224, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 247, 248, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 303, 313, 316, 329, 332, 340, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "rb": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 121, 148, 169, 346, 348, 352, 354, 357, 359, 360, 362], "10": [2, 7, 21, 22, 25, 31, 34, 37, 39, 40, 41, 42, 44, 62, 63, 65, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 100, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 120, 121, 156, 158, 159, 169, 179, 182, 183, 185, 187, 189, 193, 194, 197, 198, 200, 203, 214, 225, 235, 236, 239, 240, 247, 254, 257, 259, 261, 271, 272, 273, 276, 282, 284, 285, 286, 287, 290, 311, 342, 344, 345, 346, 347, 348, 349, 350, 354, 357, 358, 360, 361, 362, 363], "add": [2, 3, 4, 6, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 68, 69, 77, 78, 80, 81, 86, 90, 104, 110, 121, 137, 161, 169, 195, 199, 208, 237, 253, 315, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 360, 362], "string": [2, 17, 18, 19, 31, 36, 44, 60, 86, 90, 104, 110, 116, 143, 155, 165, 169, 195, 199, 233, 238, 240, 241, 252, 302, 319, 329, 341, 345, 347, 348, 360], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 73, 74, 77, 79, 103, 121, 144, 153, 156, 180, 181, 193, 194, 197, 227, 231, 233, 238, 243, 244, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 274, 276, 311, 345, 347, 350, 352, 360, 363], "30": [2, 37, 55, 138, 217, 218, 305, 346, 347, 352, 357, 358, 360], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 76, 77, 79, 86, 87, 88, 89, 90, 99, 100, 104, 105, 106, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 133, 135, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 314, 315, 316, 317, 318, 319, 320, 324, 325, 326, 329, 332, 334, 335, 336, 340, 342, 345, 346, 347, 348, 351, 352, 357, 358, 360, 362, 363], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 118, 120, 121, 122, 123, 125, 128, 133, 134, 138, 139, 141, 143, 144, 147, 154, 155, 158, 161, 162, 163, 165, 169, 170, 174, 179, 180, 181, 182, 183, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 253, 254, 255, 261, 263, 264, 268, 269, 270, 271, 272, 276, 284, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 311, 312, 313, 316, 317, 320, 322, 329, 330, 334, 335, 336, 358, 360], "tell": [2, 3, 4, 7, 105, 106, 345, 348, 352, 357], "our": [2, 3, 7, 8, 17, 37, 121, 303, 340, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 359, 360, 362], "far": [2, 39, 196, 222, 223, 354, 358, 363], "restrict": [2, 3, 346, 359, 360, 363], "empti": [2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 86, 90, 103, 104, 110, 126, 129, 143, 145, 158, 161, 163, 165, 307, 345, 358, 360], "64": [2, 3, 33, 35, 38, 51, 57, 68, 121, 147, 183, 184, 192, 195, 199, 207, 215, 282, 345, 346, 347, 348, 350, 354, 356, 358, 360, 362, 363], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 73, 74, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 119, 125, 126, 127, 128, 129, 130, 131, 137, 139, 141, 143, 145, 146, 148, 152, 155, 157, 159, 160, 161, 163, 165, 169, 170, 174, 177, 178, 179, 189, 190, 193, 194, 195, 197, 198, 199, 203, 208, 209, 215, 216, 224, 227, 228, 229, 230, 232, 233, 234, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 290, 329, 340, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "unit8": 2, "img": 2, "randint": [2, 44, 68, 159, 360], "255": [2, 68, 159, 358, 360], "uint8": [2, 3, 33, 35, 38, 46, 51, 57, 84, 85, 130, 141, 159, 346, 353, 359, 360, 362], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 100, 104, 108, 109, 110, 111, 112, 118, 120, 121, 126, 129, 130, 131, 136, 137, 141, 145, 146, 148, 151, 152, 155, 157, 166, 167, 169, 174, 177, 179, 194, 195, 198, 199, 203, 218, 238, 249, 253, 254, 256, 257, 259, 260, 261, 262, 267, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 314, 316, 318, 346, 348, 350, 353, 354, 356, 358, 359, 362, 363], "ask": [2, 8, 51, 57, 66, 73, 74, 303, 347, 348, 349, 350, 357, 359, 363], "do": [2, 3, 4, 7, 59, 86, 90, 104, 110, 111, 112, 144, 166, 167, 177, 207, 208, 229, 284, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 362, 363], "automat": [2, 3, 5, 59, 62, 63, 68, 79, 86, 89, 90, 91, 104, 105, 106, 110, 126, 129, 139, 166, 180, 227, 238, 240, 340, 345, 347, 349, 350, 357, 358, 360, 362], "hand": [2, 3, 7, 20, 25, 357, 358], "look": [2, 3, 5, 7, 8, 31, 86, 90, 99, 104, 105, 106, 110, 143, 144, 163, 169, 240, 244, 245, 246, 341, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 360, 362, 363], "assum": [2, 3, 6, 25, 32, 39, 40, 41, 53, 55, 57, 58, 59, 73, 86, 90, 104, 110, 120, 123, 133, 143, 144, 151, 157, 161, 163, 165, 174, 195, 199, 200, 225, 247, 257, 262, 274, 282, 293, 294, 295, 296, 298, 299, 300, 301, 303, 345, 347, 348, 356, 358], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 34, 37, 40, 41, 53, 72, 84, 85, 86, 89, 91, 92, 157, 196, 215, 222, 223, 345, 348, 357, 358, 360, 362], "leav": [2, 25, 33, 35, 37, 38, 86, 170, 178, 345, 352, 360], "tree": [2, 33, 35, 38, 86, 90, 104, 110, 360], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 84, 85, 86, 87, 89, 90, 91, 92, 104, 110, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 135, 136, 137, 139, 141, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 180, 181, 188, 195, 199, 201, 206, 207, 221, 227, 232, 233, 240, 241, 243, 244, 247, 248, 254, 261, 268, 270, 272, 274, 317, 322, 340, 345, 347, 356, 357, 358, 360, 363], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 121, 346, 347, 352, 360, 362, 363], "throw": [2, 31, 33, 35, 38, 86, 90, 104, 110, 169, 363], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 121, 125, 126, 129, 130, 131, 141, 145, 146, 148, 152, 155, 157, 160, 161, 169, 177, 178, 179, 187, 189, 190, 195, 199, 203, 215, 216, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 246, 247, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 311, 317, 329, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "max": [2, 22, 32, 35, 40, 44, 60, 65, 66, 77, 128, 158, 221, 222, 223, 232, 239, 254, 255, 261, 270, 272, 274, 345, 347, 348, 354, 357], "label": [2, 35, 36, 39, 44, 345, 360], "100": [2, 13, 14, 15, 16, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 82, 83, 86, 90, 95, 96, 104, 110, 124, 130, 139, 148, 153, 155, 169, 206, 234, 238, 303, 312, 332, 346, 347, 348, 349, 351, 354, 356, 357, 358, 359, 360, 362, 363], "rb_pytre": 2, "randn": [2, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 120, 139, 174, 182, 183, 187, 189, 190, 193, 194, 197, 198, 200, 204, 205, 206, 210, 213, 214, 216, 227, 228, 229, 230, 232, 233, 240, 241, 243, 246, 247, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 284, 285, 286, 287, 319, 340, 360, 362, 363], "c": [2, 3, 6, 7, 25, 33, 35, 37, 38, 40, 41, 56, 139, 159, 197, 198, 346, 360], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 53, 63, 73, 74, 77, 79, 86, 90, 104, 110, 118, 120, 122, 126, 128, 129, 139, 145, 148, 169, 174, 177, 179, 184, 185, 186, 192, 193, 194, 195, 197, 198, 199, 200, 204, 205, 207, 215, 224, 235, 236, 239, 242, 250, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 290, 348, 360, 362], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 90, 93, 104, 110, 116, 118, 121, 124, 126, 129, 137, 146, 153, 167, 170, 174, 207, 210, 225, 284, 285, 286, 287, 311, 319, 352, 356, 360, 363], "len": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 79, 141, 180, 181, 201, 207, 345, 352, 354, 358, 359, 360, 362], "ambigu": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 90, 104, 110, 118, 125, 143, 157, 160, 161, 163, 165, 169, 243, 341, 345, 349, 358], "deal": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 345, 347, 357, 360], "interpret": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 346], "put": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 90, 111, 112, 167, 310, 336, 340, 346, 347, 348, 349, 358], "solv": [2, 4, 9, 10, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 339, 345, 346, 347, 352, 354, 357, 358, 360], "clear": [2, 25, 27, 28, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 94, 104, 110, 169, 312, 349, 352], "cut": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "distinct": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 118, 351, 356], "view": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 169, 190, 193, 197, 201, 349, 358, 360, 362, 363], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 121, 122, 155, 156, 157, 158, 161, 169, 178, 180, 181, 201, 204, 205, 207, 238, 239, 241, 242, 250, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 324, 336, 339, 342, 347, 348, 352, 353, 354, 358, 360, 363], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 25, 27, 57, 82, 83, 86, 90, 94, 95, 96, 99, 104, 105, 106, 110, 126, 129, 144, 201, 215, 238, 240, 244, 245, 246, 250, 284, 285, 286, 287, 340, 345, 346, 347, 349, 351, 356, 357, 358, 359, 360, 363], "collate_fn": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 360, 362], "__init__": [2, 3, 7, 86, 100, 116, 117, 118, 126, 129, 145, 179, 190, 193, 197, 203, 248, 254, 256, 261, 267, 272, 274, 276, 342, 358, 363], "major": 2, "worri": [2, 42], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 62, 63, 64, 66, 73, 75, 76, 79, 86, 87, 90, 94, 104, 110, 178, 345, 347, 349, 357, 358, 363], "though": [2, 4, 86, 90, 104, 110, 201, 347, 357], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 39, 43, 45, 46, 86, 90, 104, 110, 138, 157, 196, 222, 223, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 346, 350, 353, 358, 360, 363], "latter": [2, 17, 18, 19, 31, 53, 86, 90, 104, 110, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 271, 334, 335], "inv": [2, 3, 124, 128, 141, 148, 153, 358], "method": [2, 3, 4, 11, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 77, 79, 86, 89, 90, 91, 92, 104, 107, 110, 118, 121, 125, 126, 127, 130, 131, 133, 137, 139, 143, 145, 146, 147, 148, 152, 155, 157, 160, 161, 163, 165, 169, 179, 200, 227, 228, 229, 230, 232, 233, 234, 235, 237, 240, 241, 242, 243, 244, 245, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 288, 302, 333, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 358, 360, 363], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 45, 46, 86, 90, 104, 110, 128, 131, 152, 159, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 284, 360], "multithread": [2, 3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 101, 102, 352, 360], "thread": [2, 13, 14, 16, 33, 35, 38, 82, 83, 95, 96, 104, 110], "prefetch": [2, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 345, 346, 348, 360], "advis": [2, 54, 363], "benchmark": [2, 3, 9, 83, 95, 96, 357], "techniqu": [2, 8, 346, 352, 360], "real": [2, 5, 57, 244, 341, 348, 358], "life": [2, 130], "adopt": [2, 3, 5, 345, 363], "throughput": [2, 9, 345], "constant": [2, 121, 139, 156, 342, 345, 347, 348, 363], "throughout": [2, 3, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 347, 363], "further": [2, 3, 5, 345, 347, 349], "refin": [2, 57, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282], "coupl": [2, 348, 350, 351, 358, 360], "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 33, 34, 35, 37, 38, 51, 53, 57, 62, 63, 66, 73, 74, 75, 76, 77, 79, 86, 87, 90, 104, 110, 117, 120, 122, 126, 128, 129, 137, 139, 144, 156, 157, 159, 161, 167, 227, 235, 236, 240, 241, 244, 284, 285, 286, 287, 288, 307, 340, 344, 345, 346, 347, 348, 355, 357, 358, 360, 361, 362, 363], "first_elt": 2, "128": [2, 51, 53, 57, 74, 82, 83, 95, 96, 184, 187, 346, 348, 354, 358, 359, 360], "wa": [2, 3, 5, 7, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 104, 110, 161, 170, 178, 197, 253, 255, 266, 268, 271, 273, 275, 290, 341, 346, 347, 349, 350, 356, 360, 362], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 118, 121, 122, 126, 127, 128, 129, 136, 139, 145, 146, 148, 151, 155, 157, 158, 159, 167, 169, 174, 177, 178, 180, 181, 183, 184, 185, 186, 187, 190, 192, 195, 201, 204, 205, 206, 207, 210, 213, 216, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 241, 243, 246, 248, 269, 329, 332, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 122], "larger": [2, 4, 260, 267], "volum": 2, "due": [2, 3, 5, 351, 359, 360, 363], "serialis": [2, 33, 35, 38], "memorymappedtensor": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 305, 352, 359], "well": [2, 3, 8, 20, 22, 31, 34, 36, 37, 40, 41, 71, 75, 86, 90, 104, 110, 161, 169, 183, 197, 217, 218, 269, 288, 345, 346, 348, 349, 350, 351, 353, 359, 360, 362, 363], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 105, 106, 110, 111, 112, 126, 127, 129, 151, 154, 156, 162, 169, 179, 197, 243, 244, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 310, 340, 345, 347, 348, 352], "file": [2, 6, 7, 8, 33, 35, 38, 51, 53, 54, 55, 57, 58, 59, 111, 302, 303, 305, 342, 344, 345, 346, 360, 361, 363], "locat": [2, 7, 33, 35, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 130, 139, 150, 196, 210, 222, 223, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 345, 346, 347, 353, 357, 360], "improv": [2, 4, 134, 253, 341, 357, 360], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 104, 110, 347, 360], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 25, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 94, 104, 110, 117, 121, 148, 151, 158, 167, 169, 178, 235, 236, 240, 244, 268, 269, 271, 345, 346, 348, 349, 351, 353, 360], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 43, 45, 46, 66, 128, 197, 198, 260, 348, 352, 360], "sharabl": [2, 104, 110], "collabor": [2, 57], "rather": [2, 4, 76, 146, 345, 346, 347, 349, 351, 357, 360], "incur": [2, 82, 83, 95, 96], "transmiss": 2, "overhead": [2, 82, 83, 95, 96, 104, 110], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 68, 86, 90, 104, 110, 160, 166, 170, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 243, 244, 245, 247, 250, 269, 271, 346, 348, 352, 358, 360], "instanti": [2, 3, 20, 33, 34, 35, 37, 38, 40, 41, 94, 160, 200, 207, 345, 346, 350, 351, 353, 357, 358, 360, 363], "content": [2, 8, 15, 25, 27, 33, 34, 35, 37, 38, 40, 41, 72, 86, 89, 90, 91, 101, 104, 110, 145, 180, 181, 201, 206, 207, 240, 269, 347, 358, 362], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 86, 90, 99, 104, 105, 106, 108, 109, 110, 111, 112, 113, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 169, 174, 190, 210, 227, 228, 229, 230, 233, 240, 241, 243, 244, 246, 247, 248, 249, 274, 282, 316, 338, 340, 341, 345, 346, 347, 348, 350, 351, 359, 362], "writer": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 68, 69, 73, 77, 78, 81, 347, 360], "tensordictroundrobinwrit": [2, 68], "goe": [2, 4, 105, 106, 345, 347, 357, 363], "prioritizedsampl": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 257, 262, 282, 345, 360], "access": [2, 3, 7, 8, 31, 34, 54, 56, 86, 90, 104, 110, 143, 163, 169, 336, 339, 345, 349, 357, 358, 360], "show": [2, 31, 86, 90, 104, 110, 169, 207, 303, 340, 345, 347, 348, 357, 358, 360, 362], "tensordictreplaybuff": [2, 34, 37, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 120, 121, 317, 332, 338, 345, 346, 348, 360], "mp": [2, 17, 18, 19, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 167], "def": [2, 3, 11, 21, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 90, 100, 104, 110, 116, 117, 118, 126, 129, 145, 161, 169, 179, 190, 193, 194, 197, 198, 203, 238, 240, 248, 254, 256, 261, 267, 269, 272, 274, 276, 342, 345, 346, 356, 357, 358, 360, 362, 363], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 39, 40, 65, 66, 86, 90, 100, 104, 105, 106, 110, 117, 118, 126, 128, 129, 145, 155, 156, 161, 164, 167, 169, 178, 179, 193, 195, 199, 203, 231, 235, 236, 239, 240, 241, 242, 243, 244, 253, 254, 255, 256, 257, 259, 261, 262, 263, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 282, 284, 285, 286, 287, 288, 316, 320, 322, 325, 326, 331, 332, 342, 346, 347, 348, 351, 354, 357, 358, 360, 362, 363], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 97, 98, 104, 110, 117, 118, 120, 122, 126, 127, 128, 129, 136, 137, 139, 148, 151, 157, 159, 161, 167, 177, 179, 189, 190, 195, 199, 202, 203, 215, 216, 224, 227, 228, 229, 230, 232, 233, 235, 236, 239, 240, 241, 243, 246, 248, 282, 285, 286, 287, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 311, 319, 329, 340, 341, 345, 348, 357, 358, 362, 363], "__name__": [2, 21, 87, 346], "__main__": [2, 21, 87], "21": [2, 57, 58, 74, 104, 105, 106, 110, 344, 346, 347, 354, 356, 357, 358, 361], "proc": 2, "target": [2, 4, 8, 20, 31, 86, 87, 90, 104, 110, 156, 160, 169, 243, 244, 253, 254, 255, 256, 257, 259, 261, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 288, 323, 331, 332, 341, 342, 348, 354, 358], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 125, 143, 145, 154, 157, 160, 161, 162, 164, 165, 169, 179, 180, 181, 189, 195, 199, 201, 202, 203, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 310, 313, 317, 320, 336, 345, 346, 360, 363], "join": [2, 87, 338, 346, 347], "now": [2, 3, 7, 34, 104, 121, 207, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 359, 360, 363], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 42, 43, 44, 45, 46, 51, 57, 60, 66, 73, 74, 76, 86, 90, 95, 96, 104, 110, 144, 167, 179, 180, 181, 183, 185, 187, 193, 197, 201, 203, 206, 207, 227, 243, 248, 311, 317, 345, 347, 348, 352, 354, 358, 360, 363], "20": [2, 44, 58, 73, 74, 77, 86, 90, 94, 104, 110, 156, 169, 192, 193, 194, 197, 198, 232, 311, 346, 347, 348, 357, 358, 359, 360, 362, 363], "_data": [2, 358], "It": [2, 3, 4, 7, 22, 31, 36, 39, 40, 42, 44, 53, 59, 68, 71, 77, 81, 86, 90, 92, 100, 101, 104, 105, 106, 110, 111, 112, 118, 120, 130, 137, 139, 144, 156, 161, 166, 169, 170, 183, 185, 191, 206, 207, 215, 217, 218, 224, 225, 234, 235, 238, 239, 242, 244, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 282, 283, 284, 310, 316, 329, 339, 340, 341, 345, 346, 348, 349, 357, 358, 359, 360, 362, 363], "difficult": [2, 4, 104, 353], "pai": [2, 8, 345, 348], "word": [2, 3, 39, 51, 53, 55, 57, 58, 59, 269, 345, 352, 358, 363], "1m": [2, 51, 57, 323, 345, 347, 348], "doe": [2, 3, 17, 33, 34, 35, 38, 40, 44, 51, 53, 57, 65, 66, 73, 75, 76, 81, 86, 90, 104, 110, 111, 112, 187, 193, 194, 195, 197, 198, 199, 208, 225, 232, 245, 246, 253, 255, 262, 268, 271, 283, 320, 340, 342, 345, 346, 347, 348, 349, 352, 358, 360, 363], "howev": [2, 3, 5, 7, 31, 86, 90, 104, 110, 121, 151, 156, 161, 169, 253, 255, 268, 271, 273, 274, 340, 345, 346, 348, 351, 358, 360, 363], "capac": [2, 34, 37, 40, 41, 62, 63, 65, 73, 79, 347, 352], "There": [2, 10, 68, 195, 199, 340, 342, 347, 348, 350, 352, 357, 358, 360, 363], "circumv": 2, "account": [2, 62, 63, 79, 121, 204, 205, 340, 346, 348, 360, 363], "save": [2, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 166, 169, 302, 303, 305, 310, 320, 342, 352, 353, 354, 357], "convent": [2, 3, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 111, 112, 341, 345, 348, 357, 358], "overridden": [2, 3, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 284, 286, 287, 348], "dim_extend": [2, 34, 37, 40, 41], "obtain": [2, 7, 39, 51, 86, 90, 104, 110, 120, 143, 156, 165, 179, 215, 317, 345, 347, 349, 350, 351, 357], "counterpart": 2, "desir": [2, 3, 31, 86, 90, 104, 110, 118, 125, 139, 141, 143, 144, 157, 160, 161, 163, 165, 169, 175, 176, 180, 181, 201, 207, 227, 233, 234, 240, 241, 242, 243, 244, 340, 345, 357, 358, 360], "diversifi": 2, "offer": [2, 3, 7, 82, 83, 86, 90, 95, 96, 104, 110, 340, 345, 346, 349, 351, 352, 358, 360, 363], "accomplish": [2, 170, 349], "anoth": [2, 3, 8, 57, 66, 73, 86, 89, 90, 91, 94, 104, 110, 118, 126, 127, 129, 157, 160, 201, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 340, 341, 345, 347, 348, 350, 351, 356, 357, 358, 363], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 54, 121, 170, 254, 259, 260, 267, 310, 342, 349, 359, 360, 362], "docstr": [2, 31, 86, 90, 104, 110, 169, 349, 350], "extens": [2, 34, 37, 40, 41, 74, 342, 360], "detail": [2, 3, 5, 6, 7, 31, 86, 90, 104, 105, 106, 110, 159, 161, 169, 190, 193, 197, 234, 253, 262, 271, 339, 346, 352, 356, 360], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 86, 90, 104, 110, 126, 129, 167, 169, 178, 193, 195, 197, 199, 239, 240, 244, 262, 346, 350, 356, 357, 363], "without": [2, 3, 7, 9, 31, 39, 51, 53, 57, 73, 74, 86, 90, 104, 110, 111, 112, 117, 126, 129, 159, 169, 193, 194, 197, 198, 229, 230, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 283, 284, 285, 286, 287, 288, 332, 339, 340, 345, 346, 347, 349, 350, 351, 352, 357, 358, 360, 363], "happi": 2, "concaten": [2, 8, 13, 14, 20, 29, 30, 57, 121, 122, 139, 160, 197, 201, 246, 345, 346, 350, 357, 358, 360, 363], "schedul": [2, 4, 7, 39, 316, 347, 358], "transformedenv": [2, 3, 13, 31, 86, 87, 90, 104, 110, 117, 118, 121, 124, 125, 126, 129, 130, 131, 133, 136, 137, 138, 139, 141, 145, 146, 147, 148, 151, 152, 153, 155, 156, 157, 158, 160, 167, 169, 195, 199, 238, 303, 329, 345, 346, 347, 348, 349, 353, 354, 356, 357, 358, 359, 360, 362, 363], "stepcount": [2, 13, 31, 86, 90, 104, 110, 111, 112, 160, 169, 345, 346, 347, 348, 349, 354, 357, 362], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 31, 77, 86, 87, 90, 92, 104, 110, 118, 121, 124, 125, 130, 136, 137, 139, 141, 146, 147, 148, 151, 153, 156, 157, 158, 160, 161, 167, 169, 195, 199, 238, 303, 329, 332, 338, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 359, 360, 362, 363], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 121, 148, 352, 360], "cartpol": [2, 31, 84, 85, 86, 90, 104, 110, 118, 121, 151, 156, 169, 238, 346, 348, 350, 352, 353, 354, 360, 363], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 31, 53, 55, 77, 86, 87, 89, 90, 91, 95, 96, 101, 104, 110, 118, 121, 124, 131, 136, 137, 139, 146, 148, 151, 153, 155, 156, 157, 158, 160, 169, 195, 199, 238, 279, 293, 294, 295, 296, 298, 299, 300, 301, 340, 346, 348, 349, 350, 351, 352, 353, 354, 358, 360, 362, 363], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 82, 83, 86, 90, 95, 96, 100, 104, 105, 106, 110, 117, 118, 121, 126, 129, 137, 145, 148, 179, 190, 203, 216, 218, 227, 233, 240, 241, 254, 257, 259, 272, 274, 276, 332, 340, 345, 346, 347, 348, 350, 351, 352, 354, 356, 357, 358, 359, 360, 362, 363], "8": [2, 6, 7, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 73, 74, 82, 83, 84, 85, 86, 90, 104, 110, 156, 180, 181, 183, 184, 192, 201, 228, 229, 230, 240, 243, 246, 267, 344, 345, 346, 350, 352, 357, 358, 359, 360, 361, 362, 363], "traj_kei": [2, 66, 73, 74, 360], "truncated_kei": [2, 66, 73, 74, 148, 155], "strict_length": [2, 51, 57, 66, 73, 74], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 37, 41, 42, 62, 63, 65, 66, 74, 79, 86, 90, 104, 110, 143, 148, 151, 161, 165, 169, 194, 198, 210, 216, 234, 238, 240, 242, 243, 244, 284, 285, 286, 287, 311, 323, 345, 346, 347, 348, 350, 351, 352, 354, 357, 358, 360, 362, 363], "enumer": [2, 13, 14, 15, 20, 31, 37, 41, 74, 86, 90, 104, 110, 169, 277, 341, 345, 346, 347, 348, 354, 360, 362], "break": [2, 5, 13, 14, 15, 20, 31, 37, 41, 51, 54, 55, 57, 58, 59, 60, 66, 73, 74, 77, 86, 90, 104, 110, 118, 121, 148, 167, 169, 346, 352, 354, 360, 362], "step_count": [2, 13, 14, 15, 31, 86, 90, 95, 96, 104, 110, 155, 169, 347, 348, 349, 354, 362], "32": [2, 21, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 108, 109, 111, 112, 180, 181, 182, 183, 184, 186, 187, 192, 201, 206, 207, 211, 212, 214, 215, 224, 282, 346, 347, 348, 350, 351, 358, 359, 360, 362, 363], "33": [2, 25, 31, 68, 86, 90, 104, 110, 169, 180, 181, 201, 346, 358], "34": [2, 180, 181, 201, 346, 347, 348, 358], "35": [2, 180, 181, 201, 346, 347, 348, 357, 358, 359, 360], "36": [2, 344, 346, 358, 361], "37": [2, 120, 346, 358, 359, 360], "38": [2, 7, 346, 347, 348, 358], "39": [2, 55, 95, 96, 346, 348, 358], "40": [2, 95, 96, 346, 347, 348, 357, 358], "41": [2, 346, 358, 359], "11": [2, 10, 22, 26, 32, 44, 62, 63, 65, 74, 79, 87, 159, 169, 179, 203, 344, 346, 347, 348, 357, 358, 360, 361], "12": [2, 10, 58, 62, 63, 74, 79, 95, 96, 104, 108, 109, 110, 169, 344, 346, 347, 357, 358, 360, 361], "14": [2, 6, 11, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74, 86, 90, 104, 110, 139, 169, 344, 346, 347, 357, 358, 359, 360, 361], "15": [2, 22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 74, 86, 90, 104, 110, 169, 232, 239, 263, 346, 347, 348, 357, 358, 360, 362], "16": [2, 3, 31, 58, 66, 74, 82, 83, 86, 90, 95, 96, 104, 110, 121, 169, 346, 347, 348, 358, 360], "17": [2, 58, 74, 104, 169, 329, 344, 346, 348, 357, 358, 361], "could": [2, 3, 4, 6, 22, 346, 347, 353, 357, 359, 363], "sai": [2, 31, 86, 90, 104, 110, 169, 206, 359, 363], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 32, 64, 66, 73, 74, 86, 89, 90, 91, 94, 104, 110, 126, 129, 144, 151, 241, 346, 347, 348, 357, 358], "handl": [2, 3, 20, 31, 86, 90, 104, 110, 166, 167, 169, 199, 201, 320, 334, 335, 345, 346, 347, 349, 351, 357, 360], "suggest": [2, 282, 345, 357], "serialenv": [2, 3, 86, 90, 104, 157, 169, 238, 338, 363], "squeez": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 118, 121, 154, 156, 180, 181, 219, 220, 345, 358, 360], "6": [2, 7, 13, 14, 15, 16, 22, 31, 37, 51, 58, 59, 66, 74, 84, 85, 104, 108, 109, 139, 141, 156, 180, 181, 183, 184, 185, 188, 192, 194, 200, 201, 206, 207, 211, 221, 238, 240, 248, 329, 344, 346, 348, 352, 357, 358, 360, 361, 362], "5": [2, 3, 13, 14, 22, 23, 25, 27, 31, 34, 37, 40, 41, 51, 68, 73, 74, 77, 86, 87, 90, 95, 96, 101, 104, 108, 109, 110, 111, 112, 118, 120, 148, 155, 156, 169, 179, 180, 181, 183, 184, 189, 190, 191, 192, 193, 196, 197, 200, 201, 203, 206, 207, 211, 216, 222, 223, 232, 233, 238, 241, 247, 268, 271, 273, 276, 340, 344, 345, 346, 348, 350, 352, 354, 357, 358, 360, 361, 362, 363], "7": [2, 6, 10, 26, 31, 32, 34, 37, 40, 66, 74, 86, 90, 104, 110, 156, 179, 180, 181, 184, 200, 201, 203, 206, 290, 344, 345, 346, 347, 352, 357, 358, 359, 360, 361, 362], "9": [2, 3, 7, 22, 31, 34, 37, 40, 58, 59, 66, 74, 77, 84, 85, 99, 105, 106, 156, 167, 169, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 277, 282, 341, 344, 345, 346, 347, 349, 352, 356, 357, 358, 359, 360, 361], "18": [2, 58, 74, 108, 109, 111, 112, 169, 207, 344, 346, 347, 352, 354, 357, 358, 359, 361], "19": [2, 58, 73, 74, 77, 169, 344, 346, 348, 358, 361], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 54, 104, 110, 160, 162, 207, 341, 342, 345, 346, 357, 360, 362], "congruent": 2, "custom": [2, 3, 5, 31, 86, 90, 104, 110, 163, 169, 206, 207, 247, 262, 271, 277, 336, 340, 345, 346, 347, 348, 350, 351, 353, 357], "name": [2, 3, 6, 7, 11, 15, 31, 33, 35, 38, 44, 51, 54, 56, 59, 60, 82, 84, 86, 90, 95, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 128, 131, 146, 151, 152, 155, 161, 163, 166, 169, 178, 195, 199, 233, 241, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 284, 286, 287, 288, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 329, 342, 345, 346, 347, 348, 351, 353, 357, 358, 363], "randomcroptensordict": [2, 345], "unlik": [2, 72, 111, 112, 238, 262, 271, 346, 350, 352, 362], "stop": [2, 3, 15, 20, 39, 59, 66, 73, 74, 86, 90, 104, 110, 347, 352, 357, 362, 363], "signal": [2, 3, 13, 14, 15, 16, 22, 51, 53, 55, 57, 58, 59, 66, 73, 74, 77, 90, 111, 112, 121, 130, 155, 158, 178, 341, 345, 347, 357, 360, 363], "disk": [2, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 320, 342, 345, 346, 348, 352, 353, 360], "dump": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 302, 303, 353, 354], "load": [2, 6, 7, 13, 14, 15, 16, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 85, 86, 90, 104, 110, 116, 167, 169, 336, 342, 345, 347, 360], "json": 2, "metadata": [2, 51, 53, 347, 349, 351, 352, 357, 363], "anticip": [2, 126, 129], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 57], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 43, 45, 46, 53, 166, 170, 227, 233, 234, 240, 241, 242, 243, 244, 347, 357, 358, 360], "exact": [2, 3, 104, 197], "statu": [2, 3, 86], "prioriti": [2, 4, 34, 40, 41, 62, 63, 64, 65, 66, 75, 76, 79, 256, 257, 259, 260, 261, 262, 267, 272, 274, 276, 282, 342, 345, 346, 360], "heap": 2, "under": [2, 3, 4, 20, 31, 39, 51, 53, 54, 55, 57, 58, 59, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 169, 227, 233, 234, 240, 241, 242, 243, 244, 269, 284, 285, 286, 287, 288, 303, 341, 345, 346, 350, 358, 363], "hood": [2, 20, 51, 86, 90, 104, 110, 358], "just": [2, 3, 4, 11, 76, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 124, 178, 207, 311, 340, 342, 345, 346, 347, 348, 349, 350, 352, 357, 358, 360, 362, 363], "public": [2, 56, 143, 165], "serializ": 2, "altern": [2, 4, 26, 101, 187, 204, 205, 206, 252, 345, 347, 357], "state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 104, 110, 161, 167, 169, 274, 336, 342, 345, 346, 363], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 104, 110, 161, 167, 169, 274, 342, 345], "drawback": 2, "struggl": 2, "big": [2, 347, 352, 360, 363], "sequenti": [2, 9, 31, 86, 90, 104, 110, 120, 137, 169, 245, 246, 271, 340, 347, 348, 350, 357, 358, 359, 363], "known": [2, 3, 5, 7, 8, 291, 292, 345, 346, 349], "seamless": [2, 201], "integr": [2, 31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 186, 195, 199, 203, 243, 340, 349, 350, 352, 357, 358, 359], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 345, 346, 351], "essenti": [2, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 346, 349, 358, 360], "understand": [2, 3, 8, 345, 346, 349, 350, 357], "purpos": [2, 3, 7, 86, 90, 104, 110, 121, 193, 253, 255, 268, 271, 273, 332, 345, 347, 348, 351, 353, 357, 359, 363], "guid": [2, 105, 106, 108, 109, 156, 339, 345, 357], "explan": [2, 31, 86, 90, 104, 110, 169], "effect": [2, 3, 25, 31, 34, 37, 40, 41, 51, 57, 66, 68, 71, 73, 74, 86, 90, 104, 110, 121, 161, 169, 320, 345, 350, 360, 363], "realm": [2, 350], "As": [2, 3, 4, 31, 51, 86, 90, 99, 104, 105, 106, 110, 148, 244, 284, 340, 345, 346, 347, 348, 349, 351, 352, 357, 358, 359, 360, 362, 363], "practition": 2, "often": [2, 3, 8, 266, 320, 345, 346, 349, 351, 358, 360, 363], "encount": [2, 4, 57, 238, 339, 346, 350, 358], "situat": 2, "sometim": [2, 3, 348, 363], "discard": [2, 3, 44, 53, 55, 90, 163, 177, 302, 360, 363], "variabl": [2, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 54, 55, 58, 59, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 102, 103, 107, 111, 112, 193, 194, 195, 197, 198, 199, 203, 228, 229, 230, 269, 272, 342, 346], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 135, 136, 137, 139, 140, 141, 145, 146, 147, 148, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 169, 177, 182, 183, 184, 185, 186, 187, 190, 195, 199, 200, 206, 211, 212, 214, 216, 217, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 248, 249, 253, 254, 255, 256, 257, 259, 260, 261, 264, 267, 268, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 303, 329, 332, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 362, 363], "immedi": [2, 25, 27, 31, 86, 90, 104, 110, 169, 283, 357], "200": [2, 13, 14, 15, 20, 31, 51, 86, 89, 90, 91, 104, 110, 111, 112, 148, 169, 183, 184, 191, 217, 218, 345, 348, 352, 354, 358, 360], "199": [2, 358], "info": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 71, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 108, 109, 110, 111, 112, 163, 166, 168, 310, 349, 354, 357, 360], "At": [2, 202, 235, 346, 347, 348, 352, 356, 358, 359], "glanc": [2, 349], "seem": [2, 345, 348, 349], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 39, 86, 90, 99, 104, 105, 106, 110, 121, 144, 193, 195, 197, 199, 224, 228, 229, 230, 249, 340, 346, 348, 349], "less": [2, 101, 225, 334, 335, 341, 347, 348, 360, 362], "omit": [2, 315, 347, 351, 358, 360], "proper": [2, 3, 4, 6, 7, 284, 285, 286, 287, 346, 347, 357, 360], "imposs": [2, 77, 170, 253, 255, 268, 271, 273], "determin": [2, 34, 40, 53, 65, 66, 86, 90, 104, 110, 111, 112, 143, 165, 206, 239, 346, 350, 357], "complic": [2, 358, 360, 363], "matter": [2, 352], "inconsist": [2, 363], "miss": [2, 3, 4, 6, 7, 11, 25, 31, 86, 90, 104, 110, 161, 169, 177, 245, 246, 274, 339, 345, 348], "behavior": [2, 4, 31, 86, 90, 104, 110, 161, 169, 260, 267, 348, 357, 358], "primari": [2, 352], "elimin": [2, 3, 349], "represent": [2, 27, 28, 31, 86, 90, 104, 110, 143, 163, 165, 169, 345, 358, 359, 363], "upon": [2, 8, 358], "canon": 2, "definit": [2, 32, 75, 206], "markov": [2, 3, 349, 363], "decis": [2, 3, 182, 214, 232, 258, 270, 348, 349, 350, 357, 360, 363], "mdp": [2, 349, 358], "context": [2, 3, 5, 8, 31, 86, 87, 90, 103, 104, 110, 157, 162, 169, 207, 208, 232, 280, 281, 284, 285, 286, 287, 289, 297, 303, 316, 340, 341, 345, 346, 347, 357, 358, 359, 360], "condit": [2, 44, 156, 233, 234, 238, 241, 242, 252, 345, 358, 360], "complet": [2, 7, 9, 72, 86, 90, 104, 110, 121, 155, 339, 341, 345, 347, 349, 356], "termin": [2, 3, 7, 13, 14, 15, 16, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 89, 90, 91, 95, 96, 104, 105, 106, 108, 109, 110, 111, 112, 118, 130, 145, 169, 178, 179, 195, 199, 203, 238, 245, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363], "truncat": [2, 3, 13, 14, 15, 16, 31, 36, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 104, 105, 106, 110, 111, 112, 130, 131, 138, 145, 148, 155, 161, 169, 178, 195, 199, 223, 238, 290, 345, 347, 348, 349, 350, 352, 353, 356, 359, 360, 362, 363], "reward": [2, 3, 13, 14, 15, 31, 33, 38, 39, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 117, 118, 119, 124, 125, 126, 127, 129, 130, 131, 137, 141, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 160, 161, 162, 164, 165, 167, 169, 174, 177, 179, 195, 203, 232, 238, 249, 253, 254, 256, 257, 259, 260, 261, 264, 267, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 313, 314, 316, 318, 336, 341, 342, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363], "imit": [2, 3], "addit": [2, 3, 4, 31, 53, 86, 90, 104, 110, 111, 125, 143, 157, 160, 161, 163, 165, 169, 193, 231, 232, 238, 243, 252, 269, 284, 341, 345, 346, 349, 357, 360], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 42, 43, 45, 46, 57, 86, 87, 90, 93, 104, 110, 169, 180, 181, 201, 207, 341, 342, 345, 346, 347, 348, 349, 357, 358, 360], "stateless": [2, 3, 86, 90, 104, 110, 118, 160, 269, 345, 349, 358, 363], "simul": [2, 3, 5, 7, 8, 82, 83, 92, 95, 96, 107, 111, 112, 115, 179, 203, 340, 345, 347, 349, 353, 357], "furthermor": [2, 357], "certain": [2, 4, 17, 18, 19, 20, 31, 44, 86, 90, 104, 110, 116, 134, 155, 161, 169, 194, 198, 235, 268, 340, 345, 346, 347, 354, 357, 363], "composit": [2, 3, 25, 27, 71, 76, 81, 86, 90, 104, 110, 347, 350, 358], "accommod": [2, 3, 349, 350], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 43, 45, 46, 65, 66], "unambigu": 2, "distinguish": [2, 111, 112], "happen": [2, 3, 86, 90, 104, 110, 231, 346, 351, 352, 353, 359, 363], "limit": [2, 39, 86, 90, 100, 104, 110, 121, 137, 253, 255, 268, 271, 273, 345, 346, 348, 357, 358], "everyth": [2, 346, 347, 348, 353, 354], "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 57, 166, 167, 340, 345, 352, 357], "rule": [2, 104, 126, 129, 244, 340, 347], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 33, 35, 36, 38, 44, 48, 53, 54, 55, 56, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 111, 112, 121, 123, 124, 126, 129, 130, 133, 136, 139, 141, 143, 146, 148, 151, 153, 155, 156, 157, 165, 167, 169, 177, 178, 195, 204, 205, 232, 233, 238, 241, 242, 254, 274, 284, 285, 286, 287, 340, 345, 347, 348, 349, 350, 351, 353, 357, 358, 359, 360, 363], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 118, 126, 129, 130, 131, 141, 145, 146, 148, 152, 155, 157, 161, 169, 177, 179, 189, 190, 195, 199, 203, 215, 216, 224, 227, 228, 229, 230, 232, 233, 234, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 324, 329, 339, 340, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "taken": [2, 3, 86, 90, 104, 110, 147, 204, 205, 236, 341, 345, 347, 348, 350, 357, 358], "is_shar": [2, 3, 13, 14, 15, 22, 25, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 118, 126, 129, 130, 131, 141, 145, 146, 148, 152, 155, 157, 167, 177, 179, 189, 190, 195, 199, 203, 215, 216, 224, 227, 228, 229, 230, 232, 233, 234, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 329, 340, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "brought": [2, 347, 348, 350], "step_mdp": [2, 3, 86, 90, 104, 110, 195, 199, 338, 348, 349, 358, 362, 363], "count": [2, 3, 31, 86, 87, 155, 239, 316, 320, 323, 345, 346, 347, 348, 360, 363], "trigger": [2, 7], "partial": [2, 3, 86, 90, 104, 110, 120, 121, 156, 157, 158, 320, 348], "turn": [2, 17, 18, 19, 20, 33, 35, 38, 135, 162, 166, 233, 316, 341, 345, 346, 348, 350, 358, 359], "retain": 2, "regard": [2, 53, 59, 190, 234, 253, 262, 271, 345, 347, 358], "posit": [2, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 90, 104, 110, 133, 134, 154, 155, 158, 161, 162, 169, 210, 274, 341, 347, 357, 358, 360], "both": [2, 3, 7, 31, 34, 37, 40, 41, 57, 86, 87, 89, 90, 104, 105, 106, 110, 121, 146, 161, 169, 178, 180, 181, 195, 198, 199, 201, 206, 207, 228, 229, 230, 234, 242, 253, 255, 256, 260, 261, 267, 268, 269, 271, 272, 273, 274, 276, 316, 340, 345, 347, 349, 351, 357, 358, 359, 360, 363], "mark": [2, 3, 15, 59, 86, 90, 104, 110, 195, 199, 284, 286, 287, 352, 360], "identifi": [2, 36], "marl": [2, 99, 113, 121, 158, 206, 349, 357], "abov": [2, 3, 7, 31, 86, 90, 104, 110, 169, 196, 222, 223, 252, 341, 342, 345, 347, 349, 350, 357, 358, 363], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 118, 119, 121, 124, 125, 126, 127, 129, 131, 137, 139, 143, 145, 146, 151, 152, 155, 158, 160, 161, 163, 165, 166, 169, 170, 178, 180, 181, 182, 183, 184, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 210, 216, 225, 227, 228, 231, 232, 233, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 303, 311, 340, 341, 345, 346, 347, 348, 349, 350, 353, 356, 357, 358, 359, 360, 362, 363], "typic": [2, 3, 4, 8, 31, 86, 90, 104, 110, 130, 156, 169, 240, 254, 269, 271, 274, 340, 341, 342, 347, 349, 351, 352, 357, 358], "adjust": [2, 345, 357, 358], "grumodul": [2, 120], "lstmmodul": [2, 348], "skip": [2, 31, 51, 86, 90, 104, 110, 134, 161, 169, 170, 240, 244, 269, 274, 284, 285, 286, 287, 302, 303, 313, 316, 345, 346, 358], "accumul": [2, 8, 169], "upcom": [2, 269, 293, 294, 295, 296, 298, 299, 300, 301, 345], "popular": [2, 3, 340, 348, 351, 357], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 169, 338, 346], "fail": [2, 7, 21, 25, 27, 104, 117, 170], "shift": [2, 31, 250, 284, 285, 286, 287, 347], "naiv": [2, 163, 349], "consum": [2, 72, 74, 238, 346, 347, 352, 357, 360], "approxim": [2, 357, 363], "twice": [2, 8], "flat": [2, 77], "would": [2, 3, 31, 39, 86, 90, 104, 110, 169, 193, 195, 197, 199, 201, 206, 342, 346, 347, 348, 349, 351, 352, 358, 360, 363], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 121, 187, 214, 253, 258, 270, 271, 311, 336, 347, 348, 357, 360], "2x": 2, "small": [2, 163, 345, 347, 357, 363], "clearer": [2, 350], "lazi": [2, 27, 28, 48, 49, 86, 90, 104, 110, 111, 112, 143, 163, 180, 206, 208, 245, 246, 345, 346, 350, 352, 356, 360, 363], "certainli": 2, "benefici": 2, "welcom": [2, 349], "wrapper": [2, 3, 11, 16, 33, 35, 38, 39, 40, 41, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 166, 210, 225, 231, 232, 236, 238, 239, 244, 249, 284, 308, 309, 310, 336, 338, 347, 348, 349, 357, 359, 363], "around": [2, 5, 7, 16, 40, 41, 100, 238, 244, 284, 345, 346, 357, 363], "selecttransform": [2, 86, 90, 104, 110], "excludetransform": [2, 58, 152, 360], "promptli": 2, "virtual": [2, 3, 89], "instal": [2, 3, 5, 10, 17, 18, 19, 53, 56, 86, 90, 104, 105, 106, 108, 109, 110, 305, 320, 339, 345, 347, 348, 349, 350, 351, 352, 353, 354, 357, 363], "respons": [2, 3, 8, 66, 73, 320, 351, 352, 363], "d4rl": [2, 53, 59], "repositori": [2, 7, 54, 55, 56, 59, 112], "wheel": [2, 347], "publish": 2, "openml": [2, 56, 103], "scikit": [2, 56, 103], "panda": [2, 56], "raw": [2, 3, 4, 39, 196, 222, 223, 346, 352, 358], "go": [2, 3, 7, 99, 104, 144, 148, 232, 290, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "natur": [2, 3, 345, 348, 350, 351, 352, 360], "modifi": [2, 3, 7, 8, 25, 27, 31, 44, 86, 90, 104, 110, 118, 125, 133, 137, 143, 157, 160, 161, 163, 165, 169, 232, 239, 243, 323, 329, 345, 346, 347, 349, 357, 358], "fly": [2, 167, 268, 341, 347, 358, 360, 363], "extra": [2, 10, 31, 86, 90, 104, 110, 121, 167, 169, 177, 310, 340, 347, 348, 360], "least": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 124, 353, 363], "pre": [2, 7, 21, 31, 44, 57, 63, 86, 90, 104, 110, 143, 163, 165, 169, 363], "appli": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 118, 120, 121, 122, 125, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 142, 144, 145, 146, 148, 151, 152, 155, 156, 157, 158, 160, 161, 163, 164, 166, 167, 169, 193, 197, 222, 233, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 274, 276, 284, 315, 342, 345, 346, 347, 352, 358, 362, 363], "conisder": 2, "space": [2, 9, 32, 43, 86, 90, 104, 110, 124, 128, 174, 187, 190, 206, 212, 216, 227, 231, 233, 234, 236, 239, 240, 241, 242, 243, 244, 246, 247, 248, 257, 259, 260, 261, 276, 282, 340, 346, 347, 348, 349, 350, 351, 357, 358, 362, 363], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 54, 77, 94, 95, 96, 104, 105, 106, 124, 151, 180, 181, 191, 206, 207, 235, 238, 305, 320, 334, 335, 345, 346, 347, 348, 350, 351, 354, 357, 360, 362], "pipelin": [2, 3, 7, 340, 347], "replac": [2, 3, 6, 7, 25, 27, 31, 51, 57, 66, 73, 74, 128, 130, 177, 235, 340, 360], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 57, 68, 86, 90, 104, 110, 148, 161, 169, 231, 236, 238, 239, 318, 342, 346, 347, 348, 350, 353, 358, 360, 363], "produc": [2, 118, 180, 181, 201, 207, 213, 228, 230, 232, 303, 347, 348, 349, 350, 352, 360, 363], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 72, 86, 90, 104, 110, 161, 169, 274, 347], "download": [2, 7, 10, 51, 53, 54, 55, 57, 58, 59, 94, 143, 165, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 346, 357, 358], "robosetexperiencereplai": [2, 73, 74], "fk1": [2, 58], "v4": [2, 58, 90, 104, 147, 293, 294, 295, 296, 298, 299, 300, 301, 329, 345, 347, 359], "expert": [2, 58], "fk1_microopenrandom_v2d": [2, 58], "func": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 168, 345, 360, 363], "obs_norm": 2, "norm": [2, 4, 8, 82, 83, 320, 345, 346, 347, 357, 358], "num_work": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 101, 104, 110, 345, 346], "os": [2, 35, 44, 60, 346], "cpu_count": [2, 35, 44, 60], "num_chunk": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59], "1000": [2, 4, 37, 65, 73, 74, 86, 90, 104, 110, 121, 167, 235, 239, 240, 244, 266, 345, 346, 347, 348, 350, 352, 354, 359, 360], "mp_start_method": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 110], "fork": [2, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 345, 346, 347, 348, 357, 359], "recreat": [2, 358], "customari": [2, 340], "moreov": [2, 3], "fine": [2, 86, 90, 104, 110, 118, 137, 352, 359], "grain": [2, 86, 90, 104, 110, 118], "nomenclatur": 2, "compact": 2, "propos": [2, 121, 130, 202, 266, 275, 329, 340, 348, 360], "replaybufferensembl": [2, 51, 71, 76, 81], "primit": [2, 3, 4, 57, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276], "individu": [2, 4, 17, 18, 19, 20, 31, 44, 68, 77, 86, 90, 104, 110, 169, 345, 357], "dummi": [2, 329, 345, 352, 363], "semant": [2, 27, 28, 340], "ident": [2, 3, 13, 14, 15, 31, 33, 35, 38, 73, 86, 90, 101, 104, 110, 130, 206, 207, 284, 285, 286, 287, 334, 335, 346, 349, 357], "another_kei": [2, 68], "renam": [2, 33, 35, 38, 68, 146, 148, 177, 345], "resiz": [2, 3, 59, 68, 121, 346, 348, 349, 360, 363], "imag": [2, 4, 7, 57, 123, 143, 159, 165, 201, 303, 345, 346, 349, 353, 357, 359, 363], "comops": 2, "totensorimag": [2, 3, 59, 68, 121, 147, 346, 348, 360, 362, 363], "renametransform": [2, 68, 86, 90, 104, 110], "rb0": [2, 68], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 100, 104, 110, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 133, 135, 137, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 158, 159, 160, 161, 163, 165, 167, 179, 189, 195, 199, 203, 215, 224, 225, 227, 228, 229, 230, 232, 233, 238, 240, 241, 243, 244, 246, 247, 248, 253, 254, 255, 256, 257, 259, 260, 261, 267, 268, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 302, 303, 329, 332, 340, 345, 346, 347, 348, 350, 351, 354, 356, 357, 358, 359, 360, 362, 363], "pixel": [2, 3, 7, 25, 59, 68, 84, 85, 89, 91, 92, 107, 121, 123, 130, 133, 135, 139, 141, 143, 147, 159, 163, 165, 183, 211, 212, 303, 329, 340, 345, 346, 348, 353, 359, 360, 362, 363], "rb1": [2, 68], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 100, 104, 110, 119, 120, 121, 122, 123, 124, 126, 127, 129, 133, 135, 137, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 156, 158, 159, 160, 163, 165, 167, 179, 189, 190, 195, 199, 203, 215, 216, 224, 225, 227, 228, 229, 230, 232, 234, 238, 240, 241, 242, 243, 244, 246, 247, 248, 253, 254, 255, 260, 261, 267, 268, 271, 272, 273, 274, 282, 284, 285, 286, 287, 303, 316, 332, 340, 345, 346, 347, 348, 350, 354, 356, 357, 358, 359, 360, 362, 363], "pixels33": [2, 68], "data0": [2, 68], "244": [2, 68, 143, 165, 358], "data1": [2, 68], "_": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 87, 94, 111, 112, 122, 126, 128, 129, 137, 139, 146, 159, 167, 169, 227, 243, 248, 252, 253, 254, 256, 260, 261, 267, 271, 272, 274, 276, 284, 285, 286, 287, 305, 345, 346, 347, 348, 354, 357, 358, 360, 362], "rang": [2, 3, 4, 8, 11, 26, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 86, 87, 90, 104, 110, 148, 159, 167, 169, 194, 198, 268, 276, 341, 342, 345, 347, 348, 351, 352, 354, 357, 358, 360, 362], "parent": [2, 3, 20, 25, 27, 43, 52, 68, 76, 81, 86, 90, 104, 110, 118, 121, 122, 125, 127, 130, 133, 134, 139, 143, 151, 155, 156, 157, 158, 160, 162, 163, 169, 228, 269, 271, 288, 345, 352, 358, 362, 363], "basic": [2, 100, 340, 347, 351, 352, 354, 363], "properti": [2, 3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 110, 160, 161, 169, 188, 196, 208, 213, 221, 222, 223, 238, 269, 274, 350, 352, 358, 360], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 45, 46, 86, 90, 100, 103, 104, 105, 106, 110, 111, 112, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 141, 142, 143, 144, 145, 146, 148, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 177, 178, 180, 181, 183, 184, 185, 186, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 208, 209, 216, 217, 218, 219, 220, 225, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 314, 318, 323, 332, 340, 341, 342, 345, 346, 347, 348, 349, 357, 358, 362, 363], "send": [2, 3, 8, 310, 362], "receiv": [2, 3, 31, 39, 86, 90, 104, 110, 160, 161, 169, 201, 290, 341, 345, 347, 351, 356, 358], "spawn": [2, 3, 4, 17, 21, 94, 101, 104, 110, 346, 357], "check_env_spec": [2, 3, 90, 104, 145, 338, 347, 357, 358], "saniti": [2, 3, 7, 170, 347], "utmost": 2, "commonli": [2, 66, 73, 74, 363], "emploi": [2, 209], "languag": [2, 39], "scarc": 2, "address": [2, 360], "subdomain": 2, "facilit": [2, 3, 7, 142, 143, 163, 165, 228, 229, 230, 340, 345, 348, 350, 358], "extern": [2, 3, 126, 129, 363], "token": [2, 35, 36, 39, 42, 44, 60], "manner": [2, 90, 143, 163, 340, 345, 346, 347, 352, 356, 358, 360], "dm": [3, 345, 363], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 44, 57, 70, 77, 78, 80, 82, 83, 86, 90, 94, 95, 96, 100, 101, 102, 104, 110, 111, 148, 157, 163, 164, 206, 228, 237, 253, 254, 256, 257, 259, 260, 261, 263, 267, 271, 272, 273, 274, 276, 310, 320, 329, 340, 341, 342, 345, 346, 348, 349, 350, 351, 357, 358, 360, 363], "goal": [3, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 156, 345, 346, 347, 348, 357, 358], "abl": [3, 99, 105, 106, 345, 347, 348, 350, 356, 357, 358, 360, 362], "experi": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 65, 66, 170, 305, 306, 307, 308, 309, 310, 339, 346, 347, 352, 353, 357, 360], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 86, 87, 90, 104, 105, 106, 108, 109, 110, 121, 124, 130, 136, 137, 139, 141, 146, 148, 151, 157, 160, 166, 167, 169, 329, 332, 345, 346, 347, 348, 356, 357, 359, 360, 362, 363], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 82, 83, 86, 90, 100, 104, 110, 125, 128, 130, 137, 143, 157, 160, 161, 163, 165, 169, 179, 180, 181, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 205, 206, 207, 210, 215, 216, 224, 227, 228, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 248, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 329, 332, 340, 341, 345, 346, 347, 348, 350, 351, 354, 356, 357, 358, 359, 360, 362, 363], "organis": [3, 58, 86, 90, 104, 110, 161, 346], "arbitrari": [3, 32, 37, 86, 90, 104, 110, 340, 345, 346, 358, 360], "structur": [3, 7, 33, 34, 35, 37, 38, 39, 40, 41, 44, 77, 86, 90, 104, 110, 126, 129, 178, 206, 239, 284, 285, 286, 287, 288, 338, 341, 345, 347, 348, 349, 352, 357, 358, 359], "attribut": [3, 4, 31, 33, 35, 38, 44, 57, 86, 89, 90, 91, 104, 110, 130, 143, 163, 169, 195, 199, 244, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 345, 348, 358], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 110, 130, 169], "actual": [3, 4, 7, 51, 53, 54, 55, 57, 58, 59, 86, 90, 104, 110, 166, 323, 341, 345, 347, 357, 358], "retriev": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 86, 89, 90, 91, 104, 110, 122, 127, 130, 139, 177, 179, 180, 200, 203, 238, 240, 244, 247, 253, 254, 255, 257, 268, 271, 272, 274, 276, 282, 284, 285, 286, 287, 329, 336, 342, 346, 347, 350, 358, 363], "care": [3, 8, 86, 90, 104, 110, 160, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 303, 345, 347, 357, 358, 360], "parametr": [3, 209, 244, 254, 260, 267, 274, 345, 347], "hardwar": 3, "observation_spec": [3, 86, 90, 100, 104, 110, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 135, 136, 137, 139, 141, 143, 145, 147, 151, 153, 155, 156, 157, 158, 159, 160, 162, 163, 166, 169, 179, 195, 199, 203, 324, 332, 345, 347, 351, 356, 357, 358, 363], "compositespec": [3, 27, 28, 48, 86, 88, 90, 100, 104, 110, 117, 118, 126, 127, 128, 129, 131, 137, 145, 146, 152, 155, 157, 160, 169, 174, 178, 179, 203, 227, 231, 240, 246, 247, 338, 345, 347, 348, 357, 358, 363], "pair": [3, 31, 33, 35, 38, 53, 84, 85, 86, 90, 104, 110, 148, 157, 195, 228, 240, 244, 269, 284, 285, 286, 287, 288, 340, 341, 345, 346, 347, 350, 351, 356, 358, 363], "state_spec": [3, 86, 90, 100, 104, 110, 117, 179, 203, 358, 363], "reward_spec": [3, 86, 90, 100, 104, 110, 117, 118, 119, 124, 125, 126, 127, 129, 145, 149, 150, 151, 153, 160, 162, 169, 179, 203, 347, 357, 358, 363], "done_spec": [3, 86, 90, 104, 110, 126, 127, 129, 130, 145, 160, 169, 178, 357, 358, 363], "flag": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 111, 112, 239, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 340, 357, 358, 359], "input_spec": [3, 86, 90, 100, 104, 110, 118, 125, 126, 127, 128, 139, 141, 145, 146, 151, 152, 155, 156, 157, 160, 161, 162, 164, 169, 347, 358], "full_action_spec": [3, 86, 90, 104, 110, 179, 203, 347, 357], "full_state_spec": [3, 86, 90, 104, 110, 179, 203, 347], "lock": [3, 25, 27, 33, 35, 38, 86, 90, 104, 110, 118, 157, 167, 358], "output_spec": [3, 86, 90, 104, 110, 118, 125, 126, 127, 131, 137, 145, 146, 152, 155, 160, 161, 169, 358], "full_observation_spec": [3, 86, 90, 104, 110, 179, 203], "full_reward_spec": [3, 86, 90, 104, 110, 118, 127, 145, 357], "full_done_spec": [3, 86, 90, 104, 110, 118, 127, 145, 178, 357], "importantli": [3, 240, 244], "action_s": 3, "help": [3, 4, 31, 86, 90, 104, 110, 130, 169, 253, 255, 268, 271, 273, 339, 341, 345, 346, 347, 348, 357], "With": [3, 95, 96, 99, 156, 342, 346, 357, 360, 363], "necessarili": [3, 86, 90, 104, 110, 363], "present": [3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 89, 90, 104, 110, 131, 148, 152, 177, 178, 182, 183, 184, 185, 186, 192, 197, 209, 214, 238, 239, 243, 244, 245, 246, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 336, 342, 345, 354, 356, 357, 360, 362], "0s": [3, 51, 57, 157, 348], "step_and_maybe_reset": [3, 86, 90, 104, 110, 349], "done_kei": [3, 22, 86, 90, 104, 110, 121, 130, 148, 155, 169, 177, 357], "assign": [3, 4, 13, 14, 16, 31, 33, 35, 38, 86, 90, 104, 110, 161, 169, 256, 257, 259, 274, 347, 350, 357, 360], "_reset": [3, 86, 90, 100, 104, 110, 117, 118, 121, 126, 129, 145, 178, 179, 203], "data_": [3, 86, 90, 104, 110], "append": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 104, 110, 124, 125, 148, 157, 161, 166, 194, 195, 198, 199, 233, 241, 345, 346, 347, 348, 357, 358, 359, 360, 362], "set_se": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 95, 96, 100, 104, 110, 139, 146, 151, 156, 158, 161, 169, 352, 354, 358, 362, 363], "seed": [3, 13, 14, 15, 16, 20, 58, 86, 90, 100, 104, 105, 106, 110, 111, 112, 117, 118, 126, 129, 145, 161, 170, 320], "determinist": [3, 31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 182, 191, 211, 218, 227, 236, 243, 244, 247, 254, 340, 345, 346, 348, 350, 351, 354, 358, 363], "preced": [3, 31, 200, 348], "risk": [3, 144], "overlap": [3, 40, 77], "reproduc": [3, 121, 170, 345, 347, 357], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 36, 39, 42, 44, 60, 62, 63, 64, 65, 79, 86, 90, 104, 110, 128, 149, 155, 156, 158, 221, 222, 223, 247, 254, 260, 261, 267, 269, 270, 274, 317, 345, 346, 347, 348, 350, 357, 360], "max_step": [3, 13, 77, 86, 90, 100, 104, 110, 111, 112, 155, 169, 349, 350, 351, 353, 354, 357, 362, 363], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 39, 82, 83, 86, 90, 100, 104, 110, 120, 137, 190, 195, 199, 203, 215, 216, 224, 225, 228, 229, 230, 231, 232, 233, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 254, 256, 260, 261, 263, 264, 265, 267, 269, 272, 274, 276, 282, 283, 284, 285, 286, 287, 316, 332, 338, 345, 347, 348, 351, 354, 356, 357, 358, 359], "trail": [3, 167], "treat": [3, 31, 350, 351], "figur": [3, 345, 347, 348, 357, 358, 363], "brief": [3, 347, 349, 351, 360], "deliveri": 3, "design": [3, 31, 32, 71, 76, 81, 86, 90, 104, 110, 121, 144, 161, 169, 232, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 345, 346, 347, 348, 349, 350, 351, 356, 357, 358, 360, 363], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 32, 75, 86, 90, 104, 110, 155, 156, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 320, 342, 345, 346, 347, 348, 349, 350, 357, 358], "flank": [3, 348], "dual": 3, "strictli": [3, 8, 31, 86, 90, 104, 110, 161, 169, 274, 345, 347], "refer": [3, 7, 8, 9, 20, 31, 39, 86, 89, 90, 91, 104, 110, 161, 167, 169, 179, 190, 191, 203, 204, 205, 206, 211, 212, 217, 218, 234, 253, 262, 263, 264, 265, 271, 274, 284, 289, 297, 344, 345, 347, 350, 351, 352, 353, 357, 360, 363], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 65, 66, 86, 90, 104, 110, 117, 128, 130, 136, 139, 143, 144, 148, 150, 152, 163, 165, 167, 169, 177, 181, 188, 190, 204, 205, 206, 207, 208, 209, 213, 215, 216, 221, 222, 223, 224, 238, 243, 259, 261, 266, 272, 275, 297, 303, 314, 316, 317, 325, 326, 329, 330, 332, 333, 334, 335, 336], "carri": [3, 20, 44, 86, 90, 104, 110, 157, 269, 346, 348, 357, 358, 360], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 113, 345], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 57, 66, 73, 74, 338], "adjac": [3, 22, 133, 238], "reli": [3, 193, 194, 197, 198, 253, 341, 345, 347, 350, 352, 358, 363], "junction": 3, "inittrack": [3, 195, 199, 238, 345, 348], "tutori": [3, 337, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 363], "scratch": [3, 8, 346, 358], "gym3": 3, "envpool": [3, 101, 102], "interfac": [3, 93, 103, 201, 208, 340, 345, 347, 353, 358, 360], "simultan": [3, 19, 101, 102, 104, 110, 358], "competit": [3, 357], "advantag": [3, 8, 192, 253, 255, 268, 271, 273, 284, 285, 286, 287, 288, 289, 291, 293, 295, 297, 298, 300, 341, 342, 345, 346, 347, 348, 357, 358, 363], "scale": [3, 4, 53, 86, 90, 104, 110, 121, 137, 139, 150, 156, 159, 191, 196, 210, 217, 218, 222, 223, 228, 229, 230, 240, 244, 246, 253, 254, 267, 271, 272, 273, 274, 318, 324, 329, 336, 340, 345, 346, 347, 348, 350, 357, 362], "varieti": 3, "inherit": [3, 86, 90, 104, 110, 202, 269, 342, 347, 357], "Of": [3, 7, 339, 358, 363], "cours": [3, 4, 339, 358, 363], "from_pixel": [3, 82, 83, 84, 85, 89, 91, 92, 95, 96, 107, 121, 147, 303, 329, 345, 346, 348, 349, 353, 354, 359, 360, 362, 363], "81": [3, 346, 358, 359], "simpli": [3, 6, 33, 35, 38, 44, 76, 77, 81, 131, 152, 166, 269, 340, 341, 345, 347, 351, 357, 363], "d": [3, 34, 37, 40, 41, 54, 56, 58, 59, 60, 65, 66, 193, 197, 240, 244, 362], "privat": [3, 86, 90, 104, 110, 166, 358, 363], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 51, 74, 77, 255, 268, 271, 311, 313, 316, 320, 323, 324, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 39, 68, 71, 139, 150, 196, 208, 217, 222, 223, 282, 340, 350, 351, 358, 360], "inner": [3, 86, 90, 104, 110, 128, 342, 346, 347, 357, 363], "logic": 3, "nevertheless": [3, 347, 349, 360], "kept": [3, 22, 72, 74, 128, 152, 160, 170, 177, 196, 222, 223, 351], "mind": [3, 51, 57, 66, 73, 74, 86, 90, 104, 110, 357], "desig": 3, "wherev": 3, "expos": [3, 107, 126, 129, 245, 346], "modif": [3, 5, 25, 27, 31, 86, 90, 104, 110, 133, 169, 178, 269, 347, 358], "lost": [3, 8, 166], "eras": [3, 66, 73, 86, 90, 104, 110, 161], "intern": [3, 343], "face": [3, 5, 8, 9, 349, 363], "NOT": [3, 144], "outsid": [3, 15, 353, 357, 358], "right": [3, 6, 7, 22, 39, 200, 346, 347, 357, 358, 363], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 86, 90, 104, 110, 160, 161, 169, 170, 284, 285, 286, 287], "assumpt": [3, 358, 360], "preclud": 3, "presenc": [3, 351], "annihil": 3, "reason": [3, 4, 8, 31, 57, 86, 90, 104, 105, 106, 110, 143, 163, 169, 199, 341, 345, 346, 347, 351, 352, 358, 360], "advanc": [3, 20, 34, 37, 40, 41, 349, 352, 360], "explicitli": [3, 4, 346, 348, 352, 357, 360], "place": [3, 25, 27, 31, 33, 35, 38, 62, 63, 68, 71, 79, 86, 87, 90, 104, 110, 111, 112, 125, 130, 143, 157, 160, 161, 163, 165, 166, 167, 169, 178, 232, 238, 243, 317, 322, 323, 346, 347, 350, 353, 357, 358, 360], "superse": 3, "pettingzoowrapp": [3, 338], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 86, 90, 99, 104, 105, 106, 110, 111, 112, 113, 340, 346, 350, 352, 357, 360], "associ": [3, 31, 33, 35, 38, 86, 90, 104, 110, 169, 217, 336, 345, 360], "environemtn": 3, "__not__": 3, "constrain": [3, 137, 195, 199, 271], "li": 3, "fact": [3, 7, 8, 345, 347, 349, 357, 358, 359, 360, 363], "predict": [3, 31, 39, 189, 191, 202, 203, 232, 249, 253, 255, 259, 262, 264, 265, 268, 271, 273, 283, 340, 345, 346, 351], "know": [3, 4, 9, 34, 37, 40, 41, 231, 272, 316, 345, 346, 347, 348, 349, 350, 351, 352, 357, 360], "meaning": 3, "perfectli": [3, 342, 345, 358], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 351, 362], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 43, 45, 46, 51, 86, 90, 104, 110, 336, 340], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 121, 122, 126, 128, 129, 130, 131, 133, 137, 138, 139, 141, 143, 145, 146, 148, 150, 152, 155, 157, 159, 161, 162, 163, 165, 167, 169, 170, 177, 178, 179, 180, 181, 183, 184, 193, 194, 195, 196, 197, 198, 199, 201, 203, 206, 207, 208, 209, 222, 223, 227, 233, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 282, 284, 285, 286, 287, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 310, 313, 314, 316, 317, 318, 320, 329, 336, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 359, 360, 362, 363], "500": [3, 345, 346, 358, 362], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 51, 54, 104, 110], "bottleneck": [3, 8, 66, 73, 74], "great": [3, 7, 8, 362], "speedup": [3, 8, 363], "precis": [3, 126, 129, 177, 194, 198, 345, 347], "misspecifi": 3, "caus": [3, 7, 8, 62, 63, 79, 86, 90, 94, 104, 110, 144, 363], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 104, 110, 113, 121, 132, 138, 148, 156, 157, 158, 161, 169, 170, 231, 235, 236, 239, 274, 345, 347, 357, 360, 363], "mismatch": [3, 346], "mostli": [3, 16, 303, 341, 353, 360, 363], "subprocess": [3, 13, 14, 16, 87, 104, 110], "multithreadedenv": [3, 338], "underneath": 3, "higher": [3, 4, 124, 247, 345, 346, 347, 360, 363], "flexibl": [3, 9, 101, 277, 341, 342, 345, 360, 363], "cover": [3, 339, 347, 349, 352, 353, 358, 362], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 59, 60, 68, 86, 90, 99, 100, 103, 104, 105, 106, 110, 118, 125, 126, 127, 130, 131, 137, 143, 145, 146, 152, 155, 157, 160, 161, 163, 165, 167, 169, 172, 176, 180, 181, 201, 206, 207, 209, 215, 224, 231, 233, 240, 243, 244, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 278, 282, 290, 329, 334, 338, 340, 345, 346, 347, 352, 357, 358, 360, 363], "atari": [3, 4, 51, 121, 303, 353, 363], "classic": [3, 100, 106, 346], "benchmark_batched_env": 3, "seamlessli": [3, 358], "infrastructur": [3, 357], "act": [3, 4, 73, 74, 105, 106, 161, 189, 207, 254, 256, 267, 272, 274, 276, 348, 357, 360], "world": [3, 5, 100, 249, 264, 353, 357, 358, 363], "paradigm": [3, 16, 357], "decpodp": 3, "game": [3, 4, 5, 51, 303, 353], "thank": [3, 345, 349], "carrier": [3, 347, 348, 349, 360], "particular": [3, 31, 44, 53, 54, 86, 90, 104, 110, 161, 169, 341, 342, 346, 348, 349, 356, 357, 360], "thu": [3, 268, 357], "let": [3, 6, 7, 31, 34, 37, 40, 41, 42, 86, 90, 104, 105, 106, 110, 121, 169, 195, 199, 206, 207, 233, 316, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "vma": [3, 111, 112, 357], "robot": [3, 5, 7, 57, 143, 163, 165, 357], "vmasenv": [3, 338, 357], "balanc": [3, 84, 85, 345, 346], "num_env": [3, 20, 89, 93, 102, 111, 112, 357], "n_agent": [3, 111, 112, 206, 207, 215, 224, 282, 357], "ground_rew": 3, "pos_rew": [3, 357], "style": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59], "relat": [3, 4, 10, 34, 104, 133, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 346, 354, 358], "vari": [3, 89, 91, 92, 105, 106, 107, 111, 144, 357], "creation": [3, 104, 110, 363], "info_spec": [3, 104], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 32, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 117, 145, 178, 257, 260, 261, 282, 338, 357, 363], "simpl": [3, 9, 31, 32, 86, 90, 104, 110, 169, 183, 238, 244, 257, 259, 269, 273, 284, 340, 341, 345, 346, 347, 349, 350, 351, 357, 360, 363], "prefix": [3, 22, 31, 33, 35, 38, 44, 86, 90, 104, 110, 161, 169, 269, 274, 302, 348, 351, 363], "exactli": [3, 31, 86, 90, 92, 104, 110, 161, 169, 193, 197, 274, 345, 348, 352, 357], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 86, 90, 104, 110, 117, 128, 177, 179, 202, 203, 231, 235, 236, 238, 239, 357], "reward_kei": [3, 86, 90, 104, 110, 169, 177, 179, 203, 314, 318, 357], "set_kei": [3, 130, 253, 255, 257, 260, 261, 262, 267, 268, 269, 271, 272, 273, 274, 282, 288, 345, 357], "awai": [3, 347, 349, 357], "eas": [3, 357], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 155, 244], "full": [3, 86, 90, 104, 110, 195, 199, 234, 311, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "torchvis": [3, 143, 165, 305, 362, 363], "base_env": [3, 83, 86, 90, 91, 96, 104, 110, 117, 118, 124, 126, 128, 129, 137, 141, 145, 147, 153, 155, 157, 158, 161, 169, 303, 345, 346, 347, 359, 362, 363], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 100, 104, 110, 116, 118, 125, 130, 161, 169, 180, 181, 201, 252, 325, 326, 334, 335, 336, 346, 360], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 86, 88, 90, 104, 110, 117, 118, 120, 121, 122, 125, 126, 127, 130, 131, 132, 133, 136, 137, 142, 144, 145, 146, 148, 151, 152, 155, 156, 157, 158, 160, 161, 166, 167, 169, 177, 178, 179, 195, 199, 202, 203, 231, 232, 234, 235, 238, 239, 242, 243, 244, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 283, 284, 285, 286, 287, 288, 320, 345, 358], "appar": [3, 313], "bring": [3, 347, 349, 363], "signific": [3, 5, 8, 347, 363], "kind": [3, 37, 43, 177, 351, 360], "consult": 3, "interest": [3, 240, 244, 340, 346, 347, 349, 357, 358, 363], "resize_par": 3, "easi": [3, 5, 51, 56, 84, 85, 86, 90, 95, 96, 104, 110, 231, 235, 236, 239, 340, 341, 345, 346, 347, 357, 359, 360, 363], "graph": [3, 4, 8, 82, 83, 95, 96, 280, 281, 345, 358], "revers": [3, 197], "order": [3, 15, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 74, 86, 90, 104, 110, 122, 126, 129, 141, 161, 169, 227, 233, 243, 245, 246, 248, 253, 254, 256, 260, 261, 267, 271, 272, 273, 274, 276, 346, 357], "chain": [3, 33, 34, 35, 37, 38, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 125, 128, 180, 181, 246, 363], "invers": [3, 4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 121, 126, 129, 139, 148, 169, 251, 260, 267, 358], "in_keys_inv": [3, 124, 126, 127, 129, 139, 140, 141, 145, 146, 148, 153, 160, 345, 356, 358, 363], "append_transform": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 120, 143, 157, 161, 163, 345, 348, 358, 360, 362, 363], "doubletofloat": [3, 329, 345, 347, 356], "float32": [3, 13, 14, 15, 25, 34, 39, 40, 41, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 103, 104, 108, 109, 110, 111, 112, 118, 126, 129, 130, 131, 139, 141, 145, 146, 148, 152, 155, 157, 159, 174, 177, 179, 189, 190, 195, 199, 203, 215, 216, 224, 227, 228, 229, 230, 232, 233, 238, 239, 240, 241, 242, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 282, 329, 340, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 360, 362, 363], "float64": [3, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 90, 104, 110, 125, 126, 129, 143, 157, 160, 161, 163, 165, 169, 243, 356], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 54, 86, 89, 90, 91, 104, 110, 126, 129, 130, 161, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 342, 345, 347, 349, 360], "manipul": [3, 4, 8, 84, 85, 143, 163], "third_transform": 3, "unexpect": [3, 31, 86, 90, 104, 110, 161, 169, 274, 363], "behviour": 3, "fortun": [3, 348, 349, 350, 353], "alreadi": [3, 8, 11, 31, 33, 35, 38, 44, 51, 86, 90, 104, 110, 157, 169, 178, 244, 284, 285, 286, 287, 345, 347, 353, 357], "chang": [3, 5, 7, 31, 34, 37, 40, 41, 51, 62, 63, 64, 66, 72, 73, 75, 76, 79, 86, 90, 104, 110, 118, 125, 126, 127, 129, 131, 137, 145, 146, 152, 155, 160, 161, 167, 169, 197, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 341, 345, 348, 357, 358, 359, 360, 363], "catfram": [3, 238, 346], "hold": [3, 280, 281, 358, 360], "notic": [3, 77, 121, 347, 354, 358], "parenthood": 3, "henc": [3, 34, 144, 178, 206, 340, 345, 347, 357, 358], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 104, 110, 358], "discret": [3, 23, 26, 29, 30, 32, 46, 86, 90, 104, 105, 106, 110, 111, 112, 128, 213, 216, 259, 260, 261, 262, 340, 346, 350, 357, 358, 363], "might": [3, 33, 35, 36, 38, 307, 339, 345, 349, 363], "action_mask": [3, 95, 96, 105, 106, 108, 109, 117], "unavail": [3, 105, 106], "probabl": [3, 4, 8, 39, 68, 71, 188, 190, 193, 195, 197, 199, 201, 204, 205, 213, 223, 235, 240, 244, 340, 346, 350, 362], "categor": [3, 26, 30, 32, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 130, 190, 213, 216, 233, 234, 240, 241, 242, 257, 260, 261, 282, 348], "probabilistictensordictmodul": [3, 137, 244, 245, 362], "tensordictsequenti": [3, 195, 199, 233, 235, 238, 245, 340, 345, 346, 348, 350, 354, 356, 359, 362], "maskedcategor": [3, 205, 338], "linear": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 100, 104, 110, 125, 137, 143, 157, 160, 161, 163, 165, 169, 179, 180, 181, 183, 184, 185, 186, 190, 192, 201, 203, 206, 207, 208, 209, 210, 216, 217, 218, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 243, 246, 248, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 332, 340, 346, 356, 359, 362], "in_feat": 3, "out_feat": 3, "logit": [3, 35, 39, 189, 204, 205, 213, 234, 240, 260, 261, 340], "dist": [3, 10, 204, 205, 213, 350], "distribution_class": [3, 137, 228, 229, 230, 232, 240, 244, 246, 253, 254, 260, 261, 267, 271, 272, 273, 274, 340, 345, 347, 350, 357, 362], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 55, 82, 83, 86, 90, 91, 95, 96, 102, 104, 105, 106, 110, 112, 169, 170, 195, 199, 225, 228, 229, 230, 231, 236, 238, 239, 241, 249, 282, 340, 345, 346, 347, 348, 351, 354, 357, 363], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 117, 144, 169], "enviorn": [3, 105, 106, 111, 112, 357], "itself": [3, 31, 86, 90, 104, 110, 114, 169, 269, 347, 349], "mission": 3, "irrespect": [3, 243, 244], "dmcontrol": [3, 86, 90, 104, 110], "jumanji": [3, 86, 90, 95, 96, 104, 110], "special": [3, 338, 340, 345, 348, 363], "framework": [3, 4, 9, 21, 82, 83, 86, 90, 95, 96, 100, 104, 110, 193, 362, 363], "Its": [3, 31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 167, 169, 243, 288], "success": [3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 160, 235, 346, 352, 354, 358, 360, 362], "foundat": [3, 5, 105, 106, 347, 357], "inspir": [3, 358], "gone": [3, 4, 5, 238], "hard": [3, 7, 77, 84, 85, 104, 266, 346, 363], "prefer": [3, 13, 14, 16, 19, 22, 34, 37, 40, 41, 144, 152, 271, 317, 340, 347, 357, 360], "maintain": [3, 5, 9, 358], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 346, 347, 348, 352, 357, 358, 360, 363], "decor": [3, 8, 11, 116, 269, 284, 285, 286, 287], "set_gym_backend": [3, 86, 89, 90, 104, 110, 114, 338, 349], "relev": [3, 39, 284, 285, 286, 287, 288, 310, 358], "gym_backend": [3, 116, 338], "env1": [3, 356], "venv": 3, "python3": [3, 6, 7, 10, 345, 360, 363], "site": [3, 6, 7, 58, 116, 345, 360, 363], "env2": [3, 356], "_env": [3, 6, 89, 363], "classic_control": 3, "pendulumenv": [3, 358], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 98, 114], "handi": [3, 86, 90, 104, 110, 353], "side": [3, 4, 363], "v0": [3, 13, 14, 86, 90, 92, 95, 96, 97, 98, 104, 110, 125, 161, 167, 332], "26": [3, 86, 90, 104, 110, 346, 348, 358, 359], "fun": [3, 11, 116, 347, 357, 360], "reveal": 4, "bug": [4, 362], "curv": 4, "exploit": [4, 350], "video": [4, 9, 303, 305, 316, 336, 354, 357], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 137, 357, 359], "coeffici": [4, 39, 137, 357], "bonu": [4, 253, 255, 268, 271], "beta": [4, 34, 40, 65, 66, 260, 267, 268, 345, 346, 360, 362], "reduc": [4, 6, 26, 77, 156, 346], "downstream": [4, 345], "formul": [4, 357], "ob": [4, 8, 22, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 73, 74, 77, 86, 90, 104, 110, 117, 126, 127, 129, 139, 153, 159, 174, 177, 183, 184, 185, 186, 206, 207, 241, 248, 254, 256, 261, 267, 272, 274, 276, 284, 285, 286, 287, 346, 356, 358, 360, 362, 363], "rate": [4, 51, 167, 283, 346, 347, 357], "gradient": [4, 31, 86, 90, 104, 110, 161, 169, 196, 205, 209, 213, 222, 223, 253, 255, 256, 260, 261, 267, 268, 269, 271, 272, 273, 274, 276, 283, 284, 285, 286, 287, 320, 345, 347, 357, 358], "easier": [4, 340, 345], "local": [4, 7, 10, 15, 20, 31, 66, 73, 86, 90, 104, 110, 161, 169, 206, 207, 215, 224, 282, 308, 310, 353, 354, 357], "optima": 4, "sens": [4, 352, 358], "product": [4, 9, 193, 194, 197, 198, 334, 335], "sum": [4, 20, 30, 32, 77, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 120, 151, 204, 205, 224, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 276, 283, 290, 341, 345, 346, 347, 348, 351, 354, 357, 358, 363], "track": [4, 13, 14, 15, 16, 17, 18, 19, 20, 41, 72, 151, 167, 169, 238, 239, 308, 313, 346, 348, 349, 352, 357, 358, 360], "stat": [4, 139, 324, 336, 346, 347], "w": [4, 68, 121, 123, 147, 159, 193, 239, 303, 346, 348, 360], "r": [4, 31, 117, 124, 139, 153, 194, 244, 252, 283, 340, 346, 358, 363], "yield": [4, 15, 20, 31, 86, 90, 104, 110, 169, 269, 345, 351], "insight": 4, "auxiliari": [4, 351], "credit": 4, "futur": [4, 31, 33, 35, 38, 86, 90, 104, 110, 143, 161, 165, 169, 201, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 339, 362], "past": [4, 238, 346, 360], "spars": [4, 348], "ad": [4, 15, 22, 31, 34, 37, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 86, 90, 104, 110, 151, 161, 169, 208, 209, 239, 253, 255, 257, 262, 268, 271, 274, 282, 346, 348, 350, 360, 363], "intermedi": [4, 13, 14, 120, 195, 199, 234, 345, 359], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 345], "discov": 4, "score": [4, 39], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 362], "select": [4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 105, 106, 111, 112, 117, 118, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 142, 144, 145, 146, 148, 151, 152, 155, 156, 157, 158, 160, 163, 164, 166, 167, 169, 179, 195, 199, 233, 241, 319, 345, 349, 360], "fall": [4, 53], "explicit": [4, 11, 44, 68, 200, 360], "mechan": [4, 31, 86, 90, 104, 110, 161, 169, 346, 351, 358], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 86, 90, 104, 110, 197, 260, 267, 347, 357], "addition": 4, "timestep": [4, 39, 53, 148, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 357], "realli": 4, "larg": [4, 26, 33, 35, 38, 126, 129, 163, 253, 255, 268, 271, 273, 346, 347, 357, 360], "huge": [4, 207, 348], "std": [4, 139, 167, 210, 214, 231, 345, 363], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 344, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 361], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 39, 77, 86, 90, 104, 110, 120, 139, 143, 157, 160, 161, 163, 168, 169, 179, 193, 194, 197, 198, 203, 208, 209, 231, 235, 236, 238, 239, 253, 254, 256, 257, 259, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 329, 336, 345, 346, 348, 349, 350, 352, 358, 363], "estim": [4, 51, 66, 73, 74, 130, 137, 183, 228, 229, 230, 253, 254, 255, 256, 257, 259, 261, 262, 263, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 341, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "unseen": 4, "extrins": 4, "wrong": [4, 66, 73], "bonus": 4, "denser": 4, "prior": [4, 218, 264, 357], "freshli": 4, "drop": [4, 72, 74, 177], "meant": [4, 31, 100], "encourag": [4, 104, 345, 346, 360], "measur": [4, 62, 63, 79, 82, 83, 95, 96, 347, 352], "novelti": 4, "revisit": 4, "previous": [4, 347, 363], "diminish": 4, "decreas": [4, 350], "ideal": [4, 139, 358], "down": [4, 13, 14, 15, 16, 348, 349], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 33, 35, 38, 346, 347, 348, 351, 352, 357, 358, 362, 363], "distil": 4, "nois": [4, 168, 209, 226, 239, 272, 276, 316, 336, 345], "exploratori": [4, 253, 255, 268, 271], "misalign": 4, "trade": [4, 350], "unavoid": 4, "divers": [4, 104, 110], "bootstrap": [4, 262, 285, 291, 292, 345, 348], "noisi": [4, 208, 209, 226, 340], "unstabl": [4, 196, 222, 223], "inher": 4, "stochast": [4, 137, 191, 209, 211, 218, 254, 258, 260, 261, 267, 270, 272, 274, 340, 347, 350, 357], "enemi": 4, "pomdp": [4, 360], "loos": [4, 340, 346, 347], "nonexist": 4, "architectur": [4, 187, 351, 357], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 34, 36, 37, 39, 42, 44, 57, 60, 61, 68, 69, 71, 76, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 119, 120, 121, 122, 123, 126, 128, 129, 133, 135, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 167, 180, 181, 188, 190, 193, 197, 201, 204, 205, 206, 207, 213, 216, 220, 232, 245, 246, 258, 302, 303, 315, 316, 317, 319, 320, 329, 340, 345, 347, 348, 356, 357, 363], "lstm": [4, 198, 199, 200, 210], "rel": [4, 68, 157, 188, 221, 345, 346, 357, 360], "tend": 4, "stabl": [4, 9, 10, 103], "compens": 4, "descent": [4, 209], "minimum": [4, 104, 110, 149, 191, 210, 221, 222, 223, 247, 250, 252, 254, 261, 269, 270, 274, 311, 345, 347, 354, 357], "manual": [4, 17, 19, 20, 90, 345, 348, 360], "deviat": [4, 139, 167, 179, 191, 203, 208, 209, 214, 231, 271, 276, 345, 350, 357], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 73, 193, 194, 197, 198, 349, 350, 351, 352, 353, 354], "stabil": [4, 134, 253, 255, 268, 271, 273], "stage": [4, 345, 358], "never": [4, 13, 14, 16, 352], "prevent": [4, 25, 27, 196, 222, 223, 253, 255, 268, 271, 273, 318, 360], "entir": [4, 57, 86, 90, 104, 110, 206, 347, 349, 358, 360], "submit": [4, 118, 339, 362], "system": [4, 5, 347, 357, 358], "adequ": [4, 170, 347, 357], "infeas": 4, "allevi": [4, 340], "prune": 4, "fire": [4, 31, 86, 90, 104, 110, 169], "illeg": 4, "move": [4, 31, 59, 86, 90, 104, 110, 125, 127, 143, 157, 160, 161, 163, 165, 167, 169, 177, 201, 243, 318, 345, 346, 348, 349, 362, 363], "chess": 4, "combin": [4, 160, 346, 353, 360], "grasp": 4, "top": [4, 77, 82, 83, 95, 96, 179, 203, 350], "wherein": 4, "cumul": [4, 151, 156, 179, 290, 347], "q": [4, 9, 86, 90, 104, 110, 183, 184, 185, 186, 189, 190, 192, 215, 216, 224, 230, 234, 241, 242, 254, 256, 257, 259, 260, 261, 262, 266, 267, 272, 274, 276, 282, 329, 338, 345, 351], "flow": [4, 345, 347, 357, 358, 360], "reparameter": [4, 188, 205, 213], "soft": [4, 266, 274, 275], "critic": [4, 8, 228, 237, 253, 255, 256, 260, 261, 267, 268, 271, 272, 273, 274, 276, 345, 351], "clip": [4, 39, 124, 149, 253, 255, 268, 271, 273, 276, 320, 347, 357, 358], "oppos": [4, 44], "incorrect": 4, "thought": [4, 86, 90, 104, 110], "bound": [4, 20, 24, 25, 31, 86, 90, 104, 110, 124, 138, 167, 169, 217, 218, 227, 233, 234, 239, 240, 241, 242, 243, 244, 247, 276, 340, 345, 346, 347, 363], "region": 4, "squash": [4, 348, 362], "tanh": [4, 180, 181, 193, 194, 196, 197, 198, 201, 207, 221, 222, 223, 247, 347, 350, 357, 358, 359, 362], "correct": [4, 33, 35, 38, 86, 90, 104, 110, 137, 323, 347, 348], "prob": [4, 204, 205, 213, 347, 357], "rememb": 4, "remap": 4, "origin": [4, 8, 33, 35, 38, 39, 94, 127, 128, 137, 143, 161, 165, 169, 193, 240, 243, 244, 266, 269, 271, 329, 345, 356, 358, 363], "histor": 5, "ceas": 5, "farama": [5, 55, 97, 98, 105, 106, 347, 358], "bc": [5, 362], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 104, 110, 169, 170, 227, 233, 234, 240, 241, 242, 243, 244, 347, 357], "best": [5, 9, 94, 195, 199, 357, 360, 362], "gymwrapp": [5, 86, 90, 104, 110, 131, 152, 155, 166, 338, 347, 362], "feel": [5, 339, 354, 362], "free": [5, 7, 126, 129, 253, 264, 271, 342, 347, 354, 357, 362], "gladli": 5, "prepar": [6, 54, 347], "conda": [6, 7, 339], "cmake": 6, "activ": [6, 7, 9, 180, 181, 187, 191, 201, 206, 207, 255, 268, 271, 340, 358, 362], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 54, 339], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 92], "y": [6, 7, 37, 103, 192, 200, 206, 225, 345, 357, 360], "facebookresearch": [6, 54, 92], "subdirectori": 6, "verbos": [6, 354], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 48, 86, 90, 104, 110, 145, 154, 169, 269, 357, 363], "command": [6, 7, 10, 347, 357, 358, 363], "readm": [6, 7, 111], "md": [6, 7], "habitatenv": [6, 338], "_has_habitat": 6, "available_env": [6, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 97, 103, 104, 107, 108, 109, 110, 111, 112, 363], "startswith": [6, 341, 345, 351], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 87, 269, 345], "env_nam": [6, 82, 84, 86, 89, 90, 92, 95, 97, 101, 104, 107, 110, 345, 347, 363], "llvmlite": 6, "config": [6, 7, 143, 165, 182, 187, 214, 324, 325, 326, 329, 330, 333], "var": [6, 7, 31, 86, 90, 104, 110, 161, 169, 269, 274], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 233], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 86, 90, 104, 110, 161, 169, 269, 274, 360], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 86, 346, 354], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 53], "stand": [7, 84, 85, 104, 110, 356, 358], "joint": [7, 346], "dynam": [7, 54, 57, 59, 169, 260, 267, 347, 349, 358], "contact": [7, 36], "engin": [7, 107, 358], "biomechan": 7, "graphic": 7, "anim": [7, 357], "area": 7, "demand": [7, 353, 363], "fast": [7, 9, 82, 83, 146, 272, 345, 346, 347], "accur": [7, 53, 59, 346, 358, 360], "articul": 7, "acquir": [7, 347], "deepmind": [7, 8, 9, 57, 84, 85, 86, 90, 104, 110, 130, 347, 349], "whomev": 7, "licenc": 7, "incorpor": [7, 86, 90, 104, 110, 231, 235, 236, 239, 348, 350, 358], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 339], "tip": [7, 339], "glfw": [7, 345], "osmesa": 7, "egl": 7, "advic": [7, 57, 363], "sudo": [7, 339], "enabl": [7, 8, 53, 62, 63, 72, 79, 118, 195, 199, 238, 239, 316, 347, 349, 357, 358, 360], "apt": [7, 357], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 62, 63, 64, 75, 76, 79, 346, 348], "workflow": [7, 228, 229, 230], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 23, 26, 32, 119, 190, 216, 233, 234, 241, 242, 257, 260, 261, 282], "mkdir": 7, "tag": [7, 303, 305, 308, 336, 353, 354], "earlier": [7, 345, 347, 348, 357, 360], "roboti": 7, "html": [7, 101, 103], "wget": 7, "mujoco210": 7, "tar": [7, 54], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 104, 110], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 33, 35, 44, 60], "bin": [7, 190, 234, 340], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 186, 240, 244, 345, 347, 360], "nvidia": [7, 94], "older": [7, 11], "hack": [7, 345], "line": [7, 31, 51, 86, 90, 104, 110, 169, 345, 346, 353, 357, 360, 363], "adatp": 7, "script": [7, 54, 170, 329, 332, 336, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "unnot": [7, 144], "until": [7, 20, 158, 160, 169, 347, 348, 354, 357], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 346, 360], "troubleshoot": 7, "gl": 7, "h": [7, 68, 121, 123, 147, 159, 193, 194, 195, 197, 198, 199, 203, 303, 346, 348, 360], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 308, 310, 342, 345, 350, 353], "devel": 7, "ubuntu": [7, 94], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 346, 348, 356], "libstdc": 7, "glibcxx_3": 7, "29": [7, 346, 347, 348, 357, 358], "compil": [7, 31, 66, 73, 74, 86, 90, 104, 110, 169, 193, 194, 197, 198, 200], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 166, 347, 356], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 86, 90, 104, 110, 138, 161, 169, 274, 360, 363], "job": [7, 17, 18, 19, 21, 37, 360], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 82, 83, 346, 348, 358], "114": [7, 358], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 348, 358], "offscreenopenglcontext": 7, "opengl": [7, 357], "global": [7, 31, 86, 90, 104, 105, 106, 110, 169, 215, 224, 240, 244, 282, 342, 345, 357], "cuda_visible_devic": 7, "id": [7, 22, 39, 66, 68, 73, 74, 86, 89, 90, 104, 110, 239, 272, 306, 310, 329, 352, 360], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 346, 358], "correctli": [7, 31, 86, 90, 104, 110, 169], "lgl": 7, "libegl": 7, "x11": [7, 357], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 342], "n_training_step": 8, "datapoint": [8, 44, 360], "n_data_per_train": 8, "no_grad": [8, 31, 86, 90, 104, 110, 137, 169, 193, 194, 197, 198, 284, 285, 286, 287, 347, 348, 357], "loss_fn": [8, 348, 351, 352, 362], "zero_grad": [8, 31, 86, 90, 104, 110, 169, 342, 345, 347, 348, 351, 354, 357, 358], "backpropag": [8, 82, 83, 95, 96, 104, 253, 254, 255, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 282, 351, 357, 358], "differenti": [8, 44, 82, 83, 137, 284, 285, 286, 287, 348, 350, 351, 357, 358], "denomin": 8, "artifact": 8, "numer": [8, 37, 90, 167, 196, 222, 223, 227, 233, 234, 240, 241, 242, 243, 244, 318, 347, 360, 363], "misconcept": 8, "freed": 8, "appear": [8, 32, 51, 57, 66, 73, 74, 358, 360], "compuat": 8, "fix": [8, 104, 157, 254, 270, 274, 346, 354, 358, 363], "retain_graph": [8, 82, 83], "discuss": [8, 9, 352, 357], "inplac": [8, 31, 33, 35, 38, 86, 90, 104, 110, 169, 345], "onto": [8, 32, 33, 35, 38, 174, 227, 231, 233, 234, 239, 240, 241, 242, 243, 244, 348, 358], "exclud": [8, 53, 58, 86, 90, 104, 110, 121, 131, 177, 215, 357, 360], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 117, 118, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 143, 144, 145, 146, 148, 151, 152, 155, 156, 157, 158, 160, 163, 164, 166, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 206, 207, 208, 210, 211, 212, 214, 215, 217, 218, 220, 224, 225, 231, 232, 234, 235, 238, 239, 240, 242, 243, 244, 247, 248, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 341, 358, 360, 362, 363], "submodul": [8, 31, 86, 90, 104, 110, 114, 169, 269], "param": [8, 31, 39, 86, 90, 100, 104, 110, 118, 125, 126, 127, 131, 137, 145, 146, 152, 155, 160, 169, 188, 190, 221, 232, 240, 243, 246, 269, 278, 281, 284, 285, 286, 287, 288, 345, 354, 357, 358, 359, 362], "grad": [8, 31, 82, 83, 86, 90, 104, 110, 169, 345, 347], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 86, 90, 104, 105, 106, 110, 125, 143, 157, 160, 161, 163, 165, 169, 210, 215, 243], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 40, 65, 66, 121, 133, 144, 162, 263, 284, 286, 287, 341, 347, 357, 358], "much": [8, 13, 14, 16, 34, 40, 57, 65, 66, 104, 110, 268, 271, 347, 349, 353, 357, 358, 360, 363], "render": [8, 111, 303, 316, 345, 346, 347, 349, 353], "factor": [8, 31, 148, 169, 196, 209, 222, 223, 231, 235, 236, 239, 254, 259, 262, 263, 265, 275, 290, 345, 346, 350, 354, 357, 360, 363], "fit": [8, 11, 139, 341, 342, 345], "bottlneck": 8, "brax": [8, 82, 83, 86, 90, 104, 110, 146, 349, 363], "jax": [8, 11, 82, 83, 95, 96], "improperli": 8, "underli": [8, 86, 90, 104, 110, 269, 349, 351, 353, 358], "tedeiou": 8, "priorit": [8, 34, 40, 65, 66, 256, 257, 259, 260, 261, 267, 272, 274, 276, 345, 346, 352], "amount": [8, 239, 346, 360], "costli": [8, 358], "constitut": [8, 346, 357, 358], "plain": [8, 349], "profil": 8, "frequent": [8, 360], "program": [8, 260, 267, 363], "functorch": [8, 10], "incl": 8, "suit": [8, 85, 347, 349, 363], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 73, 74, 118, 243, 246, 269, 357, 358, 360, 362], "new_shap": 8, "permut": [8, 72, 141, 362, 363], "idea": [9, 272, 342, 348, 350, 357], "introductori": 9, "intro": [9, 347, 348], "dai": [9, 362], "2022": [9, 10, 358, 362], "spin": [9, 84, 85], "deep": [9, 121, 183, 184, 185, 186, 189, 239, 253, 266, 274, 275, 345], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 350], "summari": [9, 139, 167, 345, 346, 347, 348], "reddit": 9, "reagent": 9, "orient": [9, 59, 363], "baselines3": 9, "tf": 9, "bandit": [9, 103], "tensorflow": [9, 204, 205], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 354], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 362], "grade": 9, "factori": [9, 42, 345], "cherri": 9, "jaxrl": 9, "mbrl": [9, 100, 340], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 358], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 347, 348, 357], "notebook": [10, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "24": [10, 58, 74, 89, 101, 102, 238, 344, 346, 358, 361], "pip3": [10, 345, 347, 348, 357], "url": [10, 92], "org": [10, 34, 54, 55, 57, 59, 65, 66, 82, 83, 84, 85, 92, 95, 96, 101, 102, 103, 107, 111, 112, 121, 143, 163, 182, 183, 184, 185, 186, 187, 190, 191, 192, 197, 203, 204, 205, 209, 211, 212, 215, 217, 218, 224, 234, 239, 253, 254, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 270, 271, 273, 274, 275, 284, 289, 297, 337, 355, 359], "whl": 10, "u": [10, 56, 193, 194, 197, 198, 358], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 269], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 68, 77, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 121, 128, 130, 136, 137, 139, 143, 144, 147, 152, 155, 156, 161, 163, 165, 166, 167, 169, 171, 175, 177, 178, 179, 189, 190, 195, 199, 200, 202, 203, 206, 207, 208, 209, 210, 215, 216, 224, 227, 233, 234, 238, 240, 241, 242, 243, 244, 247, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 282, 283, 284, 285, 286, 287, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 329, 330, 336, 346, 347], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 195, 199, 200, 362], "longer": [11, 346, 354, 357, 360], "self": [11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 86, 90, 100, 104, 110, 117, 118, 125, 126, 129, 143, 145, 157, 160, 161, 163, 165, 169, 179, 190, 203, 215, 224, 231, 235, 240, 243, 248, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 284, 285, 286, 287, 288, 342, 345, 358, 360, 362, 363], "x": [11, 22, 25, 31, 37, 39, 57, 74, 137, 159, 181, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 206, 207, 225, 233, 240, 241, 250, 252, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 320, 345, 358, 360, 362], "23": [11, 58, 74, 344, 346, 351, 358, 361], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 58, 82, 83, 90, 95, 96, 198, 252, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 345, 346, 347, 348, 354, 357, 358, 360, 363], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 121, 122, 128, 139, 156, 157, 158, 161, 167, 169, 193, 196, 197, 206, 207, 222, 223, 233, 241, 247, 254, 264, 269, 270, 274, 284, 286, 287, 316, 317, 342, 345, 346, 347, 348, 358, 363], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 86, 90, 104, 110, 163, 182, 214], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 58, 66, 73, 74, 86, 87, 88, 90, 101, 104, 105, 106, 110, 111, 112, 113, 137, 157, 161, 166, 167, 169, 180, 181, 182, 183, 184, 185, 186, 187, 192, 200, 201, 214, 240, 244, 274, 307, 308, 316, 325, 326, 329, 334, 335, 336, 345, 346, 347, 360, 363], "setter": 11, "setter_dict": 11, "copi": [11, 17, 18, 19, 20, 31, 33, 35, 38, 39, 44, 57, 86, 90, 104, 110, 146, 156, 161, 169, 177, 195, 199, 232, 269, 274, 341, 345, 346, 348, 349, 360], "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 87, 104, 110, 345, 362], "device_typ": [13, 15, 16, 26, 29, 32, 180, 181, 182, 183, 184, 185, 186, 192, 200, 201, 206, 207, 208, 209, 214], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 346], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 346], "create_env_kwarg": [13, 14, 15, 16, 20, 87, 101, 104, 110, 345, 363], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 31, 148, 346, 360], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 269, 316, 345, 346, 347, 348, 350, 362], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 172, 176, 240, 244, 316], "exploration_mod": [13, 15, 16, 17, 18, 19, 338, 340], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 32, 34, 39, 40, 45, 57, 65, 66, 68, 86, 90, 104, 110, 121, 125, 126, 129, 137, 139, 143, 148, 149, 150, 156, 157, 159, 160, 161, 163, 165, 167, 169, 188, 191, 193, 196, 197, 201, 204, 205, 208, 209, 217, 218, 221, 223, 231, 243, 247, 250, 251, 252, 253, 254, 255, 259, 260, 261, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 318, 345, 346, 360, 363], "num_thread": [13, 14, 16, 33, 35, 38, 104, 110], "num_sub_thread": [13, 14, 16, 104, 110], "set_trunc": [13, 14, 15, 16, 86, 90, 104, 110], "datacollector": [13, 14, 15, 16, 31, 244, 271, 347, 352, 360], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 66, 73, 227, 231, 233, 234, 239, 240, 241, 242, 243, 244, 246, 340, 362], "sota": [13, 14, 100, 134, 273, 311, 325, 345, 346, 347, 350, 351, 352, 357, 362], "env_mak": [13, 14, 15, 20, 332, 363], "50": [13, 14, 15, 20, 36, 39, 51, 59, 73, 74, 169, 344, 346, 347, 348, 357, 358, 359, 360, 361], "2000": [13, 14, 15, 31, 44, 93, 347, 360], "int64": [13, 14, 15, 22, 26, 29, 33, 35, 36, 38, 39, 40, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 86, 90, 99, 103, 104, 105, 106, 108, 109, 110, 118, 130, 141, 148, 155, 190, 216, 233, 234, 239, 240, 241, 242, 340, 347, 348, 349, 350, 352, 353, 358, 360, 362], "shutdown": [13, 14, 15, 16, 20, 118, 345, 362], "del": [13, 14, 15, 345, 347, 356, 362, 363], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 120, 225, 233, 238, 241, 348], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 44], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 346], "divis": [13, 14, 15, 16, 17, 18, 19, 51, 57, 66, 73, 74, 357], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 90, 157, 166, 199, 348, 358, 359], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 322, 346], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 60, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 101, 102, 104, 107, 110, 125, 126, 129, 137, 143, 157, 160, 161, 163, 165, 167, 169, 243, 329, 363], "span": [13, 14, 15, 16, 17, 18, 19, 20, 57, 73], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 169, 238, 346, 347, 357], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 39, 310, 340, 357, 358], "round": [13, 14, 15, 16, 17, 18, 19, 20, 51], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 55, 86, 90, 104, 110, 169], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 166, 362], "ratio": [13, 14, 16, 39, 345, 347], "finish": [13, 14, 16, 20, 90, 148, 363], "rest": [13, 14, 16, 340, 347, 348, 358, 362], "earli": [13, 14, 16, 31, 90, 155, 362], "plu": [13, 14, 16, 39, 104, 110, 358], "safeti": [13, 14, 16, 100, 104, 110], "harm": [13, 14, 16, 104, 110], "exclus": [13, 14, 47, 48, 51, 57, 66, 73, 74, 118, 133, 193, 195, 197, 199, 204, 205, 233, 234, 241, 242, 275, 276, 284, 285, 286, 287, 288, 310, 336, 340], "add_truncated_kei": [13, 14, 15, 16, 86, 90, 104, 110, 161], "ordereddict": [13, 14, 15, 16, 20, 31, 86, 90, 104, 110, 161, 167, 169, 274, 346], "form": [13, 14, 16, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 167, 169, 193, 195, 197, 199, 252, 253, 255, 268, 271, 320, 340, 350, 357], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 86, 90, 104, 110, 161], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 32, 39, 46, 66, 73, 74, 75, 86, 90, 104, 110, 130, 134, 139, 155, 180, 181, 201, 206, 207, 260, 267, 274, 360], "increment": [13, 14, 15, 16, 86, 90, 104, 110, 268], "env_fn": [13, 14, 15, 16, 87, 334, 335], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 73, 74, 185, 186, 358], "out_se": [13, 14, 15, 16, 363], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 45, 51, 53, 54, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 125, 143, 145, 154, 157, 160, 161, 162, 164, 165, 168, 169, 179, 180, 181, 183, 184, 185, 186, 189, 192, 195, 196, 199, 201, 202, 203, 206, 207, 213, 221, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 282, 283, 284, 285, 286, 287, 288, 303, 307, 308, 310, 313, 320, 325, 326, 329, 333, 334, 335, 341, 345, 347, 357, 360], "envcreat": [15, 21, 104, 110, 332, 333, 336, 338, 345, 346, 362, 363], "return_same_td": 15, "interruptor": 15, "cautious": [15, 271], "whole": [15, 25, 27, 31, 44, 86, 90, 104, 110, 161, 169, 240, 274, 311, 345, 347], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 350], "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 90, 101, 137, 253, 255, 268, 271, 345, 346, 349, 356, 358, 362], "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 320], "respect": [17, 18, 19, 31, 86, 90, 104, 110, 119, 125, 126, 129, 143, 144, 153, 157, 160, 161, 163, 165, 169, 193, 197, 206, 218, 243, 248, 253, 255, 268, 271, 273, 284, 286, 287, 315, 347, 348, 357], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 339, 346, 347, 350, 353, 356, 360], "fashion": [17, 19, 20, 33, 35, 38, 74], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 133], "seen": [17, 18, 19, 20, 86, 90, 104, 110, 341, 345, 346, 348, 351, 357, 360], "submitit_delai": [17, 21], "former": [17, 18, 19, 34, 37, 40, 41, 53, 86, 90, 104, 110, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 345], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 358], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 345], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 32, 51, 240, 244], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 334, 335, 345, 346], "coordin": 20, "init": [20, 31, 86, 90, 104, 110, 169, 310, 346, 347], "autodetect": 20, "similarli": [20, 31, 72, 76, 86, 90, 104, 110, 169, 206, 245, 246, 260, 267, 363], "num_cpu": 20, "num_gpu": 20, "1024": [20, 187, 346, 360], "equat": [20, 57, 90, 239, 252, 255, 275, 347, 349, 358], "exce": [20, 360], "indefinit": [20, 50], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 320, 347, 348], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 351], "jump": [21, 349], "host": [21, 31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 182, 187, 214, 232], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 86, 90, 104, 110, 235, 236, 239, 240, 247, 253, 254, 256, 267, 271, 272, 274, 276, 338, 347, 357, 358, 362, 363], "rollout_tensordict": 22, "nestedkei": [22, 44, 66, 73, 74, 86, 90, 104, 110, 117, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 133, 135, 136, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 167, 169, 177, 178, 231, 232, 235, 236, 238, 239, 244, 257, 282, 303], "durat": [22, 357], "meta": [22, 43, 53, 88, 92, 253, 255, 268, 271, 273, 342, 347, 357, 360], "aren": [22, 156, 348], "deprec": [22, 31, 86, 90, 104, 110, 161, 169, 171, 175, 236, 253, 255, 257, 260, 261, 262, 267, 268, 271, 272, 273, 274, 282, 284, 285, 286, 287, 292, 363], "eventu": [22, 215, 348, 358], "supersed": 22, "recov": [22, 53, 55, 57, 58, 59, 73, 74, 231, 236, 239, 245, 260, 267, 356], "cat": [22, 248, 254, 256, 267, 272, 274, 276, 360, 362], "arang": [22, 26, 32, 66, 190, 205, 233, 311, 340, 360], "obs_": 22, "trajectory_id": 22, "int32": [22, 41, 51, 57, 73, 95, 96, 174, 238], "data_split": 22, "got": [22, 352], "int8": [23, 86, 99, 105, 106, 119], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "op": [23, 24, 26, 29, 30, 32, 43, 45, 46, 138, 166, 231, 235, 303, 322], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 41, 43, 45, 46, 82, 83, 86, 89, 91, 92, 95, 96, 101, 102, 107, 128, 212, 213, 217, 252, 340, 346, 347, 348, 350, 358, 360], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 239, 247], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 247, 358], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 180, 181, 201, 219, 220], "start_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "end_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 363], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 128, 197, 227, 231, 233, 234, 239, 240, 241, 242, 243, 244, 310, 340, 362, 363], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 95, 96, 100, 117, 118, 126, 129, 145, 179, 203, 240, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 274, 276, 358, 362, 363], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 157, 174, 358, 360], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 160, 161, 210, 221, 336], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 32, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 128, 190, 213, 216, 233, 234, 241, 242, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 348], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 190, 216, 233, 241, 257, 259, 260, 261, 282, 338, 340, 350], "convert": [23, 26, 29, 30, 31, 32, 33, 35, 38, 44, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 125, 126, 129, 143, 157, 160, 161, 163, 165, 167, 169, 243, 252, 269, 345, 346, 347, 358, 360], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "unflatten": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 118, 238], "upper": [24, 71, 138], "unnam": 25, "constraint": [25, 100, 347, 357], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 122, 329, 345], "td_project": 25, "absent": [25, 27, 53, 86, 90, 104, 110, 161], "is_empti": [25, 27, 358], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 86, 90, 104, 110, 169], "keysview": [25, 27], "reflect": [25, 27, 91, 105, 106, 166, 177, 269, 323, 346, 347, 348, 357], "lock_": [25, 27], "recurs": [25, 27, 31, 47, 48, 86, 90, 104, 110, 169, 269], "succeed": [25, 27], "selected_kei": [25, 27, 152, 345], "unlock_": [25, 27], "unlock": [25, 27, 33, 35, 38], "valuesview": 25, "onehottensorspec": [26, 82, 83, 89, 91, 92, 95, 96, 101, 102, 107], "action_valu": [26, 32, 189, 190, 216, 233, 234, 241, 242, 261, 269, 282, 340, 348, 350, 354], "argmax": [26, 86, 90, 104, 110, 190, 216, 234, 242, 350], "chosen_action_valu": [26, 32, 215, 216, 224, 241, 242, 282, 340, 348, 350], "outcom": [26, 32, 188, 221], "drawn": [27, 28, 157, 235, 240, 244, 347, 357], "lazystackedtensordict": [27, 51, 86, 90, 100, 104, 110, 356], "heterogen": [27, 28, 99, 105, 106, 170, 206, 207, 345, 346], "thrown": [28, 31, 86, 90, 104, 110, 169, 360], "nvec": [29, 30], "cardin": [29, 30, 190, 216, 233, 234, 242, 347], "ax": [29, 208, 209], "m": [29, 31, 86, 90, 104, 110, 128, 169, 244, 340, 346, 358], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 257, 260, 261, 282, 338], "use_regist": [30, 32], "to_categor": [30, 32], "to_categorical_spec": [30, 32], "multidiscretetensorspec": [30, 338], "gamma": [31, 148, 169, 203, 253, 254, 256, 257, 259, 261, 262, 263, 265, 267, 269, 271, 272, 273, 274, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 332, 341, 345, 346, 347, 357, 362], "sutton": [31, 341, 357], "1988": 31, "tempor": [31, 195, 199, 203, 285, 286, 291, 292], "44": [31, 346, 348, 358, 359], "discount": [31, 57, 87, 148, 169, 254, 259, 262, 263, 265, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 341, 346, 347, 357], "ahead": [31, 169, 363], "bias": [31, 193, 194, 197, 198, 250, 341, 345], "mitig": 31, "pleas": [31, 55, 86, 90, 104, 105, 106, 110, 118, 121, 158, 161, 169, 274, 339], "multisteptransform": [31, 338], "99": [31, 148, 167, 203, 265, 278, 283, 290, 332, 345, 346, 347, 351, 354, 358, 362], "add_modul": [31, 86, 90, 104, 110, 169], "child": [31, 86, 90, 104, 110, 169, 345], "fn": [31, 36, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 169, 210, 334, 335], "init_weight": [31, 86, 90, 104, 110, 169], "fill_": [31, 86, 90, 104, 110, 169, 346, 348, 363], "net": [31, 86, 90, 104, 110, 169, 184, 186, 189, 192, 200, 207, 253, 254, 261, 267, 271, 272, 273, 274, 329, 332, 346, 358, 359, 362], "in_featur": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 180, 181, 183, 184, 185, 186, 192, 200, 201, 206, 207, 208, 209, 228, 243, 257, 259, 350, 351, 362], "out_featur": [31, 86, 90, 100, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 179, 180, 181, 183, 184, 185, 186, 191, 192, 195, 199, 200, 201, 203, 206, 207, 208, 209, 228, 233, 243, 257, 259, 340, 345, 348, 350, 351, 354, 362], "bia": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 180, 181, 183, 184, 185, 186, 191, 192, 193, 194, 195, 197, 198, 199, 201, 207, 208, 209, 210, 235, 236, 239, 243, 250, 251, 252, 269, 274, 341, 345, 346, 347, 348, 357, 362], "requires_grad": [31, 82, 83, 86, 90, 104, 110, 137, 161, 169, 274], "bfloat16": [31, 86, 90, 104, 110, 169], "datatyp": [31, 86, 90, 104, 110, 169, 360], "member": [31, 86, 90, 104, 110, 169, 269, 303], "xdoctest": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 269, 274], "buf": [31, 86, 90, 104, 110, 169], "20l": [31, 86, 90, 104, 110, 169, 269], "1l": [31, 86, 90, 104, 110, 169, 269], "5l": [31, 86, 90, 104, 110, 169, 269], "__call__": [31, 36, 86, 90, 104, 110, 169, 244, 342, 363], "doubl": [31, 45, 86, 90, 104, 110, 125, 126, 127, 129, 143, 157, 160, 161, 163, 165, 169, 243, 257, 262, 266, 272, 275, 282, 345, 346, 347, 348, 363], "eval": [31, 86, 90, 104, 110, 161, 167, 169, 345, 346, 347], "evalu": [31, 86, 90, 104, 110, 161, 169, 188, 204, 205, 213, 223, 272, 325, 326, 346, 347, 354], "dropout": [31, 86, 90, 104, 110, 161, 169, 193, 195, 197, 199, 201, 348], "batchnorm": [31, 86, 90, 104, 110, 161, 169], "disabl": [31, 86, 90, 104, 110, 161, 169, 196, 223, 345], "comparison": [31, 86, 90, 104, 110, 161, 169, 269, 345, 346], "similar": [31, 33, 35, 37, 38, 57, 86, 90, 104, 105, 106, 110, 125, 143, 157, 160, 161, 163, 164, 165, 167, 169, 228, 230, 240, 243, 244, 341, 345, 346, 347, 348, 350, 351, 352, 353, 358, 360, 363], "extra_repr": [31, 86, 90, 104, 110, 169], "nontermin": 31, "original_reward": 31, "newli": [31, 86, 90, 104, 110], "OR": 31, "get_buff": [31, 86, 90, 104, 110, 169], "get_submodul": [31, 86, 90, 104, 110, 169], "qualifi": [31, 86, 90, 104, 110, 169], "referenc": [31, 86, 90, 104, 110, 169], "attributeerror": [31, 86, 90, 104, 110, 169, 363], "invalid": [31, 77, 86, 90, 104, 110, 113, 169, 204, 205], "resolv": [31, 86, 90, 104, 110, 169], "someth": [31, 86, 90, 99, 104, 110, 169, 339, 346, 347, 358, 363], "get_extra_st": [31, 86, 90, 104, 110, 167, 169], "set_extra_st": [31, 86, 90, 104, 110, 167, 169], "picklabl": [31, 86, 90, 104, 110, 167, 169], "pickl": [31, 86, 90, 104, 110, 167, 169], "get_paramet": [31, 86, 90, 104, 110, 169], "net_b": [31, 86, 90, 104, 110, 169], "net_c": [31, 86, 90, 104, 110, 169], "conv": [31, 86, 90, 104, 110, 169, 180, 181, 346], "conv2d": [31, 86, 90, 104, 110, 169, 181, 183, 184, 192, 206, 362], "kernel_s": [31, 86, 90, 104, 110, 169, 180, 181, 183, 184, 192, 206, 211, 346, 362], "stride": [31, 86, 90, 104, 110, 169, 180, 181, 183, 184, 192, 206, 346, 362], "diagram": [31, 86, 90, 104, 110, 169], "degre": [31, 86, 90, 104, 110, 169], "named_modul": [31, 86, 90, 104, 110, 169], "o": [31, 86, 90, 104, 110, 169, 198], "half": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 345], "ipu": [31, 86, 90, 104, 110, 169], "strict": [31, 33, 35, 38, 86, 90, 104, 110, 161, 169, 274], "descend": [31, 86, 90, 104, 110, 161, 169, 274], "get_swap_module_params_on_convers": [31, 86, 90, 104, 110, 161, 169, 274], "persist": [31, 86, 90, 104, 110, 161, 169, 177, 274], "enforc": [31, 72, 86, 90, 104, 110, 161, 169, 245, 274, 358], "preserv": [31, 86, 90, 104, 110, 161, 169, 274], "missing_kei": [31, 86, 90, 104, 110, 161, 169, 274], "unexpected_kei": [31, 86, 90, 104, 110, 161, 169, 274], "namedtupl": [31, 86, 90, 104, 110, 161, 169, 274], "duplic": [31, 72, 86, 90, 104, 110, 169, 257, 262, 269, 282], "l": [31, 86, 90, 104, 110, 169, 193, 197, 283, 347, 358], "idx": [31, 86, 90, 104, 110, 169], "named_buff": [31, 86, 90, 104, 110, 169], "remove_dupl": [31, 86, 90, 104, 110, 169, 269], "prepend": [31, 86, 90, 104, 110, 169, 269], "running_var": [31, 86, 90, 104, 110, 169], "named_children": [31, 86, 90, 104, 110, 169], "conv4": [31, 86, 90, 104, 110, 169], "conv5": [31, 86, 90, 104, 110, 169], "memo": [31, 86, 90, 104, 110, 169], "named_paramet": [31, 86, 90, 104, 110, 137, 169, 269], "register_backward_hook": [31, 86, 90, 104, 110, 169], "removablehandl": [31, 86, 90, 104, 110, 169], "favor": [31, 86, 90, 104, 110, 169, 347], "register_full_backward_hook": [31, 86, 90, 104, 110, 169], "register_buff": [31, 86, 90, 104, 110, 169], "running_mean": [31, 86, 90, 104, 110, 169], "alongsid": [31, 86, 90, 104, 110, 169, 353, 357], "num_featur": [31, 86, 90, 104, 110, 169], "register_forward_hook": [31, 86, 90, 104, 110, 169, 190, 216], "with_kwarg": [31, 86, 90, 104, 110, 169], "always_cal": [31, 86, 90, 104, 110, 169], "register_module_forward_hook": [31, 86, 90, 104, 110, 169], "regardless": [31, 86, 90, 104, 110, 169, 255, 268, 271], "register_forward_pre_hook": [31, 86, 90, 104, 110, 169], "invok": [31, 86, 90, 104, 110, 169], "And": [31, 86, 90, 104, 110, 169, 351], "forward_pr": [31, 86, 90, 104, 110, 169], "register_module_forward_pre_hook": [31, 86, 90, 104, 110, 169], "grad_input": [31, 86, 90, 104, 110, 169], "grad_output": [31, 86, 90, 104, 110, 169], "subsequ": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 169, 348], "technic": [31, 86, 90, 104, 110, 169, 346, 348, 350], "caller": [31, 86, 90, 104, 110, 169], "register_module_full_backward_hook": [31, 86, 90, 104, 110, 169], "register_full_backward_pre_hook": [31, 86, 90, 104, 110, 169], "backward_pr": [31, 86, 90, 104, 110, 169], "register_module_full_backward_pre_hook": [31, 86, 90, 104, 110, 169], "register_load_state_dict_post_hook": [31, 86, 90, 104, 110, 169], "incompatible_kei": [31, 86, 90, 104, 110, 169], "register_modul": [31, 86, 90, 104, 110, 169, 342], "alia": [31, 86, 90, 104, 110, 169], "register_paramet": [31, 86, 90, 104, 110, 169], "register_state_dict_pre_hook": [31, 86, 90, 104, 110, 169], "keep_var": [31, 33, 35, 38, 86, 90, 104, 110, 161, 169, 274], "requires_grad_": [31, 86, 90, 104, 110, 169], "autograd": [31, 86, 90, 104, 110, 161, 169, 274], "freez": [31, 86, 90, 104, 110, 169], "finetun": [31, 86, 90, 104, 110, 169], "gan": [31, 86, 90, 104, 110, 169], "share_memori": [31, 86, 87, 90, 104, 110, 169, 345], "share_memory_": [31, 86, 90, 104, 110, 169, 362], "destin": [31, 33, 35, 38, 86, 90, 104, 110, 120, 126, 127, 129, 161, 163, 167, 169, 177, 274, 303], "averag": [31, 86, 90, 104, 110, 161, 167, 169, 239, 263, 264, 274, 318, 345, 347], "shallow": [31, 86, 90, 104, 110, 161, 169, 274, 348], "detach": [31, 86, 90, 104, 110, 161, 169, 269, 274, 284, 285, 286, 287, 345], "non_block": [31, 33, 35, 38, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 348], "memory_format": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "channels_last": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "unchang": [31, 86, 90, 104, 110, 125, 128, 143, 157, 160, 161, 163, 165, 169, 235, 243, 317, 345, 360], "tri": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 353], "pin": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "4d": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "ignore_w": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "1913": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "3420": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "5113": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "2325": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "torch_doctest_cuda1": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "gpu1": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "1914": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "5112": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 358], "2324": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "float16": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 194, 198, 243], "cdoubl": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "3741": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "j": [31, 34, 65, 66, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 342, 351], "2382": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "5593": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243, 358], "4443": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "complex128": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "6122": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "1150": [31, 86, 90, 104, 110, 125, 143, 157, 160, 161, 163, 165, 169, 243], "to_empti": [31, 86, 90, 104, 110, 169], "dst_type": [31, 86, 90, 104, 110, 169], "xpu": [31, 86, 90, 104, 110, 169], "set_to_non": [31, 86, 90, 104, 110, 169], "unidimension": 32, "keepdim": 32, "user_regist": 32, "priori": 32, "uniqu": [32, 73, 74, 121, 130, 156, 157, 158, 238, 310, 352, 360], "discretebox": [32, 86, 90, 104, 110, 350, 357, 363], "chosen_data": [33, 60], "rewarddata": [33, 60, 338], "rejected_data": [33, 60], "from_dataset": [33, 35, 60], "dataset_nam": [33, 35, 39, 44, 60, 103], "max_length": [33, 35, 36, 42, 44, 60, 354], "550": [33, 35, 39, 44, 60, 73, 74, 358], "root_dir": [33, 35, 44, 60], "from_disk": [33, 35, 44, 60], "carperai": [33, 35, 39, 44], "openai_summarize_comparison": [33, 35, 44], "sequen": [33, 35], "cach": [33, 35, 44, 51, 53, 54, 55, 57, 58, 59, 60, 66, 73, 86, 90, 104, 110, 126, 129, 143, 161, 165, 312, 359], "load_from_disk": [33, 35, 44, 60], "load_dataset": [33, 35, 44, 60], "attention_mask": [33, 35, 36, 38, 39, 42, 44, 60], "92534": 33, "input_id": [33, 35, 36, 38, 39, 42, 44, 60], "end_scor": [33, 38, 39, 60], "sub_data": [33, 35], "from_tensordict": [33, 35, 38], "non_tensordict": [33, 35, 38], "_nodefault": [33, 35, 38], "getattr": [33, 35, 38], "tensorclass": [33, 35, 38, 60, 62, 63, 79], "load_memmap": [33, 35, 38], "fetch": [33, 35, 38, 82, 83, 84, 85, 137, 350, 359, 360], "fromkei": [33, 35, 38], "memmap": [33, 35, 38, 62, 104, 110, 167, 303, 305, 317, 360], "saved_td": [33, 35, 38], "td_load": [33, 35, 38], "from_flatten": [33, 35, 38], "attemptedli": [33, 35, 38], "copy_exist": [33, 35, 38], "return_earli": [33, 35, 38], "share_non_tensor": [33, 35, 38], "mimic": [33, 35, 38, 86, 90, 104, 110], "cross": [33, 35, 38, 179], "anymor": [33, 35, 38, 161, 243], "tensordictfutur": [33, 35, 38], "deepli": [33, 35, 38], "insid": [33, 35, 38, 104, 363], "memmap_": [33, 35, 38, 167], "memmap_lik": [33, 35, 38], "contentless": [33, 35, 38], "1_000_000": [33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 345, 348], "alloc": [33, 35, 38, 63, 204, 205, 345], "setattr": [33, 35, 38], "tent": [33, 35, 38, 44], "to_tensordict": [33, 35, 38, 348], "unbind": [33, 34, 35, 37, 38, 40, 41, 195, 199], "alpha": [34, 40, 65, 66, 180, 181, 183, 184, 185, 186, 192, 206, 254, 261, 270, 272, 274, 345, 360, 362], "ep": [34, 40, 65, 66, 167, 239, 255, 275, 318, 345, 346, 348, 351, 354], "1e": [34, 40, 65, 66, 167, 188, 191, 210, 221, 345, 346, 347, 357], "08": [34, 40, 65, 66, 346, 347, 348, 358], "pin_memori": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 142, 345, 362], "schaul": [34, 65, 66], "quan": [34, 65, 66], "antonogl": [34, 65, 66], "silver": [34, 65, 66], "2015": [34, 65, 66], "arxiv": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 121, 143, 163, 182, 183, 184, 185, 186, 187, 190, 191, 192, 197, 203, 209, 211, 212, 215, 217, 218, 224, 234, 239, 253, 254, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 270, 271, 274, 275, 284, 289, 297, 359], "ab": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 120, 143, 163, 167, 182, 187, 191, 192, 197, 203, 209, 211, 212, 215, 217, 218, 224, 253, 254, 257, 258, 259, 260, 263, 264, 265, 266, 267, 270, 271, 274, 359], "1511": [34, 65, 66, 192, 363], "05952": [34, 65, 66], "expon": [34, 40, 65, 66], "\u03b1": [34, 40, 65, 66], "delta": [34, 40, 65, 66, 193, 197, 221, 240, 244, 338, 341], "null": [34, 40, 65, 66, 119], "max_siz": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 77, 79, 347, 352], "1_000": [34, 37, 40, 41, 360], "merg": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 358], "mini": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 357], "decid": [34, 37, 40, 41, 362], "meth": [34, 37, 40, 41, 269, 358], "incompat": [34, 37, 40, 41, 273, 360], "drop_last": [34, 37, 40, 41, 72, 74], "notion": [34, 37, 40, 41], "caution": [34, 37, 40, 41, 72, 170, 363], "codebas": [34, 37, 40, 41, 358], "approach": [34, 37, 40, 41, 139, 345, 347, 351, 352, 363], "return_info": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 360], "tensordictprioritizedreplaybuff": [34, 338, 362], "simplifi": [34, 350, 358, 360], "manual_se": [34, 37, 40, 41, 54, 58, 59, 73, 74, 82, 83, 86, 90, 104, 110, 117, 128, 139, 148, 151, 156, 158, 169, 204, 205, 213, 227, 234, 235, 236, 239, 247, 253, 254, 256, 260, 267, 274, 352, 354, 357, 358, 362, 363], "_weight": [34, 40, 65, 66, 360, 362], "arrai": [34, 39, 65, 86, 90, 104, 110, 130, 193, 194, 197, 198, 345, 360], "update_prior": [34, 65, 66, 317, 342, 346, 360, 362], "36278465": 34, "tempfil": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 332, 345, 346, 360], "tqdm": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 320, 345, 347, 348, 357, 358], "randomsampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 345], "td_error": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 256, 257, 259, 260, 261, 262, 267, 269, 272, 274, 276, 282, 345, 351, 360, 362], "update_tensordict_prior": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 345, 360, 362], "temporarydirectori": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 345, 346, 360], "tmpdir": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 345, 346], "rb_load": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "cursor": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "insert_transform": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 161], "insert": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 69, 77, 78, 80, 81, 125, 161, 162], "set_sampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_storag": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_writ": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "prompt_rindex": [35, 36, 39], "promptdatatldr": 35, "116722": 35, "prompt": [36, 39], "return_tensordict": [36, 42], "recip": [36, 86, 90, 104, 110, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250], "text": [36, 39, 42, 55, 193, 194, 197, 198, 239, 347], "tensodict": [36, 42], "orign": [36, 42], "valid_sampl": 36, "eough": 36, "toknen": 36, "meet": 36, "criterion": 36, "autotoken": [36, 42, 44], "from_pretrain": [36, 39, 42], "gpt2": [36, 39, 42, 44, 182, 187, 214], "pad_token": [36, 42], "eos_token": 36, "enough": [36, 360], "inde": [36, 128, 347, 358], "roundrobinwrit": [37, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "Not": [37, 82, 83, 95, 96], "depth": [37, 86, 90, 100, 104, 110, 179, 180, 181, 183, 184, 185, 186, 191, 192, 201, 203, 206, 207, 211, 212, 233, 340, 346, 349, 351, 352, 356, 357, 360], "_pytre": [37, 360], "tree_map": [37, 360], "did": [37, 166, 290, 346, 347, 352, 360, 363], "assert0": [37, 360], "ref_model": 39, "reward_model": [39, 249], "kl_coef": 39, "max_new_token": 39, "score_clip": 39, "kl_schedul": 39, "klcontrollerbas": 39, "num_step": 39, "causal": 39, "sentenc": 39, "frozen": [39, 137], "kl": [39, 137, 264, 268], "penalti": [39, 268], "strai": 39, "calcul": [39, 148, 193, 253, 255, 259, 268, 271, 273], "gpt2rewardmodel": 39, "get_dataload": [39, 338], "promptdata": [39, 338], "gpt2lmheadmodel": 39, "dl": 39, "block_siz": [39, 60], "tensorclass_typ": [39, 60], "openai_summarize_tldr": 39, "config_class": 39, "model_path": 39, "rollout_from_model": 39, "rollout_from_data": 39, "600": [39, 353, 358, 360], "reward_kl": [39, 137], "reward_raw": 39, "sample_log_prob": [39, 228, 229, 230, 240, 244, 246, 271, 329, 347, 350, 357, 362], "create_rollout_td": 39, "log_prob": [39, 188, 204, 205, 213, 223, 244], "log_ratio": 39, "replic": 39, "rindex": 39, "eo": 39, "term": [39, 137, 197, 198, 208, 209, 252, 253, 261, 322, 346, 347, 349, 350, 357], "generation_config": 39, "generationconfig": 39, "ti": [39, 293, 294, 295, 296, 298, 299, 300, 301, 346], "log_probs_gen": 39, "logprobs_of_label": 39, "priority_kei": [40, 41, 52, 65, 257, 260, 261, 262, 267, 269, 272, 274, 276, 282, 360, 362], "reduct": [40, 65, 66, 77, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 274, 276], "prioritizedreplaybuff": [40, 338, 362], "min": [40, 65, 66, 77, 221, 222, 223, 232, 239, 254, 255, 261, 270, 272, 274, 346, 347, 357], "median": [40, 65, 66, 77, 95, 96, 240, 244], "include_info": [40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "kw": [41, 52, 69, 78], "huggingfac": [42, 54, 59, 237], "co": [42, 130, 358], "doc": [42, 92, 95, 96, 103, 107, 310, 345, 346, 357, 360, 363], "pad_trunc": 42, "am": 42, "me": 42, "reassur": 42, "ok": 42, "describ": [43, 122, 160, 221, 222, 257, 306, 341, 345, 347, 357, 358, 363], "tokenizer_fn": 44, "tensordicttoken": [44, 338], "pre_tokenization_hook": 44, "valid_s": 44, "tokenizer_class": 44, "tokenizer_model_nam": 44, "tokein": 44, "elementwis": 44, "vocabulari": 44, "loader": [44, 347], "185068": 44, "dataset_to_tensordict": 44, "data_dir": 44, "batch_dim": [44, 336], "valid_mask_kei": 44, "conver": 44, "batch_dimens": 44, "filder": 44, "from_dict": 44, "data_memmap": 44, "recurse_through_entri": 48, "recurse_through_stack": 48, "consolid": 48, "dataset_id": [51, 53, 54, 55, 57, 58, 59], "num_proc": 51, "slice_len": [51, 57, 66, 73, 74], "strict_len": 51, "arari": 51, "2600": 51, "million": [51, 348], "consequ": [51, 197, 352], "50x10": 51, "available_dataset": [51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74], "ataridqn": 51, "immutabledatasetwrit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "greater": [51, 66, 73, 74, 195, 199, 345, 346, 362], "shorter": [51, 57, 66, 73, 74], "Be": [51, 57, 66, 73, 74], "game_nam": 51, "pong": [51, 102, 141, 363], "krull": 51, "1d": [51, 66, 73, 74, 77], "cheapli": 51, "nontensordata": [51, 57], "invalid_rang": 51, "999998": 51, "999999": 51, "add_count": 51, "84": [51, 147, 346, 348, 358, 359], "valueestim": [51, 253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 278, 282, 338, 341, 345, 357], "convolut": [51, 180, 181, 183, 184, 206, 219, 350], "2657628": 51, "2657629": 51, "2657630": 51, "2657631": 51, "2657632": 51, "2657633": 51, "2657634": 51, "2657635": 51, "2657636": 51, "2657637": 51, "2657638": 51, "2657639": 51, "2657640": 51, "2657641": 51, "2657642": 51, "2657643": 51, "2657644": 51, "2657645": 51, "2657646": 51, "2657647": 51, "2657648": 51, "2657649": 51, "2657650": 51, "2657651": 51, "2657652": 51, "2657653": 51, "2657654": 51, "2657655": 51, "2657656": 51, "2657657": 51, "2657658": 51, "2657659": 51, "2657660": 51, "2657661": 51, "2657662": 51, "2657663": 51, "2657664": 51, "2657665": 51, "2657666": 51, "2657667": 51, "2657668": 51, "2657669": 51, "2657670": 51, "2657671": 51, "2657672": 51, "2657673": 51, "2657674": 51, "2657675": 51, "2657676": 51, "2657677": 51, "2657678": 51, "2657679": 51, "2657680": 51, "2657681": 51, "2657682": 51, "2657683": 51, "2657684": 51, "2657685": 51, "2657686": 51, "2657687": 51, "2657688": 51, "2657689": 51, "2657690": 51, "2657691": 51, "1995687": 51, "1995688": 51, "1995689": 51, "1995690": 51, "1995691": 51, "1995692": 51, "1995693": 51, "1995694": 51, "1995695": 51, "1995696": 51, "1995697": 51, "1995698": 51, "1995699": 51, "1995700": 51, "1995701": 51, "1995702": 51, "1995703": 51, "1995704": 51, "1995705": 51, "1995706": 51, "1995707": 51, "1995708": 51, "1995709": 51, "1995710": 51, "1995711": 51, "1995712": 51, "1995713": 51, "1995714": 51, "1995715": 51, "1995716": 51, "1995717": 51, "1995718": 51, "1995719": 51, "1995720": 51, "1995721": 51, "1995722": 51, "1995723": 51, "1995724": 51, "1995725": 51, "1995726": 51, "1995727": 51, "1995728": 51, "1995729": 51, "1995730": 51, "1995731": 51, "1995732": 51, "1995733": 51, "1995734": 51, "1995735": 51, "1995736": 51, "1995737": 51, "1995738": 51, "1995739": 51, "1995740": 51, "1995741": 51, "1995742": 51, "1995743": 51, "1995744": 51, "1995745": 51, "1995746": 51, "1995747": 51, "1995748": 51, "1995749": 51, "1995750": 51, "left": [51, 53, 57, 118, 125, 126, 127, 131, 137, 143, 145, 146, 152, 155, 158, 160, 163, 165, 169, 206, 235, 346, 347, 352, 353], "untouch": [51, 57, 118, 125, 126, 127, 131, 137, 145, 146, 152, 155, 160, 169], "_max_run": 51, "dataset_asterix": 51, "asterix": 51, "dataset_pong": 51, "sample_from_al": [51, 68, 71], "buffer_id": [51, 71, 76], "hidden": [51, 104, 110, 120, 183, 191, 193, 194, 195, 197, 198, 199, 200, 211, 212, 217, 218, 228, 229, 230, 232, 243, 246, 255, 268, 271, 340, 348, 356, 362], "exclusive_field": [51, 356], "stack_dim": [51, 356], "data_path": [51, 52, 53, 54, 55, 56, 57, 58, 59], "data_path_root": [51, 52, 53, 54, 55, 56, 57, 58, 59], "delet": [51, 52, 53, 54, 55, 56, 57, 58, 59, 122, 310], "chunksiz": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pool": [51, 52, 53, 54, 55, 56, 57, 58, 59, 158], "max_tasks_per_child": [51, 52, 53, 54, 55, 56, 57, 58, 59], "worker_thread": [51, 52, 53, 54, 55, 56, 57, 58, 59], "index_with_gener": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pbar": [51, 52, 53, 54, 55, 56, 57, 58, 59, 345, 347, 348, 357, 358], "dest": [51, 52, 53, 54, 55, 56, 57, 58, 59, 143, 163, 165, 243], "num_fram": [51, 52, 53, 54, 55, 56, 57, 58, 59], "unitari": [51, 52, 53, 54, 55, 56, 57, 58, 59, 358], "minariexperiencereplai": [51, 52, 53, 54, 56, 57, 58, 59], "1000000": [51, 52, 53, 54, 55, 56, 57, 58, 59, 348], "distance_from_origin": [51, 52, 53, 54, 55, 56, 57, 58, 59], "forward_reward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qpo": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qvel": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_ctrl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "reward_forward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_surv": [51, 52, 53, 54, 55, 56, 57, 58, 59], "x_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "x_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "y_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "y_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59], "achieved_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "desired_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "27": [51, 52, 53, 54, 55, 56, 57, 58, 59, 82, 83, 104, 110, 344, 346, 347, 358, 360, 361], "_collate_id": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x120e21dc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cattensor": [51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 329, 345, 356, 358, 363], "cat_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cat_next_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "new_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "31": [51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 96, 344, 345, 346, 358, 359, 361], "full_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x168406fc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "from_env": 53, "use_truncated_as_don": 53, "direct_download": 53, "terminate_on_end": 53, "env_kwarg": [53, 58, 59, 118, 334, 335, 345], "reconstruct": [53, 73, 74, 264, 345, 363], "get_dataset": 53, "qlearning_dataset": 53, "fewer": 53, "possess": 53, "unexpectedli": 53, "traj_split": 53, "observationnorm": [53, 167, 336, 345, 346, 347, 348, 362], "maze2d": 53, "umaz": 53, "loc": [53, 86, 90, 104, 110, 137, 139, 150, 196, 210, 222, 223, 228, 229, 230, 240, 244, 246, 253, 254, 267, 271, 272, 273, 274, 324, 329, 336, 340, 345, 346, 347, 348, 350, 357, 362], "gen": 54, "dgrl": 54, "accompani": [54, 118, 155], "gap": 54, "2312": 54, "05742": 54, "gen_dgrl": 54, "procgen": 54, "bigfish": 54, "bossfight": 54, "categori": [54, 340, 342], "1m_e": 54, "1m_": 54, "comma": 54, "npy": 54, "extract": [54, 237, 345, 347, 362], "mmap": [54, 58, 59], "minut": [54, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "internet": [54, 59], "connect": [54, 59], "minari": 55, "websit": [55, 57], "currenrtli": 55, "minari_data": 55, "door": 55, "torchrl_logg": [55, 354], "28": [55, 206, 344, 346, 352, 357, 358, 359, 361], "door_body_po": 55, "dua": 56, "graff": 56, "2017": 56, "uci": 56, "archiv": 56, "ic": 56, "edu": 56, "ml": 56, "sklearn": [56, 103], "adult_num": [56, 103], "adult_onehot": [56, 103], "mushroom_num": [56, 103], "mushroom_onehot": [56, 103], "covertyp": [56, 103], "shuttl": [56, 103], "magic": [56, 103, 349], "shuffl": [57, 72, 74, 357], "stream": 57, "embodi": [57, 359], "22": [57, 73, 74, 166, 346, 351, 358, 359], "institut": 57, "demonstr": [57, 347, 352, 357, 358, 360, 363], "527": [57, 358], "skill": 57, "160266": 57, "googl": [57, 58, 82, 83, 347, 348, 357], "open_x_embodi": 57, "2310": [57, 107], "08864": 57, "language_instruct": 57, "get_non_tensor": 57, "neither": [57, 358], "nor": 57, "insuffici": 57, "chosen": [57, 111, 112, 156, 157, 215, 216, 224, 242, 303, 329, 340, 353], "openx": 57, "__will": 57, "change__": 57, "randomli": [57, 72, 138, 139, 157, 235, 240, 244, 350, 357, 358, 360], "crop": [57, 123, 144, 303], "modal": [57, 345], "cmu_stretch": 57, "is_init": [57, 59, 120, 136, 195, 199, 238, 239, 348], "language_embed": 57, "512": [57, 192, 346, 358], "lift": 57, "green": 57, "garbag": 57, "lid": 57, "roboset": 58, "h5": [58, 59], "roboh": [58, 107], "concis": [58, 351], "75": [58, 346, 358], "totensor": 59, "image_s": 59, "v": [59, 167, 193, 194, 197, 198, 228, 260, 267, 274, 340, 345, 346], "npz": 59, "2206": [59, 101, 102], "04779": [59, 254, 259], "vd4rl": 59, "detect": 59, "squar": [59, 123, 196, 222, 223, 303], "rectangular": [59, 180, 181], "walker_walk": 59, "64px": 59, "height": [59, 123, 147], "veloc": [59, 84, 85, 86, 90, 104, 110, 121, 357, 358, 363], "infinit": [60, 111, 112, 352, 360], "three": [60, 340, 342, 347, 349, 350, 357, 358, 360, 363], "block": [60, 61, 81, 340, 348], "pairwisedataset": [60, 338], "256": [60, 187, 346, 347, 357, 358], "immut": [61, 86, 90, 104, 110, 146, 161], "piec": [61, 69, 78, 80, 81, 345, 346, 347, 353, 357, 358, 360], "scratch_dir": [62, 345, 360], "sent": [62, 63, 79, 167], "mistak": [62, 63, 79], "myclass": [62, 63, 79], "foo": [62, 63, 79, 232, 360, 363], "bar": [62, 63, 79, 232, 313, 314, 316, 320, 342, 346], "attach": [62, 63, 64, 75, 76, 79, 346], "entiti": [62, 63, 64, 75, 76, 79], "auto": [63, 79, 166, 239, 254, 261, 270, 272, 274, 276, 341, 357], "zero_": [63, 79, 174], "max_capac": [65, 66, 345, 360], "data_0": 65, "data_1": 65, "smoothen": 65, "tdrb": 65, "pack": [65, 193, 197, 347, 349, 363], "end_kei": [66, 73, 74], "cache_valu": [66, 73, 74], "expens": [66, 73, 74, 360], "readili": [66, 73, 74], "conjunct": [66, 73, 74, 346], "Will": [66, 73, 86, 101, 303], "buffer0": [66, 73], "immutablewrit": [66, 73], "buffer1": [66, 73], "other_sampl": [66, 73], "short": [66, 73, 74, 82, 83, 95, 96, 104, 170, 197, 198, 346, 347, 349, 350, 357, 360], "unsqueez": [66, 117, 118, 121, 122, 159, 162, 200, 345, 348, 357, 358], "tolist": 66, "120110917137936e": 66, "06": [66, 188, 221, 346, 347, 358], "uniformli": [67, 269, 363], "storageensembl": [68, 71], "samplerensembl": 68, "writerensembl": [68, 76], "num_buffer_sampl": [68, 71], "ensembl": [68, 71, 76, 81, 243, 272], "forbidden": 68, "collat": 68, "0x13a2ef430": 68, "0x13a2f9310": 68, "interpol": [68, 147, 346, 348], "interpolationmod": [68, 348], "bilinear": [68, 147, 348], "0x13a2f9220": 68, "0x13a2f9f70": 68, "0x13a2d9b50": 68, "0x13a2f95b0": 68, "0x128648260": 68, "roundrobin": [69, 78], "incomplet": [72, 74], "fresh": 72, "haven": [72, 359], "remain": [72, 120, 127, 128, 137, 156, 209, 351], "draw": [72, 235], "slicesamplerwithoutreplac": [73, 360], "320": [73, 74, 84, 85, 346, 358], "700": [73, 74], "dataid": [73, 74], "__len__": 75, "rank_kei": 77, "rank": [77, 179], "samplerwithoutreplac": [77, 347, 357, 360], "get_insert_index": 77, "convers": [82, 83, 95, 96, 341], "2106": [82, 83, 258], "13281": [82, 83], "categorical_action_encod": [82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110], "frame_skip": [82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 107, 134, 313, 316, 323, 342, 345, 346, 347, 362], "repeat": [82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 179, 347, 357, 358], "allow_done_after_reset": [82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107], "toler": [82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 188, 221], "availalb": [82, 83, 95, 96], "ant": [82, 83, 86, 90, 93, 104, 110, 359], "87": [82, 83, 346, 358], "acrobot": [82, 83, 84, 85, 363], "advant": [82, 83, 95, 96], "report": [82, 83, 95, 96, 353], "timer": [82, 83, 95, 96], "timeit": [82, 83, 95, 96], "310": [82, 83, 358], "00": [82, 83, 344, 346, 347, 348, 357, 358, 359, 361], "ms": [82, 83, 95, 96], "268": [82, 83, 358], "433": [82, 83, 358], "80": [82, 83, 346, 347, 357, 358, 359], "213": [82, 83, 344, 346, 358, 361], "8605": [82, 83], "pipelineenv": 83, "get_environ": 83, "dm_control": [84, 85, 345, 356, 363], "2006": [84, 85, 254, 259, 358], "12983": [84, 85], "task_nam": [84, 86, 90, 104, 110], "pixels_onli": [84, 85, 89, 91, 92, 107, 345, 346, 353, 354, 362, 363], "cheetah": [84, 85, 86, 90, 104, 110, 303, 345], "240": [84, 85, 358, 362], "swingup": [84, 85, 363], "swingup_spars": [84, 85], "ball_in_cup": [84, 85], "catch": [84, 85], "balance_spars": [84, 85], "three_pol": [84, 85], "two_pol": [84, 85], "finger": [84, 85], "turn_easi": [84, 85], "turn_hard": [84, 85], "fish": [84, 85], "upright": [84, 85, 346], "swim": [84, 85], "hopper": [84, 85], "hop": [84, 85], "humanoid": [84, 85, 104, 110, 356], "walk": [84, 85, 104, 110, 346, 356], "run_pure_st": [84, 85], "bring_bal": [84, 85], "bring_peg": [84, 85], "insert_bal": [84, 85], "insert_peg": [84, 85], "point_mass": [84, 85], "reacher": [84, 85], "swimmer": [84, 85], "swimmer6": [84, 85], "swimmer15": [84, 85], "walker": [84, 85], "dog": [84, 85], "trot": [84, 85], "humanoid_cmu": [84, 85], "lqr": [84, 85], "lqr_2_1": [84, 85], "lqr_6_2": [84, 85], "quadrup": [84, 85], "escap": [84, 85], "stacker": [84, 85], "stack_2": [84, 85], "stack_4": [84, 85], "deviceless": 86, "run_type_check": [86, 100], "counterenv": 86, "unboundedcontinuoustensorspec": [86, 90, 100, 104, 110, 117, 118, 126, 129, 145, 157, 174, 179, 203, 227, 243, 246, 248, 273, 338, 347, 348, 357, 358, 363], "_step": [86, 90, 104, 110, 117, 118, 126, 129, 133, 145, 146], "continuousbox": [86, 90, 104, 110, 174, 347, 357, 358, 362, 363], "sort": [86, 90, 104, 110, 122, 239], "another_act": [86, 90, 104, 110], "mutabl": [86, 90, 104, 110], "_callabletransform": [86, 90, 104, 110], "batch_lock": [86, 88, 90, 104, 110, 118, 157, 161, 358], "done_keys_group": [86, 90, 104, 110], "outer": [86, 90, 104, 110, 342, 345, 346, 363], "another_don": [86, 90, 104, 110], "empty_cach": [86, 90, 104, 110, 161], "fake_tensordict": [86, 90, 104, 110, 346], "fake": [86, 90, 104, 110, 345, 346], "afterward": [86, 90, 104, 110, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250, 363], "silent": [86, 90, 104, 110, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 210, 211, 212, 214, 217, 218, 220, 225, 231, 232, 234, 235, 238, 239, 242, 247, 250], "braxenv": [86, 90, 104, 110, 146, 338, 349], "envnam": [86, 90, 104, 110], "pipeline_st": [86, 90, 104, 110], "attibut": [86, 90, 104, 110], "maybe_reset": [86, 90, 104, 110], "speak": [86, 90, 104, 110, 345], "rand_act": [86, 90, 99, 104, 105, 106, 110, 118, 349], "register_gym": [86, 90, 104, 110, 349], "entry_point": [86, 90, 104, 110], "info_kei": [86, 90, 104, 110], "reward_threshold": [86, 90, 104, 110], "nondeterminist": [86, 90, 104, 110], "max_episode_step": [86, 89, 90, 91, 104, 110], "order_enforc": [86, 90, 104, 110], "autoreset": [86, 90, 104, 110], "disable_env_check": [86, 89, 90, 101, 102, 104, 110], "apply_api_compat": [86, 90, 104, 110], "nasium": [86, 90, 104, 110], "scope": [86, 90, 104, 110, 363], "dmcontrolenv": [86, 90, 104, 110, 303, 338, 345, 349, 356, 363], "dmc": [86, 90, 104, 110], "removeemptyspec": [86, 90, 104, 110], "threshold": [86, 90, 104, 110, 235, 254, 255, 347], "learnt": [86, 90, 104, 110, 332], "knowledg": [86, 90, 104, 110, 351], "checker": [86, 89, 90, 101, 102, 104, 110], "stepapicompat": [86, 90, 104, 110], "concept": [86, 90, 104, 110, 346, 360], "deem": [86, 90, 104, 110, 111, 112], "envgym": [86, 90, 104, 110], "0855": [86, 90, 104, 110], "0215": [86, 90, 104, 110], "0881": [86, 90, 104, 110], "0412": [86, 90, 104, 110], "1101": [86, 90, 104, 110], "0080": [86, 90, 104, 110], "0254": [86, 90, 104, 110], "0424": [86, 90, 104, 110], "9609e": [86, 90, 104, 110], "02": [86, 90, 104, 110, 344, 346, 347, 354, 358, 359, 361], "9776e": [86, 90, 104, 110], "04": [86, 90, 94, 104, 110, 346, 347, 357, 358, 359], "6347e": [86, 90, 104, 110], "03": [86, 90, 104, 110, 139, 344, 346, 348, 358, 359, 361], "3842e": [86, 90, 104, 110], "5338e": [86, 90, 104, 110], "3064e": [86, 90, 104, 110], "0381e": [86, 90, 104, 110], "6656e": [86, 90, 104, 110], "05": [86, 90, 104, 110, 346, 357, 358, 359], "0204e": [86, 90, 104, 110], "action_spac": [86, 90, 104, 110, 130, 190, 216, 233, 234, 241, 242, 253, 254, 256, 257, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 348, 350, 354], "0833": [86, 90, 104, 110], "0275": [86, 90, 104, 110], "0612": [86, 90, 104, 110], "0770": [86, 90, 104, 110, 358], "1256": [86, 90, 104, 110, 358], "0082": [86, 90, 104, 110], "0186": [86, 90, 104, 110], "0476": [86, 90, 104, 110], "2221": [86, 90, 104, 110], "2256": [86, 90, 104, 110], "5930": [86, 90, 104, 110], "6937": [86, 90, 104, 110], "5865": [86, 90, 104, 110], "5479": [86, 90, 104, 110], "0187": [86, 90, 104, 110], "6825": [86, 90, 104, 110, 358], "5224": [86, 90, 104, 110], "0018": [86, 90, 104, 110, 358], "1005": [86, 90, 104, 110], "0335": [86, 90, 104, 110], "0268": [86, 90, 104, 110, 358], "0133": [86, 90, 104, 110], "0627": [86, 90, 104, 110], "0074": [86, 90, 104, 110, 358], "0488": [86, 90, 104, 110, 358], "0353": [86, 90, 104, 110], "0075": [86, 90, 104, 110, 358], "0069": [86, 90, 104, 110, 358], "0098": [86, 90, 104, 110, 358], "0058": [86, 90, 104, 110, 358], "0033": [86, 90, 104, 110, 358], "0157": [86, 90, 104, 110], "0004": [86, 90, 104, 110, 348, 358], "0381": [86, 90, 104, 110], "0452": [86, 90, 104, 110], "11355747": [86, 90, 104, 110], "04257728": [86, 90, 104, 110], "00408397": [86, 90, 104, 110], "04155852": [86, 90, 104, 110], "0389733": [86, 90, 104, 110], "01409826": [86, 90, 104, 110], "0978704": [86, 90, 104, 110], "08808327": [86, 90, 104, 110], "03970837": [86, 90, 104, 110], "00535434": [86, 90, 104, 110], "02353762": [86, 90, 104, 110], "05116226": [86, 90, 104, 110], "02788907": [86, 90, 104, 110], "06848346": [86, 90, 104, 110], "05154399": [86, 90, 104, 110], "0371798": [86, 90, 104, 110], "05128025": [86, 90, 104, 110], "dydact": [86, 90, 104, 110], "gym_env": [86, 90, 104, 110, 362], "reset_kei": [86, 90, 104, 110, 121, 151, 156, 157, 158], "multitask": [86, 90, 104, 110], "multiag": [86, 90, 99, 104, 105, 106, 110, 178, 207, 215, 224, 282], "another_reward": [86, 90, 104, 110], "callback": [86, 90, 104, 110, 357], "auto_reset": [86, 90, 104, 110, 169, 358], "auto_cast_to_devic": [86, 90, 104, 110, 357], "break_when_any_don": [86, 90, 104, 110, 169, 238, 357], "return_contigu": [86, 90, 104, 110, 170, 356], "soon": [86, 90, 104, 105, 106, 110], "__sort": [86, 90, 104, 110], "as__": [86, 90, 104, 110], "normal": [86, 90, 104, 110, 139, 167, 180, 181, 196, 201, 204, 205, 210, 222, 223, 231, 240, 244, 255, 268, 271, 316, 318, 336, 340, 342, 348, 350, 357, 363], "argmaxmodul": [86, 90, 104, 110], "n_ob": [86, 90, 104, 110, 137, 238, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 351], "n_act": [86, 90, 104, 110, 137, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 351], "ourselv": [86, 90, 104, 110, 347, 363], "emul": [86, 90, 104, 110], "epoch": [86, 90, 104, 110, 320, 347, 357], "input_td": [86, 90, 104, 110], "rollout_td": [86, 90, 104, 110], "concomitt": [86, 90, 104, 110], "workspac": [86, 90, 104, 110], "prevail": [86, 90, 104, 110, 122, 151, 178], "creator": [87, 325, 326, 334, 335, 336], "substitut": [87, 156, 167, 350], "vecnorm": [87, 336], "env_creat": [87, 345], "test_env1": 87, "_td": [87, 345], "observation_count": [87, 363], "test_env2": 87, "sleep": [87, 363], "ps": 87, "p1": 87, "p2": 87, "9934": 87, "env_str": 88, "device_map": 88, "accross": [89, 91], "registri": 89, "asyncvectorenv": 89, "involv": [89, 91, 92, 107, 118, 349, 351], "pixel_observ": [89, 91, 92, 107], "pixelobservationwrapp": [89, 91, 92, 107], "al": [89, 91, 130, 141, 179, 363], "adventur": [89, 91, 363], "v5": [89, 91, 102, 130, 141, 363], "airraid": [89, 91, 363], "alien": [89, 91, 363], "time_limit": 89, "timelimit": [89, 111, 112], "default_info_dict_read": [89, 90, 91, 104], "reader": [89, 90, 91, 104, 346], "set_info_dict_read": [89, 90, 91, 104, 349], "info_dict": [89, 90, 91, 104], "auto_register_info_dict": [89, 90, 91, 104], "info_dict_read": [90, 104], "succe": [90, 104], "halfcheetah": [90, 104, 147, 329, 345], "register_info_dict": 90, "read_act": 90, "read_don": 90, "nonsens": 90, "fallback": 90, "broken": [90, 170], "read_ob": 90, "dictat": [90, 240, 244, 271, 345, 358], "read_reward": 90, "baseinfodictread": 90, "hoc": [90, 104, 350], "dict_read": 90, "my_info_kei": 90, "some_env": 90, "vecenv": 91, "vectorenv": 91, "placehold": [92, 130, 161], "secur": 92, "habitat3": 92, "ai": [92, 359], "habitatrenderpick": 92, "isaacgym": [93, 94], "isaacgymwrapp": [93, 338], "isaacgymenv": [94, 338], "webpag": 94, "isaac": 94, "essenc": [94, 349], "instadeepai": [95, 96], "2306": [95, 96], "09884": [95, 96], "snake": [95, 96], "grid": [95, 96, 303], "bodi": [95, 96], "body_st": [95, 96], "fruit_posit": [95, 96], "col": [95, 96], "row": [95, 96], "head_posit": [95, 96], "tail": [95, 96], "game2048": [95, 96], "maze": [95, 96], "cleaner": [95, 96], "cvrp": [95, 96], "multicvrp": [95, 96], "minesweep": [95, 96], "rubikscub": [95, 96], "knapsack": [95, 96], "sudoku": [95, 96], "tsp": [95, 96], "connector": [95, 96], "v2": [95, 96, 108, 109, 279, 293, 294, 295, 296, 298, 299, 300, 301, 348], "mmst": [95, 96], "graphcolor": [95, 96], "partli": [95, 96], "scrambl": [95, 96], "robotwarehous": [95, 96], "tetri": [95, 96], "binpack": [95, 96], "jobshop": [95, 96], "0x1fca91910": 95, "122": [95, 96, 358, 363], "0x1ff9baee0": 95, "134": [95, 96, 358], "0x1ff9ba7c0": 95, "172": [95, 96, 358], "rubric": [96, 139, 246], "mo": [97, 98], "minecart": [97, 98], "mo_gym": 98, "qualnam": 99, "leverag": [99, 105, 106, 345, 357, 363], "neural": [99, 105, 106, 180, 181, 219, 243, 340, 346, 347, 348, 350, 357, 358, 363], "group_map": [99, 105, 106, 111, 112, 113], "constructiuon": [99, 105, 106], "premad": [99, 105, 106, 111, 112, 282], "all_in_one_group": [99, 113], "agent_0": [99, 105, 106, 113], "agent_1": [99, 105, 106, 113], "agent_2": [99, 105, 106, 113], "agent_3": 99, "one_group_per_ag": [99, 105, 106], "environn": 100, "mymbenv": [100, 179, 203], "world_model": [100, 179, 203, 264], "super": [100, 117, 118, 126, 129, 145, 179, 190, 203, 248, 254, 256, 261, 267, 272, 274, 276, 345, 358, 360, 362], "hidden_observ": [100, 179, 203], "mlp": [100, 179, 180, 181, 183, 184, 185, 186, 192, 195, 199, 200, 203, 207, 228, 233, 257, 259, 329, 340, 346, 350, 351, 354, 356, 359, 362], "worldmodelwrapp": [100, 179, 203], "activation_class": [100, 179, 180, 181, 183, 184, 185, 186, 191, 192, 201, 203, 206, 207, 346, 350, 357, 362], "relu": [100, 179, 187, 203, 210, 252], "activate_last_lay": [100, 179, 186, 201, 203], "sail": [101, 102], "sg": [101, 102], "10558": [101, 102], "readthedoc": 101, "en": 101, "python_interfac": 101, "envpoolmixin": 102, "env_bas": 102, "task_id": 102, "env_typ": 102, "gym_reset_return_info": 102, "envpool_env": 102, "www": [103, 204, 205], "fetch_openml": 103, "106": [103, 358], "my_env_fun": [104, 110], "custom_attribute_list": [104, 110], "custom_attribut": [104, 110], "custom_method_list": [104, 110], "custom_method": [104, 110], "deploi": [104, 110, 118], "slight": [104, 110, 346], "share_individual_td": [104, 110], "shared_memori": [104, 110], "policy_proof": [104, 110], "ll": [104, 110, 193, 194, 197, 198, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 363], "serial_for_singl": [104, 110], "com_veloc": [104, 110], "extrem": [104, 110, 253, 255, 268, 271, 273], "head_height": [104, 110], "joint_angl": [104, 110], "torso_vert": [104, 110], "stringent": [104, 347, 357], "inter": 104, "penv": 104, "tensordictprim": [104, 348], "reward_run": 104, "env_fix": 104, "drastic": [104, 360], "influenc": 104, "thumb": [104, 347], "suppos": [104, 316, 342, 363], "myenv": [104, 118, 126, 129], "pipe": 104, "update_kwarg": [104, 110], "pettingzoo": [105, 106], "pet": [105, 106], "zoo": [105, 106], "__": [105, 106], "aecenv": [105, 106], "use_mask": [105, 106], "dead": [105, 106], "compulsori": [105, 106], "adversary_0": [105, 106], "adversari": [105, 106], "marlgroupmaptyp": [105, 106, 111, 112, 113, 338], "vectoris": [105, 106, 193, 194, 197, 198], "sisl": 105, "multiwalker_v9": 105, "return_st": [105, 106], "categorical_act": [105, 106, 108, 109, 111, 112], "n_piston": [105, 106], "pistonball_v6": [105, 106], "piston": [105, 106], "piston_0": [105, 106], "piston_1": [105, 106], "piston_20": [105, 106], "aec": [105, 106], "tictactoe_v3": [105, 106], "player": [105, 106], "player_1": [105, 106], "player_2": [105, 106], "butterfli": 106, "parallel_env": [106, 345, 362, 363], "vikashplu": 107, "wiki": 107, "06828": 107, "smacv2": [108, 109], "starcraft": [108, 109], "challeng": [108, 109, 349, 358, 359], "10gen_terran": [108, 109], "10gen_zerg": [108, 109], "10gen_protoss": [108, 109], "3m": [108, 109], "8m": [108, 109, 359], "25m": [108, 109], "5m_vs_6m": [108, 109], "8m_vs_9m": [108, 109], "10m_vs_11m": [108, 109], "27m_vs_30m": [108, 109], "mmm": [108, 109], "mmm2": [108, 109], "2s3z": [108, 109], "3s5z": [108, 109], "3s5z_vs_3s6z": [108, 109], "3s_vs_3z": [108, 109], "3s_vs_4z": [108, 109], "3s_vs_5z": [108, 109], "1c3s5z": [108, 109], "2m_vs_1z": [108, 109], "corridor": [108, 109], "6h_vs_8z": [108, 109], "2s_vs_1sc": [108, 109], "so_many_banel": [108, 109], "bane_vs_ban": [108, 109], "2c_vs_64zg": [108, 109], "old": [108, 109, 268, 363], "smac": [108, 109], "map_nam": [108, 109], "176": [108, 109, 358], "battle_won": [108, 109], "dead_al": [108, 109], "dead_enemi": [108, 109], "episode_limit": [108, 109], "322": [108, 109, 358], "Or": [108, 109, 206], "procedur": [108, 109], "distribution_config": [108, 109], "n_unit": [108, 109], "n_enemi": [108, 109], "team_gen": [108, 109], "dist_typ": [108, 109], "weighted_team": [108, 109], "unit_typ": [108, 109], "marin": [108, 109], "maraud": [108, 109], "medivac": [108, 109], "exception_unit_typ": [108, 109], "start_posit": [108, 109], "surrounded_and_reflect": [108, 109], "map_x": [108, 109], "map_i": [108, 109], "capability_config": [108, 109], "88": [108, 109, 346, 358, 359], "131": [108, 109, 358], "starcraft2env": 109, "proroklab": [111, 112], "vectorizedmultiagentsimul": [111, 112], "2207": [111, 112], "03530": [111, 112], "basescenario": 111, "descript": [111, 346, 347], "perfrom": [111, 112], "defaultt": 111, "continuous_act": [111, 112, 357], "repositiori": 111, "horizon": [111, 112, 179, 203, 347], "sparsiti": 111, "agent_nam": [111, 112, 113], "agent_names_to_indices_map": [111, 112], "unbatched_action_spec": [111, 112, 357], "unbatched_observation_spec": [111, 112], "unbatched_reward_spec": [111, 112], "het_spec": [111, 112], "het_specs_map": [111, 112], "flock": [111, 112], "agent_collision_rew": [111, 112], "agent_distance_rew": [111, 112], "ca": 113, "environment4": 113, "get_group_map": 113, "sumbodul": 114, "model_bas": [115, 179, 203], "masker": 117, "tensor_spec": [117, 178, 260, 261, 271, 273], "binarydiscretetensorspec": [117, 257, 260, 261, 282, 338], "maskedenv": 117, "ones_lik": 117, "scatter": 117, "_set_se": [117, 118, 126, 129, 145, 358], "reshape_fn": 118, "reset_func": 118, "environmt": 118, "request": [118, 144], "tensordict_batch_s": 118, "els": [118, 193, 194, 197, 198, 211, 340, 342, 345, 346, 347, 348, 357, 358, 359], "tensordict_reset": [118, 358], "transform_env_batch_s": [118, 125, 160, 169], "transform_input_spec": [118, 125, 126, 127, 128, 139, 141, 145, 146, 151, 155, 156, 157, 160, 162, 164, 169], "transform_output_spec": [118, 125, 126, 127, 131, 137, 145, 146, 152, 155, 160, 169], "transform_observation_spec": [118, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 135, 136, 137, 139, 141, 145, 146, 147, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 166, 169, 358], "transform_reward_spec": [118, 119, 124, 125, 126, 127, 131, 137, 145, 146, 149, 150, 152, 153, 155, 160, 162, 169], "transformfull_done_spec": [118, 125, 126, 127, 131, 137, 145, 146, 152, 155, 160, 169], "biner": 119, "burn_in": 120, "burn": 120, "date": [120, 306], "retur": 120, "burnt": 120, "gru_modul": [120, 195], "input_s": [120, 193, 194, 195, 197, 198, 199, 200, 348], "hidden_s": [120, 193, 194, 195, 197, 198, 199, 200, 348], "set_recurrent_mod": [120, 195, 199, 348], "burn_in_transform": 120, "gru": [120, 194, 195], "num_lay": [120, 193, 195, 197, 199, 211, 212], "86": [120, 346, 358, 359], "3008": [120, 346], "0344": 120, "padding_valu": [121, 204, 205], "as_invers": 121, "movement": 121, "pdf": [121, 182, 183, 184, 185, 186, 190, 234, 239, 262, 272, 275, 284, 289, 297, 329], "1312": [121, 346], "5602": 121, "unsqueezetransform": [121, 358, 360], "consumpt": 121, "followin": 121, "pictur": 121, "pixels_trsf": [121, 360], "grayscal": [121, 346, 348, 360, 363], "data_exclud": [121, 360], "del_kei": [122, 163, 356, 358], "unsqueeze_if_oor": 122, "observation_posit": 122, "observation_veloc": 122, "key1": [122, 311, 319], "key2": [122, 311, 319], "center": [123, 303], "width": [123, 147], "out_keys_inv": [124, 126, 127, 129, 139, 140, 141, 145, 146, 153, 160, 358], "scalar": [124, 149, 184, 186, 208, 209, 231, 235, 236, 239, 250, 253, 254, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 282, 284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 340, 346, 351, 358], "permit": [124, 133, 162, 253, 255, 268, 271, 273], "rewardsc": [125, 161, 345, 346, 348], "rewardclip": 125, "transformed_env": [125, 160, 161, 349], "transform_env_devic": [125, 127, 160, 169], "dtype_in": 126, "dtype_out": 126, "scan": [126, 129, 245, 246], "resp": [126, 129], "not_transform": [126, 129], "constructedw": [126, 129], "orig_devic": 127, "unspecifi": 127, "transform_done_spec": [127, 160, 169], "num_actions_effect": 128, "max_act": 128, "include_forward": 128, "num_act": [128, 261, 350], "action_out": 128, "_call": [128, 133, 358], "eol_kei": 130, "lives_kei": 130, "eol_attribut": 130, "unwrap": 130, "breakout": 130, "210": [130, 141, 358], "160": [130, 141, 346, 358], "eol_transform": 130, "eol": 130, "dqnloss": [130, 253, 254, 256, 259, 261, 262, 263, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 282, 327, 338, 341, 346, 348, 354], "register_kei": 130, "loss_or_advantag": 130, "lossmodul": [130, 320, 331, 332, 338], "valueestimatorbas": [130, 269, 338], "excluded_kei": 131, "finit": [132, 350, 360], "first_dim": 133, "last_dim": 133, "allow_positive_dim": [133, 162], "th": [133, 162, 193, 197, 358], "frameskip": 133, "repeatedli": [134, 347, 357], "init_kei": [136, 238], "tracker": 136, "coef": 137, "pi_curr": 137, "pi_0": 137, "overfit": 137, "probabilist": [137, 240, 338, 347, 362], "get_dist": [137, 244, 245], "mod": [137, 195, 199, 238, 247, 348, 354], "normalparamextractor": [137, 340, 347, 350, 357], "probabilisticactor": [137, 228, 229, 230, 232, 253, 254, 258, 260, 261, 267, 270, 271, 272, 273, 274, 276, 340, 345, 347, 350, 357], "tanhnorm": [137, 228, 229, 230, 240, 246, 253, 254, 267, 271, 272, 273, 274, 276, 338, 347, 357, 362], "return_log_prob": [137, 228, 229, 230, 240, 244, 246, 273, 340, 347, 350, 357, 362], "apply_": 137, "copy_": [137, 345], "formulat": 137, "diverg": [137, 195, 199, 240, 244, 264, 268], "noop": [138, 362], "trial": 138, "standard_norm": [139, 150, 345, 346, 348], "affin": [139, 150], "layer": [139, 167, 180, 181, 183, 184, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 206, 207, 208, 209, 211, 212, 219, 220, 226, 237, 247, 340, 346, 347, 348, 350, 359], "set_default_tensor_typ": 139, "doubletensor": 139, "isclos": 139, "next_ob": [139, 284, 285, 286, 287, 362], "init_stat": [139, 345, 346, 347, 348], "3752e": 139, "01": [139, 239, 250, 255, 268, 271, 344, 346, 348, 357, 358, 359, 361], "5087e": 139, "9294e": 139, "9636": 139, "5608": 139, "6408": 139, "num_it": [139, 346, 347], "reduce_dim": [139, 345, 346, 347, 348], "cat_dim": [139, 345, 346, 347, 348], "keep_dim": [139, 346, 348], "statist": [139, 167, 273, 336, 345, 346, 347, 363], "gaussian": [139, 157, 179, 203, 208, 209, 214, 231, 347], "empir": [139, 179, 203, 240, 244, 345, 347, 357], "3d": [139, 180], "third": [139, 234, 357], "reorder": 141, "in_keys_in": 141, "channel": [141, 159, 206, 211, 212, 346], "r3m": [143, 359], "resnet": [143, 163, 165], "visual": [143, 163, 165, 347, 358], "embed": [143, 163, 164, 165, 183, 215, 227, 228, 229, 230, 243, 248, 359], "ego4d": [143, 163, 165], "univers": [143, 163, 165, 349], "suraj": [143, 163], "nair": [143, 163], "aravind": [143, 163], "rajeswaran": [143, 163], "vikash": [143, 163, 165], "kumar": [143, 163, 165], "chelsea": [143, 163], "finn": [143, 163], "abhinav": [143, 163], "gupta": [143, 163], "2203": [143, 163, 203, 359], "12601": [143, 163, 359], "_init": [143, 163, 345], "snippet": [143, 163, 345], "resnet50": [143, 165, 359], "model_nam": [143, 163, 165, 306], "resnet34": 143, "resnet18": 143, "r3m_vec": [143, 359], "feed": [143, 165, 269, 340, 345, 357, 360], "stack_imag": [143, 165], "tread": [143, 165], "separet": [143, 165], "hub": [143, 165, 349, 359], "resnet50_weight": [143, 165], "imagenet1k_v1": [143, 165], "download_path": [143, 165], "tensor_pixels_kei": [143, 165], "sub_seq_len": 144, "sample_dim": [144, 345], "primarili": [144, 350], "hesit": 144, "robust": 144, "mix": [144, 215, 224, 282, 345, 357], "improp": 144, "dummyenv": 145, "another_oth": 145, "other_reward": 145, "create_copi": 146, "stuff": [146, 352], "newnam": 146, "r2g": 148, "reward_to_go": 148, "bernoulli_": 148, "9010": 148, "9404": [148, 290], "9701": [148, 290], "9900": [148, 290], "0000": [148, 158, 235, 236, 247, 290, 347, 348, 358, 362], "crash": 148, "clamp_min": 149, "clamp_max": 149, "clip_min": 149, "clip_max": 149, "episode_": 151, "reward1": 151, "reward2": 151, "episode_reward": [151, 357], "keep_reward": 152, "keep_don": 152, "sign": [153, 284], "logical_or": 153, "squeeze_dim": 154, "step_count_kei": 155, "update_don": 155, "disjunct": 155, "recognis": 155, "target_return": 156, "subtract": 156, "primer": [157, 348], "default_valu": [157, 348], "unit": [157, 179, 191, 193, 194, 211, 212, 217, 218, 347], "transfomedenv": 157, "mykei": 157, "__unless": 157, "exists__": 157, "increas": [158, 239, 357], "10th": 158, "0216": 158, "1149": 158, "1990": 158, "2749": 158, "3281": 158, "9290": 158, "3702": 158, "8978": 158, "from_int": 159, "shape_toler": 159, "permuat": 159, "ri": 159, "principl": 160, "cattransform": 160, "notabl": 160, "rewardsum": [160, 169, 357], "smoothli": 161, "add_1": 161, "cache_spec": 161, "set_missing_toler": 161, "keyerror": [161, 345], "unsqueeze_dim": [162, 358], "danger": 162, "vc1": 163, "vc1_vec": 163, "untrain": 163, "make_noload_model": 163, "vip": [164, 165, 359], "toward": 165, "implicit": [165, 260, 267, 360], "jason": 165, "ma": 165, "shagun": 165, "sodhani": 165, "dinesh": 165, "jayaraman": 165, "osbert": 165, "bastani": 165, "ami": 165, "zhang": 165, "vip_vec": 165, "final_nam": 166, "sb3": 166, "terminal_obs_read": 166, "truli": [166, 362], "till": 166, "nan": 166, "shared_td": 167, "decai": [167, 231, 235, 275, 318, 345, 346, 348, 363], "9999": [167, 358], "0001": [167, 191, 210, 347, 358], "to_observation_norm": 167, "underflow": [167, 318], "build_td_for_shared_vecnorm": 167, "memmori": 167, "queue": [167, 360], "td_share": 167, "state_dim": [168, 182, 187, 214, 217, 218, 232], "action_dim": [168, 182, 183, 185, 187, 214, 232, 345, 356], "gsde": [168, 272, 336], "gsdemodul": 168, "rb_transform": 169, "resist": 169, "insensit": 169, "sensit": [169, 346], "_orig": 169, "95": [169, 203, 278, 346, 347, 348, 358], "tdreset": [169, 356], "window": [169, 238, 360], "edit": [169, 352], "check_dtyp": 170, "discrep": [170, 253, 255, 256, 257, 268, 271, 273, 282], "temporarili": [170, 352, 360], "rng": [170, 358], "revert": [170, 350, 360], "probabilistictdmodul": [175, 176, 201, 240, 244, 283, 316], "next_tensordict": 177, "keep_oth": [177, 358], "exclude_reward": 177, "exclude_don": 177, "exclude_act": 177, "next_": 177, "funtion": 177, "write_full_fals": 178, "_terminated_or_trunc": 178, "entropi": [179, 253, 254, 255, 260, 261, 267, 268, 270, 271, 272, 274, 276, 357], "botev": 179, "et": 179, "2013": 179, "cem": 179, "plan": [179, 202, 203], "varianc": [179, 196, 210, 222, 223, 341, 345, 347, 357], "k": [179, 193, 194, 197, 198], "maximis": [179, 183, 185, 203, 340, 346, 347, 357], "modelbasedenv": [179, 203], "planning_horizon": [179, 203], "optim_step": [179, 203, 346, 354], "mpc": [179, 202, 203], "num_candid": [179, 203], "candid": [179, 203], "top_k": [179, 203], "modelbasedenvbas": [179, 202, 203, 338], "safemodul": [179, 202, 228, 230, 244, 253, 254, 260, 261, 267, 271, 272, 273, 274, 276, 325, 326, 332, 338, 362], "num_cel": [180, 181, 183, 184, 185, 186, 191, 192, 195, 199, 201, 206, 207, 228, 346, 347, 348, 350, 351, 354, 357, 362], "elu": [180, 181, 183, 184, 185, 186, 191, 192, 206, 346, 362], "activation_kwarg": [180, 181, 201], "norm_class": [180, 181, 183, 184, 201], "norm_kwarg": [180, 181, 201], "bias_last_lay": [180, 181, 183, 184, 185, 186, 192, 201], "aggregator_class": [180, 181, 183, 184, 346, 348, 362], "squashdim": [180, 181, 183, 192, 206, 362], "aggregator_kwarg": [180, 181, 183, 184, 346, 348], "squeeze_output": [180, 181, 183, 184, 346, 348], "cell": [180, 181, 193, 194, 195, 197, 198, 199, 201, 206, 207, 347, 349, 350, 351, 352, 353, 354], "kernel": [180, 181, 192, 200, 206], "cnet": [180, 181], "conv3d": 180, "lazyconv2d": [181, 183, 184, 192, 206, 362], "transformer_config": [182, 214, 232], "decisiontransform": [182, 214], "dtconfig": [182, 187, 214], "2202": [182, 187, 270], "05607": [182, 187, 270], "return_to_go": [182, 187, 214, 232], "conv_net_kwarg": [183, 184], "mlp_net_kwarg": [183, 184, 185], "use_avg_pool": [183, 184], "WITH": [183, 184, 185, 186, 239, 275], "1509": [183, 184, 185, 186, 203, 239, 257, 266, 275, 358], "02971": [183, 184, 185, 186, 239, 275], "reus": [183, 310], "convnet": [183, 184, 192, 206, 348, 350, 362], "ndims_in": 183, "avgpool": [183, 184], "lazylinear": [183, 184, 185, 186, 192, 201, 340, 347, 350, 358, 359, 362], "2304": [183, 346], "adaptiveavgpool2d": [184, 346, 348], "output_s": [184, 346, 348], "squeeze2dlay": 184, "400": [185, 186, 353, 357, 358, 360], "mlp_net_kwargs_net1": 186, "mlp_net_kwargs_net2": 186, "mlp1": 186, "mlp2": 186, "decion": 187, "desdescrib": 187, "n_embd": 187, "n_layer": [187, 193, 197], "n_head": 187, "n_inner": 187, "n_posit": 187, "resid_pdrop": 187, "attn_pdrop": 187, "gpt2config": 187, "atol": [188, 221], "rtol": [188, 221], "batch_shap": [188, 221], "event_shap": [188, 221], "absolut": [188, 221, 345], "densiti": [188, 204, 205, 213, 223], "mass": [188, 204, 205, 213, 223, 358], "rsampl": [188, 205, 213, 244], "sample_shap": [188, 204, 205, 213], "softmax": [189, 205, 213, 233, 234], "var_num": [190, 216, 233, 234, 242], "action_value_kei": [190, 216, 233, 234, 241, 242, 269, 282], "action_mask_kei": [190, 216, 233, 234, 235, 236, 241, 242], "perspect": [190, 234, 262, 347], "1707": [190, 234, 262, 271], "06887": [190, 234, 262], "mult": [190, 207, 216, 233, 234, 241, 242], "tensordict_modul": [190, 193, 194, 197, 198, 216, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 256, 260, 261, 267, 271, 272, 273, 274, 276, 340], "nbin": [190, 233, 340], "customdistributionalqv": 190, "log_softmax": [190, 233], "from_modul": [190, 243, 246, 362], "one_hot": [190, 205, 216], "qvalue_actor": [190, 216, 233, 241, 340], "to_modul": [190, 243, 246, 345, 362], "std_bia": 191, "std_min_val": 191, "belief": [191, 211, 217, 218], "1912": [191, 263, 264, 265], "01603": [191, 263, 264, 265], "softplu": [191, 210, 250, 251, 252], "out_features_valu": 192, "cnn_kwarg": [192, 346], "mlp_kwarg": [192, 200, 346], "duel": 192, "cnn": [192, 206, 346, 350, 362], "06581": 192, "batch_first": [193, 195, 197, 199, 348], "bidirect": [193, 197, 348], "cudnn": [193, 194, 197, 198, 348], "vmap": [193, 194, 197, 198, 200, 225, 243, 246, 362], "rnn": [193, 194, 197, 198, 348, 350], "device_count": [193, 194, 197, 198, 363], "n_in": [193, 194, 197, 198], "n_out": [193, 194, 197, 198], "h0": [193, 194, 197, 198], "h1": [193, 194, 197, 198], "call_gru": [193, 194], "h_out": [193, 194, 197, 198], "batched_cal": [193, 194, 197, 198], "gate": [193, 194, 197], "r_t": 193, "sigma": [193, 194, 196, 197, 198, 222, 223, 231, 239, 347], "w_": [193, 194, 197, 198], "ir": [193, 194], "x_t": [193, 197], "b_": [193, 194, 197, 198], "hr": [193, 194, 197], "h_": [193, 194, 197], "z_t": 193, "iz": [193, 194], "hz": [193, 194], "n_t": 193, "odot": [193, 194, 197, 198], "hn": [193, 194, 197], "h_t": [193, 197], "sigmoid": [193, 194, 197, 198], "hadamard": [193, 194, 197, 198], "multilay": [193, 197], "_t": [193, 197, 357, 358], "ge": [193, 197], "multipli": [193, 197, 254, 255, 261, 268, 270, 271, 272, 274, 318, 345], "bernoulli": [193, 197], "b_ih": [193, 194, 197, 198, 199], "b_hh": [193, 194, 197, 198, 199], "seq": [193, 195, 197, 199, 238, 348, 354, 356], "h_0": [193, 197, 198], "unbatch": [193, 197], "pack_padded_sequ": [193, 197], "pack_sequ": [193, 197], "num": [193, 197, 354], "_layer": [193, 197], "_size": [193, 194, 197, 198], "h_n": [193, 197], "packedsequ": [193, 197], "weight_ih_l": [193, 197], "learnabl": [193, 194, 197, 198], "w_ir": 193, "w_iz": 193, "w_in": 193, "num_direct": [193, 197], "weight_hh_l": [193, 197], "w_hr": 193, "w_hz": 193, "w_hn": 193, "bias_ih_l": [193, 197], "b_ir": 193, "b_iz": 193, "b_in": 193, "bias_hh_l": [193, 197], "b_hr": 193, "b_hz": 193, "b_hn": 193, "mathcal": [193, 194, 197, 198], "sqrt": [193, 194, 197, 198, 239], "frac": [193, 194, 197, 198, 347], "seq_len": [193, 197], "subtli": 193, "matrix": [193, 197, 208, 209], "contrast": [193, 266, 360], "hx": [193, 194, 197, 198], "lstmcell": [194, 199], "gru_cel": 194, "z": 194, "weight_ih": [194, 198], "weight_hh": [194, 198], "bias_ih": [194, 198], "bias_hh": [194, 198], "rocm": [194, 198], "embedd": [195, 199, 200], "grucel": [195, 243], "python_bas": [195, 199], "recurrent_st": [195, 348], "custom_kei": [195, 199], "recurrent_mod": [195, 199], "rs": [195, 345], "gru_module_train": 195, "policy_train": [195, 199], "traj_td": [195, 199], "policy_infer": [195, 199], "td_inf": [195, 199], "assert_clos": [195, 199], "upscal": [196, 222, 223], "tanh_loc": [196, 222, 223], "event_dim": [196, 221, 222], "ultim": [196, 222, 223], "poor": [196, 222, 223], "explos": [196, 222, 223], "switch": [196, 223], "formula": [196, 222, 223, 253, 255, 268, 271, 341, 347], "proj_siz": 197, "c0": [197, 198], "c1": [197, 198], "call_lstm": [197, 198], "c_out": [197, 198], "i_t": 197, "ii": [197, 198], "hi": [197, 198], "f_t": 197, "hf": [197, 198], "g_t": 197, "ig": [197, 198], "hg": [197, 198], "o_t": 197, "ho": [197, 198], "c_t": 197, "c_": 197, "forget": 197, "1402": 197, "1128": 197, "c_0": [197, 198], "proj": 197, "c_n": 197, "w_ii": 197, "w_if": 197, "w_ig": 197, "w_io": 197, "w_hi": 197, "w_hf": 197, "w_hg": 197, "w_ho": 197, "b_ii": 197, "b_if": 197, "b_ig": 197, "b_io": 197, "b_hi": 197, "b_hf": 197, "b_hg": 197, "b_ho": 197, "weight_hr_l": 197, "_revers": 197, "analog": [197, 350], "cn": 197, "lstm_cell": 198, "h_1": 198, "c_1": 198, "time_step": [198, 200, 238], "cx": 198, "trust": 199, "correspont": 199, "recurrent_state_h": [199, 348], "recurrent_state_c": [199, 348], "triplet": [199, 241, 242], "lstm_modul": 199, "rs_h": 199, "rs_c": 199, "hidden0": 199, "hidden1": 199, "lstm_kwarg": 200, "lstm_backend": 200, "next_observ": [200, 253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 356], "2d": [200, 350, 357], "indeic": 200, "hidden0_in": 200, "hidden1_in": 200, "hidden0_out": 200, "hidden1_out": 200, "single_bias_last_lay": 201, "layer_class": 201, "layer_kwarg": 201, "perceptron": [201, 350], "aslo": 201, "42": [201, 253, 254, 256, 260, 267, 274, 344, 346, 347, 349, 357, 358, 361], "noisylinear": [201, 208, 338, 346], "noisylazylinear": [201, 338], "mpcplanner": 202, "tensordict_out": [202, 363], "mppi": 203, "covari": 203, "william": [203, 273], "aldrich": 203, "theodor": 203, "01149": 203, "hansen": 203, "wang": 203, "su": 203, "04955": 203, "valueoper": [203, 228, 229, 230, 253, 254, 255, 256, 261, 267, 268, 271, 272, 273, 274, 276, 332, 340, 345, 347, 351], "tdlambdaestim": [203, 338, 345], "value_net": [203, 257, 259, 273, 284, 285, 286, 287, 347, 350, 351, 354], "adv": 203, "lmbda": [203, 278, 284, 287, 289, 295, 296, 297, 300, 301, 341, 345, 347, 357], "value_network": [203, 256, 257, 259, 260, 262, 267, 274, 284, 285, 286, 287, 341, 345, 347, 351, 354], "temperatur": [203, 254, 260, 267], "neg_inf": [204, 205], "inf": [204, 205], "api_doc": [204, 205], "tf_agent": [204, 205], "event": [204, 205, 213, 293, 294, 295, 296, 298, 299, 300, 301, 360], "unnorm": [204, 205, 213], "sparse_mask": [204, 205], "dens": [204, 205], "0831": [204, 205], "1203": [204, 205], "0928": [204, 205], "1972": [204, 205], "grad_method": [205, 213], "reparamgradientstrategi": [205, 213], "passthrough": [205, 213], "proxi": [205, 213, 341], "relaxedonehot": [205, 213], "zeros_lik": [205, 358], "sample_non_valid": 205, "centralis": [206, 207, 357], "share_param": [206, 207, 357], "homogen": [206, 207, 357], "agent_network": [206, 207], "modulelist": [206, 207, 329, 362], "2592": [206, 346], "decentralis": [206, 357], "n_agent_input": [207, 357], "n_agent_output": [207, 357], "lazili": [207, 358], "toech": 207, "centalis": 207, "shown": [207, 340, 356, 357, 360], "std_init": [208, 209], "initialize_paramet": 208, "isol": [208, 269], "1706": [209, 224], "10295v3": 209, "induc": 209, "aid": 209, "scale_map": 210, "biased_softplus_1": 210, "scale_lb": [210, 217, 218], "exp": [210, 252], "module_norm": 210, "decod": 211, "1803": [211, 212, 215], "10122": [211, 212], "rnn_hidden": 211, "latent": 212, "excacli": 213, "inres": 214, "mu": [214, 239, 347], "state_shap": [215, 282], "mixing_embed_dim": [215, 282], "qmix": [215, 357], "mixer": [215, 224, 282], "monoton": 215, "hyper": 215, "11485": 215, "qmixerloss": [215, 224], "qmix_vdn": [215, 224], "vdn": [215, 224], "greedi": [216, 234, 235, 236, 242, 346, 348, 350], "hidden_dim": [217, 218], "posterior": [217, 264], "rssm": [217, 218, 264], "1811": [217, 218], "04551": [217, 218], "obs_embed": 217, "rnn_hidden_dim": 218, "dream": 218, "tanhtransform": 222, "decomposit": 224, "05296": 224, "hide": [225, 347, 357], "satisfi": [225, 340], "vmap_dim": 225, "lam": 225, "sample_in": 225, "sample_in_td": 225, "vm": 225, "translat": [227, 240], "character": [227, 233, 240, 241, 243, 360], "overflow": [227, 233, 234, 240, 241, 242, 243, 244], "td_modul": [227, 228, 229, 230, 240, 243, 244, 246, 248, 350, 362], "3635": 227, "0340": 227, "1476": 227, "3911": [227, 358], "1664": [227, 346, 358], "5455": 227, "2247": 227, "4583": 227, "2916": 227, "2160": 227, "5337": 227, "5193": 227, "grad_fn": [227, 235, 236, 362], "addmmbackward0": 227, "actorvalueoper": [228, 340, 350], "get_policy_oper": [228, 229, 230, 255, 268, 271, 340], "standalon": [228, 229, 230, 350], "tdmodul": [228, 229, 230, 332], "get_critic_oper": 228, "common_oper": [228, 230], "policy_oper": [228, 229, 230], "value_oper": [228, 229, 230], "normalparamwrapp": [228, 229, 230, 240, 246, 253, 254, 261, 267, 271, 272, 273, 274, 276, 338, 362], "module_hidden": [228, 230], "td_module_hidden": [228, 230], "module_act": [228, 230], "td_module_act": [228, 229, 230], "module_valu": [228, 229, 230], "td_module_valu": [228, 229, 230], "state_action_valu": [228, 248, 254, 260, 267, 274, 283, 329, 332, 340, 345, 362], "td_clone": [228, 229, 230], "tensordictmodulewrapp": [228, 325, 326, 332], "get_policy_head": [228, 229, 230], "safesequenti": [228, 229, 230, 282], "head": [228, 230, 255, 268, 271], "get_value_head": [228, 229, 230], "get_value_oper": [228, 229, 230, 255, 268, 271], "action_modul": 229, "state_valu": [229, 230, 248, 255, 260, 267, 268, 271, 272, 274, 284, 285, 286, 287, 289, 291, 293, 295, 297, 298, 300, 340, 345, 347, 357], "qualiti": [230, 340], "actorcriticoper": [230, 255, 268, 271, 340, 350], "embeddig": 230, "refet": 230, "actorcriticwrapp": [230, 340, 345], "po": [231, 236], "sigma_init": 231, "epsilon": [231, 235, 236, 239, 275, 318, 346, 347, 348, 350], "sigma_end": 231, "annealing_num_step": [231, 235, 236, 239, 345, 346, 348, 350, 354], "captur": [231, 235, 236, 239], "omiss": [231, 235, 236, 239], "ommit": [231, 235, 236, 239], "inferec": 232, "set_tensor_kei": 232, "dt_inference_wrapp": 232, "baz": 232, "inference_context": 232, "obs_dim": 232, "tanhdelta": [232, 338, 345], "dtactor": 232, "actor_modul": [232, 362], "dist_class": 232, "dist_kwarg": 232, "distribution_kwarg": [232, 240, 244, 347, 357], "inference_actor": 232, "sequence_length": 232, "mask_context": 232, "out_act": 232, "qvaluemodul": [233, 241, 282, 348, 350, 354], "distributionaldqnnet": 233, "make_log_softmax": 233, "my_action_valu": [234, 242], "chanc": 234, "thid": 234, "eps_init": [235, 236, 239, 346, 348, 350, 354], "eps_end": [235, 236, 239, 346], "explorative_polici": [235, 236, 239], "9055": [235, 236, 358], "9277": [235, 236], "6295": [235, 236], "2532": [235, 236], "addbackward0": [235, 236], "lmheadmodel": 237, "actor_head": [237, 255, 268, 271], "base_model": 237, "lm_head": 237, "macro": 238, "lookahead": 238, "n_action": [238, 254, 257, 259, 270, 274], "reshape_cat": 238, "actor_bas": 238, "obs_cat": 238, "obs_cat_reshap": 238, "action_orig": 238, "counter": [238, 313, 342], "ornstein": [239, 345], "uhlenbeck": [239, 345], "ou": [239, 345], "correl": 239, "noise_t": 239, "noise_": 239, "theta": [239, 347, 358], "sigma_t": 239, "sigma_": 239, "anneal": [239, 346, 350], "ou_prev_nois": 239, "ou_step": 239, "x0": 239, "sigma_min": 239, "n_steps_ann": 239, "is_init_kei": 239, "_ou_prev_nois": 239, "_ou_step": 239, "default_interaction_typ": [240, 244, 350], "interaction_typ": [240, 244], "datacollectorbas": [240, 322, 325, 326, 332, 338], "set_interaction_typ": [240, 244], "cache_dist": [240, 244], "n_empirical_estim": [240, 244], "compound": [240, 350], "compositedistribut": [240, 350], "categ": 240, "distribution_map": 240, "chose": 242, "functionalmodul": 243, "functionalmodulewithbuff": 243, "td_fmodul": 243, "td_function": 243, "td_state": 243, "params_repeat": 243, "td_vmap": [243, 246], "random_sampl": [243, 244], "suppli": 244, "fist": 244, "log_prob_kei": [244, 357], "probabilistictensordictsequenti": [245, 253, 255, 268, 271, 273, 325, 326, 362], "partial_toler": [245, 246, 356], "who": [245, 246], "AND": [245, 246], "tensordictsequenci": 246, "tensordictsequ": 246, "safeprobabilisticmodul": [246, 340], "spec1": 246, "net1": 246, "module1": 246, "td_module1": 246, "spec2": 246, "module2": 246, "td_module2": 246, "clamp": [247, 264, 320, 358], "boundari": [247, 347, 357], "resolut": 247, "9944": 247, "9991": 247, "3020": 247, "2299": [247, 358], "5418": 247, "2989": 247, "6849": 247, "3169": 247, "2690": 247, "9649": [247, 358], "5686": 247, "8602": 247, "0315": 247, "8455": [247, 358], "6027": 247, "4746": 247, "7843": 247, "7782": 247, "2111": 247, "5115": 247, "4687": 247, "5760": 247, "custommodul": 248, "imaginari": 249, "imagin": 249, "transition_model": 249, "get_reward_oper": 249, "get_transition_model_oper": 249, "min_val": [250, 252], "_bia": 250, "invert": [251, 347], "surject": 252, "expln": 252, "biased_softplu": [252, 338], "beggin": 252, "biased_softplus_": 252, "syntax": [252, 345], "met": [252, 358], "1602": 253, "01783v2": 253, "actor_network": [253, 254, 255, 256, 258, 260, 261, 267, 268, 270, 271, 272, 273, 274, 276, 345, 347, 351, 357], "critic_network": [253, 255, 268, 271, 273, 347, 357], "entropy_bonu": [253, 255, 268, 271, 347], "favour": [253, 255, 268, 271], "samples_mc_entropi": [253, 255, 268, 270, 271], "mont": [253, 255, 268, 271, 345], "carlo": [253, 255, 268, 271, 345], "entropy_coef": [253, 255, 268, 271, 347, 357], "critic_coef": [253, 255, 268, 271, 347], "loss_critic_typ": [253, 255, 268, 271, 273, 347], "l1": [253, 255, 256, 257, 261, 268, 271, 272, 273, 276, 279, 282, 340, 345], "l2": [253, 255, 256, 257, 258, 259, 261, 264, 265, 268, 271, 272, 273, 276, 279, 282, 345], "smooth_l1": [253, 254, 255, 256, 257, 260, 261, 267, 268, 271, 272, 273, 274, 276, 279, 282, 347], "separate_loss": [253, 255, 256, 260, 261, 267, 268, 271, 272, 273, 274, 276], "propag": [253, 255, 256, 260, 261, 267, 268, 271, 272, 273, 274, 276, 284, 285, 286, 287, 347, 357], "advantage_kei": [253, 255, 268, 271, 273, 284, 285, 286, 287], "value_target_kei": [253, 255, 268, 271, 273, 284, 285, 286, 287], "value_target": [253, 255, 268, 271, 273, 284, 285, 286, 287, 347, 357], "ddp": [253, 255, 268, 271, 273], "fsdp": [253, 255, 268, 271, 273], "divid": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 274, 276, 323, 340, 345, 357, 358], "clip_valu": [253, 255, 268, 271, 273], "loss_crit": [253, 271, 347, 357], "loss_entropi": [253, 271, 347, 357], "loss_object": [253, 271, 347, 357], "recur": [253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 284, 285, 286, 287, 288, 350], "next_reward": [253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 284, 285, 286, 287], "next_don": [253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 284, 285, 286, 287], "next_termin": [253, 254, 256, 257, 259, 260, 261, 267, 271, 272, 273, 274, 276, 284, 285, 286, 287], "loss_obj": 253, "sacloss": [253, 266, 275, 338], "select_out_kei": [253, 254, 256, 260, 261, 267, 271, 272, 274, 276], "make_value_estim": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 277, 282, 341, 345, 346, 357, 362], "value_typ": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 278, 282, 345], "hyperparam": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 345], "enum": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 278, 282, 345], "default_value_estim": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 345, 362], "default_value_kwarg": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 338, 345], "dqn_loss": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 277, 282], "td1": [253, 254, 256, 257, 259, 261, 262, 263, 267, 269, 271, 272, 273, 274, 276, 282, 345], "conserv": [254, 259], "qvalue_network": [254, 260, 261, 267, 272, 274, 276], "loss_funct": [254, 256, 257, 258, 259, 260, 261, 267, 272, 274, 276, 279, 282, 345], "alpha_init": [254, 261, 270, 272, 274], "min_alpha": [254, 261, 270, 272, 274], "max_alpha": [254, 261, 270, 272, 274], "fixed_alpha": [254, 261, 270, 272, 274], "target_entropi": [254, 261, 270, 272, 274], "prod": [254, 270, 274], "delay_actor": [254, 256, 274, 276], "delay_qvalu": [254, 261, 272, 274, 276], "min_q_weight": 254, "max_q_backup": 254, "backup": 254, "deterministic_backup": 254, "num_random": 254, "with_lagrang": 254, "lagrang": 254, "lagrange_thresh": 254, "valueclass": [254, 256, 261, 272, 274, 276], "qvalu": [254, 260, 261, 267, 272, 274, 276, 329], "loss_actor": [254, 256, 260, 261, 267, 272, 273, 274, 276, 315, 345, 351, 362], "loss_actor_bc": 254, "loss_alpha": [254, 261, 272, 274], "loss_cql": [254, 259], "loss_qvalu": [254, 259, 260, 261, 267, 272, 274, 276], "loss_alpha_prim": 254, "clip_epsilon": [255, 347, 357], "normalize_advantag": [255, 268, 271, 357], "value_kei": [255, 268, 271, 284, 285, 286, 287, 345], "somemodul": [255, 268, 271], "someactor": [255, 268, 271], "value_head": [255, 268, 271], "somevalu": [255, 268, 271], "loss_modul": [255, 266, 268, 269, 271, 275, 320, 331, 332, 341, 342, 345, 346, 347, 357, 360], "ppoloss": [255, 268, 338], "delay_valu": [256, 257, 259, 262, 273, 274, 282, 346, 348, 354], "loss_valu": [256, 260, 267, 273, 274, 345, 347, 351, 357, 362], "pred_valu": [256, 259, 276, 345, 351, 362], "pred_value_max": [256, 345, 351, 362], "target_valu": [256, 259, 272, 276, 283, 341, 345, 351, 362], "target_value_max": [256, 345, 351, 362], "qvalueactor": [257, 259, 282, 340, 346, 348], "double_dqn": 257, "06461": [257, 266], "mult_one_hot": [257, 260, 261, 282], "loss_val": [257, 259, 341, 345, 347, 348, 351, 352, 354, 357, 360], "01345": 258, "distanc": [259, 268, 279, 283, 284, 357], "dcql_loss": 259, "2110": [260, 267], "06169": [260, 267], "num_qvalue_net": [260, 261, 267, 272, 274, 276], "expectil": [260, 267], "tau": [260, 267, 275, 345, 346], "antmaz": [260, 267], "sticht": [260, 267], "onehotcategor": [260, 261, 338], "target_entropy_weight": 261, "disctount": 262, "distributionalqvalueactor": [262, 340], "input_tensordict": [262, 345], "actor_model": 263, "value_model": [263, 265], "model_based_env": 263, "dreamerenv": [263, 338], "imagination_horizon": 263, "unrol": [263, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301], "discount_loss": [263, 265], "lambda_kl": 264, "lambda_reco": 264, "lambda_reward": 264, "reco_loss": 264, "reward_loss": 264, "free_nat": 264, "nat": 264, "delayed_clamp": 264, "global_averag": 264, "value_loss": 265, "fake_data": 265, "ddpgloss": [266, 275, 332, 338, 345, 351, 362], "td3loss": [266, 275, 338], "value_network_update_interv": 266, "qvalueclass": 267, "loss_value_diff": 267, "diff": 267, "old_polici": 268, "new_polici": 268, "apart": [268, 357], "dtarg": 268, "samples_mc_kl": 268, "analyt": 268, "decrement": 268, "loss_": [269, 315, 341, 345, 351], "equip": [269, 348, 350], "gh": 269, "_acceptedkei": 269, "dataclass": [269, 329], "_forward_value_estimator_kei": 269, "alter": [269, 340], "value_estim": [269, 284, 285, 286, 287, 288, 341, 345, 357], "myloss": 269, "action2": 269, "convert_to_funct": [269, 345], "expand_dim": 269, "create_target_param": [269, 345], "compare_against": [269, 345], "_param": 269, "expans": 269, "resampl": 269, "_target_param": 269, "blend": 269, "proxim": [271, 347, 357], "optimis": [271, 316, 347, 357], "flavour": [271, 357, 362], "clipppoloss": [271, 338, 347, 357], "klpenppoloss": [271, 338], "regularis": 271, "06347": 271, "gae": [271, 338, 341, 345, 347, 357], "ppo_loss": 271, "tdlambda": [271, 278, 341, 345], "base_lay": 271, "randn_lik": 271, "samplelogprob": 271, "openreview": [272, 329], "ay8zfzm0tdd": [272, 329], "sub_sample_len": 272, "subsampl": [272, 311, 342], "action_log_prob_actor": 272, "state_action_value_actor": [272, 276], "connectionist": 273, "1992": 273, "doi": 273, "1007": 273, "bf00992696": 273, "actor_net": [273, 345, 347], "1801": 274, "01290": 274, "applic": [274, 282, 349, 350, 358], "1812": 274, "05905": 274, "redqloss": [275, 338], "math": 275, "theta_t": [275, 358], "theta_": [275, 358], "polyak": 275, "policy_nois": 276, "noise_clip": 276, "next_state_valu": [276, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 338], "td0": [277, 345], "strict_shap": 279, "view_a": 279, "qmixer": [282, 338], "local_valu": 282, "visibl": [282, 357], "dafault": 282, "acceptedkei": 282, "global_valu": 282, "penultim": 282, "local_value_network": 282, "mixer_network": 282, "value_modul": [282, 347, 362], "qnet": [282, 345], "next_val_kei": 283, "pred_next_v": 283, "usus": 283, "mse": 283, "q_valu": 283, "n_steps_to_next": 283, "value_next_st": 283, "1506": [284, 289, 297], "02438": [284, 289, 297], "exponenti": [284, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 318], "average_ga": [284, 347], "skip_exist": [284, 285, 286, 287], "time_dim": [284, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301], "advang": 284, "gradient_mod": 284, "value_error": [284, 285, 286, 287, 288], "target_param": [284, 285, 286, 287, 288, 345, 357], "98": [284, 285, 286, 287, 346, 358, 359, 360], "94": [284, 287, 346, 358, 359], "unpack": [284, 285, 286, 287], "tensor_kei": [284, 285, 286, 287, 288], "next_valu": [284, 285, 286, 287, 288], "aka": [285, 346], "average_reward": [285, 286, 287], "tdestim": [285, 286, 288], "infti": 286, "valuefunctionbas": 288, "old_stat": [289, 291, 293, 295, 297, 298, 300], "new_stat": [289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "rolling_gamma": [293, 294, 295, 296, 298, 299, 300, 301], "g1": [293, 294, 295, 296, 298, 299, 300, 301], "g2": [293, 294, 295, 296, 298, 299, 300, 301], "g3": [293, 294, 295, 296, 298, 299, 300, 301], "g4": [293, 294, 295, 296, 298, 299, 300, 301], "v3": [293, 294, 295, 296, 298, 299, 300, 301], "out_file_bas": 302, "skip_reset": 302, "interv": [302, 303, 312, 322, 346, 358], "center_crop": 303, "make_grid": 303, "mp4": [303, 305, 354], "csvlogger": [303, 338, 346, 353, 354], "csv": [303, 305, 307, 346, 353, 354], "wandb": [303, 307, 310, 353, 362], "tensorboard": [303, 307, 309, 353, 362], "exp_nam": [303, 304, 305, 308, 309, 310, 332, 346, 353, 354], "log_dir": [303, 304, 305, 307, 309, 310, 346, 354], "cheetah_video": 303, "video_format": [303, 305, 354], "run_video": 303, "run_video_0": 303, "templat": 304, "pt": [305, 342, 359], "video_fp": 305, "minim": [305, 360], "dependeci": 305, "cur_dir": 305, "csv_log": 305, "video_": 305, "experiment_nam": [306, 307], "uuid": [306, 346, 363], "logger_typ": 307, "logger_nam": 307, "mlflow": [307, 308], "wandb_kwarg": 307, "mlflow_kwarg": 307, "tracking_uri": 308, "uri": 308, "datastor": 308, "tb_log": 309, "tensoarboard": 309, "td_log": 309, "save_dir": 310, "resum": 310, "uncategor": 310, "sub_traj_len": 311, "min_sub_traj_len": 311, "register_op": [311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 342, 346], "process_optim_batch": [311, 317, 318, 342], "td_out": [311, 319], "_process_optim_batch_hook": [311, 342], "batch_subsampl": 311, "clear_cuda": 312, "pre_optim_step": [312, 342], "log_pbar": [313, 314, 316, 318, 342, 346], "progress": [313, 314, 316, 320, 342, 346, 348, 363], "count_fram": 313, "pre_steps_log": [313, 314, 342], "count_frames_log": 313, "lognam": 314, "r_train": [314, 346], "log_reward": [314, 346], "loss_compon": 315, "appl": 315, "optimizer_hook": 315, "record_interv": [316, 345, 346], "record_fram": [316, 323, 345, 346], "policy_explor": [316, 332, 345, 346, 350, 354], "log_kei": [316, 346], "suffix": 316, "underestim": 316, "set_exploration_typ": [316, 338, 347, 348, 350, 362], "r_evalu": [316, 345], "flatten_tensordict": [317, 346], "max_dim": 317, "rb_trainer": 317, "batch_process": [317, 318, 319, 342], "post_loss": [317, 342], "999": [318, 346], "jitter": 318, "finfo": 318, "default_dtyp": 318, "get_default_dtyp": 318, "reward_norm": 318, "update_reward_stat": 318, "normalize_reward": 318, "make_train": [319, 338], "_process_batch_hook": [319, 342], "select_kei": [319, 342], "versatil": [320, 349], "optim_steps_per_batch": [320, 342, 346], "clip_grad_norm": 320, "clip_norm": 320, "progress_bar": 320, "save_trainer_interv": 320, "log_interv": [320, 346], "save_trainer_fil": [320, 342], "update_weights_interv": [322, 346], "update_weight": 322, "post_step": [322, 342, 346], "cfg": [323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336], "dictconfig": [323, 324, 325, 326, 329, 330, 331, 332, 333, 336], "unknowingli": 323, "annealing_fram": [323, 345], "init_env_step": [323, 324, 345], "proof_environ": [324, 329, 345], "sta": 324, "ot": 324, "actor_model_explor": [325, 326, 345], "make_env_kwarg": [325, 326], "targetnetupdat": [327, 328, 331, 332], "redqloss_deprec": 328, "actor_net_kwarg": 329, "qvalue_net_kwarg": 329, "observation_kei": 329, "parser_env_arg": 329, "parser_model_args_continu": 329, "hydra": 329, "config_stor": 329, "configstor": 329, "config_field": 329, "config_cl": 329, "redqmodelconfig": 329, "envconfig": 329, "make_dataclass": 329, "cls_name": 329, "cs": 329, "config_path": 329, "config_nam": 329, "replayargsconfig": 330, "target_net_updat": [332, 345, 346], "constitu": 332, "tensorboardlogg": [332, 338, 353], "egreedywrapp": 332, "env_proof": 332, "obs_spec": 332, "net_valu": 332, "dir": [332, 342, 346], "gettempdir": 332, "argpars": [333, 336], "namespac": [333, 336], "parser": [333, 336], "transformed_env_constructor": [333, 338], "num_env_per_collector": [334, 335], "video_tag": 336, "norm_obs_onli": 336, "use_env_cr": 336, "custom_env_mak": 336, "custom_env": 336, "return_transformed_env": 336, "action_dim_gsd": 336, "state_dim_gsd": 336, "obs_norm_state_dict": 336, "wheter": 336, "maker": 336, "asyncdatacollector": 338, "distributedsyncdatacollector": 338, "submitit_delayed_launch": 338, "raycollector": 338, "rational": 338, "behind": 338, "footnot": 338, "unboundeddiscretetensorspec": 338, "lazystackedtensorspec": 338, "lazystackedcompositespec": 338, "prompttensordicttoken": 338, "rolloutfrommodel": 338, "tokenizeddatasetload": 338, "create_infinite_iter": 338, "consolidate_spec": 338, "check_no_exclusive_kei": 338, "contains_lazy_spec": 338, "check_marl_group": 338, "tensordictrecord": 338, "videorecord": [338, 347, 353, 354], "get_available_librari": 338, "set_exploration_mod": 338, "make_composite_from_td": [338, 358], "terminated_or_trunc": 338, "braxwrapp": 338, "dmcontrolwrapp": 338, "jumanjienv": 338, "jumanjiwrapp": 338, "mogymenv": 338, "mogymwrapp": 338, "multithreadedenvwrapp": 338, "openmlenv": 338, "pettingzooenv": 338, "robohiveenv": 338, "smacv2env": 338, "smacv2wrapp": 338, "vmaswrapp": 338, "qvaluehook": 338, "distributionalqvaluehook": 338, "reset_nois": 338, "cemplann": 338, "mpcplannerbas": 338, "mppiplann": 338, "independentnorm": 338, "truncatednorm": 338, "maskedonehotcategor": 338, "inv_softplu": 338, "vmapmodul": 338, "distributionaldqnloss": [338, 346], "discretesacloss": 338, "iqlloss": 338, "discreteiqlloss": 338, "cqlloss": 338, "discretecqlloss": 338, "dtloss": 338, "onlinedtloss": 338, "a2closs": 338, "reinforceloss": 338, "dreameractorloss": 338, "dreamermodelloss": 338, "dreamervalueloss": 338, "td0estim": [338, 345], "td1estim": [338, 345], "td0_return_estim": 338, "td0_advantage_estim": 338, "td1_return_estim": 338, "vec_td1_return_estim": 338, "td1_advantage_estim": 338, "vec_td1_advantage_estim": 338, "td_lambda_return_estim": 338, "vec_td_lambda_return_estim": 338, "td_lambda_advantage_estim": 338, "vec_td_lambda_advantage_estim": 338, "generalized_advantage_estim": 338, "vec_generalized_advantage_estim": 338, "reward2go": 338, "distance_loss": [338, 345], "hold_out_net": 338, "hold_out_param": [338, 345], "softupd": [338, 345, 346, 348, 351, 354], "hardupd": [338, 345, 351], "batchsubsampl": [338, 342], "clearcudacach": 338, "countframeslog": 338, "logreward": [338, 342, 346], "optimizerhook": [338, 346], "replaybuffertrain": [338, 342, 346], "rewardnorm": 338, "selectkei": [338, 342], "trainerhookbas": [338, 342, 346], "updateweight": [338, 342, 346], "make_collector_offpolici": 338, "make_collector_onpolici": 338, "make_dqn_loss": 338, "make_redq_loss": 338, "make_redq_model": 338, "make_replay_buff": [338, 345], "make_target_updat": 338, "parallel_env_constructor": [338, 345], "sync_async_collector": 338, "sync_sync_collector": 338, "correct_for_frame_skip": 338, "get_stats_random_rollout": 338, "mlflowlogg": 338, "wandblogg": [338, 353], "get_logg": 338, "generate_exp_nam": 338, "journei": 339, "textbook": 339, "highlight": 339, "ever": [339, 357], "bump": 339, "think": [339, 347, 357, 363], "benefit": [339, 349, 357, 360], "pr": 339, "ground": [340, 345, 358], "recycl": [340, 360], "impos": 340, "violat": 340, "noisier": 340, "Their": [340, 357], "sd": 340, "prob_modul": 340, "pick": [340, 345, 346, 350], "hopefulli": [340, 346], "functional_modul": 340, "make_funct": 340, "mathbb": [340, 346], "rightarrow": [340, 346], "soften": 340, "backbon": [340, 348, 350, 356, 362], "make_actor": 340, "make_valu": 340, "shared_param": 340, "make_common": 340, "reusabl": [341, 345, 360], "swappabl": [341, 345], "characterist": [341, 345, 358], "trainabl": [341, 345, 351, 359], "whatev": [341, 345], "smth": [341, 345], "metric": [341, 345], "nutshel": [341, 345], "barto": [341, 357], "chapter": [341, 353], "significantli": [341, 345, 346, 351, 357], "next_stat": 341, "value_net_loss": 341, "pow": [341, 345], "room": 341, "signifi": [341, 357], "underperform": 341, "thin": 341, "intric": [341, 350], "believ": 342, "scheme": [342, 363], "substenti": 342, "_pre_steps_log_hook": 342, "_pre_optim_hook": 342, "sub_batch": 342, "_post_loss_hook": 342, "_post_optim_hook": 342, "post_optim": [342, 346], "_post_optim_log": 342, "post_optim_log": 342, "_post_steps_hook": 342, "_post_steps_log_hook": 342, "post_steps_log": 342, "comment": [342, 346, 362], "reserv": 342, "logginghook": 342, "logging_hook": 342, "save_dict": 342, "some_valu": 342, "torchsnapshot": 342, "ckpt_backend": 342, "filepath": 342, "save_train": 342, "load_from_fil": 342, "55": [344, 346, 358, 359, 361, 362], "432": [344, 358, 361], "galleri": [344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "mem": [344, 361], "mb": [344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363], "torchrl_demo": [344, 361, 362], "350": [344, 358, 361, 362], "rb_tutori": [344, 360, 361], "246": [344, 358, 360, 361], "4639": [344, 361], "coding_dqn": [344, 346, 361], "714": [344, 346, 361], "024": [344, 358, 361], "dqn_with_rnn": [344, 348, 361], "402": [344, 348, 358, 361], "1846": [344, 348, 361], "multiagent_ppo": [344, 357, 361], "020": [344, 357, 361], "coding_ddpg": [344, 345, 361], "873": [344, 345, 361], "4630": [344, 345, 361], "coding_ppo": [344, 347, 361], "417": [344, 347, 358, 361], "torchrl_env": [344, 361, 363], "472": [344, 358, 361, 363], "4396": [344, 358, 361], "pretrained_model": [344, 359, 361], "602": [344, 358, 359, 361], "3779": [344, 361], "multi_task": [344, 356, 361], "48": [344, 346, 356, 358, 359, 361], "792": [344, 356, 361], "47": [344, 346, 350, 357, 358, 361], "060": [344, 350, 361], "751": [344, 349, 361], "311": [344, 351, 358, 361], "585": [344, 354, 358, 361], "739": [344, 352, 361], "576": [344, 346, 353, 358, 361], "51": [344, 346, 353, 358, 361], "author": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 360, 363], "vincent": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 360, 363], "moen": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 358, 360, 363], "assembl": 345, "focus": [345, 351], "straightforward": [345, 346, 349, 350, 351, 352, 360], "maxim": [345, 351, 358], "transpar": [345, 348], "illustr": [345, 346, 350, 360], "bash": 345, "is_fork": [345, 346, 347, 348, 357, 359], "get_start_method": [345, 346, 347, 348, 357, 359], "is_avail": [345, 346, 347, 348, 357, 359], "collector_devic": 345, "loss_dict": 345, "oblivi": [345, 347, 360], "elementari": 345, "didact": 345, "dilut": 345, "pessimist": [345, 346, 347], "target_actor_network_param": 345, "actor_in_kei": 345, "actor_crit": 345, "noth": [345, 347], "compromis": 345, "hp": 345, "hasattr": 345, "_value_estim": 345, "elif": [345, 346], "notimplementederror": 345, "unknown": 345, "ifgg": 345, "_loss_actor": 345, "td_copi": 345, "actor_network_param": 345, "value_network_param": 345, "_loss_valu": 345, "pred_val": 345, "target_value_network_param": 345, "glue": 345, "_forward": 345, "ndimens": 345, "remaind": 345, "focu": [345, 346, 347, 350, 351, 352], "env_librari": 345, "env_task": 345, "env_arg": [345, 346], "friendli": 345, "torchr": 345, "rescal": 345, "presum": 345, "make_transformed_env": 345, "reward_sc": 345, "marker": 345, "env_per_collector": 345, "transform_state_dict": 345, "make_t_env": 345, "cheat": 345, "10m": 345, "cautiou": 345, "magnitud": 345, "thousand": [345, 348], "get_env_stat": 345, "proof_env": 345, "5000": [345, 346, 347, 354], "recal": [345, 347, 360], "ddpgmlpactor": 345, "ddpgmlpqnet": 345, "materi": 345, "ornsteinuhlenbeckprocesswrapp": [345, 350], "make_ddpg_actor": 345, "q_net": 345, "tight": 345, "decoupl": [345, 351], "10_000": [345, 347], "traj_len": [345, 348], "make_record": 345, "recorder_obj": 345, "flavor": 345, "circular": 345, "buffer_s": [345, 346], "random_crop_len": 345, "prb": 345, "buffer_scratch_dir": 345, "temporari": 345, "25": [345, 346, 348, 358, 359], "dataflow": 345, "ceil_div": 345, "utd": [345, 348], "update_to_data": 345, "realiz": 345, "_must_": 345, "001": [345, 358], "outdat": 345, "trick": [345, 346], "despit": 345, "adam": [345, 346, 347, 348, 351, 354, 357, 358], "optimizer_actor": 345, "lr": [345, 346, 347, 348, 354, 357, 358], "weight_decai": [345, 346], "optimizer_valu": 345, "total_collection_step": 345, "pretti": [345, 349, 353, 360], "rewards_ev": 345, "collected_fram": 345, "r0": 345, "numel": [345, 347, 348, 354, 359, 360], "current_fram": 345, "sampled_tensordict": 345, "gn1": 345, "clip_grad_norm_": [345, 347, 357, 358], "gn2": 345, "gn": [345, 358], "td_record": 345, "rn": 345, "set_descript": [345, 347, 348, 357, 358], "2f": 345, "traceback": [345, 360, 363], "1126": 345, "1532": [345, 360, 363], "_wrapped_call_impl": [345, 360, 363], "_call_impl": [345, 360, 363], "1582": 345, "forward_cal": [345, 360, 363], "_contextlib": [345, 360, 363], "126": [345, 358, 360, 363], "decorate_context": [345, 360, 363], "364": [345, 358], "342": [345, 358], "1179": 345, "new_func": 345, "_self": [345, 363], "665": [345, 358], "_to_modul": 345, "413": [345, 358], "__dict__": 345, "_modul": 345, "plot": [345, 347, 348, 357, 358], "mention": [345, 348, 360, 363], "matplotlib": [345, 347, 348, 357, 358, 360, 363], "pyplot": [345, 347, 348, 357, 358, 360, 363], "plt": [345, 347, 348, 357, 358, 360, 363], "zip": [345, 355], "legend": 345, "xlabel": [345, 348, 357, 358], "ylabel": [345, 357], "tight_layout": 345, "concret": [345, 347], "takeawai": [345, 346], "distpatch": 345, "jupyt": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "ipynb": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363], "sphinx": [345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363], "customis": [346, 357], "road": 346, "aspect": [346, 351], "highest": [346, 350], "prerequisit": [346, 348], "familiar": [346, 357, 363], "lookup": 346, "amort": [346, 347], "cart": 346, "pole": 346, "un": 346, "actuat": 346, "frictionless": 346, "duelingcnndqnet": 346, "egreedymodul": [346, 348, 350, 354], "is_notebook": 346, "shell": 346, "get_ipython": 346, "__class__": 346, "zmqinteractiveshel": 346, "qtconsol": 346, "terminalinteractiveshel": 346, "ipython": [346, 357, 358], "nameerror": 346, "umbrella": 346, "misplac": 346, "misus": 346, "orchestr": [346, 351, 353], "five": 346, "64x64": 346, "motion": [346, 358], "obs_norm_sd": 346, "simpler": [346, 349], "get_norm_stat": 346, "test_env": 346, "make_model": 346, "dummy_env": 346, "init_bia": 346, "exploration_modul": [346, 348, 350, 354], "eps_greedy_v": 346, "eps_greedy_val_env": 346, "actor_explor": 346, "get_replay_buff": 346, "n_optim": [346, 351, 352], "themselv": 346, "parametriz": 346, "simplic": [346, 347, 352, 359, 360], "get_collector": 346, "cl": 346, "data_collector": 346, "bunch": 346, "power": 346, "ubiquit": [346, 349], "get_loss_modul": 346, "target_updat": 346, "995": [346, 358], "variat": 346, "2e": [346, 358], "wd": 346, "upd": 346, "harder": [346, 362], "5_000": 346, "500000": 346, "100000": 346, "005": 346, "mandatori": [346, 347, 357, 358], "fairer": 346, "budget": 346, "dqn_exp_": 346, "uuid1": [346, 363], "9895": 346, "0737": 346, "registr": 346, "cumbersom": 346, "buffer_hook": 346, "weight_updat": 346, "aliv": 346, "total_reward": 346, "07": [346, 357, 358], "24it": [346, 358], "3688": [346, 358], "9259": 346, "67it": 346, "96": [346, 358, 359], "59": [346, 358], "37it": [346, 358], "3596": 346, "56it": 346, "3960": 346, "53it": 346, "4295": [346, 358], "192": [346, 358], "09": [346, 357, 358], "43": [346, 357, 358], "20it": [346, 358], "224": [346, 358], "52": [346, 358], "66it": [346, 347], "3991": 346, "61": [346, 358, 359], "02it": [346, 358], "4173": 346, "288": [346, 358], "69": [346, 358, 359], "76it": [346, 358], "3415": 346, "76": [346, 358, 359], "23it": [346, 358], "352": [346, 358], "58": [346, 348, 358], "79": [346, 358, 359, 360], "65it": [346, 358], "384": [346, 358], "83": [346, 358, 359], "30it": [346, 347, 358], "416": [346, 358], "53": [346, 358, 359], "43it": 346, "3323": 346, "448": [346, 358], "49": [346, 358, 359], "91": [346, 358, 359, 360], "05it": 346, "3566": 346, "480": [346, 347, 358, 359], "90": [346, 347, 357, 358, 359, 360], "26it": [346, 358], "3869": 346, "544": [346, 358], "92": [346, 358, 359], "48it": 346, "4021": 346, "83it": 346, "4082": [346, 358], "608": [346, 358], "93": [346, 348, 358, 360], "55it": 346, "3778": 346, "640": 346, "74it": 346, "672": 346, "45": [346, 348, 358], "33it": [346, 358], "3718": 346, "704": 346, "736": 346, "12it": [346, 347, 358], "768": 346, "800": 346, "68it": [346, 358], "832": 346, "81it": [346, 358], "3445": 346, "864": 346, "42it": 346, "896": 346, "95it": 346, "928": 346, "97": [346, 358, 359], "75it": 346, "960": 346, "992": [346, 358], "71it": 346, "1056": 346, "99it": [346, 347, 358], "1088": 346, "82it": [346, 347], "1120": 346, "17it": [346, 358], "1152": 346, "69it": 346, "1184": [346, 363], "1216": 346, "27it": [346, 358], "1248": 346, "15it": [346, 358], "1280": 346, "70it": 346, "1344": 346, "1376": 346, "1408": 346, "80it": 346, "1440": 346, "1472": 346, "07it": [346, 358], "1504": 346, "1536": 346, "58it": [346, 358], "1568": 346, "89it": [346, 358], "1600": 346, "84it": 346, "1632": 346, "49it": [346, 358], "1696": 346, "94it": [346, 347], "1728": 346, "14it": [346, 348, 358], "1760": 346, "97it": [346, 348, 358], "1792": 346, "86it": 346, "1824": 346, "87it": [346, 358], "1856": 346, "51it": 346, "1888": 346, "21it": [346, 358], "1920": 346, "1952": 346, "1984": 346, "18it": [346, 358], "2016": 346, "57it": 346, "2048": [346, 359], "2080": 346, "2112": [346, 358], "36it": [346, 358], "3748": 346, "2144": 346, "2176": 346, "102": [346, 358], "60it": 346, "2208": 346, "78it": 346, "2240": 346, "2272": 346, "2336": 346, "2368": 346, "2400": 346, "2432": 346, "39it": 346, "2464": 346, "00it": [346, 358], "2496": 346, "44it": 346, "2528": [346, 358], "93it": 346, "2560": 346, "28it": [346, 348, 358], "2624": 346, "22it": [346, 358], "2656": [346, 358], "54": [346, 348, 358, 360], "2688": 346, "2720": [346, 358], "79it": 346, "2752": 346, "34it": [346, 347, 358], "56": [346, 357, 358], "2784": 346, "2816": 346, "77it": [346, 358], "57": [346, 357, 358, 359, 360], "2848": 346, "64it": 346, "2880": 346, "2912": 346, "2944": [346, 358], "52it": 346, "60": [346, 347, 357, 358, 359, 362], "2976": [346, 358], "96it": [346, 347], "3040": 346, "3072": 346, "03it": [346, 358], "62": [346, 357, 358], "3104": 346, "63": [346, 358, 359], "3136": 346, "3168": 346, "3200": 346, "65": [346, 358, 359], "3232": [346, 358], "1667": 346, "3264": 346, "66": [346, 358], "3296": 346, "67": [346, 356, 358], "3328": 346, "3360": 346, "72it": 346, "68": [346, 358, 359], "3392": 346, "3424": 346, "3456": [346, 358], "70": [346, 347, 357, 358], "3488": 346, "74": [346, 358, 359], "3520": 346, "71": [346, 358, 359], "3552": 346, "72": [346, 358, 359], "3584": 346, "89": [346, 358], "3616": 346, "08it": [346, 358], "73": [346, 347, 358, 359], "3648": 346, "3680": 346, "3712": 346, "3744": 346, "3776": 346, "59it": 346, "3808": 346, "77": [346, 358, 359, 360], "3840": 346, "3872": 346, "10it": [346, 358], "78": [346, 358, 359], "3904": 346, "46it": [346, 358], "3936": 346, "3968": 346, "4000": [346, 347], "54it": 346, "4032": 346, "29it": [346, 348, 358], "4064": 346, "06it": [346, 358], "82": [346, 358, 359], "4096": 346, "4128": [346, 358], "4160": 346, "4192": 346, "4224": 346, "85": [346, 358], "4256": [346, 358], "4288": [346, 358], "4320": 346, "4352": 346, "45it": 346, "4384": 346, "4416": 346, "4448": 346, "4480": 346, "4512": 346, "4544": 346, "4576": 346, "4608": 346, "4640": [346, 360], "4672": [346, 358], "4704": 346, "4736": 346, "4768": 346, "4800": [346, 358], "47it": [346, 358], "4832": 346, "4864": 346, "4896": 346, "4928": 346, "98it": [346, 358], "4960": 346, "4992": 346, "5024it": 346, "print_csv_files_in_fold": 346, "folder_path": 346, "csv_file": 346, "output_str": 346, "dirpath": 346, "endswith": 346, "strip": 346, "tmp": [346, 360], "tmpulhym5y9": 346, "dqn_exp_264b824c": 346, "f4fd": 346, "11ee": 346, "8b79": 346, "0242ac110002": 346, "39912933111190796": 346, "42945271730422974": 346, "39912936091423035": 346, "2874503433704376": 346, "21590130031108856": 346, "13288313150405884": 346, "15951840579509735": 346, "37052085995674133": 346, "2692105174064636": 346, "2812403738498688": 346, "3299785852432251": 346, "2870565950870514": 346, "grad_norm_0": 346, "9983808994293213": 346, "273052453994751": 346, "4894328117370605": 346, "209721326828003": 346, "221027374267578": 346, "9969518184661865": 346, "500922203063965": 346, "692530632019043": 346, "5305190086364746": 346, "10000000894069672": 346, "166666507720947": 346, "qvaluenetwork": 346, "worst": 346, "accuraci": 346, "fanci": [346, 352], "talk": 347, "repetit": [347, 349, 352], "six": 347, "sophist": [347, 357], "invent": 347, "overview": [347, 351, 357, 362], "theta_k": 347, "pi_": 347, "exceed": 347, "discourag": [347, 358], "indispens": 347, "analyz": 347, "lingua": 347, "franca": 347, "defaultdict": [347, 358], "3e": [347, 348, 357], "max_grad_norm": [347, 357], "sub_batch_s": 347, "num_epoch": [347, 357], "entropy_ep": [347, 357], "charact": 347, "inverteddoublependulum": 347, "transmit": 347, "stai": 347, "supplementari": [347, 363], "told": 347, "confid": [347, 357], "ran": 347, "f_": 347, "mu_": 347, "difficulti": [347, 363], "d_ob": 347, "d_action": 347, "policy_modul": [347, 357], "That": 347, "said": 347, "briefli": [347, 357], "refil": [347, 357], "conveni": [347, 357, 358, 360], "easiest": [347, 351, 357], "mathemat": [347, 357], "tradeoff": [347, 357], "advantage_modul": 347, "lr_schedul": [347, 358], "cosineannealinglr": [347, 358], "eval_str": 347, "tensordict_data": [347, 357], "data_view": [347, 357], "subdata": [347, 357], "cum_reward_str": 347, "4f": [347, 348, 358], "stepcount_str": 347, "param_group": 347, "lr_str": 347, "eval_rollout": 347, "nice": [347, 349, 352], "479": [347, 358], "01it": [347, 358], "7396": 347, "1016": 347, "0003": [347, 348, 358], "484": [347, 358], "1503": 347, "3000": 347, "483": [347, 358], "1757": 347, "2070": 347, "0002": [347, 358], "485": [347, 358], "2216": 347, "6000": 347, "2260": 347, "7000": 347, "487": [347, 358], "2414": 347, "8000": 347, "476": [347, 358], "2408": 347, "9000": 347, "2557": 347, "32it": [347, 358], "2544": [347, 363], "cap": [347, 360], "figsiz": [347, 358], "subplot": [347, 358, 363], "titl": [347, 348, 357, 358], "bit": [347, 348, 349, 357, 360], "84x84": 348, "accessori": 348, "stamp": 348, "assist": 348, "emb": 348, "n_cell": 348, "customiz": 348, "wouldn": 348, "make_tensordict_prim": 348, "qval": 348, "stoch_polici": 348, "opportun": 348, "uniniti": 348, "again": [348, 349, 350, 352, 357, 359, 360, 363], "redund": 348, "strongli": 348, "sake": [348, 359, 360], "20_000": [348, 358], "longest": 348, "npai": 348, "action_spread": 348, "150": [348, 358], "0005": 348, "topic": [349, 350, 351], "straight": 349, "backtrack": 349, "encapsul": [349, 350, 351], "reset_with_act": 349, "4696": 349, "tp": 349, "stepped_data": 349, "tediou": 349, "spatial": 349, "useless": 349, "policyless": 349, "appreci": 349, "monitor": 349, "examin": 349, "tackl": 350, "delv": 350, "bypass": 350, "extractor": 350, "palliat": 350, "additivegaussianwrapp": 350, "had": [350, 352], "exploration_polici": 350, "greedili": 350, "innov": [350, 351], "rollout_explor": 350, "sole": 351, "tradit": 351, "supervis": [351, 352, 360, 363], "n_collect": 351, "get_next_batch": 351, "novel": 351, "ddpg_loss": 351, "total_loss": 351, "prove": 351, "reliev": 351, "concern": 351, "accustom": 352, "surprisingli": 352, "fundament": 352, "augment": [352, 354, 360], "art": 352, "pseudo": [352, 358], "multirpocess": 352, "countless": 352, "yourself": [352, 357], "lightweight": 353, "portabl": 353, "everywher": 353, "hyperapamet": 353, "my_exp": 353, "log_scalar": 353, "elaps": 353, "my_scalar": 353, "saw": [353, 358, 360], "my_video": 353, "record_env": [353, 354], "uncom": 353, "lesson": 354, "voluntarili": 354, "refresh": [354, 357], "value_mlp": 354, "100_000": 354, "init_rand_step": 354, "training_loop": 354, "video_record": 354, "arbitrarili": 354, "total_count": 354, "total_episod": 354, "t0": 354, "t1": 354, "conclud": [354, 359], "tutorials_python": 355, "tutorials_jupyt": 355, "env1_obs_kei": 356, "observation_stand": 356, "env2_obs_kei": 356, "observation_walk": 356, "tdreset1": 356, "tdreset2": 356, "policy_common": 356, "policy_stand": 356, "policy_walk": 356, "But": 356, "env1_mak": 356, "env2_mak": 356, "_single_task": 356, "td_rollout": 356, "matteo": 357, "bettini": 357, "benchmarl": 357, "maddpg": 357, "lidar": 357, "sensor": 357, "collis": 357, "tie": 357, "mappo": 357, "ippo": 357, "phase": [357, 360], "mathbf": 357, "pi": [357, 358], "fed": [357, 360], "literatur": 357, "overcom": 357, "stationari": 357, "concurr": 357, "analys": 357, "gui": 357, "visualis": 357, "multiagentmlp": 357, "vmas_devic": 357, "6_000": 357, "team": [357, 362], "n_iter": 357, "minibatch_s": 357, "generalis": 357, "simd": 357, "parallelis": 357, "warp": 357, "todai": 357, "circl": 357, "surround": 357, "dot": [357, 358], "collid": 357, "drag": 357, "elast": 357, "acceler": 357, "penalis": 357, "num_vmas_env": 357, "scenario_nam": 357, "four": [357, 358], "environmnet": 357, "final_rew": 357, "agent_collis": 357, "stress": 357, "paramount": 357, "n_rollout_step": 357, "evolut": 357, "utilis": 357, "n_actions_per_ag": 357, "n_obs_per_ag": 357, "share_parameters_polici": 357, "policy_net": 357, "denot": 357, "carefulli": [357, 363], "grant": 357, "converg": 357, "cooper": 357, "share_parameters_crit": 357, "critic_net": 357, "fantast": 357, "minibatch": 357, "desc": 357, "episode_reward_mean": 357, "episode_reward_mean_list": 357, "get_item_shap": 357, "critic_network_param": 357, "target_critic_network_param": 357, "4579917788505554": 357, "39507877826690674": 357, "2842429876327515": 357, "5311583280563354": 357, "0912442207336426": 357, "4949307441711426": 357, "478776454925537": 357, "7761335372924805": 357, "738668441772461": 357, "9966132640838623": 357, "xvfb": 357, "pyvirtualdisplai": 357, "1400": [357, 358], "900": 357, "pil": 357, "rendering_callback": 357, "fromarrai": 357, "rgb_arrai": [357, 358], "gif": 357, "save_al": 357, "append_imag": 357, "profici": 357, "master": 357, "freeli": 358, "touch": 358, "undertaken": 358, "broader": 358, "wider": 358, "algebra": 358, "acquaint": 358, "avenu": 358, "_apply_to_composit": 358, "default_x": 358, "default_i": 358, "torqu": 358, "upward": 358, "angular": 358, "sin": 358, "rad": 358, "sec": 358, "gravit": 358, "angl": 358, "deleg": 358, "new_th": 358, "new_thdot": 358, "thdot": 358, "g_forc": 358, "max_torqu": 358, "angle_norm": 358, "max_spe": 358, "albeit": 358, "gen_param": 358, "high_th": 358, "high_thdot": 358, "low_th": 358, "low_thdot": 358, "trivial": 358, "shortcut": [358, 363], "irrelev": 358, "_make_spec": 358, "td_param": 358, "render_mod": 358, "render_fp": 358, "random_": 358, "_make_step": 358, "staticmethod": 358, "showcas": 358, "skeleton": 358, "_apply_transform": [358, 363], "_inv_apply_transform": [358, 363], "subset": [358, 359], "sine": 358, "cosin": 358, "sintransform": 358, "costransform": 358, "t_sin": 358, "t_co": 358, "cat_transform": 358, "simple_rollout": 358, "unexplor": 358, "init_td": 358, "traj_return": 358, "last_reward": 358, "is_ipython": 358, "inlin": 358, "get_backend": 358, "ion": 358, "gcf": 358, "clear_output": 358, "625": 358, "0748": 358, "519": 358, "04it": 358, "0499": 358, "4472": 358, "073": 358, "0685": 358, "0408": 358, "552": 358, "5154": 358, "9086": 358, "9385": 358, "155": 358, "2568": 358, "4981": 358, "223": 358, "35it": 358, "8929": 358, "4491": 358, "581": 358, "3233": 358, "0664": 358, "596": 358, "1021": 358, "5263": 358, "9579": 358, "5807": 358, "8075": 358, "212": 358, "2009": 358, "5525": 358, "914": 358, "2894": 358, "0115": 358, "0977": 358, "1845": 358, "1830": 358, "4858": 358, "233": 358, "2863": 358, "0297": 358, "464": 358, "4617": 358, "5997": 358, "904": 358, "1647": 358, "0777": 358, "901": 358, "4709": 358, "6813": 358, "8317": 358, "3221": 358, "5554": 358, "276": 358, "3353": 358, "701": 358, "8570": 358, "6656": 358, "463": 358, "7779": 358, "6911": 358, "875": 358, "25it": 358, "0796": 358, "7082": 358, "308": 358, "0421": 358, "1496": 358, "5037": 358, "1755": 358, "5029": 358, "9454": 358, "9330": 358, "2118": 358, "444": 358, "0995": 358, "6294": 358, "3146": 358, "2909": 358, "461": 358, "9720": 358, "1298": 358, "9923": 358, "0345": 358, "3438": 358, "424": 358, "6953": 358, "5233": 358, "411": 358, "8011": 358, "5329": 358, "2677": 358, "6969": 358, "7010": 358, "376": 358, "9352": 358, "7707": 358, "6178": 358, "5646": 358, "348": 358, "19it": 358, "7304": 358, "9407": 358, "942": 358, "3882": 358, "7604": 358, "3507": 358, "8928": 358, "258": 358, "6978": 358, "4641": 358, "549": 358, "6047": 358, "5005": 358, "4136": 358, "2993": 358, "3222": 358, "4046": 358, "7314": 358, "275": 358, "6331": 358, "9318": 358, "961": 358, "8331": 358, "1604": 358, "4099": 358, "4761": 358, "125": 358, "4262": 358, "6363": 358, "382": 358, "3593": 358, "7377": 358, "2847": 358, "3443": 358, "867": 358, "3592": 358, "4760": 358, "441": 358, "9950": 358, "8021": 358, "3528": 358, "1214": 358, "708": 358, "4023": 358, "3583": 358, "041": 358, "3801": 358, "0310": 358, "120": 358, "4244": 358, "2039": 358, "4850": 358, "8748": 358, "706": 358, "4897": 358, "9210": 358, "8964": 358, "0832": 358, "3934": 358, "456": 358, "8971": 358, "2933": 358, "3377": 358, "6996": 358, "2274": 358, "8916": 358, "098": 358, "2660": 358, "9110": 358, "4503": 358, "6956": 358, "9172": 358, "4026": 358, "946": 358, "9229": 358, "5205": 358, "294": 358, "8872": 358, "6637": 358, "019": 358, "9281": 358, "2082": 358, "724": 358, "8561": 358, "6574": 358, "357": 358, "4138": 358, "5230": 358, "385": 358, "4065": 358, "5642": 358, "921": 358, "9786": 358, "4129": 358, "5831": 358, "266": 358, "7723": 358, "4152": 358, "0898": 358, "389": 358, "5155": 358, "5376": 358, "5616": 358, "4094": 358, "283": 358, "5333": 358, "4803": 358, "895": 358, "6566": 358, "2588": 358, "662": 358, "4732": 358, "7503": 358, "068": 358, "0714": 358, "3370": 358, "059": 358, "8612": 358, "1915": 358, "3855": 358, "0349": 358, "9644": 358, "4538": 358, "445": 358, "0392": 358, "4080": 358, "1648": 358, "9599": 358, "143": 358, "4284": 358, "5946": 358, "2590": 358, "9181": 358, "4621": 358, "9075": 358, "674": 358, "1772": 358, "9444": 358, "351": 358, "9391": 358, "5595": 358, "8673": 358, "6240": 358, "5919": 358, "1071": 358, "9127": 358, "251": 358, "9799": 358, "3131": 358, "9612": 358, "9705": 358, "8741": 358, "2230": 358, "0972": 358, "0337": 358, "0350": 358, "0654": 358, "2441": 358, "4596": 358, "362": 358, "103": 358, "4362": 358, "171": 358, "104": 358, "4041": 358, "6907": 358, "105": 358, "4664": 358, "2760": 358, "0299": 358, "9712": 358, "349": 358, "107": 358, "3332": 358, "4479": 358, "772": 358, "108": 358, "4357": 358, "9591": 358, "543": 358, "109": 358, "6216": 358, "1353": 358, "692": 358, "110": 358, "6261": 358, "7086": 358, "496": 358, "111": 358, "7758": 358, "9818": 358, "112": 358, "7772": 358, "5055": 358, "113": 358, "5840": 358, "3180": 358, "2083": 358, "115": 358, "5275": 358, "6873": 358, "116": 358, "4107": 358, "1624": 358, "117": 358, "6372": 358, "2571": 358, "118": [358, 360], "4039": 358, "4428": 358, "119": 358, "4728": 358, "5628": 358, "6767": 358, "2466": 358, "522": 358, "121": [358, 363], "5873": 358, "5072": 358, "91it": 358, "6548": 358, "3766": 358, "123": 358, "5134": 358, "1955": 358, "124": 358, "2481": 358, "0591": 358, "4500": 358, "3368": 358, "50it": 358, "9708": 358, "7059": 358, "127": 358, "73it": 358, "3031": 358, "2534": 358, "843": 358, "88it": 358, "3327": 358, "6193": 358, "129": 358, "4831": 358, "1172": 358, "11it": 358, "2593": 358, "4219": 358, "962": 358, "8380": 358, "899": 358, "132": 358, "2721": 358, "9048": 358, "166": 358, "133": 358, "2419": 358, "5248": 358, "2139": 358, "4278": 358, "135": 358, "0690": 358, "5140": 358, "136": 358, "1140": 358, "7402": 358, "137": 358, "31it": 358, "5356": 358, "1636": 358, "138": 358, "0671": 358, "8798": 358, "139": 358, "8918": 358, "3298": 358, "307": 358, "140": 358, "1779": 358, "141": 358, "1771": 358, "3624": 358, "936": 358, "142": 358, "1683": 358, "4810": 358, "9373": 358, "4435": 358, "144": 358, "8092": 358, "145": [358, 363], "2572": 358, "146": 358, "4212": 358, "0260": 358, "147": 358, "0939": 358, "6478": 358, "605": 358, "148": 358, "6606": 358, "7289": 358, "149": 358, "9300": 358, "7193": 358, "563": 358, "1166": 358, "8514": 358, "151": 358, "9108": 358, "0672": 358, "292": 358, "152": 358, "8591": 358, "3768": 358, "153": 358, "9976": 358, "154": 358, "0576": 358, "0067": 358, "935": 358, "4199": 358, "1722": 358, "156": 358, "8310": 358, "3466": 358, "157": 358, "8631": 358, "2492": 358, "158": 358, "8763": 358, "1277": 358, "159": 358, "5562": 358, "7446": 358, "1082": 358, "9830": 358, "161": [358, 360], "0946": 358, "5229": 358, "162": 358, "4574": 358, "6900": 358, "163": [358, 359], "2229": 358, "0318": 358, "482": 358, "164": 358, "0543": 358, "0817": 358, "761": 358, "165": 358, "2809": 358, "5118": 358, "366": 358, "1142": 358, "5635": 358, "167": 358, "1949": 358, "2327": 358, "982": 358, "168": 358, "0967": 358, "0387": 358, "457": 358, "169": 358, "0782": 358, "2150": 358, "170": 358, "5222": 358, "3725": 358, "9288": 358, "9837": 358, "1416": 358, "1099": 358, "173": 358, "8620": 358, "8475": 358, "174": 358, "1807": 358, "4375": 358, "175": 358, "1148": 358, "0645": 358, "2751": 358, "8313": 358, "177": 358, "9286": 358, "9770": 358, "178": 358, "5735": 358, "2837": 358, "179": 358, "2926": 358, "9489": 358, "180": 358, "1507": 358, "181": 358, "8724": 358, "3567": 358, "182": 358, "3574": 358, "6140": 358, "183": 358, "16it": 358, "7895": 358, "2518": 358, "184": 358, "6146": 358, "185": 358, "8776": 358, "7358": 358, "186": 358, "3722": 358, "8428": 358, "187": 358, "7955": 358, "188": 358, "0092": 358, "7106": 358, "829": 358, "189": 358, "2264": 358, "6919": 358, "190": 358, "1438": 358, "1362": 358, "191": 358, "0618": 358, "8217": 358, "9420": 358, "6765": 358, "193": 358, "13it": 358, "7745": 358, "0709": 358, "194": 358, "9478": 358, "6867": 358, "195": [358, 360], "6507": 358, "6225": 358, "196": 358, "2244": 358, "2195": 358, "197": 358, "5385": 358, "9263": 358, "198": 358, "1878": 358, "2374": 358, "8054": 358, "3504": 358, "557": 358, "0766": 358, "201": 358, "2011": 358, "8393": 358, "202": 358, "0803": 358, "7815": 358, "203": 358, "8363": 358, "2460": 358, "204": 358, "8643": 358, "2191": 358, "593": 358, "205": [358, 360, 363], "0773": 358, "1343": 358, "206": 358, "8657": 358, "207": 358, "9304": 358, "7584": 358, "208": 358, "8752": 358, "2307": 358, "209": 358, "5250": 358, "4869": 358, "7837": 358, "5762": 358, "211": 358, "6661": 358, "8600": 358, "2502": 358, "1752": 358, "3075": 358, "8871": 358, "214": 358, "9406": 358, "8090": 358, "215": 358, "6291": 358, "8923": 358, "876": 358, "216": 358, "9504": 358, "21e": 358, "217": 358, "7431": 358, "7880": 358, "218": 358, "4463": 358, "5432": 358, "219": [358, 360], "3793": 358, "3313": 358, "220": 358, "8843": 358, "0369": 358, "065": 358, "221": 358, "4828": 358, "8391": 358, "222": 358, "61it": 358, "6265": 358, "2913": 358, "947": 358, "5541": 358, "1252": 358, "7342": 358, "2396": 358, "225": 358, "5936": 358, "1924": 358, "226": 358, "09it": 358, "9975": 358, "2045": 358, "227": 358, "8367": 358, "9540": 358, "228": [358, 360], "7259": 358, "6743": 358, "229": 358, "4827": 358, "7528": 358, "230": 358, "7361": 358, "8756": 358, "231": 358, "7646": 358, "1116": 358, "232": 358, "5426": 358, "8385": 358, "5662": 358, "8585": 358, "234": 358, "8234": 358, "7930": 358, "235": 358, "2648": 358, "9309": 358, "236": 358, "6817": 358, "237": 358, "0943": 358, "1533": 358, "238": 358, "3045": 358, "0483": 358, "239": 358, "6415": 358, "0201": 358, "241": 358, "4437": 358, "4365": 358, "242": 358, "0358": 358, "4943": 358, "243": 358, "1272": 358, "5003": 358, "1180": 358, "2637": 358, "245": 358, "7197": 358, "0873": 358, "2917": 358, "247": 358, "0160": 358, "0738": 358, "248": 358, "3689": 358, "0120": 358, "249": 358, "5570": 358, "0475": 358, "250": 358, "4423": 358, "2220": 358, "6803": 358, "252": 358, "1465": 358, "7214": 358, "253": 358, "8801": 358, "7034": 358, "254": 358, "9136": 358, "4076": 358, "7589": 358, "5013": 358, "8150": 358, "2241": 358, "257": 358, "0753": 358, "8081": 358, "1951": 358, "8314": 358, "259": 358, "0038": 358, "260": 358, "0889": 358, "4616": 358, "261": [358, 363], "0655": 358, "262": 358, "8333": 358, "9476": 358, "263": 358, "7554": 358, "3798": 358, "264": 358, "3717": 358, "3947": 358, "529": 358, "265": 358, "3060": 358, "6495": 358, "7467": 358, "8889": 358, "267": 358, "8457": 358, "591": 358, "7137": 358, "0536": 358, "771": 358, "269": 358, "1651": 358, "388": 358, "270": 358, "8246": 358, "5709": 358, "281": 358, "271": 358, "7502": 358, "0521": 358, "032": 358, "272": 358, "5475": 358, "7253": 358, "273": 358, "2856": 358, "7130": 358, "274": 358, "2778": 358, "4122": 358, "8368": 358, "1841": 358, "9622": 358, "1603": 358, "003e": 358, "277": 358, "0247": 358, "346": 358, "278": 358, "2238": 358, "6418": 358, "279": 358, "0626": 358, "2538": 358, "280": 358, "0149": 358, "7380": 358, "2167": 358, "8911": 358, "282": 358, "8725": 358, "1983": 358, "8142": 358, "3709": 358, "284": 358, "4989": 358, "285": 358, "6464": 358, "6210": 358, "286": 358, "9726": 358, "0820": 358, "287": 358, "6975": 358, "9091": 358, "4926": 358, "4791": 358, "289": [358, 363], "0905": 358, "3500": 358, "290": 358, "2287": 358, "291": 358, "9918": 358, "5543": 358, "9245": 358, "6444": 358, "631": 358, "293": 358, "0448": 358, "4769": 358, "8566": 358, "7208": 358, "295": 358, "0966": 358, "296": 358, "5303": 358, "1537": 358, "023": 358, "297": 358, "2682": 358, "564": 358, "298": 358, "4318": 358, "5063": 358, "299": 358, "7475": 358, "4190": 358, "8186": 358, "5077": 358, "301": 358, "1883": 358, "5291": 358, "302": 358, "3998": 358, "303": 358, "3622": 358, "0930": 358, "626": 358, "304": 358, "9500": 358, "5664": 358, "305": 358, "5697": 358, "3024": 358, "306": 358, "3117": 358, "0052": 358, "006": 358, "0981": 358, "9312": 358, "3873": 358, "309": 358, "0411": 358, "2650": 358, "1656": 358, "0228": 358, "004": 358, "1196": 358, "2478": 358, "312": 358, "7353": 358, "0812": 358, "313": 358, "3022": 358, "758": 358, "314": 358, "1406": 358, "4626": 358, "315": 358, "2156": 358, "851": 358, "316": 358, "1953": 358, "3774": 358, "317": 358, "6385": 358, "9917": 358, "318": 358, "2764": 358, "905": 358, "319": 358, "6391": 358, "9317": 358, "9748": 358, "2679": 358, "321": 358, "8495": 358, "5125": 358, "8177": 358, "6602": 358, "323": 358, "0704": 358, "5776": 358, "324": 358, "9833": [358, 362], "1339": 358, "325": 358, "1238": 358, "326": 358, "9299": 358, "0227": 358, "327": 358, "7727": 358, "1607": 358, "336": 358, "328": 358, "3958": 358, "3223": 358, "763": 358, "329": 358, "4742": 358, "1797": 358, "330": 358, "0144": 358, "0085": 358, "791": 358, "331": 358, "8284": 358, "0428": 358, "332": 358, "7365": 358, "333": 358, "4566": 358, "0781": 358, "086": 358, "334": 358, "3355": 358, "0230": 358, "335": 358, "9346": 358, "0423": 358, "076": 358, "3711": 358, "1335": 358, "6855": 358, "337": 358, "0304": 358, "0023": 358, "8459": 358, "338": 358, "9998": 358, "4399": 358, "339": 358, "2303": 358, "1346": 358, "340": 358, "2915": 358, "7116": 358, "341": 358, "5560": 358, "0487": 358, "5119": 358, "061": 358, "343": 358, "3305": 358, "3705": 358, "957": 358, "344": 358, "6068": 358, "345": 358, "5731": 358, "3897": 358, "0376": 358, "347": 358, "0434": 358, "012": 358, "1300": 358, "1215": 358, "0968": 358, "0885": 358, "1348": 358, "0073": 358, "5052": 358, "4184": 358, "2817": 358, "8887": 358, "353": 358, "4779": 358, "1009": 358, "354": 358, "0604": 358, "599": 358, "355": 358, "4486": 358, "1176": 358, "656": 358, "356": 358, "2436": 358, "0668": 358, "8849": 358, "0012": 358, "358": 358, "7511": 358, "8804": 358, "359": 358, "8870": 358, "6728": 358, "360": 358, "8841": 358, "5508": 358, "361": 358, "5242": 358, "0013": 358, "6185": 358, "363": 358, "1378": 358, "0204": 358, "0355": 358, "685": 358, "365": 358, "92it": 358, "4884": 358, "0231": 358, "0014": 358, "6793": 358, "367": 358, "9834": 358, "863": 358, "368": 358, "6709": 358, "462": 358, "369": 358, "5199": 358, "9790": 358, "370": 358, "9401": 358, "7802": 358, "371": 358, "6723": 358, "372": 358, "2678": 358, "6201": 358, "373": 358, "2184": 358, "7385": 358, "374": 358, "6344": 358, "617": 358, "375": 358, "9945": 358, "0772": 358, "567": 358, "7576": 358, "0398": 358, "377": 358, "3396": 358, "0022": 358, "094": 358, "378": 358, "3073": 358, "4018": 358, "379": 358, "1869": 358, "380": 358, "0481": 358, "1117": 358, "381": 358, "6823": 358, "981": 358, "8305": 358, "0210": 358, "383": 358, "4908": 358, "0272": 358, "538": 358, "3267": 358, "0111": 358, "7965": 358, "1796": 358, "0039": 358, "5396": 358, "386": 358, "3757": 358, "0490": 358, "387": 358, "1394": 358, "4187": 358, "2986": 358, "7954": 358, "1274": 358, "0063": 358, "813": 358, "390": 358, "8706": 358, "0114": 358, "391": 358, "6922": 358, "2423": 358, "392": 358, "9115": 358, "2602": 358, "393": 358, "2449": 358, "0783": 358, "394": 358, "0631": 358, "0057": 358, "7444": 358, "395": 358, "3339": 358, "0167": 358, "396": 358, "4806": 358, "397": 358, "4171": 358, "067": 358, "398": 358, "2618": 358, "5809": 358, "399": 358, "0054": 358, "3364": 358, "8733": 358, "0184": 358, "401": 358, "9137": 358, "0113": 358, "025": 358, "0386": 358, "0625": 358, "403": 358, "1332": 358, "0582": 358, "7816": 358, "404": 358, "8341": 358, "0941": 358, "854": 358, "405": 358, "8615": 358, "588": 358, "406": 358, "3849": 358, "008": 358, "407": 358, "9395": 358, "0765": 358, "055": 358, "408": 358, "2685": 358, "2235": 358, "688": 358, "409": 358, "3052": 358, "4249": 358, "410": 358, "6806": 358, "6383": 358, "3721": 358, "9981": 358, "412": 358, "1862": 358, "822": 358, "9811": 358, "0171": 358, "013": 358, "414": 358, "0252": 358, "0049": 358, "6205": 358, "415": 358, "1108": 358, "4921": 358, "9142": 358, "8130": 358, "1725": 358, "0036": 358, "3196": 358, "418": 358, "7795": 358, "0242": 358, "799": 358, "419": 358, "7737": 358, "0138": 358, "420": 358, "1462": 358, "0053": 358, "421": 358, "9226": 358, "6139": 358, "422": 358, "9889": 358, "0403": 358, "423": 358, "6194": 358, "0032": 358, "3989": 358, "0104": 358, "425": 358, "9960": 358, "0009": 358, "6009": 358, "426": 358, "2697": 358, "0914": 358, "427": 358, "1114": 358, "428": 358, "9862": 358, "1932": 358, "429": 358, "0637": 358, "0623": 358, "082": 358, "430": 358, "9906": 358, "2031": 358, "431": 358, "9948": 358, "0895": 358, "1970": 358, "0256": 358, "4231": 358, "0449": 358, "644": 358, "434": 358, "1039": 358, "1973": 358, "435": 358, "4561": 358, "1225": 358, "436": 358, "0211": 358, "2125": 358, "437": 358, "3866": 358, "0050": 358, "7202": 358, "438": 358, "6388": 358, "0072": 358, "439": 358, "1187": 358, "0015": 358, "5116": 358, "440": 358, "0432": 358, "0025": 358, "7809": 358, "1925": 358, "0103": 358, "442": 358, "9570": 358, "443": 358, "0871": 358, "5601": 358, "0165": 358, "0047": 358, "6061": 358, "2746": 358, "0027": 358, "7887": 358, "446": 358, "1835": 358, "0035": 358, "855": 358, "447": 358, "8420": 358, "548": 358, "2653": 358, "0126": 358, "9736": 358, "449": 358, "0594": 358, "0119": 358, "6196": 358, "450": 358, "4509": 358, "0373": 358, "451": 358, "0620": 358, "452": 358, "6898": 358, "3235": 358, "687": 358, "453": 358, "5879": 358, "454": 358, "8406": 358, "0694": 358, "455": 358, "8259": 358, "0235": 358, "8500": 358, "0024": 358, "4054": 358, "458": 358, "2027": 358, "0894": 358, "459": 358, "5966": 358, "460": 358, "6942": 358, "0016": 358, "4254": 358, "6703": 358, "0145": 358, "8124": 358, "0218": 358, "9196": 358, "0188": 358, "8986": 358, "0884": 358, "0084": 358, "5624": 358, "465": 358, "8862": 358, "0006": 358, "5384": 358, "466": 358, "5837": 358, "467": 358, "8954": 358, "0101": 358, "6751": 358, "468": 358, "8063": 358, "0122": 358, "9635": 358, "469": 358, "0692": 358, "4216": 358, "470": 358, "1227": 358, "0586": 358, "162e": 358, "471": 358, "9690": 358, "4166": 358, "6324": 358, "473": 358, "0778": 358, "474": 358, "8548": 358, "0017": 358, "4408": 358, "475": 358, "8125": 358, "1515": 358, "2733": 358, "0044": 358, "2836": 358, "477": 358, "7497": 358, "7681": 358, "478": 358, "8547": 358, "0105": 358, "7212": 358, "9848": 358, "0019": 358, "6498": 358, "1987": 358, "0011": 358, "5473": 358, "481": 358, "8991": 358, "6091": 358, "9189": 358, "5771": 358, "6781": 358, "7542": 358, "5959": 358, "0064": 358, "2547": 358, "486": 358, "0636": 358, "547": 358, "0065": 358, "488": 358, "1694": 358, "0083": 358, "5759": 358, "489": 358, "0493": 358, "0021": 358, "7805": 358, "490": 358, "0950": 358, "497": 358, "491": 358, "9717": 358, "3672": 358, "492": 358, "0207": 358, "493": 358, "8266": 358, "5365": 358, "494": 358, "2623": 358, "5078": 358, "495": 358, "4545": 358, "09636": 358, "8754": 358, "0010": 358, "498": 358, "0031": 358, "8269": 358, "499": 358, "6642": 358, "2284": 358, "501": 358, "9130": 358, "0008": 358, "502": 358, "503": 358, "7624": 358, "0056": 358, "3858": 358, "504": 358, "0890": 358, "0042": 358, "505": 358, "7505": 358, "2157": 358, "506": 358, "8394": 358, "3413": 358, "507": 358, "9609": 358, "0041": 358, "6905": 358, "508": 358, "8467": 358, "4409": 358, "509": 358, "510": 358, "8128": 358, "3559": 358, "511": 358, "1479": 358, "0264": 358, "1589": 358, "566": 358, "513": 358, "2756": 358, "0046": 358, "5266": 358, "514": 358, "9873": 358, "0112": 358, "9314": 358, "515": 358, "3791": 358, "0721": 358, "516": 358, "4580": 358, "0758": 358, "6114": 358, "517": 358, "2431": 358, "518": 358, "1958": 358, "5553": 358, "8924": 358, "0097": 358, "520": 358, "3737": 358, "0234": 358, "521": 358, "9125": 358, "4623": 358, "3230": 358, "0589": 358, "3784": 358, "523": 358, "9482": 358, "0051": 358, "524": 358, "1979": 358, "0045": 358, "6401": 358, "525": 358, "1588": 358, "0048": 358, "6255": 358, "526": 358, "6084": 358, "3477": 358, "1475": 358, "0209": 358, "528": 358, "7611": 358, "1040": 358, "0099": 358, "0173": 358, "643": 358, "530": 358, "8189": 358, "4358": 358, "531": 358, "9897": 358, "532": 358, "1548": 358, "9751": 358, "533": 358, "6362": 358, "7495": 358, "534": 358, "1749": 358, "9513": 358, "535": 358, "7708": 358, "0371": 358, "536": 358, "2649": 358, "0437": 358, "537": 358, "5491": 358, "0276": 358, "6426": 358, "7294": 358, "078e": 358, "539": 358, "9928": 358, "540": 358, "7937": 358, "0124": 358, "9664": 358, "541": 358, "3342": 358, "542": 358, "2046": 358, "5496": 358, "0956": 358, "0059": 358, "545": 358, "9028": 358, "5843": 358, "546": 358, "0674": 358, "0178": 358, "797": 358, "2815": 358, "0599": 358, "1587": 358, "9276": 358, "8228": 358, "6164": 358, "551": 358, "6850": 358, "9167": 358, "3092": 358, "0670": 358, "9177": 358, "553": 358, "1599": 358, "0043": 358, "554": 358, "6367": 358, "555": 358, "3657": 358, "556": 358, "6694": 358, "2622": 358, "0372": 358, "4841": 358, "558": 358, "2707": 358, "757": 358, "559": 358, "2267": 358, "5415": 358, "560": 358, "4556": 358, "0163": 358, "561": 358, "1839": 358, "0809": 358, "6262": 358, "562": 358, "0278": 358, "1112": 358, "6155": 358, "565": 358, "1427": 358, "3582": 358, "624": 358, "7870": 358, "9490": 358, "0439": 358, "8796": 358, "568": 358, "8026": 358, "612": 358, "569": 358, "3147": 358, "8486": 358, "570": 358, "7917": 358, "0129": 358, "571": 358, "9553": 358, "0020": 358, "6871": 358, "572": 358, "3132": 358, "0159": 358, "8646": 358, "573": 358, "5320": 358, "0269": 358, "574": 358, "2955": 358, "0245": 358, "575": 358, "3347": 358, "0179": 358, "9718": 358, "1629": 358, "804": 358, "577": 358, "4164": 358, "0070": 358, "4335": 358, "578": 358, "579": 358, "3049": 358, "9063": 358, "580": 358, "8785": 358, "3295": 358, "5184": 358, "0546": 358, "582": 358, "4589": 358, "583": 358, "4697": 358, "2476": 358, "584": 358, "2397": 358, "4953": 358, "1775": 358, "586": 358, "2258": 358, "0110": 358, "7671": 358, "587": 358, "3981": 358, "8590": 358, "0007": 358, "589": 358, "9820": 358, "4221": 358, "590": 358, "1293": 358, "0116": 358, "868": 358, "1675": 358, "5931": 358, "592": 358, "2910": 358, "5219": 358, "2124": 358, "1730": 358, "737": 358, "594": 358, "2914": 358, "0206": 358, "595": 358, "0172": 358, "3982": 358, "0945": 358, "0121": 358, "4789": 358, "597": 358, "3805": 358, "4074": 358, "598": 358, "3310": 358, "5065": 358, "6028": 358, "6316": 358, "6724": 358, "6523": 358, "601": 358, "0136": 358, "4298": 358, "3524": 358, "2629": 358, "603": 358, "2635": 358, "7839": 358, "604": 358, "6041": 358, "8027": 358, "4170": 358, "4675": 358, "606": 358, "3153": 358, "9316": 358, "607": 358, "0649": 358, "9722": 358, "7989": 358, "0329": 358, "609": 358, "1976": 358, "6852": 358, "610": 358, "4793": 358, "1255": 358, "611": 358, "4581": 358, "0394": 358, "2047": 358, "0326": 358, "613": 358, "8967": 358, "8619": 358, "614": 358, "5906": 358, "6491": 358, "615": 358, "6634": 358, "4394": 358, "616": 358, "0624": 358, "0061": 358, "5676": 358, "3259": 358, "0131": 358, "7733": 358, "618": 358, "7515": 358, "0189": 358, "5575": 358, "619": 358, "9313": 358, "6286": 358, "620": 358, "4325": 358, "7832": 358, "621": 358, "1134": 358, "622": 358, "4572": 358, "0500": 358, "5838": 358, "623": 358, "3818": 358, "8623": 358, "1253": 358, "6622": 358, "subject": 358, "explain": 359, "semat": 359, "r3mtransform": 359, "env_transform": [359, 363], "s3": 359, "amazonaw": 359, "r3m_50": 359, "374m": 359, "9m": 359, "114mb": 359, "1mb": 359, "0m": 359, "2m": 359, "6mb": 359, "6m": 359, "0mb": 359, "9mb": 359, "105m": 359, "115m": 359, "4mb": 359, "130m": 359, "2mb": 359, "140m": 359, "152m": 359, "164m": 359, "8mb": 359, "180m": 359, "197m": 359, "110mb": 359, "213m": 359, "102mb": 359, "229m": 359, "104mb": 359, "244m": 359, "115mb": 359, "256m": 359, "7mb": 359, "266m": 359, "277m": 359, "285m": 359, "293m": 359, "300m": 359, "311m": 359, "328m": 359, "342m": 359, "352m": 359, "361m": 359, "373m": 359, "wiser": 359, "_storag": [359, 360], "3780": 359, "pull": 360, "batteri": 360, "filesystem": 360, "buffer_list": 360, "lowest": 360, "medium": 360, "buffer_lazytensor": 360, "buffer_lazymemmap": 360, "tempdir": 360, "tmpc5olsigm": 360, "fullest": 360, "mydata": 360, "background": 360, "question": [360, 362], "_i": 360, "artifici": 360, "0893e": 360, "hamper": 360, "she": 360, "pars": 360, "proport": 360, "hist": 360, "barcontain": 360, "artist": 360, "reappear": 360, "unfold": 360, "problemat": 360, "4th": 360, "794": 360, "1106": 360, "ret": 360, "_sampl": 360, "decorated_fun": 360, "1146": 360, "_transform": 360, "1541": [360, 363], "1047": 360, "2984": 360, "3109": 360, "rep": 360, "tensorlist": 360, "prioritizedslicesampl": 360, "tensordictmaxvaluewrit": 360, "demo": 362, "icml": 362, "vmoen": 362, "fb": 362, "invest": 362, "platform": 362, "media": 362, "predominantli": 362, "tensordict1": 362, "tensordict2": 362, "tensordict_sampl": 362, "_sampler": 362, "_sum_tre": 362, "modulenotfounderror": 362, "28791671991348267": 362, "noopresetenv": [362, 363], "6400": 362, "backbone_modul": 362, "params_expand": 362, "exec_sequ": 362, "tensordict_exp": 362, "base_modul": 362, "0137": 362, "1524": 362, "0641": 362, "viewbackward0": 362, "asstridedbackward0": 362, "8728": 362, "1334": 362, "3494": 362, "6887": 362, "6402": 362, "_safetanhbackward": 362, "1132": 362, "1762": 362, "3430": 362, "2668": 362, "2918": 362, "6239": 362, "roughli": 362, "tensordicts_prealloc": 362, "tensordicts_stack": 362, "tensordict_rollout": [362, 363], "disclaim": 362, "concatmodul": 362, "loss_td": 362, "year": 362, "roadmap": 362, "compris": 362, "contributor": 362, "curiou": 362, "nascent": 362, "unsupervis": 363, "unifi": 363, "_build_env": 363, "amidar": 363, "assault": 363, "1945": 363, "deserv": 363, "__episode__": 363, "__trajectory__": 363, "void": 363, "reproduct": 363, "tensordict_tprim": 363, "_rollout_stop_earli": 363, "2612": 363, "1224": 363, "err": 363, "1198": 363, "_call_modul": 363, "1141": 363, "imshow": 363, "wrapper1": 363, "wrapper2": 363, "obviou": 363, "truth": 363, "env0": 363, "env_transformed_bi": 363, "stanc": 363, "transformeddistribut": 363, "base_dist": 363, "concat": 363, "mofidi": 363, "transformedenviron": 363, "moderet": 363, "computation": 363, "legitim": 363, "incom": 363, "amongst": 363, "has_cuda": 363, "wor": 363, "convention": 363, "markovian": 363, "constain": 363, "bar_": 363, "get_someth": 363, "aargh": 363, "foo_list": 363, "parallen": 363, "particularili": 363, "evolv": 363, "steadi": 363, "approx": 363, "_extra_st": 363, "observation_ssq": 363, "observation_sum": 363, "dispach": 363, "absor": 363, "4397": 363}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "OneHotDiscreteTensorSpec"], [33, 0, 1, "", "PairwiseDataset"], [34, 0, 1, "", "PrioritizedReplayBuffer"], [35, 0, 1, "", "PromptData"], [36, 0, 1, "", "PromptTensorDictTokenizer"], [37, 0, 1, "", "ReplayBuffer"], [38, 0, 1, "", "RewardData"], [39, 0, 1, "", "RolloutFromModel"], [40, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [41, 0, 1, "", "TensorDictReplayBuffer"], [42, 0, 1, "", "TensorDictTokenizer"], [43, 0, 1, "", "TensorSpec"], [44, 0, 1, "", "TokenizedDatasetLoader"], [45, 0, 1, "", "UnboundedContinuousTensorSpec"], [46, 0, 1, "", "UnboundedDiscreteTensorSpec"], [47, 0, 1, "", "check_no_exclusive_keys"], [48, 0, 1, "", "consolidate_spec"], [49, 0, 1, "", "contains_lazy_spec"], [50, 0, 1, "", "create_infinite_iterator"], [60, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "flatten"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "reshape"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "unflatten"], [23, 1, 1, "", "view"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[33, 3, 1, "", "batch_size"], [33, 3, 1, "", "device"], [33, 1, 1, "", "from_dataset"], [33, 1, 1, "", "from_tensordict"], [33, 1, 1, "", "get"], [33, 1, 1, "", "load_memmap"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "memmap"], [33, 1, 1, "", "memmap_"], [33, 1, 1, "", "memmap_like"], [33, 3, 1, "", "names"], [33, 1, 1, "", "set"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to_tensordict"], [33, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "dumps"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "loads"], [34, 1, 1, "", "sample"], [34, 3, 1, "", "sampler"], [34, 1, 1, "", "set_sampler"], [34, 1, 1, "", "set_storage"], [34, 1, 1, "", "set_writer"], [34, 3, 1, "", "storage"], [34, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[35, 3, 1, "", "batch_size"], [35, 3, 1, "", "device"], [35, 1, 1, "", "from_dataset"], [35, 1, 1, "", "from_tensordict"], [35, 1, 1, "", "get"], [35, 1, 1, "", "load_memmap"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "memmap"], [35, 1, 1, "", "memmap_"], [35, 1, 1, "", "memmap_like"], [35, 3, 1, "", "names"], [35, 1, 1, "", "set"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to_tensordict"], [35, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 3, 1, "", "sampler"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"], [37, 3, 1, "", "storage"], [37, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_memmap"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[39, 1, 1, "", "create_rollout_td"], [39, 1, 1, "", "generate"], [39, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 3, 1, "", "sampler"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"], [40, 3, 1, "", "storage"], [40, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[44, 1, 1, "", "dataset_to_tensordict"], [44, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "AtariDQNExperienceReplay"], [52, 0, 1, "", "BaseDatasetExperienceReplay"], [53, 0, 1, "", "D4RLExperienceReplay"], [54, 0, 1, "", "GenDGRLExperienceReplay"], [55, 0, 1, "", "MinariExperienceReplay"], [56, 0, 1, "", "OpenMLExperienceReplay"], [57, 0, 1, "", "OpenXExperienceReplay"], [58, 0, 1, "", "RobosetExperienceReplay"], [59, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 3, 1, "", "data_path"], [51, 3, 1, "", "data_path_root"], [51, 1, 1, "", "delete"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "preprocess"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 3, 1, "", "data_path"], [52, 3, 1, "", "data_path_root"], [52, 1, 1, "", "delete"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "preprocess"], [52, 1, 1, "", "sample"], [52, 3, 1, "", "sampler"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 3, 1, "", "storage"], [52, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 3, 1, "", "data_path"], [53, 3, 1, "", "data_path_root"], [53, 1, 1, "", "delete"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "preprocess"], [53, 1, 1, "", "sample"], [53, 3, 1, "", "sampler"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 3, 1, "", "storage"], [53, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[61, 0, 1, "", "ImmutableDatasetWriter"], [62, 0, 1, "", "LazyMemmapStorage"], [63, 0, 1, "", "LazyTensorStorage"], [64, 0, 1, "", "ListStorage"], [65, 0, 1, "", "PrioritizedSampler"], [66, 0, 1, "", "PrioritizedSliceSampler"], [67, 0, 1, "", "RandomSampler"], [68, 0, 1, "", "ReplayBufferEnsemble"], [69, 0, 1, "", "RoundRobinWriter"], [70, 0, 1, "", "Sampler"], [71, 0, 1, "", "SamplerEnsemble"], [72, 0, 1, "", "SamplerWithoutReplacement"], [73, 0, 1, "", "SliceSampler"], [74, 0, 1, "", "SliceSamplerWithoutReplacement"], [75, 0, 1, "", "Storage"], [76, 0, 1, "", "StorageEnsemble"], [77, 0, 1, "", "TensorDictMaxValueWriter"], [78, 0, 1, "", "TensorDictRoundRobinWriter"], [79, 0, 1, "", "TensorStorage"], [80, 0, 1, "", "Writer"], [81, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[61, 1, 1, "", "add"], [61, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[66, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[69, 1, 1, "", "add"], [69, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[79, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.envs": [[82, 2, 1, "", "BraxEnv"], [83, 2, 1, "", "BraxWrapper"], [84, 2, 1, "", "DMControlEnv"], [85, 2, 1, "", "DMControlWrapper"], [86, 0, 1, "", "EnvBase"], [87, 0, 1, "", "EnvCreator"], [88, 0, 1, "", "EnvMetaData"], [89, 2, 1, "", "GymEnv"], [90, 0, 1, "", "GymLikeEnv"], [91, 2, 1, "", "GymWrapper"], [92, 2, 1, "", "HabitatEnv"], [93, 2, 1, "", "IsaacGymEnv"], [94, 2, 1, "", "IsaacGymWrapper"], [95, 2, 1, "", "JumanjiEnv"], [96, 2, 1, "", "JumanjiWrapper"], [97, 2, 1, "", "MOGymEnv"], [98, 2, 1, "", "MOGymWrapper"], [99, 2, 1, "", "MarlGroupMapType"], [100, 2, 1, "", "ModelBasedEnvBase"], [101, 2, 1, "", "MultiThreadedEnv"], [102, 2, 1, "", "MultiThreadedEnvWrapper"], [103, 2, 1, "", "OpenMLEnv"], [104, 0, 1, "", "ParallelEnv"], [105, 2, 1, "", "PettingZooEnv"], [106, 2, 1, "", "PettingZooWrapper"], [107, 2, 1, "", "RoboHiveEnv"], [108, 2, 1, "", "SMACv2Env"], [109, 2, 1, "", "SMACv2Wrapper"], [110, 0, 1, "", "SerialEnv"], [111, 2, 1, "", "VmasEnv"], [112, 2, 1, "", "VmasWrapper"], [113, 2, 1, "", "check_marl_grouping"], [114, 2, 1, "", "gym_backend"], [100, 1, 1, "", "rand_step"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "rollout"], [116, 2, 1, "", "set_gym_backend"], [100, 1, 1, "", "set_seed"], [100, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[86, 3, 1, "", "action_key"], [86, 3, 1, "", "action_keys"], [86, 3, 1, "", "action_spec"], [86, 1, 1, "", "add_module"], [86, 1, 1, "", "add_truncated_keys"], [86, 1, 1, "", "append_transform"], [86, 1, 1, "", "apply"], [86, 3, 1, "", "batch_locked"], [86, 3, 1, "", "batch_size"], [86, 1, 1, "", "bfloat16"], [86, 1, 1, "", "buffers"], [86, 1, 1, "", "children"], [86, 1, 1, "", "compile"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 3, 1, "", "done_key"], [86, 3, 1, "", "done_keys"], [86, 3, 1, "", "done_keys_groups"], [86, 3, 1, "", "done_spec"], [86, 1, 1, "", "double"], [86, 1, 1, "", "empty_cache"], [86, 1, 1, "", "eval"], [86, 1, 1, "", "extra_repr"], [86, 1, 1, "", "fake_tensordict"], [86, 1, 1, "", "float"], [86, 1, 1, "", "forward"], [86, 3, 1, "", "full_action_spec"], [86, 3, 1, "", "full_done_spec"], [86, 3, 1, "", "full_reward_spec"], [86, 3, 1, "", "full_state_spec"], [86, 1, 1, "", "get_buffer"], [86, 1, 1, "", "get_extra_state"], [86, 1, 1, "", "get_parameter"], [86, 1, 1, "", "get_submodule"], [86, 1, 1, "", "half"], [86, 3, 1, "", "input_spec"], [86, 1, 1, "", "ipu"], [86, 1, 1, "", "load_state_dict"], [86, 1, 1, "", "maybe_reset"], [86, 1, 1, "", "modules"], [86, 1, 1, "", "named_buffers"], [86, 1, 1, "", "named_children"], [86, 1, 1, "", "named_modules"], [86, 1, 1, "", "named_parameters"], [86, 3, 1, "", "observation_spec"], [86, 3, 1, "", "output_spec"], [86, 1, 1, "", "parameters"], [86, 1, 1, "", "rand_action"], [86, 1, 1, "id0", "rand_step"], [86, 1, 1, "", "register_backward_hook"], [86, 1, 1, "", "register_buffer"], [86, 1, 1, "", "register_forward_hook"], [86, 1, 1, "", "register_forward_pre_hook"], [86, 1, 1, "", "register_full_backward_hook"], [86, 1, 1, "", "register_full_backward_pre_hook"], [86, 1, 1, "", "register_gym"], [86, 1, 1, "", "register_load_state_dict_post_hook"], [86, 1, 1, "", "register_module"], [86, 1, 1, "", "register_parameter"], [86, 1, 1, "", "register_state_dict_pre_hook"], [86, 1, 1, "", "requires_grad_"], [86, 1, 1, "id1", "reset"], [86, 3, 1, "", "reset_keys"], [86, 3, 1, "", "reward_key"], [86, 3, 1, "", "reward_keys"], [86, 3, 1, "", "reward_spec"], [86, 1, 1, "id2", "rollout"], [86, 1, 1, "", "set_extra_state"], [86, 1, 1, "id3", "set_seed"], [86, 3, 1, "", "shape"], [86, 1, 1, "", "share_memory"], [86, 3, 1, "", "specs"], [86, 1, 1, "", "state_dict"], [86, 3, 1, "", "state_spec"], [86, 1, 1, "id4", "step"], [86, 1, 1, "", "step_and_maybe_reset"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_empty"], [86, 1, 1, "", "train"], [86, 1, 1, "", "type"], [86, 1, 1, "", "xpu"], [86, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[90, 3, 1, "", "action_key"], [90, 3, 1, "", "action_keys"], [90, 3, 1, "", "action_spec"], [90, 1, 1, "", "add_module"], [90, 1, 1, "", "add_truncated_keys"], [90, 1, 1, "", "append_transform"], [90, 1, 1, "", "apply"], [90, 1, 1, "", "auto_register_info_dict"], [90, 3, 1, "", "batch_locked"], [90, 3, 1, "", "batch_size"], [90, 1, 1, "", "bfloat16"], [90, 1, 1, "", "buffers"], [90, 1, 1, "", "children"], [90, 1, 1, "", "close"], [90, 1, 1, "", "compile"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 3, 1, "", "done_key"], [90, 3, 1, "", "done_keys"], [90, 3, 1, "", "done_keys_groups"], [90, 3, 1, "", "done_spec"], [90, 1, 1, "", "double"], [90, 1, 1, "", "empty_cache"], [90, 1, 1, "", "eval"], [90, 1, 1, "", "extra_repr"], [90, 1, 1, "", "fake_tensordict"], [90, 1, 1, "", "float"], [90, 1, 1, "", "forward"], [90, 3, 1, "", "full_action_spec"], [90, 3, 1, "", "full_done_spec"], [90, 3, 1, "", "full_reward_spec"], [90, 3, 1, "", "full_state_spec"], [90, 1, 1, "", "get_buffer"], [90, 1, 1, "", "get_extra_state"], [90, 1, 1, "", "get_parameter"], [90, 1, 1, "", "get_submodule"], [90, 1, 1, "", "half"], [90, 3, 1, "", "input_spec"], [90, 1, 1, "", "ipu"], [90, 1, 1, "", "load_state_dict"], [90, 1, 1, "", "maybe_reset"], [90, 1, 1, "", "modules"], [90, 1, 1, "", "named_buffers"], [90, 1, 1, "", "named_children"], [90, 1, 1, "", "named_modules"], [90, 1, 1, "", "named_parameters"], [90, 3, 1, "", "observation_spec"], [90, 3, 1, "", "output_spec"], [90, 1, 1, "", "parameters"], [90, 1, 1, "", "rand_action"], [90, 1, 1, "", "rand_step"], [90, 1, 1, "", "read_action"], [90, 1, 1, "", "read_done"], [90, 1, 1, "", "read_obs"], [90, 1, 1, "", "read_reward"], [90, 1, 1, "", "register_backward_hook"], [90, 1, 1, "", "register_buffer"], [90, 1, 1, "", "register_forward_hook"], [90, 1, 1, "", "register_forward_pre_hook"], [90, 1, 1, "", "register_full_backward_hook"], [90, 1, 1, "", "register_full_backward_pre_hook"], [90, 1, 1, "", "register_gym"], [90, 1, 1, "", "register_load_state_dict_post_hook"], [90, 1, 1, "", "register_module"], [90, 1, 1, "", "register_parameter"], [90, 1, 1, "", "register_state_dict_pre_hook"], [90, 1, 1, "", "requires_grad_"], [90, 1, 1, "", "reset"], [90, 3, 1, "", "reset_keys"], [90, 3, 1, "", "reward_key"], [90, 3, 1, "", "reward_keys"], [90, 3, 1, "", "reward_spec"], [90, 1, 1, "", "rollout"], [90, 1, 1, "", "set_extra_state"], [90, 1, 1, "", "set_info_dict_reader"], [90, 1, 1, "", "set_seed"], [90, 3, 1, "", "shape"], [90, 1, 1, "", "share_memory"], [90, 3, 1, "", "specs"], [90, 1, 1, "", "state_dict"], [90, 3, 1, "", "state_spec"], [90, 1, 1, "", "step"], [90, 1, 1, "", "step_and_maybe_reset"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_empty"], [90, 1, 1, "", "train"], [90, 1, 1, "", "type"], [90, 1, 1, "", "xpu"], [90, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[104, 3, 1, "", "action_key"], [104, 3, 1, "", "action_keys"], [104, 3, 1, "", "action_spec"], [104, 1, 1, "", "add_module"], [104, 1, 1, "", "add_truncated_keys"], [104, 1, 1, "", "append_transform"], [104, 1, 1, "", "apply"], [104, 3, 1, "", "batch_locked"], [104, 3, 1, "", "batch_size"], [104, 1, 1, "", "bfloat16"], [104, 1, 1, "", "buffers"], [104, 1, 1, "", "children"], [104, 1, 1, "", "compile"], [104, 1, 1, "", "cpu"], [104, 1, 1, "", "cuda"], [104, 3, 1, "", "done_key"], [104, 3, 1, "", "done_keys"], [104, 3, 1, "", "done_keys_groups"], [104, 3, 1, "", "done_spec"], [104, 1, 1, "", "double"], [104, 1, 1, "", "empty_cache"], [104, 1, 1, "", "eval"], [104, 1, 1, "", "extra_repr"], [104, 1, 1, "", "fake_tensordict"], [104, 1, 1, "", "float"], [104, 1, 1, "", "forward"], [104, 3, 1, "", "full_action_spec"], [104, 3, 1, "", "full_done_spec"], [104, 3, 1, "", "full_reward_spec"], [104, 3, 1, "", "full_state_spec"], [104, 1, 1, "", "get_buffer"], [104, 1, 1, "", "get_extra_state"], [104, 1, 1, "", "get_parameter"], [104, 1, 1, "", "get_submodule"], [104, 1, 1, "", "half"], [104, 3, 1, "", "input_spec"], [104, 1, 1, "", "ipu"], [104, 1, 1, "", "load_state_dict"], [104, 1, 1, "", "maybe_reset"], [104, 1, 1, "", "modules"], [104, 1, 1, "", "named_buffers"], [104, 1, 1, "", "named_children"], [104, 1, 1, "", "named_modules"], [104, 1, 1, "", "named_parameters"], [104, 3, 1, "", "observation_spec"], [104, 3, 1, "", "output_spec"], [104, 1, 1, "", "parameters"], [104, 1, 1, "", "rand_action"], [104, 1, 1, "", "rand_step"], [104, 1, 1, "", "register_backward_hook"], [104, 1, 1, "", "register_buffer"], [104, 1, 1, "", "register_forward_hook"], [104, 1, 1, "", "register_forward_pre_hook"], [104, 1, 1, "", "register_full_backward_hook"], [104, 1, 1, "", "register_full_backward_pre_hook"], [104, 1, 1, "", "register_gym"], [104, 1, 1, "", "register_load_state_dict_post_hook"], [104, 1, 1, "", "register_module"], [104, 1, 1, "", "register_parameter"], [104, 1, 1, "", "register_state_dict_pre_hook"], [104, 1, 1, "", "requires_grad_"], [104, 1, 1, "", "reset"], [104, 3, 1, "", "reset_keys"], [104, 3, 1, "", "reward_key"], [104, 3, 1, "", "reward_keys"], [104, 3, 1, "", "reward_spec"], [104, 1, 1, "", "rollout"], [104, 1, 1, "", "set_extra_state"], [104, 1, 1, "", "set_seed"], [104, 3, 1, "", "shape"], [104, 1, 1, "", "share_memory"], [104, 3, 1, "", "specs"], [104, 1, 1, "", "state_dict"], [104, 3, 1, "", "state_spec"], [104, 1, 1, "", "step"], [104, 1, 1, "", "step_and_maybe_reset"], [104, 1, 1, "", "to"], [104, 1, 1, "", "to_empty"], [104, 1, 1, "", "train"], [104, 1, 1, "", "type"], [104, 1, 1, "", "update_kwargs"], [104, 1, 1, "", "xpu"], [104, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[110, 3, 1, "", "action_key"], [110, 3, 1, "", "action_keys"], [110, 3, 1, "", "action_spec"], [110, 1, 1, "", "add_module"], [110, 1, 1, "", "add_truncated_keys"], [110, 1, 1, "", "append_transform"], [110, 1, 1, "", "apply"], [110, 3, 1, "", "batch_locked"], [110, 3, 1, "", "batch_size"], [110, 1, 1, "", "bfloat16"], [110, 1, 1, "", "buffers"], [110, 1, 1, "", "children"], [110, 1, 1, "", "compile"], [110, 1, 1, "", "cpu"], [110, 1, 1, "", "cuda"], [110, 3, 1, "", "done_key"], [110, 3, 1, "", "done_keys"], [110, 3, 1, "", "done_keys_groups"], [110, 3, 1, "", "done_spec"], [110, 1, 1, "", "double"], [110, 1, 1, "", "empty_cache"], [110, 1, 1, "", "eval"], [110, 1, 1, "", "extra_repr"], [110, 1, 1, "", "fake_tensordict"], [110, 1, 1, "", "float"], [110, 1, 1, "", "forward"], [110, 3, 1, "", "full_action_spec"], [110, 3, 1, "", "full_done_spec"], [110, 3, 1, "", "full_reward_spec"], [110, 3, 1, "", "full_state_spec"], [110, 1, 1, "", "get_buffer"], [110, 1, 1, "", "get_extra_state"], [110, 1, 1, "", "get_parameter"], [110, 1, 1, "", "get_submodule"], [110, 1, 1, "", "half"], [110, 3, 1, "", "input_spec"], [110, 1, 1, "", "ipu"], [110, 1, 1, "", "load_state_dict"], [110, 1, 1, "", "maybe_reset"], [110, 1, 1, "", "modules"], [110, 1, 1, "", "named_buffers"], [110, 1, 1, "", "named_children"], [110, 1, 1, "", "named_modules"], [110, 1, 1, "", "named_parameters"], [110, 3, 1, "", "observation_spec"], [110, 3, 1, "", "output_spec"], [110, 1, 1, "", "parameters"], [110, 1, 1, "", "rand_action"], [110, 1, 1, "", "rand_step"], [110, 1, 1, "", "register_backward_hook"], [110, 1, 1, "", "register_buffer"], [110, 1, 1, "", "register_forward_hook"], [110, 1, 1, "", "register_forward_pre_hook"], [110, 1, 1, "", "register_full_backward_hook"], [110, 1, 1, "", "register_full_backward_pre_hook"], [110, 1, 1, "", "register_gym"], [110, 1, 1, "", "register_load_state_dict_post_hook"], [110, 1, 1, "", "register_module"], [110, 1, 1, "", "register_parameter"], [110, 1, 1, "", "register_state_dict_pre_hook"], [110, 1, 1, "", "requires_grad_"], [110, 1, 1, "", "reset"], [110, 3, 1, "", "reset_keys"], [110, 3, 1, "", "reward_key"], [110, 3, 1, "", "reward_keys"], [110, 3, 1, "", "reward_spec"], [110, 1, 1, "", "rollout"], [110, 1, 1, "", "set_extra_state"], [110, 1, 1, "", "set_seed"], [110, 3, 1, "", "shape"], [110, 1, 1, "", "share_memory"], [110, 3, 1, "", "specs"], [110, 1, 1, "", "state_dict"], [110, 3, 1, "", "state_spec"], [110, 1, 1, "", "step"], [110, 1, 1, "", "step_and_maybe_reset"], [110, 1, 1, "", "to"], [110, 1, 1, "", "to_empty"], [110, 1, 1, "", "train"], [110, 1, 1, "", "type"], [110, 1, 1, "", "update_kwargs"], [110, 1, 1, "", "xpu"], [110, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[115, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[117, 0, 1, "", "ActionMask"], [118, 0, 1, "", "BatchSizeTransform"], [119, 0, 1, "", "BinarizeReward"], [120, 0, 1, "", "BurnInTransform"], [121, 0, 1, "", "CatFrames"], [122, 0, 1, "", "CatTensors"], [123, 0, 1, "", "CenterCrop"], [124, 0, 1, "", "ClipTransform"], [125, 0, 1, "", "Compose"], [126, 0, 1, "", "DTypeCastTransform"], [127, 0, 1, "", "DeviceCastTransform"], [128, 0, 1, "", "DiscreteActionProjection"], [129, 0, 1, "", "DoubleToFloat"], [130, 0, 1, "", "EndOfLifeTransform"], [131, 0, 1, "", "ExcludeTransform"], [132, 0, 1, "", "FiniteTensorDictCheck"], [133, 0, 1, "", "FlattenObservation"], [134, 0, 1, "", "FrameSkipTransform"], [135, 0, 1, "", "GrayScale"], [136, 0, 1, "", "InitTracker"], [137, 0, 1, "", "KLRewardTransform"], [138, 0, 1, "", "NoopResetEnv"], [139, 0, 1, "", "ObservationNorm"], [140, 0, 1, "", "ObservationTransform"], [141, 0, 1, "", "PermuteTransform"], [142, 0, 1, "", "PinMemoryTransform"], [143, 0, 1, "", "R3MTransform"], [144, 0, 1, "", "RandomCropTensorDict"], [145, 0, 1, "", "RemoveEmptySpecs"], [146, 0, 1, "", "RenameTransform"], [147, 0, 1, "", "Resize"], [148, 0, 1, "", "Reward2GoTransform"], [149, 0, 1, "", "RewardClipping"], [150, 0, 1, "", "RewardScaling"], [151, 0, 1, "", "RewardSum"], [152, 0, 1, "", "SelectTransform"], [153, 0, 1, "", "SignTransform"], [154, 0, 1, "", "SqueezeTransform"], [155, 0, 1, "", "StepCounter"], [156, 0, 1, "", "TargetReturn"], [157, 0, 1, "", "TensorDictPrimer"], [158, 0, 1, "", "TimeMaxPool"], [159, 0, 1, "", "ToTensorImage"], [160, 0, 1, "", "Transform"], [161, 0, 1, "", "TransformedEnv"], [162, 0, 1, "", "UnsqueezeTransform"], [163, 0, 1, "", "VC1Transform"], [164, 0, 1, "", "VIPRewardTransform"], [165, 0, 1, "", "VIPTransform"], [166, 0, 1, "", "VecGymEnvTransform"], [167, 0, 1, "", "VecNorm"], [168, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "transform_env_batch_size"], [118, 1, 1, "", "transform_input_spec"], [118, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[119, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[120, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[124, 1, 1, "", "transform_observation_spec"], [124, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[125, 1, 1, "", "append"], [125, 1, 1, "", "forward"], [125, 1, 1, "", "insert"], [125, 1, 1, "", "to"], [125, 1, 1, "", "transform_env_batch_size"], [125, 1, 1, "", "transform_env_device"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"], [125, 1, 1, "", "transform_output_spec"], [125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_observation_spec"], [126, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "transform_done_spec"], [127, 1, 1, "", "transform_env_device"], [127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_observation_spec"], [127, 1, 1, "", "transform_output_spec"], [127, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[128, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "register_keys"], [130, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[132, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[134, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[139, 1, 1, "", "init_stats"], [139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[143, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[144, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "transform_input_spec"], [146, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[148, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "transform_input_spec"], [151, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[153, 1, 1, "", "transform_observation_spec"], [153, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_observation_spec"], [155, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_input_spec"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "to"], [157, 1, 1, "", "transform_input_spec"], [157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[159, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[160, 3, 1, "", "container"], [160, 1, 1, "", "forward"], [160, 3, 1, "", "parent"], [160, 1, 1, "", "to"], [160, 1, 1, "", "transform_done_spec"], [160, 1, 1, "", "transform_env_batch_size"], [160, 1, 1, "", "transform_env_device"], [160, 1, 1, "", "transform_input_spec"], [160, 1, 1, "", "transform_observation_spec"], [160, 1, 1, "", "transform_output_spec"], [160, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[161, 1, 1, "", "add_truncated_keys"], [161, 1, 1, "", "append_transform"], [161, 3, 1, "", "batch_locked"], [161, 3, 1, "", "batch_size"], [161, 1, 1, "", "empty_cache"], [161, 1, 1, "", "eval"], [161, 3, 1, "", "input_spec"], [161, 1, 1, "", "insert_transform"], [161, 1, 1, "", "load_state_dict"], [161, 3, 1, "", "output_spec"], [161, 1, 1, "", "set_missing_tolerance"], [161, 1, 1, "", "set_seed"], [161, 1, 1, "", "state_dict"], [161, 1, 1, "", "to"], [161, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"], [162, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "make_noload_model"], [163, 1, 1, "", "to"], [163, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[165, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[167, 1, 1, "", "build_td_for_shared_vecnorm"], [167, 1, 1, "", "forward"], [167, 1, 1, "", "get_extra_state"], [167, 1, 1, "", "set_extra_state"], [167, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.rb_transforms": [[169, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[169, 1, 1, "", "add_module"], [169, 1, 1, "", "apply"], [169, 1, 1, "", "bfloat16"], [169, 1, 1, "", "buffers"], [169, 1, 1, "", "children"], [169, 1, 1, "", "compile"], [169, 3, 1, "", "container"], [169, 1, 1, "", "cpu"], [169, 1, 1, "", "cuda"], [169, 1, 1, "", "double"], [169, 1, 1, "", "eval"], [169, 1, 1, "", "extra_repr"], [169, 1, 1, "", "float"], [169, 1, 1, "", "forward"], [169, 1, 1, "", "get_buffer"], [169, 1, 1, "", "get_extra_state"], [169, 1, 1, "", "get_parameter"], [169, 1, 1, "", "get_submodule"], [169, 1, 1, "", "half"], [169, 1, 1, "", "ipu"], [169, 1, 1, "", "load_state_dict"], [169, 1, 1, "", "modules"], [169, 3, 1, "", "n_steps"], [169, 1, 1, "", "named_buffers"], [169, 1, 1, "", "named_children"], [169, 1, 1, "", "named_modules"], [169, 1, 1, "", "named_parameters"], [169, 1, 1, "", "parameters"], [169, 3, 1, "", "parent"], [169, 1, 1, "", "register_backward_hook"], [169, 1, 1, "", "register_buffer"], [169, 1, 1, "", "register_forward_hook"], [169, 1, 1, "", "register_forward_pre_hook"], [169, 1, 1, "", "register_full_backward_hook"], [169, 1, 1, "", "register_full_backward_pre_hook"], [169, 1, 1, "", "register_load_state_dict_post_hook"], [169, 1, 1, "", "register_module"], [169, 1, 1, "", "register_parameter"], [169, 1, 1, "", "register_state_dict_pre_hook"], [169, 1, 1, "", "requires_grad_"], [169, 1, 1, "", "set_extra_state"], [169, 1, 1, "", "share_memory"], [169, 1, 1, "", "state_dict"], [169, 1, 1, "", "to"], [169, 1, 1, "", "to_empty"], [169, 1, 1, "", "train"], [169, 1, 1, "", "transform_done_spec"], [169, 1, 1, "", "transform_env_batch_size"], [169, 1, 1, "", "transform_env_device"], [169, 1, 1, "", "transform_input_spec"], [169, 1, 1, "", "transform_observation_spec"], [169, 1, 1, "", "transform_output_spec"], [169, 1, 1, "", "transform_reward_spec"], [169, 1, 1, "", "type"], [169, 1, 1, "", "xpu"], [169, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[170, 2, 1, "", "check_env_specs"], [171, 2, 1, "", "exploration_mode"], [172, 2, 1, "", "exploration_type"], [173, 2, 1, "", "get_available_libraries"], [174, 2, 1, "", "make_composite_from_td"], [175, 2, 1, "", "set_exploration_mode"], [176, 2, 1, "", "set_exploration_type"], [177, 2, 1, "", "step_mdp"], [178, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[179, 0, 1, "", "CEMPlanner"], [180, 0, 1, "", "Conv3dNet"], [181, 0, 1, "", "ConvNet"], [182, 0, 1, "", "DTActor"], [183, 0, 1, "", "DdpgCnnActor"], [184, 0, 1, "", "DdpgCnnQNet"], [185, 0, 1, "", "DdpgMlpActor"], [186, 0, 1, "", "DdpgMlpQNet"], [187, 0, 1, "", "DecisionTransformer"], [188, 0, 1, "", "Delta"], [189, 0, 1, "", "DistributionalDQNnet"], [190, 0, 1, "", "DistributionalQValueHook"], [191, 0, 1, "", "DreamerActor"], [192, 0, 1, "", "DuelingCnnDQNet"], [193, 0, 1, "", "GRU"], [194, 0, 1, "", "GRUCell"], [195, 0, 1, "", "GRUModule"], [196, 0, 1, "", "IndependentNormal"], [197, 0, 1, "", "LSTM"], [198, 0, 1, "", "LSTMCell"], [199, 0, 1, "", "LSTMModule"], [200, 0, 1, "", "LSTMNet"], [201, 0, 1, "", "MLP"], [202, 0, 1, "", "MPCPlannerBase"], [203, 0, 1, "", "MPPIPlanner"], [204, 0, 1, "", "MaskedCategorical"], [205, 0, 1, "", "MaskedOneHotCategorical"], [206, 0, 1, "", "MultiAgentConvNet"], [207, 0, 1, "", "MultiAgentMLP"], [208, 0, 1, "", "NoisyLazyLinear"], [209, 0, 1, "", "NoisyLinear"], [210, 0, 1, "", "NormalParamWrapper"], [211, 0, 1, "", "ObsDecoder"], [212, 0, 1, "", "ObsEncoder"], [213, 0, 1, "", "OneHotCategorical"], [214, 0, 1, "", "OnlineDTActor"], [215, 0, 1, "", "QMixer"], [216, 0, 1, "", "QValueHook"], [217, 0, 1, "", "RSSMPosterior"], [218, 0, 1, "", "RSSMPrior"], [219, 0, 1, "", "Squeeze2dLayer"], [220, 0, 1, "", "SqueezeLayer"], [221, 0, 1, "", "TanhDelta"], [222, 0, 1, "", "TanhNormal"], [223, 0, 1, "", "TruncatedNormal"], [224, 0, 1, "", "VDNMixer"], [225, 0, 1, "", "VmapModule"], [226, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[179, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[180, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[181, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[182, 1, 1, "", "default_config"], [182, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[183, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[184, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[185, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[186, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[187, 0, 1, "", "DTConfig"], [187, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[188, 1, 1, "", "log_prob"], [188, 3, 1, "", "mean"], [188, 3, 1, "", "mode"], [188, 1, 1, "", "rsample"], [188, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[189, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[191, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[192, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[193, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[194, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[195, 1, 1, "", "forward"], [195, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[196, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[197, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[198, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[199, 1, 1, "", "forward"], [199, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[200, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[201, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[202, 1, 1, "", "forward"], [202, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[203, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[204, 1, 1, "", "log_prob"], [204, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[205, 1, 1, "", "log_prob"], [205, 1, 1, "", "rsample"], [205, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[208, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[210, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[211, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[212, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[213, 1, 1, "", "log_prob"], [213, 3, 1, "", "mode"], [213, 1, 1, "", "rsample"], [213, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[214, 1, 1, "", "default_config"], [214, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[215, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[217, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[218, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[220, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[221, 3, 1, "", "mean"], [221, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[222, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[223, 1, 1, "", "log_prob"], [223, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[224, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[225, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[227, 0, 1, "", "Actor"], [228, 0, 1, "", "ActorCriticOperator"], [229, 0, 1, "", "ActorCriticWrapper"], [230, 0, 1, "", "ActorValueOperator"], [231, 0, 1, "", "AdditiveGaussianWrapper"], [232, 0, 1, "", "DecisionTransformerInferenceWrapper"], [233, 0, 1, "", "DistributionalQValueActor"], [234, 0, 1, "", "DistributionalQValueModule"], [235, 0, 1, "", "EGreedyModule"], [236, 0, 1, "", "EGreedyWrapper"], [237, 0, 1, "", "LMHeadActorValueOperator"], [238, 0, 1, "", "MultiStepActorWrapper"], [239, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [240, 0, 1, "", "ProbabilisticActor"], [241, 0, 1, "", "QValueActor"], [242, 0, 1, "", "QValueModule"], [243, 0, 1, "", "SafeModule"], [244, 0, 1, "", "SafeProbabilisticModule"], [245, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [246, 0, 1, "", "SafeSequential"], [247, 0, 1, "", "TanhModule"], [248, 0, 1, "", "ValueOperator"], [249, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[228, 1, 1, "", "get_critic_operator"], [228, 1, 1, "", "get_policy_head"], [228, 1, 1, "", "get_value_head"], [228, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[229, 1, 1, "", "get_policy_head"], [229, 1, 1, "", "get_policy_operator"], [229, 1, 1, "", "get_value_head"], [229, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[230, 1, 1, "", "get_policy_head"], [230, 1, 1, "", "get_policy_operator"], [230, 1, 1, "", "get_value_head"], [230, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "mask_context"], [232, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[234, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[238, 1, 1, "", "forward"], [238, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[242, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[243, 1, 1, "", "random"], [243, 1, 1, "", "random_sample"], [243, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[244, 1, 1, "", "random"], [244, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[247, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[249, 1, 1, "", "get_reward_operator"], [249, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[250, 0, 1, "", "biased_softplus"], [251, 0, 1, "", "inv_softplus"], [252, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[250, 1, 1, "", "forward"]], "torchrl.objectives": [[253, 0, 1, "", "A2CLoss"], [254, 0, 1, "", "CQLLoss"], [255, 0, 1, "", "ClipPPOLoss"], [256, 0, 1, "", "DDPGLoss"], [257, 0, 1, "", "DQNLoss"], [258, 0, 1, "", "DTLoss"], [259, 0, 1, "", "DiscreteCQLLoss"], [260, 0, 1, "", "DiscreteIQLLoss"], [261, 0, 1, "", "DiscreteSACLoss"], [262, 0, 1, "", "DistributionalDQNLoss"], [263, 0, 1, "", "DreamerActorLoss"], [264, 0, 1, "", "DreamerModelLoss"], [265, 0, 1, "", "DreamerValueLoss"], [266, 0, 1, "", "HardUpdate"], [267, 0, 1, "", "IQLLoss"], [268, 0, 1, "", "KLPENPPOLoss"], [269, 0, 1, "", "LossModule"], [270, 0, 1, "", "OnlineDTLoss"], [271, 0, 1, "", "PPOLoss"], [272, 0, 1, "", "REDQLoss"], [273, 0, 1, "", "ReinforceLoss"], [274, 0, 1, "", "SACLoss"], [275, 0, 1, "", "SoftUpdate"], [276, 0, 1, "", "TD3Loss"], [277, 0, 1, "", "ValueEstimators"], [278, 0, 1, "", "default_value_kwargs"], [279, 0, 1, "", "distance_loss"], [280, 0, 1, "", "hold_out_net"], [281, 0, 1, "", "hold_out_params"], [283, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[255, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[258, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[260, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[264, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[265, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "loss_value_diff"], [267, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[268, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[269, 1, 1, "", "convert_to_functional"], [269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"], [269, 1, 1, "", "named_parameters"], [269, 1, 1, "", "parameters"], [269, 1, 1, "", "set_keys"], [269, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[270, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "load_state_dict"], [274, 1, 1, "", "make_value_estimator"], [274, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[282, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[284, 0, 1, "", "GAE"], [285, 0, 1, "", "TD0Estimator"], [286, 0, 1, "", "TD1Estimator"], [287, 0, 1, "", "TDLambdaEstimator"], [288, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "set_keys"], [288, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[289, 0, 1, "", "generalized_advantage_estimate"], [290, 0, 1, "", "reward2go"], [291, 0, 1, "", "td0_advantage_estimate"], [292, 0, 1, "", "td0_return_estimate"], [293, 0, 1, "", "td1_advantage_estimate"], [294, 0, 1, "", "td1_return_estimate"], [295, 0, 1, "", "td_lambda_advantage_estimate"], [296, 0, 1, "", "td_lambda_return_estimate"], [297, 0, 1, "", "vec_generalized_advantage_estimate"], [298, 0, 1, "", "vec_td1_advantage_estimate"], [299, 0, 1, "", "vec_td1_return_estimate"], [300, 0, 1, "", "vec_td_lambda_advantage_estimate"], [301, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[302, 2, 1, "", "TensorDictRecorder"], [303, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[304, 2, 1, "", "Logger"], [306, 2, 1, "", "generate_exp_name"], [307, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[305, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[308, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[309, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[310, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[311, 0, 1, "", "BatchSubSampler"], [312, 0, 1, "", "ClearCudaCache"], [313, 0, 1, "", "CountFramesLog"], [314, 0, 1, "", "LogReward"], [315, 0, 1, "", "OptimizerHook"], [316, 0, 1, "", "Recorder"], [317, 0, 1, "", "ReplayBufferTrainer"], [318, 0, 1, "", "RewardNormalizer"], [319, 0, 1, "", "SelectKeys"], [320, 0, 1, "", "Trainer"], [321, 0, 1, "", "TrainerHookBase"], [322, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[311, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[312, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[313, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[314, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[315, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[316, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[317, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[318, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[319, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[321, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[322, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[323, 2, 1, "", "correct_for_frame_skip"], [324, 2, 1, "", "get_stats_random_rollout"], [325, 2, 1, "", "make_collector_offpolicy"], [326, 2, 1, "", "make_collector_onpolicy"], [327, 2, 1, "", "make_dqn_loss"], [328, 2, 1, "", "make_redq_loss"], [329, 2, 1, "", "make_redq_model"], [330, 2, 1, "", "make_replay_buffer"], [331, 2, 1, "", "make_target_updater"], [332, 2, 1, "", "make_trainer"], [333, 2, 1, "", "parallel_env_constructor"], [334, 2, 1, "", "sync_async_collector"], [335, 2, 1, "", "sync_sync_collector"], [336, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 340, 341, 342, 343, 345, 346, 347, 350, 357, 358, 362, 363], "instal": [0, 6, 7, 362], "get": [0, 349, 350, 351, 352, 353, 354], "start": [0, 349, 350, 351, 352, 353, 354], "tutori": [0, 347, 357], "basic": [0, 360], "intermedi": [0, 8], "advanc": 0, "refer": [0, 338], "knowledg": [0, 339], "base": [0, 2, 7, 339], "indic": 0, "tabl": 0, "collector": [1, 345, 346, 347, 348, 352, 354, 357, 362], "packag": [1, 2, 3, 340, 341, 342, 343], "batch": [1, 345, 358, 360], "size": [1, 345, 360], "replai": [1, 2, 345, 346, 347, 348, 352, 354, 357, 360, 362], "buffer": [1, 2, 345, 346, 347, 348, 352, 354, 357, 360, 362], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 345, 346, 347, 352, 354, 357, 362], "distribut": [1, 340], "helper": [1, 3], "function": [1, 4, 341, 346, 347, 351, 357, 362], "compos": [2, 125], "support": 2, "type": 2, "choos": 2, "storag": [2, 75, 345, 352, 360], "sampl": [2, 360], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 346, 360], "trajectori": [2, 360], "checkpoint": [2, 342], "episod": [2, 4], "format": 2, "ted": [2, 349], "The": [2, 345], "rational": 2, "behind": 2, "structur": [2, 360], "dimension": [2, 4], "tensordict": [2, 340, 360, 362], "special": [2, 350, 362], "case": 2, "footnot": 2, "multi": [2, 3, 340, 341, 356, 357], "agent": [2, 3, 4, 340, 341, 357], "present": 2, "memori": 2, "polici": [2, 4, 345, 347, 348, 350, 354, 356, 357, 358], "rnn": 2, "transform": [2, 3, 160, 345, 347, 349, 357, 358, 360, 362, 363], "step": [2, 345, 347, 349, 352, 357, 360, 363], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 43], "reinforc": [2, 341, 347, 357], "learn": [2, 4, 347, 357], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 340, 341, 342], "env": [3, 358, 362, 363], "vector": [3, 362], "environ": [3, 4, 6, 7, 345, 346, 347, 348, 349, 354, 356, 357, 358, 362, 363], "clone": [3, 7], "mask": 3, "action": [3, 4, 348, 358], "record": [3, 316, 342, 345, 353], "domain": [3, 340], "specif": [3, 340, 356], "librari": [3, 362], "thing": [4, 345, 358], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 349, 351, 362], "gener": [4, 340], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 345, 354, 358], "algorithm": [4, 340], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 345, 346, 351, 354], "return": [4, 341], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 362], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 356], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 345, 346, 347], "standard": 4, "explor": [4, 340, 345, 346, 350], "valu": [4, 340, 341, 345, 347, 348, 350], "loss": [4, 345, 346, 347, 348, 354, 357], "earli": 4, "train": [4, 8, 341, 345, 347, 348, 351, 354, 357, 358], "roughli": 4, "uniformli": 4, "random": [4, 357], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 346], "increas": 4, "an": [4, 347, 348, 349, 358], "dynam": [4, 360], "can": 4, "low": 4, "forward": [4, 345], "model": [4, 340, 345, 346, 348, 351, 359, 362], "also": 4, "us": [4, 6, 9, 348, 359, 360, 362], "offlin": 4, "observ": [4, 345], "space": 4, "effect": [4, 358], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 363], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 345], "render": [7, 354, 357, 363], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 345], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 358], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "onehotdiscretetensorspec": 32, "pairwisedataset": 33, "prioritizedreplaybuff": 34, "promptdata": 35, "prompttensordicttoken": 36, "replaybuff": 37, "rewarddata": 38, "rolloutfrommodel": 39, "tensordictprioritizedreplaybuff": 40, "tensordictreplaybuff": 41, "tensordicttoken": 42, "tokenizeddatasetload": 44, "unboundedcontinuoustensorspec": 45, "unboundeddiscretetensorspec": 46, "check_no_exclusive_kei": 47, "consolidate_spec": 48, "contains_lazy_spec": 49, "create_infinite_iter": 50, "ataridqnexperiencereplai": 51, "basedatasetexperiencereplai": 52, "d4rlexperiencereplai": 53, "gendgrlexperiencereplai": 54, "minariexperiencereplai": 55, "openmlexperiencereplai": 56, "openxexperiencereplai": 57, "robosetexperiencereplai": 58, "vd4rlexperiencereplai": 59, "get_dataload": 60, "immutabledatasetwrit": 61, "lazymemmapstorag": 62, "lazytensorstorag": 63, "liststorag": 64, "prioritizedsampl": 65, "prioritizedslicesampl": 66, "randomsampl": 67, "replaybufferensembl": 68, "roundrobinwrit": 69, "sampler": 70, "samplerensembl": 71, "samplerwithoutreplac": 72, "slicesampl": 73, "slicesamplerwithoutreplac": 74, "storageensembl": 76, "tensordictmaxvaluewrit": 77, "tensordictroundrobinwrit": 78, "tensorstorag": 79, "writer": 80, "writerensembl": 81, "braxenv": 82, "braxwrapp": 83, "dmcontrolenv": 84, "dmcontrolwrapp": 85, "envbas": [86, 358], "envcreat": 87, "envmetadata": 88, "gymenv": 89, "gymlikeenv": 90, "gymwrapp": 91, "habitatenv": 92, "isaacgymenv": 93, "isaacgymwrapp": 94, "jumanjienv": 95, "jumanjiwrapp": 96, "mogymenv": 97, "mogymwrapp": 98, "marlgroupmaptyp": 99, "modelbasedenvbas": 100, "multithreadedenv": 101, "multithreadedenvwrapp": 102, "openmlenv": 103, "parallelenv": 104, "pettingzooenv": 105, "pettingzoowrapp": 106, "robohiveenv": 107, "smacv2env": 108, "smacv2wrapp": 109, "serialenv": 110, "vmasenv": 111, "vmaswrapp": 112, "check_marl_group": 113, "gym_backend": 114, "dreamerenv": 115, "set_gym_backend": 116, "actionmask": 117, "batchsizetransform": 118, "binarizereward": 119, "burnintransform": 120, "catfram": [121, 360], "cattensor": 122, "centercrop": 123, "cliptransform": 124, "dtypecasttransform": 126, "devicecasttransform": 127, "discreteactionproject": 128, "doubletofloat": 129, "endoflifetransform": 130, "excludetransform": 131, "finitetensordictcheck": 132, "flattenobserv": 133, "frameskiptransform": 134, "grayscal": 135, "inittrack": 136, "klrewardtransform": 137, "noopresetenv": 138, "observationnorm": 139, "observationtransform": 140, "permutetransform": 141, "pinmemorytransform": 142, "r3mtransform": 143, "randomcroptensordict": 144, "removeemptyspec": 145, "renametransform": 146, "resiz": 147, "reward2gotransform": 148, "rewardclip": 149, "rewardsc": 150, "rewardsum": 151, "selecttransform": 152, "signtransform": 153, "squeezetransform": 154, "stepcount": 155, "targetreturn": 156, "tensordictprim": 157, "timemaxpool": 158, "totensorimag": 159, "transformedenv": 161, "unsqueezetransform": 162, "vc1transform": 163, "viprewardtransform": 164, "viptransform": 165, "vecgymenvtransform": 166, "vecnorm": [167, 363], "gsdenois": 168, "multisteptransform": 169, "check_env_spec": 170, "exploration_mod": 171, "exploration_typ": 172, "get_available_librari": 173, "make_composite_from_td": 174, "set_exploration_mod": 175, "set_exploration_typ": 176, "step_mdp": 177, "terminated_or_trunc": 178, "cemplann": 179, "conv3dnet": 180, "convnet": 181, "dtactor": 182, "ddpgcnnactor": 183, "ddpgcnnqnet": 184, "ddpgmlpactor": 185, "ddpgmlpqnet": 186, "decisiontransform": 187, "delta": 188, "distributionaldqnnet": 189, "distributionalqvaluehook": 190, "dreameractor": 191, "duelingcnndqnet": 192, "gru": 193, "grucel": 194, "grumodul": 195, "independentnorm": 196, "lstm": [197, 348], "lstmcell": 198, "lstmmodul": 199, "lstmnet": 200, "mlp": [201, 348], "mpcplannerbas": 202, "mppiplann": 203, "maskedcategor": 204, "maskedonehotcategor": 205, "multiagentconvnet": 206, "multiagentmlp": 207, "noisylazylinear": 208, "noisylinear": 209, "normalparamwrapp": 210, "obsdecod": 211, "obsencod": 212, "onehotcategor": 213, "onlinedtactor": 214, "qmixer": [215, 341], "qvaluehook": 216, "rssmposterior": 217, "rssmprior": 218, "squeeze2dlay": 219, "squeezelay": 220, "tanhdelta": 221, "tanhnorm": 222, "truncatednorm": 223, "vdnmixer": 224, "vmapmodul": 225, "reset_nois": 226, "actor": [227, 340, 345, 350], "actorcriticoper": 228, "actorcriticwrapp": 229, "actorvalueoper": 230, "additivegaussianwrapp": 231, "decisiontransformerinferencewrapp": 232, "distributionalqvalueactor": 233, "distributionalqvaluemodul": 234, "egreedymodul": 235, "egreedywrapp": 236, "lmheadactorvalueoper": 237, "multistepactorwrapp": 238, "ornsteinuhlenbeckprocesswrapp": 239, "probabilisticactor": 240, "qvalueactor": 241, "qvaluemodul": 242, "safemodul": [243, 340], "safeprobabilisticmodul": 244, "safeprobabilistictensordictsequenti": 245, "safesequenti": 246, "tanhmodul": 247, "valueoper": 248, "worldmodelwrapp": 249, "biased_softplu": 250, "inv_softplu": 251, "map": 252, "a2closs": 253, "cqlloss": 254, "clipppoloss": 255, "ddpgloss": 256, "dqnloss": 257, "dtloss": 258, "discretecqlloss": 259, "discreteiqlloss": 260, "discretesacloss": 261, "distributionaldqnloss": 262, "dreameractorloss": 263, "dreamermodelloss": 264, "dreamervalueloss": 265, "hardupd": 266, "iqlloss": 267, "klpenppoloss": 268, "lossmodul": [269, 345, 351], "onlinedtloss": 270, "ppoloss": 271, "redqloss": 272, "reinforceloss": 273, "sacloss": 274, "softupd": 275, "td3loss": 276, "valueestim": 277, "default_value_kwarg": 278, "distance_loss": 279, "hold_out_net": 280, "hold_out_param": 281, "qmixerloss": 282, "next_state_valu": 283, "gae": 284, "td0estim": 285, "td1estim": 286, "tdlambdaestim": 287, "valueestimatorbas": 288, "generalized_advantage_estim": 289, "reward2go": 290, "td0_advantage_estim": 291, "td0_return_estim": 292, "td1_advantage_estim": 293, "td1_return_estim": 294, "td_lambda_advantage_estim": 295, "td_lambda_return_estim": 296, "vec_generalized_advantage_estim": 297, "vec_td1_advantage_estim": 298, "vec_td1_return_estim": 299, "vec_td_lambda_advantage_estim": 300, "vec_td_lambda_return_estim": 301, "tensordictrecord": 302, "videorecord": 303, "logger": [304, 342, 353, 354], "csvlogger": 305, "generate_exp_nam": 306, "get_logg": 307, "mlflowlogg": 308, "tensorboardlogg": 309, "wandblogg": 310, "batchsubsampl": 311, "clearcudacach": 312, "countframeslog": 313, "logreward": 314, "optimizerhook": 315, "replaybuffertrain": 317, "rewardnorm": 318, "selectkei": 319, "trainer": [320, 342, 346], "trainerhookbas": 321, "updateweight": 322, "correct_for_frame_skip": 323, "get_stats_random_rollout": 324, "make_collector_offpolici": 325, "make_collector_onpolici": 326, "make_dqn_loss": 327, "make_redq_loss": 328, "make_redq_model": 329, "make_replay_buff": 330, "make_target_updat": 331, "make_train": 332, "parallel_env_constructor": 333, "sync_async_collector": 334, "sync_sync_collector": 335, "transformed_env_constructor": 336, "readm": [337, 355], "tuto": [337, 355], "api": 338, "contribut": [339, 362], "content": 339, "modul": [340, 345, 348, 350, 354, 362], "tensordictmodul": [340, 350, 362], "wrapper": [340, 350], "probabilist": [340, 350], "q": [340, 346, 348, 350], "oper": 340, "join": 340, "hook": [340, 342, 346], "regular": 340, "planner": 340, "object": [341, 345, 351, 362], "dqn": [341, 346, 348], "ddpg": [341, 345], "sac": 341, "redq": 341, "iql": 341, "cql": 341, "dt": 341, "td3": 341, "ppo": [341, 347, 357], "a2c": 341, "dreamer": 341, "builder": 342, "_util": 343, "comput": [344, 346, 358, 361], "time": [344, 345, 361], "code": [345, 358], "overview": [345, 348], "setup": [345, 348], "__init__": 345, "method": 345, "estim": 345, "put": 345, "togeth": [345, 358], "call": 345, "parallel": [345, 356, 363], "execut": [345, 356, 358], "stat": 345, "build": [345, 346, 354, 360], "evalu": 345, "construct": 345, "target": [345, 346, 351], "network": [345, 346, 347, 348, 350, 357], "updat": 345, "experi": [345, 358], "result": [345, 347, 357], "conclus": [345, 346, 347, 348, 357, 358, 360], "next": [345, 347, 349, 352, 357, 360], "A": [346, 360], "exampl": [346, 360], "deep": 346, "collect": [346, 347, 352], "paramet": [346, 347, 351], "hyperparamet": [346, 347, 357], "regist": 346, "possibl": 346, "improv": 346, "defin": [347, 357], "loop": [347, 348, 354, 357, 358], "recurr": 348, "convolut": 348, "select": 348, "further": [348, 351], "read": 348, "creat": 349, "run": [349, 363], "rollout": [349, 356, 357, 358, 363], "s": [350, 351], "output": 351, "consider": 351, "log": 353, "video": 353, "own": 354, "first": 354, "design": 354, "divers": 356, "critic": 357, "pendulum": 358, "write": 358, "_step": 358, "reset": [358, 363], "simul": 358, "_reset": 358, "metadata": 358, "_spec": 358, "spec": [358, 363], "shape": 358, "seed": [358, 363], "wrap": 358, "class": [358, 362], "test": 358, "our": 358, "custom": [358, 360], "simpl": 358, "pretrain": 359, "vanilla": 360, "integr": 360, "tensorclass": 360, "other": 360, "tensor": 360, "pytre": 360, "iter": 360, "over": 360, "fix": 360, "priorit": 360, "save": 360, "raw": 360, "imag": 360, "more": 360, "complex": 360, "introduct": 362, "config": 362, "sequenc": 362, "program": 362, "ensembl": 362, "meta": 362, "state": 362, "frame_skip": 363, "deepmind": 363, "control": 363, "devic": 363, "close": 363, "access": 363, "attribut": 363, "kwarg": 363}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})