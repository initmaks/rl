Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 70, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 91, 99, 100, 102, 103, 104, 105, 106, 109, 112, 116, 118, 119, 121, 124, 126, 127, 130, 136, 137, 141, 142, 143, 144, 146, 154, 155, 156, 157, 158, 159, 161, 164, 165, 167, 177, 178, 180, 181, 182, 183, 190, 192, 194, 196, 197, 198, 199, 203, 204, 205, 209, 216, 217, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 240, 241, 245, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 302, 306, 311, 312, 316, 317, 320, 329, 330, 331, 332, 335, 336, 337, 341, 342, 346, 347, 348, 349, 350, 352, 353, 355, 356, 358, 359], "open": [0, 5, 7, 11, 56, 342, 353, 358], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "reinforc": [0, 3, 9, 53, 119, 180, 181, 182, 183, 187, 231, 235, 249, 250, 254, 255, 256, 258, 262, 263, 269, 270, 271, 334, 340, 342, 345, 346, 351, 354, 357, 358], "learn": [0, 3, 7, 8, 9, 17, 31, 53, 54, 55, 57, 58, 102, 119, 180, 181, 182, 183, 187, 200, 206, 231, 235, 249, 250, 254, 255, 256, 258, 262, 263, 268, 269, 270, 271, 334, 336, 337, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 51, 99, 154, 206, 224, 236, 244, 249, 251, 264, 265, 267, 269, 307, 333, 335, 336, 337, 338, 341, 342, 343, 348, 351, 353, 355, 356, 359], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 17, 18, 19, 36, 42, 83, 84, 93, 100, 170, 334, 335, 336, 339, 341, 342, 343, 345, 346, 348, 353, 354, 359], "pytorch": [0, 1, 2, 3, 54, 110, 111, 157, 167, 190, 194, 205, 206, 316, 333, 335, 338, 341, 343, 344, 347, 351, 353, 354, 355, 356, 358, 359], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 42, 53, 85, 89, 93, 98, 103, 104, 105, 107, 108, 109, 110, 111, 115, 165, 194, 306, 335, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 71, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 93, 94, 95, 98, 103, 104, 105, 107, 108, 109, 110, 111, 115, 116, 118, 119, 122, 123, 124, 126, 127, 128, 136, 137, 141, 142, 146, 149, 153, 154, 155, 158, 159, 161, 163, 165, 167, 175, 176, 190, 192, 193, 194, 196, 199, 200, 203, 204, 206, 207, 220, 222, 224, 228, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 306, 312, 325, 330, 331, 332, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "directli": [0, 3, 4, 8, 22, 51, 67, 81, 82, 85, 88, 89, 99, 103, 109, 146, 164, 265, 332, 336, 342, 343, 345, 353, 354, 356], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 134, 135, 137, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 171, 174, 175, 176, 180, 181, 182, 183, 184, 187, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 211, 212, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 272, 274, 278, 279, 280, 281, 282, 283, 286, 298, 299, 307, 313, 316, 319, 320, 325, 326, 328, 329, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359], "pypi": [0, 2, 358], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 85, 89, 92, 100, 103, 104, 105, 106, 109, 110, 111, 123, 141, 155, 157, 158, 159, 161, 163, 166, 177, 178, 190, 193, 194, 198, 204, 205, 212, 220, 221, 225, 227, 239, 240, 299, 306, 313, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 356, 359], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 76, 85, 89, 92, 93, 103, 104, 105, 106, 109, 110, 111, 157, 161, 166, 187, 194, 198, 205, 207, 224, 228, 230, 231, 239, 244, 249, 258, 265, 267, 280, 285, 293, 306, 311, 335, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 359], "about": [0, 3, 5, 7, 9, 17, 18, 19, 42, 54, 57, 58, 337, 341, 342, 343, 345, 346, 347, 348, 349, 350, 353, 354, 356, 358, 359], "instruct": [0, 6, 7, 10, 21, 52, 126, 128, 341, 342, 343, 344, 353, 356], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 103, 109, 225, 226, 227, 336, 341, 345, 347, 348, 350, 352, 353], "section": [0, 2, 3, 4, 190, 194, 342, 345, 350, 353], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 59, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 190, 193, 194, 198, 204, 220, 239, 313, 341, 342, 343, 344, 345, 354], "pip": [0, 10, 55, 345, 346, 347, 348, 349, 350, 353, 358, 359], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 34, 37, 40, 41, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 66, 67, 70, 72, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 118, 119, 120, 121, 122, 124, 127, 131, 136, 137, 139, 141, 142, 145, 146, 149, 150, 154, 155, 156, 159, 161, 163, 164, 165, 175, 177, 178, 184, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 222, 224, 228, 231, 232, 233, 235, 236, 237, 238, 243, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 303, 307, 313, 320, 325, 328, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 358, 359], "python": [0, 3, 5, 6, 7, 10, 20, 101, 115, 190, 191, 192, 194, 195, 196, 201, 202, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 51, 52, 53, 54, 56, 57, 58, 61, 62, 65, 72, 73, 76, 78, 85, 89, 103, 109, 119, 120, 131, 137, 141, 142, 157, 159, 161, 190, 192, 194, 196, 198, 203, 204, 205, 209, 224, 229, 230, 231, 236, 237, 239, 240, 251, 260, 264, 265, 267, 298, 299, 315, 336, 340, 341, 342, 343, 344, 345, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359], "low": [0, 24, 85, 89, 103, 109, 122, 126, 171, 231, 236, 243, 341, 342, 343, 353, 354, 358, 359], "high": [0, 9, 24, 40, 85, 89, 103, 109, 122, 126, 136, 171, 231, 236, 243, 280, 285, 293, 341, 342, 343, 353, 354, 356, 358, 359], "level": [0, 2, 3, 4, 21, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 119, 153, 264, 341, 342, 348, 358], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 43, 45, 46, 79, 85, 138, 199, 284, 308, 317, 338, 343, 354, 358], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 70, 71, 73, 74, 75, 76, 78, 85, 86, 88, 89, 90, 98, 99, 102, 103, 104, 105, 106, 109, 110, 111, 118, 119, 122, 123, 124, 126, 127, 128, 130, 131, 135, 136, 139, 141, 146, 149, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 171, 175, 176, 183, 185, 190, 191, 192, 194, 195, 196, 197, 199, 201, 202, 203, 206, 210, 212, 215, 229, 230, 232, 235, 236, 237, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 284, 306, 313, 328, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 44, 118, 126, 222, 265, 336, 358], "effici": [0, 1, 2, 4, 8, 190, 206, 336, 341, 342, 343, 344, 347, 348, 350, 352, 353, 355, 356, 358], "modular": [0, 51, 242, 356, 358], "document": [0, 2, 5, 7, 17, 18, 20, 31, 56, 85, 89, 103, 109, 159, 333, 342, 344, 345, 348, 351, 358], "properli": [0, 85, 89, 103, 109, 343, 349, 353, 354, 358], "test": [0, 3, 5, 81, 82, 94, 95, 161, 167, 192, 196, 197, 312, 328, 343, 344, 358], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 70, 72, 73, 74, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 118, 119, 123, 124, 127, 128, 129, 137, 139, 141, 146, 148, 149, 150, 153, 154, 155, 158, 159, 161, 163, 164, 167, 174, 175, 176, 180, 181, 182, 183, 184, 187, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 213, 214, 215, 224, 225, 229, 230, 231, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 286, 299, 301, 304, 305, 306, 307, 311, 328, 330, 331, 334, 336, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 359], "code": [0, 3, 5, 7, 8, 56, 85, 89, 103, 109, 141, 159, 161, 190, 191, 192, 194, 195, 196, 242, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359], "aim": [0, 2, 3, 7, 27, 28, 141, 161, 163, 198, 319, 335, 336, 337, 341, 342, 358], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 55, 58, 59, 61, 62, 74, 75, 78, 80, 81, 82, 90, 94, 95, 100, 102, 103, 104, 106, 119, 128, 137, 155, 156, 158, 170, 187, 222, 230, 231, 236, 239, 242, 258, 280, 281, 282, 283, 304, 334, 336, 338, 343, 344, 345, 346, 353, 354, 356, 358], "research": [0, 7, 9, 358], "most": [0, 2, 3, 7, 8, 31, 72, 73, 85, 89, 103, 109, 126, 164, 167, 341, 343, 345, 346, 347, 348, 349, 350, 354, 356, 358, 359], "written": [0, 3, 11, 33, 35, 38, 44, 52, 53, 56, 61, 65, 67, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 119, 128, 135, 149, 153, 156, 164, 174, 175, 224, 235, 236, 239, 240, 244, 249, 251, 264, 267, 269, 279, 298, 299, 336, 337, 338, 341, 344, 346, 352, 354, 358], "highli": [0, 2, 345, 358, 359], "wai": [0, 2, 3, 4, 51, 54, 67, 76, 93, 141, 144, 163, 164, 194, 267, 280, 281, 282, 283, 336, 341, 342, 343, 345, 347, 348, 352, 353, 354, 355, 356, 358, 359], "easili": [0, 2, 3, 7, 85, 89, 103, 109, 325, 337, 341, 342, 343, 345, 346, 347, 350, 353, 358, 359], "swap": [0, 3, 88, 164, 343, 355, 358], "compon": [0, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 67, 74, 75, 78, 187, 213, 230, 231, 238, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 311, 316, 341, 342, 343, 344, 346, 347, 350, 352, 353, 354, 355, 358], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 67, 75, 85, 86, 89, 103, 104, 105, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 179, 180, 184, 187, 188, 211, 212, 213, 221, 229, 234, 243, 246, 248, 254, 266, 299, 313, 325, 332, 334, 340, 342, 344, 346, 348, 349, 350, 351, 355, 357], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 80, 85, 86, 89, 93, 98, 103, 104, 105, 109, 110, 111, 124, 127, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 221, 222, 228, 229, 231, 232, 235, 238, 243, 246, 264, 270, 299, 341, 342, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 358, 359], "write": [0, 2, 3, 8, 22, 31, 33, 35, 36, 38, 44, 67, 75, 80, 85, 89, 122, 139, 140, 149, 151, 153, 157, 175, 224, 239, 240, 242, 244, 252, 253, 255, 256, 257, 263, 268, 270, 272, 279, 284, 299, 336, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 71, 85, 89, 100, 103, 107, 108, 109, 149, 158, 165, 174, 175, 190, 192, 196, 235, 239, 240, 245, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 306, 341, 343, 344, 345, 347, 353, 354, 358, 359], "ones": [0, 2, 22, 25, 31, 34, 37, 40, 41, 85, 89, 103, 109, 120, 123, 124, 125, 127, 137, 141, 146, 155, 158, 159, 161, 163, 201, 202, 222, 239, 249, 250, 252, 263, 267, 268, 270, 272, 286, 341, 343, 353, 354, 356, 358, 359], "littl": [0, 3, 42, 85, 89, 103, 109, 159, 249, 251, 264, 267, 269, 343, 344, 348, 356, 358, 359], "effort": [0, 3, 354, 356, 358], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 85, 88, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 109, 110, 111, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 141, 142, 143, 144, 146, 149, 150, 151, 153, 155, 156, 158, 159, 161, 162, 163, 164, 165, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 284, 298, 306, 307, 309, 312, 313, 316, 318, 319, 320, 325, 328, 332, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "repo": [0, 6, 52, 119, 156, 161, 335, 353, 358], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 72, 73, 83, 84, 88, 90, 91, 106, 228, 233, 235, 253, 256, 263, 278, 347, 358], "align": [0, 190, 194, 358], "exist": [0, 3, 4, 11, 17, 20, 31, 33, 35, 38, 44, 85, 89, 103, 109, 120, 125, 159, 270, 320, 332, 353, 358, 359], "ecosystem": [0, 348, 358], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 45, 46, 51, 56, 61, 62, 67, 70, 72, 76, 78, 85, 86, 89, 93, 103, 109, 110, 111, 119, 153, 154, 155, 156, 159, 190, 192, 194, 196, 203, 228, 231, 233, 235, 240, 264, 341, 342, 343, 344, 345, 348, 349, 352, 353, 354, 355, 356, 358, 359], "dataset": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 67, 70, 72, 73, 102, 165, 334, 341, 342, 345, 355, 356, 358, 359], "pillar": [0, 358], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 119, 120, 124, 125, 126, 127, 132, 136, 137, 141, 142, 143, 149, 153, 154, 155, 156, 158, 159, 161, 164, 165, 167, 176, 192, 196, 197, 199, 200, 228, 235, 255, 259, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 309, 312, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 334, 335, 336, 340, 346, 347, 348, 349, 351, 355, 356, 357], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 44, 85, 89, 99, 103, 109, 124, 141, 155, 161, 163, 166, 177, 178, 179, 184, 192, 196, 198, 199, 200, 204, 211, 212, 221, 225, 226, 227, 234, 239, 245, 249, 250, 251, 253, 254, 255, 256, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 278, 316, 321, 322, 323, 324, 325, 334, 335, 338, 340, 343, 345, 348, 351, 353, 354, 356, 357, 359], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 116, 118, 119, 124, 125, 127, 129, 135, 137, 143, 146, 153, 164, 167, 171, 175, 176, 187, 192, 196, 197, 200, 203, 204, 213, 222, 224, 230, 232, 233, 235, 236, 237, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 306, 307, 313, 316, 318, 321, 328, 330, 331, 332, 334, 336, 337, 338, 340, 344, 345, 346, 347, 351, 354, 355, 356, 357, 359], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 37, 39, 82, 85, 89, 94, 95, 103, 104, 105, 109, 112, 119, 141, 146, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 184, 190, 194, 246, 247, 248, 265, 328, 334, 339, 341, 343, 346, 347, 348, 353, 354, 356, 358, 359], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 32, 61, 62, 64, 65, 76, 78, 85, 86, 89, 103, 109, 110, 118, 120, 123, 131, 137, 141, 149, 155, 158, 159, 161, 163, 167, 190, 192, 193, 194, 196, 200, 204, 207, 213, 219, 220, 229, 231, 236, 238, 239, 240, 270, 279, 280, 281, 282, 283, 307, 319, 331, 336, 342, 343, 346, 347, 349, 353, 355, 356, 358, 359], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 76, 85, 86, 89, 103, 109, 110, 118, 120, 123, 131, 137, 141, 149, 155, 158, 159, 161, 163, 167, 190, 192, 193, 194, 195, 196, 200, 204, 219, 220, 229, 236, 239, 240, 270, 279, 289, 290, 291, 292, 294, 295, 296, 297, 331, 336, 342, 343, 346, 349, 353, 354, 355, 356, 358, 359], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 39, 51, 56, 119, 146, 153, 235, 313, 316, 318, 321, 322, 328, 330, 331, 334, 338, 356, 359], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 67, 68, 70, 72, 73, 74, 77, 79, 80, 85, 89, 99, 103, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 164, 165, 174, 175, 176, 177, 178, 190, 191, 194, 195, 198, 200, 204, 224, 230, 231, 236, 238, 239, 244, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 286, 303, 307, 319, 325, 328, 329, 330, 331, 332, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 359], "etc": [0, 2, 3, 7, 8, 11, 31, 45, 46, 56, 85, 89, 103, 109, 135, 159, 198, 204, 342, 343, 348, 356, 358, 359], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 74, 85, 89, 103, 104, 105, 109, 119, 124, 127, 128, 135, 136, 137, 153, 158, 159, 165, 167, 175, 177, 178, 197, 198, 203, 204, 222, 241, 242, 249, 251, 264, 267, 275, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 316, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "few": [0, 2, 8, 89, 299, 307, 343, 344, 346, 353, 356, 358, 359], "depend": [0, 1, 2, 3, 4, 7, 8, 33, 35, 88, 90, 91, 106, 110, 111, 124, 127, 244, 267, 336, 341, 343, 344, 353, 354, 358, 359], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 32, 33, 35, 38, 53, 56, 58, 76, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 190, 191, 194, 195, 239, 312, 316, 336, 341, 343, 344, 346, 348, 349, 353, 354, 356, 358, 359], "standard": [0, 3, 137, 148, 165, 176, 188, 200, 205, 206, 228, 229, 272, 280, 281, 282, 283, 341, 342, 345, 346, 353, 356, 358], "numpi": [0, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109, 157, 316, 354, 356, 358, 359], "common": [0, 2, 3, 4, 89, 94, 116, 225, 226, 227, 234, 249, 250, 251, 256, 257, 263, 264, 267, 268, 269, 270, 272, 328, 335, 336, 338, 341, 343, 346, 349, 352, 353, 354, 355, 358, 359], "openai": [0, 7, 88, 90, 106, 343, 354, 358, 359], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 85, 86, 88, 89, 90, 91, 93, 100, 101, 103, 106, 109, 110, 111, 113, 115, 119, 122, 128, 134, 135, 137, 139, 144, 146, 149, 155, 158, 164, 165, 325, 328, 335, 341, 342, 343, 344, 345, 349, 350, 354, 355, 356, 358], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 78, 83, 84, 85, 88, 89, 90, 91, 93, 100, 101, 103, 104, 105, 106, 109, 119, 120, 122, 123, 124, 126, 127, 131, 137, 141, 142, 146, 153, 154, 155, 156, 158, 159, 161, 163, 165, 194, 196, 197, 203, 204, 224, 229, 230, 236, 237, 239, 240, 241, 242, 249, 251, 252, 256, 257, 263, 264, 265, 267, 268, 269, 270, 271, 272, 280, 281, 282, 283, 284, 306, 320, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 359], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 131, 132, 134, 135, 136, 137, 141, 142, 144, 145, 146, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 218, 219, 220, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 301, 304, 306, 307, 309, 310, 311, 312, 313, 314, 316, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 336, 344, 345, 348, 353, 354, 356, 358], "On": [0, 3, 7, 17, 18, 19, 20, 25, 53, 191, 195, 336, 342, 353], "end": [0, 2, 3, 13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 71, 72, 73, 85, 89, 103, 109, 128, 139, 153, 154, 159, 177, 178, 190, 191, 194, 195, 199, 270, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "come": [0, 1, 2, 3, 8, 76, 85, 89, 98, 103, 109, 124, 127, 224, 225, 226, 227, 236, 244, 249, 251, 264, 267, 269, 341, 342, 343, 344, 347, 348, 349, 350, 353, 356, 358, 359], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 71, 74, 78, 85, 87, 89, 99, 103, 104, 105, 109, 110, 111, 115, 116, 119, 120, 123, 124, 127, 134, 135, 141, 146, 153, 154, 155, 156, 158, 159, 161, 163, 165, 167, 172, 173, 175, 190, 192, 194, 196, 199, 203, 204, 228, 229, 239, 257, 265, 267, 270, 284, 307, 312, 313, 322, 332, 335, 336, 337, 339, 341, 342, 343, 344, 346, 347, 348, 352, 353, 354, 355, 356, 358, 359], "re": [0, 3, 8, 31, 71, 85, 89, 103, 109, 196, 201, 202, 236, 240, 306, 338, 341, 343, 344, 345, 347, 352, 354, 358, 359], "usabl": [0, 338, 344, 358], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 44, 45, 46, 48, 61, 62, 63, 67, 74, 75, 78, 85, 86, 89, 103, 109, 115, 124, 127, 159, 165, 167, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 208, 209, 210, 211, 214, 215, 217, 220, 222, 225, 226, 227, 228, 229, 231, 232, 235, 236, 238, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 325, 328, 334, 336, 341, 344, 345, 346, 349, 352, 354, 356, 359], "cost": [0, 2, 26, 56, 249, 251, 264, 267, 269, 341, 342, 353, 354, 356], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 67, 68, 70, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 174, 175, 176, 179, 180, 181, 182, 183, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 210, 211, 212, 214, 215, 218, 219, 220, 221, 224, 225, 226, 227, 229, 236, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 299, 303, 316, 319, 321, 325, 328, 329, 330, 331, 332, 334, 336, 338, 341, 342, 343, 344, 346, 347, 349, 352, 353, 354, 355, 356, 358, 359], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 42, 44, 51, 53, 57, 58, 64, 85, 86, 89, 93, 98, 100, 103, 104, 105, 109, 118, 124, 127, 157, 165, 203, 204, 231, 235, 238, 334, 338, 341, 342, 344, 345, 353, 354, 355, 356, 358, 359], "good": [0, 1, 4, 9, 103, 341, 343, 344, 346, 353, 358, 359], "runtim": [0, 3, 31, 85, 89, 103, 109, 354], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 112, 124, 127, 136, 159, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 260, 267, 270, 312, 316, 337, 341, 342, 343, 344, 345, 348, 350, 352, 353, 354, 359], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 75, 80, 81, 82, 85, 88, 89, 90, 94, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 153, 165, 225, 226, 227, 235, 257, 265, 299, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 359], "read": [0, 2, 3, 7, 22, 36, 39, 56, 61, 62, 63, 64, 67, 74, 75, 78, 85, 88, 89, 90, 103, 109, 116, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 139, 140, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 158, 161, 162, 164, 165, 175, 210, 224, 225, 226, 227, 230, 236, 239, 240, 242, 244, 245, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 312, 316, 325, 336, 341, 342, 343, 345, 346, 352, 353, 354, 355, 359], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 338, 341, 345, 348, 352, 355, 359], "beyond": 0, "api": [0, 2, 3, 5, 104, 105, 106, 141, 163, 337, 338, 345, 346, 347, 348, 349, 353, 354, 356, 358, 359], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 45, 46, 47, 49, 72, 85, 86, 89, 99, 103, 109, 112, 119, 120, 130, 135, 142, 157, 167, 192, 196, 224, 230, 231, 236, 237, 238, 239, 240, 299, 333, 336, 337, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359], "paper": [0, 53, 56, 81, 82, 83, 84, 91, 94, 95, 100, 101, 106, 110, 111, 141, 161, 163, 190, 212, 221, 255, 262, 325, 341, 343, 353], "releas": [0, 4, 7, 10, 31, 85, 89, 103, 109, 159, 270, 358], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 318, 328, 338, 341, 358], "so": [0, 2, 3, 4, 6, 7, 10, 31, 33, 35, 38, 39, 85, 89, 103, 109, 155, 165, 241, 242, 341, 343, 344, 347, 350, 353, 354, 359], "make": [0, 2, 3, 4, 7, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 70, 74, 75, 80, 85, 89, 90, 93, 95, 97, 101, 103, 109, 129, 137, 141, 142, 146, 153, 161, 167, 190, 191, 194, 195, 203, 204, 205, 230, 240, 249, 251, 264, 267, 269, 280, 281, 282, 283, 313, 322, 332, 336, 337, 341, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359], "sure": [0, 3, 4, 7, 55, 74, 89, 93, 146, 230, 332, 336, 341, 343, 344, 347, 353, 354, 356, 358, 359], "alwai": [0, 2, 3, 19, 25, 27, 31, 51, 59, 85, 89, 103, 109, 135, 136, 258, 265, 336, 337, 342, 343, 344, 353, 354, 356], "enjoi": [0, 2, 3, 56, 348], "latest": [0, 2, 3, 10, 100, 104, 105, 313, 343, 353, 354, 358], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 32, 44, 54, 65, 72, 73, 85, 89, 98, 103, 104, 105, 107, 108, 109, 119, 131, 135, 139, 155, 156, 160, 165, 167, 177, 178, 188, 189, 190, 191, 192, 194, 195, 196, 198, 203, 205, 206, 240, 249, 251, 264, 267, 269, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 332, 336, 341, 342, 343, 344, 346, 347, 348, 350, 354, 356, 359], "recent": [0, 7, 11, 164, 341, 356, 359], "version": [0, 1, 2, 3, 6, 11, 31, 33, 35, 39, 53, 58, 72, 85, 88, 89, 90, 91, 100, 101, 103, 104, 106, 109, 110, 111, 164, 227, 265, 270, 280, 283, 335, 336, 341, 343, 344, 345, 347, 350, 353, 354, 355, 359], "although": [0, 1, 8, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 338, 341, 342, 348, 356], "core": [0, 3, 8, 325, 338, 344, 346, 358], "guarante": [0, 2, 31, 33, 35, 38, 61, 62, 63, 74, 75, 78, 85, 89, 103, 109, 165, 348, 358], "backward": [0, 8, 31, 81, 82, 85, 89, 103, 109, 165, 190, 191, 194, 195, 249, 250, 252, 256, 257, 263, 267, 268, 269, 270, 272, 341, 343, 344, 347, 348, 350, 353, 354], "compat": [0, 2, 3, 7, 11, 31, 33, 35, 38, 52, 67, 70, 72, 73, 74, 76, 85, 89, 91, 102, 103, 109, 119, 153, 161, 165, 190, 191, 192, 194, 195, 196, 237, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 275, 341, 344, 356, 358], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 137, 139, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 171, 174, 176, 177, 178, 179, 180, 181, 183, 184, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 246, 249, 250, 251, 252, 253, 255, 256, 257, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 286, 288, 289, 290, 294, 295, 297, 307, 312, 313, 314, 325, 328, 332, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359], "13": [0, 2, 5, 10, 11, 72, 73, 106, 164, 340, 342, 349, 354, 355, 356, 357], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 34, 37, 40, 41, 52, 54, 55, 56, 57, 58, 89, 103, 141, 158, 163, 254, 265, 337, 338, 341, 342, 343, 344, 346, 348, 356, 359], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 70, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 174, 175, 176, 186, 187, 192, 196, 197, 199, 200, 212, 213, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 298, 307, 311, 312, 313, 315, 316, 325, 334, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 359], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 135, 143, 225, 226, 227, 239, 256, 263, 325, 334, 341, 354, 358], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 67, 85, 89, 103, 109, 115, 141, 163, 200, 301, 306, 316, 338, 342, 350], "root": [0, 2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 103, 119, 156, 174, 193, 219, 220, 344, 345, 353, 354, 355, 356, 359], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 34, 42, 51, 53, 54, 55, 56, 57, 58, 64, 65, 81, 82, 83, 84, 91, 93, 94, 95, 100, 101, 102, 104, 105, 106, 110, 111, 119, 141, 161, 179, 180, 181, 182, 183, 184, 187, 188, 189, 194, 200, 201, 202, 206, 208, 209, 211, 212, 214, 215, 221, 231, 235, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 280, 285, 293, 325, 333, 351, 355, 358], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 51, 53, 54, 56, 81, 82, 83, 84, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 161, 346, 350, 358], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 53, 56, 57, 81, 82, 83, 84, 91, 93, 94, 95, 100, 101, 104, 105, 106, 110, 111, 355, 358], "setup": [0, 7, 81, 82, 93, 94, 95], "py": [0, 3, 115, 212, 221, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359], "develop": [0, 3, 4, 7, 93, 341, 358], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 67, 68, 69, 71, 74, 76, 77, 78, 79, 85, 87, 89, 91, 92, 103, 106, 109, 118, 122, 126, 132, 135, 141, 142, 144, 151, 155, 158, 159, 161, 162, 164, 165, 166, 167, 174, 176, 177, 178, 187, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 204, 206, 207, 222, 228, 229, 230, 231, 232, 236, 237, 240, 242, 243, 246, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 275, 278, 280, 281, 282, 283, 284, 286, 300, 301, 304, 306, 309, 316, 318, 325, 328, 337, 340, 341, 343, 346, 347, 348, 351, 353, 354, 357, 359], "seri": [0, 2, 7, 8, 32, 60, 68, 76, 77, 79, 80, 109, 136, 158, 299, 336, 337, 341, 342, 343, 349, 350, 353, 356, 359], "quick": [0, 51], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 39, 52, 58, 85, 89, 103, 109, 118, 156, 158, 267, 335, 336, 337, 341, 342, 343, 344, 346, 350, 353, 354, 356, 359], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 70, 71, 72, 73, 76, 78, 83, 84, 85, 86, 88, 89, 90, 91, 93, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 113, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 135, 136, 137, 141, 142, 145, 146, 149, 150, 154, 155, 156, 157, 158, 159, 161, 163, 165, 174, 175, 177, 178, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 303, 306, 311, 313, 316, 318, 320, 325, 328, 332, 335, 341, 342, 343, 344, 345, 347, 350, 352, 353, 354, 356, 358, 359], "hurri": [0, 345], "last": [0, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 43, 45, 46, 52, 71, 72, 73, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 118, 131, 137, 142, 154, 156, 157, 177, 178, 190, 192, 194, 196, 197, 198, 201, 202, 208, 216, 222, 228, 229, 232, 240, 280, 282, 283, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 358, 359], "item": [0, 8, 13, 25, 27, 31, 37, 44, 59, 71, 76, 85, 89, 103, 109, 130, 159, 201, 202, 252, 253, 255, 270, 307, 337, 338, 341, 343, 344, 347, 348, 353, 354, 356], "navig": [0, 353], "previou": [0, 3, 4, 10, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 155, 175, 190, 194, 215, 229, 343, 344, 345, 346, 350, 354, 359], "whenev": [0, 1, 2, 3, 22, 31, 34, 37, 40, 41, 51, 56, 65, 72, 73, 83, 84, 88, 90, 91, 106, 110, 111, 115, 134, 159, 164, 265, 280, 281, 282, 283, 318, 336, 356], "want": [0, 2, 3, 6, 7, 8, 73, 137, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 336, 341, 342, 343, 344, 345, 347, 348, 349, 353, 354, 355, 356, 358, 359], "ted": [0, 51, 52, 53, 54, 55, 56, 57, 58, 334, 340, 351, 357], "s": [0, 1, 2, 3, 6, 7, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 72, 73, 76, 81, 82, 85, 89, 93, 94, 95, 100, 103, 104, 105, 109, 110, 111, 119, 123, 141, 153, 155, 157, 158, 159, 161, 163, 165, 167, 177, 178, 192, 196, 202, 203, 204, 206, 212, 221, 225, 227, 228, 231, 232, 236, 239, 240, 243, 250, 256, 263, 265, 270, 280, 281, 282, 283, 284, 325, 336, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 76, 81, 82, 85, 89, 98, 99, 102, 103, 109, 115, 118, 123, 126, 128, 135, 141, 142, 154, 155, 158, 159, 161, 163, 165, 166, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 276, 278, 280, 281, 282, 283, 284, 316, 323, 324, 328, 334, 337, 338, 340, 342, 343, 345, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359], "optim": [0, 1, 2, 8, 31, 39, 81, 82, 85, 89, 103, 109, 159, 176, 200, 205, 206, 250, 265, 266, 267, 270, 311, 316, 328, 337, 338, 340, 343, 344, 345, 346, 348, 351, 353, 354, 357], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 85, 89, 103, 106, 109, 119, 137, 141, 163, 167, 235, 250, 252, 255, 257, 268, 270, 272, 307, 313, 316, 318, 319, 320, 328, 338, 340, 341, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 358, 359], "storag": [0, 1, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 71, 72, 73, 75, 76, 78, 85, 87, 89, 103, 109, 118, 119, 124, 127, 146, 334, 338, 340, 342, 343, 344, 345, 347, 350, 351, 353, 355, 357], "log": [0, 3, 4, 8, 39, 185, 186, 187, 201, 202, 210, 220, 230, 231, 236, 240, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 306, 309, 310, 312, 316, 328, 336, 337, 338, 340, 341, 342, 343, 345, 346, 350, 351, 353, 354, 357, 358], "your": [0, 2, 3, 7, 8, 10, 17, 31, 85, 89, 93, 98, 103, 104, 105, 109, 165, 332, 335, 336, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 356, 357, 358], "own": [0, 3, 13, 14, 16, 21, 31, 85, 89, 103, 104, 105, 109, 299, 340, 342, 343, 345, 351, 353, 354, 357], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 35, 38, 39, 44, 51, 53, 59, 85, 89, 103, 104, 105, 109, 124, 132, 141, 154, 159, 161, 163, 167, 180, 182, 192, 196, 228, 232, 233, 235, 249, 250, 251, 252, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 316, 318, 328, 334, 338, 340, 342, 345, 348, 349, 351, 355, 356, 357, 359], "loop": [0, 8, 33, 35, 38, 85, 89, 103, 109, 174, 228, 232, 233, 235, 267, 316, 338, 340, 341, 342, 345, 347, 348, 349, 351, 352, 356, 357], "ppo": [0, 4, 8, 236, 240, 251, 264, 267, 334, 336, 340, 341, 342, 346, 347, 351, 357], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 76, 83, 84, 85, 86, 88, 89, 90, 100, 103, 109, 119, 122, 123, 129, 134, 135, 137, 144, 146, 151, 153, 155, 156, 158, 159, 165, 192, 196, 328, 336, 340, 342, 343, 345, 346, 347, 351, 357, 358, 359], "introduct": [0, 337, 340, 345, 351, 353, 357, 359], "multi": [0, 7, 9, 27, 28, 31, 34, 37, 40, 41, 85, 89, 103, 107, 108, 109, 159, 190, 192, 194, 196, 197, 198, 203, 204, 278, 280, 281, 282, 283, 334, 340, 341, 342, 343, 344, 345, 346, 351, 354, 357, 358], "agent": [0, 9, 27, 28, 98, 104, 105, 107, 108, 110, 111, 112, 153, 154, 201, 202, 203, 204, 206, 212, 221, 278, 334, 340, 345, 351, 354, 357], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 39, 52, 54, 56, 57, 58, 67, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 192, 196, 199, 200, 239, 265, 298, 299, 320, 321, 322, 325, 328, 330, 331, 332, 334, 336, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 72, 73, 76, 78, 81, 82, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 206, 207, 210, 211, 212, 213, 219, 220, 221, 222, 224, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 293, 299, 302, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 326, 328, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 359], "pretrain": [0, 340, 351, 357], "recurr": [0, 2, 118, 190, 191, 192, 194, 196, 215, 340, 342, 346, 351, 356, 357], "dqn": [0, 2, 51, 128, 187, 230, 231, 249, 250, 252, 253, 255, 257, 258, 259, 262, 263, 265, 267, 268, 269, 270, 271, 272, 278, 323, 334, 336, 340, 346, 347, 350, 351, 357], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 81, 82, 85, 89, 99, 103, 109, 126, 135, 154, 172, 173, 187, 192, 196, 203, 204, 206, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 249, 250, 251, 252, 256, 257, 263, 264, 266, 267, 268, 269, 270, 272, 312, 318, 321, 322, 328, 330, 331, 336, 337, 338, 340, 342, 345, 347, 348, 351, 355, 356, 357, 358, 359], "replai": [0, 8, 15, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 80, 118, 119, 126, 142, 146, 155, 252, 253, 255, 256, 257, 263, 268, 270, 272, 313, 316, 326, 328, 334, 338, 340, 351, 354, 355, 357], "buffer": [0, 1, 3, 4, 8, 15, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 85, 89, 99, 103, 109, 118, 119, 123, 126, 141, 142, 146, 155, 158, 159, 161, 163, 239, 242, 252, 253, 255, 256, 257, 263, 268, 270, 272, 313, 316, 326, 328, 334, 338, 340, 349, 351, 354, 355, 357, 359], "task": [0, 2, 3, 9, 27, 28, 39, 44, 53, 56, 83, 84, 85, 89, 92, 103, 104, 105, 106, 109, 110, 111, 141, 153, 159, 161, 163, 256, 263, 340, 341, 342, 343, 344, 345, 346, 351, 353, 354, 357, 358, 359], "specif": [0, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 89, 110, 184, 229, 316, 334, 337, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 356, 357], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 44, 61, 62, 63, 67, 70, 74, 75, 78, 80, 85, 89, 94, 103, 109, 124, 127, 128, 137, 141, 158, 159, 161, 165, 200, 212, 221, 224, 225, 236, 239, 240, 241, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 320, 321, 322, 327, 328, 332, 334, 336, 338, 340, 342, 343, 344, 348, 350, 351, 353, 354, 356, 357, 359], "ddpg": [0, 180, 181, 182, 183, 252, 262, 271, 334, 336, 340, 342, 347, 351, 357], "loss": [0, 3, 8, 35, 128, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 278, 279, 280, 311, 316, 323, 324, 325, 328, 337, 338, 340, 345, 347, 348, 349, 351, 354, 356, 357, 358], "trainer": [0, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 340, 341, 351, 357], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 134, 135, 137, 139, 141, 143, 144, 145, 146, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 171, 174, 175, 176, 177, 178, 179, 184, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 207, 210, 211, 212, 213, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 274, 278, 280, 281, 282, 283, 286, 299, 307, 308, 309, 310, 311, 313, 314, 315, 318, 325, 328, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359], "packag": [0, 6, 7, 10, 115, 334, 335, 341, 356, 359], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 85, 88, 89, 103, 109, 110, 111, 119, 120, 141, 146, 163, 177, 178, 190, 191, 192, 194, 195, 196, 197, 198, 204, 238, 242, 251, 253, 255, 257, 258, 264, 267, 268, 272, 280, 281, 282, 283, 289, 290, 291, 292, 294, 295, 296, 297, 325, 332, 334, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356], "node": [0, 2, 17, 18, 19, 20, 21, 58, 325, 334, 348], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 104, 105, 135, 137, 176, 185, 186, 187, 188, 193, 200, 201, 202, 207, 210, 211, 214, 215, 218, 219, 220, 228, 229, 230, 231, 236, 240, 241, 249, 250, 251, 256, 257, 258, 263, 264, 267, 268, 269, 270, 272, 334, 338, 342, 343, 346, 348, 353, 354, 358, 359], "helper": [0, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 341, 342, 344, 354], "compos": [0, 3, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 76, 77, 85, 89, 103, 109, 119, 145, 158, 159, 165, 234, 260, 270, 299, 325, 334, 341, 342, 343, 344, 348, 352, 353, 356, 358, 359], "episod": [0, 51, 52, 56, 57, 58, 65, 72, 73, 85, 89, 103, 109, 146, 149, 154, 176, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 334, 342, 345, 350, 353, 356], "format": [0, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 70, 76, 85, 89, 103, 104, 109, 123, 141, 155, 158, 159, 161, 163, 239, 299, 334, 341, 342, 345, 347, 349, 359], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 45, 46, 47, 48, 49, 85, 89, 99, 103, 109, 110, 111, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 175, 215, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 250, 253, 256, 257, 268, 270, 272, 278, 334, 354], "human": [0, 54, 334, 354], "feedback": [0, 334, 350, 358], "rlhf": [0, 39, 44, 59, 135, 334, 336], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 86, 89, 103, 109, 116, 124, 127, 136, 143, 144, 158, 159, 165, 167, 176, 199, 200, 312, 320, 321, 322, 325, 328, 330, 331, 332, 334, 345], "gymlikeenv": [0, 88, 90, 334], "envmetadata": [0, 334], "vector": [0, 1, 8, 23, 26, 32, 81, 82, 94, 95, 98, 104, 105, 106, 110, 111, 126, 164, 180, 182, 190, 191, 194, 195, 198, 280, 283, 293, 294, 295, 296, 297, 334, 341, 342, 344, 352, 353, 354, 355, 359], "mask": [0, 1, 4, 22, 26, 29, 30, 32, 104, 105, 116, 142, 187, 201, 202, 213, 229, 230, 231, 232, 233, 237, 238, 313, 334, 342, 344, 359], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 32, 39, 43, 51, 54, 56, 57, 58, 64, 65, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 122, 124, 126, 127, 128, 129, 132, 135, 136, 139, 143, 144, 146, 150, 153, 159, 164, 171, 174, 176, 179, 180, 181, 182, 183, 184, 187, 188, 192, 196, 198, 199, 200, 201, 202, 203, 211, 212, 213, 215, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 328, 332, 334, 336, 337, 338, 341, 342, 343, 345, 346, 347, 348, 349, 352, 353, 355, 356, 358, 359], "record": [0, 2, 31, 85, 89, 103, 109, 135, 267, 298, 299, 300, 301, 302, 303, 304, 305, 306, 328, 334, 342, 343, 346, 350], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109, 126, 155, 171, 224, 230, 231, 236, 237, 238, 239, 240, 241, 242, 334, 343, 344, 346, 347, 353, 354, 358, 359], "actor": [0, 3, 4, 20, 135, 176, 179, 180, 182, 187, 188, 200, 211, 213, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 325, 334, 337, 342, 344, 345, 347, 350, 355, 358], "explor": [0, 1, 166, 206, 224, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 249, 312, 321, 322, 328, 334, 343, 344, 345, 347, 348, 350, 353, 354], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 73, 76, 85, 89, 98, 103, 109, 115, 117, 119, 120, 122, 124, 126, 127, 128, 136, 137, 141, 142, 145, 146, 147, 149, 151, 155, 156, 158, 159, 163, 165, 171, 175, 180, 181, 182, 183, 185, 187, 188, 189, 192, 193, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 212, 213, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 309, 310, 311, 312, 313, 316, 325, 328, 334, 338, 342, 347, 348, 349, 352, 353, 354, 356, 358, 359], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 39, 53, 69, 71, 85, 86, 89, 99, 102, 103, 104, 105, 107, 108, 109, 123, 124, 125, 129, 135, 137, 143, 144, 149, 150, 153, 158, 164, 175, 185, 201, 202, 210, 224, 236, 240, 244, 245, 268, 274, 280, 285, 293, 302, 316, 334, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "hook": [0, 31, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 213, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 334], "planner": [0, 176, 200, 334], "sac": [0, 257, 268, 270, 334], "redq": [0, 268, 324, 325, 334], "iql": [0, 256, 263, 334, 341, 353], "cql": [0, 250, 255, 334], "dt": [0, 235, 334, 354], "td3": [0, 272, 334], "a2c": [0, 249, 334], "dreamer": [0, 114, 188, 259, 260, 261, 334, 336], "checkpoint": [0, 334, 355], "builder": [0, 334, 342, 359], "logger": [0, 299, 301, 302, 303, 304, 305, 306, 310, 316, 328, 332, 334, 342], "_util": [0, 3, 11, 334, 350], "implement_for": [0, 3, 334], "thing": [0, 3, 7, 8, 85, 89, 103, 109, 335, 343, 344, 345, 346, 347, 348, 349, 353, 356, 359], "consid": [0, 1, 2, 3, 8, 19, 31, 33, 34, 35, 37, 38, 40, 41, 61, 62, 78, 85, 89, 103, 109, 126, 165, 185, 203, 218, 280, 282, 283, 335, 341, 345, 346, 347, 354, 356], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 66, 67, 71, 72, 73, 74, 75, 78, 85, 86, 89, 98, 100, 102, 103, 104, 105, 109, 110, 111, 116, 118, 119, 123, 124, 126, 127, 135, 136, 137, 141, 142, 149, 155, 158, 159, 161, 163, 164, 165, 172, 173, 176, 187, 190, 191, 194, 195, 198, 199, 200, 201, 202, 205, 213, 219, 236, 239, 240, 242, 246, 251, 253, 258, 264, 267, 270, 273, 278, 279, 280, 281, 282, 283, 298, 299, 313, 332, 335, 336, 338, 341, 342, 343, 344, 346, 348, 349, 353, 354, 355, 356, 359], "debug": [0, 6, 8, 39, 335, 359], "work": [0, 2, 3, 4, 8, 11, 31, 33, 35, 37, 38, 65, 70, 72, 73, 75, 80, 85, 88, 89, 90, 93, 103, 106, 109, 120, 135, 141, 161, 164, 165, 177, 178, 198, 231, 238, 243, 251, 264, 267, 316, 335, 336, 341, 342, 343, 344, 345, 348, 352, 353, 354, 355, 356, 358, 359], "habitat": [0, 3, 91, 335, 355], "lab": [0, 3, 83, 84, 91, 335], "mujoco": [0, 6, 8, 106, 335, 341, 343, 344], "error": [0, 1, 3, 7, 10, 11, 28, 31, 85, 89, 103, 109, 112, 142, 167, 335, 341, 343, 353, 359], "solut": [0, 2, 3, 6, 7, 9, 20, 335, 336, 338, 358], "resourc": [0, 1, 20, 91, 335, 341, 343, 353], "issu": [0, 4, 5, 8, 51, 54, 61, 62, 78, 93, 119, 142, 156, 224, 230, 231, 236, 237, 238, 239, 240, 335, 358], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 70, 75, 76, 77, 78, 79, 80, 85, 89, 103, 109, 110, 111, 119, 126, 174, 201, 202, 334, 345, 352, 353, 356, 358], "search": [0, 102, 175, 342], "page": [0, 7, 306, 347], "somewhat": [1, 2, 337, 346, 359], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 52, 54, 56, 57, 58, 59, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 125, 128, 159, 187, 194, 213, 230, 231, 237, 238, 267, 313, 348, 358, 359], "dataload": [1, 59, 71, 73, 342, 348, 356], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 56, 85, 89, 103, 109, 119, 130, 146, 154, 155, 156, 190, 192, 194, 196, 210, 228, 232, 233, 235, 299, 336, 342, 345, 356, 358, 359], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 85, 89, 98, 103, 104, 105, 109, 110, 111, 118, 130, 135, 141, 150, 158, 159, 163, 196, 197, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 313, 316, 336, 337, 338, 341, 342, 343, 344, 347, 352, 353, 354, 355, 356, 358, 359], "over": [1, 2, 3, 4, 8, 31, 37, 41, 42, 44, 50, 51, 56, 71, 85, 89, 103, 109, 126, 137, 149, 156, 174, 222, 242, 258, 260, 265, 286, 319, 338, 341, 342, 343, 345, 346, 347, 348, 353, 354, 359], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 38, 40, 41, 56, 63, 85, 89, 103, 104, 105, 109, 117, 123, 131, 141, 155, 158, 159, 160, 161, 163, 174, 190, 192, 194, 196, 203, 239, 240, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 336, 341, 344, 353, 354, 356, 359], "static": [1, 11, 39, 44, 65, 72, 73, 91, 165, 263, 345, 354, 356], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 44, 51, 56, 57, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 85, 86, 89, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120, 123, 124, 125, 126, 127, 135, 137, 139, 141, 143, 146, 149, 153, 154, 155, 158, 159, 161, 163, 165, 171, 175, 177, 178, 179, 180, 181, 182, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 203, 204, 207, 211, 222, 229, 230, 231, 232, 233, 235, 239, 243, 244, 249, 250, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 279, 280, 281, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 336, 337, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 356, 357, 358, 359], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 34, 37, 40, 41, 44, 63, 67, 73, 85, 89, 91, 98, 103, 104, 105, 109, 128, 157, 167, 190, 194, 204, 234, 249, 251, 264, 267, 268, 269, 337, 341, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 359], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 59, 76, 85, 88, 89, 90, 91, 103, 106, 109, 118, 124, 126, 127, 136, 144, 159, 172, 173, 192, 196, 232, 235, 251, 264, 267, 270, 299, 313, 318, 330, 331, 332, 336, 341, 342, 343, 344, 348, 353, 354, 356], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 53, 54, 57, 58, 59, 85, 89, 99, 103, 109, 119, 123, 131, 141, 149, 155, 158, 159, 160, 161, 163, 222, 239, 240, 241, 270, 299, 338, 343, 345, 349, 356, 359], "two": [1, 2, 3, 4, 8, 10, 31, 34, 37, 39, 40, 41, 56, 67, 71, 73, 85, 89, 103, 109, 137, 141, 163, 183, 190, 192, 194, 196, 216, 240, 264, 275, 312, 316, 325, 337, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 356, 358, 359], "main": [1, 2, 3, 5, 19, 21, 58, 86, 240, 316, 336, 337, 341, 342, 352, 359], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 53, 54, 56, 57, 58, 59, 62, 65, 67, 70, 71, 72, 73, 75, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 104, 106, 109, 110, 111, 120, 122, 123, 141, 150, 153, 155, 157, 158, 159, 161, 163, 174, 177, 178, 190, 192, 194, 196, 198, 201, 202, 203, 204, 205, 222, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 266, 267, 268, 269, 270, 272, 274, 278, 280, 281, 282, 283, 284, 288, 298, 306, 309, 319, 325, 328, 329, 332, 341, 342, 343, 344, 345, 346, 348, 353, 354, 356, 359], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67, 70, 71, 72, 73, 74, 75, 83, 84, 85, 88, 89, 90, 91, 99, 102, 103, 104, 105, 106, 109, 110, 111, 112, 117, 118, 122, 124, 127, 135, 137, 139, 141, 149, 151, 157, 159, 161, 163, 165, 174, 186, 192, 196, 198, 201, 202, 208, 213, 231, 237, 238, 240, 242, 243, 244, 265, 270, 277, 280, 283, 298, 312, 313, 330, 331, 336, 341, 343, 345, 346, 347, 348, 352, 354, 355, 356, 358, 359], "constructor": [1, 2, 15, 17, 18, 19, 20, 37, 44, 56, 64, 76, 85, 89, 100, 103, 109, 110, 158, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 325, 329, 332, 336, 341, 342, 343, 345, 348, 353, 356], "iter": [1, 2, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 67, 71, 81, 82, 85, 89, 94, 95, 103, 109, 129, 137, 150, 177, 178, 198, 203, 204, 217, 224, 230, 236, 237, 239, 241, 242, 244, 265, 277, 312, 315, 316, 325, 337, 338, 341, 343, 344, 348, 350, 353, 354], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 85, 86, 89, 90, 91, 93, 94, 95, 99, 100, 103, 106, 109, 116, 159, 190, 192, 194, 196, 232, 241, 242, 320, 332, 336, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 353, 356, 357, 359], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 51, 65, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 116, 118, 131, 134, 137, 153, 154, 155, 156, 159, 164, 174, 175, 176, 188, 190, 192, 194, 196, 197, 199, 200, 228, 232, 233, 235, 236, 240, 249, 259, 267, 279, 280, 281, 282, 283, 286, 287, 288, 298, 301, 307, 312, 316, 338, 342, 344, 346, 347, 349, 350, 352, 354, 355, 358], "queri": [1, 3, 13, 31, 33, 35, 38, 85, 89, 103, 109, 141, 158, 161, 165, 242, 341, 347, 354, 358], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 85, 89, 103, 109, 142, 154, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 253, 255, 265, 280, 281, 282, 283, 284, 298, 329, 341, 342, 344, 347, 350, 354, 356, 359], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 72, 73, 78, 81, 82, 85, 88, 89, 90, 94, 95, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 118, 119, 126, 132, 136, 137, 148, 153, 156, 159, 165, 176, 177, 178, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 203, 204, 207, 208, 209, 212, 214, 215, 218, 219, 220, 221, 224, 228, 229, 232, 233, 235, 236, 239, 240, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 266, 267, 268, 269, 270, 272, 307, 309, 312, 316, 318, 319, 320, 330, 331, 332, 336, 341, 342, 343, 344, 345, 346, 348, 350, 353, 354, 355, 356, 359], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 44, 55, 71, 76, 85, 89, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 190, 192, 196, 198, 205, 206, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 281, 282, 283, 313, 341, 343, 344, 348, 349, 353, 354, 356, 359], "deliv": [1, 2, 15, 56, 341, 342, 345, 348, 358], "stack": [1, 2, 3, 7, 8, 17, 19, 20, 27, 28, 34, 37, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 58, 64, 67, 85, 89, 98, 103, 104, 105, 109, 165, 190, 192, 194, 195, 196, 241, 242, 298, 307, 336, 342, 345, 352, 354, 356, 358], "user": [1, 2, 3, 5, 8, 31, 51, 52, 56, 58, 73, 85, 89, 103, 109, 120, 154, 159, 167, 184, 197, 267, 270, 299, 329, 337, 338, 341, 342, 345, 347, 348, 354, 358, 359], "reset": [1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 119, 128, 131, 134, 136, 141, 149, 153, 154, 155, 156, 158, 161, 164, 165, 167, 175, 190, 192, 196, 223, 235, 298, 325, 341, 342, 343, 344, 345, 348, 352, 353, 358], "reach": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 71, 85, 89, 103, 109, 110, 111, 153, 228, 232, 233, 235, 341, 343, 350, 353, 358, 359], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 51, 52, 54, 56, 57, 58, 65, 67, 72, 73, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 124, 125, 127, 128, 129, 136, 137, 139, 143, 144, 146, 148, 150, 153, 155, 156, 158, 159, 165, 174, 175, 176, 190, 192, 196, 200, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 337, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 103, 104, 105, 106, 107, 108, 109, 118, 119, 120, 122, 128, 137, 144, 153, 154, 158, 159, 165, 167, 174, 175, 176, 179, 184, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 208, 211, 212, 214, 215, 221, 225, 239, 245, 249, 251, 255, 264, 265, 267, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 332, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 359], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 39, 51, 67, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 109, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 174, 190, 192, 196, 205, 228, 230, 232, 237, 260, 270, 342, 343, 344, 345, 346, 348, 350, 353, 354, 355, 356, 359], "predefin": [1, 342, 344, 348, 356], "becaus": [1, 3, 4, 7, 33, 35, 38, 39, 51, 85, 89, 103, 109, 128, 135, 153, 158, 164, 183, 197, 204, 224, 230, 231, 236, 237, 238, 239, 240, 341, 342, 344, 346, 347, 348, 352, 353, 354, 356, 359], "potenti": [1, 2, 354, 356], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 39, 81, 82, 85, 89, 94, 95, 103, 109, 137, 151, 159, 162, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 207, 208, 209, 210, 211, 214, 215, 217, 219, 220, 222, 225, 228, 229, 231, 232, 235, 236, 238, 240, 243, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 320, 337, 341, 343, 344, 345, 346, 352, 353, 355, 356], "heavi": [1, 8, 51, 356], "crucial": [1, 2, 228, 232, 233, 235, 256, 263, 265, 341, 342, 343, 344, 345, 347, 349, 353, 354, 359], "configur": [1, 8, 20, 21, 39, 135, 179, 184, 211, 265, 267, 325, 336, 341, 342, 343, 347, 353, 354], "hyperparamet": [1, 70, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341, 354, 356], "appropri": [1, 3, 4, 7, 60, 68, 76, 77, 79, 80, 103, 109, 128, 329, 332, 341, 349, 356], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 70, 71, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 328, 329, 330, 331, 332, 336, 337, 341, 344, 346, 350, 353, 354, 355, 358], "take": [1, 2, 3, 8, 22, 39, 53, 81, 82, 85, 89, 94, 95, 103, 109, 122, 153, 156, 158, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 234, 235, 236, 238, 243, 246, 248, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 318, 336, 338, 341, 342, 343, 345, 346, 347, 353, 354, 356, 359], "consider": [1, 2, 3, 8, 342, 353, 356], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 99, 103, 104, 105, 109, 110, 111, 124, 127, 154, 159, 175, 177, 178, 192, 196, 198, 244, 249, 250, 251, 252, 253, 255, 257, 258, 264, 265, 267, 268, 269, 270, 272, 278, 280, 283, 341, 342, 343, 345, 353, 354, 359], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 67, 72, 73, 74, 76, 83, 84, 85, 88, 89, 90, 91, 98, 99, 103, 104, 105, 109, 110, 111, 119, 122, 123, 124, 125, 128, 129, 131, 135, 137, 142, 143, 144, 146, 149, 150, 153, 154, 156, 158, 159, 164, 165, 167, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 236, 238, 239, 240, 243, 246, 249, 251, 257, 262, 264, 265, 267, 268, 269, 271, 279, 280, 281, 282, 283, 284, 299, 301, 311, 312, 313, 316, 328, 330, 331, 332, 336, 338, 341, 342, 343, 344, 346, 348, 349, 352, 353, 354, 355, 356, 358, 359], "occur": [1, 8, 14, 27, 28, 51, 85, 89, 91, 103, 109, 120, 137, 142, 164, 175, 224, 230, 231, 236, 237, 238, 239, 240, 260, 356, 359], "serial": [1, 2, 3, 31, 85, 89, 103, 109, 165], "parallel": [1, 3, 8, 85, 88, 89, 90, 103, 104, 105, 109, 159, 164, 167, 249, 329, 330, 331, 332, 342, 343, 353], "syncdatacollector": [1, 2, 13, 14, 16, 17, 18, 19, 20, 119, 146, 328, 331, 334, 341, 342, 343, 344, 348, 350, 353, 356], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 98, 99, 102, 103, 104, 105, 106, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 330, 331, 332, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 356, 359], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 35, 44, 53, 58, 59, 86, 100, 103, 109, 165, 330, 331, 332, 341, 343, 358, 359], "multisyncdatacollector": [1, 17, 18, 19, 20, 331, 334, 343, 348, 358], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 44, 51, 52, 54, 56, 57, 58, 59, 65, 72, 73, 98, 104, 105, 190, 194, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 336, 338, 343, 346, 356, 358], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 65, 72, 73, 81, 82, 83, 84, 88, 90, 91, 93, 94, 95, 100, 101, 103, 106, 165, 203, 235, 318, 334, 336, 341, 345, 349, 353, 354], "aggreg": [1, 3, 51, 76, 175, 177, 178, 180, 181, 242], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 71, 72, 73, 85, 86, 89, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 174, 175, 190, 192, 194, 196, 198, 203, 213, 229, 231, 232, 238, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 318, 336, 342, 344, 345, 346, 349, 350, 354, 355, 358, 359], "final": [1, 2, 3, 4, 20, 33, 35, 38, 39, 164, 190, 192, 194, 196, 203, 228, 232, 233, 234, 235, 241, 280, 312, 336, 341, 342, 343, 349, 350, 353, 354, 359], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 330, 334, 341, 342, 343, 348, 358], "sever": [1, 2, 8, 29, 31, 44, 53, 85, 89, 103, 109, 120, 122, 159, 267, 341, 343, 349, 350, 356, 359], "batch": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 71, 72, 73, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 102, 103, 109, 110, 111, 119, 131, 137, 139, 142, 146, 155, 159, 160, 164, 165, 175, 185, 190, 191, 192, 194, 195, 196, 197, 201, 202, 203, 204, 205, 210, 212, 218, 222, 235, 239, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 310, 313, 314, 315, 316, 318, 330, 331, 332, 338, 342, 343, 344, 345, 348, 350, 352, 353, 355, 358, 359], "gather": [1, 3, 17, 19, 20, 44, 59, 61, 62, 78, 142, 202, 210, 279, 320, 335, 342, 343, 344, 348, 353, 354, 356, 359], "continu": [1, 9, 24, 45, 73, 85, 89, 103, 104, 105, 109, 110, 111, 171, 180, 181, 182, 183, 235, 242, 249, 250, 257, 263, 267, 268, 269, 270, 271, 272, 280, 285, 293, 336, 341, 343, 344, 346, 353, 354, 356, 358, 359], "concomitantli": 1, "network": [1, 4, 8, 31, 85, 89, 98, 103, 104, 105, 109, 177, 178, 180, 181, 182, 183, 186, 188, 189, 194, 198, 203, 204, 206, 208, 209, 212, 214, 215, 216, 221, 225, 226, 227, 229, 239, 243, 250, 251, 252, 253, 255, 256, 257, 258, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 276, 278, 280, 281, 282, 283, 284, 327, 328, 336, 337, 338, 347, 350, 352, 354, 359], "impli": [1, 359], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 39, 65, 67, 70, 81, 82, 85, 89, 103, 107, 108, 109, 123, 141, 155, 158, 159, 161, 163, 190, 191, 192, 194, 195, 196, 203, 206, 239, 249, 250, 251, 257, 260, 270, 318, 327, 336, 338, 341, 342, 343, 344, 352, 354, 356, 358], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 52, 58, 85, 88, 89, 90, 91, 103, 106, 109, 135, 137, 150, 159, 160, 165, 167, 198, 203, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 358, 359], "slightli": [1, 51, 336, 337, 344, 354, 355, 356, 359], "lag": [1, 341, 342, 343], "therefor": [1, 2, 3, 7, 34, 37, 40, 41, 57, 58, 85, 89, 103, 109, 146, 267, 278, 347, 359], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 65, 67, 72, 73, 76, 78, 85, 89, 98, 99, 102, 103, 104, 105, 109, 116, 119, 128, 135, 141, 146, 149, 153, 154, 156, 158, 160, 163, 164, 174, 175, 190, 191, 194, 195, 201, 202, 203, 228, 232, 233, 235, 236, 239, 240, 248, 249, 250, 251, 256, 257, 258, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 337, 338, 341, 342, 343, 345, 352, 353, 354, 356, 359], "asynchron": [1, 9, 14, 20, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 249, 330, 341, 342, 343], "off": [1, 2, 4, 193, 220, 230, 270, 312, 321, 336, 338, 341, 342, 343, 346, 347, 353, 355, 359], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 78, 85, 89, 103, 104, 105, 109, 110, 124, 127, 131, 137, 154, 159, 164, 167, 187, 190, 192, 194, 196, 204, 205, 225, 227, 229, 231, 237, 249, 256, 258, 263, 267, 312, 336, 338, 341, 342, 343, 344, 345, 346, 348, 349, 353, 354, 355, 356, 359], "remot": [1, 2, 17, 18, 19, 20, 103, 109, 359], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 39, 76, 81, 82, 85, 89, 91, 92, 94, 95, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 122, 124, 127, 128, 129, 135, 139, 143, 144, 149, 150, 151, 153, 154, 156, 167, 176, 192, 196, 200, 235, 249, 299, 320, 336, 341, 343, 344, 346, 347, 348, 349, 350, 355, 356, 358], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 54, 56, 57, 58, 85, 89, 103, 109, 110, 111, 150, 268, 280, 281, 282, 283, 284, 337, 341, 343, 346, 347, 348], "synchronis": [1, 86, 353], "either": [1, 2, 5, 21, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 85, 89, 103, 109, 153, 154, 245, 272, 303, 338, 341, 342, 344, 355, 356, 358, 359], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 341, 353, 358], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 126, 131, 134, 135, 136, 137, 141, 142, 144, 145, 148, 150, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 219, 220, 224, 225, 226, 227, 228, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 280, 281, 282, 283, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 306, 309, 310, 312, 313, 316, 332, 336, 337, 338, 341, 342, 343, 344, 345, 346, 349, 350, 352, 353, 354, 355, 356, 358, 359], "second": [1, 3, 8, 51, 53, 76, 190, 192, 194, 196, 231, 251, 264, 267, 270, 301, 315, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 54, 56, 57, 58, 59, 61, 62, 64, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 127, 128, 129, 135, 139, 140, 141, 143, 144, 146, 150, 153, 155, 157, 158, 159, 161, 163, 171, 174, 176, 177, 178, 179, 180, 181, 182, 183, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 211, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 313, 318, 325, 326, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 44, 45, 46, 85, 89, 103, 109, 131, 135, 158, 186, 187, 191, 195, 207, 225, 226, 227, 230, 231, 234, 239, 245, 249, 251, 252, 253, 258, 264, 267, 269, 278, 279, 280, 281, 282, 283, 316, 325, 334, 338, 341, 342, 343, 344, 345, 346, 352, 353, 354, 359], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 78, 84, 85, 86, 89, 99, 103, 109, 119, 137, 155, 158, 159, 165, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 230, 231, 232, 235, 236, 237, 238, 240, 241, 242, 243, 246, 253, 256, 257, 265, 278, 280, 281, 282, 283, 299, 303, 312, 320, 321, 322, 325, 328, 330, 331, 336, 337, 338, 341, 343, 344, 345, 346, 354, 356, 359], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 33, 35, 36, 38, 39, 40, 41, 42, 44, 51, 54, 56, 57, 58, 59, 61, 62, 64, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 127, 128, 129, 139, 141, 143, 144, 146, 150, 153, 155, 158, 159, 161, 163, 171, 174, 176, 190, 191, 192, 194, 195, 196, 200, 205, 206, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 313, 325, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 56, 65, 70, 72, 73, 75, 76, 85, 89, 93, 103, 106, 109, 144, 183, 192, 194, 196, 198, 207, 222, 224, 228, 230, 239, 244, 265, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 335, 337, 341, 342, 343, 345, 347, 348, 353, 354, 356, 358, 359], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 67, 68, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 119, 122, 124, 125, 126, 127, 136, 137, 141, 146, 149, 152, 154, 155, 156, 158, 159, 160, 163, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 204, 207, 208, 209, 210, 211, 213, 214, 215, 217, 222, 224, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 243, 244, 246, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 287, 288, 301, 309, 311, 312, 316, 320, 325, 332, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 359], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 85, 89, 91, 92, 93, 103, 109, 123, 135, 140, 141, 155, 158, 159, 161, 163, 190, 191, 194, 195, 239, 308, 341, 342, 343, 344, 353, 355, 359], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 42, 67, 81, 82, 94, 95, 103, 109, 120, 122, 126, 136, 146, 149, 153, 158, 165, 190, 194, 196, 197, 203, 205, 206, 224, 230, 236, 237, 239, 240, 243, 251, 257, 264, 267, 268, 272, 286, 325, 332, 336, 338, 341, 342, 343, 345, 347, 348, 353, 354, 356, 358], "infer": [1, 103, 109, 119, 165, 192, 196, 205, 229, 255, 341, 343, 348, 350, 356], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 51, 53, 65, 72, 73, 81, 82, 83, 84, 85, 88, 89, 94, 95, 99, 100, 101, 103, 109, 136, 137, 159, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 241, 242, 243, 246, 270, 299, 306, 312, 330, 331, 332, 335, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358], "dispatch": [1, 17, 18, 19, 20, 222, 299, 341], "avail": [1, 3, 4, 6, 20, 34, 37, 40, 41, 51, 53, 58, 65, 71, 72, 73, 83, 84, 93, 103, 104, 105, 106, 110, 111, 118, 135, 187, 213, 236, 240, 265, 299, 330, 331, 336, 341, 342, 343, 344, 345, 346, 353, 354, 356, 359], "speed": [1, 2, 4, 8, 26, 85, 89, 103, 109, 337, 341, 342, 343, 344, 353, 354, 356], "avoid": [1, 2, 31, 61, 62, 78, 85, 89, 103, 109, 115, 159, 165, 224, 239, 244, 251, 264, 267, 270, 319, 343, 353], "oom": [1, 61, 62, 78], "choic": [1, 2, 52, 58, 103, 207, 336, 337, 341, 342, 347, 353], "size": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 120, 124, 127, 128, 129, 131, 139, 141, 143, 144, 146, 150, 152, 153, 155, 157, 158, 159, 160, 163, 165, 171, 174, 176, 177, 178, 179, 184, 185, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 210, 211, 212, 213, 214, 215, 218, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 299, 307, 313, 325, 336, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 358, 359], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 34, 37, 39, 40, 41, 44, 51, 53, 54, 56, 57, 58, 61, 62, 67, 76, 78, 85, 86, 87, 89, 98, 100, 103, 104, 105, 109, 110, 124, 127, 144, 158, 160, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 211, 212, 214, 215, 217, 221, 222, 224, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 251, 264, 265, 267, 280, 281, 282, 283, 284, 313, 330, 331, 332, 336, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 356, 359], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 44, 45, 46, 56, 64, 73, 85, 89, 93, 102, 103, 109, 119, 131, 160, 165, 175, 192, 196, 229, 249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 280, 281, 282, 283, 336, 337, 342, 353], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 76, 78, 85, 89, 103, 109, 164, 165, 176, 197, 200, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 306, 325, 334, 338, 341, 343, 344, 346, 348, 350, 353, 355, 359], "while": [1, 2, 3, 7, 8, 31, 85, 89, 103, 109, 146, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 256, 263, 264, 267, 270, 336, 341, 343, 344, 346, 348, 349, 353, 354, 355, 356, 358], "wait": [1, 19, 20, 21, 344, 354], "also": [1, 2, 3, 8, 9, 11, 22, 31, 33, 35, 37, 38, 40, 51, 53, 54, 56, 57, 58, 59, 61, 62, 67, 76, 78, 85, 89, 103, 104, 105, 109, 110, 111, 115, 118, 119, 126, 137, 144, 146, 149, 150, 153, 155, 159, 190, 194, 215, 236, 241, 242, 243, 249, 250, 252, 253, 255, 256, 257, 263, 267, 270, 280, 287, 288, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 356, 359], "impact": [1, 56, 124, 127, 342, 344, 353], "memori": [1, 3, 8, 20, 26, 31, 33, 35, 38, 44, 51, 52, 53, 54, 56, 57, 58, 61, 85, 86, 89, 93, 103, 109, 119, 123, 141, 155, 158, 159, 161, 163, 165, 194, 195, 239, 332, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "manag": [1, 8, 276, 277, 280, 281, 282, 283, 312, 347], "kei": [1, 2, 3, 7, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 64, 65, 67, 70, 72, 73, 76, 85, 89, 94, 95, 103, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 174, 175, 176, 186, 187, 192, 196, 199, 200, 213, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 299, 310, 311, 312, 314, 315, 316, 320, 325, 337, 338, 341, 343, 344, 345, 347, 352, 353, 354, 356, 358, 359], "control": [1, 3, 5, 8, 15, 83, 84, 85, 89, 98, 103, 104, 105, 109, 126, 174, 180, 181, 182, 183, 192, 196, 199, 200, 215, 222, 235, 239, 240, 241, 249, 251, 264, 267, 271, 280, 285, 293, 336, 338, 341, 342, 343, 345, 346, 347, 353, 354, 356], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 70, 71, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 100, 101, 103, 106, 109, 110, 111, 119, 120, 124, 127, 132, 135, 136, 137, 141, 142, 153, 155, 156, 158, 159, 161, 167, 190, 191, 193, 194, 195, 196, 201, 202, 203, 220, 225, 226, 227, 229, 236, 239, 240, 242, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 299, 307, 311, 325, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 352, 353, 354, 355, 356, 359], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 342, 353], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 35, 37, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 67, 70, 85, 89, 103, 104, 105, 109, 119, 122, 124, 127, 132, 139, 151, 159, 192, 196, 204, 280, 282, 283, 312, 316, 337, 341, 342, 343, 344, 346, 347, 348, 350, 353, 354, 356, 359], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 235, 341, 348, 359], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 52, 70, 76, 81, 82, 85, 89, 94, 95, 103, 109, 206, 267, 280, 281, 282, 283, 284, 298, 325, 335, 336, 338, 341, 342, 343, 344, 346, 348, 349, 353, 356, 359], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 33, 35, 38, 42, 44, 52, 56, 71, 72, 75, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 119, 124, 126, 127, 132, 136, 137, 158, 159, 165, 177, 178, 191, 192, 195, 196, 198, 201, 202, 203, 204, 229, 235, 243, 270, 341, 342, 343, 345, 346, 348, 352, 353, 355, 356, 359], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 70, 71, 72, 73, 76, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 116, 117, 118, 119, 120, 124, 126, 127, 128, 131, 135, 136, 137, 139, 141, 142, 146, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 217, 218, 219, 220, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 328, 332, 338, 341, 342, 343, 344, 346, 355, 356, 358, 359], "behaviour": [1, 3, 20, 56, 89, 120, 124, 127, 137, 142, 154, 174, 192, 193, 196, 220, 312, 336, 342, 356], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 85, 89, 103, 109, 119, 124, 127, 137, 155, 156, 196, 236, 240, 241, 242, 318, 330, 331, 336, 341, 342, 345, 346, 353, 354, 359], "choos": [1, 98, 192, 196, 267, 334, 336, 337, 341, 342, 343, 353, 356], "follow": [1, 2, 3, 6, 7, 8, 31, 33, 35, 36, 38, 39, 51, 52, 53, 54, 55, 56, 57, 58, 65, 81, 82, 85, 89, 94, 95, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 135, 141, 161, 177, 178, 190, 192, 194, 196, 198, 231, 237, 238, 248, 249, 250, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 299, 316, 325, 336, 337, 338, 341, 342, 343, 344, 347, 348, 352, 353, 354, 356, 358, 359], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 319, 341, 343, 358], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 119, 132, 228, 232, 235, 298, 299, 301, 309, 312, 316, 319, 320, 341, 342, 343, 344, 346, 353, 356, 358, 359], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 67, 71, 74, 75, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 102, 103, 106, 109, 119, 122, 123, 126, 131, 134, 135, 137, 139, 140, 141, 149, 151, 155, 158, 159, 161, 163, 164, 165, 167, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 204, 205, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 233, 235, 238, 239, 240, 242, 243, 246, 251, 264, 267, 270, 279, 280, 281, 282, 283, 298, 312, 338, 342, 343, 344, 345, 346, 348, 349, 353, 354, 356, 358, 359], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 119, 146, 319, 341, 342, 343, 344, 348, 350, 353, 356, 358], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 37, 39, 40, 51, 52, 53, 56, 67, 70, 72, 73, 76, 85, 86, 89, 103, 104, 105, 109, 110, 111, 141, 146, 149, 153, 154, 155, 156, 163, 165, 187, 190, 191, 192, 194, 196, 203, 204, 208, 212, 213, 221, 228, 230, 231, 232, 238, 242, 286, 289, 290, 291, 292, 294, 295, 296, 297, 312, 313, 330, 331, 336, 341, 342, 343, 344, 346, 347, 348, 350, 353, 354, 355, 356, 358, 359], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 319, 341, 342, 350], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 45, 46, 56, 58, 66, 76, 85, 89, 99, 103, 109, 126, 136, 137, 155, 167, 190, 192, 194, 196, 232, 236, 239, 240, 250, 268, 312, 320, 336, 341, 342, 343, 344, 345, 346, 348, 354, 355, 356, 358, 359], "rand_step": [1, 3, 83, 84, 85, 86, 88, 89, 90, 96, 97, 99, 100, 101, 103, 109, 134, 155, 165, 354, 358, 359], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 341], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 52, 54, 56, 57, 58, 341, 342, 343], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 40, 51, 52, 53, 54, 56, 57, 58, 64, 65, 72, 73, 76, 81, 82, 85, 89, 94, 95, 103, 109, 142, 153, 158, 176, 196, 200, 235, 267, 280, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 334, 337, 341, 342, 343, 344, 345, 348, 350, 354, 358, 359], "pad": [1, 2, 3, 22, 36, 42, 52, 54, 56, 57, 58, 119, 177, 178, 180, 181, 196, 197, 201, 202, 203, 313], "along": [1, 2, 3, 22, 27, 28, 33, 35, 38, 39, 44, 52, 54, 56, 57, 58, 62, 65, 67, 72, 73, 76, 78, 118, 119, 120, 137, 139, 142, 149, 157, 196, 198, 201, 202, 206, 230, 236, 239, 240, 265, 336, 341, 342, 344, 345, 347, 353, 354, 356], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 55, 60, 64, 65, 68, 76, 77, 79, 80, 85, 89, 103, 109, 118, 119, 123, 141, 154, 155, 157, 158, 159, 161, 163, 199, 239, 248, 258, 316, 335, 342, 343, 352, 353, 354, 356, 359], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 65, 72, 73, 89, 142, 153, 175, 201, 202, 228, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 344], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 40, 54, 83, 84, 85, 89, 103, 109, 110, 111, 132, 142, 165, 187, 201, 202, 213, 230, 231, 237, 238, 240, 275, 280, 313, 341, 343, 344, 345, 346, 347, 353], "valid": [1, 2, 3, 22, 33, 35, 36, 44, 59, 76, 112, 142, 159, 177, 178, 198, 201, 202, 228, 235, 264, 280, 281, 282, 283, 313, 338, 359], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 312, 334, 341, 342], "strategi": [1, 2, 15, 56, 70, 98, 202, 210, 232, 336, 338, 341, 342, 346, 353, 356], "reset_when_don": [1, 13, 14, 15, 16], "These": [1, 2, 7, 31, 39, 53, 58, 85, 89, 103, 109, 110, 141, 163, 336, 337, 341, 343, 353, 354, 356, 359], "tool": [1, 2, 3, 5, 344, 345, 354, 356, 359], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 85, 88, 89, 103, 109, 113, 115, 338, 341, 343, 344, 345, 348, 349, 354], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 334], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 334], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 68, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 135, 137, 139, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 171, 174, 175, 176, 177, 178, 179, 184, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 307, 314, 315, 325, 328, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "multiprocess": [1, 2, 3, 17, 18, 19, 51, 58, 86, 87, 103, 109, 165, 341, 342, 343, 344, 353, 354, 355, 359], "synchron": [1, 13, 18, 20, 100, 330, 331, 342, 343], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 85, 89, 100, 103, 109, 124, 127, 154, 159, 165, 168, 172, 173, 185, 192, 193, 196, 210, 218, 219, 220, 236, 240, 265, 312, 341, 342, 344, 353, 358, 359], "find": [1, 4, 6, 7, 17, 18, 19, 34, 36, 42, 72, 73, 194, 228, 235, 310, 314, 341, 342, 346, 347, 353], "folder": [1, 2, 110, 342], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 51, 56, 65, 72, 76, 85, 89, 103, 109, 142, 241, 242, 307, 316, 336, 341, 342, 343, 348, 352, 358, 359], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 67, 83, 84, 85, 86, 88, 89, 90, 91, 99, 103, 104, 105, 109, 110, 111, 112, 118, 119, 122, 123, 124, 125, 127, 130, 135, 136, 137, 141, 149, 151, 155, 156, 158, 159, 161, 163, 165, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 239, 240, 242, 243, 246, 260, 265, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 311, 316, 319, 330, 331, 332, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 356, 358, 359], "variou": [1, 2, 3, 192, 196, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 273, 278, 299, 330, 331, 341, 342, 343, 345, 346, 347, 349, 353, 356, 359], "machin": [1, 2, 7, 17, 18, 19, 31, 55, 93, 353], "One": [1, 2, 4, 8, 30, 32, 44, 76, 81, 82, 119, 146, 161, 210, 228, 239, 243, 271, 275, 303, 341, 342, 356, 359], "wonder": 1, "why": [1, 2, 3, 354, 359], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 76, 85, 89, 100, 104, 105, 106, 109, 329, 334, 341, 342, 343, 345, 352, 358, 359], "instead": [1, 4, 7, 8, 11, 26, 31, 56, 85, 89, 103, 109, 131, 155, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 249, 251, 253, 256, 257, 258, 263, 264, 267, 268, 269, 270, 278, 280, 284, 288, 332, 336, 345, 346, 350, 354, 356, 359], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 51, 52, 54, 56, 57, 58, 81, 82, 85, 89, 94, 95, 103, 104, 105, 109, 123, 124, 125, 127, 141, 146, 150, 154, 155, 157, 158, 159, 161, 163, 164, 190, 193, 194, 198, 203, 215, 219, 220, 239, 242, 248, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 318, 330, 331, 332, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 359], "lower": [1, 2, 3, 20, 24, 122, 165, 214, 215, 243, 343, 354], "io": [1, 51, 56, 94, 95, 100, 194, 195], "footprint": [1, 2, 356], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 33, 35, 74, 76, 85, 89, 93, 98, 103, 104, 105, 109, 119, 122, 131, 141, 144, 156, 159, 163, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 205, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 237, 238, 239, 243, 246, 248, 257, 268, 269, 270, 272, 279, 284, 299, 316, 332, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 358, 359], "commun": [1, 2, 3, 103, 335, 343, 359], "yet": [1, 81, 82, 94, 95, 355], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 47, 48, 49, 52, 81, 82, 85, 87, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 106, 109, 110, 111, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 167, 171, 175, 187, 213, 215, 224, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 325, 336, 341, 342, 343, 344, 345, 346, 352, 353, 358], "plai": [1, 3, 104, 105, 119, 342, 343, 347, 356, 359], "role": [1, 3, 342, 347, 359], "opposit": 1, "direct": [1, 2, 31, 85, 89, 103, 109, 190, 194, 265, 342, 347], "sinc": [1, 2, 3, 4, 5, 7, 31, 34, 37, 40, 41, 51, 58, 73, 76, 85, 89, 103, 104, 105, 106, 109, 167, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 230, 231, 232, 233, 235, 237, 238, 243, 246, 341, 342, 343, 344, 345, 346, 347, 354, 355, 356, 358, 359], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 57, 58, 100, 280, 281, 282, 283, 344, 353], "share": [1, 3, 6, 8, 22, 33, 35, 38, 61, 62, 63, 74, 75, 78, 86, 103, 109, 165, 192, 196, 203, 204, 225, 226, 227, 249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 332, 334, 336, 343, 344, 350, 352, 353, 358, 359], "among": [1, 3, 104, 105, 353], "achiev": [1, 2, 3, 4, 31, 85, 89, 93, 103, 109, 154, 175, 313, 338, 341, 342, 343, 344, 353, 354, 356, 359], "prohibit": [1, 3, 76], "slow": [1, 3, 4, 33, 35, 38], "compar": [1, 3, 56, 76, 312, 337, 341, 343, 346, 347, 353, 356, 359], "gpu": [1, 7, 8, 31, 61, 62, 78, 85, 89, 93, 103, 109, 341, 343, 344, 353, 359], "nativ": [1, 7, 9, 54, 85, 89, 103, 109, 119, 299, 344, 356], "driver": [1, 7], "practic": [1, 2, 3, 4, 5, 8, 51, 193, 219, 220, 248, 335, 341, 342, 343, 344, 347, 353, 355, 359], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 40, 51, 64, 65, 76, 81, 82, 89, 137, 165, 176, 185, 188, 190, 192, 194, 196, 197, 200, 218, 228, 236, 240, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 272, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 336, 337, 341, 342, 343, 346, 353, 354, 356, 358, 359], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 53, 54, 56, 57, 58, 59, 62, 65, 70, 72, 73, 75, 78, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 110, 111, 120, 122, 123, 141, 150, 155, 157, 158, 159, 161, 163, 192, 196, 201, 202, 203, 224, 228, 229, 230, 232, 233, 235, 236, 237, 239, 240, 243, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 263, 264, 266, 267, 268, 269, 270, 272, 274, 278, 280, 281, 282, 283, 284, 288, 306, 329, 341, 342, 343, 346, 349, 353, 356, 359], "build": [1, 3, 7, 22, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 85, 89, 90, 91, 94, 95, 100, 103, 106, 109, 110, 111, 146, 165, 176, 192, 196, 200, 234, 236, 240, 316, 323, 324, 326, 327, 336, 338, 343, 344, 346, 347, 348, 349, 353, 354, 355, 358, 359], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 85, 89, 99, 103, 109, 123, 126, 137, 141, 155, 158, 159, 161, 163, 174, 176, 187, 188, 190, 194, 200, 213, 217, 224, 230, 231, 232, 235, 238, 239, 240, 241, 242, 244, 248, 252, 253, 255, 279, 280, 281, 282, 283, 284, 286, 308, 312, 328, 336, 338, 341, 342, 343, 345, 346, 347, 348, 349, 353, 354, 359], "mani": [1, 2, 3, 4, 37, 81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 100, 101, 106, 249, 251, 257, 264, 267, 268, 272, 336, 341, 342, 343, 345, 346, 348, 350, 353, 354, 356, 359], "eg": [1, 2, 3, 11, 33, 35, 38, 61, 62, 63, 74, 75, 78, 83, 84, 85, 88, 89, 90, 91, 93, 103, 106, 109, 126, 153, 159, 203, 229, 299], "gymnasium": [1, 3, 5, 11, 85, 88, 89, 90, 96, 97, 103, 109, 113, 115, 129, 150, 153, 164, 342, 343, 354, 358], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 40, 41, 44, 51, 52, 54, 56, 57, 58, 61, 62, 63, 67, 70, 71, 72, 73, 74, 75, 78, 85, 88, 89, 90, 99, 103, 109, 122, 125, 126, 143, 150, 157, 161, 165, 190, 192, 196, 206, 207, 229, 231, 232, 238, 240, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 313, 325, 330, 331, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 358, 359], "warn": [1, 3, 228, 232, 233, 235, 342], "quickli": [1, 3, 342, 353, 359], "becom": [1, 3, 4, 20, 190, 194, 353, 359], "quit": [1, 3, 51, 85, 89, 103, 109, 336, 341, 342, 343, 346, 353, 359], "annoi": [1, 3], "By": [1, 2, 3, 32, 83, 84, 85, 88, 89, 90, 91, 103, 104, 105, 106, 109, 110, 111, 222, 240, 265, 312, 332, 341, 355, 356, 359], "filter": [1, 2, 3, 4, 44, 65, 72, 73, 249, 250, 252, 256, 257, 263, 267, 268, 270, 345], "out": [1, 2, 3, 4, 5, 9, 20, 31, 33, 35, 38, 44, 52, 56, 65, 72, 73, 85, 89, 103, 104, 105, 109, 155, 167, 190, 191, 194, 201, 202, 205, 206, 224, 229, 230, 231, 235, 236, 237, 238, 239, 240, 276, 277, 338, 341, 342, 343, 344, 345, 346, 348, 353, 354, 356, 358, 359], "still": [1, 2, 3, 9, 56, 81, 82, 85, 89, 94, 95, 103, 109, 228, 264, 265, 341, 342, 344, 352, 354, 356, 359], "wish": [1, 3, 13, 14, 16, 56, 115, 347, 356], "displai": [1, 3, 7, 85, 89, 103, 109, 316, 338, 341, 342, 353, 354], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 70, 71, 72, 73, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 120, 123, 124, 127, 128, 129, 131, 134, 135, 136, 137, 139, 141, 142, 143, 144, 146, 148, 150, 153, 155, 157, 158, 159, 160, 161, 163, 165, 167, 174, 175, 176, 177, 178, 180, 187, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 212, 213, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 289, 290, 291, 292, 294, 295, 296, 297, 306, 309, 310, 312, 313, 314, 316, 325, 332, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "central": [2, 203, 341, 342, 345, 353, 356], "part": [2, 4, 8, 31, 39, 51, 53, 54, 56, 57, 58, 81, 85, 89, 94, 103, 109, 118, 137, 146, 149, 192, 196, 244, 307, 332, 341, 343, 344, 350, 354, 359], "algorithm": [2, 3, 8, 9, 13, 14, 99, 132, 249, 267, 268, 269, 270, 307, 321, 334, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 353, 355, 356, 358], "implement": [2, 3, 9, 11, 15, 31, 74, 85, 89, 100, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 165, 177, 190, 191, 192, 193, 194, 195, 196, 218, 219, 220, 249, 250, 254, 255, 256, 263, 265, 266, 267, 270, 325, 336, 338, 341, 342, 343, 344, 354, 358], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 56, 58, 71, 73, 76, 81, 82, 85, 86, 89, 93, 94, 95, 103, 109, 119, 135, 141, 144, 161, 164, 165, 167, 176, 196, 197, 203, 204, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "give": [2, 3, 7, 40, 53, 85, 89, 99, 103, 109, 119, 335, 337, 341, 342, 353, 354, 355, 358], "abil": [2, 265, 354, 356], "panel": [2, 343], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 52, 58, 76, 119, 128, 192, 196, 256, 263, 270, 273, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "includ": [2, 3, 4, 7, 9, 20, 31, 58, 61, 62, 63, 74, 75, 78, 85, 89, 99, 103, 109, 154, 159, 165, 265, 270, 319, 336, 338, 341, 342, 343, 344, 353, 354, 356, 359], "almost": [2, 344], "ani": [2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 89, 100, 103, 104, 105, 109, 110, 111, 116, 131, 141, 142, 146, 159, 161, 165, 167, 175, 177, 178, 184, 198, 206, 229, 239, 240, 241, 242, 249, 250, 252, 253, 255, 256, 257, 263, 265, 267, 268, 269, 270, 272, 280, 282, 283, 304, 316, 335, 341, 342, 343, 346, 347, 353, 354, 356, 358, 359], "physic": [2, 6, 7, 103, 106, 338, 341, 353, 354], "theori": 2, "t": [2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 45, 46, 56, 64, 65, 71, 76, 85, 86, 88, 89, 100, 101, 103, 109, 119, 124, 127, 128, 141, 145, 146, 154, 156, 163, 165, 167, 174, 190, 194, 230, 235, 239, 271, 280, 281, 282, 283, 284, 286, 306, 316, 318, 332, 335, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "crude": 2, "made": [2, 3, 31, 37, 51, 61, 62, 63, 74, 75, 78, 85, 89, 103, 109, 235, 253, 278, 341, 342, 344, 353, 355, 356], "replaybuff": [2, 34, 40, 41, 64, 67, 79, 119, 142, 146, 253, 258, 278, 326, 328, 334, 343, 348, 350, 353, 355, 356, 358], "liststorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 356], "veri": [2, 3, 94, 95, 342, 345, 348, 354, 356, 358, 359], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 32, 51, 56, 65, 67, 70, 72, 73, 81, 82, 85, 89, 94, 95, 103, 109, 144, 174, 198, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 275, 278, 336, 338, 341, 343, 344, 345, 346, 347, 353, 354, 356, 359], "complex": [2, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 341, 342, 345, 346], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 119, 120, 123, 124, 126, 127, 128, 129, 131, 134, 137, 139, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 249, 250, 252, 253, 255, 256, 257, 260, 261, 263, 265, 267, 268, 269, 270, 272, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 325, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 358, 359], "contigu": [2, 8, 53, 56, 57, 85, 89, 103, 109, 171, 343, 353, 354, 356, 358, 359], "tensorstorag": [2, 37, 76, 348, 356], "lazytensorstorag": [2, 34, 37, 40, 41, 64, 76, 146, 343, 350, 353, 356], "lazymemmapstorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 118, 119, 341, 342, 344, 348, 355, 356], "citizen": 2, "pytre": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67, 75, 76, 83, 84, 85, 89, 103, 109, 116, 126, 128, 134, 135, 137, 142, 150, 174, 180, 186, 187, 192, 195, 196, 197, 198, 207, 211, 212, 213, 230, 231, 237, 238, 243, 249, 250, 252, 256, 257, 259, 263, 265, 267, 268, 269, 270, 272, 280, 281, 282, 283, 299, 310, 312, 314, 323, 324, 356], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 35, 38, 44, 65, 70, 72, 73, 85, 88, 89, 90, 103, 109, 110, 111, 155, 159, 236, 240, 270, 312, 330, 331, 332, 338, 342, 343, 345, 347, 354, 359], "nest": [2, 3, 25, 27, 31, 33, 35, 37, 38, 47, 61, 62, 67, 78, 85, 88, 89, 90, 103, 109, 119, 153, 156, 175, 280, 281, 282, 283, 284, 338, 342, 343, 353, 354, 356, 358], "construct": [2, 5, 31, 34, 37, 40, 41, 51, 67, 85, 88, 89, 103, 104, 109, 124, 127, 167, 192, 196, 215, 240, 316, 336, 342, 343, 344, 346, 354, 356, 359], "time": [2, 3, 4, 7, 8, 14, 15, 17, 18, 19, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 81, 82, 85, 86, 89, 94, 95, 98, 102, 103, 104, 105, 106, 109, 115, 118, 120, 142, 149, 155, 156, 165, 174, 188, 190, 194, 196, 197, 235, 251, 257, 260, 264, 265, 267, 268, 272, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 316, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "wherea": [2, 21, 56, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 126, 265, 338, 349], "ram": [2, 88, 90, 356, 359], "prealloc": [2, 3, 354], "ve": [2, 39, 341, 344, 350], "been": [2, 3, 5, 7, 8, 17, 19, 20, 39, 67, 71, 85, 89, 93, 103, 109, 135, 153, 154, 158, 190, 194, 228, 233, 235, 341, 342, 343, 344, 352, 353, 354, 356, 359], "extend": [2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 67, 68, 72, 73, 75, 76, 77, 79, 80, 118, 146, 313, 338, 341, 342, 343, 344, 348, 350, 353, 355, 356, 358], "here": [2, 3, 4, 7, 8, 9, 10, 57, 58, 76, 83, 84, 85, 89, 93, 103, 104, 105, 109, 119, 306, 336, 337, 341, 342, 343, 344, 345, 346, 348, 350, 353, 354, 356, 358, 359], "start": [2, 3, 4, 5, 13, 20, 44, 58, 65, 72, 73, 86, 98, 103, 109, 174, 311, 340, 341, 342, 351, 353, 354, 356, 357, 359], "replay_buff": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 313, 328, 341, 342, 343, 348, 353, 356], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 34, 36, 37, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 122, 128, 129, 134, 135, 137, 139, 141, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 158, 163, 165, 171, 174, 175, 176, 187, 190, 191, 192, 194, 195, 196, 198, 200, 203, 204, 207, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 299, 309, 312, 325, 328, 336, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "rb": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 72, 73, 76, 119, 146, 342, 344, 348, 350, 353, 355, 356, 358], "10": [2, 7, 21, 22, 25, 34, 37, 39, 40, 41, 42, 44, 61, 62, 64, 67, 72, 73, 76, 78, 81, 82, 85, 86, 89, 94, 95, 99, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 119, 154, 156, 157, 176, 179, 184, 190, 191, 194, 195, 197, 200, 211, 222, 232, 233, 235, 236, 243, 250, 253, 255, 257, 267, 268, 269, 272, 278, 280, 281, 282, 283, 286, 307, 338, 340, 341, 342, 343, 344, 345, 346, 350, 353, 354, 355, 356, 357, 358, 359], "add": [2, 3, 4, 6, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 64, 67, 68, 76, 77, 79, 80, 85, 89, 103, 109, 119, 135, 192, 196, 205, 234, 249, 311, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 358], "string": [2, 17, 18, 19, 31, 36, 44, 59, 85, 89, 103, 109, 115, 141, 153, 163, 192, 196, 230, 236, 237, 248, 298, 315, 325, 337, 341, 343, 344, 356], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 72, 73, 76, 78, 102, 119, 142, 151, 154, 177, 178, 190, 191, 194, 224, 228, 230, 239, 240, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 272, 307, 341, 343, 346, 348, 356, 359], "30": [2, 37, 54, 136, 214, 215, 301, 342, 343, 344, 348, 353, 354, 356], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 78, 85, 86, 87, 88, 89, 98, 99, 103, 104, 105, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 131, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 320, 321, 322, 325, 328, 330, 331, 332, 336, 338, 341, 342, 343, 344, 347, 348, 353, 354, 356, 358, 359], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 118, 119, 120, 121, 126, 131, 132, 136, 137, 139, 141, 142, 145, 152, 153, 156, 159, 160, 161, 163, 167, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 249, 250, 251, 257, 259, 260, 264, 265, 266, 267, 268, 272, 280, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 307, 308, 309, 312, 313, 316, 318, 325, 326, 330, 331, 332, 354, 356], "tell": [2, 3, 4, 7, 104, 105, 341, 344, 348, 353], "our": [2, 3, 7, 8, 17, 37, 119, 299, 336, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 355, 356, 358], "far": [2, 39, 193, 219, 220, 350, 354, 359], "restrict": [2, 3, 342, 355, 356, 359], "empti": [2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 63, 67, 85, 89, 102, 103, 109, 124, 127, 141, 143, 156, 159, 161, 163, 303, 341, 354, 356], "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 76, 78, 83, 84, 85, 88, 89, 90, 91, 92, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 116, 119, 123, 126, 128, 129, 135, 137, 139, 141, 143, 144, 146, 149, 150, 153, 154, 155, 157, 158, 159, 161, 163, 171, 176, 177, 178, 180, 181, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 207, 210, 212, 222, 224, 225, 226, 227, 230, 231, 236, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 286, 289, 290, 291, 292, 294, 295, 296, 297, 299, 315, 336, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 353, 354, 355, 356, 357, 358, 359], "64": [2, 3, 33, 35, 38, 51, 56, 67, 119, 145, 180, 181, 189, 192, 196, 204, 212, 278, 341, 342, 343, 344, 346, 350, 352, 354, 355, 356, 358, 359], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 54, 56, 57, 58, 59, 61, 62, 64, 65, 72, 73, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 117, 123, 124, 125, 126, 127, 128, 129, 135, 137, 139, 141, 143, 144, 146, 150, 153, 155, 157, 158, 159, 161, 163, 167, 171, 174, 175, 176, 187, 190, 191, 192, 194, 195, 196, 200, 205, 206, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 286, 325, 336, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "unit8": 2, "img": 2, "randint": [2, 44, 67, 157, 356], "255": [2, 67, 157, 354, 356], "uint8": [2, 3, 33, 35, 38, 46, 51, 56, 83, 84, 128, 139, 157, 342, 349, 355, 356, 358], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 99, 103, 107, 108, 109, 110, 111, 118, 119, 124, 127, 128, 129, 134, 135, 139, 143, 144, 146, 149, 150, 153, 155, 164, 165, 171, 174, 176, 191, 192, 195, 196, 200, 215, 245, 249, 250, 252, 253, 255, 256, 257, 258, 263, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 310, 312, 314, 342, 344, 346, 349, 350, 352, 354, 355, 358, 359], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 44, 56, 58, 59, 76, 85, 86, 89, 93, 103, 104, 109, 110, 111, 119, 141, 158, 159, 161, 164, 165, 171, 174, 177, 178, 180, 181, 182, 183, 184, 189, 192, 196, 198, 199, 203, 204, 229, 240, 253, 258, 268, 270, 278, 299, 313, 320, 321, 322, 328, 330, 331, 336, 341, 342, 343, 344, 346, 349, 353, 354, 355, 356, 358, 359], "ask": [2, 8, 51, 56, 65, 72, 73, 299, 343, 344, 345, 346, 353, 355, 359], "do": [2, 3, 4, 7, 58, 85, 89, 103, 109, 110, 111, 142, 164, 165, 174, 204, 205, 226, 280, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 359], "automat": [2, 3, 5, 58, 61, 62, 67, 78, 85, 88, 89, 90, 103, 104, 105, 109, 124, 127, 137, 164, 177, 224, 236, 336, 341, 343, 345, 346, 353, 354, 356, 358], "hand": [2, 3, 7, 20, 25, 353, 354], "look": [2, 3, 5, 7, 8, 31, 85, 89, 98, 103, 104, 105, 109, 141, 142, 161, 236, 240, 241, 242, 337, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 358, 359], "assum": [2, 3, 6, 25, 32, 39, 40, 41, 52, 54, 56, 57, 58, 72, 85, 89, 103, 109, 118, 121, 131, 141, 142, 149, 155, 159, 161, 163, 171, 192, 196, 197, 222, 243, 253, 258, 270, 278, 289, 290, 291, 292, 294, 295, 296, 297, 299, 341, 343, 344, 352, 354], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 52, 71, 83, 84, 85, 88, 90, 91, 155, 193, 212, 219, 220, 341, 344, 353, 354, 356, 358], "dimens": [2, 3, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 52, 54, 56, 57, 58, 61, 62, 65, 72, 73, 76, 78, 83, 84, 85, 88, 89, 90, 91, 103, 109, 110, 111, 118, 119, 120, 131, 137, 139, 142, 149, 152, 157, 160, 165, 177, 178, 179, 184, 192, 194, 196, 198, 201, 202, 203, 205, 206, 211, 212, 216, 217, 218, 219, 222, 230, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 332, 336, 341, 342, 343, 344, 345, 353, 354, 356], "leav": [2, 25, 37, 85, 167, 175, 341, 348, 356], "tree": [2, 33, 35, 38, 85, 89, 103, 109, 356], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 75, 83, 84, 85, 86, 88, 89, 90, 91, 103, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 177, 178, 185, 192, 196, 198, 203, 204, 218, 224, 229, 230, 236, 237, 239, 240, 243, 244, 250, 257, 264, 266, 268, 270, 313, 318, 336, 341, 343, 352, 353, 354, 356, 359], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 119, 342, 343, 348, 356, 358, 359], "throw": [2, 31, 33, 35, 38, 85, 89, 103, 109, 359], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 72, 73, 76, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 158, 159, 174, 175, 176, 184, 187, 192, 196, 200, 212, 213, 221, 222, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 307, 313, 325, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "max": [2, 22, 32, 35, 40, 44, 59, 64, 65, 76, 126, 156, 218, 219, 220, 229, 235, 250, 251, 257, 266, 268, 270, 341, 343, 344, 350, 353], "label": [2, 35, 36, 39, 44, 341, 356], "100": [2, 13, 14, 15, 16, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 76, 81, 82, 85, 89, 94, 95, 103, 109, 122, 128, 137, 146, 151, 153, 203, 231, 299, 308, 328, 342, 343, 344, 345, 347, 350, 352, 353, 354, 355, 356, 358, 359], "rb_pytre": 2, "dim": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 72, 119, 120, 139, 155, 160, 165, 195, 197, 217, 222, 332, 342, 343, 354, 356], "b": [2, 3, 7, 8, 22, 25, 27, 33, 35, 37, 38, 39, 40, 41, 76, 190, 191, 194, 195, 203, 204, 205, 206, 212, 221, 243, 280, 281, 282, 283, 284, 286, 299, 336, 342, 355, 356], "randn": [2, 25, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 67, 72, 73, 78, 118, 137, 171, 179, 184, 187, 190, 191, 194, 195, 197, 201, 202, 203, 207, 210, 211, 213, 224, 225, 226, 227, 229, 230, 236, 237, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283, 315, 336, 356, 358, 359], "c": [2, 3, 6, 7, 25, 33, 35, 37, 38, 40, 41, 55, 137, 157, 194, 195, 342, 356], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 52, 62, 72, 73, 76, 78, 85, 89, 103, 109, 118, 120, 124, 126, 127, 137, 143, 146, 171, 174, 176, 190, 191, 192, 194, 195, 196, 197, 201, 202, 204, 212, 221, 232, 233, 235, 238, 246, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 286, 344, 356, 358], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 89, 92, 103, 109, 115, 119, 122, 124, 127, 135, 144, 151, 165, 167, 171, 204, 207, 222, 280, 281, 282, 283, 307, 315, 348, 352, 356, 359], "len": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 78, 139, 177, 178, 198, 204, 341, 348, 350, 354, 355, 356, 358], "ambigu": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 75, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 337, 341, 345, 354], "deal": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 341, 343, 353, 356], "interpret": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 342], "put": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 89, 110, 111, 165, 306, 332, 336, 342, 343, 344, 345, 354], "slice": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 72, 73, 118, 356], "solv": [2, 4, 9, 10, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 335, 341, 342, 343, 348, 350, 353, 354, 356], "clear": [2, 25, 27, 28, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 93, 103, 109, 308, 345, 348], "cut": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "distinct": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 347, 352], "between": [2, 3, 4, 5, 13, 14, 16, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 73, 85, 89, 103, 109, 110, 111, 126, 136, 147, 159, 167, 177, 178, 190, 192, 196, 198, 203, 204, 231, 236, 240, 249, 251, 252, 255, 256, 257, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 275, 280, 312, 316, 337, 341, 342, 344, 348, 353, 354, 356, 359], "view": [2, 3, 8, 26, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 116, 187, 190, 194, 198, 345, 354, 356, 358, 359], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 65, 67, 68, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 110, 111, 119, 120, 153, 154, 155, 156, 159, 175, 177, 178, 198, 201, 202, 204, 235, 237, 238, 246, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 320, 332, 335, 338, 343, 344, 348, 349, 350, 354, 356, 359], "through": [2, 3, 4, 5, 8, 11, 15, 17, 19, 20, 25, 27, 56, 81, 82, 93, 94, 95, 98, 103, 104, 105, 109, 124, 127, 142, 198, 212, 236, 240, 241, 242, 246, 280, 281, 282, 283, 336, 341, 342, 343, 345, 347, 352, 353, 354, 355, 356, 359], "collate_fn": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 356, 358], "__init__": [2, 3, 7, 85, 99, 115, 116, 124, 127, 143, 176, 187, 190, 194, 200, 244, 250, 252, 257, 263, 268, 270, 272, 338, 354, 359], "expect": [2, 3, 4, 7, 25, 31, 37, 43, 44, 71, 85, 89, 99, 102, 103, 109, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 137, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 167, 190, 191, 192, 194, 195, 196, 203, 204, 231, 235, 239, 242, 249, 250, 251, 252, 253, 255, 256, 257, 263, 264, 265, 267, 268, 269, 270, 272, 278, 320, 335, 336, 337, 338, 341, 343, 344, 345, 346, 347, 348, 353, 354, 356, 359], "major": 2, "worri": [2, 42], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 61, 62, 63, 74, 75, 78, 85, 86, 89, 93, 103, 109, 175, 341, 343, 345, 353, 354, 359], "though": [2, 4, 85, 89, 103, 109, 198, 343, 353], "regular": [2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 64, 70, 85, 89, 103, 109, 159, 213, 231, 237, 238, 239, 240, 258, 318, 334, 338, 341, 342, 345, 346, 350, 356, 359], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 39, 43, 45, 46, 85, 89, 103, 109, 136, 155, 193, 219, 220, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 342, 346, 349, 354, 356, 359], "latter": [2, 17, 18, 19, 31, 52, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 267, 330, 331], "inv": [2, 3, 122, 126, 139, 146, 151, 354], "method": [2, 3, 4, 11, 15, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 72, 73, 74, 75, 76, 78, 85, 88, 89, 90, 91, 103, 106, 109, 119, 123, 124, 125, 128, 129, 131, 135, 137, 141, 143, 144, 145, 146, 150, 153, 155, 158, 159, 161, 163, 176, 197, 224, 225, 226, 227, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 284, 298, 329, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 354, 356, 359], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 45, 46, 85, 89, 103, 109, 126, 129, 150, 157, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 201, 202, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 280, 356], "preprocess": [2, 44, 51, 53, 342], "multithread": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 100, 101, 348, 356], "thread": [2, 13, 14, 16, 33, 35, 38, 81, 82, 94, 95, 103, 109], "prefetch": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 341, 342, 344, 356], "advis": [2, 53, 359], "benchmark": [2, 3, 9, 82, 94, 95, 353], "techniqu": [2, 8, 342, 348, 356], "real": [2, 5, 56, 240, 337, 344, 354], "life": [2, 128], "adopt": [2, 3, 5, 341, 359], "throughput": [2, 9, 341], "constant": [2, 119, 137, 154, 338, 341, 343, 344, 359], "throughout": [2, 3, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 343, 359], "further": [2, 3, 5, 341, 343, 345], "refin": [2, 56, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278], "sampler": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 142, 253, 258, 278, 341, 343, 353, 356], "coupl": [2, 344, 346, 347, 354, 356], "how": [2, 3, 17, 18, 19, 31, 34, 40, 56, 64, 65, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 104, 105, 106, 109, 110, 111, 249, 251, 262, 264, 267, 299, 301, 316, 335, 336, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 358, 359], "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 33, 34, 35, 37, 38, 51, 52, 56, 61, 62, 65, 72, 73, 74, 75, 76, 78, 85, 86, 89, 103, 109, 116, 118, 120, 124, 126, 127, 135, 137, 142, 154, 155, 157, 165, 224, 232, 233, 236, 237, 240, 280, 281, 282, 283, 284, 303, 336, 340, 341, 342, 343, 344, 351, 353, 354, 356, 357, 358, 359], "first_elt": 2, "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 67, 72, 73, 78, 81, 82, 85, 88, 89, 91, 92, 94, 95, 99, 100, 101, 103, 106, 107, 108, 109, 116, 117, 119, 120, 122, 123, 125, 126, 135, 136, 137, 141, 146, 149, 151, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 176, 177, 178, 180, 181, 183, 184, 188, 190, 192, 193, 194, 195, 196, 198, 200, 202, 203, 204, 205, 206, 207, 210, 214, 215, 218, 219, 220, 222, 224, 228, 229, 231, 232, 233, 235, 238, 239, 242, 243, 246, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 278, 279, 280, 281, 282, 283, 286, 287, 288, 307, 314, 328, 332, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359], "128": [2, 51, 52, 56, 73, 81, 82, 94, 95, 181, 184, 342, 344, 350, 354, 355, 356], "wa": [2, 3, 5, 7, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 85, 89, 103, 109, 159, 167, 175, 194, 262, 271, 286, 337, 342, 343, 345, 346, 352, 356, 358], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 51, 53, 56, 58, 59, 64, 65, 67, 72, 73, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 119, 120, 124, 125, 126, 127, 134, 137, 143, 144, 146, 149, 153, 155, 156, 157, 165, 171, 174, 175, 177, 178, 184, 187, 192, 198, 201, 202, 203, 204, 207, 210, 213, 224, 225, 226, 227, 229, 230, 232, 233, 235, 237, 239, 242, 244, 265, 325, 328, 336, 338, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 120], "larger": [2, 4, 256, 263], "volum": 2, "due": [2, 3, 5, 347, 355, 356, 359], "serialis": [2, 33, 35, 38], "memorymappedtensor": [2, 33, 35, 44, 51, 61, 301, 348, 355], "well": [2, 3, 8, 20, 22, 31, 34, 36, 37, 40, 41, 70, 74, 85, 89, 103, 109, 194, 214, 215, 265, 284, 341, 342, 344, 345, 346, 347, 349, 355, 356, 358, 359], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 104, 105, 109, 110, 111, 124, 125, 127, 149, 152, 154, 160, 176, 194, 239, 240, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 306, 336, 341, 343, 344, 348], "file": [2, 6, 7, 8, 33, 35, 38, 51, 52, 53, 54, 56, 57, 58, 110, 298, 299, 301, 338, 340, 341, 342, 356, 357, 359], "locat": [2, 7, 33, 35, 38, 44, 58, 85, 89, 103, 109, 128, 137, 148, 193, 207, 219, 220, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 341, 342, 343, 349, 353, 356], "improv": [2, 4, 132, 249, 337, 353, 356], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 103, 109, 343, 356], "found": [2, 3, 6, 7, 10, 20, 22, 25, 31, 33, 35, 38, 44, 51, 52, 53, 54, 56, 57, 58, 72, 73, 83, 84, 85, 88, 89, 90, 93, 103, 109, 116, 119, 146, 149, 156, 165, 175, 232, 233, 236, 240, 264, 265, 267, 341, 342, 344, 345, 347, 349, 356], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 38, 43, 45, 46, 65, 126, 194, 195, 256, 344, 348, 356], "sharabl": [2, 103, 109], "popul": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 134, 155, 341, 343, 344, 346, 348, 354, 356], "collabor": [2, 56], "rather": [2, 4, 75, 144, 341, 342, 343, 345, 347, 353, 356], "incur": [2, 81, 82, 94, 95], "some": [2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 46, 52, 58, 61, 62, 67, 76, 78, 81, 82, 85, 89, 94, 95, 103, 104, 105, 109, 110, 111, 141, 159, 161, 167, 180, 192, 196, 217, 240, 241, 242, 299, 307, 319, 336, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 356, 358, 359], "transmiss": 2, "overhead": [2, 81, 82, 94, 95, 103, 109], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 67, 85, 89, 103, 109, 158, 164, 167, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 239, 240, 241, 243, 246, 265, 267, 342, 344, 348, 354, 356], "instanti": [2, 3, 20, 33, 34, 35, 37, 38, 40, 41, 93, 158, 204, 341, 342, 346, 347, 349, 353, 354, 356, 359], "content": [2, 8, 15, 25, 27, 33, 34, 35, 37, 38, 40, 41, 71, 85, 88, 89, 90, 100, 103, 109, 143, 177, 178, 198, 203, 204, 236, 265, 343, 354, 358], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 85, 89, 98, 103, 104, 105, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 171, 187, 207, 224, 225, 226, 227, 230, 236, 237, 239, 240, 242, 243, 244, 245, 270, 278, 312, 334, 336, 337, 341, 342, 343, 344, 346, 347, 355, 358], "writer": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 68, 76, 77, 80, 343, 356], "tensordictroundrobinwrit": [2, 67], "current": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 73, 85, 89, 91, 100, 103, 109, 119, 142, 154, 155, 156, 158, 159, 168, 169, 174, 188, 197, 215, 235, 258, 270, 302, 338, 341, 342, 343, 344, 347, 353, 354, 356, 358, 359], "goe": [2, 4, 104, 105, 341, 343, 353, 359], "prioritizedsampl": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 67, 253, 258, 278, 341, 356], "access": [2, 3, 7, 8, 31, 34, 53, 55, 85, 89, 103, 109, 141, 161, 332, 335, 341, 345, 353, 354, 356], "show": [2, 31, 85, 89, 103, 109, 204, 299, 336, 341, 343, 344, 353, 354, 356, 358], "tensordictreplaybuff": [2, 34, 37, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 72, 73, 76, 118, 119, 313, 328, 334, 341, 342, 344, 356], "mp": [2, 17, 18, 19, 86, 165], "def": [2, 3, 11, 21, 31, 37, 85, 86, 89, 99, 103, 109, 115, 116, 124, 127, 143, 176, 187, 190, 191, 194, 195, 200, 236, 244, 250, 252, 257, 263, 265, 268, 270, 272, 338, 341, 342, 352, 353, 354, 356, 358, 359], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 39, 40, 64, 65, 85, 89, 99, 103, 104, 105, 109, 116, 124, 126, 127, 143, 153, 154, 159, 162, 165, 175, 176, 190, 192, 196, 200, 228, 232, 233, 235, 236, 237, 238, 239, 240, 249, 250, 252, 253, 255, 257, 258, 259, 262, 263, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 284, 312, 316, 318, 321, 322, 327, 328, 338, 342, 343, 344, 347, 350, 353, 354, 356, 358, 359], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 76, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 96, 97, 103, 109, 116, 118, 120, 124, 125, 126, 127, 134, 135, 137, 146, 149, 155, 157, 159, 165, 174, 176, 187, 192, 196, 199, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237, 239, 242, 244, 278, 281, 282, 283, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 307, 315, 325, 336, 337, 341, 344, 353, 354, 358, 359], "__name__": [2, 21, 86, 342], "__main__": [2, 21, 86], "21": [2, 56, 57, 73, 103, 104, 105, 109, 340, 342, 343, 344, 350, 352, 353, 354, 355, 357], "proc": 2, "target": [2, 4, 8, 20, 31, 85, 86, 89, 103, 109, 154, 158, 239, 240, 249, 250, 251, 252, 253, 255, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 278, 279, 280, 281, 282, 283, 284, 319, 327, 328, 337, 338, 344, 350, 354], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 51, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 123, 141, 143, 152, 155, 158, 159, 160, 162, 163, 176, 177, 178, 186, 192, 196, 198, 199, 200, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 306, 309, 313, 316, 332, 341, 342, 356, 359], "join": [2, 86, 334, 342, 343], "now": [2, 3, 7, 34, 103, 119, 204, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 355, 356, 359], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 42, 43, 44, 45, 46, 51, 56, 59, 65, 72, 73, 75, 85, 89, 94, 95, 103, 109, 142, 165, 176, 177, 178, 180, 182, 184, 190, 194, 198, 200, 203, 204, 224, 239, 244, 307, 313, 341, 343, 344, 348, 350, 354, 356, 359], "20": [2, 44, 57, 72, 73, 76, 85, 89, 93, 103, 109, 154, 190, 191, 194, 195, 229, 307, 342, 343, 344, 353, 354, 356, 358, 359], "_data": [2, 354], "It": [2, 3, 4, 7, 22, 31, 36, 39, 40, 42, 44, 52, 58, 67, 70, 76, 80, 85, 89, 91, 99, 100, 103, 104, 105, 109, 110, 111, 118, 128, 135, 137, 142, 154, 159, 164, 167, 180, 182, 188, 203, 204, 212, 214, 215, 221, 222, 231, 232, 235, 238, 240, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 279, 280, 306, 312, 325, 335, 336, 337, 341, 342, 344, 345, 353, 354, 355, 356, 358, 359], "difficult": [2, 4, 103, 349], "pai": [2, 8, 341, 344], "attent": [2, 8, 341, 344, 359], "word": [2, 3, 39, 51, 52, 54, 56, 57, 58, 265, 341, 348, 354, 359], "1m": [2, 51, 56, 319, 341, 343, 344], "multidimension": [2, 40, 64, 65, 356], "doe": [2, 3, 17, 33, 34, 35, 38, 40, 44, 51, 52, 56, 64, 65, 74, 75, 80, 85, 89, 103, 109, 110, 111, 184, 190, 191, 192, 194, 195, 196, 205, 222, 229, 241, 242, 249, 251, 258, 264, 267, 279, 316, 336, 338, 341, 342, 343, 344, 345, 348, 354, 356, 359], "howev": [2, 3, 5, 7, 31, 85, 89, 103, 109, 119, 149, 154, 159, 270, 336, 341, 342, 344, 347, 354, 356, 359], "flatten": [2, 33, 35, 38, 76, 131, 313, 344, 353], "capac": [2, 34, 37, 40, 41, 61, 62, 64, 72, 78, 343, 348], "There": [2, 10, 67, 192, 196, 336, 338, 343, 344, 346, 348, 353, 354, 356, 359], "circumv": 2, "account": [2, 61, 62, 78, 119, 201, 202, 336, 342, 344, 356, 359], "save": [2, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 164, 298, 299, 301, 306, 316, 338, 348, 349, 350, 353], "ndim": [2, 34, 37, 40, 41, 61, 62, 76, 78, 85, 89, 103, 109], "convent": [2, 3, 51, 52, 53, 54, 55, 56, 57, 58, 85, 89, 103, 109, 110, 111, 337, 341, 344, 353, 354], "overridden": [2, 3, 51, 53, 54, 56, 57, 58, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 280, 282, 283, 344], "dim_extend": [2, 34, 37, 40, 41], "recommend": [2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 76, 93, 348, 353], "obtain": [2, 7, 39, 51, 85, 89, 103, 109, 118, 141, 154, 163, 176, 212, 313, 341, 343, 345, 346, 347, 353], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 43, 45, 46, 48, 67, 85, 89, 99, 103, 104, 105, 109, 110, 112, 118, 119, 128, 135, 153, 154, 158, 159, 164, 165, 177, 178, 201, 202, 203, 204, 228, 230, 236, 237, 240, 243, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 299, 316, 328, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 359], "counterpart": 2, "desir": [2, 3, 31, 85, 89, 103, 109, 123, 137, 139, 141, 142, 155, 158, 159, 161, 163, 172, 173, 177, 178, 198, 204, 224, 230, 231, 236, 237, 238, 239, 240, 336, 341, 353, 354, 356], "diversifi": 2, "offer": [2, 3, 7, 81, 82, 85, 89, 94, 95, 103, 109, 336, 341, 342, 345, 347, 348, 354, 356, 359], "accomplish": [2, 167, 345], "slicesampl": [2, 51, 65, 356], "anoth": [2, 3, 8, 33, 35, 38, 56, 85, 88, 89, 90, 93, 103, 109, 124, 125, 127, 155, 158, 198, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 336, 337, 341, 343, 344, 346, 347, 352, 353, 354, 359], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 119, 167, 250, 255, 256, 263, 306, 338, 345, 355, 356, 358], "reshap": [2, 31, 56, 72, 76, 192, 196, 198, 343, 353], "docstr": [2, 31, 85, 89, 103, 109, 345, 346], "extens": [2, 34, 37, 40, 41, 73, 338, 356], "detail": [2, 3, 5, 6, 7, 31, 85, 89, 103, 104, 105, 109, 157, 159, 187, 190, 194, 231, 249, 258, 267, 335, 342, 348, 352, 356], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 37, 38, 40, 41, 85, 89, 103, 109, 124, 127, 165, 175, 190, 192, 194, 196, 235, 236, 240, 258, 342, 346, 352, 353, 359], "without": [2, 3, 7, 9, 31, 39, 51, 52, 56, 72, 73, 85, 89, 103, 109, 110, 111, 116, 124, 127, 157, 190, 191, 194, 195, 226, 227, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 279, 280, 281, 282, 283, 284, 328, 335, 336, 341, 342, 343, 345, 346, 347, 348, 353, 354, 356, 359], "scenario": [2, 103, 110, 111, 341, 346, 353, 354], "happi": 2, "concaten": [2, 8, 20, 29, 30, 56, 119, 120, 137, 158, 194, 198, 242, 341, 342, 346, 353, 354, 356, 359], "interrupt": [2, 89, 286], "introduc": [2, 103, 109, 190, 192, 194, 196, 235, 341], "schedul": [2, 4, 7, 39, 312, 343, 354], "transformedenv": [2, 3, 13, 85, 86, 89, 103, 109, 116, 119, 122, 123, 124, 127, 128, 129, 131, 134, 135, 136, 137, 139, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 158, 165, 192, 196, 299, 325, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 355, 356, 358, 359], "stepcount": [2, 13, 85, 89, 103, 109, 110, 111, 158, 341, 342, 343, 344, 345, 350, 353, 358], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 76, 85, 86, 89, 91, 103, 109, 119, 122, 123, 128, 134, 135, 137, 139, 144, 145, 146, 149, 151, 154, 155, 156, 158, 159, 165, 192, 196, 299, 325, 328, 334, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 358, 359], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 119, 146, 348, 356], "cartpol": [2, 83, 84, 85, 89, 103, 109, 119, 149, 154, 342, 344, 346, 348, 349, 350, 356, 359], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 52, 54, 76, 85, 86, 88, 89, 90, 94, 95, 100, 103, 109, 119, 122, 129, 134, 135, 137, 144, 146, 149, 151, 153, 154, 155, 156, 158, 192, 196, 275, 289, 290, 291, 292, 294, 295, 296, 297, 336, 342, 344, 345, 346, 347, 348, 349, 350, 354, 356, 358, 359], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 81, 82, 85, 89, 94, 95, 99, 103, 104, 105, 109, 116, 119, 124, 127, 135, 143, 146, 176, 187, 200, 213, 215, 224, 230, 236, 237, 250, 253, 255, 268, 270, 272, 328, 336, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353, 354, 355, 356, 358, 359], "total_fram": [2, 13, 14, 15, 16, 17, 18, 19, 20, 119, 146, 316, 319, 328, 338, 341, 342, 343, 344, 348, 350, 353, 356, 358], "num_slic": [2, 51, 56, 65, 72, 73, 356], "8": [2, 6, 7, 37, 56, 57, 64, 65, 72, 73, 81, 82, 83, 84, 85, 89, 103, 109, 154, 177, 178, 180, 181, 189, 198, 225, 226, 227, 236, 239, 242, 263, 340, 341, 342, 346, 348, 353, 354, 355, 356, 357, 358, 359], "traj_kei": [2, 65, 72, 73, 356], "traj_id": [2, 3, 13, 14, 15, 22, 146, 344, 348, 356, 358], "truncated_kei": [2, 65, 72, 73, 146, 153], "strict_length": [2, 51, 56, 65, 72, 73], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 37, 41, 42, 61, 62, 64, 65, 73, 78, 85, 89, 103, 109, 141, 146, 149, 159, 163, 191, 195, 207, 213, 231, 236, 238, 239, 240, 280, 281, 282, 283, 307, 319, 341, 342, 343, 344, 346, 347, 348, 350, 353, 354, 356, 358, 359], "enumer": [2, 13, 14, 15, 20, 31, 37, 41, 73, 85, 89, 103, 109, 273, 337, 341, 342, 343, 344, 350, 356, 358], "break": [2, 5, 13, 14, 15, 20, 31, 37, 41, 51, 53, 54, 56, 57, 58, 59, 65, 72, 73, 76, 85, 89, 103, 109, 119, 146, 165, 342, 348, 350, 356, 358], "step_count": [2, 13, 14, 15, 85, 89, 94, 95, 103, 109, 153, 343, 344, 345, 350, 358], "32": [2, 21, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 73, 107, 108, 110, 111, 177, 178, 179, 180, 181, 184, 189, 198, 203, 204, 208, 209, 211, 212, 221, 278, 342, 344, 346, 347, 354, 355, 356, 358, 359], "33": [2, 25, 31, 67, 85, 89, 103, 109, 177, 178, 198, 342, 343, 354, 356], "34": [2, 177, 178, 198, 342, 354], "35": [2, 177, 178, 198, 342, 353, 354, 355], "36": [2, 340, 342, 343, 353, 354, 356, 357], "37": [2, 118, 342, 354, 355], "38": [2, 7, 340, 342, 354, 357], "39": [2, 54, 94, 95, 342, 343, 354, 355], "40": [2, 94, 95, 340, 342, 343, 344, 349, 353, 354, 357], "41": [2, 342, 344, 354], "11": [2, 10, 22, 26, 32, 44, 61, 62, 64, 73, 78, 86, 157, 176, 200, 340, 342, 343, 344, 353, 354, 356, 357], "12": [2, 10, 57, 61, 62, 73, 78, 94, 95, 103, 107, 108, 109, 340, 342, 343, 350, 354, 356, 357], "14": [2, 6, 11, 58, 72, 73, 85, 89, 103, 109, 137, 342, 344, 353, 354, 356, 358], "15": [2, 22, 57, 73, 85, 89, 103, 109, 229, 235, 259, 342, 343, 344, 354, 356], "16": [2, 3, 31, 57, 65, 73, 81, 82, 85, 89, 94, 95, 103, 109, 119, 342, 343, 344, 354, 355, 356], "17": [2, 57, 73, 103, 325, 340, 342, 343, 352, 354, 357], "could": [2, 3, 4, 6, 22, 342, 343, 349, 353, 355, 359], "sai": [2, 31, 85, 89, 103, 109, 203, 355, 359], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 32, 63, 65, 72, 73, 85, 88, 89, 90, 93, 103, 109, 124, 127, 142, 149, 237, 342, 343, 344, 353, 354], "handl": [2, 3, 20, 31, 85, 89, 103, 109, 164, 165, 196, 198, 316, 330, 331, 341, 342, 343, 345, 347, 353, 356], "suggest": [2, 278, 341, 353], "serialenv": [2, 3, 85, 89, 103, 155, 334, 359], "lambda": [2, 11, 13, 14, 15, 16, 20, 21, 37, 76, 85, 86, 89, 103, 109, 115, 135, 155, 222, 230, 237, 259, 261, 280, 283, 291, 292, 296, 297, 328, 337, 341, 342, 353, 356, 358, 359], "squeez": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 119, 152, 154, 177, 178, 216, 217, 341, 354, 356], "6": [2, 7, 13, 14, 15, 16, 22, 37, 51, 57, 58, 65, 73, 83, 84, 103, 107, 108, 137, 139, 154, 177, 178, 185, 191, 197, 198, 203, 204, 208, 218, 236, 244, 325, 342, 348, 353, 354, 356, 358], "5": [2, 3, 22, 23, 25, 27, 34, 37, 40, 41, 51, 67, 72, 73, 76, 86, 94, 95, 100, 107, 108, 110, 111, 118, 146, 153, 154, 176, 177, 178, 187, 188, 190, 193, 194, 197, 198, 200, 203, 204, 208, 213, 219, 220, 229, 230, 237, 243, 264, 267, 269, 272, 336, 340, 341, 342, 346, 348, 350, 353, 354, 356, 357, 358, 359], "4": [2, 3, 7, 23, 25, 26, 27, 32, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 72, 73, 78, 81, 82, 83, 84, 85, 89, 94, 95, 96, 97, 98, 99, 101, 103, 107, 108, 109, 116, 119, 128, 146, 153, 154, 165, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 191, 194, 195, 197, 198, 200, 203, 204, 207, 208, 209, 210, 211, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 298, 336, 340, 341, 342, 343, 344, 346, 348, 349, 353, 354, 355, 356, 357, 358, 359], "7": [2, 6, 10, 26, 32, 34, 37, 40, 65, 73, 85, 89, 103, 109, 154, 176, 177, 178, 197, 198, 200, 203, 286, 340, 341, 342, 344, 348, 353, 354, 355, 356, 357, 358], "9": [2, 3, 7, 22, 31, 34, 37, 40, 57, 58, 65, 73, 76, 83, 84, 98, 104, 105, 154, 165, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278, 337, 340, 341, 342, 343, 344, 345, 348, 353, 354, 356, 357], "18": [2, 57, 73, 107, 108, 110, 111, 204, 340, 342, 343, 348, 353, 354, 355, 357], "19": [2, 57, 72, 73, 76, 342, 343, 354], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 53, 103, 109, 158, 160, 204, 337, 338, 341, 342, 353, 356, 358], "differ": [2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 43, 44, 45, 46, 52, 53, 56, 70, 81, 82, 85, 89, 94, 95, 98, 103, 104, 105, 109, 119, 126, 137, 144, 159, 160, 187, 190, 191, 192, 194, 195, 196, 198, 200, 203, 204, 213, 263, 267, 275, 280, 281, 282, 286, 287, 288, 312, 316, 318, 330, 331, 336, 337, 338, 341, 342, 343, 345, 347, 349, 352, 353, 354, 355, 356, 359], "congruent": 2, "shape": [2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 67, 76, 78, 83, 84, 85, 88, 89, 90, 94, 95, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120, 124, 127, 128, 129, 135, 137, 139, 143, 144, 146, 150, 153, 155, 157, 165, 166, 167, 171, 174, 176, 179, 184, 185, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 210, 211, 212, 213, 218, 221, 224, 225, 226, 227, 229, 230, 231, 236, 237, 238, 239, 242, 243, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 313, 316, 328, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 358, 359], "custom": [2, 3, 5, 31, 85, 89, 103, 109, 161, 203, 204, 243, 258, 267, 273, 332, 336, 341, 342, 343, 344, 346, 347, 349, 353], "name": [2, 3, 6, 7, 11, 15, 31, 33, 35, 38, 44, 51, 53, 55, 58, 59, 81, 83, 85, 89, 94, 98, 100, 103, 104, 105, 106, 109, 110, 111, 112, 126, 129, 144, 149, 150, 153, 159, 161, 164, 175, 192, 196, 230, 237, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 280, 282, 283, 284, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 325, 338, 341, 342, 343, 344, 347, 349, 353, 354, 359], "randomcroptensordict": [2, 341], "unlik": [2, 71, 110, 111, 258, 267, 342, 346, 348, 358], "stop": [2, 3, 15, 20, 39, 58, 65, 72, 73, 85, 89, 103, 109, 343, 348, 353, 358, 359], "signal": [2, 3, 22, 51, 52, 54, 56, 57, 58, 65, 72, 73, 76, 89, 110, 111, 119, 128, 153, 156, 175, 337, 341, 343, 353, 356, 359], "isn": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 56, 64, 76, 128, 167, 230, 239, 346, 347, 349, 353], "separ": [2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 51, 53, 141, 163, 250, 252, 255, 257, 268, 270, 272, 341, 342, 346, 347, 353, 356, 359], "disk": [2, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 316, 338, 341, 342, 344, 348, 349, 356], "dump": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 298, 299, 349, 350], "load": [2, 6, 7, 13, 14, 15, 16, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 84, 85, 89, 103, 109, 115, 165, 332, 338, 341, 343, 356], "json": 2, "metadata": [2, 51, 52, 343, 345, 347, 348, 353, 359], "anticip": [2, 124, 127], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 56], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 43, 45, 46, 52, 164, 167, 224, 230, 231, 236, 237, 238, 239, 240, 343, 353, 354, 356], "exact": [2, 3, 103, 194], "statu": [2, 3, 85], "prioriti": [2, 4, 34, 40, 41, 61, 62, 63, 64, 65, 74, 75, 78, 252, 253, 255, 256, 257, 258, 263, 268, 270, 272, 278, 338, 341, 342, 356], "heap": 2, "under": [2, 3, 4, 20, 31, 39, 51, 52, 53, 54, 56, 57, 58, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 224, 230, 231, 236, 237, 238, 239, 240, 265, 280, 281, 282, 283, 284, 299, 337, 341, 342, 346, 354, 359], "hood": [2, 20, 51, 85, 89, 103, 109, 354], "just": [2, 3, 4, 11, 75, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 122, 175, 204, 307, 336, 338, 341, 342, 343, 344, 345, 346, 348, 353, 354, 356, 358, 359], "public": [2, 55, 141, 163], "serializ": 2, "altern": [2, 4, 26, 100, 184, 201, 202, 203, 248, 341, 343, 353], "state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 85, 89, 103, 109, 159, 165, 270, 332, 338, 341, 342, 359], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 85, 89, 103, 109, 159, 165, 270, 338, 341], "drawback": 2, "struggl": 2, "big": [2, 343, 348, 356, 359], "sequenti": [2, 9, 31, 85, 89, 103, 109, 118, 135, 241, 242, 267, 336, 343, 344, 346, 353, 354, 355, 359], "consist": [2, 3, 31, 34, 37, 40, 41, 53, 56, 85, 89, 103, 109, 135, 164, 178, 198, 341, 342, 343, 354, 355, 359], "known": [2, 3, 5, 7, 8, 287, 288, 341, 342, 345], "seamless": [2, 198], "integr": [2, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 183, 192, 196, 200, 239, 336, 345, 346, 348, 353, 354, 355], "within": [2, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 43, 45, 46, 56, 85, 89, 103, 106, 109, 119, 124, 127, 128, 153, 164, 165, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 253, 258, 278, 336, 342, 345, 346, 347, 348, 349, 350, 354, 358], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 341, 342, 347], "essenti": [2, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 342, 345, 354, 356], "understand": [2, 3, 8, 341, 342, 345, 346, 353], "purpos": [2, 3, 7, 85, 89, 103, 109, 119, 190, 328, 341, 343, 344, 347, 349, 353, 355, 359], "interact": [2, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 56, 85, 89, 103, 109, 159, 236, 240, 341, 343, 345, 346, 348, 353, 354, 359], "guid": [2, 104, 105, 107, 108, 154, 335, 341, 353], "explan": [2, 31, 85, 89, 103, 109], "effect": [2, 3, 25, 31, 34, 37, 40, 41, 51, 56, 65, 67, 70, 72, 73, 85, 89, 103, 109, 119, 159, 316, 341, 346, 356, 359], "realm": [2, 346], "As": [2, 3, 4, 51, 85, 89, 98, 103, 104, 105, 109, 146, 240, 280, 336, 341, 342, 343, 344, 345, 347, 348, 353, 354, 355, 356, 358, 359], "practition": 2, "often": [2, 3, 8, 262, 316, 341, 342, 345, 347, 354, 356, 359], "encount": [2, 4, 56, 335, 342, 346, 354], "situat": 2, "sometim": [2, 3, 344, 359], "discard": [2, 3, 44, 52, 54, 89, 161, 174, 298, 356, 359], "variabl": [2, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 53, 54, 57, 58, 81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 101, 102, 106, 110, 111, 190, 191, 192, 194, 195, 196, 200, 225, 226, 227, 265, 268, 338, 342], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 43, 51, 52, 54, 56, 57, 58, 65, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 133, 134, 135, 137, 138, 139, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 174, 179, 180, 181, 182, 183, 184, 187, 192, 196, 197, 203, 208, 209, 211, 213, 214, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237, 244, 245, 249, 250, 251, 252, 253, 255, 256, 257, 260, 263, 264, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 325, 328, 336, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 359], "immedi": [2, 25, 27, 31, 85, 89, 103, 109, 279, 353], "200": [2, 13, 14, 15, 20, 31, 51, 85, 88, 89, 90, 103, 109, 110, 111, 146, 180, 181, 188, 214, 215, 341, 344, 348, 350, 354, 356], "199": [2, 354, 356], "info": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 70, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 104, 105, 107, 108, 109, 110, 111, 161, 164, 166, 306, 345, 350, 353, 356], "At": [2, 199, 232, 342, 343, 344, 348, 352, 354, 355], "glanc": [2, 345], "seem": [2, 341, 344, 345], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 39, 85, 89, 98, 103, 104, 105, 109, 119, 142, 190, 192, 194, 196, 221, 225, 226, 227, 245, 336, 342, 344, 345], "less": [2, 100, 222, 330, 331, 337, 343, 344, 356, 358], "must": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 51, 53, 54, 56, 57, 58, 59, 61, 62, 63, 65, 72, 73, 74, 75, 76, 78, 81, 85, 86, 89, 94, 103, 104, 105, 106, 109, 110, 119, 122, 128, 132, 135, 137, 139, 150, 154, 155, 156, 159, 160, 165, 177, 178, 187, 192, 196, 198, 201, 202, 203, 204, 213, 224, 230, 231, 236, 237, 238, 239, 240, 243, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 341, 342, 343, 344, 346, 352, 354, 356], "omit": [2, 311, 343, 347, 354, 356], "proper": [2, 3, 4, 6, 7, 280, 281, 282, 283, 342, 343, 353, 356], "imposs": [2, 76, 167, 249, 251, 264, 267, 269], "determin": [2, 33, 34, 35, 38, 40, 52, 64, 65, 85, 89, 103, 109, 110, 111, 141, 163, 203, 235, 342, 346, 353], "correspond": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 46, 53, 56, 58, 64, 65, 85, 89, 99, 103, 109, 141, 155, 159, 163, 165, 192, 194, 196, 201, 202, 232, 233, 235, 236, 240, 253, 256, 257, 270, 278, 280, 281, 282, 283, 284, 341, 342, 343, 345, 347, 348, 349, 353, 354, 355], "complic": [2, 354, 356, 359], "matter": [2, 348], "inconsist": [2, 359], "miss": [2, 3, 4, 6, 7, 11, 25, 31, 85, 89, 103, 109, 159, 174, 241, 242, 270, 335, 341, 344], "behavior": [2, 4, 31, 85, 89, 103, 109, 159, 256, 263, 344, 353, 354], "primari": [2, 348], "elimin": [2, 3, 345], "represent": [2, 27, 28, 31, 85, 89, 103, 109, 141, 161, 163, 341, 354, 355, 359], "built": [2, 3, 5, 7, 67, 81, 82, 88, 94, 95, 102, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278, 326, 328, 329, 332, 341, 342, 343, 344, 347, 349, 356, 359], "upon": [2, 8, 354], "canon": 2, "definit": [2, 32, 74, 203], "markov": [2, 3, 345, 359], "decis": [2, 3, 179, 211, 229, 254, 266, 344, 345, 346, 353, 356, 359], "mdp": [2, 345, 354], "context": [2, 3, 5, 8, 31, 85, 86, 89, 102, 103, 109, 155, 160, 204, 205, 229, 276, 277, 280, 281, 282, 283, 285, 293, 299, 312, 336, 337, 341, 342, 343, 353, 354, 355, 356], "condit": [2, 44, 154, 230, 231, 237, 238, 248, 341, 354, 356], "complet": [2, 7, 9, 71, 89, 119, 153, 335, 337, 341, 343, 345, 352], "termin": [2, 3, 7, 31, 39, 51, 52, 54, 56, 57, 58, 83, 84, 85, 88, 89, 90, 94, 95, 103, 104, 105, 107, 108, 109, 110, 111, 128, 143, 175, 176, 192, 196, 200, 241, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 358, 359], "truncat": [2, 3, 13, 14, 15, 16, 36, 42, 44, 51, 52, 54, 56, 57, 58, 65, 72, 73, 83, 84, 85, 88, 89, 90, 103, 104, 105, 109, 110, 111, 128, 129, 136, 143, 146, 153, 175, 192, 196, 220, 286, 341, 343, 344, 345, 346, 348, 349, 352, 355, 356, 358, 359], "reward": [2, 3, 13, 14, 15, 31, 33, 38, 39, 43, 44, 51, 54, 56, 57, 58, 59, 64, 65, 76, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 116, 117, 122, 123, 124, 125, 127, 128, 129, 135, 139, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 158, 159, 160, 162, 163, 165, 171, 174, 176, 192, 200, 229, 245, 249, 250, 252, 253, 255, 256, 257, 260, 263, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 310, 312, 314, 332, 337, 338, 341, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 358, 359], "imit": [2, 3], "addit": [2, 3, 4, 31, 52, 85, 89, 103, 109, 110, 123, 141, 155, 158, 159, 161, 163, 190, 228, 229, 239, 248, 265, 280, 337, 341, 342, 345, 353, 356], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 42, 56, 85, 86, 89, 92, 103, 109, 177, 178, 198, 204, 337, 338, 341, 342, 343, 344, 345, 353, 354, 356], "stateless": [2, 3, 85, 89, 103, 109, 158, 265, 341, 345, 354, 359], "simul": [2, 3, 5, 7, 8, 81, 82, 91, 94, 95, 106, 110, 111, 114, 176, 200, 336, 341, 343, 345, 349, 353], "furthermor": [2, 353], "certain": [2, 4, 17, 18, 19, 20, 31, 44, 85, 89, 103, 109, 115, 132, 153, 159, 191, 195, 232, 264, 336, 341, 342, 343, 350, 353, 359], "organ": [2, 354, 356], "composit": [2, 3, 25, 27, 70, 75, 80, 85, 89, 103, 109, 343, 346, 354], "accommod": [2, 3, 345, 346], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 43, 45, 46, 64, 65], "unambigu": 2, "distinguish": [2, 110, 111], "happen": [2, 3, 85, 89, 103, 109, 228, 342, 347, 348, 349, 355, 359], "limit": [2, 39, 85, 89, 99, 103, 109, 119, 135, 341, 342, 344, 353, 354], "everyth": [2, 342, 343, 344, 349, 350], "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 56, 164, 165, 336, 341, 348, 353], "rule": [2, 103, 124, 127, 240, 336, 343], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 33, 35, 36, 38, 44, 48, 52, 53, 54, 55, 57, 58, 72, 73, 83, 84, 85, 88, 89, 90, 91, 103, 106, 109, 110, 111, 119, 121, 122, 124, 127, 128, 131, 134, 137, 139, 141, 144, 146, 149, 151, 153, 154, 155, 163, 165, 174, 175, 192, 201, 202, 229, 230, 237, 238, 250, 270, 280, 281, 282, 283, 336, 341, 343, 344, 345, 346, 347, 349, 353, 354, 355, 356, 359], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 33, 35, 36, 38, 39, 40, 41, 42, 44, 51, 54, 56, 57, 58, 61, 62, 64, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 159, 174, 176, 187, 192, 196, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 320, 325, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "taken": [2, 3, 85, 89, 103, 109, 145, 201, 202, 233, 337, 341, 343, 344, 346, 353, 354], "is_shar": [2, 3, 13, 14, 15, 22, 25, 33, 35, 36, 38, 39, 40, 41, 42, 44, 51, 54, 56, 57, 58, 59, 61, 62, 64, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 98, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 124, 127, 128, 129, 139, 143, 144, 146, 150, 153, 155, 165, 174, 176, 187, 192, 196, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 231, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 325, 336, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "brought": [2, 343, 344, 346], "step_mdp": [2, 3, 85, 89, 103, 109, 192, 196, 334, 344, 345, 354, 358, 359], "count": [2, 3, 85, 86, 153, 235, 312, 316, 319, 341, 342, 343, 344, 356, 359], "trigger": [2, 7], "partial": [2, 3, 85, 89, 103, 109, 118, 119, 154, 155, 156, 316, 344], "turn": [2, 17, 18, 19, 20, 33, 35, 38, 133, 160, 164, 230, 312, 337, 341, 342, 344, 346, 354, 355], "retain": 2, "regard": [2, 52, 58, 187, 231, 249, 258, 267, 341, 343, 354], "posit": [2, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 83, 84, 85, 89, 103, 109, 131, 132, 152, 153, 156, 159, 160, 207, 270, 337, 343, 353, 354, 356], "both": [2, 3, 7, 31, 34, 37, 40, 41, 56, 85, 86, 88, 89, 103, 104, 105, 109, 119, 144, 159, 175, 177, 178, 192, 195, 196, 198, 203, 204, 225, 226, 227, 231, 238, 249, 251, 252, 256, 257, 263, 264, 265, 267, 268, 269, 270, 272, 312, 336, 341, 343, 345, 347, 353, 354, 355, 356, 359], "ensur": [2, 3, 31, 34, 40, 64, 65, 71, 85, 89, 103, 109, 119, 141, 153, 161, 165, 230, 336, 342, 343, 354, 356], "clearli": 2, "mark": [2, 3, 15, 58, 85, 89, 103, 109, 192, 196, 280, 282, 283, 348, 356], "identifi": [2, 36], "marl": [2, 98, 112, 119, 156, 203, 345, 353], "abov": [2, 3, 7, 31, 85, 89, 103, 109, 193, 219, 220, 248, 337, 338, 341, 343, 345, 346, 353, 354, 359], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 65, 72, 73, 83, 84, 85, 88, 89, 90, 91, 99, 102, 103, 104, 105, 106, 109, 110, 111, 117, 119, 122, 123, 124, 125, 127, 129, 135, 137, 141, 143, 144, 149, 150, 153, 156, 158, 161, 163, 164, 167, 175, 177, 178, 179, 180, 181, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 213, 222, 224, 225, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 299, 307, 336, 337, 341, 342, 343, 344, 345, 346, 349, 352, 353, 354, 355, 356, 358, 359], "typic": [2, 3, 4, 8, 31, 85, 89, 103, 109, 128, 154, 236, 250, 265, 267, 270, 336, 337, 338, 343, 345, 347, 348, 353, 354], "adjust": [2, 341, 353, 354], "grumodul": [2, 118], "lstmmodul": [2, 344], "skip": [2, 31, 51, 85, 89, 103, 109, 132, 159, 167, 236, 240, 265, 270, 280, 281, 282, 283, 298, 299, 309, 312, 341, 342, 354], "accumul": [2, 8], "upcom": [2, 265, 289, 290, 291, 292, 294, 295, 296, 297, 341], "n": [2, 3, 6, 7, 23, 26, 31, 32, 39, 85, 89, 103, 109, 119, 126, 131, 160, 190, 191, 194, 200, 235, 240, 249, 257, 265, 279, 313, 336, 338, 342, 344, 346, 353, 356, 359], "popular": [2, 3, 336, 344, 347, 353], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 334, 342], "fail": [2, 7, 21, 25, 27, 103, 116, 167], "shift": [2, 31, 246, 280, 281, 282, 283, 343], "naiv": [2, 161, 345], "consum": [2, 71, 73, 342, 343, 348, 353, 356], "approxim": [2, 353, 359], "twice": [2, 8], "flat": [2, 76], "would": [2, 3, 31, 39, 85, 89, 103, 109, 190, 192, 194, 196, 198, 203, 338, 342, 343, 344, 345, 347, 348, 354, 356, 359], "intens": [2, 3, 8], "ataridqnexperiencereplai": [2, 334], "onlin": [2, 8, 13, 16, 119, 184, 211, 249, 254, 266, 267, 307, 332, 343, 344, 353, 356], "2x": 2, "small": [2, 161, 341, 343, 353, 359], "clearer": [2, 346], "lazi": [2, 27, 28, 48, 49, 85, 89, 103, 109, 110, 111, 141, 161, 177, 203, 205, 241, 242, 341, 342, 346, 348, 352, 356, 359], "certainli": 2, "benefici": 2, "welcom": [2, 345], "wrapper": [2, 3, 11, 16, 33, 35, 38, 39, 40, 41, 81, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 164, 207, 222, 228, 229, 233, 235, 240, 245, 280, 304, 305, 306, 332, 334, 343, 344, 345, 353, 355, 359], "around": [2, 5, 7, 16, 40, 41, 99, 240, 280, 341, 342, 353, 359], "selecttransform": [2, 85, 89, 103, 109], "excludetransform": [2, 57, 150, 356], "promptli": 2, "virtual": [2, 3, 88], "instal": [2, 3, 5, 10, 17, 18, 19, 52, 55, 85, 89, 103, 104, 105, 107, 108, 109, 301, 316, 335, 341, 343, 344, 345, 346, 347, 348, 349, 350, 353, 359], "respons": [2, 3, 8, 316, 347, 348, 359], "d4rl": [2, 52, 58], "repositori": [2, 7, 53, 54, 55, 58, 111], "wheel": [2, 343], "publish": 2, "openml": [2, 55, 102], "scikit": [2, 55, 102], "panda": [2, 55], "customari": [2, 336], "moreov": [2, 3], "fine": [2, 85, 89, 103, 109, 135, 348, 355], "grain": [2, 85, 89, 103, 109], "nomenclatur": 2, "compact": 2, "propos": [2, 119, 128, 199, 262, 271, 325, 336, 344, 356], "replaybufferensembl": [2, 51, 70, 75, 80], "primit": [2, 3, 4, 56, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 56, 67, 85, 89, 103, 109, 146, 159, 228, 233, 235, 314, 338, 342, 343, 344, 346, 349, 354, 356, 359], "individu": [2, 4, 17, 18, 19, 20, 31, 44, 67, 76, 85, 89, 103, 109, 341, 353], "dummi": [2, 325, 341, 348, 359], "semant": [2, 27, 28, 336], "ident": [2, 3, 13, 14, 15, 31, 33, 35, 38, 72, 85, 89, 100, 103, 109, 128, 203, 204, 280, 281, 282, 283, 330, 331, 342, 345, 353], "another_kei": [2, 67], "renam": [2, 33, 35, 38, 67, 144, 146, 174, 341], "resiz": [2, 3, 58, 67, 119, 342, 344, 345, 356, 359], "imag": [2, 4, 7, 56, 121, 141, 157, 163, 198, 299, 341, 342, 345, 349, 353, 355, 359], "comops": 2, "totensorimag": [2, 3, 58, 67, 119, 145, 342, 344, 356, 358, 359], "renametransform": [2, 67, 85, 89, 103, 109], "rb0": [2, 67], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 52, 67, 81, 82, 85, 89, 99, 103, 109, 117, 118, 119, 120, 121, 122, 124, 126, 127, 131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 159, 161, 163, 165, 176, 186, 192, 196, 200, 212, 221, 222, 224, 225, 226, 227, 229, 230, 236, 237, 239, 240, 242, 243, 244, 249, 250, 251, 252, 253, 255, 256, 257, 263, 264, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 298, 299, 325, 328, 336, 341, 342, 343, 344, 346, 347, 350, 352, 353, 354, 355, 356, 358, 359], "pixel": [2, 3, 7, 25, 58, 67, 83, 84, 88, 90, 91, 106, 119, 121, 128, 131, 133, 137, 139, 141, 145, 157, 161, 163, 180, 208, 209, 299, 325, 336, 341, 342, 344, 349, 355, 356, 358, 359], "rb1": [2, 67], "p": [2, 4, 67, 70, 86, 107, 108], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 67, 81, 82, 85, 89, 99, 103, 109, 117, 118, 119, 120, 121, 122, 124, 127, 131, 133, 135, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 151, 154, 156, 157, 158, 161, 163, 165, 176, 186, 187, 192, 196, 200, 212, 213, 221, 222, 224, 225, 226, 227, 229, 231, 236, 237, 238, 239, 240, 242, 243, 244, 249, 250, 251, 256, 257, 263, 264, 267, 268, 269, 270, 278, 280, 281, 282, 283, 299, 312, 328, 336, 341, 342, 343, 344, 346, 350, 352, 353, 354, 355, 356, 358, 359], "pixels33": [2, 67], "data0": [2, 67], "244": [2, 67, 141, 163, 354], "data1": [2, 67], "_": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 86, 93, 110, 111, 120, 124, 126, 127, 135, 137, 144, 157, 165, 224, 239, 244, 248, 249, 250, 252, 256, 257, 263, 267, 268, 270, 272, 280, 281, 282, 283, 301, 341, 342, 343, 344, 350, 353, 354, 356, 358], "rang": [2, 3, 4, 8, 11, 26, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 67, 76, 85, 86, 89, 103, 109, 146, 157, 165, 191, 195, 264, 272, 337, 338, 341, 343, 344, 347, 348, 350, 353, 354, 356, 358], "parent": [2, 3, 20, 25, 27, 43, 67, 75, 80, 85, 89, 103, 109, 119, 120, 123, 125, 128, 131, 132, 137, 141, 149, 153, 154, 155, 156, 158, 160, 161, 225, 265, 267, 284, 341, 348, 354, 358, 359], "basic": [2, 99, 336, 343, 347, 348, 350, 359], "properti": [2, 3, 31, 33, 35, 38, 85, 89, 99, 103, 109, 158, 159, 185, 193, 205, 210, 218, 219, 220, 265, 270, 346, 348, 354, 356], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 45, 46, 85, 89, 99, 102, 103, 104, 105, 109, 110, 111, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 174, 175, 177, 178, 180, 181, 182, 183, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 205, 206, 213, 214, 215, 216, 217, 222, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 310, 314, 319, 328, 336, 337, 338, 341, 342, 343, 344, 345, 353, 354, 358, 359], "send": [2, 3, 8, 306, 358], "receiv": [2, 3, 31, 39, 85, 89, 103, 109, 158, 198, 286, 337, 341, 343, 347, 352, 354], "spawn": [2, 3, 4, 17, 21, 93, 100, 103, 109, 342, 353], "check_env_spec": [2, 3, 89, 103, 143, 334, 343, 353, 354], "saniti": [2, 3, 7, 167, 343], "utmost": 2, "commonli": [2, 65, 72, 73, 359], "emploi": [2, 206], "languag": [2, 39], "scarc": 2, "address": [2, 356], "subdomain": 2, "facilit": [2, 3, 7, 140, 141, 161, 163, 225, 226, 227, 336, 341, 344, 346, 354], "extern": [2, 3, 124, 127, 359], "token": [2, 35, 36, 39, 42, 44, 59], "manner": [2, 89, 141, 161, 336, 341, 342, 343, 348, 352, 354, 356], "dm": [3, 341, 359], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 44, 56, 69, 76, 77, 79, 81, 82, 85, 89, 93, 94, 95, 99, 100, 101, 103, 109, 110, 146, 155, 161, 162, 203, 225, 234, 249, 250, 252, 253, 255, 256, 257, 259, 263, 267, 268, 269, 270, 272, 306, 316, 325, 336, 337, 338, 341, 342, 344, 345, 346, 347, 353, 354, 356, 359], "goal": [3, 4, 154, 341, 342, 343, 344, 353, 354], "abl": [3, 98, 104, 105, 341, 343, 344, 346, 352, 353, 354, 356, 358], "experi": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 167, 301, 302, 303, 304, 305, 306, 335, 342, 343, 348, 349, 353, 356], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 85, 86, 89, 103, 104, 105, 107, 108, 109, 119, 122, 128, 134, 135, 137, 139, 144, 146, 149, 155, 158, 164, 165, 325, 328, 341, 342, 343, 344, 352, 353, 355, 356, 358, 359], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 81, 82, 85, 89, 99, 103, 109, 123, 126, 128, 135, 141, 155, 158, 159, 161, 163, 176, 177, 178, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 202, 203, 204, 207, 212, 213, 221, 224, 225, 226, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 242, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 325, 328, 336, 337, 341, 342, 343, 344, 346, 347, 350, 352, 353, 354, 355, 356, 358, 359], "organis": [3, 57, 85, 89, 103, 109, 159, 342], "arbitrari": [3, 32, 37, 85, 89, 103, 109, 336, 341, 342, 354, 356], "structur": [3, 7, 33, 34, 35, 37, 38, 39, 40, 41, 44, 76, 85, 89, 103, 109, 124, 127, 175, 203, 235, 280, 281, 282, 283, 284, 334, 337, 341, 343, 344, 345, 348, 353, 354, 355], "attribut": [3, 4, 31, 33, 35, 38, 44, 56, 85, 88, 89, 90, 103, 109, 128, 141, 161, 192, 196, 240, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341, 344, 354], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 99, 103, 109, 128], "actual": [3, 4, 7, 51, 52, 53, 54, 56, 57, 58, 85, 89, 103, 109, 164, 319, 337, 341, 343, 353, 354], "retriev": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 70, 85, 88, 89, 90, 103, 109, 120, 125, 128, 137, 174, 176, 177, 200, 236, 240, 243, 249, 250, 251, 253, 264, 267, 268, 270, 272, 278, 280, 281, 282, 283, 325, 332, 338, 342, 343, 346, 354, 359], "care": [3, 8, 85, 89, 103, 109, 158, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 299, 341, 343, 353, 354, 356], "parametr": [3, 206, 240, 250, 256, 263, 270, 341, 343], "hardwar": 3, "observation_spec": [3, 85, 89, 99, 103, 109, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 131, 133, 134, 135, 137, 139, 141, 143, 145, 149, 151, 153, 154, 155, 156, 157, 158, 160, 161, 164, 176, 192, 196, 200, 320, 328, 341, 343, 347, 352, 353, 354, 359], "compositespec": [3, 27, 28, 48, 85, 87, 89, 99, 103, 109, 116, 124, 125, 126, 127, 129, 135, 143, 144, 150, 153, 155, 158, 171, 175, 176, 200, 224, 228, 236, 242, 243, 334, 341, 343, 344, 353, 354, 359], "pair": [3, 31, 33, 35, 38, 52, 83, 84, 85, 89, 103, 109, 146, 155, 192, 225, 236, 240, 265, 280, 281, 282, 283, 284, 336, 337, 341, 342, 343, 346, 347, 352, 354, 359], "state_spec": [3, 85, 89, 99, 103, 109, 116, 176, 200, 354, 359], "reward_spec": [3, 85, 89, 99, 103, 109, 116, 117, 122, 123, 124, 125, 127, 143, 147, 148, 149, 151, 158, 160, 176, 200, 343, 353, 354, 359], "done_spec": [3, 85, 89, 103, 109, 124, 125, 127, 128, 143, 158, 175, 353, 354, 359], "flag": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 110, 111, 235, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 336, 353, 354, 355], "input_spec": [3, 85, 89, 99, 103, 109, 123, 124, 125, 126, 137, 139, 143, 144, 149, 150, 153, 154, 155, 158, 159, 160, 162, 343, 354], "full_action_spec": [3, 85, 89, 103, 109, 176, 200, 343, 353], "full_state_spec": [3, 85, 89, 103, 109, 176, 200, 343], "lock": [3, 25, 27, 33, 35, 38, 85, 89, 103, 109, 155, 165, 354], "modifi": [3, 7, 8, 25, 27, 31, 44, 85, 89, 103, 109, 123, 131, 135, 141, 155, 158, 159, 161, 163, 229, 235, 239, 319, 325, 341, 342, 343, 345, 353, 354], "output_spec": [3, 85, 89, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 159, 354], "full_observation_spec": [3, 85, 89, 103, 109, 176, 200], "full_reward_spec": [3, 85, 89, 103, 109, 143, 353], "full_done_spec": [3, 85, 89, 103, 109, 143, 175, 353], "importantli": [3, 236, 240], "action_s": 3, "help": [3, 4, 31, 85, 89, 103, 109, 128, 335, 337, 341, 342, 343, 344, 353], "With": [3, 94, 95, 98, 154, 338, 342, 353, 356, 359], "necessarili": [3, 85, 89, 103, 109, 359], "requir": [3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 52, 54, 56, 65, 72, 73, 85, 89, 93, 100, 103, 106, 109, 123, 141, 155, 158, 159, 161, 163, 198, 222, 239, 241, 242, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 299, 301, 336, 338, 341, 342, 343, 344, 345, 346, 347, 349, 353, 354, 356, 359], "present": [3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 71, 85, 88, 89, 103, 109, 129, 146, 150, 174, 175, 179, 180, 181, 182, 183, 189, 194, 206, 211, 235, 239, 240, 241, 242, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 332, 338, 341, 350, 352, 353, 356, 358], "0s": [3, 51, 56, 155, 344], "step_and_maybe_reset": [3, 85, 89, 103, 109, 345], "done_kei": [3, 22, 85, 89, 103, 109, 119, 128, 146, 153, 174, 353], "assign": [3, 4, 13, 14, 16, 31, 33, 35, 38, 85, 89, 103, 109, 159, 252, 253, 255, 270, 343, 346, 353, 356], "_reset": [3, 85, 89, 99, 103, 109, 116, 119, 124, 127, 143, 175, 176, 200], "data_": [3, 85, 89, 103, 109], "append": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 86, 89, 103, 109, 122, 146, 155, 164, 191, 192, 195, 196, 230, 237, 341, 342, 343, 344, 353, 354, 355, 356, 358], "set_se": [3, 13, 14, 15, 16, 20, 81, 82, 85, 89, 94, 95, 99, 103, 109, 137, 144, 149, 154, 156, 159, 348, 350, 354, 358, 359], "seed": [3, 13, 14, 15, 16, 20, 57, 85, 89, 99, 103, 104, 105, 109, 110, 111, 116, 124, 127, 143, 159, 167, 316], "determinist": [3, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 179, 188, 208, 215, 224, 233, 239, 240, 243, 250, 336, 341, 342, 344, 346, 347, 350, 354, 359], "preced": [3, 197, 344], "risk": [3, 142], "overlap": [3, 40, 76], "consecut": [3, 51, 71, 93, 196, 235, 344, 345, 348, 353, 356, 359], "reproduc": [3, 119, 167, 341, 343, 353], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 36, 38, 39, 42, 44, 59, 61, 62, 63, 64, 78, 85, 89, 103, 109, 126, 147, 153, 154, 156, 218, 219, 220, 243, 250, 256, 257, 263, 265, 266, 270, 313, 341, 342, 343, 344, 346, 353, 356], "max_step": [3, 13, 76, 85, 89, 99, 103, 109, 110, 111, 153, 345, 346, 347, 349, 350, 353, 358, 359], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 39, 81, 82, 85, 89, 99, 103, 109, 118, 135, 187, 192, 196, 200, 212, 213, 221, 222, 225, 226, 227, 228, 229, 230, 233, 235, 236, 237, 238, 239, 241, 242, 243, 245, 250, 252, 256, 257, 259, 260, 261, 263, 265, 268, 270, 272, 278, 279, 280, 281, 282, 283, 312, 328, 336, 341, 343, 344, 347, 350, 352, 353, 354, 355], "trail": [3, 165], "treat": [3, 346, 347], "figur": [3, 341, 343, 344, 353, 354, 359], "summar": [3, 354], "brief": [3, 343, 345, 347, 356], "deliveri": 3, "design": [3, 31, 32, 70, 75, 80, 85, 89, 103, 109, 119, 142, 159, 229, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 359], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 32, 74, 85, 89, 103, 109, 153, 154, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 204, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 316, 338, 341, 342, 343, 344, 345, 346, 353, 354], "flank": [3, 344], "dual": 3, "strictli": [3, 8, 31, 85, 89, 103, 109, 159, 270, 341, 343], "refer": [3, 7, 8, 9, 20, 31, 39, 85, 88, 89, 90, 103, 109, 159, 165, 176, 187, 188, 200, 201, 202, 203, 208, 209, 214, 215, 231, 249, 258, 259, 260, 261, 267, 270, 280, 285, 293, 340, 341, 343, 346, 347, 348, 349, 353, 356, 359], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 64, 65, 85, 89, 103, 109, 116, 126, 128, 134, 137, 141, 142, 146, 148, 150, 161, 163, 165, 174, 177, 178, 180, 181, 182, 183, 185, 187, 189, 197, 198, 201, 202, 203, 204, 205, 206, 210, 212, 213, 218, 219, 220, 221, 239, 255, 257, 262, 268, 271, 293, 299, 310, 312, 313, 321, 322, 325, 326, 328, 329, 330, 331, 332], "carri": [3, 20, 44, 85, 89, 103, 109, 155, 265, 342, 344, 353, 354, 356], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 112, 341], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 56, 65, 72, 73, 334], "adjac": [3, 22, 131], "reli": [3, 190, 191, 194, 195, 249, 337, 341, 343, 346, 348, 354, 359], "junction": 3, "inittrack": [3, 192, 196, 341, 344], "tutori": [3, 333, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359], "scratch": [3, 8, 342, 354], "better": [3, 8, 9, 192, 196, 337, 343, 345, 354], "gym3": 3, "envpool": [3, 100, 101], "interfac": [3, 92, 102, 198, 205, 336, 341, 343, 349, 354, 356], "simultan": [3, 19, 100, 101, 103, 109, 354], "competit": [3, 353], "advantag": [3, 8, 189, 249, 251, 264, 267, 269, 280, 281, 282, 283, 284, 285, 287, 289, 291, 293, 294, 296, 337, 338, 341, 342, 343, 344, 353, 354, 359], "scale": [3, 4, 52, 119, 135, 137, 148, 154, 157, 188, 193, 207, 214, 215, 219, 220, 225, 226, 227, 236, 240, 242, 249, 250, 263, 267, 268, 269, 270, 314, 320, 325, 332, 336, 341, 342, 343, 344, 346, 353, 358], "varieti": 3, "inherit": [3, 85, 89, 103, 109, 199, 265, 338, 343, 353], "Of": [3, 7, 335, 354, 359], "cours": [3, 4, 335, 354, 359], "make_env": [3, 103, 109, 111, 165, 321, 322, 341, 342, 359], "from_pixel": [3, 81, 82, 83, 84, 88, 90, 91, 94, 95, 106, 119, 145, 299, 325, 341, 342, 344, 345, 349, 350, 355, 356, 358, 359], "81": [3, 342, 354, 355, 356], "simpli": [3, 6, 33, 35, 38, 44, 75, 76, 80, 129, 150, 164, 265, 336, 337, 341, 343, 347, 353, 359], "d": [3, 34, 37, 40, 41, 53, 55, 57, 58, 59, 64, 65, 190, 194, 236, 240, 358], "forc": [3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 51, 53, 54, 56, 57, 58, 342, 353, 354], "privat": [3, 85, 89, 103, 109, 164, 354, 359], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 51, 73, 76, 251, 264, 267, 307, 309, 312, 316, 319, 320, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359], "unless": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 71, 85, 89, 103, 109, 343], "behav": [3, 91, 99, 190, 194, 210, 256, 263, 355], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 39, 67, 70, 137, 148, 193, 205, 214, 219, 220, 278, 336, 346, 347, 354, 356], "inner": [3, 85, 89, 103, 109, 126, 338, 342, 343, 353, 359], "logic": 3, "nevertheless": [3, 343, 345, 356], "kept": [3, 22, 71, 73, 126, 150, 158, 167, 174, 193, 219, 220, 347], "mind": [3, 51, 56, 65, 72, 73, 85, 89, 103, 109, 353], "desig": 3, "wherev": 3, "expos": [3, 106, 124, 127, 241, 342], "modif": [3, 5, 25, 27, 31, 85, 89, 103, 109, 131, 175, 265, 343, 354], "lost": [3, 8, 164], "eras": [3, 85, 89, 103, 109, 159], "intern": [3, 339], "face": [3, 5, 8, 9, 345, 359], "NOT": [3, 142], "outsid": [3, 15, 349, 353, 354], "keep": [3, 4, 7, 8, 14, 34, 37, 40, 41, 71, 76, 103, 109, 137, 141, 163, 165, 174, 235, 309, 316, 341, 342, 343, 344, 348, 349, 350, 353, 354, 356, 358, 359], "right": [3, 6, 7, 22, 39, 197, 342, 343, 353, 354, 359], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 85, 89, 103, 109, 158, 159, 167, 280, 281, 282, 283], "assumpt": [3, 354, 356], "preclud": 3, "presenc": [3, 347], "annihil": 3, "reason": [3, 4, 8, 31, 56, 85, 89, 103, 104, 105, 109, 141, 161, 196, 337, 341, 342, 343, 347, 348, 354, 356], "advanc": [3, 20, 34, 37, 40, 41, 345, 348, 356], "explicitli": [3, 4, 342, 344, 348, 353, 356], "place": [3, 25, 27, 31, 33, 35, 38, 61, 62, 67, 70, 78, 85, 86, 89, 103, 109, 110, 111, 123, 128, 141, 155, 158, 159, 161, 163, 164, 165, 175, 229, 239, 313, 318, 319, 342, 343, 346, 349, 353, 354, 356], "superse": 3, "pettingzoowrapp": [3, 334], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 85, 89, 98, 103, 104, 105, 109, 110, 111, 112, 336, 342, 346, 348, 353, 356], "associ": [3, 31, 33, 35, 38, 85, 89, 103, 109, 214, 332, 341, 356], "environemtn": 3, "__not__": 3, "constrain": [3, 135, 192, 196, 267], "li": 3, "fact": [3, 7, 8, 341, 343, 345, 353, 354, 355, 356, 359], "predict": [3, 31, 39, 188, 199, 200, 229, 245, 255, 258, 260, 261, 279, 336, 341, 342, 347], "know": [3, 4, 9, 34, 37, 40, 41, 228, 268, 312, 341, 342, 343, 344, 345, 346, 347, 348, 353, 356], "meaning": 3, "perfectli": [3, 338, 341, 354], "case": [3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 76, 85, 89, 103, 109, 124, 125, 127, 157, 159, 167, 196, 198, 204, 236, 239, 240, 242, 243, 248, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283, 307, 318, 330, 331, 332, 334, 336, 338, 341, 342, 343, 344, 345, 346, 348, 349, 353, 354, 356, 359], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 347, 358], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 43, 45, 46, 51, 85, 89, 103, 109, 332, 336], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 119, 120, 124, 126, 127, 128, 129, 131, 135, 136, 137, 139, 141, 143, 144, 146, 148, 150, 153, 155, 157, 159, 160, 161, 163, 165, 167, 174, 175, 176, 177, 178, 180, 181, 190, 191, 192, 193, 194, 195, 196, 198, 200, 203, 204, 205, 206, 219, 220, 224, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 278, 280, 281, 282, 283, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 306, 309, 310, 312, 313, 314, 316, 325, 332, 342, 343, 344, 345, 346, 348, 349, 352, 353, 354, 355, 356, 358, 359], "500": [3, 341, 342, 354, 358], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 51, 53, 103, 109], "bottleneck": [3, 8], "great": [3, 7, 8, 358], "speedup": [3, 8, 359], "precis": [3, 124, 127, 174, 191, 195, 341, 343], "misspecifi": 3, "caus": [3, 7, 8, 61, 62, 78, 85, 89, 93, 103, 109, 142, 359], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 56, 85, 89, 103, 109, 112, 119, 130, 136, 146, 154, 155, 156, 159, 167, 228, 232, 233, 235, 270, 341, 343, 353, 356, 359], "mismatch": [3, 342], "mostli": [3, 16, 299, 337, 349, 356, 359], "subprocess": [3, 13, 14, 16, 86, 103, 109], "multithreadedenv": [3, 334], "underneath": 3, "higher": [3, 4, 122, 243, 341, 342, 343, 356, 359], "flexibl": [3, 9, 100, 273, 337, 338, 341, 356, 359], "cover": [3, 335, 343, 345, 348, 349, 354, 358], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 58, 59, 67, 85, 89, 98, 99, 102, 103, 104, 105, 109, 123, 124, 125, 128, 129, 135, 141, 143, 144, 150, 153, 155, 158, 159, 161, 163, 165, 169, 173, 177, 178, 198, 203, 204, 206, 212, 221, 228, 230, 236, 239, 240, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 286, 325, 330, 334, 336, 341, 342, 343, 348, 353, 354, 356, 359], "atari": [3, 4, 51, 119, 299, 349, 359], "classic": [3, 99, 105, 342], "benchmark_batched_env": 3, "pipelin": [3, 7, 336, 343], "seamlessli": [3, 354], "infrastructur": [3, 353], "act": [3, 4, 72, 73, 104, 105, 204, 250, 252, 263, 268, 270, 272, 344, 353, 356], "world": [3, 5, 99, 245, 260, 349, 353, 354, 359], "paradigm": [3, 16, 353], "decpodp": 3, "game": [3, 4, 5, 51, 299, 349], "per": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 53, 76, 93, 94, 95, 103, 104, 105, 122, 149, 188, 203, 204, 232, 301, 316, 330, 331, 341, 342, 343, 344, 346, 347, 350, 353, 356, 358], "thank": [3, 341, 345], "carrier": [3, 343, 344, 345, 356], "particular": [3, 31, 44, 52, 53, 85, 89, 103, 109, 159, 337, 338, 342, 344, 345, 352, 353, 356], "thu": [3, 264, 353], "let": [3, 6, 7, 31, 34, 37, 40, 41, 42, 85, 89, 103, 104, 105, 109, 119, 192, 196, 203, 204, 230, 312, 337, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "go": [3, 7, 98, 103, 142, 146, 229, 286, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "vma": [3, 110, 111, 353], "robot": [3, 5, 7, 56, 141, 161, 163, 353], "what": [3, 8, 34, 43, 51, 85, 89, 103, 109, 128, 155, 167, 174, 237, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 354, 355, 356, 358, 359], "vmasenv": [3, 334, 353], "balanc": [3, 83, 84, 341, 342], "num_env": [3, 20, 88, 92, 101, 110, 111, 353], "n_agent": [3, 110, 111, 203, 204, 212, 221, 278, 353], "ground_rew": 3, "pos_rew": [3, 353], "style": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58], "relat": [3, 4, 10, 34, 103, 131, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 342, 350, 354], "vari": [3, 88, 90, 91, 104, 105, 106, 110, 142, 353], "creation": [3, 103, 109, 359], "info_spec": [3, 103], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 32, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 116, 143, 175, 253, 256, 257, 278, 334, 353, 359], "simpl": [3, 9, 31, 32, 85, 89, 103, 109, 180, 240, 253, 255, 265, 269, 280, 336, 337, 341, 342, 343, 345, 346, 347, 353, 356, 359], "prefix": [3, 22, 31, 33, 35, 38, 44, 85, 89, 103, 109, 159, 265, 270, 298, 344, 347, 359], "exactli": [3, 31, 85, 89, 91, 103, 109, 159, 190, 194, 270, 341, 344, 348, 353], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 85, 89, 103, 109, 116, 126, 174, 176, 199, 200, 228, 232, 233, 235, 353], "reward_kei": [3, 85, 89, 103, 109, 174, 176, 200, 310, 314, 353], "set_kei": [3, 128, 249, 251, 253, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 278, 284, 341, 353], "awai": [3, 343, 345, 353], "eas": [3, 353], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109, 153, 240], "full": [3, 85, 89, 103, 109, 192, 196, 231, 307, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "raw": [3, 4, 39, 193, 219, 220, 342, 348, 354], "torchvis": [3, 141, 163, 301, 358, 359], "base_env": [3, 82, 85, 89, 90, 95, 103, 109, 116, 122, 124, 126, 127, 135, 139, 143, 145, 151, 153, 155, 156, 299, 341, 342, 343, 355, 358, 359], "appar": [3, 309], "bring": [3, 343, 345, 359], "signific": [3, 5, 8, 343, 359], "kind": [3, 37, 43, 174, 347, 356], "consult": 3, "interest": [3, 236, 240, 336, 342, 343, 345, 353, 354, 359], "resize_par": 3, "easi": [3, 5, 51, 55, 83, 84, 85, 89, 94, 95, 103, 109, 228, 232, 233, 235, 336, 337, 341, 342, 343, 353, 355, 356, 359], "graph": [3, 4, 8, 81, 82, 94, 95, 276, 277, 341, 354], "appli": [3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 159, 161, 162, 164, 165, 190, 194, 219, 230, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 272, 280, 311, 338, 341, 342, 343, 348, 354, 358, 359], "revers": [3, 194], "order": [3, 15, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 71, 73, 85, 89, 103, 109, 120, 124, 127, 139, 159, 224, 230, 239, 241, 242, 244, 249, 250, 252, 256, 257, 263, 267, 268, 269, 270, 272, 342, 353], "chain": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 123, 126, 177, 178, 242, 359], "invers": [3, 4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 119, 124, 127, 137, 146, 247, 256, 263, 354], "in_keys_inv": [3, 122, 124, 127, 137, 138, 139, 143, 144, 146, 151, 158, 341, 352, 354, 359], "append_transform": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 118, 141, 155, 161, 341, 344, 354, 356, 358, 359], "doubletofloat": [3, 325, 341, 343, 352], "float32": [3, 13, 14, 15, 25, 33, 34, 35, 38, 39, 40, 41, 43, 44, 51, 54, 56, 58, 61, 62, 64, 65, 78, 81, 82, 85, 88, 89, 90, 94, 95, 99, 102, 103, 107, 108, 109, 110, 111, 124, 127, 128, 129, 137, 139, 143, 144, 146, 150, 153, 155, 157, 171, 174, 176, 187, 192, 196, 200, 212, 213, 221, 224, 225, 226, 227, 229, 230, 235, 236, 237, 238, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 278, 325, 336, 343, 344, 345, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359], "float64": [3, 31, 54, 56, 57, 83, 84, 85, 89, 103, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 239, 352], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 53, 85, 88, 89, 90, 103, 109, 124, 127, 128, 159, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 338, 341, 343, 345, 356], "manipul": [3, 4, 8, 83, 84, 141, 161], "third_transform": 3, "replac": [3, 6, 7, 25, 27, 31, 51, 56, 65, 72, 73, 126, 128, 174, 232, 336, 356], "unexpect": [3, 31, 85, 89, 103, 109, 159, 270, 359], "behviour": 3, "fortun": [3, 344, 345, 346, 349], "alreadi": [3, 8, 11, 31, 33, 35, 38, 44, 51, 85, 89, 103, 109, 155, 175, 240, 280, 281, 282, 283, 341, 343, 349, 353], "chang": [3, 5, 7, 31, 34, 37, 40, 41, 51, 61, 62, 63, 71, 74, 75, 78, 85, 89, 103, 109, 123, 124, 125, 127, 129, 135, 143, 144, 150, 153, 158, 159, 165, 194, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 337, 341, 344, 353, 354, 355, 356, 359], "catfram": [3, 342], "hold": [3, 276, 277, 354, 356], "notic": [3, 76, 119, 343, 350, 354], "parenthood": 3, "henc": [3, 34, 142, 175, 203, 336, 341, 343, 353, 354], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 103, 109, 354], "discret": [3, 23, 26, 29, 30, 32, 46, 85, 89, 103, 104, 105, 109, 110, 111, 126, 210, 213, 255, 256, 257, 258, 336, 342, 346, 353, 354, 359], "might": [3, 33, 35, 36, 38, 303, 335, 341, 345, 359], "action_mask": [3, 94, 95, 104, 105, 107, 108, 116], "unavail": [3, 104, 105], "probabl": [3, 4, 8, 39, 67, 70, 185, 187, 190, 192, 194, 196, 198, 201, 202, 210, 220, 232, 236, 240, 336, 342, 346, 358], "categor": [3, 26, 30, 32, 81, 82, 88, 90, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 116, 128, 187, 210, 213, 230, 231, 236, 237, 238, 253, 256, 257, 278, 344], "probabilistictensordictmodul": [3, 135, 240, 241, 358], "tensordictsequenti": [3, 192, 196, 230, 232, 241, 336, 341, 342, 344, 346, 350, 352, 355, 358], "maskedcategor": [3, 202, 334], "linear": [3, 13, 14, 15, 16, 20, 31, 81, 82, 85, 89, 99, 103, 109, 123, 135, 141, 155, 158, 159, 161, 163, 176, 177, 178, 187, 198, 200, 203, 204, 205, 206, 207, 213, 214, 215, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 239, 242, 244, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 328, 336, 342, 352, 355, 358], "in_feat": 3, "out_feat": 3, "logit": [3, 35, 39, 201, 202, 210, 231, 236, 256, 257, 336], "dist": [3, 10, 201, 202, 210, 346], "distribution_class": [3, 135, 225, 226, 227, 229, 236, 240, 242, 249, 250, 256, 257, 263, 267, 268, 269, 270, 336, 341, 343, 346, 353, 358], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 54, 81, 82, 85, 89, 90, 94, 95, 101, 103, 104, 105, 109, 111, 167, 192, 196, 222, 225, 226, 227, 228, 233, 235, 237, 245, 278, 336, 341, 342, 343, 344, 347, 350, 353, 359], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 116, 142], "enviorn": [3, 104, 105, 110, 111, 353], "itself": [3, 31, 85, 89, 103, 109, 113, 265, 343, 345], "mission": 3, "irrespect": [3, 239, 240], "dmcontrol": [3, 85, 89, 103, 109], "jumanji": [3, 85, 89, 94, 95, 103, 109], "natur": [3, 341, 344, 346, 347, 348, 356], "special": [3, 334, 336, 341, 344, 359], "framework": [3, 4, 9, 21, 81, 82, 85, 89, 94, 95, 99, 103, 109, 190, 358, 359], "Its": [3, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 165, 239, 284], "success": [3, 54, 119, 158, 232, 342, 348, 350, 354, 356, 358], "foundat": [3, 5, 104, 105, 343, 353], "inspir": [3, 354], "gone": [3, 4, 5], "hard": [3, 7, 76, 83, 84, 103, 262, 342, 359], "prefer": [3, 16, 19, 22, 34, 37, 40, 41, 142, 150, 267, 313, 336, 343, 353, 356], "maintain": [3, 5, 9, 354], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 342, 343, 344, 348, 353, 354, 356, 359], "decor": [3, 8, 11, 115, 265, 280, 281, 282, 283], "set_gym_backend": [3, 85, 88, 89, 103, 109, 113, 334, 345], "relev": [3, 39, 280, 281, 282, 283, 284, 306, 354], "gym_backend": [3, 115, 334], "env1": [3, 352], "venv": 3, "python3": [3, 6, 7, 10, 341, 356, 359], "site": [3, 6, 7, 57, 115, 341, 356, 359], "env2": [3, 352], "_env": [3, 6, 88, 359], "classic_control": 3, "pendulumenv": [3, 354], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 97, 113], "handi": [3, 85, 89, 103, 109, 349], "side": [3, 4, 359], "v0": [3, 85, 89, 91, 94, 95, 96, 97, 103, 109, 123, 159, 165, 328], "26": [3, 85, 89, 103, 109, 342, 353, 354, 355, 356], "fun": [3, 11, 115, 343, 353, 356], "reveal": 4, "bug": [4, 358], "curv": 4, "won": [4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 56, 85, 86, 88, 89, 100, 101, 103, 109, 141, 163, 316, 332, 342, 343, 345, 346], "exploit": [4, 346], "video": [4, 9, 299, 301, 312, 332, 350, 353], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 135, 353, 355], "coeffici": [4, 39, 135, 353], "bonu": [4, 249, 251, 264, 267], "beta": [4, 34, 40, 64, 65, 256, 263, 264, 341, 342, 356, 358], "reduc": [4, 6, 26, 76, 154, 342], "downstream": [4, 341], "formul": [4, 353], "ob": [4, 8, 22, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 67, 72, 73, 76, 85, 89, 103, 109, 116, 124, 125, 127, 137, 151, 157, 171, 174, 203, 204, 237, 244, 250, 252, 257, 263, 268, 270, 272, 280, 281, 282, 283, 342, 352, 354, 356, 358, 359], "rate": [4, 51, 165, 279, 342, 343, 353], "gradient": [4, 31, 85, 89, 103, 109, 159, 193, 202, 206, 210, 219, 220, 249, 251, 252, 256, 257, 263, 264, 265, 267, 268, 269, 270, 272, 279, 280, 281, 282, 283, 316, 341, 343, 353, 354], "norm": [4, 8, 81, 82, 316, 341, 342, 343, 353, 354], "easier": [4, 336, 341], "local": [4, 7, 10, 15, 20, 31, 85, 89, 103, 109, 159, 203, 204, 212, 221, 278, 304, 306, 349, 350, 353], "optima": 4, "sens": [4, 348, 354], "product": [4, 9, 190, 191, 194, 195, 330, 331], "sum": [4, 20, 30, 32, 76, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 118, 149, 201, 202, 221, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 266, 267, 268, 269, 270, 272, 279, 286, 337, 341, 342, 343, 344, 347, 350, 353, 354, 359], "track": [4, 13, 14, 15, 16, 17, 18, 19, 20, 41, 71, 149, 165, 235, 304, 309, 342, 344, 345, 348, 353, 354, 356], "stat": [4, 137, 320, 332, 342, 343], "w": [4, 67, 119, 121, 145, 157, 190, 235, 299, 342, 344, 356], "r": [4, 31, 116, 122, 137, 151, 191, 240, 248, 279, 336, 342, 354, 359], "yield": [4, 15, 20, 31, 85, 89, 103, 109, 265, 341, 347], "insight": 4, "auxiliari": [4, 347], "credit": 4, "futur": [4, 31, 33, 35, 38, 85, 89, 103, 109, 141, 159, 163, 198, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 335, 358], "past": [4, 342, 356], "spars": [4, 344], "ad": [4, 15, 22, 31, 34, 37, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 85, 89, 103, 109, 149, 159, 205, 206, 235, 249, 251, 253, 258, 264, 267, 270, 278, 342, 344, 346, 356, 359], "intermedi": [4, 118, 192, 196, 231, 341, 355], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 341], "discov": 4, "score": [4, 39], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 358], "select": [4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 104, 105, 110, 111, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 161, 162, 164, 165, 176, 192, 196, 230, 237, 315, 341, 345, 356], "fall": [4, 52], "explicit": [4, 11, 44, 67, 197, 356], "mechan": [4, 31, 85, 89, 103, 109, 159, 342, 347, 354], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 33, 35, 38, 85, 89, 103, 109, 194, 256, 263, 343, 353], "addition": 4, "timestep": [4, 39, 52, 146, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 353], "realli": 4, "larg": [4, 26, 33, 35, 38, 124, 127, 161, 342, 343, 353, 356], "huge": [4, 204, 344], "std": [4, 137, 165, 207, 211, 228, 341, 359], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 340, 344, 345, 347, 348, 349, 350, 351, 352, 355, 356, 357], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 39, 76, 85, 89, 103, 109, 118, 137, 141, 155, 158, 159, 161, 166, 176, 190, 191, 194, 195, 200, 205, 206, 228, 232, 233, 235, 249, 250, 252, 253, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 325, 332, 341, 342, 344, 345, 346, 348, 354, 359], "estim": [4, 51, 65, 72, 73, 128, 135, 225, 226, 227, 249, 250, 251, 252, 253, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 278, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 337, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 215, 260, 353], "freshli": 4, "doesn": [4, 11, 76, 100, 124, 127, 345], "drop": [4, 71, 73, 174], "meant": [4, 99], "encourag": [4, 103, 341, 342, 356], "measur": [4, 61, 62, 78, 81, 82, 94, 95, 343, 348], "novelti": 4, "revisit": 4, "previous": [4, 343, 359], "diminish": 4, "decreas": [4, 346], "ideal": [4, 137, 354], "down": [4, 13, 14, 15, 16, 344, 345], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 33, 35, 38, 342, 343, 344, 347, 348, 353, 354, 358, 359], "distil": 4, "nois": [4, 166, 206, 223, 235, 268, 272, 312, 332, 341], "exploratori": [4, 249, 251, 264, 267], "misalign": 4, "trade": [4, 346], "unavoid": 4, "divers": [4, 103, 109], "bootstrap": [4, 258, 281, 287, 288, 341, 344], "noisi": [4, 205, 206, 223, 336], "unstabl": [4, 193, 219, 220], "inher": 4, "stochast": [4, 135, 188, 206, 208, 215, 250, 254, 256, 257, 263, 266, 268, 270, 336, 343, 346, 353], "enemi": 4, "pomdp": [4, 356], "loos": [4, 336, 342, 343], "nonexist": 4, "architectur": [4, 184, 347, 353], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 34, 36, 37, 39, 42, 44, 56, 59, 60, 67, 68, 70, 75, 77, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 117, 118, 119, 120, 121, 124, 126, 127, 131, 133, 137, 138, 142, 143, 144, 145, 146, 147, 148, 149, 154, 156, 157, 158, 165, 177, 178, 185, 187, 190, 194, 198, 201, 202, 203, 204, 210, 213, 217, 229, 241, 242, 254, 298, 299, 311, 312, 313, 315, 316, 325, 336, 341, 343, 344, 352, 353, 359], "lstm": [4, 195, 196, 197, 207], "rel": [4, 67, 155, 185, 218, 341, 342, 353, 356], "tend": 4, "stabl": [4, 9, 10, 102], "compens": 4, "descent": [4, 206], "1000": [4, 37, 64, 72, 73, 85, 89, 103, 109, 119, 165, 232, 235, 236, 240, 262, 341, 342, 343, 344, 346, 348, 350, 355, 356], "minimum": [4, 103, 109, 147, 188, 207, 218, 219, 220, 243, 246, 248, 250, 257, 265, 266, 270, 307, 341, 343, 350, 353], "manual": [4, 17, 19, 20, 89, 341, 344, 356], "deviat": [4, 137, 165, 176, 188, 200, 205, 206, 228, 267, 272, 341, 346, 353], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 72, 190, 191, 194, 195, 345, 346, 347, 348, 349, 350], "stabil": [4, 132], "stage": [4, 341, 354], "never": [4, 13, 14, 16, 348], "prevent": [4, 25, 27, 193, 219, 220, 264, 267, 314, 356], "entir": [4, 56, 85, 89, 103, 109, 203, 343, 345, 354, 356], "submit": [4, 335, 358], "suffici": [4, 341], "system": [4, 5, 343, 353, 354], "adequ": [4, 167, 343, 353], "infeas": 4, "allevi": [4, 336], "prune": 4, "fire": [4, 31, 85, 89, 103, 109], "illeg": 4, "move": [4, 31, 58, 85, 89, 103, 109, 123, 125, 141, 155, 158, 159, 161, 163, 165, 174, 198, 239, 314, 341, 342, 344, 345, 358, 359], "chess": 4, "combin": [4, 158, 342, 349, 356], "grasp": 4, "top": [4, 76, 81, 82, 94, 95, 176, 200, 346], "sampl": [4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 75, 76, 78, 85, 89, 99, 102, 103, 109, 118, 119, 142, 146, 168, 169, 172, 173, 176, 185, 193, 200, 201, 202, 210, 211, 214, 219, 220, 224, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 249, 250, 251, 252, 253, 255, 264, 266, 267, 272, 307, 313, 316, 319, 334, 336, 341, 342, 343, 344, 345, 346, 348, 350, 353, 355, 358, 359], "wherein": 4, "cumul": [4, 149, 154, 176, 286, 343], "q": [4, 9, 85, 89, 103, 109, 180, 181, 182, 183, 186, 187, 189, 212, 213, 221, 227, 231, 237, 238, 250, 252, 253, 255, 256, 257, 258, 262, 263, 268, 270, 272, 278, 325, 334, 341, 347], "flow": [4, 341, 343, 353, 354, 356], "reparameter": [4, 185, 202, 210], "soft": [4, 262, 270, 271], "critic": [4, 8, 225, 234, 249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 341, 347], "clip": [4, 39, 122, 147, 251, 272, 316, 343, 353, 354], "oppos": [4, 44], "incorrect": 4, "thought": [4, 85, 89, 103, 109], "bound": [4, 20, 24, 25, 31, 85, 89, 103, 109, 122, 136, 165, 214, 215, 224, 230, 231, 235, 236, 237, 238, 239, 240, 243, 272, 336, 341, 342, 343, 359], "region": 4, "squash": [4, 344, 358], "tanh": [4, 177, 178, 190, 191, 193, 194, 195, 198, 204, 218, 219, 220, 243, 343, 346, 353, 354, 355, 358], "correct": [4, 33, 35, 38, 85, 89, 103, 109, 135, 319, 343, 344], "prob": [4, 201, 202, 210, 343, 353], "rememb": 4, "remap": 4, "origin": [4, 8, 33, 35, 38, 39, 93, 125, 126, 135, 141, 159, 163, 190, 236, 239, 240, 262, 265, 267, 325, 341, 352, 354, 359], "histor": 5, "ceas": 5, "fork": [5, 341, 342, 343, 344, 353, 355], "farama": [5, 54, 96, 97, 104, 105, 343, 354], "bc": [5, 358], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 85, 89, 103, 109, 167, 224, 230, 231, 236, 237, 238, 239, 240, 343, 353], "best": [5, 9, 93, 192, 196, 353, 356, 358], "gymwrapp": [5, 85, 89, 103, 109, 129, 150, 153, 164, 334, 343, 358], "feel": [5, 335, 350, 358], "free": [5, 7, 124, 127, 249, 260, 267, 338, 343, 350, 353, 358], "gladli": 5, "prepar": [6, 53, 343], "conda": [6, 7, 335], "cmake": 6, "activ": [6, 7, 9, 177, 178, 184, 188, 198, 203, 204, 251, 264, 267, 336, 354, 358], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 53, 335], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 91], "y": [6, 7, 37, 102, 197, 203, 222, 341, 353, 356], "facebookresearch": [6, 53, 91], "subdirectori": 6, "verbos": [6, 350], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 48, 85, 89, 103, 109, 143, 152, 265, 353, 359], "command": [6, 7, 10, 343, 353, 354, 359], "readm": [6, 7, 110], "md": [6, 7], "habitatenv": [6, 334], "_has_habitat": 6, "available_env": [6, 81, 82, 83, 84, 85, 88, 89, 90, 91, 94, 95, 96, 102, 103, 106, 107, 108, 109, 110, 111, 359], "startswith": [6, 337, 341, 347], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 86, 265, 341], "env_nam": [6, 81, 83, 85, 88, 89, 91, 94, 96, 100, 103, 106, 109, 341, 343, 359], "llvmlite": 6, "config": [6, 7, 141, 163, 179, 184, 211, 320, 321, 322, 325, 326, 329], "var": [6, 7, 31, 85, 89, 103, 109, 159, 265, 270], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 230], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 85, 89, 103, 109, 159, 265, 270, 356], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 85, 342, 350], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 83, 84, 103, 109, 352, 354], "joint": [7, 342], "dynam": [7, 53, 56, 58, 256, 263, 343, 345, 354], "contact": [7, 36], "engin": [7, 106, 354], "biomechan": 7, "graphic": 7, "anim": [7, 353], "area": 7, "demand": [7, 349, 359], "fast": [7, 9, 81, 82, 144, 268, 341, 342, 343], "accur": [7, 52, 58, 342, 354, 356], "articul": 7, "acquir": [7, 343], "deepmind": [7, 8, 9, 56, 83, 84, 85, 89, 103, 109, 128, 343, 345], "whomev": 7, "licenc": 7, "incorpor": [7, 85, 89, 103, 109, 228, 232, 233, 235, 344, 346, 354], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 335], "tip": [7, 335], "glfw": [7, 341], "osmesa": 7, "egl": 7, "advic": [7, 56, 359], "sudo": [7, 335], "enabl": [7, 8, 52, 61, 62, 71, 78, 192, 196, 235, 312, 343, 345, 353, 354, 356], "apt": [7, 353], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 61, 62, 63, 74, 75, 78, 342, 344], "workflow": [7, 225, 226, 227], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 21, 31, 44, 56, 62, 85, 89, 103, 109, 141, 161, 163, 359], "binari": [7, 23, 26, 32, 117, 187, 213, 230, 231, 237, 238, 253, 256, 257, 278], "mkdir": 7, "tag": [7, 299, 301, 304, 332, 349, 350], "earlier": [7, 341, 343, 344, 353, 356], "roboti": 7, "download": [7, 10, 51, 52, 53, 54, 56, 57, 58, 93, 141, 163, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "html": [7, 100, 102], "wget": 7, "mujoco210": 7, "tar": [7, 53], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 103, 109], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 33, 35, 44, 59], "bin": [7, 187, 231, 336], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 183, 236, 240, 341, 343, 356], "nvidia": [7, 93], "older": [7, 11], "hack": [7, 341], "line": [7, 31, 51, 85, 89, 103, 109, 341, 342, 349, 353, 356, 359], "adatp": 7, "script": [7, 53, 167, 325, 328, 332, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "unnot": [7, 142], "until": [7, 20, 156, 158, 343, 344, 350, 353], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 342, 356], "troubleshoot": 7, "gl": 7, "h": [7, 67, 119, 121, 145, 157, 190, 191, 192, 194, 195, 196, 200, 299, 342, 344, 356], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 33, 35, 38, 44, 51, 52, 53, 54, 56, 57, 58, 61, 304, 306, 338, 341, 346, 349], "devel": 7, "ubuntu": [7, 93], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 342, 344, 352], "libstdc": 7, "glibcxx_3": 7, "29": [7, 342, 353, 354], "compil": [7, 31, 85, 89, 103, 109, 190, 191, 194, 195], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 164, 343, 352], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 85, 89, 103, 109, 136, 159, 270, 356, 359], "job": [7, 17, 18, 19, 21, 37, 356], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 81, 82, 340, 342, 352, 354, 357], "114": [7, 354], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 354], "offscreenopenglcontext": 7, "opengl": [7, 353], "global": [7, 31, 85, 89, 103, 104, 105, 109, 212, 221, 236, 240, 278, 338, 341, 353], "cuda_visible_devic": 7, "id": [7, 22, 39, 65, 67, 72, 73, 85, 88, 89, 103, 109, 235, 268, 302, 306, 325, 348, 356], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 354], "correctli": [7, 31, 85, 89, 103, 109], "lgl": 7, "libegl": 7, "x11": [7, 353], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 338], "n_training_step": 8, "datapoint": [8, 44, 356], "n_data_per_train": 8, "no_grad": [8, 31, 85, 89, 103, 109, 135, 190, 191, 194, 195, 280, 281, 282, 283, 343, 344, 353], "loss_fn": [8, 344, 347, 348, 358], "zero_grad": [8, 31, 85, 89, 103, 109, 338, 341, 343, 344, 347, 350, 353, 354], "backpropag": [8, 81, 82, 94, 95, 103, 249, 250, 251, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 272, 278, 347, 353, 354], "differenti": [8, 44, 81, 82, 135, 280, 281, 282, 283, 344, 346, 347, 353, 354], "denomin": 8, "artifact": 8, "numer": [8, 37, 89, 165, 193, 219, 220, 224, 230, 231, 236, 237, 238, 239, 240, 314, 343, 356, 359], "misconcept": 8, "freed": 8, "appear": [8, 32, 51, 56, 65, 72, 73, 354, 356], "compuat": 8, "fix": [8, 103, 155, 250, 266, 270, 342, 350, 354, 359], "retain_graph": [8, 81, 82], "discuss": [8, 9, 348, 353], "inplac": [8, 31, 33, 35, 38, 85, 89, 103, 109, 159, 270, 341], "onto": [8, 32, 33, 35, 38, 171, 224, 228, 230, 231, 235, 236, 237, 238, 239, 240, 344, 354], "exclud": [8, 52, 57, 85, 89, 103, 109, 119, 129, 174, 212, 353, 356], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 85, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 161, 162, 164, 165, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 203, 204, 205, 207, 208, 209, 211, 212, 214, 215, 217, 221, 222, 228, 229, 231, 232, 235, 236, 238, 239, 240, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 337, 354, 356, 358, 359], "submodul": [8, 31, 85, 89, 103, 109, 113, 265], "param": [8, 31, 39, 85, 89, 99, 103, 109, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158, 185, 187, 218, 229, 236, 239, 242, 265, 274, 277, 280, 281, 282, 283, 284, 341, 350, 353, 354, 355, 358], "grad": [8, 31, 81, 82, 85, 89, 103, 109, 341, 343], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 85, 89, 103, 104, 105, 109, 123, 141, 155, 158, 159, 161, 163, 207, 212, 239], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 40, 64, 65, 119, 131, 142, 160, 259, 280, 282, 283, 337, 343, 353, 354], "much": [8, 13, 14, 16, 34, 40, 56, 64, 65, 103, 109, 264, 267, 343, 345, 349, 353, 354, 356, 359], "render": [8, 110, 299, 312, 341, 342, 343, 345, 349], "factor": [8, 31, 146, 193, 206, 219, 220, 228, 232, 233, 235, 250, 255, 258, 259, 261, 271, 286, 341, 342, 346, 350, 353, 356, 359], "fit": [8, 11, 137, 337, 338, 341], "bottlneck": 8, "brax": [8, 81, 82, 85, 89, 103, 109, 144, 345, 359], "jax": [8, 11, 81, 82, 94, 95], "improperli": 8, "underli": [8, 85, 89, 103, 109, 265, 345, 347, 349, 354], "tedeiou": 8, "priorit": [8, 34, 40, 64, 65, 252, 253, 255, 256, 257, 263, 268, 270, 272, 341, 342, 348], "amount": [8, 235, 342, 356], "costli": [8, 354], "constitut": [8, 342, 353, 354], "plain": [8, 345], "profil": 8, "fulli": [8, 31, 85, 89, 103, 109, 191, 195, 342, 347, 354, 356], "frequent": [8, 356], "program": [8, 256, 263, 359], "functorch": [8, 10], "incl": 8, "suit": [8, 84, 343, 345, 359], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 72, 73, 239, 242, 265, 353, 354, 356, 358], "new_shap": 8, "permut": [8, 71, 139, 358, 359], "idea": [9, 268, 338, 344, 346, 353], "introductori": 9, "intro": [9, 343, 344], "dai": [9, 358], "2022": [9, 10, 354, 358], "spin": [9, 83, 84], "deep": [9, 119, 180, 181, 182, 183, 186, 235, 249, 262, 270, 271, 341], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 346], "summari": [9, 137, 165, 341, 342, 343, 344], "reddit": 9, "reagent": 9, "orient": [9, 58, 359], "baselines3": 9, "tf": 9, "bandit": [9, 102], "tensorflow": [9, 201, 202], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 350], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 358], "grade": 9, "factori": [9, 42, 341], "cherri": 9, "jaxrl": 9, "space": [9, 32, 43, 85, 89, 103, 109, 122, 126, 171, 184, 187, 203, 209, 213, 224, 228, 230, 231, 233, 235, 236, 237, 238, 239, 240, 242, 243, 244, 253, 255, 256, 257, 272, 278, 336, 342, 343, 344, 345, 346, 347, 353, 354, 358, 359], "mbrl": [9, 99, 336], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 354], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 343, 344, 353], "notebook": [10, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "24": [10, 57, 73, 88, 100, 101, 340, 342, 343, 353, 354, 355, 357], "pip3": [10, 341, 343, 344, 353], "extra": [10, 31, 85, 89, 103, 109, 119, 165, 174, 306, 336, 343, 344, 356], "url": [10, 91], "org": [10, 34, 53, 54, 56, 58, 64, 65, 81, 82, 83, 84, 91, 94, 95, 100, 101, 102, 106, 110, 111, 119, 141, 161, 179, 180, 181, 182, 183, 184, 187, 188, 189, 194, 200, 201, 202, 206, 208, 209, 211, 212, 214, 215, 221, 231, 235, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 269, 270, 271, 280, 285, 293, 333, 351, 355], "whl": 10, "u": [10, 55, 190, 191, 194, 195, 354], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 265], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 76, 81, 83, 84, 85, 87, 88, 89, 90, 91, 94, 100, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 119, 126, 128, 134, 135, 137, 141, 142, 145, 150, 153, 154, 159, 161, 163, 164, 165, 168, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 186, 187, 189, 192, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 212, 213, 221, 224, 230, 231, 236, 237, 238, 239, 240, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 278, 279, 280, 281, 282, 283, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 320, 325, 326, 332, 342, 343], "callabl": [11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 85, 86, 89, 99, 103, 109, 115, 128, 248, 321, 322, 330, 331, 332, 342, 356], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 192, 196, 197, 358], "longer": [11, 342, 350, 353, 356], "self": [11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 85, 89, 99, 103, 109, 116, 123, 124, 127, 141, 143, 155, 158, 159, 161, 163, 176, 187, 200, 212, 221, 228, 232, 236, 239, 244, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 280, 281, 282, 283, 284, 338, 341, 354, 356, 358, 359], "x": [11, 22, 25, 31, 37, 39, 56, 73, 135, 157, 178, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 203, 204, 222, 230, 236, 237, 246, 248, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 316, 341, 354, 356, 358], "23": [11, 57, 73, 340, 342, 347, 354, 357], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 57, 81, 82, 89, 94, 95, 195, 248, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 341, 342, 343, 344, 350, 353, 354, 356, 359], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 72, 73, 81, 82, 85, 88, 89, 90, 91, 94, 95, 98, 100, 101, 103, 104, 105, 106, 109, 110, 111, 119, 120, 126, 137, 154, 155, 156, 159, 165, 190, 193, 194, 203, 204, 219, 220, 230, 237, 243, 250, 260, 265, 266, 270, 280, 282, 283, 312, 313, 338, 341, 342, 343, 344, 354, 359], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 85, 89, 103, 109, 161, 179, 211], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 57, 85, 86, 87, 89, 100, 103, 104, 105, 109, 110, 111, 112, 135, 155, 159, 164, 165, 177, 178, 179, 180, 181, 182, 183, 184, 189, 197, 198, 211, 236, 240, 270, 303, 304, 312, 321, 322, 325, 330, 331, 332, 341, 342, 343, 356, 359], "setter": 11, "setter_dict": 11, "copi": [11, 17, 18, 19, 20, 31, 33, 35, 38, 39, 44, 56, 85, 89, 103, 109, 144, 154, 159, 174, 192, 196, 229, 265, 270, 337, 341, 342, 344, 345, 356], "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "tensordictbas": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 76, 85, 87, 89, 103, 109, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 134, 135, 140, 142, 143, 144, 146, 149, 150, 153, 154, 155, 156, 158, 164, 165, 174, 175, 176, 192, 196, 199, 200, 228, 229, 231, 232, 235, 238, 239, 240, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 278, 279, 280, 281, 282, 283, 284, 316, 341, 354], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 86, 103, 109, 341, 358], "device_typ": [13, 15, 16, 26, 29, 32, 177, 178, 179, 180, 181, 182, 183, 189, 198, 203, 204, 205, 206, 211], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 342], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 342], "create_env_kwarg": [13, 14, 15, 16, 20, 86, 100, 103, 109, 341, 359], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 146, 342, 356], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 265, 312, 341, 342, 343, 344, 346, 358], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 169, 173, 236, 240, 312], "exploration_mod": [13, 15, 16, 17, 18, 19, 334, 336], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 32, 34, 39, 40, 45, 56, 64, 65, 67, 85, 89, 103, 109, 119, 123, 124, 127, 135, 137, 141, 146, 147, 148, 154, 155, 157, 158, 159, 161, 163, 165, 185, 188, 190, 193, 194, 198, 201, 202, 205, 206, 214, 215, 218, 220, 228, 239, 243, 246, 247, 248, 249, 250, 255, 256, 257, 260, 261, 262, 263, 266, 268, 270, 271, 272, 279, 285, 286, 287, 288, 289, 290, 291, 292, 293, 314, 341, 342, 356, 359], "num_thread": [13, 14, 16, 33, 35, 38, 103, 109], "num_sub_thread": [13, 14, 16, 103, 109], "datacollector": [13, 14, 15, 16, 240, 267, 343, 348, 356], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 224, 228, 230, 231, 235, 236, 237, 238, 239, 240, 242, 336, 358], "env_mak": [13, 14, 15, 20, 328, 359], "50": [13, 14, 15, 20, 36, 39, 51, 58, 72, 73, 342, 343, 344, 353, 354, 355, 356], "2000": [13, 14, 15, 44, 92, 343, 356], "int64": [13, 14, 15, 22, 26, 29, 33, 35, 36, 38, 39, 40, 42, 44, 51, 54, 56, 57, 58, 59, 64, 85, 89, 98, 102, 103, 104, 105, 107, 108, 109, 128, 139, 146, 153, 187, 213, 230, 231, 235, 236, 237, 238, 336, 343, 344, 345, 346, 348, 349, 354, 356, 358], "shutdown": [13, 14, 15, 16, 20, 341, 358], "del": [13, 14, 15, 341, 343, 352, 358, 359], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 118, 222, 230, 237, 344], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 44], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 342], "divis": [13, 14, 15, 16, 17, 18, 19, 51, 56, 65, 72, 73, 353], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 89, 155, 164, 196, 344, 354, 355], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 318, 342], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 59, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95, 100, 101, 103, 106, 109, 123, 124, 127, 135, 141, 155, 158, 159, 161, 163, 165, 239, 325, 359], "span": [13, 14, 15, 16, 17, 18, 19, 20, 56, 72], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 342, 343, 353], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 39, 306, 336, 353, 354], "round": [13, 14, 15, 16, 17, 18, 19, 20, 51], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 54, 85, 89, 103, 109], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 164, 358], "ratio": [13, 14, 16, 39, 341, 343], "finish": [13, 14, 16, 20, 89, 146, 359], "rest": [13, 14, 16, 336, 343, 344, 354, 358], "earli": [13, 14, 16, 89, 153, 358], "equal": [13, 14, 16, 51, 65, 72, 73, 100, 103, 109, 136, 137, 177, 178, 190, 192, 194, 196, 198, 204, 271, 275, 307, 330, 331, 341, 343, 355], "plu": [13, 14, 16, 39, 103, 109, 354], "safeti": [13, 14, 16, 99, 103, 109], "harm": [13, 14, 16, 103, 109], "ordereddict": [13, 14, 15, 16, 20, 31, 85, 89, 103, 109, 159, 165, 270, 342], "form": [13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 85, 89, 103, 109, 165, 190, 192, 194, 196, 248, 249, 251, 264, 267, 316, 336, 346, 353], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 85, 89, 103, 109, 159], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 32, 39, 46, 65, 72, 73, 74, 85, 89, 103, 109, 128, 132, 137, 153, 177, 178, 198, 203, 204, 256, 263, 270, 356], "increment": [13, 14, 15, 16, 85, 89, 103, 109, 264], "env_fn": [13, 14, 15, 16, 86, 330, 331], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 72, 73, 182, 183, 354], "out_se": [13, 14, 15, 16, 359], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 45, 51, 52, 53, 64, 67, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 123, 141, 143, 152, 155, 158, 159, 160, 162, 163, 166, 176, 177, 178, 180, 181, 182, 183, 186, 189, 192, 193, 196, 198, 199, 200, 203, 204, 210, 218, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 278, 279, 280, 281, 282, 283, 284, 299, 303, 304, 306, 309, 316, 321, 322, 325, 329, 330, 331, 337, 341, 343, 353, 356], "envcreat": [15, 21, 103, 109, 328, 329, 332, 334, 341, 342, 358, 359], "return_same_td": 15, "interruptor": 15, "cautious": [15, 267], "whole": [15, 25, 27, 31, 44, 85, 89, 103, 109, 159, 236, 270, 307, 341, 343], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 346], "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 89, 100, 135, 249, 251, 264, 267, 341, 342, 345, 352, 354, 358], "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 316], "respect": [17, 18, 19, 31, 85, 89, 103, 109, 117, 123, 124, 127, 141, 142, 151, 155, 158, 159, 161, 163, 190, 194, 203, 215, 239, 244, 280, 282, 283, 311, 343, 344, 353], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 335, 342, 343, 346, 349, 352, 356], "serv": [17, 19, 20, 91, 356, 359], "fashion": [17, 19, 20, 33, 35, 38, 73], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 51, 53, 54, 56, 57, 58, 85, 89, 103, 109, 131], "seen": [17, 18, 19, 20, 85, 89, 103, 109, 337, 341, 342, 344, 347, 353, 356], "submitit_delai": [17, 21], "former": [17, 18, 19, 34, 37, 40, 41, 52, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 341], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 354], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 341], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 32, 51, 236, 240], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 330, 331, 341, 342], "coordin": 20, "init": [20, 31, 85, 89, 103, 109, 306, 342, 343], "autodetect": 20, "similarli": [20, 31, 71, 75, 85, 89, 103, 109, 203, 241, 242, 256, 263, 359], "num_cpu": 20, "num_gpu": 20, "1024": [20, 184, 342, 356], "equat": [20, 56, 89, 235, 248, 251, 271, 343, 345, 354], "exce": [20, 356], "indefinit": [20, 50], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 316, 343, 344], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 347], "jump": [21, 345], "host": [21, 31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 179, 184, 211, 229], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 85, 89, 103, 109, 232, 233, 235, 236, 243, 249, 250, 252, 263, 267, 268, 270, 272, 334, 343, 353, 354, 358, 359], "rollout_tensordict": 22, "trajectory_kei": 22, "nestedkei": [22, 44, 65, 72, 73, 85, 89, 103, 109, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 131, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 165, 174, 175, 228, 229, 232, 233, 235, 240, 253, 278, 299], "durat": [22, 353], "meta": [22, 43, 52, 87, 91, 249, 251, 264, 267, 269, 338, 343, 353, 356], "aren": [22, 154, 344], "deprec": [22, 31, 85, 89, 103, 109, 159, 168, 172, 233, 249, 251, 253, 256, 257, 258, 263, 264, 267, 268, 269, 270, 278, 280, 281, 282, 283, 288, 359], "eventu": [22, 212, 344, 354], "supersed": 22, "recov": [22, 52, 54, 56, 57, 58, 72, 73, 228, 233, 235, 241, 256, 263, 352], "cat": [22, 244, 250, 252, 263, 268, 270, 272, 356, 358], "arang": [22, 26, 32, 65, 187, 202, 230, 307, 336, 356], "obs_": 22, "trajectory_id": 22, "int32": [22, 41, 51, 56, 72, 94, 95, 171], "data_split": 22, "got": [22, 348], "int8": [23, 85, 98, 104, 105, 117], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "op": [23, 24, 26, 29, 30, 32, 43, 45, 46, 136, 164, 228, 232, 299, 318], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 41, 43, 45, 46, 81, 82, 85, 88, 90, 91, 94, 95, 100, 101, 106, 126, 209, 210, 214, 248, 336, 342, 343, 344, 346, 354, 356], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 89, 235, 243], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 89, 243, 354], "least": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 122, 349, 359], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 177, 178, 198, 216, 217], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 359], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 126, 194, 224, 228, 230, 231, 235, 236, 237, 238, 239, 240, 306, 336, 358, 359], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 81, 82, 94, 95, 99, 116, 124, 127, 143, 176, 200, 236, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 270, 272, 354, 358, 359], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 67, 155, 171, 354, 356], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 85, 89, 103, 109], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 158, 159, 207, 218, 332], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 32, 81, 82, 88, 90, 91, 94, 95, 100, 101, 104, 105, 106, 110, 111, 116, 126, 187, 210, 213, 230, 231, 237, 238, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 344], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 187, 213, 230, 237, 253, 255, 256, 257, 278, 334, 336, 346], "convert": [23, 26, 29, 30, 31, 32, 33, 35, 38, 44, 81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109, 123, 124, 127, 141, 155, 158, 159, 161, 163, 165, 239, 248, 265, 341, 342, 343, 354, 356], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "upper": [24, 70, 136], "unnam": 25, "constraint": [25, 99, 343, 353], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 120, 325, 341], "td_project": 25, "absent": [25, 27, 52, 85, 89, 103, 109], "is_empti": [25, 27, 354], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 85, 89, 103, 109], "keysview": [25, 27], "reflect": [25, 27, 90, 104, 105, 164, 174, 265, 319, 342, 343, 344, 353], "lock_": [25, 27], "recurs": [25, 27, 31, 47, 48, 85, 89, 103, 109, 265], "succeed": [25, 27], "selected_kei": [25, 27, 150, 341], "unlock_": [25, 27], "unlock": [25, 27, 33, 35, 38], "valuesview": 25, "onehottensorspec": [26, 81, 82, 88, 90, 91, 94, 95, 100, 101, 106], "action_valu": [26, 32, 186, 187, 213, 230, 231, 237, 238, 257, 265, 278, 336, 344, 346, 350], "argmax": [26, 85, 89, 103, 109, 187, 213, 231, 238, 346], "chosen_action_valu": [26, 32, 212, 213, 221, 237, 238, 278, 336, 344, 346], "outcom": [26, 32, 185, 218], "drawn": [27, 28, 155, 232, 236, 240, 343, 353], "lazystackedtensordict": [27, 51, 85, 89, 99, 103, 109, 352], "heterogen": [27, 28, 98, 104, 105, 167, 203, 204, 341, 342], "thrown": [28, 31, 85, 89, 103, 109, 356], "nvec": [29, 30], "cardin": [29, 30, 187, 213, 230, 231, 238, 343], "ax": [29, 205, 206], "m": [29, 31, 85, 89, 103, 109, 126, 240, 336, 342, 354], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 253, 256, 257, 278, 334], "use_regist": [30, 32], "to_categor": [30, 32], "to_categorical_spec": [30, 32], "multidiscretetensorspec": [30, 334], "gamma": [31, 146, 200, 249, 250, 252, 253, 255, 257, 258, 259, 261, 263, 265, 267, 268, 269, 270, 272, 273, 274, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 328, 337, 341, 342, 343, 353, 358], "sutton": [31, 337, 353], "1988": 31, "tempor": [31, 192, 196, 200, 281, 282, 287, 288], "44": [31, 340, 342, 346, 354, 355, 356, 357], "discount": [31, 56, 86, 146, 250, 255, 258, 259, 261, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 337, 342, 343, 353], "ahead": [31, 359], "add_modul": [31, 85, 89, 103, 109], "child": [31, 85, 89, 103, 109, 341], "fn": [31, 36, 85, 89, 103, 109, 207, 330, 331], "init_weight": [31, 85, 89, 103, 109], "fill_": [31, 85, 89, 103, 109, 342, 344, 359], "net": [31, 85, 89, 103, 109, 197, 204, 249, 250, 257, 263, 267, 268, 269, 270, 325, 328, 342, 354, 355, 358], "in_featur": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 180, 181, 182, 183, 197, 198, 203, 204, 205, 206, 225, 239, 253, 255, 346, 347, 358], "out_featur": [31, 85, 89, 99, 103, 109, 123, 141, 155, 158, 159, 161, 163, 176, 177, 178, 180, 181, 182, 183, 188, 189, 192, 196, 197, 198, 200, 203, 204, 205, 206, 225, 230, 239, 253, 255, 336, 341, 344, 346, 347, 350, 358], "bia": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 177, 178, 188, 190, 191, 192, 194, 195, 196, 198, 204, 205, 206, 207, 232, 233, 235, 239, 246, 247, 248, 265, 270, 337, 341, 342, 343, 344, 353, 358], "requires_grad": [31, 81, 82, 85, 89, 103, 109, 135], "bfloat16": [31, 85, 89, 103, 109], "datatyp": [31, 85, 89, 103, 109, 356], "member": [31, 85, 89, 103, 109, 265, 299], "xdoctest": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 265, 270], "buf": [31, 85, 89, 103, 109], "20l": [31, 85, 89, 103, 109, 265], "1l": [31, 85, 89, 103, 109, 265], "5l": [31, 85, 89, 103, 109, 265], "__call__": [31, 36, 85, 89, 103, 109, 240, 338, 359], "doubl": [31, 45, 85, 89, 103, 109, 123, 124, 125, 127, 141, 155, 158, 159, 161, 163, 239, 253, 258, 262, 268, 271, 278, 341, 342, 343, 344, 359], "eval": [31, 85, 89, 103, 109, 159, 165, 341, 342, 343], "evalu": [31, 85, 89, 103, 109, 159, 185, 201, 202, 210, 220, 268, 321, 322, 342, 343, 350], "dropout": [31, 85, 89, 103, 109, 159, 190, 192, 194, 196, 198, 344], "batchnorm": [31, 85, 89, 103, 109, 159], "disabl": [31, 85, 89, 103, 109, 159, 193, 220, 341], "comparison": [31, 85, 89, 103, 109, 159, 265, 341, 342], "similar": [31, 37, 56, 85, 89, 103, 104, 105, 109, 123, 141, 155, 158, 159, 161, 162, 163, 165, 225, 227, 236, 239, 240, 337, 341, 342, 343, 344, 346, 347, 348, 349, 354, 356, 359], "confus": [31, 85, 89, 103, 109, 159], "extra_repr": [31, 85, 89, 103, 109], "nontermin": 31, "original_reward": 31, "newli": [31, 85, 89, 103, 109], "OR": 31, "get_buff": [31, 85, 89, 103, 109], "get_submodul": [31, 85, 89, 103, 109], "qualifi": [31, 85, 89, 103, 109], "referenc": [31, 85, 89, 103, 109], "attributeerror": [31, 85, 89, 103, 109, 359], "invalid": [31, 76, 85, 89, 103, 109, 112, 201, 202], "resolv": [31, 85, 89, 103, 109], "someth": [31, 85, 89, 98, 103, 109, 335, 342, 343, 354, 359], "get_extra_st": [31, 85, 89, 103, 109, 165], "set_extra_st": [31, 85, 89, 103, 109, 165], "picklabl": [31, 85, 89, 103, 109, 165], "pickl": [31, 85, 89, 103, 109, 165], "get_paramet": [31, 85, 89, 103, 109], "net_b": [31, 85, 89, 103, 109], "net_c": [31, 85, 89, 103, 109], "conv": [31, 85, 89, 103, 109, 177, 178, 342], "conv2d": [31, 85, 89, 103, 109, 178, 203, 358], "kernel_s": [31, 85, 89, 103, 109, 177, 178, 180, 181, 203, 208, 342, 358], "stride": [31, 85, 89, 103, 109, 177, 178, 180, 181, 189, 203, 342, 358], "diagram": [31, 85, 89, 103, 109], "degre": [31, 85, 89, 103, 109], "named_modul": [31, 85, 89, 103, 109], "o": [31, 85, 89, 103, 109, 195], "transit": [31, 52, 56, 73, 76, 85, 89, 103, 109, 245, 341, 344, 345, 346, 348, 354, 356], "half": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 341], "ipu": [31, 85, 89, 103, 109], "strict": [31, 33, 35, 38, 85, 89, 103, 109, 159, 270], "descend": [31, 85, 89, 103, 109, 159, 270], "persist": [31, 85, 89, 103, 109, 159, 174, 270], "enforc": [31, 71, 85, 89, 103, 109, 159, 241, 270, 354], "preserv": [31, 85, 89, 103, 109, 159, 270], "missing_kei": [31, 85, 89, 103, 109, 159, 270], "unexpected_kei": [31, 85, 89, 103, 109, 159, 270], "namedtupl": [31, 85, 89, 103, 109, 159, 270], "duplic": [31, 71, 85, 89, 103, 109, 253, 258, 265, 278], "l": [31, 85, 89, 103, 109, 190, 194, 279, 343, 354], "idx": [31, 85, 89, 103, 109], "named_buff": [31, 85, 89, 103, 109], "remove_dupl": [31, 85, 89, 103, 109, 265], "prepend": [31, 85, 89, 103, 109, 265], "running_var": [31, 85, 89, 103, 109], "named_children": [31, 85, 89, 103, 109], "conv4": [31, 85, 89, 103, 109], "conv5": [31, 85, 89, 103, 109], "memo": [31, 85, 89, 103, 109], "named_paramet": [31, 85, 89, 103, 109, 135, 265], "register_backward_hook": [31, 85, 89, 103, 109], "removablehandl": [31, 85, 89, 103, 109], "favor": [31, 85, 89, 103, 109, 343], "register_full_backward_hook": [31, 85, 89, 103, 109], "register_buff": [31, 85, 89, 103, 109], "running_mean": [31, 85, 89, 103, 109], "alongsid": [31, 85, 89, 103, 109, 349, 353], "num_featur": [31, 85, 89, 103, 109], "register_forward_hook": [31, 85, 89, 103, 109, 187, 213], "with_kwarg": [31, 85, 89, 103, 109], "always_cal": [31, 85, 89, 103, 109], "register_module_forward_hook": [31, 85, 89, 103, 109], "regardless": [31, 85, 89, 103, 109, 251, 264, 267], "register_forward_pre_hook": [31, 85, 89, 103, 109], "invok": [31, 85, 89, 103, 109], "And": [31, 85, 89, 103, 109, 347], "forward_pr": [31, 85, 89, 103, 109], "register_module_forward_pre_hook": [31, 85, 89, 103, 109], "grad_input": [31, 85, 89, 103, 109], "grad_output": [31, 85, 89, 103, 109], "subsequ": [31, 85, 89, 103, 109, 344], "technic": [31, 85, 89, 103, 109, 342, 344, 346], "caller": [31, 85, 89, 103, 109], "register_module_full_backward_hook": [31, 85, 89, 103, 109], "register_full_backward_pre_hook": [31, 85, 89, 103, 109], "backward_pr": [31, 85, 89, 103, 109], "register_module_full_backward_pre_hook": [31, 85, 89, 103, 109], "register_load_state_dict_post_hook": [31, 85, 89, 103, 109], "incompatible_kei": [31, 85, 89, 103, 109], "register_modul": [31, 85, 89, 103, 109, 338], "alia": [31, 85, 89, 103, 109], "register_paramet": [31, 85, 89, 103, 109], "register_state_dict_pre_hook": [31, 85, 89, 103, 109], "keep_var": [31, 33, 35, 38, 85, 89, 103, 109, 159, 270], "requires_grad_": [31, 85, 89, 103, 109], "autograd": [31, 85, 89, 103, 109, 159, 270], "freez": [31, 85, 89, 103, 109], "finetun": [31, 85, 89, 103, 109], "gan": [31, 85, 89, 103, 109], "share_memori": [31, 85, 86, 89, 103, 109, 341], "share_memory_": [31, 85, 89, 103, 109, 358], "destin": [31, 33, 35, 38, 85, 89, 103, 109, 118, 124, 125, 127, 159, 161, 165, 174, 270, 299], "averag": [31, 85, 89, 103, 109, 159, 165, 235, 259, 260, 270, 314, 341, 343], "shallow": [31, 85, 89, 103, 109, 159, 270, 344], "pleas": [31, 54, 85, 89, 103, 104, 105, 109, 119, 156, 159, 270, 335], "detach": [31, 85, 89, 103, 109, 159, 265, 270, 280, 281, 282, 283, 341], "non_block": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 344], "memory_format": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "channels_last": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "unchang": [31, 85, 89, 103, 109, 123, 126, 141, 155, 158, 159, 161, 163, 232, 239, 313, 341, 356], "tri": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 349], "pin": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "4d": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "ignore_w": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "1913": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 340, 344, 357], "3420": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "5113": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "2325": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "torch_doctest_cuda1": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "gpu1": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "1914": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "5112": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 354], "2324": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "float16": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 191, 195, 239], "cdoubl": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "3741": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "j": [31, 34, 64, 65, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 338, 347], "2382": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "5593": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239, 354], "4443": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "complex128": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "6122": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "1150": [31, 85, 89, 103, 109, 123, 141, 155, 158, 159, 161, 163, 239], "to_empti": [31, 85, 89, 103, 109], "dst_type": [31, 85, 89, 103, 109], "xpu": [31, 85, 89, 103, 109], "set_to_non": [31, 85, 89, 103, 109], "unidimension": 32, "keepdim": 32, "user_regist": 32, "priori": 32, "uniqu": [32, 72, 73, 119, 128, 154, 155, 156, 306, 348, 356], "discretebox": [32, 85, 89, 103, 109, 346, 353, 359], "chosen_data": [33, 59], "rewarddata": [33, 59, 334], "rejected_data": [33, 59], "from_dataset": [33, 35, 59], "dataset_nam": [33, 35, 39, 44, 59, 102], "max_length": [33, 35, 36, 42, 44, 59, 350], "550": [33, 35, 39, 44, 59, 72, 73, 354], "root_dir": [33, 35, 44, 59], "from_disk": [33, 35, 44, 59], "num_work": [33, 35, 44, 58, 59, 100, 103, 109, 341, 342], "carperai": [33, 35, 39, 44], "openai_summarize_comparison": [33, 35, 44], "sequen": [33, 35], "cach": [33, 35, 44, 51, 52, 53, 54, 56, 57, 58, 59, 65, 72, 85, 89, 103, 109, 124, 127, 141, 159, 163, 308, 355], "load_from_disk": [33, 35, 44, 59], "load_dataset": [33, 35, 44, 59], "attention_mask": [33, 35, 36, 38, 39, 42, 44, 59], "92534": 33, "input_id": [33, 35, 36, 38, 39, 42, 44, 59], "end_scor": [33, 38, 39, 59], "sub_data": [33, 35], "from_dict": [33, 35, 38, 44], "batch_dim": [33, 35, 38, 44, 332], "input_dict": [33, 35, 38], "exclusinv": [33, 35, 38], "__maximum__": [33, 35, 38], "toler": [33, 35, 38, 81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 185, 218], "sie": [33, 35, 38], "input_td": [33, 35, 38, 85, 89, 103, 109], "from_tensordict": [33, 35, 38], "non_tensordict": [33, 35, 38], "_no_default_": [33, 35, 38], "getattr": [33, 35, 38], "tensorclass": [33, 35, 38, 59, 61, 62, 78], "from_flatten": [33, 35, 38], "attemptedli": [33, 35, 38], "memmap": [33, 35, 38, 61, 103, 109, 165, 299, 301, 313, 356], "copy_exist": [33, 35, 38], "return_earli": [33, 35, 38], "mimic": [33, 35, 38, 85, 89, 103, 109], "cross": [33, 35, 38, 176], "anymor": [33, 35, 38, 159, 239], "tensordictfutur": [33, 35, 38], "deepli": [33, 35, 38], "insid": [33, 35, 38, 103, 359], "memmap_": [33, 35, 38, 165], "memmap_lik": [33, 35, 38], "contentless": [33, 35, 38], "1_000_000": [33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 72, 341, 344], "alloc": [33, 35, 38, 62, 201, 202, 341], "setattr": [33, 35, 38], "tent": [33, 35, 38, 44], "to_tensordict": [33, 35, 38, 344], "unbind": [33, 34, 35, 37, 38, 40, 41, 192, 196], "alpha": [34, 40, 64, 65, 177, 178, 203, 250, 257, 266, 268, 270, 341, 356, 358], "ep": [34, 40, 64, 65, 165, 235, 251, 271, 314, 341, 342, 344, 347, 350], "1e": [34, 40, 64, 65, 165, 185, 188, 207, 218, 341, 342, 343, 353], "08": [34, 40, 64, 65, 342, 343, 354], "pin_memori": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 140, 341, 358], "schaul": [34, 64, 65], "quan": [34, 64, 65], "antonogl": [34, 64, 65], "silver": [34, 64, 65], "2015": [34, 64, 65], "arxiv": [34, 53, 56, 58, 64, 65, 81, 82, 83, 84, 94, 95, 100, 101, 106, 110, 111, 119, 141, 161, 179, 180, 181, 182, 183, 184, 187, 188, 189, 194, 200, 206, 208, 209, 211, 212, 214, 215, 221, 231, 235, 249, 250, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 267, 270, 271, 280, 285, 293, 355], "ab": [34, 53, 56, 58, 64, 65, 81, 82, 83, 84, 94, 95, 100, 101, 106, 110, 111, 118, 141, 161, 165, 179, 184, 188, 189, 194, 200, 206, 208, 209, 211, 212, 214, 215, 221, 249, 250, 253, 254, 255, 256, 259, 260, 261, 262, 263, 266, 267, 270, 355], "1511": [34, 64, 65, 189], "05952": [34, 64, 65], "expon": [34, 40, 64, 65], "\u03b1": [34, 40, 64, 65], "delta": [34, 40, 64, 65, 190, 194, 218, 236, 240, 334, 337], "null": [34, 40, 64, 65, 117], "max_siz": [34, 37, 40, 41, 61, 62, 63, 74, 76, 78, 343, 348], "1_000": [34, 37, 40, 41, 356], "merg": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 354], "mini": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 353], "decid": [34, 37, 40, 41, 358], "meth": [34, 37, 40, 41, 265, 354], "incompat": [34, 37, 40, 41, 269, 356], "drop_last": [34, 37, 40, 41, 71, 73], "dimension": [34, 37, 40, 41, 126, 192, 196, 280, 285, 293, 353], "notion": [34, 37, 40, 41], "caution": [34, 37, 40, 41, 71, 167, 359], "codebas": [34, 37, 40, 41, 354], "approach": [34, 37, 40, 41, 137, 341, 343, 347, 348, 359], "return_info": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 67, 356], "tensordictprioritizedreplaybuff": [34, 334, 358], "simplifi": [34, 346, 354, 356], "manual_se": [34, 37, 40, 41, 53, 57, 58, 72, 73, 81, 82, 85, 89, 103, 109, 116, 126, 137, 146, 149, 154, 156, 201, 202, 210, 224, 231, 232, 233, 235, 243, 249, 250, 252, 256, 263, 270, 348, 350, 353, 354, 358, 359], "_weight": [34, 40, 64, 65, 356, 358], "arrai": [34, 39, 64, 85, 89, 103, 109, 128, 190, 191, 194, 195, 341, 356], "update_prior": [34, 64, 65, 313, 338, 342, 356, 358], "36278465": 34, "tempfil": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 328, 341, 342, 356], "tqdm": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 316, 341, 343, 344, 353, 354], "randomsampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 341], "td_error": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 252, 253, 255, 256, 257, 258, 263, 265, 268, 270, 272, 278, 341, 347, 356, 358], "update_tensordict_prior": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67, 341, 356, 358], "temporarydirectori": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 341, 342, 356], "tmpdir": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 67, 341, 342], "rb_load": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "cursor": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "insert_transform": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "insert": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 60, 67, 68, 76, 77, 79, 80, 160], "set_sampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "set_storag": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "set_writ": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 67], "prompt_rindex": [35, 36, 39], "os": [35, 44, 59, 342], "cpu_count": [35, 44, 59], "promptdatatldr": 35, "116722": 35, "prompt": [36, 39], "return_tensordict": [36, 42], "recip": [36, 85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246], "text": [36, 39, 42, 54, 190, 191, 194, 195, 235, 343], "tensodict": [36, 42], "orign": [36, 42], "valid_sampl": 36, "eough": 36, "toknen": 36, "meet": 36, "criterion": 36, "autotoken": [36, 42, 44], "from_pretrain": [36, 39, 42], "gpt2": [36, 39, 42, 44, 179, 184, 211], "pad_token": [36, 42], "eos_token": 36, "enough": [36, 356], "inde": [36, 126, 343, 354], "roundrobinwrit": [37, 41, 53], "Not": [37, 81, 82, 94, 95], "depth": [37, 85, 89, 99, 103, 109, 176, 177, 178, 180, 181, 182, 183, 188, 189, 198, 200, 203, 204, 208, 209, 230, 336, 342, 345, 347, 348, 352, 353, 356], "_pytre": [37, 356], "tree_map": [37, 356], "did": [37, 164, 286, 342, 343, 348, 356, 359], "assert0": [37, 356], "ref_model": 39, "reward_model": [39, 245], "kl_coef": 39, "max_new_token": 39, "score_clip": 39, "kl_schedul": 39, "klcontrollerbas": 39, "num_step": 39, "causal": 39, "sentenc": 39, "frozen": [39, 135], "kl": [39, 135, 260, 264], "penalti": [39, 264], "strai": 39, "calcul": [39, 146, 190, 255], "gpt2rewardmodel": 39, "get_dataload": [39, 334], "promptdata": [39, 334], "gpt2lmheadmodel": 39, "dl": 39, "block_siz": [39, 59], "tensorclass_typ": [39, 59], "openai_summarize_tldr": 39, "config_class": 39, "model_path": 39, "rollout_from_model": 39, "rollout_from_data": 39, "600": [39, 349, 354, 356], "reward_kl": [39, 135], "reward_raw": 39, "sample_log_prob": [39, 225, 226, 227, 236, 240, 242, 267, 325, 343, 346, 353, 358], "create_rollout_td": 39, "log_prob": [39, 185, 201, 202, 210, 220, 240], "log_ratio": 39, "replic": 39, "rindex": 39, "eo": 39, "term": [39, 135, 194, 195, 205, 206, 248, 249, 257, 318, 342, 343, 345, 346, 353], "generation_config": 39, "generationconfig": 39, "ti": [39, 289, 290, 291, 292, 294, 295, 296, 297, 342], "log_probs_gen": 39, "logprobs_of_label": 39, "priority_kei": [40, 41, 64, 253, 256, 257, 258, 263, 265, 268, 270, 272, 278, 356, 358], "reduct": [40, 64, 65, 76, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 272], "prioritizedreplaybuff": [40, 334, 358], "min": [40, 64, 65, 76, 218, 219, 220, 229, 235, 250, 251, 257, 266, 268, 270, 342, 343, 353], "median": [40, 64, 65, 76, 94, 95, 236, 240], "include_info": [40, 41, 51, 52, 53, 54, 55, 56, 57, 58], "kw": [41, 68, 77], "huggingfac": [42, 53, 58, 234], "co": [42, 128, 354], "doc": [42, 91, 94, 95, 102, 106, 306, 341, 342, 353, 356, 359], "pad_trunc": 42, "am": 42, "me": 42, "reassur": 42, "ok": 42, "describ": [43, 120, 158, 218, 219, 253, 302, 337, 341, 343, 353, 354, 359], "tokenizer_fn": 44, "tensordicttoken": [44, 334], "pre_tokenization_hook": 44, "valid_s": 44, "tokenizer_class": 44, "tokenizer_model_nam": 44, "tokein": 44, "elementwis": 44, "vocabulari": 44, "loader": [44, 343], "185068": 44, "dataset_to_tensordict": 44, "data_dir": 44, "valid_mask_kei": 44, "conver": 44, "batch_dimens": 44, "filder": 44, "data_memmap": 44, "exclus": [47, 48, 51, 56, 65, 72, 73, 131, 190, 192, 194, 196, 201, 202, 230, 231, 237, 238, 271, 272, 280, 281, 282, 283, 284, 306, 332, 336], "recurse_through_entri": 48, "recurse_through_stack": 48, "consolid": 48, "dataset_id": [51, 52, 53, 54, 56, 57, 58], "num_proc": 51, "slice_len": [51, 56, 65, 72, 73], "strict_len": 51, "arari": 51, "2600": 51, "million": [51, 344], "consequ": [51, 194, 348], "50x10": 51, "available_dataset": [51, 53, 54, 56, 57, 58, 72, 73], "ataridqn": 51, "immutabledatasetwrit": [51, 52, 54, 55, 56, 57, 58], "greater": [51, 65, 72, 73, 192, 196, 341, 342, 358], "shorter": [51, 56, 65, 72, 73], "Be": [51, 56, 65, 72, 73], "game_nam": 51, "pong": [51, 101, 139, 359], "krull": 51, "1d": [51, 65, 72, 73, 76], "cheapli": 51, "nontensordata": [51, 56], "invalid_rang": 51, "999998": 51, "999999": 51, "add_count": 51, "84": [51, 145, 342, 344, 354, 355, 356], "valueestim": [51, 249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 334, 337, 341, 353], "convolut": [51, 177, 178, 180, 181, 203, 216, 346], "2657628": 51, "2657629": 51, "2657630": 51, "2657631": 51, "2657632": 51, "2657633": 51, "2657634": 51, "2657635": 51, "2657636": 51, "2657637": 51, "2657638": 51, "2657639": 51, "2657640": 51, "2657641": 51, "2657642": 51, "2657643": 51, "2657644": 51, "2657645": 51, "2657646": 51, "2657647": 51, "2657648": 51, "2657649": 51, "2657650": 51, "2657651": 51, "2657652": 51, "2657653": 51, "2657654": 51, "2657655": 51, "2657656": 51, "2657657": 51, "2657658": 51, "2657659": 51, "2657660": 51, "2657661": 51, "2657662": 51, "2657663": 51, "2657664": 51, "2657665": 51, "2657666": 51, "2657667": 51, "2657668": 51, "2657669": 51, "2657670": 51, "2657671": 51, "2657672": 51, "2657673": 51, "2657674": 51, "2657675": 51, "2657676": 51, "2657677": 51, "2657678": 51, "2657679": 51, "2657680": 51, "2657681": 51, "2657682": 51, "2657683": 51, "2657684": 51, "2657685": 51, "2657686": 51, "2657687": 51, "2657688": 51, "2657689": 51, "2657690": 51, "2657691": 51, "1995687": 51, "1995688": 51, "1995689": 51, "1995690": 51, "1995691": 51, "1995692": 51, "1995693": 51, "1995694": 51, "1995695": 51, "1995696": 51, "1995697": 51, "1995698": 51, "1995699": 51, "1995700": 51, "1995701": 51, "1995702": 51, "1995703": 51, "1995704": 51, "1995705": 51, "1995706": 51, "1995707": 51, "1995708": 51, "1995709": 51, "1995710": 51, "1995711": 51, "1995712": 51, "1995713": 51, "1995714": 51, "1995715": 51, "1995716": 51, "1995717": 51, "1995718": 51, "1995719": 51, "1995720": 51, "1995721": 51, "1995722": 51, "1995723": 51, "1995724": 51, "1995725": 51, "1995726": 51, "1995727": 51, "1995728": 51, "1995729": 51, "1995730": 51, "1995731": 51, "1995732": 51, "1995733": 51, "1995734": 51, "1995735": 51, "1995736": 51, "1995737": 51, "1995738": 51, "1995739": 51, "1995740": 51, "1995741": 51, "1995742": 51, "1995743": 51, "1995744": 51, "1995745": 51, "1995746": 51, "1995747": 51, "1995748": 51, "1995749": 51, "1995750": 51, "left": [51, 52, 56, 123, 124, 125, 129, 135, 141, 143, 144, 150, 153, 156, 158, 161, 163, 203, 232, 342, 343, 348, 349], "untouch": [51, 56, 123, 124, 125, 129, 135, 143, 144, 150, 153, 158], "_max_run": 51, "dataset_asterix": 51, "asterix": 51, "dataset_pong": 51, "sample_from_al": [51, 67, 70], "buffer_id": [51, 70, 75], "hidden": [51, 103, 109, 118, 188, 190, 191, 192, 194, 195, 196, 197, 208, 209, 214, 215, 225, 226, 227, 229, 239, 242, 251, 264, 267, 336, 344, 352, 358], "exclusive_field": [51, 352], "stack_dim": [51, 352], "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 57, 58, 330, 331, 341], "reconstruct": [52, 72, 73, 260, 341, 359], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "possess": 52, "unexpectedli": 52, "traj_split": 52, "observationnorm": [52, 165, 332, 341, 342, 343, 344, 358], "maze2d": 52, "umaz": 52, "loc": [52, 135, 137, 148, 193, 207, 219, 220, 225, 226, 227, 236, 240, 242, 249, 250, 263, 267, 268, 269, 270, 320, 325, 332, 336, 341, 342, 343, 344, 346, 353, 358], "gen": 53, "dgrl": 53, "accompani": [53, 153], "gap": 53, "2312": 53, "05742": 53, "gen_dgrl": 53, "procgen": 53, "bigfish": 53, "bossfight": 53, "categori": [53, 336, 338], "1m_e": 53, "1m_": 53, "comma": 53, "npy": 53, "extract": [53, 234, 341, 343, 358], "mmap": [53, 57, 58], "minut": [53, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "internet": [53, 58], "connect": [53, 58], "minari": 54, "websit": [54, 56], "currenrtli": 54, "minari_data": 54, "door": 54, "torchrl_logg": [54, 57, 350], "28": [54, 203, 340, 341, 342, 344, 348, 353, 354, 355, 357], "door_body_po": 54, "qpo": 54, "qvel": 54, "dua": 55, "graff": 55, "2017": 55, "uci": 55, "archiv": 55, "ic": 55, "edu": 55, "ml": 55, "sklearn": [55, 102], "adult_num": [55, 102], "adult_onehot": [55, 102], "mushroom_num": [55, 102], "mushroom_onehot": [55, 102], "covertyp": [55, 102], "shuttl": [55, 102], "magic": [55, 102, 345], "shuffl": [56, 71, 73, 353], "stream": 56, "embodi": [56, 355], "22": [56, 72, 73, 164, 340, 342, 343, 344, 347, 354, 357], "institut": 56, "demonstr": [56, 343, 348, 353, 354, 356, 359], "527": [56, 354], "skill": 56, "160266": 56, "googl": [56, 57, 81, 82, 343, 344, 353], "open_x_embodi": 56, "2310": [56, 106], "08864": 56, "language_instruct": 56, "get_non_tensor": 56, "neither": [56, 354], "nor": 56, "insuffici": 56, "chosen": [56, 110, 111, 154, 155, 212, 213, 221, 238, 299, 325, 336, 349], "openx": 56, "__will": 56, "change__": 56, "randomli": [56, 71, 136, 137, 155, 232, 236, 240, 346, 353, 354, 356], "crop": [56, 121, 142, 299], "modal": [56, 341], "cmu_stretch": 56, "is_init": [56, 58, 118, 134, 192, 196, 235, 344], "language_embed": 56, "512": [56, 189, 342, 354], "lift": 56, "green": 56, "garbag": 56, "lid": 56, "roboset": 57, "h5": [57, 58], "roboh": [57, 106], "fk1": 57, "v4": [57, 89, 103, 145, 289, 290, 291, 292, 294, 295, 296, 297, 325, 341, 343, 355], "expert": 57, "fk1_microopenrandom_v2d": 57, "concis": [57, 347], "75": [57, 342, 354, 355], "totensor": 58, "image_s": 58, "v": [58, 165, 190, 191, 194, 195, 225, 256, 263, 270, 336, 341, 342], "npz": 58, "2206": [58, 100, 101], "04779": [58, 250, 255], "vd4rl": 58, "detect": 58, "squar": [58, 121, 193, 219, 220, 299], "rectangular": [58, 177, 178], "walker_walk": 58, "64px": 58, "height": [58, 121, 145], "veloc": [58, 83, 84, 85, 89, 103, 109, 119, 353, 354, 359], "infinit": [59, 110, 111, 348, 356], "three": [59, 336, 338, 343, 345, 346, 353, 354, 356, 359], "block": [59, 60, 80, 336, 344], "pairwisedataset": [59, 334], "256": [59, 184, 342, 343, 353, 354], "immut": [60, 85, 89, 103, 109, 144, 159], "piec": [60, 68, 77, 79, 80, 341, 342, 343, 349, 353, 354, 356], "scratch_dir": [61, 341, 356], "sent": [61, 62, 78, 165], "mistak": [61, 62, 78], "myclass": [61, 62, 78], "foo": [61, 62, 78, 229, 356, 359], "bar": [61, 62, 78, 229, 309, 310, 312, 316, 338, 342], "attach": [61, 62, 63, 74, 75, 78, 342], "entiti": [61, 62, 63, 74, 75, 78], "auto": [62, 78, 164, 235, 250, 257, 266, 268, 270, 272, 337, 353], "zero_": [62, 78, 171], "max_capac": [64, 65, 341, 356], "data_0": 64, "data_1": 64, "smoothen": 64, "tdrb": 64, "pack": [64, 190, 194, 343, 345, 359], "end_kei": [65, 72, 73], "cache_valu": [65, 72, 73], "expens": [65, 72, 73, 356], "readili": [65, 72, 73], "conjunct": [65, 72, 73, 342], "Will": [65, 72, 85, 100, 299], "short": [65, 72, 73, 81, 82, 94, 95, 103, 167, 194, 195, 342, 343, 345, 346, 353, 356], "unsqueez": [65, 116, 119, 120, 157, 160, 197, 341, 344, 353, 354], "tolist": 65, "120110917137936e": 65, "06": [65, 185, 218, 342, 343, 353, 354], "uniformli": [66, 265, 359], "storageensembl": [67, 70], "samplerensembl": 67, "writerensembl": [67, 75], "num_buffer_sampl": [67, 70], "ensembl": [67, 70, 75, 80, 239, 268], "forbidden": 67, "collat": 67, "0x13a2ef430": 67, "0x13a2f9310": 67, "interpol": [67, 145, 342, 344], "interpolationmod": [67, 344], "bilinear": [67, 145, 344], "0x13a2f9220": 67, "0x13a2f9f70": 67, "0x13a2d9b50": 67, "0x13a2f95b0": 67, "0x128648260": 67, "roundrobin": [68, 77], "incomplet": [71, 73], "fresh": 71, "haven": [71, 355], "remain": [71, 118, 125, 126, 135, 154, 206, 347], "draw": [71, 232], "slicesamplerwithoutreplac": [72, 356], "320": [72, 73, 83, 84, 342, 354], "700": [72, 73, 340, 349, 357], "robosetexperiencereplai": [72, 73, 334], "dataid": [72, 73], "__len__": 74, "rank_kei": 76, "rank": [76, 176], "samplerwithoutreplac": [76, 343, 353, 356], "basi": [76, 203, 356], "simplest": [76, 243, 341, 343, 344, 346, 353, 356, 359], "get_insert_index": 76, "convers": [81, 82, 94, 95, 337], "2106": [81, 82, 254], "13281": [81, 82], "categorical_action_encod": [81, 82, 85, 88, 89, 90, 91, 94, 95, 100, 101, 103, 106, 109], "frame_skip": [81, 82, 83, 84, 88, 89, 90, 91, 94, 95, 96, 97, 100, 101, 106, 132, 309, 312, 319, 338, 341, 342, 343, 358], "repeat": [81, 82, 83, 84, 88, 90, 91, 94, 95, 100, 101, 106, 176, 343, 353, 354], "allow_done_after_reset": [81, 82, 83, 84, 85, 88, 90, 91, 94, 95, 100, 101, 106], "availalb": [81, 82, 94, 95], "ant": [81, 82, 85, 89, 92, 103, 109, 355], "87": [81, 82, 342, 354, 355], "acrobot": [81, 82, 83, 84, 359], "fetch": [81, 82, 83, 84, 135, 346, 355, 356], "advant": [81, 82, 94, 95], "report": [81, 82, 94, 95, 349], "timer": [81, 82, 94, 95], "timeit": [81, 82, 94, 95], "310": [81, 82, 354], "00": [81, 82, 340, 342, 343, 344, 353, 354, 355, 357], "ms": [81, 82, 94, 95], "268": [81, 82, 354], "433": [81, 82, 354], "80": [81, 82, 342, 343, 353, 354, 355], "27": [81, 82, 103, 109, 340, 342, 343, 344, 353, 354, 355, 357], "213": [81, 82, 354], "8605": [81, 82], "pipelineenv": 82, "get_environ": 82, "dm_control": [83, 84, 341, 352, 359], "2006": [83, 84, 250, 255, 354], "12983": [83, 84], "task_nam": [83, 85, 89, 103, 109], "pixels_onli": [83, 84, 88, 90, 91, 106, 341, 342, 349, 350, 358, 359], "cheetah": [83, 84, 85, 89, 103, 109, 299, 341], "240": [83, 84, 354, 358], "swingup": [83, 84, 359], "swingup_spars": [83, 84], "ball_in_cup": [83, 84], "catch": [83, 84], "balance_spars": [83, 84], "three_pol": [83, 84], "two_pol": [83, 84], "finger": [83, 84], "turn_easi": [83, 84], "turn_hard": [83, 84], "fish": [83, 84], "upright": [83, 84, 342], "swim": [83, 84], "hopper": [83, 84], "hop": [83, 84], "humanoid": [83, 84, 103, 109, 352], "walk": [83, 84, 103, 109, 342, 352], "run_pure_st": [83, 84], "bring_bal": [83, 84], "bring_peg": [83, 84], "insert_bal": [83, 84], "insert_peg": [83, 84], "point_mass": [83, 84], "reacher": [83, 84], "swimmer": [83, 84], "swimmer6": [83, 84], "swimmer15": [83, 84], "walker": [83, 84], "dog": [83, 84], "trot": [83, 84], "humanoid_cmu": [83, 84], "lqr": [83, 84], "lqr_2_1": [83, 84], "lqr_6_2": [83, 84], "quadrup": [83, 84], "escap": [83, 84], "stacker": [83, 84], "stack_2": [83, 84], "stack_4": [83, 84], "deviceless": 85, "run_type_check": [85, 99], "counterenv": 85, "unboundedcontinuoustensorspec": [85, 89, 99, 103, 109, 116, 124, 127, 143, 155, 171, 176, 200, 224, 239, 242, 244, 269, 334, 343, 344, 353, 354, 359], "_step": [85, 89, 103, 109, 116, 124, 127, 131, 143, 144], "continuousbox": [85, 89, 103, 109, 171, 343, 353, 354, 358, 359], "sort": [85, 89, 103, 109, 120, 235], "another_act": [85, 89, 103, 109], "mutabl": [85, 89, 103, 109], "batch_lock": [85, 87, 89, 103, 109, 155, 159, 354], "done_keys_group": [85, 89, 103, 109], "outer": [85, 89, 103, 109, 338, 341, 342, 359], "another_don": [85, 89, 103, 109], "empty_cach": [85, 89, 103, 109, 159], "fake_tensordict": [85, 89, 103, 109, 342], "fake": [85, 89, 103, 109, 341, 342], "afterward": [85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246, 359], "silent": [85, 89, 103, 109, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 207, 208, 209, 211, 214, 215, 217, 222, 228, 229, 231, 232, 235, 238, 243, 246], "braxenv": [85, 89, 103, 109, 144, 334, 345], "envnam": [85, 89, 103, 109], "pipeline_st": [85, 89, 103, 109], "attibut": [85, 89, 103, 109], "maybe_reset": [85, 89, 103, 109], "speak": [85, 89, 103, 109, 341], "rand_act": [85, 89, 98, 103, 104, 105, 109, 345], "register_gym": [85, 89, 103, 109, 345], "entry_point": [85, 89, 103, 109], "info_kei": [85, 89, 103, 109], "reward_threshold": [85, 89, 103, 109], "nondeterminist": [85, 89, 103, 109], "max_episode_step": [85, 88, 89, 90, 103, 109], "order_enforc": [85, 89, 103, 109], "autoreset": [85, 89, 103, 109], "disable_env_check": [85, 88, 89, 100, 101, 103, 109], "apply_api_compat": [85, 89, 103, 109], "nasium": [85, 89, 103, 109], "scope": [85, 89, 103, 109, 359], "dmcontrolenv": [85, 89, 103, 109, 299, 334, 341, 345, 352, 359], "dmc": [85, 89, 103, 109], "removeemptyspec": [85, 89, 103, 109], "threshold": [85, 89, 103, 109, 232, 250, 251, 343], "learnt": [85, 89, 103, 109, 328], "knowledg": [85, 89, 103, 109, 347], "checker": [85, 88, 89, 100, 101, 103, 109], "stepapicompat": [85, 89, 103, 109], "concept": [85, 89, 103, 109, 342, 356], "deem": [85, 89, 103, 109, 110, 111], "envgym": [85, 89, 103, 109], "0855": [85, 89, 103, 109], "0215": [85, 89, 103, 109], "0881": [85, 89, 103, 109], "0412": [85, 89, 103, 109], "1101": [85, 89, 103, 109, 356], "0080": [85, 89, 103, 109], "0254": [85, 89, 103, 109], "0424": [85, 89, 103, 109], "9609e": [85, 89, 103, 109], "02": [85, 89, 103, 109, 340, 342, 343, 344, 350, 354, 355, 357], "9776e": [85, 89, 103, 109], "04": [85, 89, 93, 103, 109, 342, 343, 344, 354, 355], "6347e": [85, 89, 103, 109], "03": [85, 89, 103, 109, 137, 340, 342, 354, 355, 357], "3842e": [85, 89, 103, 109], "5338e": [85, 89, 103, 109], "3064e": [85, 89, 103, 109], "0381e": [85, 89, 103, 109], "6656e": [85, 89, 103, 109], "05": [85, 89, 103, 109, 342, 353, 354, 355], "0204e": [85, 89, 103, 109], "action_spac": [85, 89, 103, 109, 128, 187, 213, 230, 231, 237, 238, 249, 250, 252, 253, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 344, 346, 350], "0833": [85, 89, 103, 109], "0275": [85, 89, 103, 109], "0612": [85, 89, 103, 109], "0770": [85, 89, 103, 109, 354], "1256": [85, 89, 103, 109, 354], "0082": [85, 89, 103, 109], "0186": [85, 89, 103, 109], "0476": [85, 89, 103, 109], "2221": [85, 89, 103, 109], "2256": [85, 89, 103, 109], "5930": [85, 89, 103, 109], "6937": [85, 89, 103, 109], "5865": [85, 89, 103, 109], "5479": [85, 89, 103, 109], "0187": [85, 89, 103, 109], "6825": [85, 89, 103, 109, 354], "5224": [85, 89, 103, 109], "0018": [85, 89, 103, 109, 354], "cattensor": [85, 89, 103, 109, 325, 341, 352, 354, 359], "1005": [85, 89, 103, 109], "0335": [85, 89, 103, 109], "0268": [85, 89, 103, 109, 354], "0133": [85, 89, 103, 109], "0627": [85, 89, 103, 109], "0074": [85, 89, 103, 109, 354], "0488": [85, 89, 103, 109, 354], "0353": [85, 89, 103, 109], "0075": [85, 89, 103, 109, 354], "0069": [85, 89, 103, 109, 354], "0098": [85, 89, 103, 109, 354], "0058": [85, 89, 103, 109, 354], "0033": [85, 89, 103, 109, 354], "0157": [85, 89, 103, 109], "0004": [85, 89, 103, 109, 344, 354], "0381": [85, 89, 103, 109], "0452": [85, 89, 103, 109], "11355747": [85, 89, 103, 109], "04257728": [85, 89, 103, 109], "00408397": [85, 89, 103, 109], "04155852": [85, 89, 103, 109], "0389733": [85, 89, 103, 109], "01409826": [85, 89, 103, 109], "0978704": [85, 89, 103, 109], "08808327": [85, 89, 103, 109], "03970837": [85, 89, 103, 109], "00535434": [85, 89, 103, 109], "02353762": [85, 89, 103, 109], "05116226": [85, 89, 103, 109], "02788907": [85, 89, 103, 109], "06848346": [85, 89, 103, 109], "05154399": [85, 89, 103, 109], "0371798": [85, 89, 103, 109], "05128025": [85, 89, 103, 109], "dydact": [85, 89, 103, 109], "gym_env": [85, 89, 103, 109, 358], "reset_kei": [85, 89, 103, 109, 119, 149, 154, 155, 156], "multitask": [85, 89, 103, 109], "multiag": [85, 89, 98, 103, 104, 105, 109, 175, 204, 212, 221, 278], "another_reward": [85, 89, 103, 109], "callback": [85, 89, 103, 109, 353], "auto_reset": [85, 89, 103, 109, 354], "auto_cast_to_devic": [85, 89, 103, 109, 353], "break_when_any_don": [85, 89, 103, 109, 353], "return_contigu": [85, 89, 103, 109, 167, 352], "soon": [85, 89, 103, 104, 105, 109], "__sort": [85, 89, 103, 109], "as__": [85, 89, 103, 109], "normal": [85, 89, 103, 109, 137, 165, 177, 178, 193, 198, 201, 202, 207, 219, 220, 228, 236, 240, 251, 264, 267, 312, 314, 332, 336, 338, 344, 346, 353, 359], "argmaxmodul": [85, 89, 103, 109], "n_ob": [85, 89, 103, 109, 135, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 347], "n_act": [85, 89, 103, 109, 135, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 347], "ourselv": [85, 89, 103, 109, 343, 359], "emul": [85, 89, 103, 109], "epoch": [85, 89, 103, 109, 316, 343, 353], "rollout_td": [85, 89, 103, 109], "concomitt": [85, 89, 103, 109], "workspac": [85, 89, 103, 109], "prevail": [85, 89, 103, 109, 120, 149, 175], "creator": [86, 321, 322, 330, 331, 332], "substitut": [86, 154, 165, 346], "vecnorm": [86, 332], "env_creat": [86, 341], "test_env1": 86, "_td": [86, 341], "observation_count": [86, 359], "test_env2": 86, "sleep": [86, 359], "ps": 86, "p1": 86, "p2": 86, "9934": 86, "env_str": 87, "device_map": 87, "accross": [88, 90], "registri": 88, "asyncvectorenv": 88, "involv": [88, 90, 91, 106, 345, 347], "pixel_observ": [88, 90, 91, 106], "pixelobservationwrapp": [88, 90, 91, 106], "al": [88, 90, 128, 139, 176, 359], "adventur": [88, 90, 359], "v5": [88, 90, 101, 128, 139, 359], "airraid": [88, 90, 359], "alien": [88, 90, 359], "time_limit": 88, "timelimit": [88, 110, 111], "default_info_dict_read": [88, 89, 90, 103], "reader": [88, 89, 90, 103, 342], "set_info_dict_read": [88, 89, 90, 103, 345], "info_dict": [88, 89, 90, 103], "auto_register_info_dict": [88, 89, 90, 103], "info_dict_read": [89, 103], "succe": [89, 103], "halfcheetah": [89, 103, 145, 325, 341], "register_info_dict": 89, "read_act": 89, "read_don": 89, "nonsens": 89, "fallback": 89, "broken": [89, 167], "read_ob": 89, "dictat": [89, 236, 240, 267, 341, 354], "read_reward": 89, "baseinfodictread": 89, "hoc": [89, 103, 346], "dict_read": 89, "my_info_kei": 89, "some_env": 89, "vecenv": 90, "vectorenv": 90, "placehold": [91, 128, 159], "secur": 91, "habitat3": 91, "ai": [91, 355], "habitatrenderpick": 91, "isaacgym": [92, 93], "isaacgymwrapp": [92, 334], "isaacgymenv": [93, 334], "webpag": 93, "isaac": 93, "essenc": [93, 345], "instadeepai": [94, 95], "2306": [94, 95], "09884": [94, 95], "snake": [94, 95], "grid": [94, 95, 299], "bodi": [94, 95], "body_st": [94, 95], "fruit_posit": [94, 95], "col": [94, 95], "row": [94, 95], "head_posit": [94, 95], "tail": [94, 95], "game2048": [94, 95], "maze": [94, 95], "cleaner": [94, 95], "cvrp": [94, 95], "multicvrp": [94, 95], "minesweep": [94, 95], "rubikscub": [94, 95], "knapsack": [94, 95], "sudoku": [94, 95], "tsp": [94, 95], "connector": [94, 95], "v2": [94, 95, 107, 108, 275, 289, 290, 291, 292, 294, 295, 296, 297, 344], "mmst": [94, 95], "graphcolor": [94, 95], "partli": [94, 95], "scrambl": [94, 95], "robotwarehous": [94, 95], "tetri": [94, 95], "binpack": [94, 95], "jobshop": [94, 95], "0x1fca91910": 94, "122": [94, 95, 354, 359], "0x1ff9baee0": 94, "134": [94, 95, 354], "0x1ff9ba7c0": 94, "172": [94, 95, 340, 345, 354, 357], "31": [94, 95, 342, 354, 355], "rubric": [95, 137, 242], "mo": [96, 97], "minecart": [96, 97], "mo_gym": 97, "qualnam": 98, "leverag": [98, 104, 105, 341, 353, 359], "neural": [98, 104, 105, 177, 178, 216, 239, 336, 342, 343, 344, 346, 353, 354, 359], "group_map": [98, 104, 105, 110, 111, 112], "constructiuon": [98, 104, 105], "premad": [98, 104, 105, 110, 111, 278], "all_in_one_group": [98, 112], "agent_0": [98, 104, 105, 112], "agent_1": [98, 104, 105, 112], "agent_2": [98, 104, 105, 112], "agent_3": 98, "one_group_per_ag": [98, 104, 105], "environn": 99, "mymbenv": [99, 176, 200], "world_model": [99, 176, 200, 260], "super": [99, 116, 124, 127, 143, 176, 187, 200, 244, 250, 252, 257, 263, 268, 270, 272, 341, 354, 356, 358], "hidden_observ": [99, 176, 200], "mlp": [99, 176, 177, 178, 180, 181, 182, 183, 192, 196, 197, 200, 204, 225, 230, 253, 255, 325, 336, 342, 346, 347, 350, 352, 355, 358], "worldmodelwrapp": [99, 176, 200], "activation_class": [99, 176, 177, 178, 180, 181, 182, 183, 188, 189, 198, 200, 203, 204, 342, 346, 353, 358], "relu": [99, 176, 184, 200, 207, 248], "activate_last_lay": [99, 176, 183, 198, 200], "sail": [100, 101], "sg": [100, 101], "10558": [100, 101], "readthedoc": 100, "en": 100, "python_interfac": 100, "envpoolmixin": 101, "env_bas": 101, "task_id": 101, "env_typ": 101, "gym_reset_return_info": 101, "envpool_env": 101, "www": [102, 201, 202], "fetch_openml": 102, "106": [102, 354], "my_env_fun": [103, 109], "custom_attribute_list": [103, 109], "custom_attribut": [103, 109], "custom_method_list": [103, 109], "custom_method": [103, 109], "deploi": [103, 109], "slight": [103, 109, 342], "share_individual_td": [103, 109], "shared_memori": [103, 109], "policy_proof": [103, 109], "ll": [103, 109, 190, 191, 194, 195, 341, 342, 343, 344, 345, 346, 347, 348, 350, 353, 359], "serial_for_singl": [103, 109], "mp_start_method": [103, 109], "com_veloc": [103, 109], "extrem": [103, 109], "head_height": [103, 109], "joint_angl": [103, 109], "torso_vert": [103, 109], "stringent": [103, 343, 353], "inter": 103, "penv": 103, "tensordictprim": [103, 344], "reward_ctrl": 103, "reward_run": 103, "x_posit": 103, "x_veloc": 103, "env_fix": 103, "drastic": [103, 356], "influenc": 103, "thumb": [103, 343], "suppos": [103, 312, 338, 359], "myenv": [103, 124, 127], "pipe": 103, "update_kwarg": [103, 109], "pettingzoo": [104, 105], "pet": [104, 105], "zoo": [104, 105], "__": [104, 105], "aecenv": [104, 105], "use_mask": [104, 105], "dead": [104, 105], "compulsori": [104, 105], "adversary_0": [104, 105], "adversari": [104, 105], "marlgroupmaptyp": [104, 105, 110, 111, 112, 334], "vectoris": [104, 105, 190, 191, 194, 195], "sisl": 104, "multiwalker_v9": 104, "return_st": [104, 105], "categorical_act": [104, 105, 107, 108, 110, 111], "n_piston": [104, 105], "pistonball_v6": [104, 105], "piston": [104, 105], "piston_0": [104, 105], "piston_1": [104, 105], "piston_20": [104, 105], "aec": [104, 105], "tictactoe_v3": [104, 105], "player": [104, 105], "player_1": [104, 105], "player_2": [104, 105], "butterfli": 105, "parallel_env": [105, 341, 358, 359], "vikashplu": 106, "wiki": 106, "06828": 106, "smacv2": [107, 108], "starcraft": [107, 108], "challeng": [107, 108, 345, 354, 355], "10gen_terran": [107, 108], "10gen_zerg": [107, 108], "10gen_protoss": [107, 108], "3m": [107, 108], "8m": [107, 108, 355], "25m": [107, 108], "5m_vs_6m": [107, 108], "8m_vs_9m": [107, 108], "10m_vs_11m": [107, 108], "27m_vs_30m": [107, 108], "mmm": [107, 108], "mmm2": [107, 108], "2s3z": [107, 108], "3s5z": [107, 108], "3s5z_vs_3s6z": [107, 108], "3s_vs_3z": [107, 108], "3s_vs_4z": [107, 108], "3s_vs_5z": [107, 108], "1c3s5z": [107, 108], "2m_vs_1z": [107, 108], "corridor": [107, 108], "6h_vs_8z": [107, 108], "2s_vs_1sc": [107, 108], "so_many_banel": [107, 108], "bane_vs_ban": [107, 108], "2c_vs_64zg": [107, 108], "old": [107, 108, 264, 359], "smac": [107, 108], "map_nam": [107, 108], "176": [107, 108, 354], "battle_won": [107, 108], "dead_al": [107, 108], "dead_enemi": [107, 108], "episode_limit": [107, 108], "322": [107, 108, 354], "Or": [107, 108, 203], "procedur": [107, 108], "distribution_config": [107, 108], "n_unit": [107, 108], "n_enemi": [107, 108], "team_gen": [107, 108], "dist_typ": [107, 108], "weighted_team": [107, 108], "unit_typ": [107, 108], "marin": [107, 108], "maraud": [107, 108], "medivac": [107, 108], "exception_unit_typ": [107, 108], "start_posit": [107, 108], "surrounded_and_reflect": [107, 108], "map_x": [107, 108], "map_i": [107, 108], "capability_config": [107, 108], "88": [107, 108, 342, 354, 355], "131": [107, 108, 354], "starcraft2env": 108, "proroklab": [110, 111], "vectorizedmultiagentsimul": [110, 111], "2207": [110, 111], "03530": [110, 111], "basescenario": 110, "descript": [110, 342, 343], "perfrom": [110, 111], "defaultt": 110, "continuous_act": [110, 111, 353], "repositiori": 110, "horizon": [110, 111, 176, 200, 343], "sparsiti": 110, "agent_nam": [110, 111, 112], "agent_names_to_indices_map": [110, 111], "unbatched_action_spec": [110, 111, 353], "unbatched_observation_spec": [110, 111], "unbatched_reward_spec": [110, 111], "het_spec": [110, 111], "het_specs_map": [110, 111], "flock": [110, 111], "agent_collision_rew": [110, 111], "agent_distance_rew": [110, 111], "ca": 112, "environment4": 112, "get_group_map": 112, "sumbodul": 113, "model_bas": [114, 176, 200], "adapt": [116, 153, 264, 341, 354], "masker": 116, "tensor_spec": [116, 175, 256, 257, 267, 269], "binarydiscretetensorspec": [116, 253, 256, 257, 278, 334], "maskedenv": 116, "ones_lik": 116, "scatter": 116, "_set_se": [116, 124, 127, 143, 354], "biner": 117, "transform_reward_spec": [117, 122, 123, 124, 125, 129, 135, 143, 144, 147, 148, 150, 151, 153, 158, 160], "burn_in": 118, "burn": 118, "date": [118, 302], "retur": 118, "burnt": 118, "gru_modul": [118, 192], "input_s": [118, 190, 191, 192, 194, 195, 196, 197, 344], "hidden_s": [118, 190, 191, 192, 194, 195, 196, 197, 344], "set_recurrent_mod": [118, 192, 196, 344], "burn_in_transform": 118, "gru": [118, 191, 192], "num_lay": [118, 190, 192, 194, 196, 208, 209], "86": [118, 342, 354], "3008": [118, 342], "0344": 118, "padding_valu": [119, 201, 202], "as_invers": 119, "movement": 119, "pdf": [119, 179, 180, 181, 182, 183, 187, 211, 231, 235, 258, 268, 271, 280, 285, 293, 325], "1312": [119, 342], "5602": 119, "unsqueezetransform": [119, 354, 356], "consumpt": 119, "followin": 119, "pictur": 119, "pixels_trsf": [119, 356], "grayscal": [119, 342, 344, 356, 359], "data_exclud": [119, 356], "transform_observation_spec": [119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 133, 134, 135, 137, 139, 143, 144, 145, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 164, 354], "del_kei": [120, 161, 352, 354], "unsqueeze_if_oor": 120, "observation_posit": 120, "observation_veloc": 120, "delet": [120, 306], "key1": [120, 307, 315], "key2": [120, 307, 315], "center": [121, 299], "width": [121, 145], "out_keys_inv": [122, 124, 127, 137, 138, 139, 143, 144, 151, 158, 354], "scalar": [122, 147, 181, 183, 205, 206, 228, 232, 233, 235, 246, 249, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 278, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 336, 342, 347, 354], "permit": [122, 131, 160, 249, 251, 264, 267, 269], "rewardsc": [123, 159, 341, 342, 344], "rewardclip": 123, "transformed_env": [123, 158, 159, 345], "transform_env_devic": [123, 125, 158], "transform_input_spec": [123, 124, 125, 126, 137, 139, 143, 144, 149, 153, 154, 155, 158, 160, 162], "transform_output_spec": [123, 124, 125, 129, 135, 143, 144, 150, 153, 158], "transformfull_done_spec": [123, 124, 125, 129, 135, 143, 144, 150, 153, 158], "dtype_in": 124, "dtype_out": 124, "scan": [124, 127, 241, 242], "resp": [124, 127], "not_transform": [124, 127], "constructedw": [124, 127], "orig_devic": 125, "unspecifi": 125, "transform_done_spec": [125, 158], "num_actions_effect": 126, "max_act": 126, "include_forward": 126, "num_act": [126, 257, 346], "action_out": 126, "_call": [126, 131, 354], "eol_kei": 128, "lives_kei": 128, "eol_attribut": 128, "unwrap": 128, "breakout": 128, "210": [128, 139, 354], "160": [128, 139, 342, 354], "eol_transform": 128, "eol": 128, "dqnloss": [128, 249, 250, 252, 255, 257, 258, 259, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 278, 323, 334, 337, 342, 344, 350], "register_kei": 128, "loss_or_advantag": 128, "lossmodul": [128, 316, 327, 328, 334], "valueestimatorbas": [128, 265, 334], "excluded_kei": 129, "finit": [130, 346, 356], "first_dim": 131, "last_dim": 131, "allow_positive_dim": [131, 160], "th": [131, 160, 190, 194, 354], "frameskip": 131, "repeatedli": [132, 343, 353], "init_kei": 134, "tracker": 134, "coef": 135, "pi_curr": 135, "pi_0": 135, "overfit": 135, "probabilist": [135, 236, 334, 343, 358], "get_dist": [135, 240, 241], "mod": [135, 192, 196, 243, 344, 350], "normalparamextractor": [135, 336, 343, 346, 353], "probabilisticactor": [135, 225, 226, 227, 229, 249, 250, 254, 256, 257, 263, 266, 267, 268, 269, 270, 272, 336, 341, 343, 346, 353], "tanhnorm": [135, 225, 226, 227, 236, 242, 249, 250, 263, 267, 268, 269, 270, 272, 334, 343, 353, 358], "return_log_prob": [135, 225, 226, 227, 236, 240, 242, 269, 336, 343, 346, 353, 358], "apply_": 135, "copy_": [135, 341], "formulat": 135, "diverg": [135, 192, 196, 236, 240, 260, 264], "noop": [136, 358], "trial": 136, "standard_norm": [137, 148, 341, 342, 344], "affin": [137, 148], "layer": [137, 165, 177, 178, 180, 181, 188, 190, 191, 192, 194, 195, 196, 198, 203, 204, 205, 206, 208, 209, 216, 217, 223, 234, 243, 336, 342, 343, 344, 346, 355], "set_default_tensor_typ": 137, "doubletensor": 137, "isclos": 137, "next_ob": [137, 280, 281, 282, 283, 358], "init_stat": [137, 341, 342, 343, 344], "3752e": 137, "01": [137, 235, 246, 251, 264, 267, 340, 342, 344, 353, 354, 355, 357], "5087e": 137, "9294e": 137, "9636": 137, "5608": 137, "6408": 137, "num_it": [137, 342, 343], "reduce_dim": [137, 341, 342, 343, 344], "cat_dim": [137, 341, 342, 343, 344], "keep_dim": [137, 342, 344], "statist": [137, 165, 269, 332, 341, 342, 343, 359], "gaussian": [137, 155, 176, 200, 205, 206, 211, 228, 343], "empir": [137, 176, 200, 236, 240, 341, 343, 353], "3d": [137, 177], "third": [137, 231, 353], "reorder": 139, "in_keys_in": 139, "channel": [139, 157, 203, 208, 209, 342], "r3m": [141, 355], "resnet": [141, 161, 163], "visual": [141, 161, 163, 343, 354], "embed": [141, 161, 162, 163, 212, 224, 225, 226, 227, 239, 244, 355], "ego4d": [141, 161, 163], "univers": [141, 161, 163, 345], "suraj": [141, 161], "nair": [141, 161], "aravind": [141, 161], "rajeswaran": [141, 161], "vikash": [141, 161, 163], "kumar": [141, 161, 163], "chelsea": [141, 161], "finn": [141, 161], "abhinav": [141, 161], "gupta": [141, 161], "2203": [141, 161, 200, 340, 355, 357], "12601": [141, 161, 355], "_init": [141, 161, 341], "snippet": [141, 161, 341], "resnet50": [141, 163, 355], "model_nam": [141, 161, 163, 302], "resnet34": 141, "resnet18": 141, "r3m_vec": [141, 355], "feed": [141, 163, 265, 336, 341, 353, 356], "stack_imag": [141, 163], "tread": [141, 163], "separet": [141, 163], "hub": [141, 163, 345, 355], "resnet50_weight": [141, 163], "imagenet1k_v1": [141, 163], "download_path": [141, 163], "tensor_pixels_kei": [141, 163], "dest": [141, 161, 163, 239], "sub_seq_len": 142, "sample_dim": [142, 341], "primarili": [142, 346], "hesit": 142, "request": 142, "robust": 142, "mix": [142, 212, 221, 278, 341, 353], "improp": 142, "dummyenv": 143, "another_oth": 143, "other_reward": 143, "create_copi": 144, "stuff": [144, 348], "newnam": 144, "r2g": 146, "99": [146, 165, 200, 261, 274, 279, 286, 328, 341, 342, 343, 347, 350, 354, 358], "reward_to_go": 146, "bernoulli_": 146, "9010": 146, "9404": [146, 286], "9701": [146, 286], "9900": [146, 286], "0000": [146, 156, 232, 233, 243, 286, 343, 344, 354, 358], "crash": 146, "clamp_min": 147, "clamp_max": 147, "clip_min": 147, "clip_max": 147, "episode_": 149, "reward1": 149, "reward2": 149, "episode_reward": [149, 353], "keep_reward": 150, "keep_don": 150, "sign": [151, 280], "logical_or": 151, "squeeze_dim": 152, "step_count_kei": 153, "update_don": 153, "accordingli": [153, 154, 194, 237, 344], "disjunct": 153, "recognis": 153, "target_return": 154, "subtract": 154, "primer": [155, 344], "default_valu": [155, 344], "unit": [155, 176, 188, 190, 191, 208, 209, 214, 215, 343], "transfomedenv": 155, "mykei": 155, "__unless": 155, "exists__": 155, "pool": 156, "increas": [156, 235, 353], "10th": 156, "0216": 156, "1149": 156, "1990": 156, "2749": 156, "3281": 156, "9290": 156, "3702": 156, "8978": 156, "from_int": 157, "shape_toler": 157, "permuat": 157, "ri": 157, "principl": 158, "cattransform": 158, "notabl": 158, "rewardsum": [158, 353], "cache_spec": 159, "set_missing_toler": 159, "keyerror": [159, 341], "unsqueeze_dim": [160, 354], "danger": 160, "vc1": 161, "vc1_vec": 161, "untrain": 161, "make_noload_model": 161, "vip": [162, 163, 355], "toward": 163, "implicit": [163, 256, 263, 356], "jason": 163, "ma": 163, "shagun": 163, "sodhani": 163, "dinesh": 163, "jayaraman": 163, "osbert": 163, "bastani": 163, "ami": 163, "zhang": 163, "vip_vec": 163, "final_nam": 164, "sb3": 164, "terminal_obs_read": 164, "truli": [164, 358], "till": 164, "nan": 164, "shared_td": 165, "decai": [165, 228, 232, 271, 314, 341, 342, 344, 359], "9999": [165, 354], "0001": [165, 188, 207, 343, 354], "fly": [165, 264, 337, 343, 354, 356, 359], "to_observation_norm": 165, "underflow": [165, 314], "build_td_for_shared_vecnorm": 165, "memmori": 165, "queue": [165, 356], "td_share": 165, "state_dim": [166, 179, 184, 211, 214, 215, 229], "action_dim": [166, 179, 180, 182, 184, 211, 229, 341, 352], "gsde": [166, 268, 332], "func": [166, 341, 356, 359], "gsdemodul": 166, "check_dtyp": 167, "discrep": [167, 249, 251, 252, 253, 264, 267, 269, 278], "temporarili": [167, 348, 356], "rng": [167, 354], "revert": [167, 346, 356], "probabilistictdmodul": [172, 173, 198, 236, 240, 279, 312], "next_tensordict": 174, "keep_oth": [174, 354], "exclude_reward": 174, "exclude_don": 174, "exclude_act": 174, "next_": 174, "funtion": 174, "write_full_fals": 175, "_terminated_or_trunc": 175, "entropi": [176, 249, 250, 251, 256, 257, 263, 264, 266, 267, 268, 270, 272, 353], "botev": 176, "et": 176, "2013": 176, "cem": 176, "plan": [176, 199, 200], "varianc": [176, 193, 207, 219, 220, 337, 341, 343, 353], "k": [176, 190, 191, 194, 195], "maximis": [176, 180, 182, 200, 336, 342, 343, 353], "modelbasedenv": [176, 200], "planning_horizon": [176, 200], "optim_step": [176, 200, 342, 350], "mpc": [176, 199, 200], "num_candid": [176, 200], "candid": [176, 200], "top_k": [176, 200], "modelbasedenvbas": [176, 199, 200, 334], "safemodul": [176, 199, 225, 227, 240, 249, 250, 256, 257, 263, 267, 268, 269, 270, 272, 321, 322, 328, 334, 358], "num_cel": [177, 178, 180, 181, 182, 183, 188, 189, 192, 196, 198, 203, 204, 225, 342, 343, 344, 346, 347, 350, 353, 358], "elu": [177, 178, 180, 181, 182, 183, 188, 189, 203, 342, 358], "activation_kwarg": [177, 178, 198], "norm_class": [177, 178, 180, 181, 198], "norm_kwarg": [177, 178, 198], "bias_last_lay": [177, 178, 180, 181, 182, 183, 189, 198], "aggregator_class": [177, 178, 180, 181, 342, 344, 358], "squashdim": [177, 178, 180, 203, 358], "aggregator_kwarg": [177, 178, 180, 181, 342, 344], "squeeze_output": [177, 178, 180, 181, 342, 344], "produc": [177, 178, 198, 204, 210, 225, 227, 229, 299, 343, 344, 345, 346, 348, 356, 359], "cell": [177, 178, 190, 191, 192, 194, 195, 196, 198, 203, 204, 343, 345, 346, 347, 348, 349, 350], "kernel": [177, 178, 189, 197, 203], "cnet": [177, 178], "conv3d": 177, "transformer_config": [179, 211, 229], "decisiontransform": [179, 211], "dtconfig": [179, 184, 211], "2202": [179, 184, 211, 266], "05607": [179, 184, 211, 266], "return_to_go": [179, 184, 211, 229], "conv_net_kwarg": [180, 181], "mlp_net_kwarg": [180, 181, 182], "use_avg_pool": [180, 181], "WITH": [180, 181, 182, 183, 235, 271], "1509": [180, 181, 182, 183, 200, 235, 253, 262, 271, 354], "02971": [180, 181, 182, 183, 235, 271], "convnet": [180, 203, 344, 346, 358], "ndims_in": 180, "avgpool": [180, 181], "adaptiveavgpool2d": [181, 342, 344], "400": [182, 183, 349, 353, 354, 356], "mlp_net_kwargs_net1": 183, "mlp_net_kwargs_net2": 183, "decion": 184, "desdescrib": 184, "n_embd": 184, "n_layer": [184, 190, 194], "n_head": 184, "n_inner": 184, "n_posit": 184, "resid_pdrop": 184, "attn_pdrop": 184, "gpt2config": 184, "atol": [185, 218], "rtol": [185, 218], "batch_shap": [185, 218], "event_shap": [185, 218], "absolut": [185, 218, 341], "densiti": [185, 201, 202, 210, 220], "mass": [185, 201, 202, 210, 220, 354], "rsampl": [185, 202, 210, 240], "sample_shap": [185, 201, 202, 210], "softmax": [186, 202, 210, 230, 231], "var_num": [187, 213, 230, 231, 238], "action_value_kei": [187, 213, 230, 231, 237, 238, 265, 278], "action_mask_kei": [187, 213, 230, 231, 232, 233, 237, 238], "perspect": [187, 231, 258, 343], "1707": [187, 231, 258, 267], "06887": [187, 231, 258], "mult": [187, 204, 213, 230, 231, 237, 238], "tensordict_modul": [187, 190, 191, 194, 195, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 252, 256, 257, 263, 267, 268, 269, 270, 272, 336], "nbin": [187, 230, 336], "customdistributionalqv": 187, "log_softmax": [187, 230], "from_modul": [187, 239, 242, 358], "one_hot": [187, 202, 213], "qvalue_actor": [187, 213, 230, 237, 336], "to_modul": [187, 239, 242, 341, 358], "std_bia": 188, "std_min_val": 188, "belief": [188, 208, 214, 215], "1912": [188, 259, 260, 261], "01603": [188, 259, 260, 261], "softplu": [188, 207, 246, 247, 248], "out_features_valu": 189, "cnn_kwarg": [189, 342], "mlp_kwarg": [189, 197, 342], "duel": 189, "cnn": [189, 203, 342, 346, 358], "06581": 189, "batch_first": [190, 192, 194, 196, 344], "bidirect": [190, 194, 344], "cudnn": [190, 191, 194, 195, 344], "vmap": [190, 191, 194, 195, 222, 239, 242, 358], "rnn": [190, 191, 194, 195, 344, 346], "device_count": [190, 191, 194, 195, 359], "els": [190, 191, 194, 195, 208, 336, 338, 341, 342, 343, 344, 353, 354, 355], "n_in": [190, 191, 194, 195], "n_out": [190, 191, 194, 195], "h0": [190, 191, 194, 195], "h1": [190, 191, 194, 195], "call_gru": [190, 191], "h_out": [190, 191, 194, 195], "batched_cal": [190, 191, 194, 195], "gate": [190, 191, 194], "r_t": 190, "sigma": [190, 191, 193, 194, 195, 211, 219, 220, 228, 235, 343], "w_": [190, 191, 194, 195], "ir": [190, 191], "x_t": [190, 194], "b_": [190, 191, 194, 195], "hr": [190, 191, 194], "h_": [190, 191, 194], "z_t": 190, "iz": [190, 191], "hz": [190, 191], "n_t": 190, "odot": [190, 191, 194, 195], "hn": [190, 191, 194], "h_t": [190, 194], "sigmoid": [190, 191, 194, 195], "hadamard": [190, 191, 194, 195], "multilay": [190, 194], "_t": [190, 194, 353, 354], "ge": [190, 194], "multipli": [190, 194, 250, 251, 257, 264, 266, 267, 268, 270, 314, 341], "bernoulli": [190, 194], "b_ih": [190, 191, 194, 195, 196], "b_hh": [190, 191, 194, 195, 196], "seq": [190, 192, 194, 196, 344, 350, 352], "h_0": [190, 194, 195], "unbatch": [190, 194], "pack_padded_sequ": [190, 194], "pack_sequ": [190, 194], "num": [190, 194, 350], "_layer": [190, 194], "_size": [190, 191, 194, 195], "h_n": [190, 194], "packedsequ": [190, 194], "weight_ih_l": [190, 194], "learnabl": [190, 191, 194, 195], "w_ir": 190, "w_iz": 190, "w_in": 190, "num_direct": [190, 194], "weight_hh_l": [190, 194], "w_hr": 190, "w_hz": 190, "w_hn": 190, "bias_ih_l": [190, 194], "b_ir": 190, "b_iz": 190, "b_in": 190, "bias_hh_l": [190, 194], "b_hr": 190, "b_hz": 190, "b_hn": 190, "bias": [190, 191, 194, 195, 246, 337, 341], "mathcal": [190, 191, 194, 195], "sqrt": [190, 191, 194, 195, 235], "frac": [190, 191, 194, 195, 343], "seq_len": [190, 194], "subtli": 190, "matrix": [190, 194, 205, 206], "contrast": [190, 262, 356], "hx": [190, 191, 194, 195], "lstmcell": [191, 196], "gru_cel": 191, "z": 191, "weight_ih": [191, 195], "weight_hh": [191, 195], "bias_ih": [191, 195], "bias_hh": [191, 195], "rocm": [191, 195], "embedd": [192, 196, 197], "grucel": [192, 239], "python_bas": [192, 196], "recurrent_st": [192, 344], "custom_kei": [192, 196], "recurrent_mod": [192, 196], "rs": [192, 341], "gru_module_train": 192, "policy_train": [192, 196], "traj_td": [192, 196], "policy_infer": [192, 196], "td_inf": [192, 196], "assert_clos": [192, 196], "upscal": [193, 219, 220], "tanh_loc": [193, 219, 220], "event_dim": [193, 218, 219], "ultim": [193, 219, 220], "poor": [193, 219, 220], "explos": [193, 219, 220], "switch": [193, 220], "formula": [193, 219, 220, 249, 251, 264, 267, 337, 343], "proj_siz": 194, "c0": [194, 195], "c1": [194, 195], "call_lstm": [194, 195], "c_out": [194, 195], "i_t": 194, "ii": [194, 195], "hi": [194, 195], "f_t": 194, "hf": [194, 195], "g_t": 194, "ig": [194, 195], "hg": [194, 195], "o_t": 194, "ho": [194, 195], "c_t": 194, "c_": 194, "forget": 194, "1402": 194, "1128": 194, "c_0": [194, 195], "proj": 194, "c_n": 194, "w_ii": 194, "w_if": 194, "w_ig": 194, "w_io": 194, "w_hi": 194, "w_hf": 194, "w_hg": 194, "w_ho": 194, "b_ii": 194, "b_if": 194, "b_ig": 194, "b_io": 194, "b_hi": 194, "b_hf": 194, "b_hg": 194, "b_ho": 194, "weight_hr_l": 194, "_revers": 194, "analog": [194, 346], "cn": 194, "lstm_cell": 195, "h_1": 195, "c_1": 195, "time_step": [195, 197], "cx": 195, "trust": 196, "correspont": 196, "recurrent_state_h": [196, 344], "recurrent_state_c": [196, 344], "triplet": [196, 237, 238], "lstm_modul": 196, "rs_h": 196, "rs_c": 196, "hidden0": 196, "hidden1": 196, "lstm_kwarg": 197, "next_observ": [197, 249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 352], "2d": [197, 346, 353], "hidden0_in": 197, "hidden1_in": 197, "hidden0_out": 197, "hidden1_out": 197, "single_bias_last_lay": 198, "layer_class": 198, "layer_kwarg": 198, "perceptron": [198, 346], "lazylinear": [198, 336, 343, 346, 354, 355, 358], "42": [198, 249, 250, 252, 256, 263, 270, 340, 342, 354, 356, 357], "noisylinear": [198, 205, 334, 342], "noisylazylinear": [198, 334], "mpcplanner": 199, "tensordict_out": [199, 359], "mppi": 200, "covari": 200, "william": [200, 269], "aldrich": 200, "theodor": 200, "01149": 200, "hansen": 200, "wang": 200, "su": 200, "04955": 200, "valueoper": [200, 225, 226, 227, 249, 250, 251, 252, 257, 263, 264, 267, 268, 269, 270, 272, 328, 336, 341, 343, 347], "tdlambdaestim": [200, 334, 341], "value_net": [200, 253, 255, 269, 280, 281, 282, 283, 343, 346, 347, 350], "adv": 200, "lmbda": [200, 274, 280, 283, 285, 291, 292, 293, 296, 297, 337, 341, 343, 353], "95": [200, 274, 342, 343, 344, 354], "value_network": [200, 252, 253, 255, 256, 258, 263, 270, 280, 281, 282, 283, 337, 341, 343, 347, 350], "temperatur": [200, 250, 256, 263], "neg_inf": [201, 202], "inf": [201, 202], "api_doc": [201, 202], "tf_agent": [201, 202], "event": [201, 202, 210, 289, 290, 291, 292, 294, 295, 296, 297, 356], "unnorm": [201, 202, 210], "sparse_mask": [201, 202], "dens": [201, 202], "0831": [201, 202], "1203": [201, 202], "0928": [201, 202], "1972": [201, 202], "grad_method": [202, 210], "reparamgradientstrategi": [202, 210], "passthrough": [202, 210], "proxi": [202, 210, 337], "relaxedonehot": [202, 210], "zeros_lik": [202, 354], "sample_non_valid": 202, "centralis": [203, 204, 353], "share_param": [203, 204, 353], "homogen": [203, 204, 353], "agent_network": [203, 204], "modulelist": [203, 204, 325, 358], "lazyconv2d": [203, 358], "2592": [203, 342], "decentralis": [203, 353], "n_agent_input": [204, 353], "n_agent_output": [204, 353], "lazili": [204, 354], "toech": 204, "centalis": 204, "shown": [204, 336, 352, 353, 356], "std_init": [205, 206], "initialize_paramet": 205, "isol": [205, 265], "1706": [206, 221], "10295v3": 206, "induc": 206, "aid": 206, "scale_map": 207, "biased_softplus_1": 207, "scale_lb": [207, 214, 215], "exp": [207, 248], "module_norm": 207, "decod": 208, "1803": [208, 209, 212], "10122": [208, 209], "rnn_hidden": 208, "latent": 209, "excacli": 210, "inres": 211, "mu": [211, 235, 343], "state_shap": [212, 278], "mixing_embed_dim": [212, 278], "qmix": [212, 353], "mixer": [212, 221, 278], "monoton": 212, "hyper": 212, "11485": 212, "qmixerloss": [212, 221], "qmix_vdn": [212, 221], "vdn": [212, 221], "greedi": [213, 231, 232, 233, 238, 342, 344, 346], "hidden_dim": [214, 215], "posterior": [214, 260], "rssm": [214, 215, 260], "1811": [214, 215], "04551": [214, 215], "obs_embed": 214, "rnn_hidden_dim": 215, "dream": 215, "tanhtransform": 219, "decomposit": 221, "05296": 221, "hide": [222, 343, 353], "satisfi": [222, 336], "vmap_dim": 222, "lam": 222, "sample_in": 222, "sample_in_td": 222, "vm": 222, "translat": [224, 236], "character": [224, 230, 236, 237, 239, 356], "overflow": [224, 230, 231, 236, 237, 238, 239, 240], "td_modul": [224, 225, 226, 227, 236, 239, 240, 242, 244, 346, 358], "3635": 224, "0340": 224, "1476": 224, "3911": [224, 354], "1664": [224, 342, 354], "5455": 224, "2247": 224, "4583": 224, "2916": 224, "2160": 224, "5337": 224, "5193": 224, "grad_fn": [224, 232, 233, 358], "addmmbackward0": 224, "actorvalueoper": [225, 336, 346], "get_policy_oper": [225, 226, 227, 251, 264, 267, 336], "standalon": [225, 226, 227, 346], "tdmodul": [225, 226, 227, 328], "get_critic_oper": 225, "common_oper": [225, 227], "policy_oper": [225, 226, 227], "value_oper": [225, 226, 227], "normalparamwrapp": [225, 226, 227, 236, 242, 249, 250, 257, 263, 267, 268, 269, 270, 272, 334, 358], "module_hidden": [225, 227], "td_module_hidden": [225, 227], "module_act": [225, 227], "td_module_act": [225, 226, 227], "module_valu": [225, 226, 227], "td_module_valu": [225, 226, 227], "state_action_valu": [225, 244, 250, 256, 263, 270, 279, 325, 328, 336, 341, 358], "td_clone": [225, 226, 227], "tensordictmodulewrapp": [225, 321, 322, 328], "get_policy_head": [225, 226, 227], "safesequenti": [225, 226, 227, 278], "head": [225, 227, 251, 264, 267], "get_value_head": [225, 226, 227], "get_value_oper": [225, 226, 227, 251, 264, 267], "action_modul": 226, "state_valu": [226, 227, 244, 251, 256, 263, 264, 267, 268, 270, 280, 281, 282, 283, 285, 287, 289, 291, 293, 294, 296, 336, 341, 343, 353], "qualiti": [227, 336], "actorcriticoper": [227, 251, 264, 267, 336, 346], "embeddig": 227, "refet": 227, "actorcriticwrapp": [227, 336, 341], "po": [228, 233], "sigma_init": 228, "epsilon": [228, 232, 233, 235, 271, 314, 342, 343, 344, 346], "sigma_end": 228, "annealing_num_step": [228, 232, 233, 235, 341, 342, 344, 346, 350], "captur": [228, 232, 233, 235], "omiss": [228, 232, 233, 235], "ommit": [228, 232, 233, 235], "inferec": 229, "set_tensor_kei": 229, "dt_inference_wrapp": 229, "baz": 229, "inference_context": 229, "obs_dim": 229, "tanhdelta": [229, 334, 341], "dtactor": 229, "actor_modul": [229, 358], "dist_class": 229, "dist_kwarg": 229, "distribution_kwarg": [229, 236, 240, 343, 353], "inference_actor": 229, "sequence_length": 229, "mask_context": 229, "out_act": 229, "qvaluemodul": [230, 237, 278, 344, 346, 350], "distributionaldqnnet": 230, "make_log_softmax": 230, "my_action_valu": [231, 238], "chanc": 231, "thid": 231, "eps_init": [232, 233, 235, 342, 344, 346, 350], "eps_end": [232, 233, 235, 342], "explorative_polici": [232, 233, 235], "9055": [232, 233, 354], "9277": [232, 233], "6295": [232, 233], "2532": [232, 233], "addbackward0": [232, 233], "lmheadmodel": 234, "actor_head": [234, 251, 264, 267], "base_model": 234, "lm_head": 234, "ornstein": [235, 341], "uhlenbeck": [235, 341], "ou": [235, 341], "correl": 235, "noise_t": 235, "noise_": 235, "theta": [235, 343, 354], "sigma_t": 235, "sigma_": 235, "anneal": [235, 342, 346], "ou_prev_nois": 235, "ou_step": 235, "x0": 235, "sigma_min": 235, "n_steps_ann": 235, "is_init_kei": 235, "_ou_prev_nois": 235, "_ou_step": 235, "default_interaction_typ": [236, 240, 346], "interaction_typ": [236, 240], "datacollectorbas": [236, 318, 321, 322, 328, 334], "set_interaction_typ": [236, 240], "cache_dist": [236, 240], "n_empirical_estim": [236, 240], "compound": [236, 346], "compositedistribut": [236, 346], "categ": 236, "distribution_map": 236, "chose": 238, "functionalmodul": 239, "functionalmodulewithbuff": 239, "td_fmodul": 239, "td_function": 239, "td_state": 239, "params_repeat": 239, "td_vmap": [239, 242], "random_sampl": [239, 240], "suppli": 240, "fist": 240, "log_prob_kei": [240, 353], "probabilistictensordictsequenti": [241, 249, 251, 264, 267, 269, 321, 322, 358], "partial_toler": [241, 242, 352], "who": [241, 242], "AND": [241, 242], "tensordictsequenci": 242, "tensordictsequ": 242, "safeprobabilisticmodul": [242, 336], "spec1": 242, "net1": 242, "module1": 242, "td_module1": 242, "spec2": 242, "module2": 242, "td_module2": 242, "clamp": [243, 260, 316, 354], "boundari": [243, 343, 353], "resolut": 243, "9944": 243, "9991": 243, "3020": 243, "2299": [243, 354], "5418": 243, "2989": 243, "6849": 243, "3169": 243, "2690": 243, "9649": [243, 354], "5686": 243, "8602": 243, "0315": 243, "8455": [243, 354], "6027": 243, "4746": 243, "7843": 243, "7782": 243, "2111": 243, "5115": 243, "4687": 243, "5760": 243, "custommodul": 244, "imaginari": 245, "imagin": 245, "transition_model": 245, "get_reward_oper": 245, "get_transition_model_oper": 245, "min_val": [246, 248], "_bia": 246, "invert": [247, 343], "surject": 248, "expln": 248, "biased_softplu": [248, 334], "beggin": 248, "biased_softplus_": 248, "syntax": [248, 341], "met": [248, 354], "1602": 249, "01783v2": 249, "actor_network": [249, 250, 251, 252, 254, 256, 257, 263, 264, 266, 267, 268, 269, 270, 272, 341, 343, 347, 353], "critic_network": [249, 251, 264, 267, 269, 343, 353], "entropy_bonu": [249, 251, 264, 267, 343], "favour": [249, 251, 264, 267], "samples_mc_entropi": [249, 251, 264, 266, 267], "mont": [249, 251, 264, 267, 341], "carlo": [249, 251, 264, 267, 341], "entropy_coef": [249, 251, 264, 267, 343, 353], "critic_coef": [249, 251, 264, 267, 343], "loss_critic_typ": [249, 251, 264, 267, 269, 343], "l1": [249, 251, 252, 253, 257, 264, 267, 268, 269, 272, 275, 278, 336, 341], "l2": [249, 251, 252, 253, 254, 255, 257, 260, 261, 264, 267, 268, 269, 272, 275, 278, 341], "smooth_l1": [249, 250, 251, 252, 253, 256, 257, 263, 264, 267, 268, 269, 270, 272, 275, 278, 343], "separate_loss": [249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272], "propag": [249, 251, 252, 256, 257, 263, 264, 267, 268, 269, 270, 272, 280, 281, 282, 283, 343, 353], "advantage_kei": [249, 251, 264, 267, 269, 280, 281, 282, 283], "value_target_kei": [249, 251, 264, 267, 269, 280, 281, 282, 283], "value_target": [249, 251, 264, 267, 269, 280, 281, 282, 283, 343, 353], "ddp": [249, 251, 264, 267, 269], "fsdp": [249, 251, 264, 267, 269], "divid": [249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 272, 319, 336, 341, 353, 354], "loss_crit": [249, 267, 343, 353], "loss_entropi": [249, 267, 343, 353], "loss_object": [249, 267, 343, 353], "recur": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283, 284, 346], "next_reward": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283], "next_don": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283], "next_termin": [249, 250, 252, 253, 255, 256, 257, 263, 267, 268, 269, 270, 272, 280, 281, 282, 283], "loss_obj": 249, "sacloss": [249, 262, 271, 334], "select_out_kei": [249, 250, 252, 256, 257, 263, 267, 268, 270, 272], "make_value_estim": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278, 337, 341, 342, 353, 358], "value_typ": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 341], "hyperparam": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341], "enum": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 274, 278, 341], "default_value_estim": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341, 358], "default_value_kwarg": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 334, 341], "dqn_loss": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 273, 278], "td1": [249, 250, 252, 253, 255, 257, 258, 259, 263, 265, 267, 268, 269, 270, 272, 278, 341], "conserv": [250, 255], "qvalue_network": [250, 256, 257, 263, 268, 270, 272], "loss_funct": [250, 252, 253, 254, 255, 256, 257, 263, 268, 270, 272, 275, 278, 341], "alpha_init": [250, 257, 266, 268, 270], "min_alpha": [250, 257, 266, 268, 270], "max_alpha": [250, 257, 266, 268, 270], "fixed_alpha": [250, 257, 266, 268, 270], "target_entropi": [250, 257, 266, 268, 270], "prod": [250, 266, 270], "n_action": [250, 253, 255, 266, 270], "delay_actor": [250, 252, 270, 272], "delay_qvalu": [250, 257, 268, 270, 272], "min_q_weight": 250, "max_q_backup": 250, "backup": 250, "deterministic_backup": 250, "num_random": 250, "with_lagrang": 250, "lagrang": 250, "lagrange_thresh": 250, "valueclass": [250, 252, 257, 268, 270, 272], "qvalu": [250, 256, 257, 263, 268, 270, 272, 325], "loss_actor": [250, 252, 256, 257, 263, 268, 269, 270, 272, 311, 341, 347, 358], "loss_actor_bc": 250, "loss_alpha": [250, 257, 268, 270], "loss_cql": [250, 255], "loss_qvalu": [250, 255, 256, 257, 263, 268, 270, 272], "loss_alpha_prim": 250, "clip_epsilon": [251, 343, 353], "normalize_advantag": [251, 264, 267, 353], "value_kei": [251, 264, 267, 280, 281, 282, 283, 341], "somemodul": [251, 264, 267], "someactor": [251, 264, 267], "value_head": [251, 264, 267], "somevalu": [251, 264, 267], "loss_modul": [251, 262, 264, 265, 267, 271, 316, 327, 328, 337, 338, 341, 342, 343, 353, 356], "ppoloss": [251, 264, 334], "delay_valu": [252, 253, 255, 258, 269, 270, 278, 342, 344, 350], "loss_valu": [252, 256, 263, 269, 270, 341, 343, 347, 353, 358], "pred_valu": [252, 255, 272, 341, 347, 358], "pred_value_max": [252, 341, 347, 358], "target_valu": [252, 255, 268, 272, 279, 337, 341, 347, 358], "target_value_max": [252, 341, 347, 358], "qvalueactor": [253, 255, 278, 336, 342, 344], "double_dqn": 253, "06461": [253, 262], "mult_one_hot": [253, 256, 257, 278], "loss_val": [253, 255, 337, 341, 343, 344, 347, 348, 350, 353, 356], "01345": 254, "distanc": [255, 264, 275, 279, 280, 353], "dcql_loss": 255, "2110": [256, 263], "06169": [256, 263], "num_qvalue_net": [256, 257, 263, 268, 270, 272], "expectil": [256, 263], "tau": [256, 263, 271, 341, 342], "antmaz": [256, 263], "sticht": [256, 263], "onehotcategor": [256, 257, 334], "target_entropy_weight": 257, "disctount": 258, "distributionalqvalueactor": [258, 336], "input_tensordict": [258, 341], "actor_model": 259, "value_model": [259, 261], "model_based_env": 259, "dreamerenv": [259, 334], "imagination_horizon": 259, "unrol": [259, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297], "discount_loss": [259, 261], "lambda_kl": 260, "lambda_reco": 260, "lambda_reward": 260, "reco_loss": 260, "reward_loss": 260, "free_nat": 260, "nat": 260, "delayed_clamp": 260, "global_averag": 260, "value_loss": 261, "fake_data": 261, "ddpgloss": [262, 271, 328, 334, 341, 347, 358], "td3loss": [262, 271, 334], "value_network_update_interv": 262, "qvalueclass": 263, "loss_value_diff": 263, "diff": 263, "old_polici": 264, "new_polici": 264, "apart": [264, 353], "dtarg": 264, "samples_mc_kl": 264, "analyt": 264, "decrement": 264, "loss_": [265, 311, 337, 341, 347], "equip": [265, 344, 346], "gh": 265, "_acceptedkei": 265, "dataclass": [265, 325], "_forward_value_estimator_kei": 265, "alter": [265, 336], "value_estim": [265, 280, 281, 282, 283, 284, 337, 341, 353], "myloss": 265, "action2": 265, "convert_to_funct": [265, 341], "expand_dim": 265, "create_target_param": [265, 341], "compare_against": [265, 341], "_param": 265, "expans": 265, "resampl": 265, "_target_param": 265, "blend": 265, "proxim": [267, 343, 353], "optimis": [267, 312, 343, 353], "flavour": [267, 353, 358], "clipppoloss": [267, 334, 343, 353], "klpenppoloss": [267, 334], "regularis": 267, "06347": 267, "gae": [267, 334, 337, 341, 343, 353], "ppo_loss": 267, "tdlambda": [267, 274, 337, 341], "base_lay": 267, "randn_lik": 267, "samplelogprob": 267, "openreview": [268, 325], "ay8zfzm0tdd": [268, 325], "sub_sample_len": 268, "subsampl": [268, 307, 338], "action_log_prob_actor": 268, "state_action_value_actor": [268, 272], "connectionist": 269, "1992": 269, "doi": 269, "1007": 269, "bf00992696": 269, "actor_net": [269, 341, 343], "1801": 270, "01290": 270, "applic": [270, 278, 345, 346, 354], "1812": 270, "05905": 270, "redqloss": [271, 334], "math": 271, "theta_t": [271, 354], "theta_": [271, 354], "polyak": 271, "policy_nois": 272, "noise_clip": 272, "next_state_valu": [272, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 334], "td0": [273, 341], "strict_shap": 275, "view_a": 275, "qmixer": [278, 334], "local_valu": 278, "visibl": [278, 353], "dafault": 278, "acceptedkei": 278, "global_valu": 278, "penultim": 278, "local_value_network": 278, "mixer_network": 278, "value_modul": [278, 343, 358], "qnet": [278, 341], "next_val_kei": 279, "pred_next_v": 279, "usus": 279, "mse": 279, "q_valu": 279, "n_steps_to_next": 279, "value_next_st": 279, "1506": [280, 285, 293], "02438": [280, 285, 293], "exponenti": [280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 314], "average_ga": [280, 343], "skip_exist": [280, 281, 282, 283], "time_dim": [280, 282, 283, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297], "advang": 280, "gradient_mod": 280, "value_error": [280, 281, 282, 283, 284], "target_param": [280, 281, 282, 283, 284, 341, 353], "98": [280, 281, 282, 283, 342, 344, 354, 355], "94": [280, 283, 342, 354, 356], "unpack": [280, 281, 282, 283], "tensor_kei": [280, 281, 282, 283, 284], "next_valu": [280, 281, 282, 283, 284], "aka": [281, 342], "average_reward": [281, 282, 283], "tdestim": [281, 282, 284], "infti": 282, "valuefunctionbas": 284, "old_stat": [285, 287, 289, 291, 293, 294, 296], "new_stat": [285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "rolling_gamma": [289, 290, 291, 292, 294, 295, 296, 297], "g1": [289, 290, 291, 292, 294, 295, 296, 297], "g2": [289, 290, 291, 292, 294, 295, 296, 297], "g3": [289, 290, 291, 292, 294, 295, 296, 297], "g4": [289, 290, 291, 292, 294, 295, 296, 297], "v3": [289, 290, 291, 292, 294, 295, 296, 297], "out_file_bas": 298, "skip_reset": 298, "interv": [298, 299, 308, 318, 342, 354], "center_crop": 299, "make_grid": 299, "mp4": [299, 301, 350], "csvlogger": [299, 334, 342, 349, 350], "csv": [299, 301, 303, 342, 349, 350], "wandb": [299, 303, 306, 349, 358], "tensorboard": [299, 303, 305, 349, 358], "exp_nam": [299, 300, 301, 304, 305, 306, 328, 342, 349, 350], "log_dir": [299, 300, 301, 303, 305, 306, 342, 350], "cheetah_video": 299, "video_format": [299, 301, 350], "run_video": 299, "run_video_0": 299, "templat": 300, "pt": [301, 338, 355], "video_fp": 301, "minim": [301, 356], "dependeci": 301, "cur_dir": 301, "csv_log": 301, "video_": 301, "experiment_nam": [302, 303], "uuid": [302, 342, 359], "logger_typ": 303, "logger_nam": 303, "mlflow": [303, 304], "wandb_kwarg": 303, "mlflow_kwarg": 303, "tracking_uri": 304, "uri": 304, "datastor": 304, "tb_log": 305, "tensoarboard": 305, "td_log": 305, "save_dir": 306, "resum": 306, "reus": 306, "uncategor": 306, "sub_traj_len": 307, "min_sub_traj_len": 307, "register_op": [307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 338, 342], "process_optim_batch": [307, 313, 314, 338], "td_out": [307, 315], "_process_optim_batch_hook": [307, 338], "batch_subsampl": 307, "clear_cuda": 308, "pre_optim_step": [308, 338], "counter": [309, 338], "log_pbar": [309, 310, 312, 314, 338, 342], "progress": [309, 310, 312, 316, 338, 342, 344, 359], "count_fram": 309, "pre_steps_log": [309, 310, 338], "count_frames_log": 309, "lognam": 310, "r_train": [310, 342], "log_reward": [310, 342], "loss_compon": 311, "appl": 311, "optimizer_hook": 311, "record_interv": [312, 341, 342], "record_fram": [312, 319, 341, 342], "policy_explor": [312, 328, 341, 342, 346, 350], "log_kei": [312, 342], "suffix": 312, "underestim": 312, "set_exploration_typ": [312, 334, 343, 344, 346, 358], "r_evalu": [312, 341], "flatten_tensordict": [313, 342], "max_dim": 313, "rb_trainer": 313, "batch_process": [313, 314, 315, 338], "post_loss": [313, 338], "999": [314, 342], "jitter": 314, "finfo": 314, "default_dtyp": 314, "get_default_dtyp": 314, "reward_norm": 314, "update_reward_stat": 314, "normalize_reward": 314, "make_train": [315, 334], "_process_batch_hook": [315, 338], "select_kei": [315, 338], "versatil": [316, 345], "optim_steps_per_batch": [316, 338, 342], "clip_grad_norm": 316, "clip_norm": 316, "progress_bar": 316, "save_trainer_interv": 316, "log_interv": [316, 342], "save_trainer_fil": [316, 338], "update_weights_interv": [318, 342], "update_weight": 318, "post_step": [318, 338, 342], "cfg": [319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332], "dictconfig": [319, 320, 321, 322, 325, 326, 327, 328, 329, 332], "unknowingli": 319, "annealing_fram": [319, 341], "init_env_step": [319, 320, 341], "proof_environ": [320, 325, 341], "sta": 320, "ot": 320, "actor_model_explor": [321, 322, 341], "make_env_kwarg": [321, 322], "targetnetupdat": [323, 324, 327, 328], "redqloss_deprec": 324, "actor_net_kwarg": 325, "qvalue_net_kwarg": 325, "observation_kei": 325, "parser_env_arg": 325, "parser_model_args_continu": 325, "hydra": 325, "config_stor": 325, "configstor": 325, "config_field": 325, "config_cl": 325, "redqmodelconfig": 325, "envconfig": 325, "make_dataclass": 325, "cls_name": 325, "cs": 325, "config_path": 325, "config_nam": 325, "replayargsconfig": 326, "target_net_updat": [328, 341, 342], "constitu": 328, "tensorboardlogg": [328, 334, 349], "egreedywrapp": 328, "env_proof": 328, "obs_spec": 328, "net_valu": 328, "dir": [328, 338, 342], "gettempdir": 328, "argpars": [329, 332], "namespac": [329, 332], "parser": [329, 332], "transformed_env_constructor": [329, 334], "num_env_per_collector": [330, 331], "video_tag": 332, "norm_obs_onli": 332, "use_env_cr": 332, "custom_env_mak": 332, "custom_env": 332, "return_transformed_env": 332, "action_dim_gsd": 332, "state_dim_gsd": 332, "obs_norm_state_dict": 332, "wheter": 332, "maker": 332, "asyncdatacollector": 334, "distributedsyncdatacollector": 334, "submitit_delayed_launch": 334, "raycollector": 334, "rational": 334, "behind": 334, "footnot": 334, "d4rlexperiencereplai": 334, "gendgrlexperiencereplai": 334, "minariexperiencereplai": 334, "openmlexperiencereplai": 334, "openxexperiencereplai": 334, "vd4rlexperiencereplai": 334, "unboundeddiscretetensorspec": 334, "lazystackedtensorspec": 334, "lazystackedcompositespec": 334, "prompttensordicttoken": 334, "rolloutfrommodel": 334, "tokenizeddatasetload": 334, "create_infinite_iter": 334, "consolidate_spec": 334, "check_no_exclusive_kei": 334, "contains_lazy_spec": 334, "check_marl_group": 334, "tensordictrecord": 334, "videorecord": [334, 343, 349, 350], "get_available_librari": 334, "set_exploration_mod": 334, "make_composite_from_td": [334, 354], "terminated_or_trunc": 334, "braxwrapp": 334, "dmcontrolwrapp": 334, "jumanjienv": 334, "jumanjiwrapp": 334, "mogymenv": 334, "mogymwrapp": 334, "multithreadedenvwrapp": 334, "openmlenv": 334, "pettingzooenv": 334, "robohiveenv": 334, "smacv2env": 334, "smacv2wrapp": 334, "vmaswrapp": 334, "qvaluehook": 334, "distributionalqvaluehook": 334, "reset_nois": 334, "cemplann": 334, "mpcplannerbas": 334, "mppiplann": 334, "independentnorm": 334, "truncatednorm": 334, "maskedonehotcategor": 334, "inv_softplu": 334, "vmapmodul": 334, "distributionaldqnloss": [334, 342], "discretesacloss": 334, "iqlloss": 334, "discreteiqlloss": 334, "cqlloss": 334, "discretecqlloss": 334, "dtloss": 334, "onlinedtloss": 334, "a2closs": 334, "reinforceloss": 334, "dreameractorloss": 334, "dreamermodelloss": 334, "dreamervalueloss": 334, "td0estim": [334, 341], "td1estim": [334, 341], "td0_return_estim": 334, "td0_advantage_estim": 334, "td1_return_estim": 334, "vec_td1_return_estim": 334, "td1_advantage_estim": 334, "vec_td1_advantage_estim": 334, "td_lambda_return_estim": 334, "vec_td_lambda_return_estim": 334, "td_lambda_advantage_estim": 334, "vec_td_lambda_advantage_estim": 334, "generalized_advantage_estim": 334, "vec_generalized_advantage_estim": 334, "reward2go": 334, "distance_loss": [334, 341], "hold_out_net": 334, "hold_out_param": [334, 341], "softupd": [334, 341, 342, 344, 347, 350], "hardupd": [334, 341, 347], "batchsubsampl": [334, 338], "clearcudacach": 334, "countframeslog": 334, "logreward": [334, 338, 342], "optimizerhook": [334, 342], "replaybuffertrain": [334, 338, 342], "rewardnorm": 334, "selectkei": [334, 338], "trainerhookbas": [334, 338, 342], "updateweight": [334, 338, 342], "make_collector_offpolici": 334, "make_collector_onpolici": 334, "make_dqn_loss": 334, "make_redq_loss": 334, "make_redq_model": 334, "make_replay_buff": [334, 341], "make_target_updat": 334, "parallel_env_constructor": [334, 341], "sync_async_collector": 334, "sync_sync_collector": 334, "correct_for_frame_skip": 334, "get_stats_random_rollout": 334, "mlflowlogg": 334, "wandblogg": [334, 349], "get_logg": 334, "generate_exp_nam": 334, "journei": 335, "textbook": 335, "highlight": 335, "ever": [335, 353], "bump": 335, "think": [335, 343, 353, 359], "benefit": [335, 345, 353, 356], "pr": 335, "ground": [336, 341, 354], "recycl": [336, 356], "impos": 336, "violat": 336, "noisier": 336, "Their": [336, 353], "sd": 336, "prob_modul": 336, "pick": [336, 341, 342, 346], "tabl": [336, 342, 346], "hopefulli": [336, 342], "functional_modul": 336, "make_funct": 336, "mathbb": [336, 342], "rightarrow": [336, 342], "soften": 336, "backbon": [336, 344, 346, 352, 358], "make_actor": 336, "make_valu": 336, "shared_param": 336, "make_common": 336, "reusabl": [337, 341, 356], "swappabl": [337, 341], "characterist": [337, 341, 354], "trainabl": [337, 341, 347, 355], "whatev": [337, 341], "smth": [337, 341], "metric": [337, 341], "nutshel": [337, 341], "barto": [337, 353], "chapter": [337, 349], "significantli": [337, 341, 342, 347, 353], "next_stat": 337, "value_net_loss": 337, "pow": [337, 341], "therebi": [337, 341, 342], "room": 337, "signifi": [337, 353], "underperform": 337, "thin": 337, "intric": [337, 346], "believ": 338, "scheme": [338, 359], "substenti": 338, "_pre_steps_log_hook": 338, "_pre_optim_hook": 338, "sub_batch": 338, "_post_loss_hook": 338, "_post_optim_hook": 338, "post_optim": [338, 342], "_post_optim_log": 338, "post_optim_log": 338, "_post_steps_hook": 338, "_post_steps_log_hook": 338, "post_steps_log": 338, "comment": [338, 342, 358], "reserv": 338, "logginghook": 338, "logging_hook": 338, "save_dict": 338, "some_valu": 338, "torchsnapshot": 338, "ckpt_backend": 338, "filepath": 338, "save_train": 338, "load_from_fil": 338, "071": [340, 357], "galleri": [340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "mem": [340, 357], "mb": [340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359], "torchrl_demo": [340, 357, 358], "45": [340, 342, 344, 354, 357, 358], "024": [340, 357, 358], "rb_tutori": [340, 356, 357], "647": [340, 356, 357], "2816": [340, 342, 356, 357], "066": [340, 354, 357], "coding_dqn": [340, 342, 357], "797": [340, 342, 354, 357], "767": [340, 342, 357], "dqn_with_rnn": [340, 344, 357], "330": [340, 344, 354, 357], "multiagent_ppo": [340, 353, 357], "014": [340, 353, 357], "coding_ddpg": [340, 341, 357], "430": [340, 341, 354, 357], "2806": [340, 341, 357], "coding_ppo": [340, 343, 357], "25": [340, 341, 342, 343, 353, 354, 357], "022": [340, 343, 357], "torchrl_env": [340, 357, 359], "57": [340, 342, 344, 354, 355, 357, 359], "530": [340, 354, 357, 359], "2515": [340, 357], "pretrained_model": [340, 355, 357], "51": [340, 342, 343, 354, 355, 357], "587": [340, 354, 355, 357], "multi_task": [340, 352, 357], "552": [340, 352, 354, 357], "643": [340, 346, 354, 357], "43": [340, 342, 344, 345, 353, 354, 357], "511": [340, 347, 354, 357], "145": [340, 350, 354, 357, 359], "903": [340, 348, 357], "author": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 356, 359], "vincent": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 356, 359], "moen": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 354, 356, 359], "assembl": 341, "focus": [341, 347], "straightforward": [341, 342, 345, 346, 347, 348, 356], "maxim": [341, 347, 354], "transpar": [341, 344], "understood": 341, "sota": [341, 342, 358], "illustr": [341, 342, 346, 356], "bash": 341, "is_fork": [341, 342, 343, 344, 353, 355], "get_start_method": [341, 342, 343, 344, 353, 355], "is_avail": [341, 342, 343, 344, 353, 355], "collector_devic": 341, "loss_dict": 341, "oblivi": [341, 343, 356], "elementari": 341, "didact": 341, "dilut": 341, "pessimist": [341, 342, 343], "target_actor_network_param": 341, "actor_in_kei": 341, "actor_crit": 341, "noth": [341, 343], "compromis": 341, "hp": 341, "hasattr": 341, "_value_estim": 341, "elif": [341, 342], "notimplementederror": 341, "unknown": 341, "ifgg": 341, "_loss_actor": 341, "td_copi": 341, "actor_network_param": 341, "value_network_param": 341, "_loss_valu": 341, "pred_val": 341, "target_value_network_param": 341, "glue": 341, "_forward": 341, "ndimens": 341, "remaind": 341, "focu": [341, 342, 343, 346, 347, 348], "env_librari": 341, "env_task": 341, "env_arg": [341, 342], "friendli": 341, "torchr": 341, "rescal": 341, "presum": 341, "make_transformed_env": 341, "reward_sc": 341, "marker": 341, "env_per_collector": 341, "transform_state_dict": 341, "make_t_env": 341, "cheat": 341, "10m": 341, "cautiou": 341, "magnitud": 341, "thousand": [341, 344], "get_env_stat": 341, "proof_env": 341, "5000": [341, 342, 343, 350], "recal": [341, 343, 356], "ddpgmlpactor": 341, "ddpgmlpqnet": 341, "materi": 341, "ornsteinuhlenbeckprocesswrapp": [341, 346], "make_ddpg_actor": 341, "q_net": 341, "tight": 341, "decoupl": [341, 347], "10_000": [341, 343], "traj_len": [341, 344], "make_record": 341, "recorder_obj": 341, "flavor": 341, "circular": 341, "buffer_s": [341, 342], "random_crop_len": 341, "prb": 341, "buffer_scratch_dir": 341, "temporari": 341, "dataflow": 341, "ceil_div": 341, "utd": [341, 344], "update_to_data": 341, "realiz": 341, "_must_": 341, "001": [341, 354], "outdat": 341, "trick": [341, 342], "despit": 341, "adam": [341, 342, 343, 344, 347, 350, 353, 354], "optimizer_actor": 341, "lr": [341, 342, 343, 344, 350, 353, 354], "weight_decai": [341, 342], "optimizer_valu": 341, "total_collection_step": 341, "pretti": [341, 345, 349, 356], "rewards_ev": 341, "collected_fram": 341, "pbar": [341, 343, 344, 353, 354], "r0": 341, "numel": [341, 343, 344, 350, 355, 356], "current_fram": 341, "sampled_tensordict": 341, "gn1": 341, "clip_grad_norm_": [341, 343, 353, 354], "gn2": 341, "gn": [341, 354], "td_record": 341, "rn": 341, "set_descript": [341, 343, 344, 353, 354], "2f": 341, "traceback": [341, 356, 359], "1126": 341, "1527": [341, 356, 359], "_wrapped_call_impl": [341, 356, 359], "_call_impl": [341, 356, 359], "1577": 341, "forward_cal": [341, 356, 359], "_contextlib": [341, 356, 359], "126": [341, 354, 356, 359], "decorate_context": [341, 356, 359], "364": [341, 354], "342": [341, 354], "1167": 341, "new_func": 341, "_self": [341, 359], "597": [341, 354], "_to_modul": 341, "407": [341, 354], "__dict__": 341, "_modul": 341, "plot": [341, 343, 344, 353, 354], "mention": [341, 344, 356, 359], "matplotlib": [341, 343, 344, 353, 354, 356, 359], "pyplot": [341, 343, 344, 353, 354, 356, 359], "plt": [341, 343, 344, 353, 354, 356, 359], "zip": [341, 351], "legend": 341, "xlabel": [341, 344, 353, 354], "ylabel": [341, 353], "tight_layout": 341, "concret": [341, 343], "takeawai": [341, 342], "distpatch": 341, "jupyt": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "ipynb": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359], "sphinx": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359], "customis": [342, 353], "road": 342, "aspect": [342, 347], "highest": [342, 346], "prerequisit": [342, 344], "familiar": [342, 353, 359], "lookup": 342, "amort": [342, 343], "cart": 342, "pole": 342, "un": 342, "actuat": 342, "frictionless": 342, "duelingcnndqnet": 342, "egreedymodul": [342, 344, 346, 350], "is_notebook": 342, "shell": 342, "get_ipython": 342, "__class__": 342, "zmqinteractiveshel": 342, "qtconsol": 342, "terminalinteractiveshel": 342, "ipython": [342, 353, 354], "nameerror": 342, "umbrella": 342, "misplac": 342, "misus": 342, "orchestr": [342, 347, 349], "five": 342, "64x64": 342, "motion": [342, 354], "obs_norm_sd": 342, "simpler": [342, 345], "get_norm_stat": 342, "test_env": 342, "make_model": 342, "dummy_env": 342, "output_s": [342, 344], "init_bia": 342, "exploration_modul": [342, 344, 346, 350], "eps_greedy_v": 342, "eps_greedy_val_env": 342, "actor_explor": 342, "get_replay_buff": 342, "n_optim": [342, 347, 348], "themselv": 342, "parametriz": 342, "simplic": [342, 343, 348, 355, 356], "get_collector": 342, "cl": 342, "data_collector": 342, "bunch": 342, "power": 342, "ubiquit": [342, 345], "get_loss_modul": 342, "target_updat": 342, "995": [342, 354], "sensit": 342, "variat": 342, "2e": [342, 354], "wd": 342, "upd": 342, "harder": [342, 358], "5_000": 342, "500000": 342, "100000": 342, "005": 342, "mandatori": [342, 343, 353, 354], "fairer": 342, "budget": 342, "dqn_exp_": 342, "uuid1": [342, 359], "9895": 342, "0737": 342, "registr": 342, "cumbersom": 342, "buffer_hook": 342, "weight_updat": 342, "aliv": 342, "total_reward": 342, "07": [342, 344, 353, 354], "56": [342, 354], "15it": 342, "4224": 342, "9434": 342, "42it": 342, "4045": 342, "96": [342, 354, 355], "09": [342, 354], "83it": [342, 343, 354], "4345": 342, "44it": [342, 354], "4073": 342, "17it": 342, "3923": 342, "192": [342, 354], "98it": 342, "4676": 342, "224": [342, 354], "49": [342, 354, 355], "63it": [342, 354], "3772": 342, "58": [342, 353, 354, 355], "08it": [342, 344], "288": [342, 354], "66": [342, 354, 355], "19it": 342, "72": [342, 354], "21it": [342, 354], "4797": 342, "352": [342, 354], "76": [342, 354, 355], "61it": [342, 354], "384": [342, 354], "79": [342, 354, 355, 356], "90it": 342, "4948": 342, "416": [342, 354], "54": [342, 353, 354, 355], "83": [342, 354, 355], "95it": 342, "448": [342, 354], "52": [342, 354], "480": [342, 354, 355], "89": [342, 344, 354], "68it": [342, 354], "4586": 342, "38it": 342, "544": [342, 354], "47it": [342, 354], "576": [342, 354], "94it": 342, "608": [342, 354], "77it": [342, 354], "4497": 342, "640": 342, "48": [342, 354, 355], "07it": 342, "672": 342, "47": [342, 344, 354], "90": [342, 343, 353, 354, 355], "97it": 342, "704": 342, "64it": [342, 354], "736": 342, "80it": [342, 354], "768": 342, "81it": [342, 344, 354], "4526": 342, "800": 342, "832": 342, "864": 342, "00it": 342, "896": 342, "85it": 342, "928": 342, "92it": 342, "960": 342, "30it": 342, "992": [342, 354], "12it": [342, 344], "1056": 342, "4074": [342, 354], "1088": 342, "72it": 342, "1120": 342, "74it": [342, 343], "1152": 342, "55it": [342, 354], "1184": [342, 359], "1216": 342, "10it": [342, 343, 354], "1248": 342, "54it": [342, 343, 354], "1280": 342, "1344": 342, "25it": 342, "1376": 342, "09it": 342, "1408": 342, "91": [342, 354], "71it": [342, 354], "1440": 342, "92": [342, 354], "45it": [342, 354], "1472": 342, "04it": [342, 354], "1504": 342, "27it": 342, "1536": [342, 356, 359], "03it": [342, 344, 354], "1568": 342, "20it": 342, "1600": 342, "1632": 342, "93": [342, 354, 355], "86it": 342, "1696": 342, "13it": [342, 354], "1728": 342, "66it": [342, 354], "1760": 342, "49it": [342, 354], "1792": 342, "1824": 342, "65it": [342, 354], "1856": 342, "56it": [342, 354], "1888": 342, "82it": [342, 343], "1920": 342, "59it": [342, 354], "1952": 342, "51it": [342, 354], "1984": 342, "24it": [342, 354], "2016": 342, "48it": [342, 354], "2048": [342, 355], "46it": [342, 354], "2080": 342, "2112": [342, 354], "99it": 342, "2144": 342, "2176": 342, "28it": 342, "2208": 342, "16it": 342, "2240": 342, "2272": 342, "2304": 342, "2336": 342, "29it": 342, "2368": 342, "11it": [342, 354], "2400": 342, "84it": 342, "2432": 342, "2464": 342, "96it": 342, "2496": 342, "2528": [342, 354], "2560": [342, 343], "2624": 342, "31it": 342, "53": [342, 354, 355], "2656": [342, 354], "2688": 342, "2720": [342, 354], "23it": 342, "55": [342, 354], "2752": 342, "2784": 342, "18it": [342, 343], "2848": 342, "34it": [342, 354], "2880": 342, "2912": 342, "59": [342, 354, 355], "2944": [342, 354], "60": [342, 343, 353, 354, 358], "2976": [342, 354], "58it": [342, 354], "88it": 342, "61": [342, 354, 355, 356], "3040": 342, "3072": 342, "62": [342, 354, 355, 356], "3104": 342, "05it": [342, 354], "63": [342, 354], "3136": 342, "87it": 342, "3168": 342, "3200": 342, "65": [342, 354, 355], "3232": [342, 354], "2500": 342, "3264": 342, "3296": 342, "41it": [342, 343], "67": [342, 352, 354, 355], "3328": 342, "33it": [342, 354], "3360": 342, "68": [342, 344, 354, 355], "3392": 342, "3424": 342, "69": [342, 354], "3456": [342, 354], "70": [342, 343, 353, 354, 355], "3488": 342, "3520": 342, "71": [342, 354, 355], "3552": 342, "3584": 342, "3616": 342, "37it": 342, "73": [342, 354, 355], "3648": 342, "57it": [342, 354], "74": [342, 354, 355, 356], "3680": 342, "82": [342, 354], "62it": [342, 354], "3712": 342, "3744": 342, "3776": 342, "3808": 342, "69it": [342, 354], "77": [342, 354, 355], "3840": 342, "3872": 342, "78": [342, 354, 355], "3904": 342, "3936": 342, "3968": 342, "43it": [342, 354], "4000": [342, 343], "40it": 342, "4032": 342, "4064": 342, "4096": 342, "4128": [342, 354], "4160": 342, "91it": 342, "4192": 342, "60it": [342, 354], "85": [342, 354, 355], "4256": [342, 354], "4288": [342, 354], "4320": 342, "4352": 342, "4384": 342, "22it": [342, 354], "4416": 342, "53it": [342, 354], "4448": 342, "4480": 342, "4512": 342, "4544": 342, "4576": 342, "4608": 342, "4640": 342, "4672": [342, 354], "4704": 342, "4736": 342, "4768": 342, "75it": 342, "4800": [342, 354], "97": [342, 354, 355], "4832": 342, "4864": 342, "4896": 342, "4928": 342, "4960": 342, "4992": 342, "5024it": 342, "print_csv_files_in_fold": 342, "folder_path": 342, "csv_file": 342, "output_str": 342, "dirpath": 342, "endswith": 342, "strip": 342, "tmp": [342, 356], "tmp3lux8q16": 342, "dqn_exp_3e8c2030": 342, "da33": 342, "11ee": 342, "8b2e": 342, "0242ac110002": 342, "4948333501815796": 342, "44965070486068726": 342, "45859628915786743": 342, "4044681489467621": 342, "44965073466300964": 342, "33349311351776123": 342, "2571994960308075": 342, "1814528852701187": 342, "24623483419418335": 342, "21172676980495453": 342, "2354028820991516": 342, "2131175845861435": 342, "29069992899894714": 342, "4008346199989319": 342, "grad_norm_0": 342, "3546319007873535": 342, "409515142440796": 342, "7728058099746704": 342, "6819300651550293": 342, "0089163780212402": 342, "149113655090332": 342, "288944721221924": 342, "0196752548217773": 342, "0918869972229": 342, "10000000894069672": 342, "250000476837158": 342, "qvaluenetwork": 342, "worst": 342, "accuraci": 342, "fanci": [342, 348], "talk": 343, "repetit": [343, 345, 348], "six": 343, "sophist": [343, 353], "invent": 343, "overview": [343, 347, 353, 358], "theta_k": 343, "pi_": 343, "exceed": 343, "discourag": [343, 354], "indispens": 343, "analyz": 343, "lingua": 343, "franca": 343, "defaultdict": [343, 354], "3e": [343, 344, 353], "max_grad_norm": [343, 353], "sub_batch_s": 343, "num_epoch": [343, 353], "entropy_ep": [343, 353], "interchang": [343, 345, 349, 355, 356], "charact": 343, "inverteddoublependulum": 343, "transmit": 343, "stai": 343, "supplementari": [343, 359], "told": 343, "confid": [343, 353], "ran": 343, "f_": 343, "mu_": 343, "difficulti": [343, 359], "d_ob": 343, "d_action": 343, "policy_modul": [343, 353], "That": 343, "said": 343, "briefli": [343, 353], "refil": [343, 353], "conveni": [343, 353, 354, 356], "easiest": [343, 347, 353], "mathemat": [343, 353], "tradeoff": [343, 353], "advantage_modul": 343, "lr_schedul": [343, 354], "cosineannealinglr": [343, 354], "eval_str": 343, "tensordict_data": [343, 353], "data_view": [343, 353], "subdata": [343, 353], "cum_reward_str": 343, "4f": [343, 344, 354], "stepcount_str": 343, "param_group": 343, "lr_str": 343, "eval_rollout": 343, "nice": [343, 345, 348], "454": [343, 354], "157": [343, 354], "8906": 343, "1078": 343, "0003": [343, 354], "456": [343, 354], "73it": 343, "1279": 343, "3000": 343, "461": [343, 354], "1692": 343, "463": [343, 354], "1820": 343, "0002": [343, 354], "465": [343, 354], "1901": 343, "6000": 343, "467": [343, 354], "2119": 343, "7000": 343, "457": [343, 354], "2281": 343, "8000": 343, "462": [343, 354], "2343": 343, "9000": 343, "466": [343, 354], "2404": 343, "468": [343, 354], "cap": [343, 356], "figsiz": [343, 354], "subplot": [343, 354, 359], "titl": [343, 344, 353, 354], "bit": [343, 344, 345, 353, 356], "84x84": 344, "accessori": 344, "stamp": 344, "assist": 344, "emb": 344, "n_cell": 344, "customiz": 344, "wouldn": 344, "make_tensordict_prim": 344, "qval": 344, "stoch_polici": 344, "opportun": 344, "uniniti": 344, "again": [344, 345, 346, 348, 353, 355, 356, 359], "redund": 344, "strongli": 344, "sake": [344, 355, 356], "20_000": [344, 354], "longest": 344, "npai": 344, "action_spread": 344, "1000000": 344, "123": [344, 354], "0009": [344, 354], "0008": [344, 354], "150": [344, 354], "0007": [344, 354], "topic": [345, 346, 347], "straight": 345, "backtrack": 345, "encapsul": [345, 346, 347], "reset_with_act": 345, "8591": [345, 354], "tp": 345, "stepped_data": 345, "tediou": 345, "spatial": 345, "useless": 345, "policyless": 345, "appreci": 345, "monitor": 345, "examin": 345, "tackl": 346, "delv": 346, "bypass": 346, "extractor": 346, "palliat": 346, "additivegaussianwrapp": 346, "had": [346, 348], "exploration_polici": 346, "greedili": 346, "innov": [346, 347], "rollout_explor": 346, "sole": 347, "tradit": 347, "supervis": [347, 348, 356, 359], "n_collect": 347, "get_next_batch": 347, "novel": 347, "ddpg_loss": 347, "total_loss": 347, "prove": 347, "reliev": 347, "concern": 347, "accustom": 348, "surprisingli": 348, "fundament": 348, "augment": [348, 350, 356], "art": 348, "pseudo": [348, 354], "edit": 348, "multirpocess": 348, "countless": 348, "yourself": [348, 353], "lightweight": 349, "portabl": 349, "everywher": 349, "hyperapamet": 349, "my_exp": 349, "log_scalar": 349, "elaps": 349, "my_scalar": 349, "saw": [349, 354, 356], "my_video": 349, "record_env": [349, 350], "uncom": 349, "lesson": 350, "voluntarili": 350, "refresh": [350, 353], "value_mlp": 350, "100_000": 350, "init_rand_step": 350, "training_loop": 350, "video_record": 350, "arbitrarili": 350, "total_count": 350, "total_episod": 350, "t0": 350, "t1": 350, "conclud": [350, 355], "tutorials_python": 351, "tutorials_jupyt": 351, "env1_obs_kei": 352, "observation_stand": 352, "env2_obs_kei": 352, "observation_walk": 352, "tdreset1": 352, "tdreset2": 352, "tdreset": 352, "policy_common": 352, "policy_stand": 352, "policy_walk": 352, "But": 352, "env1_mak": 352, "env2_mak": 352, "_single_task": 352, "td_rollout": 352, "matteo": 353, "bettini": 353, "benchmarl": 353, "maddpg": 353, "lidar": 353, "sensor": 353, "collis": 353, "tie": 353, "mappo": 353, "ippo": 353, "phase": [353, 356], "mathbf": 353, "pi": [353, 354], "fed": [353, 356], "literatur": 353, "overcom": 353, "stationari": 353, "concurr": 353, "analys": 353, "gui": 353, "visualis": 353, "multiagentmlp": 353, "vmas_devic": 353, "6_000": 353, "team": [353, 358], "n_iter": 353, "minibatch_s": 353, "generalis": 353, "simd": 353, "parallelis": 353, "warp": 353, "todai": 353, "circl": 353, "surround": 353, "dot": [353, 354], "collid": 353, "drag": 353, "elast": 353, "acceler": 353, "penalis": 353, "num_vmas_env": 353, "scenario_nam": 353, "four": [353, 354], "environmnet": 353, "final_rew": 353, "agent_collis": 353, "stress": 353, "paramount": 353, "n_rollout_step": 353, "evolut": 353, "utilis": 353, "n_actions_per_ag": 353, "n_obs_per_ag": 353, "share_parameters_polici": 353, "policy_net": 353, "denot": 353, "carefulli": [353, 359], "grant": 353, "converg": 353, "cooper": 353, "share_parameters_crit": 353, "critic_net": 353, "fantast": 353, "minibatch": 353, "desc": 353, "episode_reward_mean": 353, "episode_reward_mean_list": 353, "get_item_shap": 353, "critic_network_param": 353, "target_critic_network_param": 353, "4579917788505554": 353, "39507877826690674": 353, "2842429876327515": 353, "5311583280563354": 353, "0912442207336426": 353, "4949307441711426": 353, "478776454925537": 353, "7761335372924805": 353, "738668441772461": 353, "9966132640838623": 353, "xvfb": 353, "pyvirtualdisplai": 353, "1400": [353, 354], "900": 353, "pil": 353, "rendering_callback": 353, "fromarrai": 353, "rgb_arrai": [353, 354], "gif": 353, "save_al": 353, "append_imag": 353, "profici": 353, "master": 353, "freeli": 354, "touch": 354, "undertaken": 354, "broader": 354, "wider": 354, "algebra": 354, "acquaint": 354, "avenu": 354, "_apply_to_composit": 354, "default_x": 354, "default_i": 354, "torqu": 354, "upward": 354, "angular": 354, "sin": 354, "rad": 354, "sec": 354, "gravit": 354, "angl": 354, "deleg": 354, "new_th": 354, "new_thdot": 354, "thdot": 354, "g_forc": 354, "max_torqu": 354, "angle_norm": 354, "max_spe": 354, "albeit": 354, "gen_param": 354, "high_th": 354, "high_thdot": 354, "low_th": 354, "low_thdot": 354, "trivial": 354, "shortcut": [354, 359], "irrelev": 354, "_make_spec": 354, "td_param": 354, "render_mod": 354, "render_fp": 354, "random_": 354, "_make_step": 354, "staticmethod": 354, "showcas": 354, "skeleton": 354, "_apply_transform": [354, 359], "_inv_apply_transform": [354, 359], "subset": [354, 355], "unitari": 354, "sine": 354, "cosin": 354, "sintransform": 354, "tensordict_reset": 354, "costransform": 354, "t_sin": 354, "t_co": 354, "cat_transform": 354, "simple_rollout": 354, "unexplor": 354, "recreat": 354, "init_td": 354, "traj_return": 354, "last_reward": 354, "is_ipython": 354, "inlin": 354, "get_backend": 354, "ion": 354, "gcf": 354, "clear_output": 354, "625": 354, "0748": 354, "519": 354, "26it": 354, "0499": 354, "4472": 354, "073": 354, "0685": 354, "0408": 354, "5154": 354, "9086": 354, "9385": 354, "155": 354, "2568": 354, "4981": 354, "223": 354, "8929": 354, "4491": 354, "581": 354, "3233": 354, "0664": 354, "596": 354, "1021": 354, "5263": 354, "9579": 354, "5807": 354, "8075": 354, "212": 354, "67it": 354, "2009": 354, "5525": 354, "914": 354, "2894": 354, "0115": 354, "0977": 354, "1845": 354, "1830": 354, "4858": 354, "233": 354, "2863": 354, "0297": 354, "464": 354, "4617": 354, "5997": 354, "904": 354, "1647": 354, "0777": 354, "901": 354, "4709": 354, "6813": 354, "8317": 354, "3221": 354, "5554": 354, "276": 354, "3353": 354, "701": 354, "8570": 354, "6656": 354, "7779": 354, "6911": 354, "875": 354, "0796": 354, "7082": 354, "308": 354, "0421": 354, "1496": 354, "5037": 354, "1755": 354, "5029": 354, "9454": 354, "665": 354, "9330": 354, "2118": 354, "444": 354, "0995": 354, "6294": 354, "3146": 354, "2909": 354, "9720": 354, "1298": 354, "9923": 354, "0345": 354, "3438": 354, "3688": 354, "424": 354, "6953": 354, "5233": 354, "411": 354, "70it": 354, "8011": 354, "5329": 354, "2677": 354, "6969": 354, "7010": 354, "376": 354, "9352": 354, "7707": 354, "6178": 354, "5646": 354, "348": 354, "7304": 354, "9407": 354, "942": 354, "3882": 354, "7604": 354, "3507": 354, "8928": 354, "258": 354, "6978": 354, "4641": 354, "549": 354, "6047": 354, "5005": 354, "4136": 354, "2993": 354, "3222": 354, "4046": 354, "7314": 354, "275": 354, "6331": 354, "9318": 354, "961": 354, "8331": 354, "1604": 354, "4099": 354, "4761": 354, "125": 354, "4262": 354, "6363": 354, "382": 354, "3593": 354, "7377": 354, "2847": 354, "3443": 354, "867": 354, "3592": 354, "4760": 354, "441": 354, "9950": 354, "8021": 354, "3528": 354, "1214": 354, "708": 354, "4023": 354, "3583": 354, "041": 354, "3801": 354, "0310": 354, "120": 354, "4244": 354, "2039": 354, "4850": 354, "8748": 354, "706": 354, "4897": 354, "9210": 354, "8964": 354, "0832": 354, "3934": 354, "8971": 354, "2933": 354, "3377": 354, "6996": 354, "2274": 354, "8916": 354, "098": 354, "2660": 354, "9110": 354, "4503": 354, "6956": 354, "9172": 354, "4026": 354, "946": 354, "9229": 354, "5205": 354, "294": 354, "8872": 354, "6637": 354, "019": 354, "9281": 354, "2082": 354, "724": 354, "8561": 354, "6574": 354, "357": 354, "4138": 354, "5230": 354, "385": 354, "4065": 354, "5642": 354, "921": 354, "9786": 354, "4129": 354, "5831": 354, "266": 354, "7723": 354, "4152": 354, "0898": 354, "389": 354, "5155": 354, "5376": 354, "5616": 354, "4094": 354, "283": 354, "5333": 354, "4803": 354, "895": 354, "6566": 354, "2588": 354, "662": 354, "4732": 354, "7503": 354, "068": 354, "0714": 354, "3370": 354, "059": 354, "8612": 354, "1915": 354, "3855": 354, "0349": 354, "9644": 354, "4538": 354, "445": 354, "0392": 354, "4080": 354, "1648": 354, "9599": 354, "143": 354, "4284": 354, "5946": 354, "2590": 354, "9181": 354, "4621": 354, "9075": 354, "674": 354, "1772": 354, "9444": 354, "351": 354, "9391": 354, "5595": 354, "8673": 354, "6240": 354, "5919": 354, "1071": 354, "9127": 354, "251": 354, "9799": 354, "3131": 354, "9612": 354, "9705": 354, "8741": 354, "2230": 354, "0972": 354, "0337": 354, "0350": 354, "0654": 354, "102": 354, "2441": 354, "4596": 354, "362": 354, "103": 354, "4362": 354, "171": 354, "104": 354, "4041": 354, "6907": 354, "105": [354, 356], "4664": 354, "2760": 354, "0299": 354, "9712": 354, "349": 354, "107": 354, "3332": 354, "4479": 354, "772": 354, "108": 354, "4357": 354, "9591": 354, "543": 354, "109": 354, "6216": 354, "1353": 354, "692": 354, "110": 354, "6261": 354, "7086": 354, "496": 354, "111": 354, "7758": 354, "9818": 354, "112": 354, "7772": 354, "5055": 354, "113": 354, "5840": 354, "3180": 354, "2083": 354, "115": 354, "5275": 354, "6873": 354, "116": 354, "4107": 354, "1624": 354, "117": 354, "6372": 354, "2571": 354, "118": 354, "4039": 354, "4428": 354, "119": 354, "4728": 354, "5628": 354, "6767": 354, "2466": 354, "522": 354, "121": [354, 359], "5873": 354, "5072": 354, "6548": 354, "3766": 354, "5134": 354, "1955": 354, "124": [354, 356], "2481": 354, "0591": 354, "4500": 354, "3368": 354, "9708": 354, "7059": 354, "127": 354, "3031": 354, "2534": [354, 359], "843": 354, "3327": 354, "6193": 354, "129": 354, "4831": 354, "1172": 354, "2593": 354, "4219": 354, "962": 354, "8380": 354, "899": 354, "132": 354, "2721": 354, "9048": 354, "166": 354, "133": 354, "2419": 354, "5248": 354, "2139": 354, "4278": 354, "135": 354, "0690": 354, "5140": 354, "136": 354, "1140": 354, "7402": 354, "137": 354, "5356": 354, "1636": 354, "138": 354, "0671": 354, "8798": 354, "139": 354, "8918": 354, "3298": 354, "307": 354, "140": 354, "1779": 354, "141": 354, "1771": 354, "3624": 354, "936": 354, "142": 354, "1683": 354, "4810": 354, "9373": 354, "4435": 354, "144": [354, 356], "4396": 354, "8092": 354, "2572": 354, "146": 354, "4212": 354, "0260": 354, "147": 354, "0939": 354, "6478": 354, "605": 354, "148": 354, "6606": 354, "7289": 354, "149": 354, "9300": 354, "7193": 354, "563": 354, "1166": 354, "8514": 354, "151": 354, "9108": 354, "0672": 354, "292": 354, "152": 354, "3768": 354, "153": 354, "9976": 354, "154": 354, "0576": 354, "0067": 354, "935": 354, "4199": 354, "1722": 354, "156": 354, "8310": 354, "3466": 354, "8631": 354, "2492": 354, "158": 354, "8763": 354, "1277": 354, "159": 354, "5562": 354, "7446": 354, "1082": 354, "9830": 354, "161": 354, "0946": 354, "5229": 354, "162": 354, "4574": 354, "6900": 354, "163": [354, 355], "2229": 354, "0318": 354, "482": 354, "164": 354, "0543": 354, "0817": 354, "761": 354, "165": 354, "2809": 354, "5118": 354, "366": 354, "1142": 354, "5635": 354, "167": 354, "1949": 354, "2327": 354, "982": 354, "168": 354, "0967": 354, "0387": 354, "169": 354, "0782": 354, "2150": 354, "170": 354, "5222": 354, "3725": 354, "9288": 354, "9837": 354, "1416": 354, "1099": 354, "173": 354, "8620": 354, "8475": 354, "174": 354, "1807": 354, "4375": 354, "175": 354, "1148": 354, "0645": 354, "2751": 354, "8313": 354, "177": 354, "9286": 354, "9770": 354, "178": 354, "5735": 354, "2837": 354, "179": 354, "2926": 354, "9489": 354, "180": 354, "1507": 354, "181": 354, "8724": 354, "3567": 354, "182": [354, 356], "3574": 354, "6140": 354, "183": 354, "7895": 354, "2518": 354, "184": 354, "6146": 354, "185": [354, 356], "8776": 354, "7358": 354, "186": 354, "3722": 354, "8428": 354, "187": 354, "7955": 354, "188": 354, "0092": 354, "7106": 354, "829": 354, "189": 354, "2264": 354, "6919": 354, "190": 354, "1438": 354, "1362": 354, "191": 354, "0618": 354, "8217": 354, "9420": 354, "6765": 354, "193": 354, "7745": 354, "0709": 354, "194": 354, "9478": 354, "6867": 354, "195": 354, "6507": 354, "6225": 354, "196": 354, "2244": 354, "2195": 354, "197": 354, "5385": 354, "9263": 354, "198": 354, "1878": 354, "2374": 354, "8054": 354, "3504": 354, "557": 354, "0766": 354, "201": 354, "2011": 354, "8393": 354, "202": 354, "0803": 354, "7815": 354, "203": 354, "8363": 354, "2460": 354, "204": 354, "8643": 354, "2191": 354, "593": 354, "205": [354, 359], "0773": 354, "1343": 354, "206": 354, "8657": 354, "207": 354, "9304": 354, "7584": 354, "208": 354, "8752": 354, "2307": 354, "209": 354, "5250": 354, "4869": 354, "7837": 354, "5762": 354, "211": 354, "6661": 354, "8600": 354, "2502": 354, "1752": 354, "3075": 354, "8871": 354, "214": 354, "9406": 354, "8090": 354, "215": 354, "6291": 354, "8923": 354, "876": 354, "216": 354, "52it": 354, "9504": 354, "21e": 354, "217": 354, "7431": 354, "7880": 354, "218": 354, "06it": 354, "4463": 354, "5432": 354, "219": 354, "3793": 354, "3313": 354, "220": 354, "8843": 354, "0369": 354, "065": 354, "221": 354, "4828": 354, "8391": 354, "222": 354, "6265": 354, "2913": 354, "947": 354, "5541": 354, "1252": 354, "7342": 354, "2396": 354, "225": 354, "5936": 354, "1924": 354, "226": [354, 356], "9975": 354, "2045": 354, "227": 354, "8367": 354, "9540": 354, "228": 354, "7259": 354, "6743": 354, "229": 354, "4827": 354, "7528": 354, "230": 354, "7361": 354, "8756": 354, "231": 354, "7646": 354, "1116": 354, "232": 354, "5426": 354, "8385": 354, "5662": 354, "8585": 354, "234": 354, "8234": 354, "7930": 354, "235": 354, "2648": 354, "9309": 354, "236": 354, "6817": 354, "237": 354, "0943": 354, "1533": 354, "238": 354, "3045": 354, "0483": 354, "239": 354, "6415": 354, "0201": 354, "241": 354, "4437": 354, "4365": 354, "242": 354, "0358": 354, "4943": 354, "243": 354, "1272": 354, "5003": 354, "1180": 354, "2637": 354, "245": 354, "7197": 354, "0873": 354, "246": 354, "2917": 354, "247": 354, "0160": 354, "0738": 354, "248": 354, "3689": 354, "0120": 354, "249": 354, "5570": 354, "0475": 354, "250": 354, "4423": 354, "2220": 354, "6803": 354, "252": 354, "1465": 354, "7214": 354, "253": 354, "8801": 354, "7034": 354, "254": 354, "9136": 354, "4076": 354, "7589": 354, "5013": 354, "8150": 354, "2241": 354, "257": 354, "0753": 354, "8081": 354, "1951": 354, "8314": 354, "259": 354, "0038": 354, "260": 354, "0889": 354, "4616": 354, "261": [354, 359], "0655": 354, "262": 354, "8333": 354, "9476": 354, "263": 354, "7554": 354, "3798": 354, "264": 354, "3717": 354, "3947": 354, "529": 354, "265": 354, "3060": 354, "6495": 354, "7467": 354, "8889": 354, "267": 354, "8457": 354, "591": 354, "7137": 354, "0536": 354, "771": 354, "269": 354, "1651": 354, "388": 354, "270": 354, "8246": 354, "5709": 354, "281": 354, "271": 354, "7502": 354, "0521": 354, "032": 354, "272": 354, "5475": 354, "7253": 354, "273": 354, "2856": 354, "7130": 354, "274": 354, "2778": 354, "4122": 354, "8368": 354, "1841": 354, "9622": 354, "1603": 354, "003e": 354, "277": 354, "0247": 354, "346": 354, "278": 354, "2238": 354, "6418": 354, "279": 354, "0626": 354, "2538": 354, "280": 354, "0149": 354, "7380": 354, "2167": 354, "8911": 354, "282": 354, "8725": 354, "1983": 354, "8142": 354, "3709": 354, "284": 354, "4989": 354, "285": 354, "6464": 354, "6210": 354, "286": 354, "9726": 354, "0820": 354, "287": 354, "6975": 354, "9091": 354, "4926": 354, "4791": 354, "289": [354, 359], "0905": 354, "3500": 354, "290": 354, "2287": 354, "291": 354, "9918": 354, "5543": 354, "9245": 354, "6444": 354, "631": 354, "293": 354, "0448": 354, "4769": 354, "8566": 354, "7208": 354, "295": 354, "0966": 354, "296": 354, "5303": 354, "1537": 354, "023": 354, "297": 354, "2682": 354, "564": 354, "298": 354, "4318": 354, "5063": 354, "299": 354, "7475": 354, "4190": 354, "8186": 354, "5077": 354, "301": 354, "1883": 354, "5291": 354, "472": 354, "302": 354, "3998": 354, "303": 354, "3622": 354, "0930": 354, "626": 354, "304": 354, "9500": 354, "5664": 354, "305": 354, "5697": 354, "3024": 354, "306": 354, "3117": 354, "0052": 354, "006": 354, "0981": 354, "9312": 354, "3873": 354, "309": 354, "0411": 354, "2650": 354, "1656": 354, "0228": 354, "004": 354, "311": 354, "1196": 354, "2478": 354, "312": 354, "7353": 354, "0812": 354, "313": 354, "3022": 354, "758": 354, "314": 354, "1406": 354, "4626": 354, "315": 354, "2156": 354, "851": 354, "316": 354, "1953": 354, "3774": 354, "317": 354, "6385": 354, "9917": 354, "318": 354, "2764": 354, "905": 354, "319": 354, "6391": 354, "9317": 354, "9748": 354, "2679": 354, "321": 354, "8495": 354, "5125": 354, "8177": 354, "6602": 354, "323": 354, "0704": 354, "5776": 354, "324": 354, "9833": [354, 358], "1339": 354, "402": 354, "325": 354, "1238": 354, "326": 354, "9299": 354, "0227": 354, "327": 354, "7727": 354, "1607": 354, "336": 354, "328": 354, "3958": 354, "3223": 354, "763": 354, "329": 354, "4742": 354, "1797": 354, "0144": 354, "0085": 354, "791": 354, "331": 354, "8284": 354, "0428": 354, "332": 354, "7365": 354, "333": 354, "4566": 354, "0781": 354, "086": 354, "334": 354, "3355": 354, "0230": 354, "335": 354, "9346": 354, "0423": 354, "076": 354, "3711": 354, "1335": 354, "6855": 354, "337": 354, "0304": 354, "0023": 354, "8459": 354, "338": 354, "9998": 354, "4399": 354, "339": 354, "2303": 354, "1346": 354, "340": 354, "2915": 354, "7116": 354, "341": 354, "5560": 354, "0487": 354, "5119": 354, "061": 354, "343": 354, "3305": 354, "3705": 354, "957": 354, "344": 354, "6068": 354, "345": 354, "5731": 354, "3897": 354, "0376": 354, "347": 354, "0434": 354, "012": 354, "1300": 354, "1215": 354, "0968": 354, "0885": 354, "350": 354, "1348": 354, "0073": 354, "5052": 354, "4184": 354, "2817": 354, "8887": 354, "353": 354, "4779": 354, "1009": 354, "354": 354, "0604": 354, "599": 354, "355": 354, "4486": 354, "1176": 354, "656": 354, "356": 354, "2436": 354, "0668": 354, "8849": 354, "0012": 354, "358": 354, "7511": 354, "8804": 354, "359": 354, "8870": 354, "6728": 354, "360": 354, "8841": 354, "5508": 354, "361": 354, "5242": 354, "0013": 354, "6185": 354, "363": 354, "1378": 354, "0204": 354, "0355": 354, "685": 354, "365": 354, "35it": 354, "4884": 354, "0231": 354, "0014": 354, "6793": 354, "367": 354, "50it": 354, "9834": 354, "863": 354, "368": 354, "6709": 354, "369": 354, "5199": 354, "9790": 354, "370": 354, "9401": 354, "7802": 354, "371": 354, "6723": 354, "372": 354, "2678": 354, "6201": 354, "373": 354, "2184": 354, "7385": 354, "374": 354, "6344": 354, "617": 354, "375": 354, "9945": 354, "0772": 354, "567": 354, "7576": 354, "0398": 354, "377": 354, "3396": 354, "0022": 354, "094": 354, "378": 354, "3073": 354, "4018": 354, "379": 354, "1869": 354, "380": 354, "0481": 354, "1117": 354, "381": 354, "6823": 354, "981": 354, "8305": 354, "0210": 354, "383": 354, "4908": 354, "0272": 354, "538": 354, "3267": 354, "0111": 354, "7965": 354, "1796": 354, "0039": 354, "5396": 354, "386": 354, "3757": 354, "0490": 354, "387": 354, "1394": 354, "4187": 354, "2986": 354, "7954": 354, "1274": 354, "0063": 354, "813": 354, "390": 354, "8706": 354, "0114": 354, "391": 354, "6922": 354, "2423": 354, "392": 354, "9115": 354, "2602": 354, "393": 354, "2449": 354, "0783": 354, "394": 354, "0631": 354, "0057": 354, "7444": 354, "395": 354, "3339": 354, "0167": 354, "396": 354, "4806": 354, "397": 354, "4171": 354, "067": 354, "398": 354, "2618": 354, "5809": 354, "399": 354, "0054": 354, "3364": 354, "8733": 354, "0184": 354, "401": 354, "9137": 354, "0113": 354, "025": 354, "0386": 354, "0625": 354, "403": 354, "1332": 354, "0582": 354, "7816": 354, "404": 354, "8341": 354, "0941": 354, "854": 354, "405": 354, "8615": 354, "588": 354, "406": 354, "3849": 354, "008": 354, "9395": 354, "0765": 354, "055": 354, "408": 354, "2685": 354, "2235": 354, "688": 354, "409": 354, "3052": 354, "4249": 354, "410": 354, "6806": 354, "6383": 354, "3721": 354, "9981": 354, "412": 354, "1862": 354, "822": 354, "413": 354, "9811": 354, "0171": 354, "013": 354, "414": 354, "0252": 354, "0049": 354, "6205": 354, "415": 354, "1108": 354, "4921": 354, "9142": 354, "8130": 354, "417": 354, "1725": 354, "0036": 354, "3196": 354, "418": 354, "7795": 354, "0242": 354, "799": 354, "419": 354, "7737": 354, "0138": 354, "420": 354, "1462": 354, "0053": 354, "421": 354, "9226": 354, "6139": 354, "422": 354, "9889": 354, "0403": 354, "423": 354, "6194": 354, "0032": 354, "3989": 354, "0104": 354, "425": 354, "9960": 354, "6009": 354, "426": 354, "2697": 354, "0914": 354, "427": 354, "1114": 354, "428": 354, "9862": 354, "1932": 354, "429": 354, "0637": 354, "0623": 354, "082": 354, "9906": 354, "2031": 354, "431": 354, "9948": 354, "0895": 354, "432": 354, "1970": 354, "0256": 354, "4231": 354, "0449": 354, "644": 354, "434": 354, "1039": 354, "1973": 354, "435": 354, "4561": 354, "1225": 354, "436": 354, "0211": 354, "2125": 354, "437": 354, "3866": 354, "0050": 354, "7202": 354, "438": 354, "6388": 354, "0072": 354, "439": 354, "1187": 354, "0015": 354, "5116": 354, "440": 354, "0432": 354, "0025": 354, "7809": 354, "1925": 354, "0103": 354, "442": 354, "9570": 354, "443": 354, "0871": 354, "5601": 354, "0165": 354, "0047": 354, "6061": 354, "2746": 354, "0027": 354, "7887": 354, "446": 354, "1835": 354, "0035": 354, "855": 354, "447": 354, "8420": 354, "548": 354, "2653": 354, "0126": 354, "9736": 354, "449": 354, "0594": 354, "0119": 354, "6196": 354, "450": 354, "4509": 354, "0373": 354, "451": 354, "0620": 354, "452": 354, "6898": 354, "3235": 354, "687": 354, "453": 354, "5879": 354, "8406": 354, "0694": 354, "455": 354, "8259": 354, "0235": 354, "8500": 354, "0024": 354, "4054": 354, "458": 354, "2027": 354, "0894": 354, "459": 354, "5966": 354, "460": 354, "6942": 354, "0016": 354, "4254": 354, "6703": 354, "0145": 354, "8124": 354, "0218": 354, "9196": 354, "0188": 354, "8986": 354, "0884": 354, "0084": 354, "5624": 354, "8862": 354, "0006": 354, "5384": 354, "5837": 354, "8954": 354, "0101": 354, "6751": 354, "8063": 354, "0122": 354, "9635": 354, "469": 354, "0692": 354, "4216": 354, "470": 354, "1227": 354, "0586": 354, "162e": 354, "471": 354, "9690": 354, "4166": 354, "6324": 354, "473": 354, "0778": 354, "474": 354, "8548": 354, "0017": 354, "4408": 354, "475": 354, "8125": 354, "1515": 354, "476": 354, "2733": 354, "0044": 354, "2836": 354, "477": 354, "7497": 354, "7681": 354, "478": 354, "8547": 354, "0105": 354, "7212": 354, "479": 354, "9848": 354, "0019": 354, "6498": 354, "1987": 354, "0011": 354, "5473": 354, "481": 354, "8991": 354, "6091": 354, "9189": 354, "5771": 354, "483": 354, "6781": 354, "7542": 354, "484": 354, "5959": 354, "0064": 354, "4295": 354, "485": 354, "2547": 354, "486": 354, "0636": 354, "547": 354, "487": 354, "0065": 354, "488": 354, "1694": 354, "0083": 354, "5759": 354, "489": 354, "0493": 354, "0021": 354, "7805": 354, "490": 354, "0950": 354, "497": 354, "491": 354, "9717": 354, "3672": 354, "492": 354, "0207": 354, "493": 354, "8266": 354, "5365": 354, "494": 354, "2623": 354, "5078": 354, "495": 354, "4545": 354, "09636": 354, "8754": 354, "0010": 354, "498": 354, "0031": 354, "8269": 354, "499": 354, "4082": 354, "6642": 354, "2284": 354, "501": 354, "9130": 354, "502": 354, "503": 354, "7624": 354, "0056": 354, "3858": 354, "504": 354, "0890": 354, "0042": 354, "505": 354, "7505": 354, "2157": 354, "506": 354, "8394": 354, "3413": 354, "507": 354, "9609": 354, "0041": 354, "6905": 354, "508": 354, "8467": 354, "4409": 354, "509": 354, "510": 354, "8128": 354, "3559": 354, "1479": 354, "0264": 354, "1589": 354, "566": 354, "513": 354, "2756": 354, "0046": 354, "5266": 354, "514": 354, "9873": 354, "0112": 354, "9314": 354, "515": 354, "3791": 354, "0721": 354, "516": 354, "4580": 354, "0758": 354, "6114": 354, "517": 354, "2431": 354, "518": 354, "1958": 354, "5553": 354, "8924": 354, "0097": 354, "520": 354, "3737": 354, "0234": 354, "521": 354, "9125": 354, "4623": 354, "3230": 354, "0589": 354, "3784": 354, "523": 354, "9482": 354, "0051": 354, "524": 354, "1979": 354, "0045": 354, "6401": 354, "525": 354, "1588": 354, "0048": 354, "6255": 354, "526": 354, "6084": 354, "3477": 354, "1475": 354, "0209": 354, "528": 354, "7611": 354, "1040": 354, "0099": 354, "0173": 354, "8189": 354, "4358": 354, "531": 354, "9897": 354, "532": 354, "1548": 354, "9751": 354, "533": 354, "6362": 354, "7495": 354, "534": 354, "1749": 354, "9513": 354, "535": 354, "7708": 354, "0371": 354, "536": 354, "2649": 354, "0437": 354, "537": 354, "5491": 354, "0276": 354, "6426": 354, "7294": 354, "078e": 354, "539": 354, "9928": 354, "540": 354, "7937": 354, "0124": 354, "9664": 354, "541": 354, "3342": 354, "542": 354, "2046": 354, "5496": 354, "0956": 354, "0059": 354, "545": 354, "9028": 354, "5843": 354, "546": 354, "0674": 354, "0178": 354, "2815": 354, "0599": 354, "1587": 354, "9276": 354, "8228": 354, "6164": 354, "551": 354, "6850": 354, "9167": 354, "3092": 354, "0670": 354, "9177": 354, "553": 354, "1599": 354, "0043": 354, "554": 354, "6367": 354, "555": 354, "3657": 354, "556": 354, "6694": 354, "2622": 354, "0372": 354, "4841": 354, "558": 354, "2707": 354, "757": 354, "559": 354, "2267": 354, "5415": 354, "560": 354, "4556": 354, "0163": 354, "561": 354, "1839": 354, "0809": 354, "6262": 354, "562": 354, "0278": 354, "1112": 354, "6155": 354, "565": 354, "1427": 354, "3582": 354, "624": 354, "7870": 354, "9490": 354, "0439": 354, "8796": 354, "568": 354, "8026": 354, "612": 354, "569": 354, "3147": 354, "8486": 354, "570": 354, "7917": 354, "0129": 354, "571": 354, "9553": 354, "0020": 354, "6871": 354, "572": 354, "3132": 354, "0159": 354, "8646": 354, "573": 354, "5320": 354, "0269": 354, "574": 354, "2955": 354, "0245": 354, "575": 354, "3347": 354, "0179": 354, "9718": 354, "1629": 354, "804": 354, "577": 354, "4164": 354, "0070": 354, "4335": 354, "578": 354, "579": 354, "3049": 354, "9063": 354, "580": 354, "8785": 354, "3295": 354, "5184": 354, "0546": 354, "582": 354, "4589": 354, "583": 354, "4697": 354, "2476": 354, "584": 354, "2397": 354, "585": [354, 356], "4953": 354, "1775": 354, "586": 354, "2258": 354, "0110": 354, "7671": 354, "3981": 354, "8590": 354, "589": 354, "9820": 354, "4221": 354, "590": 354, "1293": 354, "0116": 354, "868": 354, "1675": 354, "5931": 354, "592": 354, "2910": 354, "5219": 354, "2124": 354, "1730": 354, "737": 354, "594": 354, "2914": 354, "0206": 354, "595": 354, "0172": 354, "3982": 354, "0945": 354, "0121": 354, "4789": 354, "3805": 354, "598": 354, "3310": 354, "5065": 354, "6028": 354, "6316": 354, "6724": 354, "6523": 354, "601": 354, "0136": 354, "4298": 354, "602": 354, "3524": 354, "2629": 354, "603": 354, "2635": 354, "7839": 354, "604": 354, "6041": 354, "8027": 354, "4170": 354, "4675": 354, "606": 354, "3153": 354, "9316": 354, "607": 354, "0649": 354, "9722": 354, "7989": 354, "0329": 354, "609": 354, "1976": 354, "6852": 354, "610": 354, "4793": 354, "1255": 354, "611": 354, "4581": 354, "0394": 354, "2047": 354, "0326": 354, "613": 354, "8967": 354, "8619": 354, "614": 354, "5906": 354, "6491": 354, "615": 354, "6634": 354, "4394": 354, "616": 354, "0624": 354, "0061": 354, "5676": 354, "3259": 354, "0131": 354, "7733": 354, "618": 354, "7515": 354, "0189": 354, "5575": 354, "619": 354, "9313": 354, "6286": 354, "620": 354, "4325": 354, "7832": 354, "621": 354, "1134": 354, "622": 354, "4572": 354, "0500": 354, "5838": 354, "623": 354, "3818": 354, "8623": 354, "1253": 354, "6622": 354, "subject": 354, "explain": 355, "semat": 355, "r3mtransform": 355, "env_transform": [355, 359], "s3": 355, "amazonaw": 355, "r3m_50": 355, "374m": 355, "9m": 355, "145mb": 355, "116mb": 355, "2m": 355, "4mb": 355, "2mb": 355, "5m": 355, "6mb": 355, "5mb": 355, "4m": 355, "8mb": 355, "0m": 355, "104m": 355, "3mb": 355, "115m": 355, "130m": 355, "139m": 355, "148m": 355, "9mb": 355, "164m": 355, "178m": 355, "188m": 355, "0mb": 355, "197m": 355, "212m": 355, "221m": 355, "1mb": 355, "230m": 355, "244m": 355, "7mb": 355, "253m": 355, "262m": 355, "277m": 355, "284m": 355, "295m": 355, "311m": 355, "328m": 355, "338m": 355, "346m": 355, "359m": 355, "366m": 355, "373m": 355, "wiser": 355, "_storag": [355, 356], "pull": 356, "batteri": 356, "filesystem": 356, "buffer_list": 356, "lowest": 356, "medium": 356, "buffer_lazytensor": 356, "buffer_lazymemmap": 356, "tempdir": 356, "tmp0g19b5ln": 356, "fullest": 356, "mydata": 356, "background": 356, "question": [356, 358], "_i": 356, "artifici": 356, "0893e": 356, "hamper": 356, "she": 356, "pars": 356, "proport": 356, "hist": 356, "barcontain": 356, "artist": 356, "reappear": 356, "unfold": 356, "problemat": 356, "window": 356, "4th": 356, "794": 356, "1061": 356, "ret": 356, "_sampl": 356, "decorated_fun": 356, "_transform": 356, "976": 356, "2888": 356, "3013": 356, "rep": 356, "tensorlist": 356, "prioritizedslicesampl": 356, "tensordictmaxvaluewrit": 356, "demo": 358, "icml": 358, "vmoen": 358, "fb": 358, "invest": 358, "platform": 358, "media": 358, "predominantli": 358, "tensordict1": 358, "tensordict2": 358, "tensordict_sampl": 358, "_sampler": 358, "_sum_tre": 358, "modulenotfounderror": 358, "28791671991348267": 358, "noopresetenv": [358, 359], "6400": 358, "backbone_modul": 358, "params_expand": 358, "exec_sequ": 358, "tensordict_exp": 358, "base_modul": 358, "0137": 358, "1524": 358, "0641": 358, "viewbackward0": 358, "asstridedbackward0": 358, "8728": 358, "1334": 358, "3494": 358, "6887": 358, "6402": 358, "_safetanhbackward": 358, "1132": 358, "1762": 358, "3430": 358, "2668": 358, "2918": 358, "6239": 358, "roughli": 358, "tensordicts_prealloc": 358, "tensordicts_stack": 358, "tensordict_rollout": [358, 359], "disclaim": 358, "concatmodul": 358, "loss_td": 358, "year": 358, "roadmap": 358, "compris": 358, "contributor": 358, "curiou": 358, "nascent": 358, "unsupervis": 359, "unifi": 359, "_build_env": 359, "amidar": 359, "assault": 359, "1945": 359, "deserv": 359, "__episode__": 359, "__trajectory__": 359, "void": 359, "reproduct": 359, "tensordict_tprim": 359, "2503": 359, "_rollout_stop_earli": 359, "1224": 359, "err": 359, "1198": 359, "_call_modul": 359, "1141": 359, "1301": 359, "imshow": 359, "wrapper1": 359, "wrapper2": 359, "obviou": 359, "truth": 359, "env0": 359, "env_transformed_bi": 359, "stanc": 359, "transformeddistribut": 359, "base_dist": 359, "concat": 359, "mofidi": 359, "transformedenviron": 359, "moderet": 359, "computation": 359, "legitim": 359, "incom": 359, "amongst": 359, "has_cuda": 359, "wor": 359, "convention": 359, "markovian": 359, "constain": 359, "bar_": 359, "get_someth": 359, "aargh": 359, "foo_list": 359, "parallen": 359, "particularili": 359, "evolv": 359, "steadi": 359, "approx": 359, "_extra_st": 359, "observation_ssq": 359, "observation_sum": 359, "dispach": 359, "absor": 359, "2516": 359}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "OneHotDiscreteTensorSpec"], [33, 0, 1, "", "PairwiseDataset"], [34, 0, 1, "", "PrioritizedReplayBuffer"], [35, 0, 1, "", "PromptData"], [36, 0, 1, "", "PromptTensorDictTokenizer"], [37, 0, 1, "", "ReplayBuffer"], [38, 0, 1, "", "RewardData"], [39, 0, 1, "", "RolloutFromModel"], [40, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [41, 0, 1, "", "TensorDictReplayBuffer"], [42, 0, 1, "", "TensorDictTokenizer"], [43, 0, 1, "", "TensorSpec"], [44, 0, 1, "", "TokenizedDatasetLoader"], [45, 0, 1, "", "UnboundedContinuousTensorSpec"], [46, 0, 1, "", "UnboundedDiscreteTensorSpec"], [47, 0, 1, "", "check_no_exclusive_keys"], [48, 0, 1, "", "consolidate_spec"], [49, 0, 1, "", "contains_lazy_spec"], [50, 0, 1, "", "create_infinite_iterator"], [59, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[33, 3, 1, "", "batch_size"], [33, 3, 1, "", "device"], [33, 1, 1, "", "from_dataset"], [33, 1, 1, "", "from_dict"], [33, 1, 1, "", "from_tensordict"], [33, 1, 1, "", "get"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "memmap"], [33, 1, 1, "", "memmap_"], [33, 1, 1, "", "memmap_like"], [33, 3, 1, "", "names"], [33, 1, 1, "", "set"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to_tensordict"], [33, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "dumps"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "loads"], [34, 1, 1, "", "sample"], [34, 1, 1, "", "set_sampler"], [34, 1, 1, "", "set_storage"], [34, 1, 1, "", "set_writer"]], "torchrl.data.PromptData": [[35, 3, 1, "", "batch_size"], [35, 3, 1, "", "device"], [35, 1, 1, "", "from_dataset"], [35, 1, 1, "", "from_dict"], [35, 1, 1, "", "from_tensordict"], [35, 1, 1, "", "get"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "memmap"], [35, 1, 1, "", "memmap_"], [35, 1, 1, "", "memmap_like"], [35, 3, 1, "", "names"], [35, 1, 1, "", "set"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to_tensordict"], [35, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"]], "torchrl.data.RewardData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_dict"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[39, 1, 1, "", "create_rollout_td"], [39, 1, 1, "", "generate"], [39, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"]], "torchrl.data.TensorDictReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"]], "torchrl.data.TensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[44, 1, 1, "", "dataset_to_tensordict"], [44, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "AtariDQNExperienceReplay"], [52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "GenDGRLExperienceReplay"], [54, 0, 1, "", "MinariExperienceReplay"], [55, 0, 1, "", "OpenMLExperienceReplay"], [56, 0, 1, "", "OpenXExperienceReplay"], [57, 0, 1, "", "RobosetExperienceReplay"], [58, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "sample"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "sample"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "sample"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "sample"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"]], "torchrl.data.replay_buffers": [[60, 0, 1, "", "ImmutableDatasetWriter"], [61, 0, 1, "", "LazyMemmapStorage"], [62, 0, 1, "", "LazyTensorStorage"], [63, 0, 1, "", "ListStorage"], [64, 0, 1, "", "PrioritizedSampler"], [65, 0, 1, "", "PrioritizedSliceSampler"], [66, 0, 1, "", "RandomSampler"], [67, 0, 1, "", "ReplayBufferEnsemble"], [68, 0, 1, "", "RoundRobinWriter"], [69, 0, 1, "", "Sampler"], [70, 0, 1, "", "SamplerEnsemble"], [71, 0, 1, "", "SamplerWithoutReplacement"], [72, 0, 1, "", "SliceSampler"], [73, 0, 1, "", "SliceSamplerWithoutReplacement"], [74, 0, 1, "", "Storage"], [75, 0, 1, "", "StorageEnsemble"], [76, 0, 1, "", "TensorDictMaxValueWriter"], [77, 0, 1, "", "TensorDictRoundRobinWriter"], [78, 0, 1, "", "TensorStorage"], [79, 0, 1, "", "Writer"], [80, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[61, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[64, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[67, 1, 1, "", "add"], [67, 1, 1, "", "append_transform"], [67, 1, 1, "", "dumps"], [67, 1, 1, "", "empty"], [67, 1, 1, "", "extend"], [67, 1, 1, "", "insert_transform"], [67, 1, 1, "", "loads"], [67, 1, 1, "", "sample"], [67, 1, 1, "", "set_sampler"], [67, 1, 1, "", "set_storage"], [67, 1, 1, "", "set_writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[68, 1, 1, "", "add"], [68, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[74, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[76, 1, 1, "", "add"], [76, 1, 1, "", "extend"], [76, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[78, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[79, 1, 1, "", "add"], [79, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.envs": [[81, 2, 1, "", "BraxEnv"], [82, 2, 1, "", "BraxWrapper"], [83, 2, 1, "", "DMControlEnv"], [84, 2, 1, "", "DMControlWrapper"], [85, 0, 1, "", "EnvBase"], [86, 0, 1, "", "EnvCreator"], [87, 0, 1, "", "EnvMetaData"], [88, 2, 1, "", "GymEnv"], [89, 0, 1, "", "GymLikeEnv"], [90, 2, 1, "", "GymWrapper"], [91, 2, 1, "", "HabitatEnv"], [92, 2, 1, "", "IsaacGymEnv"], [93, 2, 1, "", "IsaacGymWrapper"], [94, 2, 1, "", "JumanjiEnv"], [95, 2, 1, "", "JumanjiWrapper"], [96, 2, 1, "", "MOGymEnv"], [97, 2, 1, "", "MOGymWrapper"], [98, 2, 1, "", "MarlGroupMapType"], [99, 2, 1, "", "ModelBasedEnvBase"], [100, 2, 1, "", "MultiThreadedEnv"], [101, 2, 1, "", "MultiThreadedEnvWrapper"], [102, 2, 1, "", "OpenMLEnv"], [103, 0, 1, "", "ParallelEnv"], [104, 2, 1, "", "PettingZooEnv"], [105, 2, 1, "", "PettingZooWrapper"], [106, 2, 1, "", "RoboHiveEnv"], [107, 2, 1, "", "SMACv2Env"], [108, 2, 1, "", "SMACv2Wrapper"], [109, 0, 1, "", "SerialEnv"], [110, 2, 1, "", "VmasEnv"], [111, 2, 1, "", "VmasWrapper"], [112, 2, 1, "", "check_marl_grouping"], [113, 2, 1, "", "gym_backend"], [99, 1, 1, "", "rand_step"], [99, 1, 1, "", "reset"], [99, 1, 1, "", "rollout"], [115, 2, 1, "", "set_gym_backend"], [99, 1, 1, "", "set_seed"], [99, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[85, 3, 1, "", "action_key"], [85, 3, 1, "", "action_keys"], [85, 3, 1, "", "action_spec"], [85, 1, 1, "", "add_module"], [85, 1, 1, "", "apply"], [85, 3, 1, "", "batch_locked"], [85, 3, 1, "", "batch_size"], [85, 1, 1, "", "bfloat16"], [85, 1, 1, "", "buffers"], [85, 1, 1, "", "children"], [85, 1, 1, "", "compile"], [85, 1, 1, "", "cpu"], [85, 1, 1, "", "cuda"], [85, 3, 1, "", "done_key"], [85, 3, 1, "", "done_keys"], [85, 3, 1, "", "done_keys_groups"], [85, 3, 1, "", "done_spec"], [85, 1, 1, "", "double"], [85, 1, 1, "", "empty_cache"], [85, 1, 1, "", "eval"], [85, 1, 1, "", "extra_repr"], [85, 1, 1, "", "fake_tensordict"], [85, 1, 1, "", "float"], [85, 1, 1, "", "forward"], [85, 3, 1, "", "full_action_spec"], [85, 3, 1, "", "full_done_spec"], [85, 3, 1, "", "full_reward_spec"], [85, 3, 1, "", "full_state_spec"], [85, 1, 1, "", "get_buffer"], [85, 1, 1, "", "get_extra_state"], [85, 1, 1, "", "get_parameter"], [85, 1, 1, "", "get_submodule"], [85, 1, 1, "", "half"], [85, 3, 1, "", "input_spec"], [85, 1, 1, "", "ipu"], [85, 1, 1, "", "load_state_dict"], [85, 1, 1, "", "maybe_reset"], [85, 1, 1, "", "modules"], [85, 1, 1, "", "named_buffers"], [85, 1, 1, "", "named_children"], [85, 1, 1, "", "named_modules"], [85, 1, 1, "", "named_parameters"], [85, 3, 1, "", "observation_spec"], [85, 3, 1, "", "output_spec"], [85, 1, 1, "", "parameters"], [85, 1, 1, "", "rand_action"], [85, 1, 1, "id0", "rand_step"], [85, 1, 1, "", "register_backward_hook"], [85, 1, 1, "", "register_buffer"], [85, 1, 1, "", "register_forward_hook"], [85, 1, 1, "", "register_forward_pre_hook"], [85, 1, 1, "", "register_full_backward_hook"], [85, 1, 1, "", "register_full_backward_pre_hook"], [85, 1, 1, "", "register_gym"], [85, 1, 1, "", "register_load_state_dict_post_hook"], [85, 1, 1, "", "register_module"], [85, 1, 1, "", "register_parameter"], [85, 1, 1, "", "register_state_dict_pre_hook"], [85, 1, 1, "", "requires_grad_"], [85, 1, 1, "id1", "reset"], [85, 3, 1, "", "reset_keys"], [85, 3, 1, "", "reward_key"], [85, 3, 1, "", "reward_keys"], [85, 3, 1, "", "reward_spec"], [85, 1, 1, "id2", "rollout"], [85, 1, 1, "", "set_extra_state"], [85, 1, 1, "id3", "set_seed"], [85, 3, 1, "", "shape"], [85, 1, 1, "", "share_memory"], [85, 3, 1, "", "specs"], [85, 1, 1, "", "state_dict"], [85, 3, 1, "", "state_spec"], [85, 1, 1, "id4", "step"], [85, 1, 1, "", "step_and_maybe_reset"], [85, 1, 1, "", "to"], [85, 1, 1, "", "to_empty"], [85, 1, 1, "", "train"], [85, 1, 1, "", "type"], [85, 1, 1, "", "xpu"], [85, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[89, 3, 1, "", "action_key"], [89, 3, 1, "", "action_keys"], [89, 3, 1, "", "action_spec"], [89, 1, 1, "", "add_module"], [89, 1, 1, "", "apply"], [89, 1, 1, "", "auto_register_info_dict"], [89, 3, 1, "", "batch_locked"], [89, 3, 1, "", "batch_size"], [89, 1, 1, "", "bfloat16"], [89, 1, 1, "", "buffers"], [89, 1, 1, "", "children"], [89, 1, 1, "", "close"], [89, 1, 1, "", "compile"], [89, 1, 1, "", "cpu"], [89, 1, 1, "", "cuda"], [89, 3, 1, "", "done_key"], [89, 3, 1, "", "done_keys"], [89, 3, 1, "", "done_keys_groups"], [89, 3, 1, "", "done_spec"], [89, 1, 1, "", "double"], [89, 1, 1, "", "empty_cache"], [89, 1, 1, "", "eval"], [89, 1, 1, "", "extra_repr"], [89, 1, 1, "", "fake_tensordict"], [89, 1, 1, "", "float"], [89, 1, 1, "", "forward"], [89, 3, 1, "", "full_action_spec"], [89, 3, 1, "", "full_done_spec"], [89, 3, 1, "", "full_reward_spec"], [89, 3, 1, "", "full_state_spec"], [89, 1, 1, "", "get_buffer"], [89, 1, 1, "", "get_extra_state"], [89, 1, 1, "", "get_parameter"], [89, 1, 1, "", "get_submodule"], [89, 1, 1, "", "half"], [89, 3, 1, "", "input_spec"], [89, 1, 1, "", "ipu"], [89, 1, 1, "", "load_state_dict"], [89, 1, 1, "", "maybe_reset"], [89, 1, 1, "", "modules"], [89, 1, 1, "", "named_buffers"], [89, 1, 1, "", "named_children"], [89, 1, 1, "", "named_modules"], [89, 1, 1, "", "named_parameters"], [89, 3, 1, "", "observation_spec"], [89, 3, 1, "", "output_spec"], [89, 1, 1, "", "parameters"], [89, 1, 1, "", "rand_action"], [89, 1, 1, "", "rand_step"], [89, 1, 1, "", "read_action"], [89, 1, 1, "", "read_done"], [89, 1, 1, "", "read_obs"], [89, 1, 1, "", "read_reward"], [89, 1, 1, "", "register_backward_hook"], [89, 1, 1, "", "register_buffer"], [89, 1, 1, "", "register_forward_hook"], [89, 1, 1, "", "register_forward_pre_hook"], [89, 1, 1, "", "register_full_backward_hook"], [89, 1, 1, "", "register_full_backward_pre_hook"], [89, 1, 1, "", "register_gym"], [89, 1, 1, "", "register_load_state_dict_post_hook"], [89, 1, 1, "", "register_module"], [89, 1, 1, "", "register_parameter"], [89, 1, 1, "", "register_state_dict_pre_hook"], [89, 1, 1, "", "requires_grad_"], [89, 1, 1, "", "reset"], [89, 3, 1, "", "reset_keys"], [89, 3, 1, "", "reward_key"], [89, 3, 1, "", "reward_keys"], [89, 3, 1, "", "reward_spec"], [89, 1, 1, "", "rollout"], [89, 1, 1, "", "set_extra_state"], [89, 1, 1, "", "set_info_dict_reader"], [89, 1, 1, "", "set_seed"], [89, 3, 1, "", "shape"], [89, 1, 1, "", "share_memory"], [89, 3, 1, "", "specs"], [89, 1, 1, "", "state_dict"], [89, 3, 1, "", "state_spec"], [89, 1, 1, "", "step"], [89, 1, 1, "", "step_and_maybe_reset"], [89, 1, 1, "", "to"], [89, 1, 1, "", "to_empty"], [89, 1, 1, "", "train"], [89, 1, 1, "", "type"], [89, 1, 1, "", "xpu"], [89, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 3, 1, "", "batch_size"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "maybe_reset"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_gym"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "", "set_seed"], [103, 3, 1, "", "shape"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "update_kwargs"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[109, 3, 1, "", "action_key"], [109, 3, 1, "", "action_keys"], [109, 3, 1, "", "action_spec"], [109, 1, 1, "", "add_module"], [109, 1, 1, "", "apply"], [109, 3, 1, "", "batch_locked"], [109, 3, 1, "", "batch_size"], [109, 1, 1, "", "bfloat16"], [109, 1, 1, "", "buffers"], [109, 1, 1, "", "children"], [109, 1, 1, "", "compile"], [109, 1, 1, "", "cpu"], [109, 1, 1, "", "cuda"], [109, 3, 1, "", "done_key"], [109, 3, 1, "", "done_keys"], [109, 3, 1, "", "done_keys_groups"], [109, 3, 1, "", "done_spec"], [109, 1, 1, "", "double"], [109, 1, 1, "", "empty_cache"], [109, 1, 1, "", "eval"], [109, 1, 1, "", "extra_repr"], [109, 1, 1, "", "fake_tensordict"], [109, 1, 1, "", "float"], [109, 1, 1, "", "forward"], [109, 3, 1, "", "full_action_spec"], [109, 3, 1, "", "full_done_spec"], [109, 3, 1, "", "full_reward_spec"], [109, 3, 1, "", "full_state_spec"], [109, 1, 1, "", "get_buffer"], [109, 1, 1, "", "get_extra_state"], [109, 1, 1, "", "get_parameter"], [109, 1, 1, "", "get_submodule"], [109, 1, 1, "", "half"], [109, 3, 1, "", "input_spec"], [109, 1, 1, "", "ipu"], [109, 1, 1, "", "load_state_dict"], [109, 1, 1, "", "maybe_reset"], [109, 1, 1, "", "modules"], [109, 1, 1, "", "named_buffers"], [109, 1, 1, "", "named_children"], [109, 1, 1, "", "named_modules"], [109, 1, 1, "", "named_parameters"], [109, 3, 1, "", "observation_spec"], [109, 3, 1, "", "output_spec"], [109, 1, 1, "", "parameters"], [109, 1, 1, "", "rand_action"], [109, 1, 1, "", "rand_step"], [109, 1, 1, "", "register_backward_hook"], [109, 1, 1, "", "register_buffer"], [109, 1, 1, "", "register_forward_hook"], [109, 1, 1, "", "register_forward_pre_hook"], [109, 1, 1, "", "register_full_backward_hook"], [109, 1, 1, "", "register_full_backward_pre_hook"], [109, 1, 1, "", "register_gym"], [109, 1, 1, "", "register_load_state_dict_post_hook"], [109, 1, 1, "", "register_module"], [109, 1, 1, "", "register_parameter"], [109, 1, 1, "", "register_state_dict_pre_hook"], [109, 1, 1, "", "requires_grad_"], [109, 1, 1, "", "reset"], [109, 3, 1, "", "reset_keys"], [109, 3, 1, "", "reward_key"], [109, 3, 1, "", "reward_keys"], [109, 3, 1, "", "reward_spec"], [109, 1, 1, "", "rollout"], [109, 1, 1, "", "set_extra_state"], [109, 1, 1, "", "set_seed"], [109, 3, 1, "", "shape"], [109, 1, 1, "", "share_memory"], [109, 3, 1, "", "specs"], [109, 1, 1, "", "state_dict"], [109, 3, 1, "", "state_spec"], [109, 1, 1, "", "step"], [109, 1, 1, "", "step_and_maybe_reset"], [109, 1, 1, "", "to"], [109, 1, 1, "", "to_empty"], [109, 1, 1, "", "train"], [109, 1, 1, "", "type"], [109, 1, 1, "", "update_kwargs"], [109, 1, 1, "", "xpu"], [109, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[114, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[116, 0, 1, "", "ActionMask"], [117, 0, 1, "", "BinarizeReward"], [118, 0, 1, "", "BurnInTransform"], [119, 0, 1, "", "CatFrames"], [120, 0, 1, "", "CatTensors"], [121, 0, 1, "", "CenterCrop"], [122, 0, 1, "", "ClipTransform"], [123, 0, 1, "", "Compose"], [124, 0, 1, "", "DTypeCastTransform"], [125, 0, 1, "", "DeviceCastTransform"], [126, 0, 1, "", "DiscreteActionProjection"], [127, 0, 1, "", "DoubleToFloat"], [128, 0, 1, "", "EndOfLifeTransform"], [129, 0, 1, "", "ExcludeTransform"], [130, 0, 1, "", "FiniteTensorDictCheck"], [131, 0, 1, "", "FlattenObservation"], [132, 0, 1, "", "FrameSkipTransform"], [133, 0, 1, "", "GrayScale"], [134, 0, 1, "", "InitTracker"], [135, 0, 1, "", "KLRewardTransform"], [136, 0, 1, "", "NoopResetEnv"], [137, 0, 1, "", "ObservationNorm"], [138, 0, 1, "", "ObservationTransform"], [139, 0, 1, "", "PermuteTransform"], [140, 0, 1, "", "PinMemoryTransform"], [141, 0, 1, "", "R3MTransform"], [142, 0, 1, "", "RandomCropTensorDict"], [143, 0, 1, "", "RemoveEmptySpecs"], [144, 0, 1, "", "RenameTransform"], [145, 0, 1, "", "Resize"], [146, 0, 1, "", "Reward2GoTransform"], [147, 0, 1, "", "RewardClipping"], [148, 0, 1, "", "RewardScaling"], [149, 0, 1, "", "RewardSum"], [150, 0, 1, "", "SelectTransform"], [151, 0, 1, "", "SignTransform"], [152, 0, 1, "", "SqueezeTransform"], [153, 0, 1, "", "StepCounter"], [154, 0, 1, "", "TargetReturn"], [155, 0, 1, "", "TensorDictPrimer"], [156, 0, 1, "", "TimeMaxPool"], [157, 0, 1, "", "ToTensorImage"], [158, 0, 1, "", "Transform"], [159, 0, 1, "", "TransformedEnv"], [160, 0, 1, "", "UnsqueezeTransform"], [161, 0, 1, "", "VC1Transform"], [162, 0, 1, "", "VIPRewardTransform"], [163, 0, 1, "", "VIPTransform"], [164, 0, 1, "", "VecGymEnvTransform"], [165, 0, 1, "", "VecNorm"], [166, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[116, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[117, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[118, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[122, 1, 1, "", "transform_observation_spec"], [122, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "to"], [123, 1, 1, "", "transform_env_device"], [123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_observation_spec"], [123, 1, 1, "", "transform_output_spec"], [123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"], [124, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_done_spec"], [125, 1, 1, "", "transform_env_device"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"], [125, 1, 1, "", "transform_output_spec"], [125, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[126, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "register_keys"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[130, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[132, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[133, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[134, 1, 1, "", "forward"], [134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[137, 1, 1, "", "init_stats"], [137, 1, 1, "", "transform_input_spec"], [137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[141, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[142, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_input_spec"], [144, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[146, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[147, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[151, 1, 1, "", "transform_observation_spec"], [151, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_observation_spec"], [153, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "to"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[158, 3, 1, "", "container"], [158, 1, 1, "", "forward"], [158, 3, 1, "", "parent"], [158, 1, 1, "", "to"], [158, 1, 1, "", "transform_done_spec"], [158, 1, 1, "", "transform_env_device"], [158, 1, 1, "", "transform_input_spec"], [158, 1, 1, "", "transform_observation_spec"], [158, 1, 1, "", "transform_output_spec"], [158, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[159, 3, 1, "", "batch_locked"], [159, 3, 1, "", "batch_size"], [159, 1, 1, "", "empty_cache"], [159, 1, 1, "", "eval"], [159, 3, 1, "", "input_spec"], [159, 1, 1, "", "load_state_dict"], [159, 3, 1, "", "output_spec"], [159, 1, 1, "", "set_missing_tolerance"], [159, 1, 1, "", "set_seed"], [159, 1, 1, "", "state_dict"], [159, 1, 1, "", "to"], [159, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[160, 1, 1, "", "transform_input_spec"], [160, 1, 1, "", "transform_observation_spec"], [160, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[161, 1, 1, "", "forward"], [161, 1, 1, "", "make_noload_model"], [161, 1, 1, "", "to"], [161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[163, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[164, 1, 1, "", "forward"], [164, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[165, 1, 1, "", "build_td_for_shared_vecnorm"], [165, 1, 1, "", "forward"], [165, 1, 1, "", "get_extra_state"], [165, 1, 1, "", "set_extra_state"], [165, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[167, 2, 1, "", "check_env_specs"], [168, 2, 1, "", "exploration_mode"], [169, 2, 1, "", "exploration_type"], [170, 2, 1, "", "get_available_libraries"], [171, 2, 1, "", "make_composite_from_td"], [172, 2, 1, "", "set_exploration_mode"], [173, 2, 1, "", "set_exploration_type"], [174, 2, 1, "", "step_mdp"], [175, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[176, 0, 1, "", "CEMPlanner"], [177, 0, 1, "", "Conv3dNet"], [178, 0, 1, "", "ConvNet"], [179, 0, 1, "", "DTActor"], [180, 0, 1, "", "DdpgCnnActor"], [181, 0, 1, "", "DdpgCnnQNet"], [182, 0, 1, "", "DdpgMlpActor"], [183, 0, 1, "", "DdpgMlpQNet"], [184, 0, 1, "", "DecisionTransformer"], [185, 0, 1, "", "Delta"], [186, 0, 1, "", "DistributionalDQNnet"], [187, 0, 1, "", "DistributionalQValueHook"], [188, 0, 1, "", "DreamerActor"], [189, 0, 1, "", "DuelingCnnDQNet"], [190, 0, 1, "", "GRU"], [191, 0, 1, "", "GRUCell"], [192, 0, 1, "", "GRUModule"], [193, 0, 1, "", "IndependentNormal"], [194, 0, 1, "", "LSTM"], [195, 0, 1, "", "LSTMCell"], [196, 0, 1, "", "LSTMModule"], [197, 0, 1, "", "LSTMNet"], [198, 0, 1, "", "MLP"], [199, 0, 1, "", "MPCPlannerBase"], [200, 0, 1, "", "MPPIPlanner"], [201, 0, 1, "", "MaskedCategorical"], [202, 0, 1, "", "MaskedOneHotCategorical"], [203, 0, 1, "", "MultiAgentConvNet"], [204, 0, 1, "", "MultiAgentMLP"], [205, 0, 1, "", "NoisyLazyLinear"], [206, 0, 1, "", "NoisyLinear"], [207, 0, 1, "", "NormalParamWrapper"], [208, 0, 1, "", "ObsDecoder"], [209, 0, 1, "", "ObsEncoder"], [210, 0, 1, "", "OneHotCategorical"], [211, 0, 1, "", "OnlineDTActor"], [212, 0, 1, "", "QMixer"], [213, 0, 1, "", "QValueHook"], [214, 0, 1, "", "RSSMPosterior"], [215, 0, 1, "", "RSSMPrior"], [216, 0, 1, "", "Squeeze2dLayer"], [217, 0, 1, "", "SqueezeLayer"], [218, 0, 1, "", "TanhDelta"], [219, 0, 1, "", "TanhNormal"], [220, 0, 1, "", "TruncatedNormal"], [221, 0, 1, "", "VDNMixer"], [222, 0, 1, "", "VmapModule"], [223, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[176, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[177, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[178, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[179, 1, 1, "", "default_config"], [179, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[180, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[181, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[182, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[183, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[184, 0, 1, "", "DTConfig"], [184, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[185, 1, 1, "", "log_prob"], [185, 3, 1, "", "mean"], [185, 3, 1, "", "mode"], [185, 1, 1, "", "rsample"], [185, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[186, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[188, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[189, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[190, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[191, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[192, 1, 1, "", "forward"], [192, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[193, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[194, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[195, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[196, 1, 1, "", "forward"], [196, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[197, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[198, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[199, 1, 1, "", "forward"], [199, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[200, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[201, 1, 1, "", "log_prob"], [201, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[202, 1, 1, "", "log_prob"], [202, 1, 1, "", "rsample"], [202, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[205, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[207, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[208, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[209, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[210, 1, 1, "", "log_prob"], [210, 3, 1, "", "mode"], [210, 1, 1, "", "rsample"], [210, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[211, 1, 1, "", "default_config"], [211, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[212, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[214, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[215, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[217, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[218, 3, 1, "", "mean"], [218, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[219, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[220, 1, 1, "", "log_prob"], [220, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[221, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[222, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[224, 0, 1, "", "Actor"], [225, 0, 1, "", "ActorCriticOperator"], [226, 0, 1, "", "ActorCriticWrapper"], [227, 0, 1, "", "ActorValueOperator"], [228, 0, 1, "", "AdditiveGaussianWrapper"], [229, 0, 1, "", "DecisionTransformerInferenceWrapper"], [230, 0, 1, "", "DistributionalQValueActor"], [231, 0, 1, "", "DistributionalQValueModule"], [232, 0, 1, "", "EGreedyModule"], [233, 0, 1, "", "EGreedyWrapper"], [234, 0, 1, "", "LMHeadActorValueOperator"], [235, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [236, 0, 1, "", "ProbabilisticActor"], [237, 0, 1, "", "QValueActor"], [238, 0, 1, "", "QValueModule"], [239, 0, 1, "", "SafeModule"], [240, 0, 1, "", "SafeProbabilisticModule"], [241, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [242, 0, 1, "", "SafeSequential"], [243, 0, 1, "", "TanhModule"], [244, 0, 1, "", "ValueOperator"], [245, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[225, 1, 1, "", "get_critic_operator"], [225, 1, 1, "", "get_policy_head"], [225, 1, 1, "", "get_value_head"], [225, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[226, 1, 1, "", "get_policy_head"], [226, 1, 1, "", "get_policy_operator"], [226, 1, 1, "", "get_value_head"], [226, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[227, 1, 1, "", "get_policy_head"], [227, 1, 1, "", "get_policy_operator"], [227, 1, 1, "", "get_value_head"], [227, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "mask_context"], [229, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[231, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[238, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[239, 1, 1, "", "random"], [239, 1, 1, "", "random_sample"], [239, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[240, 1, 1, "", "random"], [240, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[243, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[245, 1, 1, "", "get_reward_operator"], [245, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[246, 0, 1, "", "biased_softplus"], [247, 0, 1, "", "inv_softplus"], [248, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[246, 1, 1, "", "forward"]], "torchrl.objectives": [[249, 0, 1, "", "A2CLoss"], [250, 0, 1, "", "CQLLoss"], [251, 0, 1, "", "ClipPPOLoss"], [252, 0, 1, "", "DDPGLoss"], [253, 0, 1, "", "DQNLoss"], [254, 0, 1, "", "DTLoss"], [255, 0, 1, "", "DiscreteCQLLoss"], [256, 0, 1, "", "DiscreteIQLLoss"], [257, 0, 1, "", "DiscreteSACLoss"], [258, 0, 1, "", "DistributionalDQNLoss"], [259, 0, 1, "", "DreamerActorLoss"], [260, 0, 1, "", "DreamerModelLoss"], [261, 0, 1, "", "DreamerValueLoss"], [262, 0, 1, "", "HardUpdate"], [263, 0, 1, "", "IQLLoss"], [264, 0, 1, "", "KLPENPPOLoss"], [265, 0, 1, "", "LossModule"], [266, 0, 1, "", "OnlineDTLoss"], [267, 0, 1, "", "PPOLoss"], [268, 0, 1, "", "REDQLoss"], [269, 0, 1, "", "ReinforceLoss"], [270, 0, 1, "", "SACLoss"], [271, 0, 1, "", "SoftUpdate"], [272, 0, 1, "", "TD3Loss"], [273, 0, 1, "", "ValueEstimators"], [274, 0, 1, "", "default_value_kwargs"], [275, 0, 1, "", "distance_loss"], [276, 0, 1, "", "hold_out_net"], [277, 0, 1, "", "hold_out_params"], [279, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[251, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[254, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[256, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[260, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[261, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "loss_value_diff"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[264, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[265, 1, 1, "", "convert_to_functional"], [265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"], [265, 1, 1, "", "named_parameters"], [265, 1, 1, "", "parameters"], [265, 1, 1, "", "set_keys"], [265, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[266, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "load_state_dict"], [270, 1, 1, "", "make_value_estimator"], [270, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[278, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[280, 0, 1, "", "GAE"], [281, 0, 1, "", "TD0Estimator"], [282, 0, 1, "", "TD1Estimator"], [283, 0, 1, "", "TDLambdaEstimator"], [284, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[281, 1, 1, "", "forward"], [281, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "set_keys"], [284, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[285, 0, 1, "", "generalized_advantage_estimate"], [286, 0, 1, "", "reward2go"], [287, 0, 1, "", "td0_advantage_estimate"], [288, 0, 1, "", "td0_return_estimate"], [289, 0, 1, "", "td1_advantage_estimate"], [290, 0, 1, "", "td1_return_estimate"], [291, 0, 1, "", "td_lambda_advantage_estimate"], [292, 0, 1, "", "td_lambda_return_estimate"], [293, 0, 1, "", "vec_generalized_advantage_estimate"], [294, 0, 1, "", "vec_td1_advantage_estimate"], [295, 0, 1, "", "vec_td1_return_estimate"], [296, 0, 1, "", "vec_td_lambda_advantage_estimate"], [297, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[298, 2, 1, "", "TensorDictRecorder"], [299, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[300, 2, 1, "", "Logger"], [302, 2, 1, "", "generate_exp_name"], [303, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[301, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[304, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[305, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[306, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[307, 0, 1, "", "BatchSubSampler"], [308, 0, 1, "", "ClearCudaCache"], [309, 0, 1, "", "CountFramesLog"], [310, 0, 1, "", "LogReward"], [311, 0, 1, "", "OptimizerHook"], [312, 0, 1, "", "Recorder"], [313, 0, 1, "", "ReplayBufferTrainer"], [314, 0, 1, "", "RewardNormalizer"], [315, 0, 1, "", "SelectKeys"], [316, 0, 1, "", "Trainer"], [317, 0, 1, "", "TrainerHookBase"], [318, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[307, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[308, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[309, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[310, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[311, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[312, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[313, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[314, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[315, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[317, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[318, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[319, 2, 1, "", "correct_for_frame_skip"], [320, 2, 1, "", "get_stats_random_rollout"], [321, 2, 1, "", "make_collector_offpolicy"], [322, 2, 1, "", "make_collector_onpolicy"], [323, 2, 1, "", "make_dqn_loss"], [324, 2, 1, "", "make_redq_loss"], [325, 2, 1, "", "make_redq_model"], [326, 2, 1, "", "make_replay_buffer"], [327, 2, 1, "", "make_target_updater"], [328, 2, 1, "", "make_trainer"], [329, 2, 1, "", "parallel_env_constructor"], [330, 2, 1, "", "sync_async_collector"], [331, 2, 1, "", "sync_sync_collector"], [332, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 336, 337, 338, 339, 341, 342, 343, 346, 353, 354, 358, 359], "instal": [0, 6, 7, 358], "get": [0, 345, 346, 347, 348, 349, 350], "start": [0, 345, 346, 347, 348, 349, 350], "tutori": [0, 343, 353], "basic": [0, 356], "intermedi": [0, 8], "advanc": 0, "refer": [0, 334], "knowledg": [0, 335], "base": [0, 2, 7, 335], "indic": 0, "tabl": 0, "collector": [1, 341, 342, 343, 344, 348, 350, 353, 358], "packag": [1, 2, 3, 336, 337, 338, 339], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 341, 342, 343, 348, 350, 353, 358], "distribut": [1, 336], "helper": [1, 3], "function": [1, 4, 337, 342, 343, 347, 353, 358], "replai": [2, 341, 342, 343, 344, 348, 350, 353, 356, 358], "buffer": [2, 341, 342, 343, 344, 348, 350, 353, 356, 358], "compos": [2, 123], "support": 2, "type": 2, "choos": 2, "storag": [2, 74, 341, 348, 356], "sampl": [2, 356], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 342, 356], "trajectori": [2, 356], "checkpoint": [2, 338], "episod": [2, 4], "format": 2, "ted": [2, 345], "The": [2, 341], "rational": 2, "behind": 2, "structur": [2, 356], "dimension": [2, 4], "tensordict": [2, 336, 356, 358], "special": [2, 346, 358], "case": 2, "footnot": 2, "multi": [2, 3, 336, 337, 352, 353], "agent": [2, 3, 4, 336, 337, 353], "present": 2, "memori": 2, "polici": [2, 4, 341, 343, 344, 346, 350, 352, 353, 354], "rnn": 2, "transform": [2, 3, 158, 341, 343, 345, 353, 354, 356, 358, 359], "step": [2, 341, 343, 345, 348, 353, 356, 359], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 43], "reinforc": [2, 337, 343, 353], "learn": [2, 4, 343, 353], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 336, 337, 338], "env": [3, 354, 358, 359], "vector": [3, 358], "environ": [3, 4, 6, 7, 341, 342, 343, 344, 345, 350, 352, 353, 354, 358, 359], "clone": [3, 7], "mask": 3, "action": [3, 4, 344, 354], "record": [3, 312, 338, 341, 349], "domain": [3, 336], "specif": [3, 336, 352], "librari": [3, 358], "thing": [4, 341, 354], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 345, 347, 358], "gener": [4, 336], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 341, 350, 354], "algorithm": [4, 336], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 341, 342, 347, 350], "return": [4, 337], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 358], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 352], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 341, 342, 343], "standard": 4, "explor": [4, 336, 341, 342, 346], "valu": [4, 336, 337, 341, 343, 344, 346], "loss": [4, 341, 342, 343, 344, 350, 353], "earli": 4, "train": [4, 8, 337, 341, 343, 344, 347, 350, 353, 354], "roughli": 4, "uniformli": 4, "random": [4, 353], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 342], "increas": 4, "an": [4, 343, 344, 345, 354], "dynam": [4, 356], "can": 4, "low": 4, "forward": [4, 341], "model": [4, 336, 341, 342, 344, 347, 355, 358], "also": 4, "us": [4, 6, 9, 344, 355, 356, 358], "offlin": 4, "observ": [4, 341], "space": 4, "effect": [4, 354], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 359], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 341], "render": [7, 350, 353, 359], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 341], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 354], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "onehotdiscretetensorspec": 32, "pairwisedataset": 33, "prioritizedreplaybuff": 34, "promptdata": 35, "prompttensordicttoken": 36, "replaybuff": 37, "rewarddata": 38, "rolloutfrommodel": 39, "tensordictprioritizedreplaybuff": 40, "tensordictreplaybuff": 41, "tensordicttoken": 42, "tokenizeddatasetload": 44, "unboundedcontinuoustensorspec": 45, "unboundeddiscretetensorspec": 46, "check_no_exclusive_kei": 47, "consolidate_spec": 48, "contains_lazy_spec": 49, "create_infinite_iter": 50, "ataridqnexperiencereplai": 51, "d4rlexperiencereplai": 52, "gendgrlexperiencereplai": 53, "minariexperiencereplai": 54, "openmlexperiencereplai": 55, "openxexperiencereplai": 56, "robosetexperiencereplai": 57, "vd4rlexperiencereplai": 58, "get_dataload": 59, "immutabledatasetwrit": 60, "lazymemmapstorag": 61, "lazytensorstorag": 62, "liststorag": 63, "prioritizedsampl": 64, "prioritizedslicesampl": 65, "randomsampl": 66, "replaybufferensembl": 67, "roundrobinwrit": 68, "sampler": 69, "samplerensembl": 70, "samplerwithoutreplac": 71, "slicesampl": 72, "slicesamplerwithoutreplac": 73, "storageensembl": 75, "tensordictmaxvaluewrit": 76, "tensordictroundrobinwrit": 77, "tensorstorag": 78, "writer": 79, "writerensembl": 80, "braxenv": 81, "braxwrapp": 82, "dmcontrolenv": 83, "dmcontrolwrapp": 84, "envbas": [85, 354], "envcreat": 86, "envmetadata": 87, "gymenv": 88, "gymlikeenv": 89, "gymwrapp": 90, "habitatenv": 91, "isaacgymenv": 92, "isaacgymwrapp": 93, "jumanjienv": 94, "jumanjiwrapp": 95, "mogymenv": 96, "mogymwrapp": 97, "marlgroupmaptyp": 98, "modelbasedenvbas": 99, "multithreadedenv": 100, "multithreadedenvwrapp": 101, "openmlenv": 102, "parallelenv": 103, "pettingzooenv": 104, "pettingzoowrapp": 105, "robohiveenv": 106, "smacv2env": 107, "smacv2wrapp": 108, "serialenv": 109, "vmasenv": 110, "vmaswrapp": 111, "check_marl_group": 112, "gym_backend": 113, "dreamerenv": 114, "set_gym_backend": 115, "actionmask": 116, "binarizereward": 117, "burnintransform": 118, "catfram": [119, 356], "cattensor": 120, "centercrop": 121, "cliptransform": 122, "dtypecasttransform": 124, "devicecasttransform": 125, "discreteactionproject": 126, "doubletofloat": 127, "endoflifetransform": 128, "excludetransform": 129, "finitetensordictcheck": 130, "flattenobserv": 131, "frameskiptransform": 132, "grayscal": 133, "inittrack": 134, "klrewardtransform": 135, "noopresetenv": 136, "observationnorm": 137, "observationtransform": 138, "permutetransform": 139, "pinmemorytransform": 140, "r3mtransform": 141, "randomcroptensordict": 142, "removeemptyspec": 143, "renametransform": 144, "resiz": 145, "reward2gotransform": 146, "rewardclip": 147, "rewardsc": 148, "rewardsum": 149, "selecttransform": 150, "signtransform": 151, "squeezetransform": 152, "stepcount": 153, "targetreturn": 154, "tensordictprim": 155, "timemaxpool": 156, "totensorimag": 157, "transformedenv": 159, "unsqueezetransform": 160, "vc1transform": 161, "viprewardtransform": 162, "viptransform": 163, "vecgymenvtransform": 164, "vecnorm": [165, 359], "gsdenois": 166, "check_env_spec": 167, "exploration_mod": 168, "exploration_typ": 169, "get_available_librari": 170, "make_composite_from_td": 171, "set_exploration_mod": 172, "set_exploration_typ": 173, "step_mdp": 174, "terminated_or_trunc": 175, "cemplann": 176, "conv3dnet": 177, "convnet": 178, "dtactor": 179, "ddpgcnnactor": 180, "ddpgcnnqnet": 181, "ddpgmlpactor": 182, "ddpgmlpqnet": 183, "decisiontransform": 184, "delta": 185, "distributionaldqnnet": 186, "distributionalqvaluehook": 187, "dreameractor": 188, "duelingcnndqnet": 189, "gru": 190, "grucel": 191, "grumodul": 192, "independentnorm": 193, "lstm": [194, 344], "lstmcell": 195, "lstmmodul": 196, "lstmnet": 197, "mlp": [198, 344], "mpcplannerbas": 199, "mppiplann": 200, "maskedcategor": 201, "maskedonehotcategor": 202, "multiagentconvnet": 203, "multiagentmlp": 204, "noisylazylinear": 205, "noisylinear": 206, "normalparamwrapp": 207, "obsdecod": 208, "obsencod": 209, "onehotcategor": 210, "onlinedtactor": 211, "qmixer": [212, 337], "qvaluehook": 213, "rssmposterior": 214, "rssmprior": 215, "squeeze2dlay": 216, "squeezelay": 217, "tanhdelta": 218, "tanhnorm": 219, "truncatednorm": 220, "vdnmixer": 221, "vmapmodul": 222, "reset_nois": 223, "actor": [224, 336, 341, 346], "actorcriticoper": 225, "actorcriticwrapp": 226, "actorvalueoper": 227, "additivegaussianwrapp": 228, "decisiontransformerinferencewrapp": 229, "distributionalqvalueactor": 230, "distributionalqvaluemodul": 231, "egreedymodul": 232, "egreedywrapp": 233, "lmheadactorvalueoper": 234, "ornsteinuhlenbeckprocesswrapp": 235, "probabilisticactor": 236, "qvalueactor": 237, "qvaluemodul": 238, "safemodul": [239, 336], "safeprobabilisticmodul": 240, "safeprobabilistictensordictsequenti": 241, "safesequenti": 242, "tanhmodul": 243, "valueoper": 244, "worldmodelwrapp": 245, "biased_softplu": 246, "inv_softplu": 247, "map": 248, "a2closs": 249, "cqlloss": 250, "clipppoloss": 251, "ddpgloss": 252, "dqnloss": 253, "dtloss": 254, "discretecqlloss": 255, "discreteiqlloss": 256, "discretesacloss": 257, "distributionaldqnloss": 258, "dreameractorloss": 259, "dreamermodelloss": 260, "dreamervalueloss": 261, "hardupd": 262, "iqlloss": 263, "klpenppoloss": 264, "lossmodul": [265, 341, 347], "onlinedtloss": 266, "ppoloss": 267, "redqloss": 268, "reinforceloss": 269, "sacloss": 270, "softupd": 271, "td3loss": 272, "valueestim": 273, "default_value_kwarg": 274, "distance_loss": 275, "hold_out_net": 276, "hold_out_param": 277, "qmixerloss": 278, "next_state_valu": 279, "gae": 280, "td0estim": 281, "td1estim": 282, "tdlambdaestim": 283, "valueestimatorbas": 284, "generalized_advantage_estim": 285, "reward2go": 286, "td0_advantage_estim": 287, "td0_return_estim": 288, "td1_advantage_estim": 289, "td1_return_estim": 290, "td_lambda_advantage_estim": 291, "td_lambda_return_estim": 292, "vec_generalized_advantage_estim": 293, "vec_td1_advantage_estim": 294, "vec_td1_return_estim": 295, "vec_td_lambda_advantage_estim": 296, "vec_td_lambda_return_estim": 297, "tensordictrecord": 298, "videorecord": 299, "logger": [300, 338, 349, 350], "csvlogger": 301, "generate_exp_nam": 302, "get_logg": 303, "mlflowlogg": 304, "tensorboardlogg": 305, "wandblogg": 306, "batchsubsampl": 307, "clearcudacach": 308, "countframeslog": 309, "logreward": 310, "optimizerhook": 311, "replaybuffertrain": 313, "rewardnorm": 314, "selectkei": 315, "trainer": [316, 338, 342], "trainerhookbas": 317, "updateweight": 318, "correct_for_frame_skip": 319, "get_stats_random_rollout": 320, "make_collector_offpolici": 321, "make_collector_onpolici": 322, "make_dqn_loss": 323, "make_redq_loss": 324, "make_redq_model": 325, "make_replay_buff": 326, "make_target_updat": 327, "make_train": 328, "parallel_env_constructor": 329, "sync_async_collector": 330, "sync_sync_collector": 331, "transformed_env_constructor": 332, "readm": [333, 351], "tuto": [333, 351], "api": 334, "contribut": [335, 358], "content": 335, "modul": [336, 341, 344, 346, 350, 358], "wrapper": [336, 346], "probabilist": [336, 346], "q": [336, 342, 344, 346], "oper": 336, "join": 336, "hook": [336, 338, 342], "regular": 336, "planner": 336, "object": [337, 341, 347, 358], "dqn": [337, 342, 344], "ddpg": [337, 341], "sac": 337, "redq": 337, "iql": 337, "cql": 337, "dt": 337, "td3": 337, "ppo": [337, 343, 353], "a2c": 337, "dreamer": 337, "builder": 338, "_util": 339, "comput": [340, 342, 354, 357], "time": [340, 341, 357], "code": [341, 354], "overview": [341, 344], "setup": [341, 344], "__init__": 341, "method": 341, "estim": 341, "put": 341, "togeth": [341, 354], "call": 341, "parallel": [341, 352, 359], "execut": [341, 352, 354], "stat": 341, "build": [341, 342, 350, 356], "evalu": 341, "batch": [341, 354, 356], "size": [341, 356], "construct": 341, "target": [341, 342, 347], "network": [341, 342, 343, 344, 346, 353], "updat": 341, "experi": [341, 354], "result": [341, 343, 353], "conclus": [341, 342, 343, 344, 353, 354, 356], "next": [341, 343, 345, 348, 353, 356], "A": [342, 356], "exampl": [342, 356], "deep": 342, "collect": [342, 343, 348], "paramet": [342, 343, 347], "hyperparamet": [342, 343, 353], "regist": 342, "possibl": 342, "improv": 342, "defin": [343, 353], "loop": [343, 344, 350, 353, 354], "recurr": 344, "convolut": 344, "select": 344, "further": [344, 347], "read": 344, "creat": 345, "run": [345, 359], "rollout": [345, 352, 353, 354, 359], "s": [346, 347], "tensordictmodul": [346, 358], "output": 347, "consider": 347, "log": 349, "video": 349, "own": 350, "first": 350, "design": 350, "divers": 352, "critic": 353, "pendulum": 354, "write": 354, "_step": 354, "reset": [354, 359], "simul": 354, "_reset": 354, "metadata": 354, "_spec": 354, "spec": [354, 359], "shape": 354, "seed": [354, 359], "wrap": 354, "class": [354, 358], "test": 354, "our": 354, "custom": [354, 356], "simpl": 354, "pretrain": 355, "vanilla": 356, "integr": 356, "tensorclass": 356, "other": 356, "tensor": 356, "pytre": 356, "iter": 356, "over": 356, "fix": 356, "priorit": 356, "save": 356, "raw": 356, "imag": 356, "more": 356, "complex": 356, "introduct": 358, "config": 358, "sequenc": 358, "program": 358, "ensembl": 358, "meta": 358, "state": 358, "frame_skip": 359, "deepmind": 359, "control": 359, "devic": 359, "close": 359, "access": 359, "attribut": 359, "kwarg": 359}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})