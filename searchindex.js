Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 71, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 100, 101, 103, 104, 105, 106, 107, 110, 113, 117, 119, 120, 122, 125, 127, 128, 131, 137, 138, 142, 143, 144, 145, 147, 155, 156, 157, 158, 159, 160, 162, 165, 166, 168, 169, 179, 180, 182, 183, 184, 185, 192, 194, 196, 198, 199, 200, 201, 205, 206, 207, 211, 218, 219, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 242, 243, 247, 250, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 301, 304, 308, 313, 314, 318, 319, 322, 331, 332, 333, 334, 337, 338, 339, 343, 344, 348, 349, 350, 351, 352, 354, 355, 357, 358, 360, 361], "open": [0, 5, 7, 11, 57, 344, 355, 360], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "reinforc": [0, 3, 9, 54, 120, 182, 183, 184, 185, 189, 233, 237, 251, 252, 256, 257, 258, 260, 264, 265, 271, 272, 273, 336, 342, 344, 347, 348, 353, 356, 359, 360], "learn": [0, 3, 7, 8, 9, 17, 31, 54, 55, 56, 58, 59, 103, 120, 182, 183, 184, 185, 189, 202, 208, 233, 237, 251, 252, 256, 257, 258, 260, 264, 265, 270, 271, 272, 273, 336, 338, 339, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 51, 100, 155, 208, 226, 238, 246, 251, 253, 266, 267, 269, 271, 309, 335, 337, 338, 339, 340, 343, 344, 345, 350, 353, 355, 357, 358, 361], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 17, 18, 19, 36, 42, 84, 85, 94, 101, 172, 336, 337, 338, 341, 343, 344, 345, 347, 348, 350, 355, 356, 361], "pytorch": [0, 1, 2, 3, 55, 111, 112, 158, 169, 192, 196, 207, 208, 318, 335, 337, 340, 343, 345, 346, 349, 353, 355, 356, 357, 358, 360, 361], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 42, 54, 86, 90, 94, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 166, 168, 196, 308, 337, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 117, 119, 120, 123, 124, 125, 127, 128, 129, 137, 138, 142, 143, 147, 150, 154, 155, 156, 159, 160, 162, 164, 166, 168, 169, 177, 178, 179, 180, 182, 192, 194, 195, 196, 198, 201, 202, 205, 206, 208, 209, 222, 224, 226, 230, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 308, 314, 327, 332, 333, 334, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "directli": [0, 3, 4, 8, 22, 51, 68, 82, 83, 86, 89, 90, 100, 104, 110, 147, 165, 267, 334, 338, 344, 345, 347, 355, 356, 358], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 135, 136, 138, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 173, 176, 177, 178, 179, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 209, 212, 213, 214, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 269, 270, 271, 272, 274, 276, 280, 281, 282, 283, 284, 285, 288, 300, 301, 309, 315, 318, 321, 322, 327, 328, 330, 331, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361], "pypi": [0, 2, 360], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 86, 90, 93, 101, 104, 105, 106, 107, 110, 111, 112, 124, 142, 156, 158, 159, 160, 162, 164, 167, 168, 179, 180, 192, 195, 196, 200, 206, 207, 214, 222, 223, 227, 229, 241, 242, 301, 308, 315, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 358, 361], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 77, 86, 90, 93, 94, 104, 105, 106, 107, 110, 111, 112, 158, 162, 167, 168, 189, 196, 200, 207, 209, 226, 230, 232, 233, 241, 246, 251, 260, 267, 269, 282, 287, 295, 308, 313, 337, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 361], "about": [0, 3, 5, 7, 9, 17, 18, 19, 42, 55, 58, 59, 339, 343, 344, 345, 347, 348, 349, 350, 351, 352, 355, 356, 358, 360, 361], "instruct": [0, 6, 7, 10, 21, 53, 127, 129, 343, 344, 345, 346, 355, 358], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 104, 110, 227, 228, 229, 338, 343, 347, 349, 350, 352, 354, 355], "section": [0, 2, 3, 4, 192, 196, 344, 347, 352, 355], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 60, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 179, 180, 192, 195, 196, 200, 206, 222, 241, 315, 343, 344, 345, 346, 347, 356], "pip": [0, 10, 56, 347, 348, 349, 350, 351, 352, 355, 360, 361], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 34, 37, 40, 41, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 119, 120, 121, 122, 123, 125, 128, 132, 137, 138, 140, 142, 143, 146, 147, 150, 151, 155, 156, 157, 160, 162, 164, 165, 166, 168, 177, 179, 180, 186, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 224, 226, 230, 233, 234, 235, 237, 238, 239, 240, 245, 251, 252, 253, 254, 255, 257, 259, 260, 261, 265, 266, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 305, 309, 315, 322, 327, 330, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 350, 351, 354, 355, 356, 357, 358, 360, 361], "python": [0, 3, 5, 6, 7, 10, 20, 102, 116, 192, 193, 194, 196, 197, 198, 203, 204, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 86, 90, 104, 110, 120, 121, 132, 138, 142, 143, 158, 160, 162, 180, 192, 194, 196, 198, 200, 205, 206, 207, 211, 226, 231, 232, 233, 238, 239, 241, 242, 253, 262, 266, 267, 269, 300, 301, 317, 338, 342, 343, 344, 345, 346, 347, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361], "low": [0, 24, 86, 90, 104, 110, 123, 127, 173, 233, 238, 245, 343, 344, 345, 355, 356, 360, 361], "high": [0, 9, 24, 33, 35, 38, 40, 86, 90, 104, 110, 123, 127, 137, 173, 233, 238, 245, 282, 287, 295, 343, 344, 345, 355, 356, 358, 360, 361], "level": [0, 2, 3, 4, 21, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 120, 154, 266, 343, 344, 350, 360], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 43, 45, 46, 51, 52, 56, 80, 86, 139, 201, 286, 310, 319, 340, 345, 356, 360], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 71, 72, 74, 75, 76, 77, 79, 86, 87, 89, 90, 91, 99, 100, 103, 104, 105, 106, 107, 110, 111, 112, 119, 120, 123, 124, 125, 127, 128, 129, 131, 132, 136, 137, 140, 142, 147, 150, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 173, 177, 178, 185, 187, 192, 193, 194, 196, 197, 198, 199, 201, 203, 204, 205, 208, 212, 214, 217, 231, 232, 234, 237, 238, 239, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 277, 280, 281, 282, 283, 284, 285, 286, 308, 315, 330, 334, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 44, 119, 127, 224, 267, 338, 360], "effici": [0, 1, 2, 4, 8, 192, 208, 338, 343, 344, 345, 346, 349, 350, 352, 354, 355, 357, 358, 360], "modular": [0, 51, 244, 358, 360], "document": [0, 2, 5, 7, 17, 18, 20, 31, 57, 86, 90, 104, 110, 160, 168, 335, 344, 346, 347, 350, 353, 360], "properli": [0, 86, 90, 104, 110, 345, 351, 355, 356, 360], "test": [0, 3, 5, 82, 83, 95, 96, 162, 169, 194, 198, 199, 314, 330, 345, 346, 360], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 119, 120, 124, 125, 128, 129, 130, 138, 140, 142, 147, 149, 150, 151, 154, 155, 156, 159, 160, 162, 164, 165, 168, 169, 176, 177, 178, 182, 183, 184, 185, 186, 189, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 215, 216, 217, 226, 227, 231, 232, 233, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 288, 301, 303, 306, 307, 308, 309, 313, 330, 332, 333, 336, 338, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 360, 361], "code": [0, 3, 5, 7, 8, 57, 86, 90, 104, 110, 142, 160, 162, 192, 193, 194, 196, 197, 198, 244, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361], "aim": [0, 2, 3, 7, 27, 28, 142, 162, 164, 200, 321, 337, 338, 339, 343, 344, 360], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 56, 59, 60, 62, 63, 75, 76, 79, 81, 82, 83, 91, 95, 96, 101, 103, 104, 105, 107, 120, 129, 138, 156, 157, 159, 172, 189, 224, 232, 233, 238, 241, 244, 260, 282, 283, 284, 285, 306, 336, 338, 340, 345, 346, 347, 348, 355, 356, 358, 360], "research": [0, 7, 9, 360], "most": [0, 2, 3, 7, 8, 31, 73, 74, 86, 90, 104, 110, 127, 165, 169, 343, 345, 347, 348, 349, 350, 351, 352, 356, 358, 360, 361], "written": [0, 3, 11, 33, 35, 38, 44, 53, 54, 57, 62, 66, 68, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 120, 129, 136, 150, 154, 157, 165, 168, 176, 177, 226, 237, 238, 241, 242, 246, 251, 253, 266, 269, 271, 281, 300, 301, 338, 339, 340, 343, 346, 348, 354, 356, 360], "highli": [0, 2, 347, 360, 361], "wai": [0, 2, 3, 4, 51, 55, 68, 77, 94, 142, 145, 164, 165, 196, 269, 282, 283, 284, 285, 338, 343, 344, 345, 347, 349, 350, 354, 355, 356, 357, 358, 360, 361], "easili": [0, 2, 3, 7, 86, 90, 104, 110, 327, 339, 343, 344, 345, 347, 348, 349, 352, 355, 360, 361], "swap": [0, 3, 89, 165, 345, 357, 360], "compon": [0, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 189, 215, 232, 233, 240, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 313, 318, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 357, 360], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 87, 90, 104, 105, 106, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 181, 182, 186, 189, 190, 213, 214, 215, 223, 231, 236, 245, 248, 250, 256, 268, 301, 315, 327, 334, 336, 342, 344, 346, 348, 350, 351, 352, 353, 357, 359], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 81, 86, 87, 90, 94, 99, 104, 105, 106, 110, 111, 112, 125, 128, 160, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 223, 224, 230, 231, 233, 234, 237, 240, 245, 248, 266, 301, 343, 344, 346, 347, 348, 350, 351, 354, 355, 356, 357, 358, 360, 361], "write": [0, 2, 3, 8, 22, 31, 33, 35, 36, 38, 44, 68, 76, 81, 86, 90, 123, 140, 141, 150, 152, 154, 158, 177, 226, 241, 242, 244, 246, 254, 255, 257, 258, 259, 265, 270, 272, 274, 281, 286, 301, 338, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 90, 101, 104, 108, 109, 110, 150, 159, 166, 168, 176, 177, 192, 194, 198, 237, 241, 242, 247, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 308, 343, 345, 346, 347, 349, 355, 356, 360, 361], "ones": [0, 2, 22, 25, 31, 34, 37, 40, 41, 86, 90, 104, 110, 121, 124, 125, 126, 128, 138, 142, 147, 156, 159, 160, 162, 164, 168, 203, 204, 224, 241, 251, 252, 254, 265, 269, 270, 272, 274, 288, 343, 345, 355, 356, 358, 360, 361], "littl": [0, 3, 42, 86, 90, 104, 110, 160, 251, 253, 266, 269, 271, 345, 346, 350, 358, 360, 361], "effort": [0, 3, 356, 358, 360], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 110, 111, 112, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 138, 142, 143, 144, 145, 147, 150, 151, 152, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 280, 282, 283, 284, 285, 286, 300, 308, 309, 311, 314, 315, 318, 320, 321, 322, 327, 330, 334, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "repo": [0, 6, 53, 120, 157, 162, 337, 355, 360], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 73, 74, 84, 85, 89, 91, 92, 107, 230, 235, 237, 255, 258, 265, 280, 349, 360], "align": [0, 192, 196, 360], "exist": [0, 2, 3, 4, 11, 17, 20, 31, 33, 35, 38, 44, 86, 90, 104, 110, 121, 126, 160, 168, 272, 322, 334, 355, 360, 361], "ecosystem": [0, 350, 360], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 45, 46, 51, 57, 62, 63, 68, 71, 73, 77, 79, 86, 87, 90, 94, 104, 110, 111, 112, 120, 154, 155, 156, 157, 160, 168, 192, 194, 196, 198, 205, 230, 233, 235, 237, 242, 266, 343, 344, 345, 346, 347, 350, 351, 354, 355, 356, 357, 358, 360, 361], "dataset": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 71, 73, 74, 103, 166, 336, 343, 344, 347, 357, 358, 360, 361], "pillar": [0, 360], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 121, 125, 126, 127, 128, 133, 137, 138, 142, 143, 144, 147, 150, 154, 155, 156, 157, 159, 160, 162, 165, 166, 169, 178, 194, 198, 199, 201, 202, 230, 237, 257, 261, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 311, 314, 321, 322, 323, 324, 327, 330, 331, 332, 333, 334, 336, 337, 338, 342, 348, 349, 350, 351, 353, 357, 358, 359], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 44, 86, 90, 100, 104, 110, 125, 142, 156, 162, 164, 167, 168, 179, 180, 181, 186, 188, 194, 198, 200, 201, 202, 206, 213, 214, 223, 227, 228, 229, 236, 241, 247, 251, 252, 253, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 280, 318, 323, 324, 325, 326, 327, 336, 337, 340, 342, 345, 347, 350, 353, 355, 356, 358, 359, 361], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 117, 119, 120, 125, 126, 128, 130, 136, 138, 144, 147, 154, 165, 168, 169, 173, 177, 178, 189, 194, 198, 199, 202, 205, 206, 215, 224, 226, 232, 234, 235, 237, 238, 239, 241, 244, 245, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 308, 309, 315, 318, 320, 323, 330, 332, 333, 334, 336, 338, 339, 340, 342, 346, 347, 348, 349, 353, 356, 357, 358, 359, 361], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 37, 39, 83, 86, 90, 95, 96, 104, 105, 106, 110, 113, 120, 142, 147, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 192, 196, 248, 249, 250, 267, 330, 336, 341, 343, 345, 348, 349, 350, 355, 356, 358, 360, 361], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 32, 33, 35, 38, 62, 63, 65, 66, 77, 79, 86, 87, 90, 104, 110, 111, 119, 121, 124, 132, 138, 142, 150, 156, 159, 160, 162, 164, 168, 169, 192, 194, 195, 196, 198, 202, 206, 209, 215, 221, 222, 231, 233, 238, 240, 241, 242, 272, 281, 282, 283, 284, 285, 309, 321, 333, 338, 344, 345, 348, 349, 351, 355, 357, 358, 360, 361], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 35, 38, 77, 86, 87, 90, 104, 110, 111, 119, 121, 124, 132, 138, 142, 150, 156, 159, 160, 162, 164, 168, 169, 192, 194, 195, 196, 197, 198, 202, 206, 221, 222, 231, 238, 241, 242, 272, 281, 291, 292, 293, 294, 296, 297, 298, 299, 333, 338, 344, 345, 348, 351, 355, 356, 357, 358, 360, 361], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 39, 51, 57, 120, 147, 154, 168, 237, 315, 318, 320, 323, 324, 330, 332, 333, 336, 340, 358, 361], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 73, 74, 75, 78, 80, 81, 86, 90, 100, 104, 110, 124, 125, 128, 142, 156, 159, 160, 162, 164, 165, 166, 168, 176, 177, 178, 179, 180, 192, 193, 196, 197, 200, 202, 206, 226, 232, 233, 238, 240, 241, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 288, 305, 309, 321, 327, 330, 331, 332, 333, 334, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 360, 361], "etc": [0, 2, 3, 7, 8, 11, 31, 45, 46, 57, 86, 90, 104, 110, 136, 160, 168, 200, 206, 344, 345, 350, 358, 360, 361], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 75, 86, 90, 104, 105, 106, 110, 120, 125, 128, 129, 136, 137, 138, 154, 159, 160, 166, 168, 169, 177, 179, 180, 199, 200, 205, 206, 224, 243, 244, 251, 253, 266, 269, 271, 277, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 318, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "few": [0, 2, 8, 90, 301, 309, 345, 346, 348, 355, 358, 360, 361], "depend": [0, 1, 2, 3, 4, 7, 8, 33, 35, 89, 91, 92, 107, 111, 112, 125, 128, 246, 269, 338, 343, 345, 346, 355, 356, 360, 361], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 32, 54, 57, 59, 77, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 179, 180, 192, 193, 196, 197, 241, 314, 318, 338, 343, 345, 346, 348, 350, 351, 355, 356, 358, 360, 361], "standard": [0, 3, 138, 149, 166, 178, 190, 202, 207, 208, 213, 230, 231, 274, 282, 283, 284, 285, 343, 344, 347, 348, 355, 358, 360], "numpi": [0, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 158, 318, 356, 358, 360, 361], "common": [0, 2, 3, 4, 90, 95, 117, 227, 228, 229, 236, 251, 252, 253, 258, 259, 265, 266, 269, 270, 271, 272, 274, 330, 337, 338, 340, 343, 345, 348, 351, 354, 355, 356, 357, 360, 361], "openai": [0, 7, 89, 91, 107, 345, 356, 360, 361], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 86, 87, 89, 90, 91, 92, 94, 101, 102, 104, 107, 110, 111, 112, 114, 116, 120, 123, 129, 135, 136, 138, 140, 145, 147, 150, 156, 159, 165, 166, 168, 327, 330, 337, 343, 344, 345, 346, 347, 351, 352, 356, 357, 358, 360], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 84, 85, 86, 89, 90, 91, 92, 94, 101, 102, 104, 105, 106, 107, 110, 120, 121, 123, 124, 125, 127, 128, 132, 138, 142, 143, 147, 154, 155, 156, 157, 159, 160, 162, 164, 166, 168, 196, 198, 199, 205, 206, 226, 231, 232, 238, 239, 241, 242, 243, 244, 251, 253, 254, 258, 259, 265, 266, 267, 269, 270, 271, 272, 273, 274, 282, 283, 284, 285, 286, 308, 322, 340, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 132, 133, 135, 136, 137, 138, 142, 143, 145, 146, 147, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 224, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 306, 308, 309, 311, 312, 313, 314, 315, 316, 318, 322, 323, 324, 325, 326, 327, 329, 330, 332, 333, 334, 338, 346, 347, 350, 355, 356, 358, 360], "On": [0, 3, 7, 17, 18, 19, 20, 25, 54, 193, 197, 338, 344, 355], "end": [0, 2, 3, 13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 104, 110, 129, 140, 154, 155, 160, 168, 179, 180, 192, 193, 196, 197, 201, 272, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "come": [0, 1, 2, 3, 8, 31, 77, 86, 90, 99, 104, 110, 125, 128, 226, 227, 228, 229, 238, 246, 251, 253, 266, 269, 271, 343, 344, 345, 346, 349, 350, 351, 352, 355, 358, 360, 361], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 72, 75, 79, 86, 88, 90, 100, 104, 105, 106, 110, 111, 112, 116, 117, 120, 121, 124, 125, 128, 135, 136, 142, 147, 154, 155, 156, 157, 159, 160, 162, 164, 166, 168, 169, 174, 175, 177, 192, 194, 196, 198, 201, 205, 206, 230, 231, 241, 259, 267, 269, 272, 286, 309, 314, 315, 324, 334, 337, 338, 339, 341, 343, 344, 345, 346, 348, 349, 350, 354, 355, 356, 357, 358, 360, 361], "re": [0, 2, 3, 8, 31, 72, 86, 90, 104, 110, 168, 198, 203, 204, 238, 242, 308, 340, 343, 345, 346, 347, 349, 354, 356, 360, 361], "usabl": [0, 340, 346, 360], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 86, 87, 90, 104, 110, 116, 125, 128, 160, 166, 168, 169, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 209, 210, 211, 212, 213, 216, 217, 219, 222, 224, 227, 228, 229, 230, 231, 233, 234, 237, 238, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 327, 330, 336, 338, 343, 346, 347, 348, 351, 354, 356, 358, 361], "cost": [0, 2, 26, 57, 251, 253, 266, 269, 271, 343, 344, 355, 356, 358], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 69, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 185, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 209, 212, 213, 214, 216, 217, 220, 221, 222, 223, 226, 227, 228, 229, 231, 238, 240, 241, 242, 246, 247, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 277, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 301, 305, 318, 321, 323, 327, 330, 331, 332, 333, 334, 336, 338, 340, 343, 344, 345, 346, 348, 349, 351, 354, 355, 356, 357, 358, 360, 361], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 42, 44, 51, 54, 58, 59, 65, 86, 87, 90, 94, 99, 101, 104, 105, 106, 110, 119, 125, 128, 158, 166, 168, 205, 206, 233, 237, 240, 336, 340, 343, 344, 346, 347, 355, 356, 357, 358, 360, 361], "good": [0, 1, 4, 9, 104, 343, 345, 346, 348, 355, 360, 361], "runtim": [0, 2, 3, 31, 86, 90, 104, 110, 168, 356], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 113, 125, 128, 137, 160, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 253, 262, 269, 272, 314, 318, 339, 343, 344, 345, 346, 347, 350, 352, 354, 355, 356, 361], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 76, 81, 82, 83, 86, 89, 90, 91, 95, 96, 99, 104, 105, 106, 107, 108, 109, 110, 111, 154, 166, 168, 227, 228, 229, 237, 259, 267, 301, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 360, 361], "read": [0, 2, 3, 7, 22, 36, 39, 57, 62, 63, 64, 65, 68, 75, 76, 79, 86, 89, 90, 91, 104, 110, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 140, 141, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 159, 162, 163, 165, 166, 168, 177, 212, 226, 227, 228, 229, 232, 238, 241, 242, 244, 246, 247, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 301, 314, 318, 327, 338, 343, 344, 345, 347, 348, 354, 355, 356, 357, 361], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 340, 343, 347, 350, 354, 357, 361], "beyond": 0, "api": [0, 2, 3, 5, 105, 106, 107, 142, 164, 339, 340, 347, 348, 349, 350, 351, 355, 356, 358, 360, 361], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 45, 46, 47, 49, 73, 86, 87, 90, 100, 104, 110, 113, 120, 121, 131, 136, 143, 158, 168, 169, 194, 198, 226, 232, 233, 238, 239, 240, 241, 242, 301, 335, 338, 339, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361], "paper": [0, 54, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 107, 111, 112, 142, 162, 164, 192, 214, 223, 257, 264, 327, 343, 345, 355], "releas": [0, 4, 7, 10, 31, 86, 90, 104, 110, 160, 168, 272, 360], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 320, 330, 340, 343, 360], "so": [0, 2, 3, 4, 6, 7, 10, 31, 33, 35, 38, 39, 86, 90, 104, 110, 156, 166, 168, 243, 244, 343, 345, 346, 349, 352, 355, 356, 361], "make": [0, 2, 3, 4, 7, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 75, 76, 81, 86, 90, 91, 94, 96, 98, 102, 104, 110, 130, 138, 142, 143, 147, 154, 162, 168, 169, 192, 193, 196, 197, 205, 206, 207, 232, 242, 251, 253, 266, 269, 271, 282, 283, 284, 285, 315, 324, 334, 338, 339, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 360, 361], "sure": [0, 3, 4, 7, 56, 75, 90, 94, 147, 232, 334, 338, 343, 345, 346, 349, 355, 356, 358, 360, 361], "alwai": [0, 2, 3, 19, 25, 27, 31, 51, 60, 86, 90, 104, 110, 136, 137, 168, 260, 267, 338, 339, 344, 345, 346, 355, 356, 358], "enjoi": [0, 2, 3, 57, 350], "latest": [0, 2, 3, 10, 101, 105, 106, 315, 345, 355, 356, 360], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 32, 44, 55, 66, 73, 74, 86, 90, 99, 104, 105, 106, 108, 109, 110, 120, 132, 136, 140, 156, 157, 161, 166, 169, 179, 180, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 207, 208, 242, 251, 253, 266, 269, 271, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 334, 338, 343, 344, 345, 346, 348, 349, 350, 352, 356, 358, 361], "recent": [0, 7, 11, 165, 343, 358, 361], "version": [0, 1, 2, 3, 6, 11, 31, 33, 35, 39, 54, 59, 73, 86, 89, 90, 91, 92, 101, 102, 104, 105, 107, 110, 111, 112, 165, 168, 229, 251, 253, 266, 267, 269, 271, 272, 282, 285, 337, 338, 343, 345, 346, 347, 349, 352, 355, 356, 357, 361], "although": [0, 1, 8, 86, 90, 104, 110, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 340, 343, 344, 350, 358], "core": [0, 3, 8, 327, 340, 346, 348, 360], "guarante": [0, 2, 31, 33, 35, 38, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 166, 168, 350, 360], "backward": [0, 8, 31, 82, 83, 86, 90, 104, 110, 166, 168, 192, 193, 196, 197, 251, 252, 254, 258, 259, 265, 269, 270, 271, 272, 274, 343, 345, 346, 349, 350, 352, 355, 356], "compat": [0, 2, 3, 7, 11, 31, 53, 68, 71, 73, 74, 75, 77, 86, 90, 92, 103, 104, 110, 120, 154, 162, 166, 168, 192, 193, 194, 196, 197, 198, 239, 251, 252, 254, 255, 257, 258, 259, 265, 267, 269, 270, 271, 272, 274, 277, 343, 346, 358, 360], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 136, 138, 140, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 248, 251, 252, 253, 254, 255, 257, 258, 259, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284, 285, 288, 290, 291, 292, 296, 297, 299, 309, 314, 315, 316, 327, 330, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361], "13": [0, 2, 5, 10, 11, 73, 74, 107, 165, 168, 342, 344, 346, 351, 355, 356, 357, 358, 359], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 34, 37, 40, 41, 53, 55, 56, 57, 58, 59, 90, 104, 142, 159, 164, 256, 267, 339, 340, 343, 344, 345, 346, 348, 350, 358, 361], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 173, 176, 177, 178, 188, 189, 194, 198, 199, 201, 202, 214, 215, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 300, 309, 313, 314, 315, 317, 318, 327, 336, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 361], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 136, 144, 227, 228, 229, 241, 258, 265, 327, 336, 343, 356, 360], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 68, 86, 90, 104, 110, 116, 142, 164, 168, 202, 303, 308, 318, 340, 344, 352], "root": [0, 2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 104, 120, 157, 176, 195, 221, 222, 346, 347, 355, 356, 357, 358, 361], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 34, 42, 51, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 103, 105, 106, 107, 111, 112, 120, 142, 162, 181, 182, 183, 184, 185, 186, 189, 190, 191, 196, 202, 203, 204, 208, 210, 211, 214, 216, 217, 223, 233, 237, 251, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 282, 287, 295, 327, 335, 353, 357, 360], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 51, 54, 55, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 162, 348, 352, 360], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 54, 57, 58, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 105, 106, 107, 111, 112, 357, 360], "setup": [0, 7, 82, 83, 94, 95, 96], "py": [0, 3, 116, 214, 223, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361], "develop": [0, 3, 4, 7, 94, 343, 360], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 86, 88, 90, 92, 93, 104, 107, 110, 119, 123, 127, 133, 136, 142, 143, 145, 152, 156, 159, 160, 162, 163, 165, 166, 167, 168, 169, 176, 178, 179, 180, 189, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 206, 208, 209, 224, 230, 231, 232, 233, 234, 238, 239, 242, 244, 245, 248, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 277, 280, 282, 283, 284, 285, 286, 288, 302, 303, 306, 308, 311, 318, 320, 327, 330, 339, 342, 343, 345, 348, 349, 350, 353, 355, 356, 359, 361], "seri": [0, 2, 7, 8, 32, 61, 69, 77, 78, 80, 81, 110, 137, 159, 301, 338, 339, 343, 344, 345, 351, 352, 355, 358, 361], "quick": [0, 51], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 39, 53, 59, 86, 90, 104, 110, 119, 157, 159, 168, 269, 337, 338, 339, 343, 344, 345, 346, 348, 352, 355, 356, 358, 361], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 71, 72, 73, 74, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 94, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 114, 120, 121, 122, 123, 125, 126, 127, 128, 130, 132, 136, 137, 138, 142, 143, 146, 147, 150, 151, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 176, 177, 179, 180, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 224, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 265, 266, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 296, 297, 298, 299, 305, 308, 313, 315, 318, 320, 322, 327, 330, 334, 337, 343, 344, 345, 346, 347, 349, 352, 354, 355, 356, 358, 360, 361], "hurri": [0, 347], "last": [0, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 43, 45, 46, 53, 72, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 119, 132, 138, 143, 155, 157, 158, 179, 180, 192, 194, 196, 198, 199, 200, 203, 204, 210, 218, 224, 230, 231, 234, 242, 282, 284, 285, 343, 344, 345, 346, 347, 348, 355, 356, 357, 358, 360, 361], "item": [0, 8, 13, 25, 27, 37, 44, 60, 72, 77, 131, 203, 204, 254, 255, 257, 309, 339, 340, 343, 345, 346, 349, 350, 355, 356, 358], "navig": [0, 355], "previou": [0, 3, 4, 10, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 156, 168, 177, 192, 196, 217, 231, 345, 346, 347, 348, 352, 356, 361], "whenev": [0, 1, 2, 3, 22, 31, 34, 37, 40, 41, 51, 57, 66, 73, 74, 84, 85, 89, 91, 92, 107, 111, 112, 116, 135, 160, 165, 267, 282, 283, 284, 285, 320, 338, 358], "want": [0, 2, 3, 6, 7, 8, 74, 138, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 338, 343, 344, 345, 346, 347, 349, 350, 351, 355, 356, 357, 358, 360, 361], "ted": [0, 51, 53, 54, 55, 56, 57, 58, 59, 336, 342, 353, 359], "s": [0, 1, 2, 3, 6, 7, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 74, 77, 82, 83, 86, 90, 94, 95, 96, 101, 104, 105, 106, 110, 111, 112, 120, 124, 142, 154, 156, 158, 159, 160, 162, 164, 166, 168, 169, 179, 180, 194, 198, 204, 205, 206, 208, 214, 223, 227, 229, 230, 233, 234, 238, 241, 242, 245, 252, 258, 265, 267, 272, 282, 283, 284, 285, 286, 327, 338, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 77, 82, 83, 86, 90, 99, 100, 103, 104, 110, 116, 119, 124, 127, 129, 136, 142, 143, 155, 156, 159, 160, 162, 164, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 278, 280, 282, 283, 284, 285, 286, 318, 325, 326, 330, 336, 339, 340, 342, 344, 345, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361], "optim": [0, 1, 2, 8, 31, 39, 82, 83, 86, 90, 104, 110, 160, 168, 178, 202, 207, 208, 252, 267, 268, 269, 272, 313, 318, 330, 339, 340, 342, 345, 346, 347, 348, 350, 353, 355, 356, 359], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 104, 107, 110, 120, 138, 142, 164, 169, 237, 252, 254, 257, 259, 270, 272, 274, 309, 315, 318, 320, 321, 322, 330, 340, 342, 343, 346, 347, 348, 349, 352, 353, 355, 356, 357, 358, 359, 360, 361], "storag": [0, 1, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 72, 73, 74, 76, 77, 79, 86, 88, 90, 104, 110, 119, 120, 125, 128, 147, 168, 336, 340, 342, 344, 345, 346, 347, 349, 352, 353, 355, 357, 359], "log": [0, 3, 4, 8, 39, 187, 188, 189, 203, 204, 212, 222, 232, 233, 238, 242, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 308, 311, 312, 314, 318, 330, 338, 339, 340, 342, 343, 344, 345, 347, 348, 352, 353, 355, 356, 359, 360], "your": [0, 2, 3, 7, 8, 10, 17, 31, 86, 90, 94, 99, 104, 105, 106, 110, 166, 168, 334, 337, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 353, 355, 358, 359, 360], "own": [0, 3, 13, 14, 16, 21, 31, 86, 90, 104, 105, 106, 110, 168, 301, 342, 344, 345, 347, 353, 355, 356, 359], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 35, 38, 39, 44, 51, 54, 60, 86, 90, 104, 105, 106, 110, 125, 133, 142, 155, 160, 162, 164, 168, 169, 182, 184, 194, 198, 230, 234, 235, 237, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 318, 320, 330, 336, 340, 342, 344, 347, 350, 351, 353, 357, 358, 359, 361], "loop": [0, 8, 33, 35, 38, 86, 90, 104, 110, 176, 230, 234, 235, 237, 269, 318, 340, 342, 343, 344, 347, 349, 350, 351, 353, 354, 358, 359], "ppo": [0, 4, 8, 238, 242, 253, 266, 269, 336, 338, 342, 343, 344, 348, 349, 353, 359], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 77, 84, 85, 86, 87, 89, 90, 91, 101, 104, 110, 120, 123, 124, 130, 135, 136, 138, 145, 147, 152, 154, 156, 157, 159, 160, 166, 168, 194, 198, 330, 338, 342, 344, 345, 347, 348, 349, 353, 359, 360, 361], "introduct": [0, 339, 342, 347, 353, 355, 359, 361], "multi": [0, 7, 9, 27, 28, 31, 34, 37, 40, 41, 86, 90, 104, 108, 109, 110, 160, 168, 192, 194, 196, 198, 199, 200, 205, 206, 280, 282, 283, 284, 285, 336, 342, 343, 344, 345, 346, 347, 348, 353, 356, 359, 360], "agent": [0, 9, 27, 28, 99, 105, 106, 108, 109, 111, 112, 113, 154, 155, 203, 204, 205, 206, 208, 214, 223, 280, 336, 342, 347, 353, 356, 359], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 194, 198, 201, 202, 241, 267, 300, 301, 322, 323, 324, 327, 330, 332, 333, 334, 336, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 138, 142, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 208, 209, 212, 213, 214, 215, 221, 222, 223, 224, 226, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 295, 301, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 328, 330, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361], "pretrain": [0, 342, 353, 359], "recurr": [0, 2, 119, 192, 193, 194, 196, 198, 217, 342, 344, 348, 353, 358, 359], "dqn": [0, 2, 51, 129, 189, 232, 233, 251, 252, 254, 255, 257, 259, 260, 261, 264, 265, 267, 269, 270, 271, 272, 273, 274, 280, 325, 336, 338, 342, 348, 349, 352, 353, 359], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 82, 83, 86, 90, 100, 104, 110, 127, 136, 155, 174, 175, 189, 194, 198, 205, 206, 208, 215, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 245, 251, 252, 253, 254, 258, 259, 265, 266, 268, 269, 270, 271, 272, 274, 314, 320, 323, 324, 330, 332, 333, 338, 339, 340, 342, 344, 347, 349, 350, 353, 357, 358, 359, 360, 361], "replai": [0, 8, 15, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 119, 120, 127, 143, 147, 156, 168, 254, 255, 257, 258, 259, 265, 270, 272, 274, 315, 318, 328, 330, 336, 340, 342, 353, 356, 357, 359], "buffer": [0, 1, 3, 4, 8, 15, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 86, 90, 100, 104, 110, 119, 120, 124, 127, 142, 143, 147, 156, 159, 160, 162, 164, 168, 241, 244, 254, 255, 257, 258, 259, 265, 270, 272, 274, 315, 318, 328, 330, 336, 340, 342, 351, 353, 356, 357, 359, 361], "task": [0, 2, 3, 9, 27, 28, 39, 44, 54, 57, 84, 85, 86, 90, 93, 104, 105, 106, 107, 110, 111, 112, 142, 154, 160, 162, 164, 258, 265, 342, 343, 344, 345, 346, 347, 348, 353, 355, 356, 359, 360, 361], "specif": [0, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 90, 111, 186, 231, 318, 336, 339, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 358, 359], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 44, 62, 63, 64, 68, 71, 75, 76, 79, 81, 86, 90, 95, 104, 110, 125, 128, 129, 138, 142, 159, 160, 162, 166, 168, 202, 214, 223, 226, 227, 238, 241, 242, 243, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 322, 323, 324, 329, 330, 334, 336, 338, 340, 342, 344, 345, 346, 350, 352, 353, 355, 356, 358, 359, 361], "ddpg": [0, 182, 183, 184, 185, 254, 264, 273, 336, 338, 342, 344, 349, 353, 359], "loss": [0, 3, 8, 35, 129, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 313, 318, 325, 326, 327, 330, 339, 340, 342, 347, 349, 350, 351, 353, 356, 358, 359, 360], "trainer": [0, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 342, 343, 353, 359], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 135, 136, 138, 140, 142, 144, 145, 146, 147, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 205, 206, 209, 212, 213, 214, 215, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 275, 276, 280, 282, 283, 284, 285, 288, 301, 309, 310, 311, 312, 313, 315, 316, 317, 320, 327, 330, 338, 339, 340, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361], "packag": [0, 6, 7, 10, 116, 336, 337, 343, 358, 361], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 37, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 86, 89, 90, 104, 110, 111, 112, 120, 121, 142, 147, 164, 168, 179, 180, 192, 193, 194, 196, 197, 198, 199, 200, 206, 240, 244, 253, 255, 257, 259, 260, 266, 269, 270, 274, 282, 283, 284, 285, 291, 292, 293, 294, 296, 297, 298, 299, 327, 334, 336, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358], "node": [0, 2, 17, 18, 19, 20, 21, 33, 35, 38, 59, 327, 336, 350], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 105, 106, 136, 138, 178, 187, 188, 189, 190, 195, 202, 203, 204, 209, 212, 213, 216, 217, 220, 221, 222, 230, 231, 232, 233, 238, 242, 243, 251, 252, 253, 258, 259, 260, 265, 266, 269, 270, 271, 272, 274, 336, 340, 344, 345, 348, 350, 355, 356, 360, 361], "helper": [0, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 343, 344, 346, 356], "compos": [0, 3, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 77, 78, 86, 90, 104, 110, 120, 146, 159, 160, 166, 168, 236, 262, 272, 301, 327, 336, 343, 344, 345, 346, 350, 354, 355, 358, 360, 361], "episod": [0, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 86, 90, 104, 110, 147, 150, 155, 178, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 336, 344, 347, 352, 355, 358], "format": [0, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 77, 86, 90, 104, 105, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 301, 336, 343, 344, 347, 349, 351, 361], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 45, 46, 47, 48, 49, 86, 90, 100, 104, 110, 111, 112, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 177, 217, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 252, 255, 258, 259, 270, 272, 274, 280, 336, 356], "human": [0, 55, 336, 356], "feedback": [0, 336, 352, 360], "rlhf": [0, 39, 44, 60, 136, 336, 338], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 87, 90, 104, 110, 117, 125, 128, 137, 144, 145, 159, 160, 166, 168, 169, 178, 201, 202, 314, 322, 323, 324, 327, 330, 332, 333, 334, 336, 347], "gymlikeenv": [0, 89, 91, 336], "envmetadata": [0, 336], "vector": [0, 1, 8, 23, 26, 32, 82, 83, 95, 96, 99, 105, 106, 107, 111, 112, 127, 165, 182, 184, 192, 193, 196, 197, 200, 282, 285, 295, 296, 297, 298, 299, 336, 343, 344, 346, 354, 355, 356, 357, 361], "mask": [0, 1, 4, 22, 26, 29, 30, 32, 105, 106, 117, 143, 168, 189, 203, 204, 215, 231, 232, 233, 234, 235, 239, 240, 315, 336, 344, 346, 361], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 32, 39, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 123, 125, 127, 128, 129, 130, 133, 136, 137, 140, 144, 145, 147, 151, 154, 160, 165, 173, 176, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 194, 198, 200, 201, 202, 203, 204, 205, 213, 214, 215, 217, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 245, 246, 251, 252, 254, 255, 257, 258, 259, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 327, 330, 334, 336, 338, 339, 340, 343, 344, 345, 347, 348, 349, 350, 351, 354, 355, 357, 358, 360, 361], "record": [0, 2, 31, 86, 90, 104, 110, 136, 168, 269, 300, 301, 302, 303, 304, 305, 306, 307, 308, 330, 336, 344, 345, 348, 352], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 127, 156, 173, 226, 232, 233, 238, 239, 240, 241, 242, 243, 244, 336, 345, 346, 348, 349, 355, 356, 360, 361], "actor": [0, 3, 4, 20, 136, 178, 181, 182, 184, 189, 190, 202, 213, 215, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 280, 327, 336, 339, 344, 346, 347, 349, 352, 357, 360], "explor": [0, 1, 167, 208, 226, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 251, 314, 323, 324, 330, 336, 345, 346, 347, 349, 350, 352, 355, 356], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 86, 90, 99, 104, 110, 116, 118, 120, 121, 123, 125, 127, 128, 129, 137, 138, 142, 143, 146, 147, 148, 150, 152, 156, 157, 159, 160, 164, 166, 168, 173, 177, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 214, 215, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 311, 312, 313, 314, 315, 318, 327, 330, 336, 340, 344, 349, 350, 351, 354, 355, 356, 358, 360, 361], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 72, 86, 87, 90, 100, 103, 104, 105, 106, 108, 109, 110, 124, 125, 126, 130, 136, 138, 144, 145, 150, 151, 154, 159, 165, 168, 177, 187, 203, 204, 212, 226, 238, 242, 246, 247, 270, 276, 282, 287, 295, 304, 318, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "hook": [0, 31, 86, 90, 104, 110, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 215, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 336], "planner": [0, 178, 202, 336], "sac": [0, 259, 270, 272, 336], "redq": [0, 270, 326, 327, 336], "iql": [0, 258, 265, 336, 343, 355], "cql": [0, 252, 257, 336], "dt": [0, 237, 336, 356], "td3": [0, 274, 336], "a2c": [0, 251, 336], "dreamer": [0, 115, 190, 261, 262, 263, 336, 338], "checkpoint": [0, 336, 357], "builder": [0, 336, 344, 361], "logger": [0, 301, 303, 304, 305, 306, 307, 308, 312, 318, 330, 334, 336, 344], "_util": [0, 3, 11, 336, 352], "implement_for": [0, 3, 336], "thing": [0, 3, 7, 8, 86, 90, 104, 110, 337, 345, 346, 347, 348, 349, 350, 351, 355, 358, 361], "consid": [0, 1, 2, 3, 8, 19, 31, 34, 37, 40, 41, 62, 63, 79, 86, 90, 104, 110, 127, 166, 168, 187, 205, 220, 282, 284, 285, 337, 343, 347, 348, 349, 356, 358], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 76, 79, 86, 87, 90, 99, 101, 103, 104, 105, 106, 110, 111, 112, 117, 119, 120, 124, 125, 127, 128, 136, 137, 138, 142, 143, 150, 156, 159, 160, 162, 164, 165, 166, 168, 174, 175, 178, 189, 192, 193, 196, 197, 200, 201, 202, 203, 204, 207, 215, 221, 238, 241, 242, 244, 248, 253, 255, 260, 266, 269, 272, 275, 280, 281, 282, 283, 284, 285, 300, 301, 315, 334, 337, 338, 340, 343, 344, 345, 346, 348, 350, 351, 355, 356, 357, 358, 361], "debug": [0, 6, 8, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 337, 361], "work": [0, 2, 3, 4, 8, 11, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 71, 73, 74, 76, 81, 86, 89, 90, 91, 94, 104, 107, 110, 121, 136, 142, 162, 165, 166, 168, 179, 180, 199, 200, 233, 240, 245, 253, 266, 269, 318, 337, 338, 343, 344, 345, 346, 347, 350, 354, 355, 356, 357, 358, 360, 361], "habitat": [0, 3, 92, 337, 357], "lab": [0, 3, 84, 85, 92, 337], "mujoco": [0, 6, 8, 107, 337, 343, 345, 346], "error": [0, 1, 3, 7, 10, 11, 28, 31, 33, 35, 38, 86, 90, 104, 110, 113, 143, 168, 169, 337, 343, 345, 355, 361], "solut": [0, 2, 3, 6, 7, 9, 20, 337, 338, 340, 360], "resourc": [0, 1, 20, 92, 337, 343, 345, 355], "issu": [0, 4, 5, 8, 51, 55, 62, 63, 79, 94, 120, 143, 157, 226, 232, 233, 238, 239, 240, 241, 242, 337, 360], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 78, 79, 80, 81, 86, 90, 104, 110, 111, 112, 120, 127, 176, 203, 204, 336, 347, 354, 355, 358, 360], "search": [0, 103, 177, 344], "page": [0, 7, 308, 349], "somewhat": [1, 2, 339, 348, 361], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 126, 129, 160, 168, 189, 196, 200, 215, 232, 233, 239, 240, 269, 315, 350, 360, 361], "dataload": [1, 60, 72, 74, 344, 350, 358], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 104, 110, 120, 131, 147, 155, 156, 157, 160, 168, 192, 194, 196, 198, 212, 230, 234, 235, 237, 272, 301, 338, 344, 347, 358, 360, 361], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 99, 104, 105, 106, 110, 111, 112, 119, 131, 136, 142, 151, 159, 160, 164, 168, 198, 199, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 315, 318, 338, 339, 340, 343, 344, 345, 346, 349, 354, 355, 356, 357, 358, 360, 361], "over": [1, 2, 3, 4, 8, 31, 37, 41, 42, 44, 50, 51, 57, 72, 86, 90, 104, 110, 127, 138, 150, 157, 168, 176, 224, 244, 260, 262, 267, 288, 321, 340, 343, 344, 345, 347, 348, 349, 350, 355, 356, 361], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 38, 40, 41, 57, 64, 86, 90, 104, 105, 106, 110, 118, 124, 132, 142, 156, 159, 160, 161, 162, 164, 168, 176, 192, 194, 196, 198, 205, 241, 242, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 338, 343, 346, 355, 356, 358, 361], "static": [1, 11, 39, 44, 66, 73, 74, 92, 166, 265, 347, 356, 358], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 119, 121, 124, 125, 126, 127, 128, 136, 138, 140, 142, 144, 147, 150, 154, 155, 156, 159, 160, 162, 164, 166, 168, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 205, 206, 209, 213, 224, 231, 232, 233, 234, 235, 237, 241, 245, 246, 251, 252, 253, 254, 258, 259, 265, 266, 269, 270, 271, 272, 274, 281, 282, 283, 284, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 338, 339, 342, 343, 344, 345, 346, 348, 349, 350, 351, 354, 355, 356, 358, 359, 360, 361], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 34, 37, 40, 41, 44, 64, 68, 74, 86, 90, 92, 99, 104, 105, 106, 110, 129, 158, 168, 169, 192, 196, 206, 236, 251, 253, 266, 269, 270, 271, 339, 343, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 60, 77, 86, 89, 90, 91, 92, 104, 107, 110, 119, 125, 127, 128, 137, 145, 160, 168, 174, 175, 194, 198, 234, 237, 253, 266, 269, 272, 301, 315, 320, 332, 333, 334, 338, 343, 344, 345, 346, 350, 355, 356, 358], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 54, 55, 58, 59, 60, 86, 90, 100, 104, 110, 120, 124, 132, 142, 150, 156, 159, 160, 161, 162, 164, 168, 200, 224, 241, 242, 243, 272, 301, 340, 345, 347, 351, 358, 361], "two": [1, 2, 3, 4, 8, 10, 31, 34, 37, 39, 40, 41, 57, 68, 72, 74, 86, 90, 104, 110, 138, 142, 164, 168, 185, 192, 194, 196, 198, 218, 242, 266, 277, 314, 318, 327, 339, 343, 344, 345, 346, 347, 348, 350, 351, 354, 355, 356, 358, 360, 361], "main": [1, 2, 3, 5, 19, 21, 59, 87, 242, 318, 338, 339, 343, 344, 354, 361], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 68, 71, 72, 73, 74, 76, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 107, 110, 111, 112, 121, 123, 124, 142, 151, 154, 156, 158, 159, 160, 162, 164, 168, 176, 179, 180, 192, 194, 196, 198, 199, 200, 203, 204, 205, 206, 207, 224, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 280, 282, 283, 284, 285, 286, 290, 300, 308, 311, 321, 327, 330, 331, 334, 343, 344, 345, 346, 347, 348, 350, 355, 356, 358, 361], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 71, 72, 73, 74, 75, 76, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 113, 118, 119, 123, 125, 128, 136, 138, 140, 142, 150, 152, 158, 160, 162, 164, 166, 168, 176, 179, 180, 182, 188, 191, 194, 198, 200, 203, 204, 210, 215, 233, 239, 240, 242, 244, 245, 246, 267, 272, 279, 282, 285, 300, 314, 315, 332, 333, 338, 343, 345, 347, 348, 349, 350, 354, 356, 357, 358, 360, 361], "constructor": [1, 2, 15, 17, 18, 19, 20, 37, 44, 57, 65, 77, 86, 90, 101, 104, 110, 111, 159, 179, 180, 200, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 327, 331, 334, 338, 343, 344, 345, 347, 350, 355, 358], "iter": [1, 2, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 68, 72, 82, 83, 86, 90, 95, 96, 104, 110, 130, 138, 151, 168, 179, 180, 200, 205, 206, 219, 226, 232, 238, 239, 241, 243, 244, 246, 267, 279, 314, 317, 318, 327, 339, 340, 343, 345, 346, 350, 352, 355, 356], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 87, 90, 91, 92, 94, 95, 96, 100, 101, 104, 107, 110, 117, 160, 168, 192, 194, 196, 198, 234, 243, 244, 322, 334, 338, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 355, 358, 359, 361], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 51, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 117, 119, 132, 135, 138, 154, 155, 156, 157, 160, 165, 168, 176, 177, 178, 190, 192, 194, 196, 198, 199, 201, 202, 230, 234, 235, 237, 238, 242, 251, 261, 269, 281, 282, 283, 284, 285, 288, 289, 290, 300, 303, 309, 314, 318, 340, 344, 346, 348, 349, 351, 352, 354, 356, 357, 360], "queri": [1, 3, 13, 31, 33, 35, 38, 86, 90, 104, 110, 142, 159, 162, 166, 168, 244, 343, 349, 356, 360], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 104, 110, 143, 155, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 255, 257, 267, 282, 283, 284, 285, 286, 300, 331, 343, 344, 346, 349, 352, 356, 358, 361], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 119, 120, 127, 133, 137, 138, 149, 154, 157, 160, 166, 168, 178, 179, 180, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 206, 209, 210, 211, 214, 216, 217, 220, 221, 222, 223, 226, 230, 231, 234, 235, 237, 238, 241, 242, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 268, 269, 270, 271, 272, 274, 309, 311, 314, 318, 320, 321, 322, 332, 333, 334, 338, 343, 344, 345, 346, 347, 348, 350, 352, 355, 356, 357, 358, 361], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 44, 56, 72, 77, 86, 90, 104, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 168, 169, 192, 194, 198, 200, 207, 208, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 283, 284, 285, 315, 343, 345, 346, 350, 351, 355, 356, 358, 361], "deliv": [1, 2, 15, 57, 343, 344, 347, 350, 360], "stack": [1, 2, 3, 7, 8, 17, 19, 20, 27, 28, 33, 34, 35, 37, 38, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 86, 90, 99, 104, 105, 106, 110, 166, 192, 194, 196, 197, 198, 243, 244, 300, 309, 338, 344, 347, 354, 356, 358, 360], "user": [1, 2, 3, 5, 8, 31, 51, 53, 57, 59, 74, 86, 90, 104, 110, 121, 155, 160, 168, 169, 186, 199, 269, 272, 301, 331, 339, 340, 343, 344, 347, 349, 350, 356, 360, 361], "reset": [1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 120, 129, 132, 135, 137, 142, 150, 154, 155, 156, 157, 159, 162, 165, 166, 168, 169, 177, 192, 194, 198, 225, 237, 300, 327, 343, 344, 345, 346, 347, 350, 354, 355, 360], "reach": [1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 72, 86, 90, 104, 110, 111, 112, 154, 230, 234, 235, 237, 343, 345, 352, 355, 360, 361], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 125, 126, 128, 129, 130, 137, 138, 140, 144, 145, 147, 149, 151, 154, 156, 157, 159, 160, 166, 168, 176, 177, 178, 192, 194, 198, 202, 251, 252, 253, 254, 255, 257, 258, 259, 265, 266, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 327, 339, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 104, 105, 106, 107, 108, 109, 110, 119, 120, 121, 123, 129, 138, 145, 154, 155, 159, 160, 166, 168, 169, 176, 177, 178, 181, 186, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 210, 213, 214, 216, 217, 223, 227, 241, 247, 251, 253, 257, 266, 267, 269, 270, 271, 272, 280, 281, 282, 283, 284, 285, 286, 334, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 361], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 39, 51, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 176, 192, 194, 198, 207, 230, 232, 234, 239, 262, 272, 344, 345, 346, 347, 348, 350, 352, 355, 356, 357, 358, 361], "predefin": [1, 344, 346, 350, 358], "becaus": [1, 3, 4, 7, 33, 35, 38, 39, 51, 86, 90, 104, 110, 129, 136, 154, 159, 165, 168, 185, 199, 206, 226, 232, 233, 238, 239, 240, 241, 242, 343, 344, 346, 348, 349, 350, 354, 355, 356, 358, 361], "potenti": [1, 2, 356, 358], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 39, 82, 83, 86, 90, 95, 96, 104, 110, 138, 152, 160, 163, 168, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 209, 210, 211, 212, 213, 216, 217, 219, 221, 222, 224, 227, 230, 231, 233, 234, 237, 238, 240, 242, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 322, 339, 343, 345, 346, 347, 348, 354, 355, 357, 358], "heavi": [1, 8, 51, 358], "crucial": [1, 2, 230, 234, 235, 237, 258, 265, 267, 343, 344, 345, 346, 347, 349, 351, 355, 356, 361], "configur": [1, 8, 20, 21, 39, 136, 181, 186, 213, 267, 269, 327, 338, 343, 344, 345, 349, 355, 356], "hyperparamet": [1, 71, 168, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 343, 356, 358], "appropri": [1, 3, 4, 7, 61, 69, 77, 78, 80, 81, 104, 110, 129, 331, 334, 343, 351, 358], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 330, 331, 332, 333, 334, 338, 339, 343, 346, 348, 352, 355, 356, 357, 360], "take": [1, 2, 3, 8, 22, 39, 54, 82, 83, 86, 90, 95, 96, 104, 110, 123, 154, 157, 159, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 235, 236, 237, 238, 240, 245, 248, 250, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 320, 338, 340, 343, 344, 345, 347, 348, 349, 355, 356, 358, 361], "consider": [1, 2, 3, 8, 344, 355, 358], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 105, 106, 110, 111, 112, 125, 128, 155, 160, 168, 177, 179, 180, 194, 198, 200, 246, 251, 252, 253, 254, 255, 257, 259, 260, 266, 267, 269, 270, 271, 272, 274, 280, 282, 285, 343, 344, 345, 347, 355, 356, 361], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 73, 74, 75, 77, 84, 85, 86, 89, 90, 91, 92, 99, 100, 104, 105, 106, 110, 111, 112, 120, 123, 124, 125, 126, 129, 130, 132, 136, 138, 143, 144, 145, 147, 150, 151, 154, 155, 157, 159, 160, 165, 166, 168, 169, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 206, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 238, 240, 241, 242, 245, 248, 251, 253, 259, 264, 266, 267, 269, 270, 271, 273, 281, 282, 283, 284, 285, 286, 301, 303, 313, 314, 315, 318, 330, 332, 333, 334, 338, 340, 343, 344, 345, 346, 348, 350, 351, 354, 355, 356, 357, 358, 360, 361], "occur": [1, 8, 14, 27, 28, 51, 86, 90, 92, 104, 110, 121, 138, 143, 165, 177, 226, 232, 233, 238, 239, 240, 241, 242, 262, 358, 361], "serial": [1, 2, 3, 31, 86, 90, 104, 110, 166, 168], "parallel": [1, 3, 8, 86, 89, 90, 91, 104, 105, 106, 110, 160, 165, 169, 251, 331, 332, 333, 334, 344, 345, 355], "syncdatacollector": [1, 2, 13, 14, 16, 17, 18, 19, 20, 31, 120, 147, 330, 333, 336, 343, 344, 345, 346, 350, 352, 355, 358], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 99, 100, 103, 104, 105, 106, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 332, 333, 334, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 358, 361], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 35, 38, 44, 54, 59, 60, 87, 101, 104, 110, 166, 332, 333, 334, 343, 345, 360, 361], "multisyncdatacollector": [1, 17, 18, 19, 20, 333, 336, 345, 350, 360], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 73, 74, 99, 105, 106, 192, 196, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 338, 340, 345, 348, 358, 360], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 66, 73, 74, 82, 83, 84, 85, 89, 91, 92, 94, 95, 96, 101, 102, 104, 107, 166, 168, 205, 237, 320, 336, 338, 343, 347, 351, 355, 356], "aggreg": [1, 3, 51, 77, 177, 179, 180, 182, 183, 244], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 87, 90, 104, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 137, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 176, 177, 192, 194, 196, 198, 200, 205, 215, 231, 233, 234, 240, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 282, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 320, 338, 344, 346, 347, 348, 351, 352, 356, 357, 360, 361], "final": [1, 2, 3, 4, 20, 33, 35, 38, 39, 165, 192, 194, 196, 198, 205, 230, 234, 235, 236, 237, 243, 282, 314, 338, 343, 344, 345, 351, 352, 355, 356, 361], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 332, 336, 343, 344, 345, 350, 360], "sever": [1, 2, 8, 29, 31, 44, 54, 86, 90, 104, 110, 121, 123, 160, 168, 269, 343, 345, 351, 352, 358, 361], "batch": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 110, 111, 112, 120, 132, 138, 140, 143, 147, 156, 160, 161, 165, 166, 177, 187, 192, 193, 194, 196, 197, 198, 199, 203, 204, 205, 206, 207, 212, 214, 220, 224, 237, 241, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 312, 315, 316, 317, 318, 320, 332, 333, 334, 340, 344, 345, 346, 347, 350, 352, 354, 355, 357, 360, 361], "gather": [1, 3, 17, 19, 20, 44, 60, 62, 63, 79, 143, 204, 212, 281, 322, 337, 344, 345, 346, 350, 355, 356, 358, 361], "continu": [1, 9, 24, 45, 74, 86, 90, 104, 105, 106, 110, 111, 112, 173, 182, 183, 184, 185, 237, 244, 251, 252, 259, 265, 269, 270, 271, 272, 273, 274, 282, 287, 295, 338, 343, 345, 346, 348, 355, 356, 358, 360, 361], "concomitantli": 1, "network": [1, 4, 8, 31, 86, 90, 99, 104, 105, 106, 110, 168, 179, 180, 182, 183, 184, 185, 188, 190, 191, 196, 200, 205, 206, 208, 210, 211, 214, 216, 217, 218, 223, 227, 228, 229, 231, 241, 245, 252, 253, 254, 255, 257, 258, 259, 260, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 278, 280, 282, 283, 284, 285, 286, 329, 330, 338, 339, 340, 349, 352, 354, 356, 361], "impli": [1, 361], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 39, 66, 68, 71, 82, 83, 86, 90, 104, 108, 109, 110, 124, 142, 156, 159, 160, 162, 164, 168, 192, 193, 194, 196, 197, 198, 205, 208, 241, 251, 252, 253, 259, 262, 272, 320, 329, 338, 340, 343, 344, 345, 346, 354, 356, 358, 360], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 33, 35, 38, 53, 59, 86, 89, 90, 91, 92, 104, 107, 110, 136, 138, 151, 160, 161, 166, 168, 169, 200, 205, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 360, 361], "slightli": [1, 51, 338, 339, 346, 356, 357, 358, 361], "lag": [1, 343, 344, 345], "therefor": [1, 2, 3, 7, 34, 37, 40, 41, 58, 59, 86, 90, 104, 110, 147, 269, 280, 349, 361], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 99, 100, 103, 104, 105, 106, 110, 117, 120, 129, 136, 142, 147, 150, 154, 155, 157, 159, 161, 164, 165, 176, 177, 192, 193, 196, 197, 199, 203, 204, 205, 230, 234, 235, 237, 238, 241, 242, 250, 251, 252, 253, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 339, 340, 343, 344, 345, 347, 354, 355, 356, 358, 361], "asynchron": [1, 9, 14, 20, 31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 251, 332, 343, 344, 345], "off": [1, 2, 4, 195, 222, 232, 272, 314, 323, 338, 340, 343, 344, 345, 348, 349, 355, 357, 361], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 79, 86, 90, 104, 105, 106, 110, 111, 125, 128, 132, 138, 155, 160, 165, 168, 169, 189, 192, 194, 196, 198, 206, 207, 227, 229, 231, 233, 239, 251, 258, 260, 265, 269, 314, 338, 340, 343, 344, 345, 346, 347, 348, 350, 351, 355, 356, 357, 358, 361], "remot": [1, 2, 17, 18, 19, 20, 104, 110, 361], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 39, 77, 82, 83, 86, 90, 92, 93, 95, 96, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 123, 125, 128, 129, 130, 136, 140, 144, 145, 150, 151, 152, 154, 155, 157, 168, 169, 178, 194, 198, 202, 237, 251, 301, 322, 338, 343, 345, 346, 348, 349, 350, 351, 352, 357, 358, 360], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 111, 112, 151, 270, 282, 283, 284, 285, 286, 339, 343, 345, 348, 349, 350], "synchronis": [1, 87, 355], "either": [1, 2, 5, 21, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 86, 90, 104, 110, 154, 155, 168, 247, 274, 305, 340, 343, 344, 346, 357, 358, 360, 361], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 343, 355, 360], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 124, 127, 132, 135, 136, 137, 138, 142, 143, 145, 146, 149, 151, 154, 156, 158, 159, 160, 161, 162, 164, 166, 168, 169, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 221, 222, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 282, 283, 284, 285, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 308, 311, 312, 314, 315, 318, 334, 338, 339, 340, 343, 344, 345, 346, 347, 348, 351, 352, 354, 355, 356, 357, 358, 360, 361], "second": [1, 3, 8, 51, 54, 77, 192, 194, 196, 198, 233, 253, 266, 269, 272, 303, 317, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 128, 129, 130, 136, 140, 141, 142, 144, 145, 147, 151, 154, 156, 158, 159, 160, 162, 164, 168, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 205, 206, 207, 208, 213, 214, 215, 223, 226, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 315, 320, 327, 328, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 44, 45, 46, 86, 90, 104, 110, 132, 136, 159, 168, 188, 189, 193, 197, 209, 227, 228, 229, 232, 233, 236, 241, 247, 251, 253, 254, 255, 260, 266, 269, 271, 280, 281, 282, 283, 284, 285, 318, 327, 336, 340, 343, 344, 345, 346, 347, 348, 354, 355, 356, 361], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 85, 86, 87, 90, 100, 104, 110, 120, 138, 156, 159, 160, 166, 168, 173, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 232, 233, 234, 237, 238, 239, 240, 242, 243, 244, 245, 248, 255, 258, 259, 267, 280, 282, 283, 284, 285, 301, 305, 314, 322, 323, 324, 327, 330, 332, 333, 338, 339, 340, 343, 345, 346, 347, 348, 356, 358, 361], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 128, 129, 130, 140, 142, 144, 145, 147, 151, 154, 156, 159, 160, 162, 164, 168, 173, 176, 178, 188, 192, 193, 194, 196, 197, 198, 202, 207, 208, 214, 215, 223, 226, 227, 228, 229, 231, 232, 233, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 315, 327, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "slower": [1, 199], "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 57, 66, 71, 73, 74, 76, 77, 86, 90, 94, 104, 107, 110, 145, 185, 194, 196, 198, 200, 209, 224, 226, 230, 232, 241, 246, 267, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 337, 339, 343, 344, 345, 347, 349, 350, 355, 356, 358, 360, 361], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 120, 123, 125, 126, 127, 128, 137, 138, 142, 147, 150, 153, 155, 156, 157, 159, 160, 161, 164, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 206, 209, 210, 211, 212, 213, 215, 216, 217, 219, 224, 226, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 245, 246, 248, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 267, 269, 270, 271, 272, 273, 274, 280, 282, 283, 284, 285, 289, 290, 303, 311, 313, 314, 318, 322, 327, 334, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 361], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 92, 93, 94, 104, 110, 124, 136, 141, 142, 156, 159, 160, 162, 164, 168, 192, 193, 196, 197, 241, 310, 343, 344, 345, 346, 355, 357, 361], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 42, 68, 82, 83, 95, 96, 104, 110, 121, 123, 127, 137, 147, 150, 154, 159, 166, 192, 196, 198, 199, 205, 207, 208, 226, 232, 238, 239, 241, 242, 245, 253, 259, 266, 269, 270, 274, 288, 327, 334, 338, 340, 343, 344, 345, 347, 349, 350, 355, 356, 358, 360], "infer": [1, 104, 110, 120, 166, 194, 198, 207, 231, 257, 343, 345, 350, 352, 358], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 51, 54, 66, 73, 74, 82, 83, 84, 85, 86, 89, 90, 95, 96, 100, 101, 102, 104, 110, 137, 138, 160, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 243, 244, 245, 248, 272, 301, 308, 314, 332, 333, 334, 337, 340, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360], "dispatch": [1, 17, 18, 19, 20, 224, 301, 343], "avail": [1, 3, 4, 6, 20, 34, 37, 40, 41, 51, 54, 59, 66, 72, 73, 74, 84, 85, 94, 104, 105, 106, 107, 111, 112, 119, 136, 189, 215, 238, 242, 267, 301, 332, 333, 338, 343, 344, 345, 346, 347, 348, 355, 356, 358, 361], "speed": [1, 2, 4, 8, 26, 86, 90, 104, 110, 339, 343, 344, 345, 346, 355, 356, 358], "avoid": [1, 2, 31, 62, 63, 79, 86, 90, 104, 110, 116, 160, 166, 168, 226, 241, 246, 253, 266, 269, 272, 321, 345, 355], "oom": [1, 33, 35, 38, 62, 63, 79], "choic": [1, 2, 53, 59, 104, 209, 338, 339, 343, 344, 349, 355], "size": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 121, 125, 128, 129, 130, 132, 140, 142, 144, 145, 147, 151, 153, 154, 156, 158, 159, 160, 161, 164, 166, 168, 173, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 212, 213, 214, 215, 216, 217, 220, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 265, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 301, 309, 315, 327, 338, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 360, 361], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 34, 37, 39, 40, 41, 44, 51, 54, 55, 57, 58, 59, 62, 63, 68, 77, 79, 86, 87, 88, 90, 99, 101, 104, 105, 106, 110, 111, 125, 128, 145, 159, 161, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 206, 207, 209, 210, 211, 213, 214, 216, 217, 219, 223, 224, 226, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 253, 266, 267, 269, 282, 283, 284, 285, 286, 315, 332, 333, 334, 338, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 358, 361], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 43, 44, 45, 46, 57, 65, 74, 86, 90, 94, 103, 104, 110, 120, 132, 161, 166, 177, 194, 198, 231, 251, 253, 254, 258, 259, 265, 266, 269, 270, 271, 272, 274, 282, 283, 284, 285, 338, 339, 344, 355], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 77, 79, 86, 90, 104, 110, 165, 166, 168, 178, 199, 202, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 308, 327, 336, 340, 343, 345, 346, 348, 350, 352, 355, 357, 361], "while": [1, 2, 3, 7, 8, 31, 86, 90, 104, 110, 147, 160, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 258, 265, 266, 269, 272, 338, 343, 345, 346, 348, 350, 351, 355, 356, 357, 358, 360], "wait": [1, 19, 20, 21, 346, 356], "also": [1, 2, 3, 8, 9, 11, 22, 31, 37, 40, 51, 54, 55, 57, 58, 59, 60, 62, 63, 68, 77, 79, 86, 90, 104, 105, 106, 110, 111, 112, 116, 119, 120, 127, 138, 145, 147, 150, 151, 154, 156, 160, 168, 179, 180, 192, 196, 217, 238, 243, 244, 245, 251, 252, 254, 255, 257, 258, 259, 265, 269, 272, 282, 289, 290, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 358, 361], "impact": [1, 57, 125, 128, 251, 253, 266, 269, 271, 344, 346, 355], "memori": [1, 3, 8, 20, 26, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 86, 87, 90, 94, 104, 110, 120, 124, 142, 156, 159, 160, 162, 164, 166, 168, 196, 197, 241, 334, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "manag": [1, 8, 278, 279, 282, 283, 284, 285, 314, 349], "kei": [1, 2, 3, 7, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 65, 66, 68, 71, 73, 74, 77, 86, 90, 95, 96, 104, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 142, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 176, 177, 178, 188, 189, 194, 198, 201, 202, 215, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 301, 312, 313, 314, 316, 317, 318, 322, 327, 339, 340, 343, 345, 346, 347, 349, 354, 355, 356, 358, 360, 361], "control": [1, 3, 5, 8, 15, 84, 85, 86, 90, 99, 104, 105, 106, 110, 127, 176, 182, 183, 184, 185, 194, 198, 201, 202, 217, 224, 237, 241, 242, 243, 251, 253, 266, 269, 273, 282, 287, 295, 338, 340, 343, 344, 345, 347, 348, 349, 355, 356, 358], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 71, 72, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 111, 112, 120, 121, 125, 128, 133, 136, 137, 138, 142, 143, 154, 156, 157, 159, 160, 162, 168, 169, 188, 192, 193, 195, 196, 197, 198, 203, 204, 205, 222, 227, 228, 229, 231, 238, 241, 242, 244, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 277, 280, 282, 283, 284, 285, 301, 309, 313, 327, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 354, 355, 356, 357, 358, 361], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 344, 355], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 35, 37, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 68, 71, 86, 90, 104, 105, 106, 110, 120, 123, 125, 128, 133, 140, 152, 160, 168, 194, 198, 206, 282, 284, 285, 314, 318, 339, 343, 344, 345, 346, 348, 349, 350, 352, 355, 356, 358, 361], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 237, 343, 350, 361], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 53, 71, 77, 82, 83, 86, 90, 95, 96, 104, 110, 208, 269, 282, 283, 284, 285, 286, 300, 327, 337, 338, 340, 343, 344, 345, 346, 348, 350, 351, 355, 358, 361], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 33, 35, 38, 42, 44, 53, 57, 72, 73, 76, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 120, 125, 127, 128, 133, 137, 138, 159, 160, 166, 168, 179, 180, 193, 194, 197, 198, 200, 203, 204, 205, 206, 231, 237, 245, 272, 343, 344, 345, 347, 348, 350, 354, 355, 357, 358, 361], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 118, 119, 120, 121, 125, 127, 128, 129, 132, 136, 137, 138, 140, 142, 143, 147, 149, 151, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 168, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 220, 221, 222, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 327, 330, 334, 340, 343, 344, 345, 346, 348, 357, 358, 360, 361], "behaviour": [1, 3, 20, 57, 90, 121, 125, 128, 138, 143, 155, 176, 194, 195, 198, 222, 314, 338, 344, 358], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 86, 90, 104, 110, 120, 125, 128, 138, 156, 157, 198, 238, 242, 243, 244, 320, 332, 333, 338, 343, 344, 347, 348, 355, 356, 361], "choos": [1, 99, 194, 198, 269, 336, 338, 339, 343, 344, 345, 355, 358], "follow": [1, 2, 3, 6, 7, 8, 31, 33, 35, 36, 38, 39, 51, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 86, 90, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 136, 142, 162, 168, 179, 180, 192, 194, 196, 198, 200, 233, 239, 240, 250, 251, 252, 253, 254, 258, 259, 265, 266, 269, 270, 271, 272, 274, 301, 318, 327, 338, 339, 340, 343, 344, 345, 346, 349, 350, 354, 355, 356, 358, 360, 361], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 321, 343, 345, 360], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 120, 133, 168, 230, 234, 237, 300, 301, 303, 311, 314, 318, 321, 322, 343, 344, 345, 346, 348, 355, 358, 360, 361], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 67, 68, 72, 75, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 107, 110, 120, 123, 124, 127, 132, 135, 136, 138, 140, 141, 142, 150, 152, 156, 159, 160, 162, 164, 165, 166, 168, 169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 206, 207, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 235, 237, 240, 241, 242, 244, 245, 248, 253, 266, 269, 272, 281, 282, 283, 284, 285, 300, 314, 340, 344, 345, 346, 347, 348, 350, 351, 355, 356, 358, 360, 361], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 120, 147, 321, 343, 344, 345, 346, 350, 352, 355, 358, 360], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 37, 39, 40, 51, 53, 54, 57, 68, 71, 73, 74, 77, 86, 87, 90, 104, 105, 106, 110, 111, 112, 142, 147, 150, 154, 155, 156, 157, 164, 166, 168, 189, 192, 193, 194, 196, 198, 205, 206, 210, 214, 215, 223, 230, 232, 233, 234, 240, 244, 288, 291, 292, 293, 294, 296, 297, 298, 299, 314, 315, 332, 333, 338, 343, 344, 345, 346, 348, 349, 350, 352, 355, 356, 357, 358, 360, 361], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 321, 343, 344, 352], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 45, 46, 57, 59, 67, 77, 86, 90, 100, 104, 110, 127, 137, 138, 156, 169, 192, 194, 196, 198, 234, 238, 241, 242, 252, 270, 314, 322, 338, 343, 344, 345, 346, 347, 348, 350, 356, 357, 358, 360, 361], "rand_step": [1, 3, 84, 85, 86, 87, 89, 90, 91, 97, 98, 100, 101, 102, 104, 110, 135, 156, 166, 356, 360, 361], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 343], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 53, 55, 57, 58, 59, 343, 344, 345], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 40, 51, 53, 54, 55, 57, 58, 59, 65, 66, 73, 74, 77, 82, 83, 86, 90, 95, 96, 104, 110, 143, 154, 159, 168, 178, 198, 202, 237, 269, 282, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 309, 336, 339, 343, 344, 345, 346, 347, 350, 352, 356, 360, 361], "pad": [1, 2, 3, 22, 36, 42, 53, 55, 57, 58, 59, 120, 179, 180, 182, 183, 198, 199, 203, 204, 205, 315], "along": [1, 2, 3, 22, 27, 28, 33, 35, 38, 39, 44, 53, 55, 57, 58, 59, 63, 66, 68, 73, 74, 77, 79, 119, 120, 121, 138, 140, 143, 150, 158, 198, 200, 203, 204, 208, 232, 238, 241, 242, 267, 338, 343, 344, 346, 347, 349, 355, 356, 358], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 61, 65, 66, 69, 77, 78, 80, 81, 86, 90, 104, 110, 119, 120, 124, 142, 155, 156, 158, 159, 160, 162, 164, 168, 201, 241, 250, 260, 318, 337, 344, 345, 354, 355, 356, 358, 361], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 66, 73, 74, 90, 143, 154, 177, 203, 204, 230, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 340, 346], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 40, 55, 84, 85, 86, 90, 104, 110, 111, 112, 133, 143, 166, 168, 189, 203, 204, 215, 232, 233, 239, 240, 242, 277, 282, 315, 343, 345, 346, 347, 348, 349, 355], "valid": [1, 2, 3, 22, 33, 35, 36, 44, 60, 77, 113, 143, 160, 168, 179, 180, 200, 203, 204, 230, 237, 266, 282, 283, 284, 285, 315, 340, 361], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 314, 336, 343, 344], "strategi": [1, 2, 15, 57, 71, 99, 204, 212, 234, 338, 340, 343, 344, 348, 355, 358], "reset_when_don": [1, 13, 14, 15, 16], "These": [1, 2, 7, 31, 39, 54, 59, 86, 90, 104, 110, 111, 142, 164, 168, 338, 339, 343, 345, 355, 356, 358, 361], "tool": [1, 2, 3, 5, 346, 347, 356, 358, 361], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 86, 89, 90, 104, 110, 114, 116, 199, 340, 343, 345, 346, 347, 350, 351, 356], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 336], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 336], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 119, 121, 124, 125, 126, 127, 128, 129, 130, 136, 138, 140, 142, 144, 145, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 168, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 309, 316, 317, 327, 330, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "multiprocess": [1, 2, 3, 17, 18, 19, 51, 59, 87, 88, 104, 110, 166, 343, 344, 345, 346, 355, 356, 357, 361], "synchron": [1, 13, 18, 20, 101, 332, 333, 344, 345], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 86, 90, 101, 104, 110, 125, 128, 155, 160, 166, 168, 170, 174, 175, 187, 194, 195, 198, 212, 220, 221, 222, 238, 242, 267, 314, 343, 344, 346, 355, 360, 361], "find": [1, 4, 6, 7, 17, 18, 19, 34, 36, 42, 73, 74, 196, 230, 237, 312, 316, 343, 344, 348, 349, 355], "folder": [1, 2, 111, 344], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 51, 57, 66, 73, 77, 86, 90, 104, 110, 143, 243, 244, 309, 318, 338, 343, 344, 345, 350, 354, 360, 361], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 87, 89, 90, 91, 92, 100, 104, 105, 106, 110, 111, 112, 113, 119, 120, 123, 124, 125, 126, 128, 131, 136, 137, 138, 142, 150, 152, 156, 157, 159, 160, 162, 164, 166, 168, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 206, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 241, 242, 244, 245, 248, 262, 267, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 313, 318, 321, 332, 333, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 360, 361], "variou": [1, 2, 3, 194, 198, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 275, 280, 301, 332, 333, 343, 344, 345, 347, 348, 349, 351, 355, 358, 361], "machin": [1, 2, 7, 17, 18, 19, 31, 56, 94, 355], "One": [1, 2, 4, 8, 30, 32, 44, 77, 82, 83, 120, 147, 162, 212, 230, 241, 245, 273, 277, 305, 343, 344, 358, 361], "wonder": 1, "why": [1, 2, 3, 356, 361], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 77, 86, 90, 101, 105, 106, 107, 110, 331, 336, 343, 344, 345, 347, 354, 360, 361], "instead": [1, 4, 7, 8, 11, 26, 31, 57, 86, 90, 104, 110, 132, 156, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 251, 253, 255, 258, 259, 260, 265, 266, 269, 270, 271, 272, 280, 282, 286, 290, 334, 338, 347, 348, 352, 356, 358, 361], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 51, 53, 55, 57, 58, 59, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 124, 125, 126, 128, 142, 147, 151, 155, 156, 158, 159, 160, 162, 164, 165, 168, 192, 195, 196, 200, 205, 217, 221, 222, 241, 244, 250, 251, 252, 254, 255, 257, 258, 259, 265, 267, 269, 270, 271, 272, 274, 320, 332, 333, 334, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361], "lower": [1, 2, 3, 20, 24, 123, 166, 216, 217, 245, 345, 356], "io": [1, 51, 57, 95, 96, 101, 196, 197], "footprint": [1, 2, 358], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 33, 35, 75, 77, 86, 90, 94, 99, 104, 105, 106, 110, 120, 123, 132, 142, 145, 157, 160, 164, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 207, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 239, 240, 241, 245, 248, 250, 259, 270, 271, 272, 274, 281, 286, 301, 318, 334, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 358, 360, 361], "commun": [1, 2, 3, 104, 337, 345, 361], "yet": [1, 82, 83, 95, 96, 357], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 47, 48, 49, 53, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 107, 110, 111, 112, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 173, 177, 189, 215, 217, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 327, 338, 343, 344, 345, 346, 347, 348, 354, 355, 360], "plai": [1, 3, 105, 106, 120, 344, 345, 349, 358, 361], "role": [1, 3, 344, 349, 361], "opposit": 1, "direct": [1, 2, 31, 86, 90, 104, 110, 168, 192, 196, 267, 344, 349], "sinc": [1, 2, 3, 4, 5, 7, 31, 34, 37, 40, 41, 51, 59, 74, 77, 86, 90, 104, 105, 106, 107, 110, 168, 169, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 232, 233, 234, 235, 237, 239, 240, 245, 248, 343, 344, 345, 346, 347, 348, 349, 356, 357, 358, 360, 361], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 58, 59, 101, 282, 283, 284, 285, 346, 355], "share": [1, 3, 6, 8, 22, 33, 35, 38, 62, 63, 64, 75, 76, 79, 87, 104, 110, 166, 194, 198, 205, 206, 227, 228, 229, 251, 253, 254, 258, 259, 265, 266, 269, 270, 271, 272, 274, 334, 336, 338, 345, 346, 352, 354, 355, 360, 361], "among": [1, 3, 105, 106, 355], "achiev": [1, 2, 3, 4, 31, 86, 90, 94, 104, 110, 155, 168, 177, 315, 340, 343, 344, 345, 346, 355, 356, 358, 361], "prohibit": [1, 3, 77], "slow": [1, 3, 4, 33, 35, 38], "compar": [1, 3, 57, 77, 314, 339, 343, 345, 348, 349, 355, 358, 361], "gpu": [1, 7, 8, 31, 62, 63, 79, 86, 90, 94, 104, 110, 168, 343, 345, 346, 355, 361], "nativ": [1, 7, 9, 55, 86, 90, 104, 110, 120, 301, 346, 358], "driver": [1, 7], "practic": [1, 2, 3, 4, 5, 8, 51, 195, 221, 222, 250, 337, 343, 344, 345, 346, 349, 355, 357, 361], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 40, 51, 65, 66, 77, 82, 83, 90, 138, 166, 178, 187, 190, 192, 194, 196, 198, 199, 202, 213, 220, 230, 238, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 272, 274, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 338, 339, 343, 344, 345, 348, 355, 356, 358, 360, 361], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 71, 73, 74, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 121, 123, 124, 142, 151, 156, 158, 159, 160, 162, 164, 168, 194, 198, 199, 203, 204, 205, 226, 230, 231, 232, 234, 235, 237, 238, 239, 241, 242, 245, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 268, 269, 270, 271, 272, 274, 276, 280, 282, 283, 284, 285, 286, 290, 308, 331, 343, 344, 345, 348, 351, 355, 358, 361], "build": [1, 3, 7, 22, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 91, 92, 95, 96, 101, 104, 107, 110, 111, 112, 147, 166, 168, 178, 194, 198, 202, 236, 238, 242, 318, 325, 326, 328, 329, 338, 340, 345, 346, 348, 349, 350, 351, 355, 356, 357, 360, 361], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 86, 90, 100, 104, 110, 124, 127, 138, 142, 156, 159, 160, 162, 164, 168, 176, 178, 189, 190, 192, 196, 202, 215, 219, 226, 232, 233, 234, 237, 240, 241, 242, 243, 244, 246, 250, 254, 255, 257, 281, 282, 283, 284, 285, 286, 288, 310, 314, 330, 338, 340, 343, 344, 345, 347, 348, 349, 350, 351, 355, 356, 361], "mani": [1, 2, 3, 4, 37, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107, 251, 253, 259, 266, 269, 270, 274, 338, 343, 344, 345, 347, 348, 350, 352, 355, 356, 358, 361], "eg": [1, 2, 3, 11, 33, 35, 38, 62, 63, 64, 75, 76, 79, 84, 85, 86, 89, 90, 91, 92, 94, 104, 107, 110, 127, 154, 160, 205, 231, 301], "gymnasium": [1, 3, 5, 11, 86, 89, 90, 91, 97, 98, 104, 110, 114, 116, 130, 151, 154, 165, 344, 345, 356, 360], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 33, 34, 35, 38, 40, 41, 44, 51, 53, 55, 57, 58, 59, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 79, 86, 89, 90, 91, 100, 104, 110, 123, 126, 127, 144, 151, 158, 162, 166, 168, 192, 194, 198, 208, 209, 231, 233, 234, 240, 242, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 315, 327, 332, 333, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 357, 360, 361], "warn": [1, 3, 230, 234, 235, 237, 344], "quickli": [1, 3, 344, 355, 361], "becom": [1, 3, 4, 20, 192, 196, 355, 361], "quit": [1, 3, 51, 86, 90, 104, 110, 338, 343, 344, 345, 348, 355, 361], "annoi": [1, 3], "By": [1, 2, 3, 32, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 107, 110, 111, 112, 224, 242, 267, 314, 334, 343, 357, 358, 361], "filter": [1, 2, 3, 4, 44, 66, 73, 74, 251, 252, 254, 258, 259, 265, 269, 270, 272, 347], "out": [1, 2, 3, 4, 5, 9, 20, 31, 44, 53, 57, 66, 73, 74, 86, 90, 104, 105, 106, 110, 156, 168, 169, 192, 193, 196, 203, 204, 207, 208, 226, 231, 232, 233, 237, 238, 239, 240, 241, 242, 278, 279, 340, 343, 344, 345, 346, 347, 348, 350, 355, 356, 358, 360, 361], "still": [1, 2, 3, 9, 57, 82, 83, 86, 90, 95, 96, 104, 110, 230, 266, 267, 343, 344, 346, 354, 356, 358, 361], "wish": [1, 3, 13, 14, 16, 57, 116, 349, 358], "displai": [1, 3, 7, 86, 90, 104, 110, 318, 340, 343, 344, 355, 356], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 121, 124, 125, 128, 129, 130, 132, 135, 136, 137, 138, 140, 142, 143, 144, 145, 147, 149, 151, 154, 156, 158, 159, 160, 161, 162, 164, 166, 168, 169, 176, 177, 178, 179, 180, 182, 188, 189, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 214, 215, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 280, 282, 283, 284, 285, 291, 292, 293, 294, 296, 297, 298, 299, 308, 311, 312, 314, 315, 316, 318, 327, 334, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "central": [2, 205, 343, 344, 347, 355, 358], "part": [2, 4, 8, 31, 39, 51, 54, 55, 57, 58, 59, 82, 86, 90, 95, 104, 110, 119, 138, 147, 150, 168, 194, 198, 246, 309, 334, 343, 345, 346, 352, 356, 361], "algorithm": [2, 3, 8, 9, 100, 251, 269, 270, 272, 336, 339, 340, 343, 344, 345, 346, 349, 350, 351, 355, 357, 358], "implement": [2, 3, 9, 11, 13, 14, 15, 31, 75, 86, 90, 100, 101, 104, 110, 124, 125, 126, 130, 133, 136, 144, 145, 151, 154, 159, 166, 168, 179, 192, 193, 194, 195, 196, 197, 198, 220, 221, 222, 251, 252, 256, 257, 258, 265, 267, 268, 269, 271, 272, 309, 323, 327, 338, 340, 343, 344, 345, 346, 348, 349, 350, 355, 356, 360], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 34, 37, 39, 40, 41, 51, 53, 57, 59, 72, 74, 77, 82, 83, 86, 87, 90, 94, 95, 96, 104, 110, 120, 136, 142, 145, 162, 165, 166, 168, 169, 178, 198, 199, 205, 206, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "give": [2, 3, 7, 40, 54, 86, 90, 100, 104, 110, 120, 337, 339, 343, 344, 355, 356, 357, 360], "abil": [2, 267, 356, 358], "panel": [2, 345], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 53, 59, 77, 120, 129, 194, 198, 258, 265, 272, 275, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "includ": [2, 3, 4, 7, 9, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 79, 86, 90, 100, 104, 110, 155, 160, 166, 168, 267, 272, 321, 338, 340, 343, 344, 345, 346, 355, 356, 358, 361], "almost": [2, 346], "ani": [2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 101, 104, 105, 106, 110, 111, 112, 117, 132, 142, 143, 147, 160, 162, 166, 168, 169, 177, 179, 180, 186, 200, 208, 231, 241, 242, 243, 244, 251, 252, 254, 255, 257, 258, 259, 265, 267, 269, 270, 271, 272, 274, 282, 284, 285, 306, 318, 337, 343, 344, 345, 348, 349, 355, 356, 358, 360, 361], "physic": [2, 6, 7, 104, 107, 340, 343, 355, 356], "theori": 2, "t": [2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 72, 77, 86, 87, 89, 90, 101, 102, 104, 110, 120, 125, 128, 129, 142, 146, 147, 155, 157, 164, 166, 168, 169, 176, 192, 196, 232, 237, 241, 273, 282, 283, 284, 285, 286, 288, 308, 318, 320, 334, 337, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "crude": 2, "made": [2, 3, 31, 37, 51, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 168, 237, 255, 280, 343, 344, 346, 355, 357, 358], "replaybuff": [2, 34, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 80, 120, 143, 147, 168, 255, 260, 280, 328, 330, 336, 345, 350, 352, 355, 357, 358, 360], "liststorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 358], "veri": [2, 3, 95, 96, 344, 347, 350, 356, 358, 360, 361], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 32, 51, 57, 66, 68, 71, 73, 74, 82, 83, 86, 90, 95, 96, 104, 110, 145, 168, 176, 200, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 275, 277, 280, 338, 340, 343, 345, 346, 347, 348, 349, 355, 356, 358, 361], "complex": [2, 31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 343, 344, 347, 348], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 132, 135, 138, 140, 142, 143, 144, 145, 147, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 251, 252, 254, 255, 257, 258, 259, 262, 263, 265, 267, 269, 270, 271, 272, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 327, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 360, 361], "contigu": [2, 8, 54, 57, 58, 86, 90, 104, 110, 173, 345, 355, 356, 358, 360, 361], "tensorstorag": [2, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 350, 358], "lazytensorstorag": [2, 34, 37, 40, 41, 65, 77, 147, 168, 345, 352, 355, 358], "lazymemmapstorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 119, 120, 343, 344, 346, 350, 357, 358], "citizen": 2, "pytre": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 76, 77, 84, 85, 86, 90, 104, 110, 117, 127, 129, 135, 136, 138, 143, 151, 168, 176, 182, 188, 189, 194, 197, 198, 199, 200, 209, 213, 214, 215, 232, 233, 239, 240, 245, 251, 252, 254, 258, 259, 261, 265, 267, 269, 270, 271, 272, 274, 282, 283, 284, 285, 301, 312, 314, 316, 325, 326, 358], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 35, 38, 44, 66, 71, 73, 74, 86, 89, 90, 91, 104, 110, 111, 112, 156, 160, 168, 238, 242, 272, 314, 332, 333, 334, 340, 344, 345, 347, 349, 356, 361], "nest": [2, 3, 25, 27, 31, 33, 35, 37, 38, 47, 62, 63, 68, 79, 86, 89, 90, 91, 104, 110, 120, 154, 157, 168, 177, 282, 283, 284, 285, 286, 340, 344, 345, 355, 356, 358, 360], "construct": [2, 5, 31, 34, 37, 40, 41, 51, 68, 86, 89, 90, 104, 105, 110, 125, 128, 168, 169, 194, 198, 217, 242, 318, 338, 344, 345, 346, 348, 356, 358, 361], "time": [2, 3, 4, 7, 8, 14, 15, 17, 18, 19, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 107, 110, 116, 119, 121, 143, 150, 156, 157, 166, 168, 176, 190, 192, 196, 198, 199, 237, 253, 259, 262, 266, 267, 269, 270, 274, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 318, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "wherea": [2, 21, 57, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 127, 168, 267, 340, 351], "ram": [2, 89, 91, 358, 361], "prealloc": [2, 3, 356], "ve": [2, 39, 343, 346, 352], "been": [2, 3, 5, 7, 8, 17, 19, 20, 39, 68, 72, 86, 90, 94, 104, 110, 136, 154, 155, 159, 192, 196, 230, 235, 237, 343, 344, 345, 346, 354, 355, 356, 358, 361], "extend": [2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 73, 74, 76, 77, 78, 80, 81, 119, 147, 168, 315, 340, 343, 344, 345, 346, 350, 352, 355, 357, 358, 360], "here": [2, 3, 4, 7, 8, 9, 10, 58, 59, 77, 84, 85, 86, 90, 94, 104, 105, 106, 110, 120, 308, 338, 339, 343, 344, 345, 346, 347, 348, 350, 352, 355, 356, 358, 360, 361], "start": [2, 3, 4, 5, 13, 20, 44, 51, 59, 66, 73, 74, 87, 99, 104, 110, 176, 313, 342, 343, 344, 353, 355, 356, 358, 359, 361], "replay_buff": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 315, 330, 343, 344, 345, 350, 355, 358], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 31, 34, 36, 37, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 119, 120, 123, 129, 130, 135, 136, 138, 140, 142, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 159, 164, 166, 168, 173, 176, 177, 178, 182, 183, 184, 185, 188, 189, 191, 192, 193, 194, 196, 197, 198, 200, 202, 205, 206, 209, 214, 215, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 301, 311, 314, 327, 330, 338, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "rb": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 120, 147, 168, 344, 346, 350, 352, 355, 357, 358, 360], "10": [2, 7, 21, 22, 25, 31, 34, 37, 39, 40, 41, 42, 44, 62, 63, 65, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 100, 104, 105, 106, 108, 109, 110, 111, 112, 117, 119, 120, 155, 157, 158, 168, 178, 181, 182, 184, 186, 188, 192, 193, 196, 197, 199, 202, 213, 224, 234, 235, 237, 238, 245, 252, 255, 257, 259, 269, 270, 271, 274, 280, 282, 283, 284, 285, 288, 309, 340, 342, 343, 344, 345, 346, 347, 348, 352, 355, 356, 358, 359, 360, 361], "add": [2, 3, 4, 6, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 68, 69, 77, 78, 80, 81, 86, 90, 104, 110, 120, 136, 168, 194, 198, 207, 236, 251, 313, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 358, 360], "string": [2, 17, 18, 19, 31, 36, 44, 60, 86, 90, 104, 110, 116, 142, 154, 164, 168, 194, 198, 232, 238, 239, 250, 300, 317, 327, 339, 343, 345, 346, 358], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 73, 74, 77, 79, 103, 120, 143, 152, 155, 179, 180, 192, 193, 196, 226, 230, 232, 241, 242, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 272, 274, 309, 343, 345, 348, 350, 358, 361], "30": [2, 37, 55, 137, 216, 217, 303, 344, 345, 350, 355, 356, 358], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 76, 77, 79, 86, 87, 88, 89, 90, 99, 100, 104, 105, 106, 110, 111, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 132, 134, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 162, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 327, 330, 332, 333, 334, 338, 340, 343, 344, 345, 346, 349, 350, 355, 356, 358, 360, 361], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 119, 120, 121, 122, 127, 132, 133, 137, 138, 140, 142, 143, 146, 153, 154, 157, 160, 161, 162, 164, 168, 169, 173, 178, 179, 180, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 251, 252, 253, 259, 261, 262, 266, 267, 268, 269, 270, 274, 282, 284, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 309, 310, 311, 314, 315, 318, 320, 327, 328, 332, 333, 334, 356, 358], "tell": [2, 3, 4, 7, 105, 106, 343, 346, 350, 355], "our": [2, 3, 7, 8, 17, 37, 120, 301, 338, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 357, 358, 360], "far": [2, 39, 195, 221, 222, 352, 356, 361], "restrict": [2, 3, 344, 357, 358, 361], "empti": [2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 86, 90, 103, 104, 110, 125, 128, 142, 144, 157, 160, 162, 164, 305, 343, 356, 358], "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 93, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 117, 120, 124, 127, 129, 130, 136, 138, 140, 142, 144, 145, 147, 150, 151, 154, 155, 156, 158, 159, 160, 162, 164, 168, 173, 178, 179, 180, 182, 183, 184, 186, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 205, 206, 209, 212, 214, 224, 226, 227, 228, 229, 232, 233, 238, 240, 241, 244, 245, 246, 251, 252, 254, 255, 257, 258, 259, 260, 261, 262, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 288, 291, 292, 293, 294, 296, 297, 298, 299, 301, 317, 338, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 355, 356, 357, 358, 359, 360, 361], "64": [2, 3, 33, 35, 38, 51, 57, 68, 120, 146, 182, 183, 191, 194, 198, 206, 214, 280, 343, 344, 345, 346, 348, 352, 354, 356, 357, 358, 360, 361], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 73, 74, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 118, 124, 125, 126, 127, 128, 129, 130, 136, 138, 140, 142, 144, 145, 147, 151, 154, 156, 158, 159, 160, 162, 164, 168, 169, 173, 176, 177, 178, 188, 189, 192, 193, 194, 196, 197, 198, 202, 207, 208, 214, 215, 223, 226, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 288, 327, 338, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "unit8": 2, "img": 2, "randint": [2, 44, 68, 158, 358], "255": [2, 68, 158, 356, 358], "uint8": [2, 3, 33, 35, 38, 46, 51, 57, 84, 85, 129, 140, 158, 344, 351, 357, 358, 360], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 100, 104, 108, 109, 110, 111, 112, 119, 120, 125, 128, 129, 130, 135, 136, 140, 144, 145, 147, 150, 151, 154, 156, 165, 166, 168, 173, 176, 178, 193, 194, 197, 198, 202, 217, 247, 251, 252, 254, 255, 257, 258, 259, 260, 265, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 312, 314, 316, 344, 346, 348, 351, 352, 354, 356, 357, 360, 361], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 44, 57, 59, 60, 77, 86, 87, 90, 94, 104, 105, 110, 111, 112, 120, 142, 159, 160, 162, 165, 166, 168, 173, 176, 179, 180, 182, 183, 184, 185, 186, 191, 194, 198, 200, 201, 205, 206, 231, 242, 255, 260, 270, 272, 280, 301, 315, 322, 323, 324, 330, 332, 333, 338, 343, 344, 345, 346, 348, 351, 355, 356, 357, 358, 360, 361], "ask": [2, 8, 51, 57, 66, 73, 74, 301, 345, 346, 347, 348, 355, 357, 361], "do": [2, 3, 4, 7, 59, 86, 90, 104, 110, 111, 112, 143, 165, 166, 176, 206, 207, 228, 282, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361], "automat": [2, 3, 5, 59, 62, 63, 68, 79, 86, 89, 90, 91, 104, 105, 106, 110, 125, 128, 138, 165, 179, 226, 238, 338, 343, 345, 347, 348, 355, 356, 358, 360], "hand": [2, 3, 7, 20, 25, 355, 356], "look": [2, 3, 5, 7, 8, 31, 86, 90, 99, 104, 105, 106, 110, 142, 143, 162, 168, 238, 242, 243, 244, 339, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 360, 361], "assum": [2, 3, 6, 25, 32, 39, 40, 41, 53, 55, 57, 58, 59, 73, 86, 90, 104, 110, 119, 122, 132, 142, 143, 150, 156, 160, 162, 164, 173, 194, 198, 199, 224, 245, 255, 260, 272, 280, 291, 292, 293, 294, 296, 297, 298, 299, 301, 343, 345, 346, 354, 356], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 34, 37, 40, 41, 53, 72, 84, 85, 86, 89, 91, 92, 156, 195, 214, 221, 222, 343, 346, 355, 356, 358, 360], "dimens": [2, 3, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 53, 55, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 104, 110, 111, 112, 119, 120, 121, 132, 138, 140, 143, 150, 153, 158, 161, 166, 179, 180, 181, 186, 194, 196, 198, 200, 203, 204, 205, 207, 208, 213, 214, 218, 219, 220, 221, 224, 232, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 334, 338, 343, 344, 345, 346, 347, 355, 356, 358], "leav": [2, 25, 33, 35, 37, 38, 86, 169, 177, 343, 350, 358], "tree": [2, 33, 35, 38, 86, 90, 104, 110, 358], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 84, 85, 86, 87, 89, 90, 91, 92, 104, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 179, 180, 187, 194, 198, 200, 205, 206, 220, 226, 231, 232, 238, 239, 241, 242, 245, 246, 252, 259, 266, 268, 270, 272, 315, 320, 338, 343, 345, 354, 355, 356, 358, 361], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 120, 344, 345, 350, 358, 360, 361], "throw": [2, 31, 33, 35, 38, 86, 90, 104, 110, 168, 361], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 125, 128, 129, 130, 140, 144, 145, 147, 151, 154, 156, 159, 160, 168, 176, 177, 178, 186, 188, 189, 194, 198, 202, 214, 215, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 309, 315, 327, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "max": [2, 22, 32, 35, 40, 44, 60, 65, 66, 77, 127, 157, 220, 221, 222, 231, 237, 252, 253, 259, 268, 270, 272, 343, 345, 346, 352, 355], "label": [2, 35, 36, 39, 44, 343, 358], "100": [2, 13, 14, 15, 16, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 82, 83, 86, 90, 95, 96, 104, 110, 123, 129, 138, 147, 152, 154, 168, 205, 233, 301, 310, 330, 344, 345, 346, 347, 349, 352, 354, 355, 356, 357, 358, 360, 361], "rb_pytre": 2, "dim": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 120, 121, 140, 156, 161, 166, 197, 199, 219, 224, 334, 344, 345, 356, 358], "b": [2, 3, 7, 8, 22, 25, 27, 33, 35, 37, 38, 39, 40, 41, 77, 192, 193, 196, 197, 205, 206, 207, 208, 214, 223, 245, 282, 283, 284, 285, 286, 288, 301, 338, 344, 357, 358], "randn": [2, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 119, 138, 173, 181, 182, 186, 188, 189, 192, 193, 196, 197, 199, 203, 204, 205, 209, 212, 213, 215, 226, 227, 228, 229, 231, 232, 238, 239, 241, 244, 245, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 282, 283, 284, 285, 317, 338, 358, 360, 361], "c": [2, 3, 6, 7, 25, 37, 40, 41, 56, 138, 158, 196, 197, 344, 358], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 53, 63, 73, 74, 77, 79, 86, 90, 104, 110, 119, 121, 125, 127, 128, 138, 144, 147, 168, 173, 176, 178, 183, 184, 185, 191, 192, 193, 194, 196, 197, 198, 199, 203, 204, 206, 214, 223, 234, 235, 237, 240, 248, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 288, 346, 358, 360], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 90, 93, 104, 110, 116, 120, 123, 125, 128, 136, 145, 152, 166, 169, 173, 206, 209, 224, 282, 283, 284, 285, 309, 317, 350, 354, 358, 361], "len": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 79, 140, 179, 180, 200, 206, 343, 350, 352, 356, 357, 358, 360], "ambigu": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 339, 343, 347, 356], "deal": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 343, 345, 355, 358], "interpret": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 344], "put": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 90, 111, 112, 166, 308, 334, 338, 344, 345, 346, 347, 356], "slice": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 119, 358], "solv": [2, 4, 9, 10, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 337, 343, 344, 345, 350, 352, 355, 356, 358], "clear": [2, 25, 27, 28, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 94, 104, 110, 168, 310, 347, 350], "cut": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "distinct": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 349, 354], "between": [2, 3, 4, 5, 13, 14, 16, 20, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 74, 86, 90, 104, 110, 111, 112, 127, 137, 148, 160, 168, 169, 179, 180, 188, 192, 194, 198, 200, 205, 206, 233, 238, 242, 251, 253, 254, 257, 258, 259, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 277, 282, 314, 318, 339, 343, 344, 346, 350, 355, 356, 358, 361], "view": [2, 3, 8, 26, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 168, 189, 192, 196, 200, 347, 356, 358, 360, 361], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 120, 121, 154, 155, 156, 157, 160, 168, 177, 179, 180, 200, 203, 204, 206, 237, 239, 240, 248, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 322, 334, 337, 340, 345, 346, 350, 351, 352, 356, 358, 361], "through": [2, 3, 4, 5, 8, 11, 15, 17, 19, 20, 25, 27, 57, 82, 83, 94, 95, 96, 99, 104, 105, 106, 110, 125, 128, 143, 200, 214, 238, 242, 243, 244, 248, 282, 283, 284, 285, 338, 343, 344, 345, 347, 349, 354, 355, 356, 357, 358, 361], "collate_fn": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 358, 360], "__init__": [2, 3, 7, 86, 100, 116, 117, 125, 128, 144, 178, 189, 192, 196, 202, 246, 252, 254, 259, 265, 270, 272, 274, 340, 356, 361], "expect": [2, 3, 4, 7, 25, 31, 37, 43, 44, 72, 86, 90, 100, 103, 104, 110, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 136, 138, 140, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 168, 169, 192, 193, 194, 196, 197, 198, 205, 206, 233, 237, 241, 244, 251, 252, 253, 254, 255, 257, 258, 259, 265, 266, 267, 269, 270, 271, 272, 274, 280, 322, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 350, 355, 356, 358, 361], "major": 2, "worri": [2, 42], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 62, 63, 64, 75, 76, 79, 86, 87, 90, 94, 104, 110, 177, 343, 345, 347, 355, 356, 361], "though": [2, 4, 86, 90, 104, 110, 200, 345, 355], "regular": [2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 65, 71, 86, 90, 104, 110, 160, 188, 215, 233, 239, 240, 241, 242, 260, 320, 336, 340, 343, 344, 347, 348, 352, 358, 361], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 39, 43, 45, 46, 86, 90, 104, 110, 137, 156, 195, 221, 222, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 344, 348, 351, 356, 358, 361], "latter": [2, 17, 18, 19, 31, 53, 86, 90, 104, 110, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 269, 332, 333], "inv": [2, 3, 123, 127, 140, 147, 152, 356], "method": [2, 3, 4, 11, 15, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 77, 79, 86, 89, 90, 91, 92, 104, 107, 110, 120, 124, 125, 126, 129, 130, 132, 136, 138, 142, 144, 145, 146, 147, 151, 154, 156, 159, 160, 162, 164, 168, 178, 199, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 286, 300, 331, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 356, 358, 361], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 45, 46, 86, 90, 104, 110, 127, 130, 151, 158, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 204, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 282, 358], "preprocess": [2, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 344], "multithread": [2, 3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 101, 102, 350, 358], "thread": [2, 13, 14, 16, 33, 35, 38, 82, 83, 95, 96, 104, 110], "prefetch": [2, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 343, 344, 346, 358], "advis": [2, 54, 361], "benchmark": [2, 3, 9, 83, 95, 96, 355], "techniqu": [2, 8, 344, 350, 358], "real": [2, 5, 57, 242, 339, 346, 356], "life": [2, 129], "adopt": [2, 3, 5, 343, 361], "throughput": [2, 9, 343], "constant": [2, 120, 138, 155, 340, 343, 345, 346, 361], "throughout": [2, 3, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 345, 361], "further": [2, 3, 5, 343, 345, 347], "refin": [2, 57, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280], "sampler": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 143, 255, 260, 280, 343, 345, 355, 358], "coupl": [2, 346, 348, 349, 356, 358], "how": [2, 3, 17, 18, 19, 31, 34, 40, 57, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 168, 251, 253, 264, 266, 269, 301, 303, 318, 337, 338, 343, 344, 345, 346, 347, 348, 350, 351, 354, 355, 356, 357, 358, 360, 361], "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 33, 34, 35, 37, 38, 51, 53, 57, 62, 63, 66, 73, 74, 75, 76, 77, 79, 86, 87, 90, 104, 110, 117, 119, 121, 125, 127, 128, 136, 138, 143, 155, 156, 158, 166, 226, 234, 235, 238, 239, 242, 282, 283, 284, 285, 286, 305, 338, 342, 343, 344, 345, 346, 353, 355, 356, 358, 359, 360, 361], "first_elt": 2, "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 79, 82, 83, 86, 89, 90, 92, 93, 95, 96, 100, 101, 102, 104, 107, 108, 109, 110, 117, 118, 120, 121, 123, 124, 126, 127, 136, 137, 138, 142, 147, 150, 152, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 168, 178, 179, 180, 182, 183, 184, 185, 186, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 212, 216, 217, 220, 221, 222, 224, 226, 230, 231, 233, 234, 235, 237, 240, 241, 244, 245, 248, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 280, 281, 282, 283, 284, 285, 288, 289, 290, 309, 316, 330, 334, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361], "128": [2, 51, 53, 57, 74, 82, 83, 95, 96, 183, 186, 344, 346, 352, 356, 357, 358], "wa": [2, 3, 5, 7, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 104, 110, 160, 169, 177, 196, 251, 253, 264, 266, 269, 271, 273, 288, 339, 344, 345, 347, 348, 354, 358, 360], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 120, 121, 125, 126, 127, 128, 135, 138, 144, 145, 147, 150, 154, 156, 157, 158, 166, 168, 173, 176, 177, 179, 180, 182, 183, 184, 185, 186, 189, 191, 194, 200, 203, 204, 205, 206, 209, 212, 215, 226, 227, 228, 229, 231, 232, 234, 235, 237, 239, 241, 244, 246, 267, 327, 330, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 121], "larger": [2, 4, 258, 265], "volum": 2, "due": [2, 3, 5, 349, 357, 358, 361], "serialis": [2, 33, 35, 38], "memorymappedtensor": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 303, 350, 357], "well": [2, 3, 8, 20, 22, 31, 34, 36, 37, 40, 41, 71, 75, 86, 90, 104, 110, 168, 182, 196, 216, 217, 267, 286, 343, 344, 346, 347, 348, 349, 351, 357, 358, 360, 361], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 105, 106, 110, 111, 112, 125, 126, 128, 150, 153, 155, 161, 168, 178, 196, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 308, 338, 343, 345, 346, 350], "file": [2, 6, 7, 8, 33, 35, 38, 51, 53, 54, 55, 57, 58, 59, 111, 300, 301, 303, 340, 342, 343, 344, 358, 359, 361], "locat": [2, 7, 33, 35, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 129, 138, 149, 195, 209, 221, 222, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 343, 344, 345, 351, 355, 358], "improv": [2, 4, 133, 251, 339, 355, 358], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 104, 110, 345, 358], "found": [2, 3, 6, 7, 10, 20, 22, 25, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 94, 104, 110, 117, 120, 147, 150, 157, 166, 168, 177, 234, 235, 238, 242, 266, 267, 269, 343, 344, 346, 347, 349, 351, 358], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 43, 45, 46, 66, 127, 196, 197, 258, 346, 350, 358], "sharabl": [2, 104, 110], "popul": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 135, 156, 343, 345, 346, 348, 350, 356, 358], "collabor": [2, 57], "rather": [2, 4, 76, 145, 343, 344, 345, 347, 349, 355, 358], "incur": [2, 82, 83, 95, 96], "some": [2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 46, 53, 59, 62, 63, 68, 77, 79, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 111, 112, 142, 160, 162, 168, 169, 182, 194, 198, 219, 242, 243, 244, 301, 309, 321, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 355, 356, 358, 360, 361], "transmiss": 2, "overhead": [2, 82, 83, 95, 96, 104, 110], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 68, 86, 90, 104, 110, 159, 165, 169, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 241, 242, 243, 245, 248, 267, 269, 344, 346, 350, 356, 358], "instanti": [2, 3, 20, 33, 34, 35, 37, 38, 40, 41, 94, 159, 199, 206, 343, 344, 348, 349, 351, 355, 356, 358, 361], "content": [2, 8, 15, 25, 27, 33, 34, 35, 37, 38, 40, 41, 72, 86, 89, 90, 91, 101, 104, 110, 144, 179, 180, 200, 205, 206, 238, 267, 345, 356, 360], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 86, 90, 99, 104, 105, 106, 108, 109, 110, 111, 112, 113, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 168, 173, 189, 209, 226, 227, 228, 229, 232, 238, 239, 241, 242, 244, 245, 246, 247, 272, 280, 314, 336, 338, 339, 343, 344, 345, 346, 348, 349, 357, 360], "writer": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 69, 77, 78, 81, 345, 358], "tensordictroundrobinwrit": [2, 68], "current": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 74, 86, 90, 92, 101, 104, 110, 120, 143, 155, 156, 157, 159, 160, 168, 170, 171, 176, 190, 199, 217, 237, 251, 253, 260, 266, 269, 271, 272, 304, 340, 343, 344, 345, 346, 349, 355, 356, 358, 360, 361], "goe": [2, 4, 105, 106, 343, 345, 355, 361], "prioritizedsampl": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 255, 260, 280, 343, 358], "access": [2, 3, 7, 8, 31, 34, 54, 56, 86, 90, 104, 110, 142, 162, 168, 334, 337, 343, 347, 355, 356, 358], "show": [2, 31, 86, 90, 104, 110, 168, 206, 301, 338, 343, 345, 346, 355, 356, 358, 360], "tensordictreplaybuff": [2, 34, 37, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 119, 120, 315, 330, 336, 343, 344, 346, 358], "mp": [2, 17, 18, 19, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 166], "def": [2, 3, 11, 21, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 90, 100, 104, 110, 116, 117, 125, 128, 144, 168, 178, 189, 192, 193, 196, 197, 202, 238, 246, 252, 254, 259, 265, 267, 270, 272, 274, 340, 343, 344, 354, 355, 356, 358, 360, 361], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 39, 40, 65, 66, 86, 90, 100, 104, 105, 106, 110, 117, 125, 127, 128, 144, 154, 155, 160, 163, 166, 168, 177, 178, 192, 194, 198, 202, 230, 234, 235, 237, 238, 239, 240, 241, 242, 251, 252, 253, 254, 255, 257, 259, 260, 261, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 280, 282, 283, 284, 285, 286, 314, 318, 320, 323, 324, 329, 330, 340, 344, 345, 346, 349, 352, 355, 356, 358, 360, 361], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 97, 98, 104, 110, 117, 119, 121, 125, 126, 127, 128, 135, 136, 138, 147, 150, 156, 158, 160, 166, 176, 178, 188, 189, 194, 198, 201, 202, 214, 215, 223, 226, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 241, 244, 246, 280, 283, 284, 285, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 309, 317, 327, 338, 339, 343, 346, 355, 356, 360, 361], "__name__": [2, 21, 87, 344], "__main__": [2, 21, 87], "21": [2, 57, 58, 74, 104, 105, 106, 110, 342, 344, 346, 352, 354, 355, 356, 357, 359], "proc": 2, "target": [2, 4, 8, 20, 31, 86, 87, 90, 104, 110, 155, 159, 168, 241, 242, 251, 252, 253, 254, 255, 257, 259, 260, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 281, 282, 283, 284, 285, 286, 321, 329, 330, 339, 340, 346, 352, 356], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 124, 142, 144, 153, 156, 159, 160, 161, 163, 164, 168, 178, 179, 180, 188, 194, 198, 200, 201, 202, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 308, 311, 315, 318, 334, 343, 344, 358, 361], "join": [2, 87, 336, 344, 345], "now": [2, 3, 7, 34, 104, 120, 206, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 357, 358, 361], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 42, 43, 44, 45, 46, 51, 57, 60, 66, 73, 74, 76, 86, 90, 95, 96, 104, 110, 143, 166, 178, 179, 180, 182, 184, 186, 192, 196, 200, 202, 205, 206, 226, 241, 246, 309, 315, 343, 345, 346, 350, 352, 356, 358, 361], "20": [2, 44, 58, 73, 74, 77, 86, 90, 94, 104, 110, 155, 168, 191, 192, 193, 196, 197, 231, 309, 344, 345, 346, 355, 356, 358, 360, 361], "_data": [2, 356], "It": [2, 3, 4, 7, 22, 31, 36, 39, 40, 42, 44, 53, 59, 68, 71, 77, 81, 86, 90, 92, 100, 101, 104, 105, 106, 110, 111, 112, 119, 129, 136, 138, 143, 155, 160, 165, 168, 169, 182, 184, 190, 205, 206, 214, 216, 217, 223, 224, 233, 234, 237, 240, 242, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 280, 281, 282, 308, 314, 327, 337, 338, 339, 343, 344, 346, 347, 355, 356, 357, 358, 360, 361], "difficult": [2, 4, 104, 351], "pai": [2, 8, 343, 346], "attent": [2, 8, 343, 346, 361], "word": [2, 3, 39, 51, 53, 55, 57, 58, 59, 267, 343, 350, 356, 361], "1m": [2, 51, 57, 321, 343, 345, 346], "multidimension": [2, 40, 65, 66, 358], "doe": [2, 3, 17, 33, 34, 35, 38, 40, 44, 51, 53, 57, 65, 66, 75, 76, 81, 86, 90, 104, 110, 111, 112, 186, 192, 193, 194, 196, 197, 198, 207, 224, 231, 243, 244, 251, 253, 260, 266, 269, 281, 318, 338, 340, 343, 344, 345, 346, 347, 350, 356, 358, 361], "howev": [2, 3, 5, 7, 31, 86, 90, 104, 110, 120, 150, 155, 160, 168, 251, 253, 266, 269, 271, 272, 338, 343, 344, 346, 349, 356, 358, 361], "flatten": [2, 33, 35, 38, 77, 132, 315, 346, 355], "capac": [2, 34, 37, 40, 41, 62, 63, 65, 73, 79, 345, 350], "There": [2, 10, 68, 194, 198, 338, 340, 345, 346, 348, 350, 355, 356, 358, 361], "circumv": 2, "account": [2, 62, 63, 79, 120, 203, 204, 338, 344, 346, 358, 361], "save": [2, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 165, 168, 300, 301, 303, 308, 318, 340, 350, 351, 352, 355], "ndim": [2, 34, 37, 40, 41, 62, 63, 77, 79, 86, 90, 104, 110, 168], "convent": [2, 3, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 111, 112, 339, 343, 346, 355, 356], "overridden": [2, 3, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 282, 284, 285, 346], "dim_extend": [2, 34, 37, 40, 41], "recommend": [2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 77, 94, 350, 355], "obtain": [2, 7, 39, 51, 86, 90, 104, 110, 119, 142, 155, 164, 178, 214, 315, 343, 345, 347, 348, 349, 355], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 43, 45, 46, 48, 68, 86, 90, 100, 104, 105, 106, 110, 111, 113, 119, 120, 129, 136, 154, 155, 159, 160, 165, 166, 168, 179, 180, 203, 204, 205, 206, 230, 232, 238, 239, 242, 245, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 301, 318, 330, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 361], "counterpart": 2, "desir": [2, 3, 31, 86, 90, 104, 110, 124, 138, 140, 142, 143, 156, 159, 160, 162, 164, 168, 174, 175, 179, 180, 200, 206, 226, 232, 233, 238, 239, 240, 241, 242, 338, 343, 355, 356, 358], "diversifi": 2, "offer": [2, 3, 7, 82, 83, 86, 90, 95, 96, 104, 110, 338, 343, 344, 347, 349, 350, 356, 358, 361], "accomplish": [2, 169, 347], "slicesampl": [2, 51, 66, 358], "anoth": [2, 3, 8, 57, 86, 89, 90, 91, 94, 104, 110, 125, 126, 128, 156, 159, 200, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 338, 339, 343, 345, 346, 348, 349, 354, 355, 356, 361], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 54, 120, 169, 252, 257, 258, 265, 308, 340, 347, 357, 358, 360], "reshap": [2, 31, 57, 73, 77, 194, 198, 200, 345, 355], "docstr": [2, 31, 86, 90, 104, 110, 168, 347, 348], "extens": [2, 34, 37, 40, 41, 74, 340, 358], "detail": [2, 3, 5, 6, 7, 31, 86, 90, 104, 105, 106, 110, 158, 160, 168, 189, 192, 196, 233, 251, 260, 269, 337, 344, 350, 354, 358], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 86, 90, 104, 110, 125, 128, 166, 168, 177, 192, 194, 196, 198, 237, 238, 242, 260, 344, 348, 354, 355, 361], "without": [2, 3, 7, 9, 31, 39, 51, 53, 57, 73, 74, 86, 90, 104, 110, 111, 112, 117, 125, 128, 158, 168, 192, 193, 196, 197, 228, 229, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 281, 282, 283, 284, 285, 286, 330, 337, 338, 343, 344, 345, 347, 348, 349, 350, 355, 356, 358, 361], "scenario": [2, 104, 111, 112, 343, 348, 355, 356], "happi": 2, "concaten": [2, 8, 20, 29, 30, 57, 120, 121, 138, 159, 196, 200, 244, 343, 344, 348, 355, 356, 358, 361], "interrupt": [2, 90, 288], "introduc": [2, 104, 110, 192, 194, 196, 198, 237, 343], "schedul": [2, 4, 7, 39, 314, 345, 356], "transformedenv": [2, 3, 13, 31, 86, 87, 90, 104, 110, 117, 120, 123, 124, 125, 128, 129, 130, 132, 135, 136, 137, 138, 140, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 159, 166, 168, 194, 198, 301, 327, 343, 344, 345, 346, 347, 351, 352, 354, 355, 356, 357, 358, 360, 361], "stepcount": [2, 13, 31, 86, 90, 104, 110, 111, 112, 159, 168, 343, 344, 345, 346, 347, 352, 355, 360], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 31, 77, 86, 87, 90, 92, 104, 110, 120, 123, 124, 129, 135, 136, 138, 140, 145, 146, 147, 150, 152, 155, 156, 157, 159, 160, 166, 168, 194, 198, 301, 327, 330, 336, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 360, 361], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 120, 147, 350, 358], "cartpol": [2, 31, 84, 85, 86, 90, 104, 110, 120, 150, 155, 168, 344, 346, 348, 350, 351, 352, 358, 361], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 31, 53, 55, 77, 86, 87, 89, 90, 91, 95, 96, 101, 104, 110, 120, 123, 130, 135, 136, 138, 145, 147, 150, 152, 154, 155, 156, 157, 159, 168, 194, 198, 277, 291, 292, 293, 294, 296, 297, 298, 299, 338, 344, 346, 347, 348, 349, 350, 351, 352, 356, 358, 360, 361], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 82, 83, 86, 90, 95, 96, 100, 104, 105, 106, 110, 117, 120, 125, 128, 136, 144, 147, 178, 189, 202, 215, 217, 226, 232, 238, 239, 252, 255, 257, 270, 272, 274, 330, 338, 343, 344, 345, 346, 348, 349, 350, 352, 354, 355, 356, 357, 358, 360, 361], "total_fram": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 120, 147, 318, 321, 330, 340, 343, 344, 345, 346, 350, 352, 355, 358, 360], "num_slic": [2, 51, 57, 66, 73, 74, 358], "8": [2, 6, 7, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 73, 74, 82, 83, 84, 85, 86, 90, 104, 110, 155, 179, 180, 182, 183, 191, 200, 227, 228, 229, 238, 241, 244, 265, 342, 343, 344, 348, 350, 355, 356, 357, 358, 359, 360, 361], "traj_kei": [2, 66, 73, 74, 358], "traj_id": [2, 3, 13, 14, 15, 22, 147, 346, 350, 358, 360], "truncated_kei": [2, 66, 73, 74, 147, 154], "strict_length": [2, 51, 57, 66, 73, 74], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 37, 41, 42, 62, 63, 65, 66, 74, 79, 86, 90, 104, 110, 142, 147, 150, 160, 164, 168, 193, 197, 209, 215, 233, 238, 240, 241, 242, 282, 283, 284, 285, 309, 321, 343, 344, 345, 346, 348, 349, 350, 352, 355, 356, 358, 360, 361], "enumer": [2, 13, 14, 15, 20, 31, 37, 41, 74, 86, 90, 104, 110, 168, 275, 339, 343, 344, 345, 346, 352, 358, 360], "break": [2, 5, 13, 14, 15, 20, 31, 37, 41, 51, 54, 55, 57, 58, 59, 60, 66, 73, 74, 77, 86, 90, 104, 110, 120, 147, 166, 168, 344, 350, 352, 358, 360], "step_count": [2, 13, 14, 15, 31, 86, 90, 95, 96, 104, 110, 154, 168, 345, 346, 347, 352, 360], "32": [2, 21, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 108, 109, 111, 112, 179, 180, 181, 182, 183, 185, 186, 191, 200, 205, 206, 210, 211, 213, 214, 223, 280, 344, 346, 348, 349, 356, 357, 358, 360, 361], "33": [2, 25, 31, 68, 86, 90, 104, 110, 168, 179, 180, 200, 342, 344, 356, 359], "34": [2, 179, 180, 200, 344, 356], "35": [2, 179, 180, 200, 344, 355, 356, 357, 358], "36": [2, 344, 356], "37": [2, 119, 342, 344, 356, 357, 359], "38": [2, 7, 344, 356], "39": [2, 55, 95, 96, 344, 346, 356, 357], "40": [2, 95, 96, 344, 345, 346, 355, 356, 357], "41": [2, 342, 344, 351, 356, 357, 359], "11": [2, 10, 22, 26, 32, 44, 62, 63, 65, 74, 79, 87, 158, 168, 178, 202, 342, 344, 345, 355, 356, 358, 359], "12": [2, 10, 58, 62, 63, 74, 79, 95, 96, 104, 108, 109, 110, 168, 344, 345, 352, 356, 358], "14": [2, 6, 11, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74, 86, 90, 104, 110, 138, 168, 342, 344, 345, 346, 355, 356, 357, 358, 359, 360], "15": [2, 22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 74, 86, 90, 104, 110, 168, 231, 237, 261, 344, 346, 356, 358], "16": [2, 3, 31, 58, 66, 74, 82, 83, 86, 90, 95, 96, 104, 110, 120, 168, 344, 345, 346, 355, 356, 358], "17": [2, 58, 74, 104, 168, 327, 342, 344, 345, 356, 357, 359], "could": [2, 3, 4, 6, 22, 344, 345, 351, 355, 357, 361], "sai": [2, 31, 86, 90, 104, 110, 168, 205, 357, 361], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 32, 64, 66, 73, 74, 86, 89, 90, 91, 94, 104, 110, 125, 128, 143, 150, 239, 344, 345, 346, 355, 356], "handl": [2, 3, 20, 31, 86, 90, 104, 110, 165, 166, 168, 198, 200, 318, 332, 333, 343, 344, 345, 347, 349, 355, 358], "suggest": [2, 280, 343, 355], "serialenv": [2, 3, 86, 90, 104, 156, 168, 336, 361], "lambda": [2, 11, 13, 14, 15, 16, 20, 21, 37, 77, 86, 87, 90, 104, 110, 116, 136, 156, 168, 224, 232, 239, 261, 263, 282, 285, 293, 294, 298, 299, 330, 339, 343, 344, 355, 358, 360, 361], "squeez": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 120, 153, 155, 179, 180, 218, 219, 343, 356, 358], "6": [2, 7, 13, 14, 15, 16, 22, 31, 37, 51, 58, 59, 66, 74, 84, 85, 104, 108, 109, 138, 140, 155, 179, 180, 182, 183, 184, 187, 191, 193, 199, 200, 205, 206, 210, 220, 238, 246, 327, 344, 350, 355, 356, 358, 360], "5": [2, 3, 22, 23, 25, 27, 31, 34, 37, 40, 41, 51, 68, 73, 74, 77, 87, 95, 96, 101, 108, 109, 111, 112, 119, 147, 154, 155, 168, 178, 179, 180, 182, 183, 188, 189, 190, 191, 192, 195, 196, 199, 200, 202, 205, 206, 210, 215, 221, 222, 231, 232, 239, 245, 266, 269, 271, 274, 338, 342, 343, 344, 346, 348, 350, 352, 355, 356, 357, 358, 359, 360, 361], "4": [2, 3, 7, 23, 25, 26, 27, 31, 32, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 73, 74, 79, 82, 83, 84, 85, 86, 90, 95, 96, 97, 98, 99, 100, 102, 104, 108, 109, 110, 117, 120, 129, 147, 154, 155, 166, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 196, 197, 199, 200, 202, 205, 206, 209, 210, 211, 212, 213, 214, 215, 223, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 300, 338, 342, 343, 344, 345, 346, 348, 350, 351, 355, 356, 357, 358, 359, 360, 361], "7": [2, 6, 10, 26, 31, 32, 34, 37, 40, 66, 74, 86, 90, 104, 110, 155, 178, 179, 180, 183, 199, 200, 202, 205, 288, 342, 343, 344, 346, 350, 355, 356, 358, 359, 360], "9": [2, 3, 7, 22, 31, 34, 37, 40, 58, 59, 66, 74, 77, 84, 85, 99, 105, 106, 155, 166, 168, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 275, 280, 339, 342, 343, 344, 345, 347, 350, 354, 355, 356, 357, 358, 359], "18": [2, 58, 74, 108, 109, 111, 112, 168, 206, 342, 344, 345, 346, 350, 355, 356, 359], "19": [2, 58, 73, 74, 77, 168, 344, 346, 356, 357], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 54, 104, 110, 159, 161, 206, 339, 340, 343, 344, 355, 358, 360], "differ": [2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 53, 54, 57, 71, 82, 83, 86, 90, 95, 96, 99, 104, 105, 106, 110, 120, 127, 138, 145, 160, 161, 168, 189, 192, 193, 194, 196, 197, 198, 200, 202, 205, 206, 215, 265, 269, 277, 282, 283, 284, 288, 289, 290, 314, 318, 320, 332, 333, 338, 339, 340, 343, 344, 345, 347, 349, 351, 354, 355, 356, 357, 358, 361], "congruent": 2, "shape": [2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 77, 79, 84, 85, 86, 89, 90, 91, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 119, 121, 125, 128, 129, 130, 136, 138, 140, 144, 145, 147, 151, 154, 156, 158, 166, 167, 168, 169, 173, 176, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 220, 223, 226, 227, 228, 229, 231, 232, 233, 238, 239, 240, 241, 244, 245, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 277, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 309, 315, 318, 330, 338, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 358, 360, 361], "custom": [2, 3, 5, 31, 86, 90, 104, 110, 162, 168, 205, 206, 245, 260, 269, 275, 334, 338, 343, 344, 345, 346, 348, 349, 351, 355], "name": [2, 3, 6, 7, 11, 15, 31, 33, 35, 38, 44, 51, 54, 56, 59, 60, 82, 84, 86, 90, 95, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 127, 130, 145, 150, 151, 154, 160, 162, 165, 168, 177, 194, 198, 232, 239, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 282, 284, 285, 286, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 327, 340, 343, 344, 345, 346, 349, 351, 355, 356, 361], "randomcroptensordict": [2, 343], "unlik": [2, 72, 111, 112, 260, 269, 344, 348, 350, 360], "stop": [2, 3, 15, 20, 39, 59, 66, 73, 74, 86, 90, 104, 110, 345, 350, 355, 360, 361], "signal": [2, 3, 22, 51, 53, 55, 57, 58, 59, 66, 73, 74, 77, 90, 111, 112, 120, 129, 154, 157, 177, 339, 343, 345, 355, 358, 361], "isn": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 57, 65, 77, 129, 169, 232, 241, 348, 349, 351, 355], "separ": [2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 51, 54, 142, 164, 252, 254, 257, 259, 270, 272, 274, 343, 344, 348, 349, 355, 358, 361], "disk": [2, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 318, 340, 343, 344, 346, 350, 351, 358], "dump": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 300, 301, 351, 352], "load": [2, 6, 7, 13, 14, 15, 16, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 85, 86, 90, 104, 110, 116, 166, 168, 334, 340, 343, 345, 358], "json": 2, "metadata": [2, 51, 53, 345, 347, 349, 350, 355, 361], "anticip": [2, 125, 128], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 57], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 43, 45, 46, 53, 165, 169, 226, 232, 233, 238, 239, 240, 241, 242, 345, 355, 356, 358], "exact": [2, 3, 104, 196], "statu": [2, 3, 86], "prioriti": [2, 4, 34, 40, 41, 62, 63, 64, 65, 66, 75, 76, 79, 254, 255, 257, 258, 259, 260, 265, 270, 272, 274, 280, 340, 343, 344, 358], "heap": 2, "under": [2, 3, 4, 20, 31, 39, 51, 53, 54, 55, 57, 58, 59, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 168, 226, 232, 233, 238, 239, 240, 241, 242, 267, 282, 283, 284, 285, 286, 301, 339, 343, 344, 348, 356, 361], "hood": [2, 20, 51, 86, 90, 104, 110, 356], "just": [2, 3, 4, 11, 76, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 123, 177, 206, 309, 338, 340, 343, 344, 345, 346, 347, 348, 350, 355, 356, 358, 360, 361], "public": [2, 56, 142, 164], "serializ": 2, "altern": [2, 4, 26, 101, 186, 203, 204, 205, 250, 343, 345, 355], "state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 104, 110, 160, 166, 168, 272, 334, 340, 343, 344, 361], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 104, 110, 160, 166, 168, 272, 340, 343], "drawback": 2, "struggl": 2, "big": [2, 345, 350, 358, 361], "sequenti": [2, 9, 31, 86, 90, 104, 110, 119, 136, 168, 243, 244, 269, 338, 345, 346, 348, 355, 356, 357, 361], "consist": [2, 3, 31, 34, 37, 40, 41, 54, 57, 86, 90, 104, 110, 136, 165, 168, 180, 200, 343, 344, 345, 356, 357, 361], "known": [2, 3, 5, 7, 8, 289, 290, 343, 344, 347], "seamless": [2, 200], "integr": [2, 31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 185, 194, 198, 202, 241, 338, 347, 348, 350, 355, 356, 357], "within": [2, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 107, 110, 120, 125, 128, 129, 147, 154, 165, 166, 168, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 255, 260, 280, 338, 344, 347, 348, 349, 350, 351, 352, 356, 360], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 343, 344, 349], "essenti": [2, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 344, 347, 356, 358], "understand": [2, 3, 8, 343, 344, 347, 348, 355], "purpos": [2, 3, 7, 86, 90, 104, 110, 120, 192, 251, 253, 266, 269, 271, 330, 343, 345, 346, 349, 351, 355, 357, 361], "interact": [2, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 57, 86, 90, 104, 110, 160, 238, 242, 343, 345, 347, 348, 350, 355, 356, 361], "guid": [2, 105, 106, 108, 109, 155, 337, 343, 355], "explan": [2, 31, 86, 90, 104, 110, 168], "effect": [2, 3, 25, 31, 34, 37, 40, 41, 51, 57, 66, 68, 71, 73, 74, 86, 90, 104, 110, 120, 160, 168, 318, 343, 348, 358, 361], "realm": [2, 348], "As": [2, 3, 4, 31, 51, 86, 90, 99, 104, 105, 106, 110, 147, 242, 282, 338, 343, 344, 345, 346, 347, 349, 350, 355, 356, 357, 358, 360, 361], "practition": 2, "often": [2, 3, 8, 264, 318, 343, 344, 347, 349, 356, 358, 361], "encount": [2, 4, 57, 337, 344, 348, 356], "situat": 2, "sometim": [2, 3, 346, 361], "discard": [2, 3, 44, 53, 55, 90, 162, 176, 300, 358, 361], "variabl": [2, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 54, 55, 58, 59, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 102, 103, 107, 111, 112, 192, 193, 194, 196, 197, 198, 202, 227, 228, 229, 267, 270, 340, 344], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 176, 181, 182, 183, 184, 185, 186, 189, 194, 198, 199, 205, 210, 211, 213, 215, 216, 226, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 246, 247, 251, 252, 253, 254, 255, 257, 258, 259, 262, 265, 266, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 301, 327, 330, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 360, 361], "immedi": [2, 25, 27, 31, 86, 90, 104, 110, 168, 281, 355], "200": [2, 13, 14, 15, 20, 31, 51, 86, 89, 90, 91, 104, 110, 111, 112, 147, 168, 182, 183, 190, 216, 217, 343, 346, 350, 352, 356, 358], "199": [2, 356], "info": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 71, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 108, 109, 110, 111, 112, 162, 165, 167, 308, 347, 352, 355, 358], "At": [2, 201, 234, 344, 345, 346, 350, 354, 356, 357], "glanc": [2, 347], "seem": [2, 343, 346, 347], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 39, 86, 90, 99, 104, 105, 106, 110, 120, 143, 192, 194, 196, 198, 223, 227, 228, 229, 247, 338, 344, 346, 347], "less": [2, 101, 224, 332, 333, 339, 345, 346, 358, 360], "must": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 73, 74, 75, 76, 77, 79, 82, 86, 87, 90, 95, 104, 105, 106, 107, 110, 111, 120, 123, 129, 133, 136, 138, 140, 151, 155, 156, 157, 160, 161, 166, 168, 179, 180, 189, 194, 198, 200, 203, 204, 205, 206, 215, 226, 232, 233, 238, 239, 240, 241, 242, 245, 246, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 273, 274, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 327, 343, 344, 345, 346, 348, 354, 356, 358], "omit": [2, 313, 345, 349, 356, 358], "proper": [2, 3, 4, 6, 7, 282, 283, 284, 285, 344, 345, 355, 358], "imposs": [2, 77, 169, 251, 253, 266, 269, 271], "determin": [2, 34, 40, 53, 65, 66, 86, 90, 104, 110, 111, 112, 142, 164, 205, 237, 344, 348, 355], "correspond": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 46, 54, 57, 59, 65, 66, 86, 90, 100, 104, 110, 142, 156, 160, 164, 166, 168, 194, 196, 198, 203, 204, 234, 235, 237, 238, 242, 255, 258, 259, 272, 280, 282, 283, 284, 285, 286, 343, 344, 345, 347, 349, 350, 351, 355, 356, 357], "complic": [2, 356, 358, 361], "matter": [2, 350], "inconsist": [2, 361], "miss": [2, 3, 4, 6, 7, 11, 25, 31, 86, 90, 104, 110, 160, 168, 176, 243, 244, 272, 337, 343, 346], "behavior": [2, 4, 31, 86, 90, 104, 110, 160, 168, 258, 265, 346, 355, 356], "primari": [2, 350], "elimin": [2, 3, 347], "represent": [2, 27, 28, 31, 86, 90, 104, 110, 142, 162, 164, 168, 343, 356, 357, 361], "built": [2, 3, 5, 7, 68, 82, 83, 89, 95, 96, 103, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 275, 280, 328, 330, 331, 334, 343, 344, 345, 346, 349, 351, 358, 361], "upon": [2, 8, 356], "canon": 2, "definit": [2, 32, 75, 205], "markov": [2, 3, 347, 361], "decis": [2, 3, 181, 213, 231, 256, 268, 346, 347, 348, 355, 358, 361], "mdp": [2, 347, 356], "context": [2, 3, 5, 8, 31, 86, 87, 90, 103, 104, 110, 156, 161, 168, 206, 207, 231, 278, 279, 282, 283, 284, 285, 287, 295, 301, 314, 338, 339, 343, 344, 345, 355, 356, 357, 358], "condit": [2, 44, 155, 232, 233, 239, 240, 250, 343, 356, 358], "complet": [2, 7, 9, 72, 90, 120, 154, 337, 339, 343, 345, 347, 354], "termin": [2, 3, 7, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 89, 90, 91, 95, 96, 104, 105, 106, 108, 109, 110, 111, 112, 129, 144, 168, 177, 178, 194, 198, 202, 243, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 343, 344, 345, 346, 347, 348, 350, 351, 354, 355, 356, 357, 358, 360, 361], "truncat": [2, 3, 13, 14, 15, 16, 31, 36, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 104, 105, 106, 110, 111, 112, 129, 130, 137, 144, 147, 154, 168, 177, 194, 198, 222, 288, 343, 345, 346, 347, 348, 350, 351, 354, 357, 358, 360, 361], "reward": [2, 3, 13, 14, 15, 31, 33, 38, 39, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 117, 118, 123, 124, 125, 126, 128, 129, 130, 136, 140, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 159, 160, 161, 163, 164, 166, 168, 173, 176, 178, 194, 202, 231, 247, 251, 252, 254, 255, 257, 258, 259, 262, 265, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 311, 312, 314, 316, 334, 339, 340, 343, 344, 345, 346, 347, 348, 350, 351, 354, 355, 356, 357, 358, 360, 361], "imit": [2, 3], "addit": [2, 3, 4, 31, 53, 86, 90, 104, 110, 111, 124, 142, 156, 159, 160, 162, 164, 168, 192, 230, 231, 241, 250, 267, 282, 339, 343, 344, 347, 355, 358], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 42, 57, 86, 87, 90, 93, 104, 110, 168, 179, 180, 200, 206, 339, 340, 343, 344, 345, 346, 347, 355, 356, 358], "stateless": [2, 3, 86, 90, 104, 110, 159, 267, 343, 347, 356, 361], "simul": [2, 3, 5, 7, 8, 82, 83, 92, 95, 96, 107, 111, 112, 115, 178, 202, 338, 343, 345, 347, 351, 355], "furthermor": [2, 355], "certain": [2, 4, 17, 18, 19, 20, 31, 44, 86, 90, 104, 110, 116, 133, 154, 160, 168, 193, 197, 234, 266, 338, 343, 344, 345, 352, 355, 361], "organ": [2, 356, 358], "composit": [2, 3, 25, 27, 71, 76, 81, 86, 90, 104, 110, 345, 348, 356], "accommod": [2, 3, 347, 348], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 43, 45, 46, 65, 66], "unambigu": 2, "distinguish": [2, 111, 112], "happen": [2, 3, 86, 90, 104, 110, 230, 344, 349, 350, 351, 357, 361], "limit": [2, 39, 86, 90, 100, 104, 110, 120, 136, 251, 253, 266, 269, 271, 343, 344, 346, 355, 356], "everyth": [2, 344, 345, 346, 351, 352], "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 57, 165, 166, 338, 343, 350, 355], "rule": [2, 104, 125, 128, 242, 338, 345], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 33, 35, 36, 38, 44, 48, 53, 54, 55, 56, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 111, 112, 120, 122, 123, 125, 128, 129, 132, 135, 138, 140, 142, 145, 147, 150, 152, 154, 155, 156, 164, 166, 168, 176, 177, 194, 203, 204, 231, 232, 239, 240, 252, 272, 282, 283, 284, 285, 338, 343, 345, 346, 347, 348, 349, 351, 355, 356, 357, 358, 361], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 125, 128, 129, 130, 140, 144, 145, 147, 151, 154, 156, 160, 168, 176, 178, 188, 189, 194, 198, 202, 214, 215, 223, 226, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 322, 327, 337, 338, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "taken": [2, 3, 86, 90, 104, 110, 146, 203, 204, 235, 339, 343, 345, 346, 348, 355, 356], "is_shar": [2, 3, 13, 14, 15, 22, 25, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 125, 128, 129, 130, 140, 144, 145, 147, 151, 154, 156, 166, 176, 178, 188, 189, 194, 198, 202, 214, 215, 223, 226, 227, 228, 229, 231, 232, 233, 237, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 327, 338, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "brought": [2, 345, 346, 348], "step_mdp": [2, 3, 86, 90, 104, 110, 194, 198, 336, 346, 347, 356, 360, 361], "count": [2, 3, 31, 86, 87, 154, 237, 314, 318, 321, 343, 344, 345, 346, 358, 361], "trigger": [2, 7], "partial": [2, 3, 86, 90, 104, 110, 119, 120, 155, 156, 157, 318, 346], "turn": [2, 17, 18, 19, 20, 33, 35, 38, 134, 161, 165, 232, 314, 339, 343, 344, 346, 348, 356, 357], "retain": 2, "regard": [2, 53, 59, 189, 233, 251, 260, 269, 343, 345, 356], "posit": [2, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 90, 104, 110, 132, 133, 153, 154, 157, 160, 161, 168, 209, 272, 339, 345, 355, 356, 358], "both": [2, 3, 7, 31, 34, 37, 40, 41, 57, 86, 87, 89, 90, 104, 105, 106, 110, 120, 145, 160, 168, 177, 179, 180, 194, 197, 198, 200, 205, 206, 227, 228, 229, 233, 240, 251, 253, 254, 258, 259, 265, 266, 267, 269, 270, 271, 272, 274, 314, 338, 343, 345, 347, 349, 355, 356, 357, 358, 361], "ensur": [2, 3, 31, 34, 40, 65, 66, 72, 86, 90, 104, 110, 120, 142, 154, 162, 166, 168, 232, 338, 344, 345, 356, 358], "clearli": 2, "mark": [2, 3, 15, 59, 86, 90, 104, 110, 194, 198, 282, 284, 285, 350, 358], "identifi": [2, 36], "marl": [2, 99, 113, 120, 157, 205, 347, 355], "abov": [2, 3, 7, 31, 86, 90, 104, 110, 168, 195, 221, 222, 250, 339, 340, 343, 345, 347, 348, 355, 356, 361], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 118, 120, 123, 124, 125, 126, 128, 130, 136, 138, 142, 144, 145, 150, 151, 154, 157, 159, 162, 164, 165, 168, 169, 177, 179, 180, 181, 182, 183, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 205, 206, 209, 215, 224, 226, 227, 230, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 301, 309, 338, 339, 343, 344, 345, 346, 347, 348, 351, 354, 355, 356, 357, 358, 360, 361], "typic": [2, 3, 4, 8, 31, 86, 90, 104, 110, 129, 155, 168, 238, 252, 267, 269, 272, 338, 339, 340, 345, 347, 349, 350, 355, 356], "adjust": [2, 343, 355, 356], "grumodul": [2, 119], "lstmmodul": [2, 346], "skip": [2, 31, 51, 86, 90, 104, 110, 133, 160, 168, 169, 238, 242, 267, 272, 282, 283, 284, 285, 300, 301, 311, 314, 343, 344, 356], "accumul": [2, 8, 168], "upcom": [2, 267, 291, 292, 293, 294, 296, 297, 298, 299, 343], "n": [2, 3, 6, 7, 23, 26, 31, 32, 39, 86, 90, 104, 110, 120, 127, 132, 161, 168, 192, 193, 196, 202, 237, 242, 251, 259, 267, 281, 315, 338, 340, 344, 346, 348, 355, 358, 361], "popular": [2, 3, 338, 346, 349, 355], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 168, 336, 344], "fail": [2, 7, 21, 25, 27, 104, 117, 169], "shift": [2, 31, 248, 282, 283, 284, 285, 345], "naiv": [2, 162, 347], "consum": [2, 72, 74, 344, 345, 350, 355, 358], "approxim": [2, 355, 361], "twice": [2, 8], "flat": [2, 77], "would": [2, 3, 31, 39, 86, 90, 104, 110, 168, 192, 194, 196, 198, 200, 205, 340, 344, 345, 346, 347, 349, 350, 356, 358, 361], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 120, 186, 213, 251, 256, 268, 269, 309, 334, 345, 346, 355, 358], "2x": 2, "small": [2, 162, 343, 345, 355, 361], "clearer": [2, 348], "lazi": [2, 27, 28, 48, 49, 86, 90, 104, 110, 111, 112, 142, 162, 179, 205, 207, 243, 244, 343, 344, 348, 350, 354, 358, 361], "certainli": 2, "benefici": 2, "welcom": [2, 347], "wrapper": [2, 3, 11, 16, 33, 35, 38, 39, 40, 41, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 165, 209, 224, 230, 231, 235, 237, 242, 247, 282, 306, 307, 308, 334, 336, 345, 346, 347, 355, 357, 361], "around": [2, 5, 7, 16, 40, 41, 100, 242, 282, 343, 344, 355, 361], "selecttransform": [2, 86, 90, 104, 110], "excludetransform": [2, 58, 151, 358], "promptli": 2, "virtual": [2, 3, 89], "instal": [2, 3, 5, 10, 17, 18, 19, 53, 56, 86, 90, 104, 105, 106, 108, 109, 110, 303, 318, 337, 343, 345, 346, 347, 348, 349, 350, 351, 352, 355, 361], "respons": [2, 3, 8, 318, 349, 350, 361], "d4rl": [2, 53, 59], "repositori": [2, 7, 54, 55, 56, 59, 112], "wheel": [2, 345], "publish": 2, "openml": [2, 56, 103], "scikit": [2, 56, 103], "panda": [2, 56], "raw": [2, 3, 4, 39, 195, 221, 222, 344, 350, 356], "go": [2, 3, 7, 99, 104, 143, 147, 231, 288, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "natur": [2, 3, 343, 346, 348, 349, 350, 358], "modifi": [2, 3, 7, 8, 25, 27, 31, 44, 86, 90, 104, 110, 124, 132, 136, 142, 156, 159, 160, 162, 164, 168, 231, 237, 241, 321, 327, 343, 344, 345, 347, 355, 356], "fly": [2, 166, 266, 339, 345, 356, 358, 361], "extra": [2, 10, 31, 86, 90, 104, 110, 120, 166, 168, 176, 308, 338, 345, 346, 358], "least": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 123, 351, 361], "pre": [2, 7, 21, 31, 44, 57, 63, 86, 90, 104, 110, 142, 162, 164, 168, 361], "appli": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 119, 120, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 141, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 168, 192, 196, 221, 232, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 272, 274, 282, 313, 340, 343, 344, 345, 350, 356, 360, 361], "conisder": 2, "space": [2, 9, 32, 43, 86, 90, 104, 110, 123, 127, 173, 186, 189, 205, 211, 215, 226, 230, 232, 233, 235, 237, 238, 239, 240, 241, 242, 244, 245, 246, 255, 257, 258, 259, 274, 280, 338, 344, 345, 346, 347, 348, 349, 355, 356, 360, 361], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 54, 77, 94, 95, 96, 104, 105, 106, 123, 150, 179, 180, 190, 205, 206, 234, 303, 318, 332, 333, 343, 344, 345, 346, 348, 349, 352, 355, 358, 360], "pipelin": [2, 3, 7, 338, 345], "replac": [2, 3, 6, 7, 25, 27, 31, 51, 57, 66, 73, 74, 127, 129, 176, 234, 338, 358], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 57, 68, 86, 90, 104, 110, 147, 160, 168, 230, 235, 237, 316, 340, 344, 345, 346, 348, 351, 356, 358, 361], "produc": [2, 179, 180, 200, 206, 212, 227, 229, 231, 301, 345, 346, 347, 348, 350, 358, 361], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 72, 86, 90, 104, 110, 160, 168, 272, 345], "download": [2, 7, 10, 51, 53, 54, 55, 57, 58, 59, 94, 142, 164, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 344, 355, 356], "robosetexperiencereplai": [2, 73, 74], "fk1": [2, 58], "v4": [2, 58, 90, 104, 146, 291, 292, 293, 294, 296, 297, 298, 299, 327, 343, 345, 357], "expert": [2, 58], "fk1_microopenrandom_v2d": [2, 58], "func": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 167, 343, 358, 361], "obs_norm": 2, "norm": [2, 4, 8, 82, 83, 318, 343, 344, 345, 355, 356], "num_work": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 101, 104, 110, 343, 344], "os": [2, 35, 44, 60, 344], "cpu_count": [2, 35, 44, 60], "num_chunk": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59], "1000": [2, 4, 37, 65, 73, 74, 86, 90, 104, 110, 120, 166, 234, 237, 238, 242, 264, 343, 344, 345, 346, 348, 350, 352, 357, 358], "mp_start_method": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 110], "fork": [2, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 343, 344, 345, 346, 355, 357], "recreat": [2, 356], "customari": [2, 338], "moreov": [2, 3], "fine": [2, 86, 90, 104, 110, 136, 350, 357], "grain": [2, 86, 90, 104, 110], "nomenclatur": 2, "compact": 2, "propos": [2, 120, 129, 201, 264, 273, 327, 338, 346, 358], "replaybufferensembl": [2, 51, 71, 76, 81], "primit": [2, 3, 4, 57, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274], "individu": [2, 4, 17, 18, 19, 20, 31, 44, 68, 77, 86, 90, 104, 110, 168, 343, 355], "dummi": [2, 327, 343, 350, 361], "semant": [2, 27, 28, 338], "ident": [2, 3, 13, 14, 15, 31, 33, 35, 38, 73, 86, 90, 101, 104, 110, 129, 205, 206, 282, 283, 284, 285, 332, 333, 344, 347, 355], "another_kei": [2, 68], "renam": [2, 33, 35, 38, 68, 145, 147, 176, 343], "resiz": [2, 3, 59, 68, 120, 344, 346, 347, 358, 361], "imag": [2, 4, 7, 57, 122, 142, 158, 164, 200, 301, 343, 344, 347, 351, 355, 357, 361], "comops": 2, "totensorimag": [2, 3, 59, 68, 120, 146, 344, 346, 358, 360, 361], "renametransform": [2, 68, 86, 90, 104, 110], "rb0": [2, 68], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 100, 104, 110, 118, 119, 120, 121, 122, 123, 125, 127, 128, 132, 134, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 155, 157, 158, 159, 160, 162, 164, 166, 178, 188, 194, 198, 202, 214, 223, 224, 226, 227, 228, 229, 231, 232, 238, 239, 241, 242, 244, 245, 246, 251, 252, 253, 254, 255, 257, 258, 259, 265, 266, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 300, 301, 327, 330, 338, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 357, 358, 360, 361], "pixel": [2, 3, 7, 25, 59, 68, 84, 85, 89, 91, 92, 107, 120, 122, 129, 132, 134, 138, 140, 142, 146, 158, 162, 164, 182, 210, 211, 301, 327, 338, 343, 344, 346, 351, 357, 358, 360, 361], "rb1": [2, 68], "p": [2, 4, 68, 71, 87, 108, 109], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 100, 104, 110, 118, 119, 120, 121, 122, 123, 125, 128, 132, 134, 136, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 155, 157, 158, 159, 162, 164, 166, 178, 188, 189, 194, 198, 202, 214, 215, 223, 224, 226, 227, 228, 229, 231, 233, 238, 239, 240, 241, 242, 244, 245, 246, 251, 252, 253, 258, 259, 265, 266, 269, 270, 271, 272, 280, 282, 283, 284, 285, 301, 314, 330, 338, 343, 344, 345, 346, 348, 352, 354, 355, 356, 357, 358, 360, 361], "pixels33": [2, 68], "data0": [2, 68], "244": [2, 68, 142, 164, 356], "data1": [2, 68], "_": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 87, 94, 111, 112, 121, 125, 127, 128, 136, 138, 145, 158, 166, 168, 226, 241, 246, 250, 251, 252, 254, 258, 259, 265, 269, 270, 272, 274, 282, 283, 284, 285, 303, 343, 344, 345, 346, 352, 355, 356, 358, 360], "rang": [2, 3, 4, 8, 11, 26, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 86, 87, 90, 104, 110, 147, 158, 166, 168, 193, 197, 266, 274, 339, 340, 343, 345, 346, 349, 350, 352, 355, 356, 358, 360], "parent": [2, 3, 20, 25, 27, 43, 52, 68, 76, 81, 86, 90, 104, 110, 120, 121, 124, 126, 129, 132, 133, 138, 142, 150, 154, 155, 156, 157, 159, 161, 162, 168, 227, 267, 269, 286, 343, 350, 356, 360, 361], "basic": [2, 100, 338, 345, 349, 350, 352, 361], "properti": [2, 3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 110, 159, 160, 168, 187, 195, 207, 212, 220, 221, 222, 267, 272, 348, 350, 356, 358], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 45, 46, 86, 90, 100, 103, 104, 105, 106, 110, 111, 112, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 176, 177, 179, 180, 182, 183, 184, 185, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 205, 206, 207, 208, 215, 216, 217, 218, 219, 224, 226, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 312, 316, 321, 330, 338, 339, 340, 343, 344, 345, 346, 347, 355, 356, 360, 361], "send": [2, 3, 8, 308, 360], "receiv": [2, 3, 31, 39, 86, 90, 104, 110, 159, 168, 200, 288, 339, 343, 345, 349, 354, 356], "spawn": [2, 3, 4, 17, 21, 94, 101, 104, 110, 344, 355], "check_env_spec": [2, 3, 90, 104, 144, 336, 345, 355, 356], "saniti": [2, 3, 7, 169, 345], "utmost": 2, "commonli": [2, 66, 73, 74, 361], "emploi": [2, 208], "languag": [2, 39], "scarc": 2, "address": [2, 358], "subdomain": 2, "facilit": [2, 3, 7, 141, 142, 162, 164, 227, 228, 229, 338, 343, 346, 348, 356], "extern": [2, 3, 125, 128, 361], "token": [2, 35, 36, 39, 42, 44, 60], "manner": [2, 90, 142, 162, 338, 343, 344, 345, 350, 354, 356, 358], "dm": [3, 343, 361], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 44, 57, 70, 77, 78, 80, 82, 83, 86, 90, 94, 95, 96, 100, 101, 102, 104, 110, 111, 147, 156, 162, 163, 205, 227, 236, 251, 252, 254, 255, 257, 258, 259, 261, 265, 269, 270, 271, 272, 274, 308, 318, 327, 338, 339, 340, 343, 344, 346, 347, 348, 349, 355, 356, 358, 361], "goal": [3, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 155, 343, 344, 345, 346, 355, 356], "abl": [3, 99, 105, 106, 343, 345, 346, 348, 354, 355, 356, 358, 360], "experi": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 65, 66, 169, 303, 304, 305, 306, 307, 308, 337, 344, 345, 350, 351, 355, 358], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 86, 87, 90, 104, 105, 106, 108, 109, 110, 120, 123, 129, 135, 136, 138, 140, 145, 147, 150, 156, 159, 165, 166, 168, 327, 330, 343, 344, 345, 346, 354, 355, 357, 358, 360, 361], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 82, 83, 86, 90, 100, 104, 110, 124, 127, 129, 136, 142, 156, 159, 160, 162, 164, 168, 178, 179, 180, 182, 183, 184, 185, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 204, 205, 206, 209, 214, 215, 223, 226, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 241, 242, 243, 244, 246, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 327, 330, 338, 339, 343, 344, 345, 346, 348, 349, 352, 354, 355, 356, 357, 358, 360, 361], "organis": [3, 58, 86, 90, 104, 110, 160, 344], "arbitrari": [3, 32, 37, 86, 90, 104, 110, 338, 343, 344, 356, 358], "structur": [3, 7, 33, 34, 35, 37, 38, 39, 40, 41, 44, 77, 86, 90, 104, 110, 125, 128, 177, 205, 237, 282, 283, 284, 285, 286, 336, 339, 343, 345, 346, 347, 350, 355, 356, 357], "attribut": [3, 4, 31, 33, 35, 38, 44, 57, 86, 89, 90, 91, 104, 110, 129, 142, 162, 168, 194, 198, 242, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 343, 346, 356], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 110, 129, 168], "actual": [3, 4, 7, 51, 53, 54, 55, 57, 58, 59, 86, 90, 104, 110, 165, 321, 339, 343, 345, 355, 356], "retriev": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 86, 89, 90, 91, 104, 110, 121, 126, 129, 138, 176, 178, 179, 199, 202, 238, 242, 245, 251, 252, 253, 255, 266, 269, 270, 272, 274, 280, 282, 283, 284, 285, 327, 334, 340, 344, 345, 348, 356, 361], "care": [3, 8, 86, 90, 104, 110, 159, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 301, 343, 345, 355, 356, 358], "parametr": [3, 208, 242, 252, 258, 265, 272, 343, 345], "hardwar": 3, "observation_spec": [3, 86, 90, 100, 104, 110, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 134, 135, 136, 138, 140, 142, 144, 146, 150, 152, 154, 155, 156, 157, 158, 159, 161, 162, 165, 168, 178, 194, 198, 202, 322, 330, 343, 345, 349, 354, 355, 356, 361], "compositespec": [3, 27, 28, 48, 86, 88, 90, 100, 104, 110, 117, 125, 126, 127, 128, 130, 136, 144, 145, 151, 154, 156, 159, 168, 173, 177, 178, 202, 226, 230, 238, 244, 245, 336, 343, 345, 346, 355, 356, 361], "pair": [3, 31, 33, 35, 38, 53, 84, 85, 86, 90, 104, 110, 147, 156, 194, 227, 238, 242, 267, 282, 283, 284, 285, 286, 338, 339, 343, 344, 345, 348, 349, 354, 356, 361], "state_spec": [3, 86, 90, 100, 104, 110, 117, 178, 202, 356, 361], "reward_spec": [3, 86, 90, 100, 104, 110, 117, 118, 123, 124, 125, 126, 128, 144, 148, 149, 150, 152, 159, 161, 168, 178, 202, 345, 355, 356, 361], "done_spec": [3, 86, 90, 104, 110, 125, 126, 128, 129, 144, 159, 168, 177, 355, 356, 361], "flag": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 111, 112, 237, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 338, 355, 356, 357], "input_spec": [3, 86, 90, 100, 104, 110, 124, 125, 126, 127, 138, 140, 144, 145, 150, 151, 154, 155, 156, 159, 160, 161, 163, 168, 345, 356], "full_action_spec": [3, 86, 90, 104, 110, 178, 202, 345, 355], "full_state_spec": [3, 86, 90, 104, 110, 178, 202, 345], "lock": [3, 25, 27, 33, 35, 38, 86, 90, 104, 110, 156, 166, 356], "output_spec": [3, 86, 90, 104, 110, 124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 160, 168, 356], "full_observation_spec": [3, 86, 90, 104, 110, 178, 202], "full_reward_spec": [3, 86, 90, 104, 110, 144, 355], "full_done_spec": [3, 86, 90, 104, 110, 144, 177, 355], "importantli": [3, 238, 242], "action_s": 3, "help": [3, 4, 31, 86, 90, 104, 110, 129, 168, 251, 253, 266, 269, 271, 337, 339, 343, 344, 345, 346, 355], "With": [3, 95, 96, 99, 155, 340, 344, 355, 358, 361], "necessarili": [3, 86, 90, 104, 110, 361], "requir": [3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 53, 55, 57, 66, 73, 74, 86, 90, 94, 101, 104, 107, 110, 124, 142, 156, 159, 160, 162, 164, 168, 200, 224, 241, 243, 244, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 301, 303, 338, 340, 343, 344, 345, 346, 347, 348, 349, 351, 355, 356, 358, 361], "present": [3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 89, 90, 104, 110, 130, 147, 151, 176, 177, 181, 182, 183, 184, 185, 191, 196, 208, 213, 237, 241, 242, 243, 244, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 334, 340, 343, 352, 354, 355, 358, 360], "0s": [3, 51, 57, 156, 346], "step_and_maybe_reset": [3, 86, 90, 104, 110, 347], "done_kei": [3, 22, 86, 90, 104, 110, 120, 129, 147, 154, 168, 176, 355], "assign": [3, 4, 13, 14, 16, 31, 33, 35, 38, 86, 90, 104, 110, 160, 168, 254, 255, 257, 272, 345, 348, 355, 358], "_reset": [3, 86, 90, 100, 104, 110, 117, 120, 125, 128, 144, 177, 178, 202], "data_": [3, 86, 90, 104, 110], "append": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 104, 110, 123, 147, 156, 165, 193, 194, 197, 198, 232, 239, 343, 344, 345, 346, 355, 356, 357, 358, 360], "set_se": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 95, 96, 100, 104, 110, 138, 145, 150, 155, 157, 160, 168, 350, 352, 356, 360, 361], "seed": [3, 13, 14, 15, 16, 20, 58, 86, 90, 100, 104, 105, 106, 110, 111, 112, 117, 125, 128, 144, 160, 169, 318], "determinist": [3, 31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 181, 190, 210, 217, 226, 235, 241, 242, 245, 252, 338, 343, 344, 346, 348, 349, 352, 356, 361], "preced": [3, 31, 199, 346], "risk": [3, 143], "overlap": [3, 40, 77], "consecut": [3, 51, 72, 94, 198, 237, 346, 347, 350, 355, 358, 361], "reproduc": [3, 120, 169, 343, 345, 355], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 36, 39, 42, 44, 60, 62, 63, 64, 65, 79, 86, 90, 104, 110, 127, 148, 154, 155, 157, 220, 221, 222, 245, 252, 258, 259, 265, 267, 268, 272, 315, 343, 344, 345, 346, 348, 355, 358], "max_step": [3, 13, 77, 86, 90, 100, 104, 110, 111, 112, 154, 168, 347, 348, 349, 351, 352, 355, 360, 361], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 39, 82, 83, 86, 90, 100, 104, 110, 119, 136, 189, 194, 198, 202, 214, 215, 223, 224, 227, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 252, 254, 258, 259, 261, 262, 263, 265, 267, 270, 272, 274, 280, 281, 282, 283, 284, 285, 314, 330, 338, 343, 345, 346, 349, 352, 354, 355, 356, 357], "trail": [3, 166], "treat": [3, 31, 348, 349], "figur": [3, 343, 345, 346, 355, 356, 361], "summar": [3, 356], "brief": [3, 345, 347, 349, 358], "deliveri": 3, "design": [3, 31, 32, 71, 76, 81, 86, 90, 104, 110, 120, 143, 160, 168, 231, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 343, 344, 345, 346, 347, 348, 349, 354, 355, 356, 358, 361], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 32, 75, 86, 90, 104, 110, 154, 155, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 205, 206, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 318, 340, 343, 344, 345, 346, 347, 348, 355, 356], "flank": [3, 346], "dual": 3, "strictli": [3, 8, 31, 86, 90, 104, 110, 160, 168, 272, 343, 345], "refer": [3, 7, 8, 9, 20, 31, 39, 86, 89, 90, 91, 104, 110, 160, 166, 168, 178, 189, 190, 202, 203, 204, 205, 210, 211, 216, 217, 233, 251, 260, 261, 262, 263, 269, 272, 282, 287, 295, 342, 343, 345, 348, 349, 350, 351, 355, 358, 361], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 65, 66, 86, 90, 104, 110, 117, 127, 129, 135, 138, 142, 143, 147, 149, 151, 162, 164, 166, 168, 176, 180, 187, 189, 203, 204, 205, 206, 207, 208, 212, 214, 215, 220, 221, 222, 223, 241, 257, 259, 264, 270, 273, 295, 301, 312, 314, 315, 323, 324, 327, 328, 330, 331, 332, 333, 334], "carri": [3, 20, 44, 86, 90, 104, 110, 156, 267, 344, 346, 355, 356, 358], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 113, 343], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 57, 66, 73, 74, 336], "adjac": [3, 22, 132], "reli": [3, 192, 193, 196, 197, 251, 339, 343, 345, 348, 350, 356, 361], "junction": 3, "inittrack": [3, 194, 198, 343, 346], "tutori": [3, 335, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361], "scratch": [3, 8, 344, 356], "better": [3, 8, 9, 194, 198, 339, 345, 347, 356], "gym3": 3, "envpool": [3, 101, 102], "interfac": [3, 93, 103, 200, 207, 338, 343, 345, 351, 356, 358], "simultan": [3, 19, 101, 102, 104, 110, 356], "competit": [3, 355], "advantag": [3, 8, 191, 251, 253, 266, 269, 271, 282, 283, 284, 285, 286, 287, 289, 291, 293, 295, 296, 298, 339, 340, 343, 344, 345, 346, 355, 356, 361], "scale": [3, 4, 53, 120, 136, 138, 149, 155, 158, 190, 195, 209, 216, 217, 221, 222, 227, 228, 229, 238, 242, 244, 251, 252, 265, 269, 270, 271, 272, 316, 322, 327, 334, 338, 343, 344, 345, 346, 348, 355, 360], "varieti": 3, "inherit": [3, 86, 90, 104, 110, 201, 267, 340, 345, 355], "Of": [3, 7, 337, 356, 361], "cours": [3, 4, 337, 356, 361], "make_env": [3, 104, 110, 112, 166, 323, 324, 343, 344, 361], "from_pixel": [3, 82, 83, 84, 85, 89, 91, 92, 95, 96, 107, 120, 146, 301, 327, 343, 344, 346, 347, 351, 352, 357, 358, 360, 361], "81": [3, 344, 356, 358], "simpli": [3, 6, 33, 35, 38, 44, 76, 77, 81, 130, 151, 165, 267, 338, 339, 343, 345, 349, 355, 361], "d": [3, 34, 37, 40, 41, 54, 56, 58, 59, 60, 65, 66, 192, 196, 238, 242, 360], "privat": [3, 86, 90, 104, 110, 165, 356, 361], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 51, 74, 77, 253, 266, 269, 309, 311, 314, 318, 321, 322, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361], "behav": [3, 92, 100, 192, 196, 212, 258, 265, 357], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 39, 68, 71, 138, 149, 195, 207, 216, 221, 222, 280, 338, 348, 349, 356, 358], "inner": [3, 86, 90, 104, 110, 127, 340, 344, 345, 355, 361], "logic": 3, "nevertheless": [3, 345, 347, 358], "kept": [3, 22, 72, 74, 127, 151, 159, 169, 176, 195, 221, 222, 349], "mind": [3, 51, 57, 66, 73, 74, 86, 90, 104, 110, 355], "desig": 3, "wherev": 3, "expos": [3, 107, 125, 128, 243, 344], "modif": [3, 5, 25, 27, 31, 86, 90, 104, 110, 132, 168, 177, 267, 345, 356], "lost": [3, 8, 165], "eras": [3, 86, 90, 104, 110, 160], "intern": [3, 341], "face": [3, 5, 8, 9, 347, 361], "NOT": [3, 143], "outsid": [3, 15, 351, 355, 356], "keep": [3, 4, 7, 8, 14, 34, 37, 40, 41, 72, 77, 104, 110, 138, 142, 164, 166, 168, 176, 237, 311, 318, 343, 344, 345, 346, 350, 351, 352, 355, 356, 358, 360, 361], "right": [3, 6, 7, 22, 39, 199, 344, 345, 355, 356, 361], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 86, 90, 104, 110, 159, 160, 168, 169, 282, 283, 284, 285], "assumpt": [3, 356, 358], "preclud": 3, "presenc": [3, 349], "annihil": 3, "reason": [3, 4, 8, 31, 57, 86, 90, 104, 105, 106, 110, 142, 162, 168, 198, 339, 343, 344, 345, 349, 350, 356, 358], "advanc": [3, 20, 34, 37, 40, 41, 347, 350, 358], "explicitli": [3, 4, 344, 346, 350, 355, 358], "place": [3, 25, 27, 31, 33, 35, 38, 62, 63, 68, 71, 79, 86, 87, 90, 104, 110, 111, 112, 124, 129, 142, 156, 159, 160, 162, 164, 165, 166, 168, 177, 231, 241, 315, 320, 321, 344, 345, 348, 351, 355, 356, 358], "superse": 3, "pettingzoowrapp": [3, 336], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 86, 90, 99, 104, 105, 106, 110, 111, 112, 113, 338, 344, 348, 350, 355, 358], "associ": [3, 31, 33, 35, 38, 86, 90, 104, 110, 168, 216, 334, 343, 358], "environemtn": 3, "__not__": 3, "constrain": [3, 136, 194, 198, 269], "li": 3, "fact": [3, 7, 8, 343, 345, 347, 355, 356, 357, 358, 361], "predict": [3, 31, 39, 188, 190, 201, 202, 231, 247, 251, 253, 257, 260, 262, 263, 266, 269, 271, 281, 338, 343, 344, 349], "know": [3, 4, 9, 34, 37, 40, 41, 230, 270, 314, 343, 344, 345, 346, 347, 348, 349, 350, 355, 358], "meaning": 3, "perfectli": [3, 340, 343, 356], "case": [3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 77, 86, 90, 104, 110, 125, 126, 128, 158, 160, 169, 198, 200, 206, 238, 241, 242, 244, 245, 250, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 282, 283, 284, 285, 309, 320, 332, 333, 334, 336, 338, 340, 343, 344, 345, 346, 347, 348, 350, 351, 355, 356, 358, 361], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 349, 360], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 43, 45, 46, 51, 86, 90, 104, 110, 334, 338], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 121, 125, 127, 128, 129, 130, 132, 136, 137, 138, 140, 142, 144, 145, 147, 149, 151, 154, 156, 158, 160, 161, 162, 164, 166, 168, 169, 176, 177, 178, 179, 180, 182, 183, 192, 193, 194, 195, 196, 197, 198, 200, 202, 205, 206, 207, 208, 221, 222, 226, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 280, 282, 283, 284, 285, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 308, 311, 312, 314, 315, 316, 318, 327, 334, 344, 345, 346, 347, 348, 350, 351, 354, 355, 356, 357, 358, 360, 361], "500": [3, 343, 344, 356, 360], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 51, 54, 104, 110], "bottleneck": [3, 8], "great": [3, 7, 8, 360], "speedup": [3, 8, 361], "precis": [3, 125, 128, 176, 193, 197, 343, 345], "misspecifi": 3, "caus": [3, 7, 8, 62, 63, 79, 86, 90, 94, 104, 110, 143, 361], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 104, 110, 113, 120, 131, 137, 147, 155, 156, 157, 160, 168, 169, 230, 234, 235, 237, 272, 343, 345, 355, 358, 361], "mismatch": [3, 344], "mostli": [3, 16, 301, 339, 351, 358, 361], "subprocess": [3, 13, 14, 16, 87, 104, 110], "multithreadedenv": [3, 336], "underneath": 3, "higher": [3, 4, 123, 245, 343, 344, 345, 358, 361], "flexibl": [3, 9, 101, 275, 339, 340, 343, 358, 361], "cover": [3, 337, 345, 347, 350, 351, 356, 360], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 59, 60, 68, 86, 90, 99, 100, 103, 104, 105, 106, 110, 124, 125, 126, 129, 130, 136, 142, 144, 145, 151, 154, 156, 159, 160, 162, 164, 166, 168, 171, 175, 179, 180, 200, 205, 206, 208, 214, 223, 230, 232, 238, 241, 242, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 276, 280, 288, 327, 332, 336, 338, 343, 344, 345, 350, 355, 356, 358, 361], "atari": [3, 4, 51, 120, 301, 351, 361], "classic": [3, 100, 106, 344], "benchmark_batched_env": 3, "seamlessli": [3, 356], "infrastructur": [3, 355], "act": [3, 4, 73, 74, 105, 106, 188, 206, 252, 254, 265, 270, 272, 274, 346, 355, 358], "world": [3, 5, 100, 247, 262, 351, 355, 356, 361], "paradigm": [3, 16, 355], "decpodp": 3, "game": [3, 4, 5, 51, 301, 351], "thank": [3, 343, 347], "carrier": [3, 345, 346, 347, 358], "particular": [3, 31, 44, 53, 54, 86, 90, 104, 110, 160, 168, 339, 340, 344, 346, 347, 354, 355, 358], "thu": [3, 266, 355], "let": [3, 6, 7, 31, 34, 37, 40, 41, 42, 86, 90, 104, 105, 106, 110, 120, 168, 194, 198, 205, 206, 232, 314, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "vma": [3, 111, 112, 355], "robot": [3, 5, 7, 57, 142, 162, 164, 355], "what": [3, 8, 34, 43, 51, 86, 90, 104, 110, 129, 156, 169, 176, 239, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 356, 357, 358, 360, 361], "vmasenv": [3, 336, 355], "balanc": [3, 84, 85, 343, 344], "num_env": [3, 20, 89, 93, 102, 111, 112, 355], "n_agent": [3, 111, 112, 205, 206, 214, 223, 280, 355], "ground_rew": 3, "pos_rew": [3, 355], "style": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59], "relat": [3, 4, 10, 34, 104, 132, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 344, 352, 356], "vari": [3, 89, 91, 92, 105, 106, 107, 111, 143, 355], "creation": [3, 104, 110, 361], "info_spec": [3, 104], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 32, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 117, 144, 177, 255, 258, 259, 280, 336, 355, 361], "simpl": [3, 9, 31, 32, 86, 90, 104, 110, 168, 182, 242, 255, 257, 267, 271, 282, 338, 339, 343, 344, 345, 347, 348, 349, 355, 358, 361], "prefix": [3, 22, 31, 33, 35, 38, 44, 86, 90, 104, 110, 160, 168, 267, 272, 300, 346, 349, 361], "exactli": [3, 31, 86, 90, 92, 104, 110, 160, 168, 192, 196, 272, 343, 346, 350, 355], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 86, 90, 104, 110, 117, 127, 176, 178, 201, 202, 230, 234, 235, 237, 355], "reward_kei": [3, 86, 90, 104, 110, 168, 176, 178, 202, 312, 316, 355], "set_kei": [3, 129, 251, 253, 255, 258, 259, 260, 265, 266, 267, 269, 270, 271, 272, 280, 286, 343, 355], "awai": [3, 345, 347, 355], "eas": [3, 355], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 154, 242], "full": [3, 86, 90, 104, 110, 194, 198, 233, 309, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "torchvis": [3, 142, 164, 303, 360, 361], "base_env": [3, 83, 86, 90, 91, 96, 104, 110, 117, 123, 125, 127, 128, 136, 140, 144, 146, 152, 154, 156, 157, 168, 301, 343, 344, 345, 357, 360, 361], "appar": [3, 311], "bring": [3, 345, 347, 361], "signific": [3, 5, 8, 345, 361], "kind": [3, 37, 43, 176, 349, 358], "consult": 3, "interest": [3, 238, 242, 338, 344, 345, 347, 355, 356, 361], "resize_par": 3, "easi": [3, 5, 51, 56, 84, 85, 86, 90, 95, 96, 104, 110, 230, 234, 235, 237, 338, 339, 343, 344, 345, 355, 357, 358, 361], "graph": [3, 4, 8, 82, 83, 95, 96, 278, 279, 343, 356], "revers": [3, 196], "order": [3, 15, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 74, 86, 90, 104, 110, 121, 125, 128, 140, 160, 168, 226, 232, 241, 243, 244, 246, 251, 252, 254, 258, 259, 265, 269, 270, 271, 272, 274, 344, 355], "chain": [3, 33, 34, 35, 37, 38, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 124, 127, 179, 180, 244, 361], "invers": [3, 4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 120, 125, 128, 138, 147, 168, 249, 258, 265, 356], "in_keys_inv": [3, 123, 125, 128, 138, 139, 140, 144, 145, 147, 152, 159, 343, 354, 356, 361], "append_transform": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 119, 142, 156, 162, 343, 346, 356, 358, 360, 361], "doubletofloat": [3, 327, 343, 345, 354], "float32": [3, 13, 14, 15, 25, 34, 39, 40, 41, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 103, 104, 108, 109, 110, 111, 112, 125, 128, 129, 130, 138, 140, 144, 145, 147, 151, 154, 156, 158, 173, 176, 178, 188, 189, 194, 198, 202, 214, 215, 223, 226, 227, 228, 229, 231, 232, 237, 238, 239, 240, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 280, 327, 338, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361], "float64": [3, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 90, 104, 110, 124, 125, 128, 142, 156, 159, 160, 162, 164, 168, 241, 354], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 54, 86, 89, 90, 91, 104, 110, 125, 128, 129, 160, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 340, 343, 345, 347, 358], "manipul": [3, 4, 8, 84, 85, 142, 162], "third_transform": 3, "unexpect": [3, 31, 86, 90, 104, 110, 160, 168, 272, 361], "behviour": 3, "fortun": [3, 346, 347, 348, 351], "alreadi": [3, 8, 11, 31, 33, 35, 38, 44, 51, 86, 90, 104, 110, 156, 168, 177, 242, 282, 283, 284, 285, 343, 345, 351, 355], "chang": [3, 5, 7, 31, 34, 37, 40, 41, 51, 62, 63, 64, 72, 75, 76, 79, 86, 90, 104, 110, 124, 125, 126, 128, 130, 136, 144, 145, 151, 154, 159, 160, 166, 168, 196, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 339, 343, 346, 355, 356, 357, 358, 361], "catfram": [3, 344], "hold": [3, 278, 279, 356, 358], "notic": [3, 77, 120, 345, 352, 356], "parenthood": 3, "henc": [3, 34, 143, 177, 205, 338, 343, 345, 355, 356], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 104, 110, 356], "discret": [3, 23, 26, 29, 30, 32, 46, 86, 90, 104, 105, 106, 110, 111, 112, 127, 212, 215, 257, 258, 259, 260, 338, 344, 348, 355, 356, 361], "might": [3, 33, 35, 36, 38, 305, 337, 343, 347, 361], "action_mask": [3, 95, 96, 105, 106, 108, 109, 117], "unavail": [3, 105, 106], "probabl": [3, 4, 8, 39, 68, 71, 187, 189, 192, 194, 196, 198, 200, 203, 204, 212, 222, 234, 238, 242, 338, 344, 348, 360], "categor": [3, 26, 30, 32, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 129, 189, 212, 215, 232, 233, 238, 239, 240, 255, 258, 259, 280, 346], "probabilistictensordictmodul": [3, 136, 242, 243, 360], "tensordictsequenti": [3, 194, 198, 232, 234, 243, 338, 343, 344, 346, 348, 352, 354, 357, 360], "maskedcategor": [3, 204, 336], "linear": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 100, 104, 110, 124, 136, 142, 156, 159, 160, 162, 164, 168, 178, 179, 180, 182, 183, 184, 185, 189, 191, 200, 202, 205, 206, 207, 208, 209, 215, 216, 217, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 241, 244, 246, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 330, 338, 344, 354, 357, 360], "in_feat": 3, "out_feat": 3, "logit": [3, 35, 39, 188, 203, 204, 212, 233, 238, 258, 259, 338], "dist": [3, 10, 203, 204, 212, 348], "distribution_class": [3, 136, 227, 228, 229, 231, 238, 242, 244, 251, 252, 258, 259, 265, 269, 270, 271, 272, 338, 343, 345, 348, 355, 360], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 55, 82, 83, 86, 90, 91, 95, 96, 102, 104, 105, 106, 110, 112, 168, 169, 194, 198, 224, 227, 228, 229, 230, 235, 237, 239, 247, 280, 338, 343, 344, 345, 346, 349, 352, 355, 361], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 117, 143, 168], "enviorn": [3, 105, 106, 111, 112, 355], "itself": [3, 31, 86, 90, 104, 110, 114, 168, 267, 345, 347], "mission": 3, "irrespect": [3, 241, 242], "dmcontrol": [3, 86, 90, 104, 110], "jumanji": [3, 86, 90, 95, 96, 104, 110], "special": [3, 336, 338, 343, 346, 361], "framework": [3, 4, 9, 21, 82, 83, 86, 90, 95, 96, 100, 104, 110, 192, 360, 361], "Its": [3, 31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 166, 168, 241, 286], "success": [3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 120, 159, 234, 344, 350, 352, 356, 358, 360], "foundat": [3, 5, 105, 106, 345, 355], "inspir": [3, 356], "gone": [3, 4, 5], "hard": [3, 7, 77, 84, 85, 104, 264, 344, 361], "prefer": [3, 16, 19, 22, 34, 37, 40, 41, 143, 151, 269, 315, 338, 345, 355, 358], "maintain": [3, 5, 9, 356], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 344, 345, 346, 350, 355, 356, 358, 361], "decor": [3, 8, 11, 116, 267, 282, 283, 284, 285], "set_gym_backend": [3, 86, 89, 90, 104, 110, 114, 336, 347], "relev": [3, 39, 282, 283, 284, 285, 286, 308, 356], "gym_backend": [3, 116, 336], "env1": [3, 354], "venv": 3, "python3": [3, 6, 7, 10, 343, 358, 361], "site": [3, 6, 7, 58, 116, 343, 358, 361], "env2": [3, 354], "_env": [3, 6, 89, 361], "classic_control": 3, "pendulumenv": [3, 356], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 98, 114], "handi": [3, 86, 90, 104, 110, 351], "side": [3, 4, 361], "v0": [3, 86, 90, 92, 95, 96, 97, 98, 104, 110, 124, 160, 166, 330], "26": [3, 86, 90, 104, 110, 342, 344, 345, 356, 357, 359], "fun": [3, 11, 116, 345, 355, 358], "reveal": 4, "bug": [4, 360], "curv": 4, "won": [4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 57, 86, 87, 89, 90, 101, 102, 104, 110, 142, 164, 168, 318, 334, 344, 345, 347, 348], "exploit": [4, 348], "video": [4, 9, 301, 303, 314, 334, 352, 355], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 136, 355, 357], "coeffici": [4, 39, 136, 355], "bonu": [4, 251, 253, 266, 269], "beta": [4, 34, 40, 65, 66, 258, 265, 266, 343, 344, 358, 360], "reduc": [4, 6, 26, 77, 155, 344], "downstream": [4, 343], "formul": [4, 355], "ob": [4, 8, 22, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 73, 74, 77, 86, 90, 104, 110, 117, 125, 126, 128, 138, 152, 158, 173, 176, 182, 183, 184, 185, 205, 206, 239, 246, 252, 254, 259, 265, 270, 272, 274, 282, 283, 284, 285, 344, 354, 356, 358, 360, 361], "rate": [4, 51, 166, 281, 344, 345, 355], "gradient": [4, 31, 86, 90, 104, 110, 160, 168, 195, 204, 208, 212, 221, 222, 251, 253, 254, 258, 259, 265, 266, 267, 269, 270, 271, 272, 274, 281, 282, 283, 284, 285, 318, 343, 345, 355, 356], "easier": [4, 338, 343], "local": [4, 7, 10, 15, 20, 31, 86, 90, 104, 110, 160, 168, 205, 206, 214, 223, 280, 306, 308, 351, 352, 355], "optima": 4, "sens": [4, 350, 356], "product": [4, 9, 192, 193, 196, 197, 332, 333], "sum": [4, 20, 30, 32, 77, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 119, 150, 203, 204, 223, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 268, 269, 270, 271, 272, 274, 281, 288, 339, 343, 344, 345, 346, 349, 352, 355, 356, 361], "track": [4, 13, 14, 15, 16, 17, 18, 19, 20, 41, 72, 150, 166, 168, 237, 306, 311, 344, 346, 347, 350, 355, 356, 358], "stat": [4, 138, 322, 334, 344, 345], "w": [4, 68, 120, 122, 146, 158, 192, 237, 301, 344, 346, 358], "r": [4, 31, 117, 123, 138, 152, 193, 242, 250, 281, 338, 344, 356, 361], "yield": [4, 15, 20, 31, 86, 90, 104, 110, 168, 267, 343, 349], "insight": 4, "auxiliari": [4, 349], "credit": 4, "futur": [4, 31, 33, 35, 38, 86, 90, 104, 110, 142, 160, 164, 168, 200, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 337, 360], "past": [4, 344, 358], "spars": [4, 346], "ad": [4, 15, 22, 31, 34, 37, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 86, 90, 104, 110, 150, 160, 168, 207, 208, 237, 251, 253, 255, 260, 266, 269, 272, 280, 344, 346, 348, 358, 361], "intermedi": [4, 119, 194, 198, 233, 343, 357], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 343], "discov": 4, "score": [4, 39], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 360], "select": [4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 105, 106, 111, 112, 117, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 141, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 162, 163, 165, 166, 168, 178, 194, 198, 232, 239, 317, 343, 347, 358], "fall": [4, 53], "explicit": [4, 11, 44, 68, 199, 358], "mechan": [4, 31, 86, 90, 104, 110, 160, 168, 344, 349, 356], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 86, 90, 104, 110, 196, 258, 265, 345, 355], "addition": 4, "timestep": [4, 39, 53, 147, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 355], "realli": 4, "larg": [4, 26, 33, 35, 38, 125, 128, 162, 251, 253, 266, 269, 271, 344, 345, 355, 358], "huge": [4, 206, 346], "std": [4, 138, 166, 209, 213, 230, 343, 361], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 342, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 359], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 39, 77, 86, 90, 104, 110, 119, 138, 142, 156, 159, 160, 162, 167, 168, 178, 192, 193, 196, 197, 202, 207, 208, 230, 234, 235, 237, 251, 252, 254, 255, 257, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 327, 334, 343, 344, 346, 347, 348, 350, 356, 361], "estim": [4, 51, 66, 73, 74, 129, 136, 182, 227, 228, 229, 251, 252, 253, 254, 255, 257, 259, 260, 261, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 339, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 217, 262, 355], "freshli": 4, "doesn": [4, 11, 77, 101, 125, 128, 347], "drop": [4, 72, 74, 176], "meant": [4, 31, 100], "encourag": [4, 104, 343, 344, 358], "measur": [4, 62, 63, 79, 82, 83, 95, 96, 345, 350], "novelti": 4, "revisit": 4, "previous": [4, 345, 361], "diminish": 4, "decreas": [4, 348], "ideal": [4, 138, 356], "down": [4, 13, 14, 15, 16, 346, 347], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 33, 35, 38, 344, 345, 346, 349, 350, 355, 356, 360, 361], "distil": 4, "nois": [4, 167, 208, 225, 237, 270, 274, 314, 334, 343], "exploratori": [4, 251, 253, 266, 269], "misalign": 4, "trade": [4, 348], "unavoid": 4, "divers": [4, 104, 110], "bootstrap": [4, 260, 283, 289, 290, 343, 346], "noisi": [4, 207, 208, 225, 338], "unstabl": [4, 195, 221, 222], "inher": 4, "stochast": [4, 136, 190, 208, 210, 217, 252, 256, 258, 259, 265, 268, 270, 272, 338, 345, 348, 355], "enemi": 4, "pomdp": [4, 358], "loos": [4, 338, 344, 345], "nonexist": 4, "architectur": [4, 186, 349, 355], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 34, 36, 37, 39, 42, 44, 57, 60, 61, 68, 69, 71, 76, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 118, 119, 120, 121, 122, 125, 127, 128, 132, 134, 138, 139, 143, 144, 145, 146, 147, 148, 149, 150, 155, 157, 158, 159, 166, 179, 180, 187, 189, 192, 196, 200, 203, 204, 205, 206, 212, 215, 219, 231, 243, 244, 256, 300, 301, 313, 314, 315, 317, 318, 327, 338, 343, 345, 346, 354, 355, 361], "lstm": [4, 197, 198, 199, 209], "rel": [4, 68, 156, 187, 220, 343, 344, 355, 358], "tend": 4, "stabl": [4, 9, 10, 103], "compens": 4, "descent": [4, 208], "minimum": [4, 104, 110, 148, 190, 209, 220, 221, 222, 245, 248, 250, 252, 259, 267, 268, 272, 309, 343, 345, 352, 355], "manual": [4, 17, 19, 20, 90, 343, 346, 358], "deviat": [4, 138, 166, 178, 190, 202, 207, 208, 213, 230, 269, 274, 343, 348, 355], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 73, 192, 193, 196, 197, 347, 348, 349, 350, 351, 352], "stabil": [4, 133, 251, 253, 266, 269, 271], "stage": [4, 343, 356], "never": [4, 13, 14, 16, 350], "prevent": [4, 25, 27, 195, 221, 222, 251, 253, 266, 269, 271, 316, 358], "entir": [4, 57, 86, 90, 104, 110, 205, 345, 347, 356, 358], "submit": [4, 337, 360], "suffici": [4, 343], "system": [4, 5, 345, 355, 356], "adequ": [4, 169, 345, 355], "infeas": 4, "allevi": [4, 338], "prune": 4, "fire": [4, 31, 86, 90, 104, 110, 168], "illeg": 4, "move": [4, 31, 59, 86, 90, 104, 110, 124, 126, 142, 156, 159, 160, 162, 164, 166, 168, 176, 200, 241, 316, 343, 344, 346, 347, 360, 361], "chess": 4, "combin": [4, 159, 344, 351, 358], "grasp": 4, "top": [4, 77, 82, 83, 95, 96, 178, 202, 348], "sampl": [4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 79, 86, 90, 100, 103, 104, 110, 119, 120, 143, 147, 170, 171, 174, 175, 178, 187, 195, 202, 203, 204, 212, 213, 216, 221, 222, 226, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 251, 252, 253, 254, 255, 257, 266, 268, 269, 274, 309, 315, 318, 321, 336, 338, 343, 344, 345, 346, 347, 348, 350, 352, 355, 357, 360, 361], "wherein": 4, "cumul": [4, 150, 155, 178, 288, 345], "q": [4, 9, 86, 90, 104, 110, 182, 183, 184, 185, 188, 189, 191, 214, 215, 223, 229, 233, 239, 240, 252, 254, 255, 257, 258, 259, 260, 264, 265, 270, 272, 274, 280, 327, 336, 343, 349], "flow": [4, 343, 345, 355, 356, 358], "reparameter": [4, 187, 204, 212], "soft": [4, 264, 272, 273], "critic": [4, 8, 227, 236, 251, 253, 254, 258, 259, 265, 266, 269, 270, 271, 272, 274, 343, 349], "clip": [4, 39, 123, 148, 251, 253, 266, 269, 271, 274, 318, 345, 355, 356], "oppos": [4, 44], "incorrect": 4, "thought": [4, 86, 90, 104, 110], "bound": [4, 20, 24, 25, 31, 86, 90, 104, 110, 123, 137, 166, 168, 216, 217, 226, 232, 233, 237, 238, 239, 240, 241, 242, 245, 274, 338, 343, 344, 345, 361], "region": 4, "squash": [4, 346, 360], "tanh": [4, 179, 180, 192, 193, 195, 196, 197, 200, 206, 220, 221, 222, 245, 345, 348, 355, 356, 357, 360], "correct": [4, 33, 35, 38, 86, 90, 104, 110, 136, 321, 345, 346], "prob": [4, 203, 204, 212, 345, 355], "rememb": 4, "remap": 4, "origin": [4, 8, 33, 35, 38, 39, 94, 126, 127, 136, 142, 160, 164, 168, 192, 238, 241, 242, 264, 267, 269, 327, 343, 354, 356, 361], "histor": 5, "ceas": 5, "farama": [5, 55, 97, 98, 105, 106, 345, 356], "bc": [5, 360], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 104, 110, 168, 169, 226, 232, 233, 238, 239, 240, 241, 242, 345, 355], "best": [5, 9, 94, 194, 198, 355, 358, 360], "gymwrapp": [5, 86, 90, 104, 110, 130, 151, 154, 165, 336, 345, 360], "feel": [5, 337, 352, 360], "free": [5, 7, 125, 128, 251, 262, 269, 340, 345, 352, 355, 360], "gladli": 5, "prepar": [6, 54, 345], "conda": [6, 7, 337], "cmake": 6, "activ": [6, 7, 9, 179, 180, 186, 190, 200, 205, 206, 253, 266, 269, 338, 356, 360], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 54, 337], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 92], "y": [6, 7, 37, 103, 191, 199, 205, 224, 343, 355, 358], "facebookresearch": [6, 54, 92], "subdirectori": 6, "verbos": [6, 352], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 48, 86, 90, 104, 110, 144, 153, 168, 267, 355, 361], "command": [6, 7, 10, 345, 355, 356, 361], "readm": [6, 7, 111], "md": [6, 7], "habitatenv": [6, 336], "_has_habitat": 6, "available_env": [6, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 97, 103, 104, 107, 108, 109, 110, 111, 112, 361], "startswith": [6, 339, 343, 349], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 87, 267, 343], "env_nam": [6, 82, 84, 86, 89, 90, 92, 95, 97, 101, 104, 107, 110, 343, 345, 361], "llvmlite": 6, "config": [6, 7, 142, 164, 181, 186, 213, 322, 323, 324, 327, 328, 331], "var": [6, 7, 31, 86, 90, 104, 110, 160, 168, 267, 272], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 232], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 86, 90, 104, 110, 160, 168, 267, 272, 358], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 86, 344, 352], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 53], "stand": [7, 84, 85, 104, 110, 354, 356], "joint": [7, 344], "dynam": [7, 54, 57, 59, 168, 258, 265, 345, 347, 356], "contact": [7, 36], "engin": [7, 107, 356], "biomechan": 7, "graphic": 7, "anim": [7, 355], "area": 7, "demand": [7, 351, 361], "fast": [7, 9, 82, 83, 145, 270, 343, 344, 345], "accur": [7, 53, 59, 344, 356, 358], "articul": 7, "acquir": [7, 345], "deepmind": [7, 8, 9, 57, 84, 85, 86, 90, 104, 110, 129, 345, 347], "whomev": 7, "licenc": 7, "incorpor": [7, 86, 90, 104, 110, 230, 234, 235, 237, 346, 348, 356], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 337], "tip": [7, 337], "glfw": [7, 343], "osmesa": 7, "egl": 7, "advic": [7, 57, 361], "sudo": [7, 337], "enabl": [7, 8, 53, 62, 63, 72, 79, 194, 198, 237, 314, 345, 347, 355, 356, 358], "apt": [7, 355], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 62, 63, 64, 75, 76, 79, 344, 346], "workflow": [7, 227, 228, 229], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 23, 26, 32, 118, 189, 215, 232, 233, 239, 240, 255, 258, 259, 280], "mkdir": 7, "tag": [7, 301, 303, 306, 334, 351, 352], "earlier": [7, 343, 345, 346, 355, 358], "roboti": 7, "html": [7, 101, 103], "wget": 7, "mujoco210": 7, "tar": [7, 54], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 104, 110], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 33, 35, 44, 60], "bin": [7, 189, 233, 338], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 185, 238, 242, 343, 345, 358], "nvidia": [7, 94], "older": [7, 11], "hack": [7, 343], "line": [7, 31, 51, 86, 90, 104, 110, 168, 343, 344, 351, 355, 358, 361], "adatp": 7, "script": [7, 54, 169, 327, 330, 334, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "unnot": [7, 143], "until": [7, 20, 157, 159, 168, 345, 346, 352, 355], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 344, 358], "troubleshoot": 7, "gl": 7, "h": [7, 68, 120, 122, 146, 158, 192, 193, 194, 196, 197, 198, 202, 301, 344, 346, 358], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 306, 308, 340, 343, 348, 351], "devel": 7, "ubuntu": [7, 94], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 344, 346, 354], "libstdc": 7, "glibcxx_3": 7, "29": [7, 344, 345, 346, 356, 358], "compil": [7, 31, 86, 90, 104, 110, 168, 192, 193, 196, 197, 199], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 165, 345, 354], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 86, 90, 104, 110, 137, 160, 168, 272, 358, 361], "job": [7, 17, 18, 19, 21, 37, 358], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 82, 83, 342, 344, 348, 356, 357, 359], "114": [7, 356], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 356], "offscreenopenglcontext": 7, "opengl": [7, 355], "global": [7, 31, 86, 90, 104, 105, 106, 110, 168, 214, 223, 238, 242, 280, 340, 343, 355], "cuda_visible_devic": 7, "id": [7, 22, 39, 66, 68, 73, 74, 86, 89, 90, 104, 110, 237, 270, 304, 308, 327, 350, 358], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 356], "correctli": [7, 31, 86, 90, 104, 110, 168], "lgl": 7, "libegl": 7, "x11": [7, 355], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 340], "n_training_step": 8, "datapoint": [8, 44, 358], "n_data_per_train": 8, "no_grad": [8, 31, 86, 90, 104, 110, 136, 168, 192, 193, 196, 197, 282, 283, 284, 285, 345, 346, 355], "loss_fn": [8, 346, 349, 350, 360], "zero_grad": [8, 31, 86, 90, 104, 110, 168, 340, 343, 345, 346, 349, 352, 355, 356], "backpropag": [8, 82, 83, 95, 96, 104, 251, 252, 253, 258, 259, 260, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 274, 280, 349, 355, 356], "differenti": [8, 44, 82, 83, 136, 282, 283, 284, 285, 346, 348, 349, 355, 356], "denomin": 8, "artifact": 8, "numer": [8, 37, 90, 166, 195, 221, 222, 226, 232, 233, 238, 239, 240, 241, 242, 316, 345, 358, 361], "misconcept": 8, "freed": 8, "appear": [8, 32, 51, 57, 66, 73, 74, 356, 358], "compuat": 8, "fix": [8, 104, 156, 252, 268, 272, 344, 352, 356, 361], "retain_graph": [8, 82, 83], "discuss": [8, 9, 350, 355], "inplac": [8, 31, 33, 35, 38, 86, 90, 104, 110, 168, 343], "onto": [8, 32, 33, 35, 38, 173, 226, 230, 232, 233, 237, 238, 239, 240, 241, 242, 346, 356], "exclud": [8, 53, 58, 86, 90, 104, 110, 120, 130, 176, 214, 355, 358], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 117, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 142, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 162, 163, 165, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 205, 206, 207, 209, 210, 211, 213, 214, 216, 217, 219, 223, 224, 230, 231, 233, 234, 237, 238, 240, 241, 242, 245, 246, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 339, 356, 358, 360, 361], "submodul": [8, 31, 86, 90, 104, 110, 114, 168, 267], "param": [8, 31, 39, 86, 90, 100, 104, 110, 124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 168, 187, 189, 220, 231, 238, 241, 244, 267, 276, 279, 282, 283, 284, 285, 286, 343, 352, 355, 356, 357, 360], "grad": [8, 31, 82, 83, 86, 90, 104, 110, 168, 343, 345], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 86, 90, 104, 105, 106, 110, 124, 142, 156, 159, 160, 162, 164, 168, 209, 214, 241], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 40, 65, 66, 120, 132, 143, 161, 261, 282, 284, 285, 339, 345, 355, 356], "much": [8, 13, 14, 16, 34, 40, 57, 65, 66, 104, 110, 266, 269, 345, 347, 351, 355, 356, 358, 361], "render": [8, 111, 301, 314, 343, 344, 345, 347, 351], "factor": [8, 31, 147, 168, 195, 208, 221, 222, 230, 234, 235, 237, 252, 257, 260, 261, 263, 273, 288, 343, 344, 348, 352, 355, 358, 361], "fit": [8, 11, 138, 339, 340, 343], "bottlneck": 8, "brax": [8, 82, 83, 86, 90, 104, 110, 145, 347, 361], "jax": [8, 11, 82, 83, 95, 96], "improperli": 8, "underli": [8, 86, 90, 104, 110, 267, 347, 349, 351, 356], "tedeiou": 8, "priorit": [8, 34, 40, 65, 66, 254, 255, 257, 258, 259, 265, 270, 272, 274, 343, 344, 350], "amount": [8, 237, 344, 358], "costli": [8, 356], "constitut": [8, 344, 355, 356], "plain": [8, 347], "profil": 8, "fulli": [8, 31, 86, 90, 104, 110, 168, 193, 197, 344, 349, 356, 358], "frequent": [8, 358], "program": [8, 258, 265, 361], "functorch": [8, 10], "incl": 8, "suit": [8, 85, 345, 347, 361], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 73, 74, 241, 244, 267, 355, 356, 358, 360], "new_shap": 8, "permut": [8, 72, 140, 360, 361], "idea": [9, 270, 340, 346, 348, 355], "introductori": 9, "intro": [9, 345, 346], "dai": [9, 360], "2022": [9, 10, 356, 360], "spin": [9, 84, 85], "deep": [9, 120, 182, 183, 184, 185, 188, 237, 251, 264, 272, 273, 343], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 348], "summari": [9, 138, 166, 343, 344, 345, 346], "reddit": 9, "reagent": 9, "orient": [9, 59, 361], "baselines3": 9, "tf": 9, "bandit": [9, 103], "tensorflow": [9, 203, 204], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 352], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 360], "grade": 9, "factori": [9, 42, 343], "cherri": 9, "jaxrl": 9, "mbrl": [9, 100, 338], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 356], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 345, 346, 355], "notebook": [10, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "24": [10, 58, 74, 89, 101, 102, 342, 344, 345, 356, 359], "pip3": [10, 343, 345, 346, 355], "url": [10, 92], "org": [10, 34, 54, 55, 57, 59, 65, 66, 82, 83, 84, 85, 92, 95, 96, 101, 102, 103, 107, 111, 112, 120, 142, 162, 181, 182, 183, 184, 185, 186, 189, 190, 191, 196, 202, 203, 204, 208, 210, 211, 214, 216, 217, 223, 233, 237, 251, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 271, 272, 273, 282, 287, 295, 335, 353, 357], "whl": 10, "u": [10, 56, 192, 193, 196, 197, 356], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 267], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 68, 77, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 120, 127, 129, 135, 136, 138, 142, 143, 146, 151, 154, 155, 160, 162, 164, 165, 166, 168, 170, 174, 176, 177, 178, 188, 189, 194, 198, 199, 201, 202, 205, 206, 207, 208, 209, 214, 215, 223, 226, 232, 233, 238, 239, 240, 241, 242, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 280, 281, 282, 283, 284, 285, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 322, 327, 328, 334, 344, 345], "callabl": [11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 100, 104, 110, 116, 129, 168, 179, 180, 200, 250, 323, 324, 332, 333, 334, 344, 358], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 194, 198, 199, 360], "longer": [11, 344, 352, 355, 358], "self": [11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 86, 90, 100, 104, 110, 117, 124, 125, 128, 142, 144, 156, 159, 160, 162, 164, 168, 178, 189, 202, 214, 223, 230, 234, 238, 241, 246, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 282, 283, 284, 285, 286, 340, 343, 356, 358, 360, 361], "x": [11, 22, 25, 31, 37, 39, 57, 74, 136, 158, 180, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 205, 206, 224, 232, 238, 239, 248, 250, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 318, 343, 356, 358, 360], "23": [11, 58, 74, 342, 344, 346, 349, 355, 356, 357, 359], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 58, 82, 83, 90, 95, 96, 197, 250, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 343, 344, 345, 346, 352, 355, 356, 358, 361], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 120, 121, 127, 138, 155, 156, 157, 160, 166, 168, 192, 195, 196, 205, 206, 221, 222, 232, 239, 245, 252, 262, 267, 268, 272, 282, 284, 285, 314, 315, 340, 343, 344, 345, 346, 356, 361], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 86, 90, 104, 110, 162, 181, 213], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 58, 86, 87, 88, 90, 101, 104, 105, 106, 110, 111, 112, 113, 136, 156, 160, 165, 166, 168, 179, 180, 181, 182, 183, 184, 185, 186, 191, 199, 200, 213, 238, 242, 272, 305, 306, 314, 323, 324, 327, 332, 333, 334, 343, 344, 345, 358, 361], "setter": 11, "setter_dict": 11, "copi": [11, 17, 18, 19, 20, 31, 33, 35, 38, 39, 44, 57, 86, 90, 104, 110, 145, 155, 160, 168, 176, 194, 198, 231, 267, 272, 339, 343, 344, 346, 347, 358], "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "tensordictbas": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 86, 88, 90, 104, 110, 117, 119, 120, 121, 124, 125, 126, 129, 130, 131, 132, 135, 136, 141, 143, 144, 145, 147, 150, 151, 154, 155, 156, 157, 159, 165, 166, 168, 176, 177, 178, 194, 198, 201, 202, 230, 231, 233, 234, 237, 240, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 274, 280, 281, 282, 283, 284, 285, 286, 318, 343, 356], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 87, 104, 110, 343, 360], "device_typ": [13, 15, 16, 26, 29, 32, 179, 180, 181, 182, 183, 184, 185, 191, 199, 200, 205, 206, 207, 208, 213], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 344], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 344], "create_env_kwarg": [13, 14, 15, 16, 20, 87, 101, 104, 110, 343, 361], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 31, 147, 344, 358], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 267, 314, 343, 344, 345, 346, 348, 360], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 171, 175, 238, 242, 314], "exploration_mod": [13, 15, 16, 17, 18, 19, 336, 338], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 32, 34, 39, 40, 45, 57, 65, 66, 68, 86, 90, 104, 110, 120, 124, 125, 128, 136, 138, 142, 147, 148, 149, 155, 156, 158, 159, 160, 162, 164, 166, 168, 187, 190, 192, 195, 196, 200, 203, 204, 207, 208, 216, 217, 220, 222, 230, 241, 245, 248, 249, 250, 251, 252, 253, 257, 258, 259, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 316, 343, 344, 358, 361], "num_thread": [13, 14, 16, 33, 35, 38, 104, 110], "num_sub_thread": [13, 14, 16, 104, 110], "datacollector": [13, 14, 15, 16, 31, 242, 269, 345, 350, 358], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 226, 230, 232, 233, 237, 238, 239, 240, 241, 242, 244, 338, 360], "sota": [13, 14, 100, 133, 271, 309, 323, 343, 344, 345, 348, 349, 350, 355, 360], "env_mak": [13, 14, 15, 20, 330, 361], "50": [13, 14, 15, 20, 36, 39, 51, 59, 73, 74, 168, 342, 344, 345, 346, 355, 356, 358, 359], "2000": [13, 14, 15, 31, 44, 93, 345, 358], "int64": [13, 14, 15, 22, 26, 29, 33, 35, 36, 38, 39, 40, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 86, 90, 99, 103, 104, 105, 106, 108, 109, 110, 129, 140, 147, 154, 189, 215, 232, 233, 237, 238, 239, 240, 338, 345, 346, 347, 348, 350, 351, 356, 358, 360], "shutdown": [13, 14, 15, 16, 20, 343, 360], "del": [13, 14, 15, 343, 345, 354, 360, 361], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 119, 224, 232, 239, 346], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 44], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 344], "divis": [13, 14, 15, 16, 17, 18, 19, 51, 57, 66, 73, 74, 355], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 90, 156, 165, 198, 346, 356, 357], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 320, 344], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 60, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 101, 102, 104, 107, 110, 124, 125, 128, 136, 142, 156, 159, 160, 162, 164, 166, 168, 241, 327, 361], "span": [13, 14, 15, 16, 17, 18, 19, 20, 57, 73], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 168, 344, 345, 355], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 39, 308, 338, 355, 356], "round": [13, 14, 15, 16, 17, 18, 19, 20, 51], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 55, 86, 90, 104, 110, 168], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 165, 360], "ratio": [13, 14, 16, 39, 343, 345], "finish": [13, 14, 16, 20, 90, 147, 361], "rest": [13, 14, 16, 338, 345, 346, 356, 360], "earli": [13, 14, 16, 31, 90, 154, 360], "equal": [13, 14, 16, 51, 66, 73, 74, 101, 104, 110, 137, 138, 179, 180, 192, 194, 196, 198, 200, 206, 273, 277, 309, 332, 333, 343, 345, 357], "plu": [13, 14, 16, 39, 104, 110, 356], "safeti": [13, 14, 16, 100, 104, 110], "harm": [13, 14, 16, 104, 110], "ordereddict": [13, 14, 15, 16, 20, 31, 86, 90, 104, 110, 160, 166, 168, 272, 344], "form": [13, 14, 16, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 166, 168, 192, 194, 196, 198, 250, 251, 253, 266, 269, 318, 338, 348, 355], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 86, 90, 104, 110, 160], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 32, 39, 46, 66, 73, 74, 75, 86, 90, 104, 110, 129, 133, 138, 154, 179, 180, 200, 205, 206, 258, 265, 272, 358], "increment": [13, 14, 15, 16, 86, 90, 104, 110, 266], "env_fn": [13, 14, 15, 16, 87, 332, 333], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 73, 74, 184, 185, 356], "out_se": [13, 14, 15, 16, 361], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 45, 51, 53, 54, 65, 68, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 124, 142, 144, 153, 156, 159, 160, 161, 163, 164, 167, 168, 178, 179, 180, 182, 183, 184, 185, 188, 191, 194, 195, 198, 200, 201, 202, 205, 206, 212, 220, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 280, 281, 282, 283, 284, 285, 286, 301, 305, 306, 308, 311, 318, 323, 324, 327, 331, 332, 333, 339, 343, 345, 355, 358], "envcreat": [15, 21, 104, 110, 330, 331, 334, 336, 343, 344, 360, 361], "return_same_td": 15, "interruptor": 15, "cautious": [15, 269], "whole": [15, 25, 27, 31, 44, 86, 90, 104, 110, 160, 168, 238, 272, 309, 343, 345], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 348], "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 90, 101, 136, 251, 253, 266, 269, 343, 344, 347, 354, 356, 360], "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 318], "respect": [17, 18, 19, 31, 86, 90, 104, 110, 118, 124, 125, 128, 142, 143, 152, 156, 159, 160, 162, 164, 168, 192, 196, 205, 217, 241, 246, 251, 253, 266, 269, 271, 282, 284, 285, 313, 345, 346, 355], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 337, 344, 345, 348, 351, 354, 358], "serv": [17, 19, 20, 92, 358, 361], "fashion": [17, 19, 20, 33, 35, 38, 74], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 132], "seen": [17, 18, 19, 20, 86, 90, 104, 110, 339, 343, 344, 346, 349, 355, 358], "submitit_delai": [17, 21], "former": [17, 18, 19, 34, 37, 40, 41, 53, 86, 90, 104, 110, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 343], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 356], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 343], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 32, 51, 238, 242], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 332, 333, 343, 344], "coordin": 20, "init": [20, 31, 86, 90, 104, 110, 168, 308, 344, 345], "autodetect": 20, "similarli": [20, 31, 72, 76, 86, 90, 104, 110, 168, 205, 243, 244, 258, 265, 361], "num_cpu": 20, "num_gpu": 20, "1024": [20, 186, 344, 358], "equat": [20, 57, 90, 237, 250, 253, 273, 345, 347, 356], "exce": [20, 358], "indefinit": [20, 50], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 318, 345, 346], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 349], "jump": [21, 347], "host": [21, 31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 181, 186, 213, 231], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 86, 90, 104, 110, 234, 235, 237, 238, 245, 251, 252, 254, 265, 269, 270, 272, 274, 336, 345, 355, 356, 360, 361], "rollout_tensordict": 22, "trajectory_kei": 22, "nestedkei": [22, 44, 66, 73, 74, 86, 90, 104, 110, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 132, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 166, 168, 176, 177, 230, 231, 234, 235, 237, 242, 255, 280, 301], "durat": [22, 355], "meta": [22, 43, 53, 88, 92, 251, 253, 266, 269, 271, 340, 345, 355, 358], "aren": [22, 155, 346], "deprec": [22, 31, 86, 90, 104, 110, 160, 168, 170, 174, 235, 251, 253, 255, 258, 259, 260, 265, 266, 269, 270, 271, 272, 280, 282, 283, 284, 285, 290, 361], "eventu": [22, 214, 346, 356], "supersed": 22, "recov": [22, 53, 55, 57, 58, 59, 73, 74, 230, 235, 237, 243, 258, 265, 354], "cat": [22, 246, 252, 254, 265, 270, 272, 274, 358, 360], "arang": [22, 26, 32, 66, 189, 204, 232, 309, 338, 358], "obs_": 22, "trajectory_id": 22, "int32": [22, 41, 51, 57, 73, 95, 96, 173], "data_split": 22, "got": [22, 350], "int8": [23, 86, 99, 105, 106, 118], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "op": [23, 24, 26, 29, 30, 32, 43, 45, 46, 137, 165, 230, 234, 301, 320], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 41, 43, 45, 46, 82, 83, 86, 89, 91, 92, 95, 96, 101, 102, 107, 127, 211, 212, 216, 250, 338, 344, 345, 346, 348, 356, 358], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 237, 245], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 245, 356], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 179, 180, 200, 218, 219], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 361], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 127, 196, 226, 230, 232, 233, 237, 238, 239, 240, 241, 242, 308, 338, 360, 361], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 95, 96, 100, 117, 125, 128, 144, 178, 202, 238, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 272, 274, 356, 360, 361], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 156, 173, 356, 358], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 159, 160, 209, 220, 334], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 32, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 127, 189, 212, 215, 232, 233, 239, 240, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 346], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 189, 215, 232, 239, 255, 257, 258, 259, 280, 336, 338, 348], "convert": [23, 26, 29, 30, 31, 32, 33, 35, 38, 44, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 124, 125, 128, 142, 156, 159, 160, 162, 164, 166, 168, 241, 250, 267, 343, 344, 345, 356, 358], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "upper": [24, 71, 137], "unnam": 25, "constraint": [25, 100, 345, 355], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 121, 327, 343], "td_project": 25, "absent": [25, 27, 53, 86, 90, 104, 110], "is_empti": [25, 27, 356], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 86, 90, 104, 110, 168], "keysview": [25, 27], "reflect": [25, 27, 91, 105, 106, 165, 176, 267, 321, 344, 345, 346, 355], "lock_": [25, 27], "recurs": [25, 27, 31, 47, 48, 86, 90, 104, 110, 168, 267], "succeed": [25, 27], "selected_kei": [25, 27, 151, 343], "unlock_": [25, 27], "unlock": [25, 27, 33, 35, 38], "valuesview": 25, "onehottensorspec": [26, 82, 83, 89, 91, 92, 95, 96, 101, 102, 107], "action_valu": [26, 32, 188, 189, 215, 232, 233, 239, 240, 259, 267, 280, 338, 346, 348, 352], "argmax": [26, 86, 90, 104, 110, 189, 215, 233, 240, 348], "chosen_action_valu": [26, 32, 214, 215, 223, 239, 240, 280, 338, 346, 348], "outcom": [26, 32, 187, 220], "drawn": [27, 28, 156, 234, 238, 242, 345, 355], "lazystackedtensordict": [27, 51, 86, 90, 100, 104, 110, 354], "heterogen": [27, 28, 99, 105, 106, 169, 205, 206, 343, 344], "thrown": [28, 31, 86, 90, 104, 110, 168, 358], "nvec": [29, 30], "cardin": [29, 30, 189, 215, 232, 233, 240, 345], "ax": [29, 207, 208], "m": [29, 31, 86, 90, 104, 110, 127, 168, 242, 338, 344, 356], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 255, 258, 259, 280, 336], "use_regist": [30, 32], "to_categor": [30, 32], "to_categorical_spec": [30, 32], "multidiscretetensorspec": [30, 336], "gamma": [31, 147, 168, 202, 251, 252, 254, 255, 257, 259, 260, 261, 263, 265, 267, 269, 270, 271, 272, 274, 275, 276, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 330, 339, 343, 344, 345, 355, 360], "sutton": [31, 339, 355], "1988": 31, "tempor": [31, 194, 198, 202, 283, 284, 289, 290], "44": [31, 344, 346, 356], "discount": [31, 57, 87, 147, 168, 252, 257, 260, 261, 263, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 339, 344, 345, 355], "ahead": [31, 168, 361], "bias": [31, 192, 193, 196, 197, 248, 339, 343], "mitig": 31, "pleas": [31, 55, 86, 90, 104, 105, 106, 110, 120, 157, 160, 168, 272, 337], "multisteptransform": [31, 336], "99": [31, 147, 166, 202, 263, 276, 281, 288, 330, 343, 344, 345, 349, 352, 356, 360], "add_modul": [31, 86, 90, 104, 110, 168], "child": [31, 86, 90, 104, 110, 168, 343], "fn": [31, 36, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 168, 209, 332, 333], "init_weight": [31, 86, 90, 104, 110, 168], "fill_": [31, 86, 90, 104, 110, 168, 344, 346, 361], "net": [31, 86, 90, 104, 110, 168, 183, 185, 188, 191, 199, 206, 251, 252, 259, 265, 269, 270, 271, 272, 327, 330, 344, 356, 357, 360], "in_featur": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 179, 180, 182, 183, 184, 185, 191, 199, 200, 205, 206, 207, 208, 227, 241, 255, 257, 348, 349, 360], "out_featur": [31, 86, 90, 100, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 178, 179, 180, 182, 183, 184, 185, 190, 191, 194, 198, 199, 200, 202, 205, 206, 207, 208, 227, 232, 241, 255, 257, 338, 343, 346, 348, 349, 352, 360], "bia": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 179, 180, 182, 183, 184, 185, 190, 191, 192, 193, 194, 196, 197, 198, 200, 206, 207, 208, 209, 234, 235, 237, 241, 248, 249, 250, 267, 272, 339, 343, 344, 345, 346, 355, 360], "requires_grad": [31, 82, 83, 86, 90, 104, 110, 136, 160, 168, 272], "bfloat16": [31, 86, 90, 104, 110, 168], "datatyp": [31, 86, 90, 104, 110, 168, 358], "member": [31, 86, 90, 104, 110, 168, 267, 301], "xdoctest": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 267, 272], "buf": [31, 86, 90, 104, 110, 168], "20l": [31, 86, 90, 104, 110, 168, 267], "1l": [31, 86, 90, 104, 110, 168, 267], "5l": [31, 86, 90, 104, 110, 168, 267], "__call__": [31, 36, 86, 90, 104, 110, 168, 242, 340, 361], "doubl": [31, 45, 86, 90, 104, 110, 124, 125, 126, 128, 142, 156, 159, 160, 162, 164, 168, 241, 255, 260, 264, 270, 273, 280, 343, 344, 345, 346, 361], "eval": [31, 86, 90, 104, 110, 160, 166, 168, 343, 344, 345], "evalu": [31, 86, 90, 104, 110, 160, 168, 187, 203, 204, 212, 222, 270, 323, 324, 344, 345, 352], "dropout": [31, 86, 90, 104, 110, 160, 168, 192, 194, 196, 198, 200, 346], "batchnorm": [31, 86, 90, 104, 110, 160, 168], "disabl": [31, 86, 90, 104, 110, 160, 168, 195, 222, 343], "comparison": [31, 86, 90, 104, 110, 160, 168, 267, 343, 344], "similar": [31, 33, 35, 37, 38, 57, 86, 90, 104, 105, 106, 110, 124, 142, 156, 159, 160, 162, 163, 164, 166, 168, 227, 229, 238, 241, 242, 339, 343, 344, 345, 346, 348, 349, 350, 351, 356, 358, 361], "confus": [31, 86, 90, 104, 110, 160, 168], "extra_repr": [31, 86, 90, 104, 110, 168], "nontermin": 31, "original_reward": 31, "newli": [31, 86, 90, 104, 110], "OR": 31, "get_buff": [31, 86, 90, 104, 110, 168], "get_submodul": [31, 86, 90, 104, 110, 168], "qualifi": [31, 86, 90, 104, 110, 168], "referenc": [31, 86, 90, 104, 110, 168], "attributeerror": [31, 86, 90, 104, 110, 168, 361], "invalid": [31, 77, 86, 90, 104, 110, 113, 168, 203, 204], "resolv": [31, 86, 90, 104, 110, 168], "someth": [31, 86, 90, 99, 104, 110, 168, 337, 344, 345, 356, 361], "get_extra_st": [31, 86, 90, 104, 110, 166, 168], "set_extra_st": [31, 86, 90, 104, 110, 166, 168], "picklabl": [31, 86, 90, 104, 110, 166, 168], "pickl": [31, 86, 90, 104, 110, 166, 168], "get_paramet": [31, 86, 90, 104, 110, 168], "net_b": [31, 86, 90, 104, 110, 168], "net_c": [31, 86, 90, 104, 110, 168], "conv": [31, 86, 90, 104, 110, 168, 179, 180, 344], "conv2d": [31, 86, 90, 104, 110, 168, 180, 182, 183, 191, 205, 360], "kernel_s": [31, 86, 90, 104, 110, 168, 179, 180, 182, 183, 191, 205, 210, 344, 360], "stride": [31, 86, 90, 104, 110, 168, 179, 180, 182, 183, 191, 205, 344, 360], "diagram": [31, 86, 90, 104, 110, 168], "degre": [31, 86, 90, 104, 110, 168], "named_modul": [31, 86, 90, 104, 110, 168], "o": [31, 86, 90, 104, 110, 168, 197], "transit": [31, 53, 57, 74, 77, 86, 90, 104, 110, 168, 247, 343, 346, 347, 348, 350, 356, 358], "half": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 343], "ipu": [31, 86, 90, 104, 110, 168], "strict": [31, 33, 35, 38, 86, 90, 104, 110, 160, 168, 272], "descend": [31, 86, 90, 104, 110, 160, 168, 272], "get_swap_module_params_on_convers": [31, 86, 90, 104, 110, 160, 168, 272], "persist": [31, 86, 90, 104, 110, 160, 168, 176, 272], "enforc": [31, 72, 86, 90, 104, 110, 160, 168, 243, 272, 356], "preserv": [31, 86, 90, 104, 110, 160, 168, 272], "missing_kei": [31, 86, 90, 104, 110, 160, 168, 272], "unexpected_kei": [31, 86, 90, 104, 110, 160, 168, 272], "namedtupl": [31, 86, 90, 104, 110, 160, 168, 272], "duplic": [31, 72, 86, 90, 104, 110, 168, 255, 260, 267, 280], "l": [31, 86, 90, 104, 110, 168, 192, 196, 281, 345, 356], "idx": [31, 86, 90, 104, 110, 168], "named_buff": [31, 86, 90, 104, 110, 168], "remove_dupl": [31, 86, 90, 104, 110, 168, 267], "prepend": [31, 86, 90, 104, 110, 168, 267], "running_var": [31, 86, 90, 104, 110, 168], "named_children": [31, 86, 90, 104, 110, 168], "conv4": [31, 86, 90, 104, 110, 168], "conv5": [31, 86, 90, 104, 110, 168], "memo": [31, 86, 90, 104, 110, 168], "named_paramet": [31, 86, 90, 104, 110, 136, 168, 267], "register_backward_hook": [31, 86, 90, 104, 110, 168], "removablehandl": [31, 86, 90, 104, 110, 168], "favor": [31, 86, 90, 104, 110, 168, 345], "register_full_backward_hook": [31, 86, 90, 104, 110, 168], "register_buff": [31, 86, 90, 104, 110, 168], "running_mean": [31, 86, 90, 104, 110, 168], "alongsid": [31, 86, 90, 104, 110, 168, 351, 355], "num_featur": [31, 86, 90, 104, 110, 168], "register_forward_hook": [31, 86, 90, 104, 110, 168, 189, 215], "with_kwarg": [31, 86, 90, 104, 110, 168], "always_cal": [31, 86, 90, 104, 110, 168], "register_module_forward_hook": [31, 86, 90, 104, 110, 168], "regardless": [31, 86, 90, 104, 110, 168, 253, 266, 269], "register_forward_pre_hook": [31, 86, 90, 104, 110, 168], "invok": [31, 86, 90, 104, 110, 168], "And": [31, 86, 90, 104, 110, 168, 349], "forward_pr": [31, 86, 90, 104, 110, 168], "register_module_forward_pre_hook": [31, 86, 90, 104, 110, 168], "grad_input": [31, 86, 90, 104, 110, 168], "grad_output": [31, 86, 90, 104, 110, 168], "subsequ": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 168, 346], "technic": [31, 86, 90, 104, 110, 168, 344, 346, 348], "caller": [31, 86, 90, 104, 110, 168], "register_module_full_backward_hook": [31, 86, 90, 104, 110, 168], "register_full_backward_pre_hook": [31, 86, 90, 104, 110, 168], "backward_pr": [31, 86, 90, 104, 110, 168], "register_module_full_backward_pre_hook": [31, 86, 90, 104, 110, 168], "register_load_state_dict_post_hook": [31, 86, 90, 104, 110, 168], "incompatible_kei": [31, 86, 90, 104, 110, 168], "register_modul": [31, 86, 90, 104, 110, 168, 340], "alia": [31, 86, 90, 104, 110, 168], "register_paramet": [31, 86, 90, 104, 110, 168], "register_state_dict_pre_hook": [31, 86, 90, 104, 110, 168], "keep_var": [31, 33, 35, 38, 86, 90, 104, 110, 160, 168, 272], "requires_grad_": [31, 86, 90, 104, 110, 168], "autograd": [31, 86, 90, 104, 110, 160, 168, 272], "freez": [31, 86, 90, 104, 110, 168], "finetun": [31, 86, 90, 104, 110, 168], "gan": [31, 86, 90, 104, 110, 168], "share_memori": [31, 86, 87, 90, 104, 110, 168, 343], "share_memory_": [31, 86, 90, 104, 110, 168, 360], "destin": [31, 33, 35, 38, 86, 90, 104, 110, 119, 125, 126, 128, 160, 162, 166, 168, 176, 272, 301], "averag": [31, 86, 90, 104, 110, 160, 166, 168, 237, 261, 262, 272, 316, 343, 345], "shallow": [31, 86, 90, 104, 110, 160, 168, 272, 346], "detach": [31, 86, 90, 104, 110, 160, 168, 267, 272, 282, 283, 284, 285, 343], "non_block": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 346], "memory_format": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "channels_last": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "unchang": [31, 86, 90, 104, 110, 124, 127, 142, 156, 159, 160, 162, 164, 168, 234, 241, 315, 343, 358], "tri": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 351], "pin": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "4d": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "ignore_w": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "1913": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "3420": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "5113": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "2325": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "torch_doctest_cuda1": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "gpu1": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "1914": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "5112": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 356], "2324": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "float16": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 193, 197, 241], "cdoubl": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "3741": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "j": [31, 34, 65, 66, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 340, 349], "2382": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "5593": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241, 356], "4443": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "complex128": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "6122": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "1150": [31, 86, 90, 104, 110, 124, 142, 156, 159, 160, 162, 164, 168, 241], "to_empti": [31, 86, 90, 104, 110, 168], "dst_type": [31, 86, 90, 104, 110, 168], "xpu": [31, 86, 90, 104, 110, 168], "set_to_non": [31, 86, 90, 104, 110, 168], "unidimension": 32, "keepdim": 32, "user_regist": 32, "priori": 32, "uniqu": [32, 73, 74, 120, 129, 155, 156, 157, 308, 350, 358], "discretebox": [32, 86, 90, 104, 110, 348, 355, 361], "chosen_data": [33, 60], "rewarddata": [33, 60, 336], "rejected_data": [33, 60], "from_dataset": [33, 35, 60], "dataset_nam": [33, 35, 39, 44, 60, 103], "max_length": [33, 35, 36, 42, 44, 60, 352], "550": [33, 35, 39, 44, 60, 73, 74, 356], "root_dir": [33, 35, 44, 60], "from_disk": [33, 35, 44, 60], "carperai": [33, 35, 39, 44], "openai_summarize_comparison": [33, 35, 44], "sequen": [33, 35], "cach": [33, 35, 44, 51, 53, 54, 55, 57, 58, 59, 60, 66, 73, 86, 90, 104, 110, 125, 128, 142, 160, 164, 310, 357], "load_from_disk": [33, 35, 44, 60], "load_dataset": [33, 35, 44, 60], "attention_mask": [33, 35, 36, 38, 39, 42, 44, 60], "92534": 33, "input_id": [33, 35, 36, 38, 39, 42, 44, 60], "end_scor": [33, 38, 39, 60], "sub_data": [33, 35], "from_tensordict": [33, 35, 38], "non_tensordict": [33, 35, 38], "_no_default_": [33, 35, 38], "getattr": [33, 35, 38], "tensorclass": [33, 35, 38, 60, 62, 63, 79], "from_flatten": [33, 35, 38], "attemptedli": [33, 35, 38], "memmap": [33, 35, 38, 62, 104, 110, 166, 301, 303, 315, 358], "copy_exist": [33, 35, 38], "return_earli": [33, 35, 38], "share_non_tensor": [33, 35, 38], "mimic": [33, 35, 38, 86, 90, 104, 110], "cross": [33, 35, 38, 178], "anymor": [33, 35, 38, 160, 241], "tensordictfutur": [33, 35, 38], "deepli": [33, 35, 38], "insid": [33, 35, 38, 104, 361], "memmap_": [33, 35, 38, 166], "memmap_lik": [33, 35, 38], "contentless": [33, 35, 38], "1_000_000": [33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 343, 346], "alloc": [33, 35, 38, 63, 203, 204, 343], "setattr": [33, 35, 38], "tent": [33, 35, 38, 44], "to_tensordict": [33, 35, 38, 346], "unbind": [33, 34, 35, 37, 38, 40, 41, 194, 198], "alpha": [34, 40, 65, 66, 179, 180, 182, 183, 184, 185, 191, 205, 252, 259, 268, 270, 272, 343, 358, 360], "ep": [34, 40, 65, 66, 166, 237, 253, 273, 316, 343, 344, 346, 349, 352], "1e": [34, 40, 65, 66, 166, 187, 190, 209, 220, 343, 344, 345, 355], "08": [34, 40, 65, 66, 344, 345, 356, 357], "pin_memori": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 141, 343, 360], "schaul": [34, 65, 66], "quan": [34, 65, 66], "antonogl": [34, 65, 66], "silver": [34, 65, 66], "2015": [34, 65, 66], "arxiv": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 120, 142, 162, 181, 182, 183, 184, 185, 186, 189, 190, 191, 196, 202, 208, 210, 211, 214, 216, 217, 223, 233, 237, 251, 252, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 268, 269, 272, 273, 282, 287, 295, 357], "ab": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 119, 142, 162, 166, 181, 186, 190, 191, 196, 202, 208, 210, 211, 214, 216, 217, 223, 251, 252, 255, 256, 257, 258, 261, 262, 263, 264, 265, 268, 269, 272, 357], "1511": [34, 65, 66, 191], "05952": [34, 65, 66], "expon": [34, 40, 65, 66], "\u03b1": [34, 40, 65, 66], "delta": [34, 40, 65, 66, 192, 196, 220, 238, 242, 336, 339], "null": [34, 40, 65, 66, 118], "max_siz": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 77, 79, 345, 350], "1_000": [34, 37, 40, 41, 358], "merg": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 356], "mini": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 355], "decid": [34, 37, 40, 41, 360], "meth": [34, 37, 40, 41, 267, 356], "incompat": [34, 37, 40, 41, 271, 358], "drop_last": [34, 37, 40, 41, 72, 74], "dimension": [34, 37, 40, 41, 127, 194, 198, 282, 287, 295, 355], "notion": [34, 37, 40, 41], "caution": [34, 37, 40, 41, 72, 169, 361], "codebas": [34, 37, 40, 41, 356], "approach": [34, 37, 40, 41, 138, 343, 345, 349, 350, 361], "return_info": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 358], "tensordictprioritizedreplaybuff": [34, 336, 360], "simplifi": [34, 348, 356, 358], "manual_se": [34, 37, 40, 41, 54, 58, 59, 73, 74, 82, 83, 86, 90, 104, 110, 117, 127, 138, 147, 150, 155, 157, 168, 203, 204, 212, 226, 233, 234, 235, 237, 245, 251, 252, 254, 258, 265, 272, 350, 352, 355, 356, 360, 361], "_weight": [34, 40, 65, 66, 358, 360], "arrai": [34, 39, 65, 86, 90, 104, 110, 129, 192, 193, 196, 197, 343, 358], "update_prior": [34, 65, 66, 315, 340, 344, 358, 360], "36278465": 34, "tempfil": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 330, 343, 344, 358], "tqdm": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 318, 343, 345, 346, 355, 356], "randomsampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 343], "td_error": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 254, 255, 257, 258, 259, 260, 265, 267, 270, 272, 274, 280, 343, 349, 358, 360], "update_tensordict_prior": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 343, 358, 360], "temporarydirectori": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 343, 344, 358], "tmpdir": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 343, 344], "rb_load": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "cursor": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "insert_transform": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "insert": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 69, 77, 78, 80, 81, 161], "set_sampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_storag": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_writ": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "prompt_rindex": [35, 36, 39], "promptdatatldr": 35, "116722": 35, "prompt": [36, 39], "return_tensordict": [36, 42], "recip": [36, 86, 90, 104, 110, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248], "text": [36, 39, 42, 55, 192, 193, 196, 197, 237, 345], "tensodict": [36, 42], "orign": [36, 42], "valid_sampl": 36, "eough": 36, "toknen": 36, "meet": 36, "criterion": 36, "autotoken": [36, 42, 44], "from_pretrain": [36, 39, 42], "gpt2": [36, 39, 42, 44, 181, 186, 213], "pad_token": [36, 42], "eos_token": 36, "enough": [36, 358], "inde": [36, 127, 345, 356], "roundrobinwrit": [37, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "Not": [37, 82, 83, 95, 96], "depth": [37, 86, 90, 100, 104, 110, 178, 179, 180, 182, 183, 184, 185, 190, 191, 200, 202, 205, 206, 210, 211, 232, 338, 344, 347, 349, 350, 354, 355, 358], "_pytre": [37, 358], "tree_map": [37, 358], "did": [37, 165, 288, 344, 345, 350, 358, 361], "assert0": [37, 358], "ref_model": 39, "reward_model": [39, 247], "kl_coef": 39, "max_new_token": 39, "score_clip": 39, "kl_schedul": 39, "klcontrollerbas": 39, "num_step": 39, "causal": 39, "sentenc": 39, "frozen": [39, 136], "kl": [39, 136, 262, 266], "penalti": [39, 266], "strai": 39, "calcul": [39, 147, 192, 251, 253, 257, 266, 269, 271], "gpt2rewardmodel": 39, "get_dataload": [39, 336], "promptdata": [39, 336], "gpt2lmheadmodel": 39, "dl": 39, "block_siz": [39, 60], "tensorclass_typ": [39, 60], "openai_summarize_tldr": 39, "config_class": 39, "model_path": 39, "rollout_from_model": 39, "rollout_from_data": 39, "600": [39, 351, 356, 358], "reward_kl": [39, 136], "reward_raw": 39, "sample_log_prob": [39, 227, 228, 229, 238, 242, 244, 269, 327, 345, 348, 355, 360], "create_rollout_td": 39, "log_prob": [39, 187, 203, 204, 212, 222, 242], "log_ratio": 39, "replic": 39, "rindex": 39, "eo": 39, "term": [39, 136, 196, 197, 207, 208, 250, 251, 259, 320, 344, 345, 347, 348, 355], "generation_config": 39, "generationconfig": 39, "ti": [39, 291, 292, 293, 294, 296, 297, 298, 299, 344], "log_probs_gen": 39, "logprobs_of_label": 39, "priority_kei": [40, 41, 52, 65, 255, 258, 259, 260, 265, 267, 270, 272, 274, 280, 358, 360], "reduct": [40, 65, 66, 77, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 272, 274], "prioritizedreplaybuff": [40, 336, 360], "min": [40, 65, 66, 77, 220, 221, 222, 231, 237, 252, 253, 259, 268, 270, 272, 344, 345, 355], "median": [40, 65, 66, 77, 95, 96, 238, 242], "include_info": [40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "kw": [41, 52, 69, 78], "huggingfac": [42, 54, 59, 236], "co": [42, 129, 356], "doc": [42, 92, 95, 96, 103, 107, 308, 343, 344, 355, 358, 361], "pad_trunc": 42, "am": 42, "me": 42, "reassur": 42, "ok": 42, "describ": [43, 121, 159, 220, 221, 255, 304, 339, 343, 345, 355, 356, 361], "tokenizer_fn": 44, "tensordicttoken": [44, 336], "pre_tokenization_hook": 44, "valid_s": 44, "tokenizer_class": 44, "tokenizer_model_nam": 44, "tokein": 44, "elementwis": 44, "vocabulari": 44, "loader": [44, 345], "185068": 44, "dataset_to_tensordict": 44, "data_dir": 44, "batch_dim": [44, 334], "valid_mask_kei": 44, "conver": 44, "batch_dimens": 44, "filder": 44, "from_dict": 44, "data_memmap": 44, "exclus": [47, 48, 51, 57, 66, 73, 74, 132, 192, 194, 196, 198, 203, 204, 232, 233, 239, 240, 273, 274, 282, 283, 284, 285, 286, 308, 334, 338], "recurse_through_entri": 48, "recurse_through_stack": 48, "consolid": 48, "dataset_id": [51, 53, 54, 55, 57, 58, 59], "num_proc": 51, "slice_len": [51, 57, 66, 73, 74], "strict_len": 51, "arari": 51, "2600": 51, "million": [51, 346], "consequ": [51, 196, 350], "50x10": 51, "available_dataset": [51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74], "ataridqn": 51, "immutabledatasetwrit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "greater": [51, 66, 73, 74, 194, 198, 343, 344, 360], "shorter": [51, 57, 66, 73, 74], "Be": [51, 57, 66, 73, 74], "game_nam": 51, "pong": [51, 102, 140, 361], "krull": 51, "1d": [51, 66, 73, 74, 77], "cheapli": 51, "nontensordata": [51, 57], "invalid_rang": 51, "999998": 51, "999999": 51, "add_count": 51, "84": [51, 146, 344, 346, 356, 357], "valueestim": [51, 251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 276, 280, 336, 339, 343, 355], "convolut": [51, 179, 180, 182, 183, 205, 218, 348], "2657628": 51, "2657629": 51, "2657630": 51, "2657631": 51, "2657632": 51, "2657633": 51, "2657634": 51, "2657635": 51, "2657636": 51, "2657637": 51, "2657638": 51, "2657639": 51, "2657640": 51, "2657641": 51, "2657642": 51, "2657643": 51, "2657644": 51, "2657645": 51, "2657646": 51, "2657647": 51, "2657648": 51, "2657649": 51, "2657650": 51, "2657651": 51, "2657652": 51, "2657653": 51, "2657654": 51, "2657655": 51, "2657656": 51, "2657657": 51, "2657658": 51, "2657659": 51, "2657660": 51, "2657661": 51, "2657662": 51, "2657663": 51, "2657664": 51, "2657665": 51, "2657666": 51, "2657667": 51, "2657668": 51, "2657669": 51, "2657670": 51, "2657671": 51, "2657672": 51, "2657673": 51, "2657674": 51, "2657675": 51, "2657676": 51, "2657677": 51, "2657678": 51, "2657679": 51, "2657680": 51, "2657681": 51, "2657682": 51, "2657683": 51, "2657684": 51, "2657685": 51, "2657686": 51, "2657687": 51, "2657688": 51, "2657689": 51, "2657690": 51, "2657691": 51, "1995687": 51, "1995688": 51, "1995689": 51, "1995690": 51, "1995691": 51, "1995692": 51, "1995693": 51, "1995694": 51, "1995695": 51, "1995696": 51, "1995697": 51, "1995698": 51, "1995699": 51, "1995700": 51, "1995701": 51, "1995702": 51, "1995703": 51, "1995704": 51, "1995705": 51, "1995706": 51, "1995707": 51, "1995708": 51, "1995709": 51, "1995710": 51, "1995711": 51, "1995712": 51, "1995713": 51, "1995714": 51, "1995715": 51, "1995716": 51, "1995717": 51, "1995718": 51, "1995719": 51, "1995720": 51, "1995721": 51, "1995722": 51, "1995723": 51, "1995724": 51, "1995725": 51, "1995726": 51, "1995727": 51, "1995728": 51, "1995729": 51, "1995730": 51, "1995731": 51, "1995732": 51, "1995733": 51, "1995734": 51, "1995735": 51, "1995736": 51, "1995737": 51, "1995738": 51, "1995739": 51, "1995740": 51, "1995741": 51, "1995742": 51, "1995743": 51, "1995744": 51, "1995745": 51, "1995746": 51, "1995747": 51, "1995748": 51, "1995749": 51, "1995750": 51, "left": [51, 53, 57, 124, 125, 126, 130, 136, 142, 144, 145, 151, 154, 157, 159, 162, 164, 168, 205, 234, 344, 345, 350, 351], "untouch": [51, 57, 124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 168], "_max_run": 51, "dataset_asterix": 51, "asterix": 51, "dataset_pong": 51, "sample_from_al": [51, 68, 71], "buffer_id": [51, 71, 76], "hidden": [51, 104, 110, 119, 182, 190, 192, 193, 194, 196, 197, 198, 199, 210, 211, 216, 217, 227, 228, 229, 231, 241, 244, 253, 266, 269, 338, 346, 354, 360], "exclusive_field": [51, 354], "stack_dim": [51, 354], "data_path": [51, 52, 53, 54, 55, 56, 57, 58, 59], "data_path_root": [51, 52, 53, 54, 55, 56, 57, 58, 59], "delet": [51, 52, 53, 54, 55, 56, 57, 58, 59, 121, 308], "chunksiz": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pool": [51, 52, 53, 54, 55, 56, 57, 58, 59, 157], "max_tasks_per_child": [51, 52, 53, 54, 55, 56, 57, 58, 59], "worker_thread": [51, 52, 53, 54, 55, 56, 57, 58, 59], "index_with_gener": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pbar": [51, 52, 53, 54, 55, 56, 57, 58, 59, 343, 345, 346, 355, 356], "dest": [51, 52, 53, 54, 55, 56, 57, 58, 59, 142, 162, 164, 241], "num_fram": [51, 52, 53, 54, 55, 56, 57, 58, 59], "unitari": [51, 52, 53, 54, 55, 56, 57, 58, 59, 356], "minariexperiencereplai": [51, 52, 53, 54, 56, 57, 58, 59], "1000000": [51, 52, 53, 54, 55, 56, 57, 58, 59, 346], "distance_from_origin": [51, 52, 53, 54, 55, 56, 57, 58, 59], "forward_reward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qpo": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qvel": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_ctrl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "reward_forward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_surv": [51, 52, 53, 54, 55, 56, 57, 58, 59], "x_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "x_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "y_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "y_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59], "achieved_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "desired_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "27": [51, 52, 53, 54, 55, 56, 57, 58, 59, 82, 83, 104, 110, 344, 356], "_collate_id": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x120e21dc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cattensor": [51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 327, 343, 354, 356, 361], "cat_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cat_next_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "new_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "31": [51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 96, 342, 343, 344, 345, 356, 357, 359], "full_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x168406fc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "from_env": 53, "use_truncated_as_don": 53, "direct_download": 53, "terminate_on_end": 53, "env_kwarg": [53, 58, 59, 332, 333, 343], "reconstruct": [53, 73, 74, 262, 343, 361], "get_dataset": 53, "qlearning_dataset": 53, "fewer": 53, "possess": 53, "unexpectedli": 53, "traj_split": 53, "observationnorm": [53, 166, 334, 343, 344, 345, 346, 360], "maze2d": 53, "umaz": 53, "loc": [53, 136, 138, 149, 195, 209, 221, 222, 227, 228, 229, 238, 242, 244, 251, 252, 265, 269, 270, 271, 272, 322, 327, 334, 338, 343, 344, 345, 346, 348, 355, 360], "gen": 54, "dgrl": 54, "accompani": [54, 154], "gap": 54, "2312": 54, "05742": 54, "gen_dgrl": 54, "procgen": 54, "bigfish": 54, "bossfight": 54, "categori": [54, 338, 340], "1m_e": 54, "1m_": 54, "comma": 54, "npy": 54, "extract": [54, 236, 343, 345, 360], "mmap": [54, 58, 59], "minut": [54, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "internet": [54, 59], "connect": [54, 59], "minari": 55, "websit": [55, 57], "currenrtli": 55, "minari_data": 55, "door": 55, "torchrl_logg": [55, 352], "28": [55, 205, 342, 344, 350, 355, 356, 359], "door_body_po": 55, "dua": 56, "graff": 56, "2017": 56, "uci": 56, "archiv": 56, "ic": 56, "edu": 56, "ml": 56, "sklearn": [56, 103], "adult_num": [56, 103], "adult_onehot": [56, 103], "mushroom_num": [56, 103], "mushroom_onehot": [56, 103], "covertyp": [56, 103], "shuttl": [56, 103], "magic": [56, 103, 347], "shuffl": [57, 72, 74, 355], "stream": 57, "embodi": [57, 357], "22": [57, 73, 74, 165, 344, 349, 356], "institut": 57, "demonstr": [57, 345, 350, 355, 356, 358, 361], "527": [57, 356], "skill": 57, "160266": 57, "googl": [57, 58, 82, 83, 345, 346, 355], "open_x_embodi": 57, "2310": [57, 107], "08864": 57, "language_instruct": 57, "get_non_tensor": 57, "neither": [57, 356], "nor": 57, "insuffici": 57, "chosen": [57, 111, 112, 155, 156, 214, 215, 223, 240, 301, 327, 338, 351], "openx": 57, "__will": 57, "change__": 57, "randomli": [57, 72, 137, 138, 156, 234, 238, 242, 348, 355, 356, 358], "crop": [57, 122, 143, 301], "modal": [57, 343], "cmu_stretch": 57, "is_init": [57, 59, 119, 135, 194, 198, 237, 346], "language_embed": 57, "512": [57, 191, 344, 356], "lift": 57, "green": 57, "garbag": 57, "lid": 57, "roboset": 58, "h5": [58, 59], "roboh": [58, 107], "concis": [58, 349], "75": [58, 344, 356, 357], "totensor": 59, "image_s": 59, "v": [59, 166, 192, 193, 196, 197, 227, 258, 265, 272, 338, 343, 344], "npz": 59, "2206": [59, 101, 102], "04779": [59, 252, 257], "vd4rl": 59, "detect": 59, "squar": [59, 122, 195, 221, 222, 301], "rectangular": [59, 179, 180], "walker_walk": 59, "64px": 59, "height": [59, 122, 146], "veloc": [59, 84, 85, 86, 90, 104, 110, 120, 355, 356, 361], "infinit": [60, 111, 112, 350, 358], "three": [60, 338, 340, 345, 347, 348, 355, 356, 358, 361], "block": [60, 61, 81, 338, 346], "pairwisedataset": [60, 336], "256": [60, 186, 344, 345, 355, 356], "immut": [61, 86, 90, 104, 110, 145, 160], "piec": [61, 69, 78, 80, 81, 343, 344, 345, 351, 355, 356, 358], "scratch_dir": [62, 343, 358], "sent": [62, 63, 79, 166], "mistak": [62, 63, 79], "myclass": [62, 63, 79], "foo": [62, 63, 79, 231, 358, 361], "bar": [62, 63, 79, 231, 311, 312, 314, 318, 340, 344], "attach": [62, 63, 64, 75, 76, 79, 344], "entiti": [62, 63, 64, 75, 76, 79], "auto": [63, 79, 165, 237, 252, 259, 268, 270, 272, 274, 339, 355], "zero_": [63, 79, 173], "max_capac": [65, 66, 343, 358], "data_0": 65, "data_1": 65, "smoothen": 65, "tdrb": 65, "pack": [65, 192, 196, 345, 347, 361], "end_kei": [66, 73, 74], "cache_valu": [66, 73, 74], "expens": [66, 73, 74, 358], "readili": [66, 73, 74], "conjunct": [66, 73, 74, 344], "Will": [66, 73, 86, 101, 301], "short": [66, 73, 74, 82, 83, 95, 96, 104, 169, 196, 197, 344, 345, 347, 348, 355, 358], "unsqueez": [66, 117, 120, 121, 158, 161, 199, 343, 346, 355, 356], "tolist": 66, "120110917137936e": 66, "06": [66, 187, 220, 344, 345, 356, 357], "uniformli": [67, 267, 361], "storageensembl": [68, 71], "samplerensembl": 68, "writerensembl": [68, 76], "num_buffer_sampl": [68, 71], "ensembl": [68, 71, 76, 81, 241, 270], "forbidden": 68, "collat": 68, "0x13a2ef430": 68, "0x13a2f9310": 68, "interpol": [68, 146, 344, 346], "interpolationmod": [68, 346], "bilinear": [68, 146, 346], "0x13a2f9220": 68, "0x13a2f9f70": 68, "0x13a2d9b50": 68, "0x13a2f95b0": 68, "0x128648260": 68, "roundrobin": [69, 78], "incomplet": [72, 74], "fresh": 72, "haven": [72, 357], "remain": [72, 119, 126, 127, 136, 155, 208, 349], "draw": [72, 234], "slicesamplerwithoutreplac": [73, 358], "320": [73, 74, 84, 85, 344, 356], "700": [73, 74], "dataid": [73, 74], "__len__": 75, "rank_kei": 77, "rank": [77, 178], "samplerwithoutreplac": [77, 345, 355, 358], "basi": [77, 205, 358], "simplest": [77, 245, 343, 345, 346, 348, 355, 358, 361], "get_insert_index": 77, "convers": [82, 83, 95, 96, 339], "2106": [82, 83, 256], "13281": [82, 83], "categorical_action_encod": [82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110], "frame_skip": [82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 107, 133, 311, 314, 321, 340, 343, 344, 345, 360], "repeat": [82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 178, 345, 355, 356], "allow_done_after_reset": [82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107], "toler": [82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 187, 220], "availalb": [82, 83, 95, 96], "ant": [82, 83, 86, 90, 93, 104, 110, 357], "87": [82, 83, 344, 356], "acrobot": [82, 83, 84, 85, 361], "fetch": [82, 83, 84, 85, 136, 348, 357, 358], "advant": [82, 83, 95, 96], "report": [82, 83, 95, 96, 351], "timer": [82, 83, 95, 96], "timeit": [82, 83, 95, 96], "310": [82, 83, 356], "00": [82, 83, 342, 344, 345, 346, 355, 356, 357, 359], "ms": [82, 83, 95, 96], "268": [82, 83, 356], "433": [82, 83, 356], "80": [82, 83, 344, 345, 355, 356, 357], "213": [82, 83, 356], "8605": [82, 83], "pipelineenv": 83, "get_environ": 83, "dm_control": [84, 85, 343, 354, 361], "2006": [84, 85, 252, 257, 356], "12983": [84, 85], "task_nam": [84, 86, 90, 104, 110], "pixels_onli": [84, 85, 89, 91, 92, 107, 343, 344, 351, 352, 360, 361], "cheetah": [84, 85, 86, 90, 104, 110, 301, 343], "240": [84, 85, 356, 360], "swingup": [84, 85, 361], "swingup_spars": [84, 85], "ball_in_cup": [84, 85], "catch": [84, 85], "balance_spars": [84, 85], "three_pol": [84, 85], "two_pol": [84, 85], "finger": [84, 85], "turn_easi": [84, 85], "turn_hard": [84, 85], "fish": [84, 85], "upright": [84, 85, 344], "swim": [84, 85], "hopper": [84, 85], "hop": [84, 85], "humanoid": [84, 85, 104, 110, 354], "walk": [84, 85, 104, 110, 344, 354], "run_pure_st": [84, 85], "bring_bal": [84, 85], "bring_peg": [84, 85], "insert_bal": [84, 85], "insert_peg": [84, 85], "point_mass": [84, 85], "reacher": [84, 85], "swimmer": [84, 85], "swimmer6": [84, 85], "swimmer15": [84, 85], "walker": [84, 85], "dog": [84, 85], "trot": [84, 85], "humanoid_cmu": [84, 85], "lqr": [84, 85], "lqr_2_1": [84, 85], "lqr_6_2": [84, 85], "quadrup": [84, 85], "escap": [84, 85], "stacker": [84, 85], "stack_2": [84, 85], "stack_4": [84, 85], "deviceless": 86, "run_type_check": [86, 100], "counterenv": 86, "unboundedcontinuoustensorspec": [86, 90, 100, 104, 110, 117, 125, 128, 144, 156, 173, 178, 202, 226, 241, 244, 246, 271, 336, 345, 346, 355, 356, 361], "_step": [86, 90, 104, 110, 117, 125, 128, 132, 144, 145], "continuousbox": [86, 90, 104, 110, 173, 345, 355, 356, 360, 361], "sort": [86, 90, 104, 110, 121, 237], "another_act": [86, 90, 104, 110], "mutabl": [86, 90, 104, 110], "batch_lock": [86, 88, 90, 104, 110, 156, 160, 356], "done_keys_group": [86, 90, 104, 110], "outer": [86, 90, 104, 110, 340, 343, 344, 361], "another_don": [86, 90, 104, 110], "empty_cach": [86, 90, 104, 110, 160], "fake_tensordict": [86, 90, 104, 110, 344], "fake": [86, 90, 104, 110, 343, 344], "afterward": [86, 90, 104, 110, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248, 361], "silent": [86, 90, 104, 110, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 209, 210, 211, 213, 216, 217, 219, 224, 230, 231, 233, 234, 237, 240, 245, 248], "braxenv": [86, 90, 104, 110, 145, 336, 347], "envnam": [86, 90, 104, 110], "pipeline_st": [86, 90, 104, 110], "attibut": [86, 90, 104, 110], "maybe_reset": [86, 90, 104, 110], "speak": [86, 90, 104, 110, 343], "rand_act": [86, 90, 99, 104, 105, 106, 110, 347], "register_gym": [86, 90, 104, 110, 347], "entry_point": [86, 90, 104, 110], "info_kei": [86, 90, 104, 110], "reward_threshold": [86, 90, 104, 110], "nondeterminist": [86, 90, 104, 110], "max_episode_step": [86, 89, 90, 91, 104, 110], "order_enforc": [86, 90, 104, 110], "autoreset": [86, 90, 104, 110], "disable_env_check": [86, 89, 90, 101, 102, 104, 110], "apply_api_compat": [86, 90, 104, 110], "nasium": [86, 90, 104, 110], "scope": [86, 90, 104, 110, 361], "dmcontrolenv": [86, 90, 104, 110, 301, 336, 343, 347, 354, 361], "dmc": [86, 90, 104, 110], "removeemptyspec": [86, 90, 104, 110], "threshold": [86, 90, 104, 110, 234, 252, 253, 345], "learnt": [86, 90, 104, 110, 330], "knowledg": [86, 90, 104, 110, 349], "checker": [86, 89, 90, 101, 102, 104, 110], "stepapicompat": [86, 90, 104, 110], "concept": [86, 90, 104, 110, 344, 358], "deem": [86, 90, 104, 110, 111, 112], "envgym": [86, 90, 104, 110], "0855": [86, 90, 104, 110], "0215": [86, 90, 104, 110], "0881": [86, 90, 104, 110], "0412": [86, 90, 104, 110], "1101": [86, 90, 104, 110], "0080": [86, 90, 104, 110], "0254": [86, 90, 104, 110], "0424": [86, 90, 104, 110], "9609e": [86, 90, 104, 110], "02": [86, 90, 104, 110, 342, 344, 345, 352, 356, 357, 359], "9776e": [86, 90, 104, 110], "04": [86, 90, 94, 104, 110, 344, 345, 355, 356, 357], "6347e": [86, 90, 104, 110], "03": [86, 90, 104, 110, 138, 342, 344, 356, 357, 359], "3842e": [86, 90, 104, 110], "5338e": [86, 90, 104, 110], "3064e": [86, 90, 104, 110], "0381e": [86, 90, 104, 110], "6656e": [86, 90, 104, 110], "05": [86, 90, 104, 110, 344, 355, 356, 357], "0204e": [86, 90, 104, 110], "action_spac": [86, 90, 104, 110, 129, 189, 215, 232, 233, 239, 240, 251, 252, 254, 255, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 346, 348, 352], "0833": [86, 90, 104, 110], "0275": [86, 90, 104, 110], "0612": [86, 90, 104, 110], "0770": [86, 90, 104, 110, 356], "1256": [86, 90, 104, 110, 356], "0082": [86, 90, 104, 110], "0186": [86, 90, 104, 110], "0476": [86, 90, 104, 110], "2221": [86, 90, 104, 110], "2256": [86, 90, 104, 110], "5930": [86, 90, 104, 110], "6937": [86, 90, 104, 110], "5865": [86, 90, 104, 110], "5479": [86, 90, 104, 110], "0187": [86, 90, 104, 110], "6825": [86, 90, 104, 110, 356], "5224": [86, 90, 104, 110], "0018": [86, 90, 104, 110, 356], "1005": [86, 90, 104, 110], "0335": [86, 90, 104, 110], "0268": [86, 90, 104, 110, 356], "0133": [86, 90, 104, 110], "0627": [86, 90, 104, 110], "0074": [86, 90, 104, 110, 356], "0488": [86, 90, 104, 110, 356], "0353": [86, 90, 104, 110], "0075": [86, 90, 104, 110, 356], "0069": [86, 90, 104, 110, 356], "0098": [86, 90, 104, 110, 356], "0058": [86, 90, 104, 110, 356], "0033": [86, 90, 104, 110, 356], "0157": [86, 90, 104, 110], "0004": [86, 90, 104, 110, 346, 356], "0381": [86, 90, 104, 110], "0452": [86, 90, 104, 110], "11355747": [86, 90, 104, 110], "04257728": [86, 90, 104, 110], "00408397": [86, 90, 104, 110], "04155852": [86, 90, 104, 110], "0389733": [86, 90, 104, 110], "01409826": [86, 90, 104, 110], "0978704": [86, 90, 104, 110], "08808327": [86, 90, 104, 110], "03970837": [86, 90, 104, 110], "00535434": [86, 90, 104, 110], "02353762": [86, 90, 104, 110], "05116226": [86, 90, 104, 110], "02788907": [86, 90, 104, 110], "06848346": [86, 90, 104, 110], "05154399": [86, 90, 104, 110], "0371798": [86, 90, 104, 110], "05128025": [86, 90, 104, 110], "dydact": [86, 90, 104, 110], "gym_env": [86, 90, 104, 110, 360], "reset_kei": [86, 90, 104, 110, 120, 150, 155, 156, 157], "multitask": [86, 90, 104, 110], "multiag": [86, 90, 99, 104, 105, 106, 110, 177, 206, 214, 223, 280], "another_reward": [86, 90, 104, 110], "callback": [86, 90, 104, 110, 355], "auto_reset": [86, 90, 104, 110, 168, 356], "auto_cast_to_devic": [86, 90, 104, 110, 355], "break_when_any_don": [86, 90, 104, 110, 168, 355], "return_contigu": [86, 90, 104, 110, 169, 354], "soon": [86, 90, 104, 105, 106, 110], "__sort": [86, 90, 104, 110], "as__": [86, 90, 104, 110], "normal": [86, 90, 104, 110, 138, 166, 179, 180, 195, 200, 203, 204, 209, 221, 222, 230, 238, 242, 253, 266, 269, 314, 316, 334, 338, 340, 346, 348, 355, 361], "argmaxmodul": [86, 90, 104, 110], "n_ob": [86, 90, 104, 110, 136, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 349], "n_act": [86, 90, 104, 110, 136, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 349], "ourselv": [86, 90, 104, 110, 345, 361], "emul": [86, 90, 104, 110], "epoch": [86, 90, 104, 110, 318, 345, 355], "input_td": [86, 90, 104, 110], "rollout_td": [86, 90, 104, 110], "concomitt": [86, 90, 104, 110], "workspac": [86, 90, 104, 110], "prevail": [86, 90, 104, 110, 121, 150, 177], "creator": [87, 323, 324, 332, 333, 334], "substitut": [87, 155, 166, 348], "vecnorm": [87, 334], "env_creat": [87, 343], "test_env1": 87, "_td": [87, 343], "observation_count": [87, 361], "test_env2": 87, "sleep": [87, 361], "ps": 87, "p1": 87, "p2": 87, "9934": 87, "env_str": 88, "device_map": 88, "accross": [89, 91], "registri": 89, "asyncvectorenv": 89, "involv": [89, 91, 92, 107, 347, 349], "pixel_observ": [89, 91, 92, 107], "pixelobservationwrapp": [89, 91, 92, 107], "al": [89, 91, 129, 140, 178, 361], "adventur": [89, 91, 361], "v5": [89, 91, 102, 129, 140, 361], "airraid": [89, 91, 361], "alien": [89, 91, 361], "time_limit": 89, "timelimit": [89, 111, 112], "default_info_dict_read": [89, 90, 91, 104], "reader": [89, 90, 91, 104, 344], "set_info_dict_read": [89, 90, 91, 104, 347], "info_dict": [89, 90, 91, 104], "auto_register_info_dict": [89, 90, 91, 104], "info_dict_read": [90, 104], "succe": [90, 104], "halfcheetah": [90, 104, 146, 327, 343], "register_info_dict": 90, "read_act": 90, "read_don": 90, "nonsens": 90, "fallback": 90, "broken": [90, 169], "read_ob": 90, "dictat": [90, 238, 242, 269, 343, 356], "read_reward": 90, "baseinfodictread": 90, "hoc": [90, 104, 348], "dict_read": 90, "my_info_kei": 90, "some_env": 90, "vecenv": 91, "vectorenv": 91, "placehold": [92, 129, 160], "secur": 92, "habitat3": 92, "ai": [92, 357], "habitatrenderpick": 92, "isaacgym": [93, 94], "isaacgymwrapp": [93, 336], "isaacgymenv": [94, 336], "webpag": 94, "isaac": 94, "essenc": [94, 347], "instadeepai": [95, 96], "2306": [95, 96], "09884": [95, 96], "snake": [95, 96], "grid": [95, 96, 301], "bodi": [95, 96], "body_st": [95, 96], "fruit_posit": [95, 96], "col": [95, 96], "row": [95, 96], "head_posit": [95, 96], "tail": [95, 96], "game2048": [95, 96], "maze": [95, 96], "cleaner": [95, 96], "cvrp": [95, 96], "multicvrp": [95, 96], "minesweep": [95, 96], "rubikscub": [95, 96], "knapsack": [95, 96], "sudoku": [95, 96], "tsp": [95, 96], "connector": [95, 96], "v2": [95, 96, 108, 109, 277, 291, 292, 293, 294, 296, 297, 298, 299, 346], "mmst": [95, 96], "graphcolor": [95, 96], "partli": [95, 96], "scrambl": [95, 96], "robotwarehous": [95, 96], "tetri": [95, 96], "binpack": [95, 96], "jobshop": [95, 96], "0x1fca91910": 95, "122": [95, 96, 356, 361], "0x1ff9baee0": 95, "134": [95, 96, 356, 358], "0x1ff9ba7c0": 95, "172": [95, 96, 356], "rubric": [96, 138, 244], "mo": [97, 98], "minecart": [97, 98], "mo_gym": 98, "qualnam": 99, "leverag": [99, 105, 106, 343, 355, 361], "neural": [99, 105, 106, 179, 180, 218, 241, 338, 344, 345, 346, 348, 355, 356, 361], "group_map": [99, 105, 106, 111, 112, 113], "constructiuon": [99, 105, 106], "premad": [99, 105, 106, 111, 112, 280], "all_in_one_group": [99, 113], "agent_0": [99, 105, 106, 113], "agent_1": [99, 105, 106, 113], "agent_2": [99, 105, 106, 113], "agent_3": 99, "one_group_per_ag": [99, 105, 106], "environn": 100, "mymbenv": [100, 178, 202], "world_model": [100, 178, 202, 262], "super": [100, 117, 125, 128, 144, 178, 189, 202, 246, 252, 254, 259, 265, 270, 272, 274, 343, 356, 358, 360], "hidden_observ": [100, 178, 202], "mlp": [100, 178, 179, 180, 182, 183, 184, 185, 191, 194, 198, 199, 202, 206, 227, 232, 255, 257, 327, 338, 344, 348, 349, 352, 354, 357, 360], "worldmodelwrapp": [100, 178, 202], "activation_class": [100, 178, 179, 180, 182, 183, 184, 185, 190, 191, 200, 202, 205, 206, 344, 348, 355, 360], "relu": [100, 178, 186, 202, 209, 250], "activate_last_lay": [100, 178, 185, 200, 202], "sail": [101, 102], "sg": [101, 102], "10558": [101, 102], "readthedoc": 101, "en": 101, "python_interfac": 101, "envpoolmixin": 102, "env_bas": 102, "task_id": 102, "env_typ": 102, "gym_reset_return_info": 102, "envpool_env": 102, "www": [103, 203, 204], "fetch_openml": 103, "106": [103, 356], "my_env_fun": [104, 110], "custom_attribute_list": [104, 110], "custom_attribut": [104, 110], "custom_method_list": [104, 110], "custom_method": [104, 110], "deploi": [104, 110], "slight": [104, 110, 344], "share_individual_td": [104, 110], "shared_memori": [104, 110], "policy_proof": [104, 110], "ll": [104, 110, 192, 193, 196, 197, 343, 344, 345, 346, 347, 348, 349, 350, 352, 355, 361], "serial_for_singl": [104, 110], "com_veloc": [104, 110], "extrem": [104, 110, 251, 253, 266, 269, 271], "head_height": [104, 110], "joint_angl": [104, 110], "torso_vert": [104, 110], "stringent": [104, 345, 355], "inter": 104, "penv": 104, "tensordictprim": [104, 346], "reward_run": 104, "env_fix": 104, "drastic": [104, 358], "influenc": 104, "thumb": [104, 345], "suppos": [104, 314, 340, 361], "myenv": [104, 125, 128], "pipe": 104, "update_kwarg": [104, 110], "pettingzoo": [105, 106], "pet": [105, 106], "zoo": [105, 106], "__": [105, 106], "aecenv": [105, 106], "use_mask": [105, 106], "dead": [105, 106], "compulsori": [105, 106], "adversary_0": [105, 106], "adversari": [105, 106], "marlgroupmaptyp": [105, 106, 111, 112, 113, 336], "vectoris": [105, 106, 192, 193, 196, 197], "sisl": 105, "multiwalker_v9": 105, "return_st": [105, 106], "categorical_act": [105, 106, 108, 109, 111, 112], "n_piston": [105, 106], "pistonball_v6": [105, 106], "piston": [105, 106], "piston_0": [105, 106], "piston_1": [105, 106], "piston_20": [105, 106], "aec": [105, 106], "tictactoe_v3": [105, 106], "player": [105, 106], "player_1": [105, 106], "player_2": [105, 106], "butterfli": 106, "parallel_env": [106, 343, 360, 361], "vikashplu": 107, "wiki": 107, "06828": 107, "smacv2": [108, 109], "starcraft": [108, 109], "challeng": [108, 109, 347, 356, 357], "10gen_terran": [108, 109], "10gen_zerg": [108, 109], "10gen_protoss": [108, 109], "3m": [108, 109], "8m": [108, 109, 357], "25m": [108, 109], "5m_vs_6m": [108, 109], "8m_vs_9m": [108, 109], "10m_vs_11m": [108, 109], "27m_vs_30m": [108, 109], "mmm": [108, 109], "mmm2": [108, 109], "2s3z": [108, 109], "3s5z": [108, 109], "3s5z_vs_3s6z": [108, 109], "3s_vs_3z": [108, 109], "3s_vs_4z": [108, 109], "3s_vs_5z": [108, 109], "1c3s5z": [108, 109], "2m_vs_1z": [108, 109], "corridor": [108, 109], "6h_vs_8z": [108, 109], "2s_vs_1sc": [108, 109], "so_many_banel": [108, 109], "bane_vs_ban": [108, 109], "2c_vs_64zg": [108, 109], "old": [108, 109, 266, 361], "smac": [108, 109], "map_nam": [108, 109], "176": [108, 109, 345, 356], "battle_won": [108, 109], "dead_al": [108, 109], "dead_enemi": [108, 109], "episode_limit": [108, 109], "322": [108, 109, 356], "Or": [108, 109, 205], "procedur": [108, 109], "distribution_config": [108, 109], "n_unit": [108, 109], "n_enemi": [108, 109], "team_gen": [108, 109], "dist_typ": [108, 109], "weighted_team": [108, 109], "unit_typ": [108, 109], "marin": [108, 109], "maraud": [108, 109], "medivac": [108, 109], "exception_unit_typ": [108, 109], "start_posit": [108, 109], "surrounded_and_reflect": [108, 109], "map_x": [108, 109], "map_i": [108, 109], "capability_config": [108, 109], "88": [108, 109, 344, 356, 357], "131": [108, 109, 356], "starcraft2env": 109, "proroklab": [111, 112], "vectorizedmultiagentsimul": [111, 112], "2207": [111, 112], "03530": [111, 112], "basescenario": 111, "descript": [111, 344, 345], "perfrom": [111, 112], "defaultt": 111, "continuous_act": [111, 112, 355], "repositiori": 111, "horizon": [111, 112, 178, 202, 345], "sparsiti": 111, "agent_nam": [111, 112, 113], "agent_names_to_indices_map": [111, 112], "unbatched_action_spec": [111, 112, 355], "unbatched_observation_spec": [111, 112], "unbatched_reward_spec": [111, 112], "het_spec": [111, 112], "het_specs_map": [111, 112], "flock": [111, 112], "agent_collision_rew": [111, 112], "agent_distance_rew": [111, 112], "ca": 113, "environment4": 113, "get_group_map": 113, "sumbodul": 114, "model_bas": [115, 178, 202], "adapt": [117, 154, 266, 343, 356], "masker": 117, "tensor_spec": [117, 177, 258, 259, 269, 271], "binarydiscretetensorspec": [117, 255, 258, 259, 280, 336], "maskedenv": 117, "ones_lik": 117, "scatter": 117, "_set_se": [117, 125, 128, 144, 356], "biner": 118, "transform_reward_spec": [118, 123, 124, 125, 126, 130, 136, 144, 145, 148, 149, 151, 152, 154, 159, 161, 168], "burn_in": 119, "burn": 119, "date": [119, 304], "retur": 119, "burnt": 119, "gru_modul": [119, 194], "input_s": [119, 192, 193, 194, 196, 197, 198, 199, 346], "hidden_s": [119, 192, 193, 194, 196, 197, 198, 199, 346], "set_recurrent_mod": [119, 194, 198, 346], "burn_in_transform": 119, "gru": [119, 193, 194], "num_lay": [119, 192, 194, 196, 198, 210, 211], "86": [119, 344, 346, 356, 357], "3008": [119, 344], "0344": 119, "padding_valu": [120, 203, 204], "as_invers": 120, "movement": 120, "pdf": [120, 181, 182, 183, 184, 185, 189, 233, 237, 260, 270, 273, 282, 287, 295, 327], "1312": [120, 344], "5602": 120, "unsqueezetransform": [120, 356, 358], "consumpt": 120, "followin": 120, "pictur": 120, "pixels_trsf": [120, 358], "grayscal": [120, 344, 346, 358, 361], "data_exclud": [120, 358], "transform_observation_spec": [120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 134, 135, 136, 138, 140, 144, 145, 146, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 165, 168, 356], "del_kei": [121, 162, 354, 356], "unsqueeze_if_oor": 121, "observation_posit": 121, "observation_veloc": 121, "key1": [121, 309, 317], "key2": [121, 309, 317], "center": [122, 301], "width": [122, 146], "out_keys_inv": [123, 125, 128, 138, 139, 140, 144, 145, 152, 159, 356], "scalar": [123, 148, 183, 185, 207, 208, 230, 234, 235, 237, 248, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 280, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 338, 344, 349, 356], "permit": [123, 132, 161, 251, 253, 266, 269, 271], "rewardsc": [124, 160, 343, 344, 346], "rewardclip": 124, "transformed_env": [124, 159, 160, 347], "transform_env_devic": [124, 126, 159, 168], "transform_input_spec": [124, 125, 126, 127, 138, 140, 144, 145, 150, 154, 155, 156, 159, 161, 163, 168], "transform_output_spec": [124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 168], "transformfull_done_spec": [124, 125, 126, 130, 136, 144, 145, 151, 154, 159, 168], "dtype_in": 125, "dtype_out": 125, "scan": [125, 128, 243, 244], "resp": [125, 128], "not_transform": [125, 128], "constructedw": [125, 128], "orig_devic": 126, "unspecifi": 126, "transform_done_spec": [126, 159, 168], "num_actions_effect": 127, "max_act": 127, "include_forward": 127, "num_act": [127, 259, 348], "action_out": 127, "_call": [127, 132, 356], "eol_kei": 129, "lives_kei": 129, "eol_attribut": 129, "unwrap": 129, "breakout": 129, "210": [129, 140, 356], "160": [129, 140, 344, 356], "eol_transform": 129, "eol": 129, "dqnloss": [129, 251, 252, 254, 257, 259, 260, 261, 264, 265, 267, 269, 270, 271, 272, 273, 274, 275, 280, 325, 336, 339, 344, 346, 352], "register_kei": 129, "loss_or_advantag": 129, "lossmodul": [129, 318, 329, 330, 336], "valueestimatorbas": [129, 267, 336], "excluded_kei": 130, "finit": [131, 348, 358], "first_dim": 132, "last_dim": 132, "allow_positive_dim": [132, 161], "th": [132, 161, 192, 196, 356], "frameskip": 132, "repeatedli": [133, 345, 355], "init_kei": 135, "tracker": 135, "coef": 136, "pi_curr": 136, "pi_0": 136, "overfit": 136, "probabilist": [136, 238, 336, 345, 360], "get_dist": [136, 242, 243], "mod": [136, 194, 198, 245, 346, 352], "normalparamextractor": [136, 338, 345, 348, 355], "probabilisticactor": [136, 227, 228, 229, 231, 251, 252, 256, 258, 259, 265, 268, 269, 270, 271, 272, 274, 338, 343, 345, 348, 355], "tanhnorm": [136, 227, 228, 229, 238, 244, 251, 252, 265, 269, 270, 271, 272, 274, 336, 345, 355, 360], "return_log_prob": [136, 227, 228, 229, 238, 242, 244, 271, 338, 345, 348, 355, 360], "apply_": 136, "copy_": [136, 343], "formulat": 136, "diverg": [136, 194, 198, 238, 242, 262, 266], "noop": [137, 360], "trial": 137, "standard_norm": [138, 149, 343, 344, 346], "affin": [138, 149], "layer": [138, 166, 179, 180, 182, 183, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200, 205, 206, 207, 208, 210, 211, 218, 219, 225, 236, 245, 338, 344, 345, 346, 348, 357], "set_default_tensor_typ": 138, "doubletensor": 138, "isclos": 138, "next_ob": [138, 282, 283, 284, 285, 360], "init_stat": [138, 343, 344, 345, 346], "3752e": 138, "01": [138, 237, 248, 253, 266, 269, 342, 344, 346, 355, 356, 357, 359], "5087e": 138, "9294e": 138, "9636": 138, "5608": 138, "6408": 138, "num_it": [138, 344, 345], "reduce_dim": [138, 343, 344, 345, 346], "cat_dim": [138, 343, 344, 345, 346], "keep_dim": [138, 344, 346], "statist": [138, 166, 271, 334, 343, 344, 345, 361], "gaussian": [138, 156, 178, 202, 207, 208, 213, 230, 345], "empir": [138, 178, 202, 238, 242, 343, 345, 355], "3d": [138, 179], "third": [138, 233, 355], "reorder": 140, "in_keys_in": 140, "channel": [140, 158, 205, 210, 211, 344], "r3m": [142, 357], "resnet": [142, 162, 164], "visual": [142, 162, 164, 345, 356], "embed": [142, 162, 163, 164, 182, 214, 226, 227, 228, 229, 241, 246, 357], "ego4d": [142, 162, 164], "univers": [142, 162, 164, 347], "suraj": [142, 162], "nair": [142, 162], "aravind": [142, 162], "rajeswaran": [142, 162], "vikash": [142, 162, 164], "kumar": [142, 162, 164], "chelsea": [142, 162], "finn": [142, 162], "abhinav": [142, 162], "gupta": [142, 162], "2203": [142, 162, 202, 357], "12601": [142, 162, 357], "_init": [142, 162, 343], "snippet": [142, 162, 343], "resnet50": [142, 164, 357], "model_nam": [142, 162, 164, 304], "resnet34": 142, "resnet18": 142, "r3m_vec": [142, 357], "feed": [142, 164, 267, 338, 343, 355, 358], "stack_imag": [142, 164], "tread": [142, 164], "separet": [142, 164], "hub": [142, 164, 347, 357], "resnet50_weight": [142, 164], "imagenet1k_v1": [142, 164], "download_path": [142, 164], "tensor_pixels_kei": [142, 164], "sub_seq_len": 143, "sample_dim": [143, 343], "primarili": [143, 348], "hesit": 143, "request": 143, "robust": 143, "mix": [143, 214, 223, 280, 343, 355], "improp": 143, "dummyenv": 144, "another_oth": 144, "other_reward": 144, "create_copi": 145, "stuff": [145, 350], "newnam": 145, "r2g": 147, "reward_to_go": 147, "bernoulli_": 147, "9010": 147, "9404": [147, 288], "9701": [147, 288], "9900": [147, 288], "0000": [147, 157, 234, 235, 245, 288, 345, 346, 356, 360], "crash": 147, "clamp_min": 148, "clamp_max": 148, "clip_min": 148, "clip_max": 148, "episode_": 150, "reward1": 150, "reward2": 150, "episode_reward": [150, 355], "keep_reward": 151, "keep_don": 151, "sign": [152, 282], "logical_or": 152, "squeeze_dim": 153, "step_count_kei": 154, "update_don": 154, "accordingli": [154, 155, 196, 239, 346], "disjunct": 154, "recognis": 154, "target_return": 155, "subtract": 155, "primer": [156, 346], "default_valu": [156, 346], "unit": [156, 178, 190, 192, 193, 210, 211, 216, 217, 345], "transfomedenv": 156, "mykei": 156, "__unless": 156, "exists__": 156, "increas": [157, 237, 355], "10th": 157, "0216": 157, "1149": 157, "1990": 157, "2749": 157, "3281": 157, "9290": 157, "3702": 157, "8978": 157, "from_int": 158, "shape_toler": 158, "permuat": 158, "ri": 158, "principl": 159, "cattransform": 159, "notabl": 159, "rewardsum": [159, 168, 355], "cache_spec": 160, "set_missing_toler": 160, "keyerror": [160, 343], "unsqueeze_dim": [161, 356], "danger": 161, "vc1": 162, "vc1_vec": 162, "untrain": 162, "make_noload_model": 162, "vip": [163, 164, 357], "toward": 164, "implicit": [164, 258, 265, 358], "jason": 164, "ma": 164, "shagun": 164, "sodhani": 164, "dinesh": 164, "jayaraman": 164, "osbert": 164, "bastani": 164, "ami": 164, "zhang": 164, "vip_vec": 164, "final_nam": 165, "sb3": 165, "terminal_obs_read": 165, "truli": [165, 360], "till": 165, "nan": 165, "shared_td": 166, "decai": [166, 230, 234, 273, 316, 343, 344, 346, 361], "9999": [166, 356], "0001": [166, 190, 209, 345, 356], "to_observation_norm": 166, "underflow": [166, 316], "build_td_for_shared_vecnorm": 166, "memmori": 166, "queue": [166, 358], "td_share": 166, "state_dim": [167, 181, 186, 213, 216, 217, 231], "action_dim": [167, 181, 182, 184, 186, 213, 231, 343, 354], "gsde": [167, 270, 334], "gsdemodul": 167, "rb_transform": 168, "resist": 168, "insensit": 168, "sensit": [168, 344], "_orig": 168, "95": [168, 202, 276, 344, 345, 346, 356, 358], "tdreset": [168, 354], "window": [168, 358], "edit": [168, 350], "check_dtyp": 169, "discrep": [169, 251, 253, 254, 255, 266, 269, 271, 280], "temporarili": [169, 350, 358], "rng": [169, 356], "revert": [169, 348, 358], "probabilistictdmodul": [174, 175, 200, 238, 242, 281, 314], "next_tensordict": 176, "keep_oth": [176, 356], "exclude_reward": 176, "exclude_don": 176, "exclude_act": 176, "next_": 176, "funtion": 176, "write_full_fals": 177, "_terminated_or_trunc": 177, "entropi": [178, 251, 252, 253, 258, 259, 265, 266, 268, 269, 270, 272, 274, 355], "botev": 178, "et": 178, "2013": 178, "cem": 178, "plan": [178, 201, 202], "varianc": [178, 195, 209, 221, 222, 339, 343, 345, 355], "k": [178, 192, 193, 196, 197], "maximis": [178, 182, 184, 202, 338, 344, 345, 355], "modelbasedenv": [178, 202], "planning_horizon": [178, 202], "optim_step": [178, 202, 344, 352], "mpc": [178, 201, 202], "num_candid": [178, 202], "candid": [178, 202], "top_k": [178, 202], "modelbasedenvbas": [178, 201, 202, 336], "safemodul": [178, 201, 227, 229, 242, 251, 252, 258, 259, 265, 269, 270, 271, 272, 274, 323, 324, 330, 336, 360], "num_cel": [179, 180, 182, 183, 184, 185, 190, 191, 194, 198, 200, 205, 206, 227, 344, 345, 346, 348, 349, 352, 355, 360], "elu": [179, 180, 182, 183, 184, 185, 190, 191, 205, 344, 360], "activation_kwarg": [179, 180, 200], "norm_class": [179, 180, 182, 183, 200], "norm_kwarg": [179, 180, 200], "bias_last_lay": [179, 180, 182, 183, 184, 185, 191, 200], "aggregator_class": [179, 180, 182, 183, 344, 346, 360], "squashdim": [179, 180, 182, 191, 205, 360], "aggregator_kwarg": [179, 180, 182, 183, 344, 346], "squeeze_output": [179, 180, 182, 183, 344, 346], "cell": [179, 180, 192, 193, 194, 196, 197, 198, 200, 205, 206, 345, 347, 348, 349, 350, 351, 352], "kernel": [179, 180, 191, 199, 205], "cnet": [179, 180], "conv3d": 179, "lazyconv2d": [180, 182, 183, 191, 205, 360], "transformer_config": [181, 213, 231], "decisiontransform": [181, 213], "dtconfig": [181, 186, 213], "2202": [181, 186, 268], "05607": [181, 186, 268], "return_to_go": [181, 186, 213, 231], "conv_net_kwarg": [182, 183], "mlp_net_kwarg": [182, 183, 184], "use_avg_pool": [182, 183], "WITH": [182, 183, 184, 185, 237, 273], "1509": [182, 183, 184, 185, 202, 237, 255, 264, 273, 356], "02971": [182, 183, 184, 185, 237, 273], "reus": [182, 308], "convnet": [182, 183, 191, 205, 346, 348, 360], "ndims_in": 182, "avgpool": [182, 183], "lazylinear": [182, 183, 184, 185, 191, 200, 338, 345, 348, 356, 357, 360], "2304": [182, 344], "adaptiveavgpool2d": [183, 344, 346], "output_s": [183, 344, 346], "squeeze2dlay": 183, "400": [184, 185, 351, 355, 356, 358], "mlp_net_kwargs_net1": 185, "mlp_net_kwargs_net2": 185, "mlp1": 185, "mlp2": 185, "decion": 186, "desdescrib": 186, "n_embd": 186, "n_layer": [186, 192, 196], "n_head": 186, "n_inner": 186, "n_posit": 186, "resid_pdrop": 186, "attn_pdrop": 186, "gpt2config": 186, "atol": [187, 220], "rtol": [187, 220], "batch_shap": [187, 220], "event_shap": [187, 220], "absolut": [187, 220, 343], "densiti": [187, 203, 204, 212, 222], "mass": [187, 203, 204, 212, 222, 356], "rsampl": [187, 204, 212, 242], "sample_shap": [187, 203, 204, 212], "softmax": [188, 204, 212, 232, 233], "var_num": [189, 215, 232, 233, 240], "action_value_kei": [189, 215, 232, 233, 239, 240, 267, 280], "action_mask_kei": [189, 215, 232, 233, 234, 235, 239, 240], "perspect": [189, 233, 260, 345], "1707": [189, 233, 260, 269], "06887": [189, 233, 260], "mult": [189, 206, 215, 232, 233, 239, 240], "tensordict_modul": [189, 192, 193, 196, 197, 215, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 254, 258, 259, 265, 269, 270, 271, 272, 274, 338], "nbin": [189, 232, 338], "customdistributionalqv": 189, "log_softmax": [189, 232], "from_modul": [189, 241, 244, 360], "one_hot": [189, 204, 215], "qvalue_actor": [189, 215, 232, 239, 338], "to_modul": [189, 241, 244, 343, 360], "std_bia": 190, "std_min_val": 190, "belief": [190, 210, 216, 217], "1912": [190, 261, 262, 263], "01603": [190, 261, 262, 263], "softplu": [190, 209, 248, 249, 250], "out_features_valu": 191, "cnn_kwarg": [191, 344], "mlp_kwarg": [191, 199, 344], "duel": 191, "cnn": [191, 205, 344, 348, 360], "06581": 191, "batch_first": [192, 194, 196, 198, 346], "bidirect": [192, 196, 346], "cudnn": [192, 193, 196, 197, 346], "vmap": [192, 193, 196, 197, 199, 224, 241, 244, 360], "rnn": [192, 193, 196, 197, 346, 348], "device_count": [192, 193, 196, 197, 361], "els": [192, 193, 196, 197, 210, 338, 340, 343, 344, 345, 346, 355, 356, 357], "n_in": [192, 193, 196, 197], "n_out": [192, 193, 196, 197], "h0": [192, 193, 196, 197], "h1": [192, 193, 196, 197], "call_gru": [192, 193], "h_out": [192, 193, 196, 197], "batched_cal": [192, 193, 196, 197], "gate": [192, 193, 196], "r_t": 192, "sigma": [192, 193, 195, 196, 197, 221, 222, 230, 237, 345], "w_": [192, 193, 196, 197], "ir": [192, 193], "x_t": [192, 196], "b_": [192, 193, 196, 197], "hr": [192, 193, 196], "h_": [192, 193, 196], "z_t": 192, "iz": [192, 193], "hz": [192, 193], "n_t": 192, "odot": [192, 193, 196, 197], "hn": [192, 193, 196], "h_t": [192, 196], "sigmoid": [192, 193, 196, 197], "hadamard": [192, 193, 196, 197], "multilay": [192, 196], "_t": [192, 196, 355, 356], "ge": [192, 196], "multipli": [192, 196, 252, 253, 259, 266, 268, 269, 270, 272, 316, 343], "bernoulli": [192, 196], "b_ih": [192, 193, 196, 197, 198], "b_hh": [192, 193, 196, 197, 198], "seq": [192, 194, 196, 198, 346, 352, 354], "h_0": [192, 196, 197], "unbatch": [192, 196], "pack_padded_sequ": [192, 196], "pack_sequ": [192, 196], "num": [192, 196, 352], "_layer": [192, 196], "_size": [192, 193, 196, 197], "h_n": [192, 196], "packedsequ": [192, 196], "weight_ih_l": [192, 196], "learnabl": [192, 193, 196, 197], "w_ir": 192, "w_iz": 192, "w_in": 192, "num_direct": [192, 196], "weight_hh_l": [192, 196], "w_hr": 192, "w_hz": 192, "w_hn": 192, "bias_ih_l": [192, 196], "b_ir": 192, "b_iz": 192, "b_in": 192, "bias_hh_l": [192, 196], "b_hr": 192, "b_hz": 192, "b_hn": 192, "mathcal": [192, 193, 196, 197], "sqrt": [192, 193, 196, 197, 237], "frac": [192, 193, 196, 197, 345], "seq_len": [192, 196], "subtli": 192, "matrix": [192, 196, 207, 208], "contrast": [192, 264, 358], "hx": [192, 193, 196, 197], "lstmcell": [193, 198], "gru_cel": 193, "z": 193, "weight_ih": [193, 197], "weight_hh": [193, 197], "bias_ih": [193, 197], "bias_hh": [193, 197], "rocm": [193, 197], "embedd": [194, 198, 199], "grucel": [194, 241], "python_bas": [194, 198], "recurrent_st": [194, 346], "custom_kei": [194, 198], "recurrent_mod": [194, 198], "rs": [194, 343], "gru_module_train": 194, "policy_train": [194, 198], "traj_td": [194, 198], "policy_infer": [194, 198], "td_inf": [194, 198], "assert_clos": [194, 198], "upscal": [195, 221, 222], "tanh_loc": [195, 221, 222], "event_dim": [195, 220, 221], "ultim": [195, 221, 222], "poor": [195, 221, 222], "explos": [195, 221, 222], "switch": [195, 222], "formula": [195, 221, 222, 251, 253, 266, 269, 339, 345], "proj_siz": 196, "c0": [196, 197], "c1": [196, 197], "call_lstm": [196, 197], "c_out": [196, 197], "i_t": 196, "ii": [196, 197], "hi": [196, 197], "f_t": 196, "hf": [196, 197], "g_t": 196, "ig": [196, 197], "hg": [196, 197], "o_t": 196, "ho": [196, 197], "c_t": 196, "c_": 196, "forget": 196, "1402": 196, "1128": 196, "c_0": [196, 197], "proj": 196, "c_n": 196, "w_ii": 196, "w_if": 196, "w_ig": 196, "w_io": 196, "w_hi": 196, "w_hf": 196, "w_hg": 196, "w_ho": 196, "b_ii": 196, "b_if": 196, "b_ig": 196, "b_io": 196, "b_hi": 196, "b_hf": 196, "b_hg": 196, "b_ho": 196, "weight_hr_l": 196, "_revers": 196, "analog": [196, 348], "cn": 196, "lstm_cell": 197, "h_1": 197, "c_1": 197, "time_step": [197, 199], "cx": 197, "trust": 198, "correspont": 198, "recurrent_state_h": [198, 346], "recurrent_state_c": [198, 346], "triplet": [198, 239, 240], "lstm_modul": 198, "rs_h": 198, "rs_c": 198, "hidden0": 198, "hidden1": 198, "lstm_kwarg": 199, "lstm_backend": 199, "next_observ": [199, 251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 354], "2d": [199, 348, 355], "indeic": 199, "hidden0_in": 199, "hidden1_in": 199, "hidden0_out": 199, "hidden1_out": 199, "single_bias_last_lay": 200, "layer_class": 200, "layer_kwarg": 200, "perceptron": [200, 348], "aslo": 200, "42": [200, 251, 252, 254, 258, 265, 272, 344, 355, 356, 357], "noisylinear": [200, 207, 336, 344], "noisylazylinear": [200, 336], "mpcplanner": 201, "tensordict_out": [201, 361], "mppi": 202, "covari": 202, "william": [202, 271], "aldrich": 202, "theodor": 202, "01149": 202, "hansen": 202, "wang": 202, "su": 202, "04955": 202, "valueoper": [202, 227, 228, 229, 251, 252, 253, 254, 259, 265, 266, 269, 270, 271, 272, 274, 330, 338, 343, 345, 349], "tdlambdaestim": [202, 336, 343], "value_net": [202, 255, 257, 271, 282, 283, 284, 285, 345, 348, 349, 352], "adv": 202, "lmbda": [202, 276, 282, 285, 287, 293, 294, 295, 298, 299, 339, 343, 345, 355], "value_network": [202, 254, 255, 257, 258, 260, 265, 272, 282, 283, 284, 285, 339, 343, 345, 349, 352], "temperatur": [202, 252, 258, 265], "neg_inf": [203, 204], "inf": [203, 204], "api_doc": [203, 204], "tf_agent": [203, 204], "event": [203, 204, 212, 291, 292, 293, 294, 296, 297, 298, 299, 358], "unnorm": [203, 204, 212], "sparse_mask": [203, 204], "dens": [203, 204], "0831": [203, 204], "1203": [203, 204], "0928": [203, 204], "1972": [203, 204], "grad_method": [204, 212], "reparamgradientstrategi": [204, 212], "passthrough": [204, 212], "proxi": [204, 212, 339], "relaxedonehot": [204, 212], "zeros_lik": [204, 356], "sample_non_valid": 204, "centralis": [205, 206, 355], "share_param": [205, 206, 355], "homogen": [205, 206, 355], "agent_network": [205, 206], "modulelist": [205, 206, 327, 360], "2592": [205, 344], "decentralis": [205, 355], "n_agent_input": [206, 355], "n_agent_output": [206, 355], "lazili": [206, 356], "toech": 206, "centalis": 206, "shown": [206, 338, 354, 355, 358], "std_init": [207, 208], "initialize_paramet": 207, "isol": [207, 267], "1706": [208, 223], "10295v3": 208, "induc": 208, "aid": 208, "scale_map": 209, "biased_softplus_1": 209, "scale_lb": [209, 216, 217], "exp": [209, 250], "module_norm": 209, "decod": 210, "1803": [210, 211, 214], "10122": [210, 211], "rnn_hidden": 210, "latent": 211, "excacli": 212, "inres": 213, "mu": [213, 237, 345], "state_shap": [214, 280], "mixing_embed_dim": [214, 280], "qmix": [214, 355], "mixer": [214, 223, 280], "monoton": 214, "hyper": 214, "11485": 214, "qmixerloss": [214, 223], "qmix_vdn": [214, 223], "vdn": [214, 223], "greedi": [215, 233, 234, 235, 240, 344, 346, 348], "hidden_dim": [216, 217], "posterior": [216, 262], "rssm": [216, 217, 262], "1811": [216, 217], "04551": [216, 217], "obs_embed": 216, "rnn_hidden_dim": 217, "dream": 217, "tanhtransform": 221, "decomposit": 223, "05296": 223, "hide": [224, 345, 355], "satisfi": [224, 338], "vmap_dim": 224, "lam": 224, "sample_in": 224, "sample_in_td": 224, "vm": 224, "translat": [226, 238], "character": [226, 232, 238, 239, 241, 358], "overflow": [226, 232, 233, 238, 239, 240, 241, 242], "td_modul": [226, 227, 228, 229, 238, 241, 242, 244, 246, 348, 360], "3635": 226, "0340": 226, "1476": 226, "3911": [226, 356], "1664": [226, 344, 356], "5455": 226, "2247": 226, "4583": 226, "2916": 226, "2160": 226, "5337": 226, "5193": 226, "grad_fn": [226, 234, 235, 360], "addmmbackward0": 226, "actorvalueoper": [227, 338, 348], "get_policy_oper": [227, 228, 229, 253, 266, 269, 338], "standalon": [227, 228, 229, 348], "tdmodul": [227, 228, 229, 330], "get_critic_oper": 227, "common_oper": [227, 229], "policy_oper": [227, 228, 229], "value_oper": [227, 228, 229], "normalparamwrapp": [227, 228, 229, 238, 244, 251, 252, 259, 265, 269, 270, 271, 272, 274, 336, 360], "module_hidden": [227, 229], "td_module_hidden": [227, 229], "module_act": [227, 229], "td_module_act": [227, 228, 229], "module_valu": [227, 228, 229], "td_module_valu": [227, 228, 229], "state_action_valu": [227, 246, 252, 258, 265, 272, 281, 327, 330, 338, 343, 360], "td_clone": [227, 228, 229], "tensordictmodulewrapp": [227, 323, 324, 330], "get_policy_head": [227, 228, 229], "safesequenti": [227, 228, 229, 280], "head": [227, 229, 253, 266, 269], "get_value_head": [227, 228, 229], "get_value_oper": [227, 228, 229, 253, 266, 269], "action_modul": 228, "state_valu": [228, 229, 246, 253, 258, 265, 266, 269, 270, 272, 282, 283, 284, 285, 287, 289, 291, 293, 295, 296, 298, 338, 343, 345, 355], "qualiti": [229, 338], "actorcriticoper": [229, 253, 266, 269, 338, 348], "embeddig": 229, "refet": 229, "actorcriticwrapp": [229, 338, 343], "po": [230, 235], "sigma_init": 230, "epsilon": [230, 234, 235, 237, 273, 316, 344, 345, 346, 348], "sigma_end": 230, "annealing_num_step": [230, 234, 235, 237, 343, 344, 346, 348, 352], "captur": [230, 234, 235, 237], "omiss": [230, 234, 235, 237], "ommit": [230, 234, 235, 237], "inferec": 231, "set_tensor_kei": 231, "dt_inference_wrapp": 231, "baz": 231, "inference_context": 231, "obs_dim": 231, "tanhdelta": [231, 336, 343], "dtactor": 231, "actor_modul": [231, 360], "dist_class": 231, "dist_kwarg": 231, "distribution_kwarg": [231, 238, 242, 345, 355], "inference_actor": 231, "sequence_length": 231, "mask_context": 231, "out_act": 231, "qvaluemodul": [232, 239, 280, 346, 348, 352], "distributionaldqnnet": 232, "make_log_softmax": 232, "my_action_valu": [233, 240], "chanc": 233, "thid": 233, "eps_init": [234, 235, 237, 344, 346, 348, 352], "eps_end": [234, 235, 237, 344], "explorative_polici": [234, 235, 237], "9055": [234, 235, 356], "9277": [234, 235], "6295": [234, 235], "2532": [234, 235], "addbackward0": [234, 235], "lmheadmodel": 236, "actor_head": [236, 253, 266, 269], "base_model": 236, "lm_head": 236, "ornstein": [237, 343], "uhlenbeck": [237, 343], "ou": [237, 343], "correl": 237, "noise_t": 237, "noise_": 237, "theta": [237, 345, 356], "sigma_t": 237, "sigma_": 237, "anneal": [237, 344, 348], "ou_prev_nois": 237, "ou_step": 237, "x0": 237, "sigma_min": 237, "n_steps_ann": 237, "is_init_kei": 237, "_ou_prev_nois": 237, "_ou_step": 237, "default_interaction_typ": [238, 242, 348], "interaction_typ": [238, 242], "datacollectorbas": [238, 320, 323, 324, 330, 336], "set_interaction_typ": [238, 242], "cache_dist": [238, 242], "n_empirical_estim": [238, 242], "compound": [238, 348], "compositedistribut": [238, 348], "categ": 238, "distribution_map": 238, "chose": 240, "functionalmodul": 241, "functionalmodulewithbuff": 241, "td_fmodul": 241, "td_function": 241, "td_state": 241, "params_repeat": 241, "td_vmap": [241, 244], "random_sampl": [241, 242], "suppli": 242, "fist": 242, "log_prob_kei": [242, 355], "probabilistictensordictsequenti": [243, 251, 253, 266, 269, 271, 323, 324, 360], "partial_toler": [243, 244, 354], "who": [243, 244], "AND": [243, 244], "tensordictsequenci": 244, "tensordictsequ": 244, "safeprobabilisticmodul": [244, 338], "spec1": 244, "net1": 244, "module1": 244, "td_module1": 244, "spec2": 244, "module2": 244, "td_module2": 244, "clamp": [245, 262, 318, 356], "boundari": [245, 345, 355], "resolut": 245, "9944": 245, "9991": 245, "3020": 245, "2299": [245, 356], "5418": 245, "2989": 245, "6849": 245, "3169": 245, "2690": 245, "9649": [245, 356], "5686": 245, "8602": 245, "0315": 245, "8455": [245, 356], "6027": 245, "4746": 245, "7843": 245, "7782": 245, "2111": 245, "5115": 245, "4687": 245, "5760": 245, "custommodul": 246, "imaginari": 247, "imagin": 247, "transition_model": 247, "get_reward_oper": 247, "get_transition_model_oper": 247, "min_val": [248, 250], "_bia": 248, "invert": [249, 345], "surject": 250, "expln": 250, "biased_softplu": [250, 336], "beggin": 250, "biased_softplus_": 250, "syntax": [250, 343], "met": [250, 356], "1602": 251, "01783v2": 251, "actor_network": [251, 252, 253, 254, 256, 258, 259, 265, 266, 268, 269, 270, 271, 272, 274, 343, 345, 349, 355], "critic_network": [251, 253, 266, 269, 271, 345, 355], "entropy_bonu": [251, 253, 266, 269, 345], "favour": [251, 253, 266, 269], "samples_mc_entropi": [251, 253, 266, 268, 269], "mont": [251, 253, 266, 269, 343], "carlo": [251, 253, 266, 269, 343], "entropy_coef": [251, 253, 266, 269, 345, 355], "critic_coef": [251, 253, 266, 269, 345], "loss_critic_typ": [251, 253, 266, 269, 271, 345], "l1": [251, 253, 254, 255, 259, 266, 269, 270, 271, 274, 277, 280, 338, 343], "l2": [251, 253, 254, 255, 256, 257, 259, 262, 263, 266, 269, 270, 271, 274, 277, 280, 343], "smooth_l1": [251, 252, 253, 254, 255, 258, 259, 265, 266, 269, 270, 271, 272, 274, 277, 280, 345], "separate_loss": [251, 253, 254, 258, 259, 265, 266, 269, 270, 271, 272, 274], "propag": [251, 253, 254, 258, 259, 265, 266, 269, 270, 271, 272, 274, 282, 283, 284, 285, 345, 355], "advantage_kei": [251, 253, 266, 269, 271, 282, 283, 284, 285], "value_target_kei": [251, 253, 266, 269, 271, 282, 283, 284, 285], "value_target": [251, 253, 266, 269, 271, 282, 283, 284, 285, 345, 355], "ddp": [251, 253, 266, 269, 271], "fsdp": [251, 253, 266, 269, 271], "divid": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 268, 269, 270, 271, 272, 274, 321, 338, 343, 355, 356], "clip_valu": [251, 253, 266, 269, 271], "loss_crit": [251, 269, 345, 355], "loss_entropi": [251, 269, 345, 355], "loss_object": [251, 269, 345, 355], "recur": [251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 282, 283, 284, 285, 286, 348], "next_reward": [251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 282, 283, 284, 285], "next_don": [251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 282, 283, 284, 285], "next_termin": [251, 252, 254, 255, 257, 258, 259, 265, 269, 270, 271, 272, 274, 282, 283, 284, 285], "loss_obj": 251, "sacloss": [251, 264, 273, 336], "select_out_kei": [251, 252, 254, 258, 259, 265, 269, 270, 272, 274], "make_value_estim": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 275, 280, 339, 343, 344, 355, 360], "value_typ": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 276, 280, 343], "hyperparam": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 343], "enum": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 276, 280, 343], "default_value_estim": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 343, 360], "default_value_kwarg": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 336, 343], "dqn_loss": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 275, 280], "td1": [251, 252, 254, 255, 257, 259, 260, 261, 265, 267, 269, 270, 271, 272, 274, 280, 343], "conserv": [252, 257], "qvalue_network": [252, 258, 259, 265, 270, 272, 274], "loss_funct": [252, 254, 255, 256, 257, 258, 259, 265, 270, 272, 274, 277, 280, 343], "alpha_init": [252, 259, 268, 270, 272], "min_alpha": [252, 259, 268, 270, 272], "max_alpha": [252, 259, 268, 270, 272], "fixed_alpha": [252, 259, 268, 270, 272], "target_entropi": [252, 259, 268, 270, 272], "prod": [252, 268, 272], "n_action": [252, 255, 257, 268, 272], "delay_actor": [252, 254, 272, 274], "delay_qvalu": [252, 259, 270, 272, 274], "min_q_weight": 252, "max_q_backup": 252, "backup": 252, "deterministic_backup": 252, "num_random": 252, "with_lagrang": 252, "lagrang": 252, "lagrange_thresh": 252, "valueclass": [252, 254, 259, 270, 272, 274], "qvalu": [252, 258, 259, 265, 270, 272, 274, 327], "loss_actor": [252, 254, 258, 259, 265, 270, 271, 272, 274, 313, 343, 349, 360], "loss_actor_bc": 252, "loss_alpha": [252, 259, 270, 272], "loss_cql": [252, 257], "loss_qvalu": [252, 257, 258, 259, 265, 270, 272, 274], "loss_alpha_prim": 252, "clip_epsilon": [253, 345, 355], "normalize_advantag": [253, 266, 269, 355], "value_kei": [253, 266, 269, 282, 283, 284, 285, 343], "somemodul": [253, 266, 269], "someactor": [253, 266, 269], "value_head": [253, 266, 269], "somevalu": [253, 266, 269], "loss_modul": [253, 264, 266, 267, 269, 273, 318, 329, 330, 339, 340, 343, 344, 345, 355, 358], "ppoloss": [253, 266, 336], "delay_valu": [254, 255, 257, 260, 271, 272, 280, 344, 346, 352], "loss_valu": [254, 258, 265, 271, 272, 343, 345, 349, 355, 360], "pred_valu": [254, 257, 274, 343, 349, 360], "pred_value_max": [254, 343, 349, 360], "target_valu": [254, 257, 270, 274, 281, 339, 343, 349, 360], "target_value_max": [254, 343, 349, 360], "qvalueactor": [255, 257, 280, 338, 344, 346], "double_dqn": 255, "06461": [255, 264], "mult_one_hot": [255, 258, 259, 280], "loss_val": [255, 257, 339, 343, 345, 346, 349, 350, 352, 355, 358], "01345": 256, "distanc": [257, 266, 277, 281, 282, 355], "dcql_loss": 257, "2110": [258, 265], "06169": [258, 265], "num_qvalue_net": [258, 259, 265, 270, 272, 274], "expectil": [258, 265], "tau": [258, 265, 273, 343, 344], "antmaz": [258, 265], "sticht": [258, 265], "onehotcategor": [258, 259, 336], "target_entropy_weight": 259, "disctount": 260, "distributionalqvalueactor": [260, 338], "input_tensordict": [260, 343], "actor_model": 261, "value_model": [261, 263], "model_based_env": 261, "dreamerenv": [261, 336], "imagination_horizon": 261, "unrol": [261, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299], "discount_loss": [261, 263], "lambda_kl": 262, "lambda_reco": 262, "lambda_reward": 262, "reco_loss": 262, "reward_loss": 262, "free_nat": 262, "nat": 262, "delayed_clamp": 262, "global_averag": 262, "value_loss": 263, "fake_data": 263, "ddpgloss": [264, 273, 330, 336, 343, 349, 360], "td3loss": [264, 273, 336], "value_network_update_interv": 264, "qvalueclass": 265, "loss_value_diff": 265, "diff": 265, "old_polici": 266, "new_polici": 266, "apart": [266, 355], "dtarg": 266, "samples_mc_kl": 266, "analyt": 266, "decrement": 266, "loss_": [267, 313, 339, 343, 349], "equip": [267, 346, 348], "gh": 267, "_acceptedkei": 267, "dataclass": [267, 327], "_forward_value_estimator_kei": 267, "alter": [267, 338], "value_estim": [267, 282, 283, 284, 285, 286, 339, 343, 355], "myloss": 267, "action2": 267, "convert_to_funct": [267, 343], "expand_dim": 267, "create_target_param": [267, 343], "compare_against": [267, 343], "_param": 267, "expans": 267, "resampl": 267, "_target_param": 267, "blend": 267, "proxim": [269, 345, 355], "optimis": [269, 314, 345, 355], "flavour": [269, 355, 360], "clipppoloss": [269, 336, 345, 355], "klpenppoloss": [269, 336], "regularis": 269, "06347": 269, "gae": [269, 336, 339, 343, 345, 355], "ppo_loss": 269, "tdlambda": [269, 276, 339, 343], "base_lay": 269, "randn_lik": 269, "samplelogprob": 269, "openreview": [270, 327], "ay8zfzm0tdd": [270, 327], "sub_sample_len": 270, "subsampl": [270, 309, 340], "action_log_prob_actor": 270, "state_action_value_actor": [270, 274], "connectionist": 271, "1992": 271, "doi": 271, "1007": 271, "bf00992696": 271, "actor_net": [271, 343, 345], "1801": 272, "01290": 272, "applic": [272, 280, 347, 348, 356], "1812": 272, "05905": 272, "redqloss": [273, 336], "math": 273, "theta_t": [273, 356], "theta_": [273, 356], "polyak": 273, "policy_nois": 274, "noise_clip": 274, "next_state_valu": [274, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 336], "td0": [275, 343], "strict_shap": 277, "view_a": 277, "qmixer": [280, 336], "local_valu": 280, "visibl": [280, 355], "dafault": 280, "acceptedkei": 280, "global_valu": 280, "penultim": 280, "local_value_network": 280, "mixer_network": 280, "value_modul": [280, 345, 360], "qnet": [280, 343], "next_val_kei": 281, "pred_next_v": 281, "usus": 281, "mse": 281, "q_valu": 281, "n_steps_to_next": 281, "value_next_st": 281, "1506": [282, 287, 295], "02438": [282, 287, 295], "exponenti": [282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 316], "average_ga": [282, 345], "skip_exist": [282, 283, 284, 285], "time_dim": [282, 284, 285, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299], "advang": 282, "gradient_mod": 282, "value_error": [282, 283, 284, 285, 286], "target_param": [282, 283, 284, 285, 286, 343, 355], "98": [282, 283, 284, 285, 344, 356, 357], "94": [282, 285, 344, 356, 357], "unpack": [282, 283, 284, 285], "tensor_kei": [282, 283, 284, 285, 286], "next_valu": [282, 283, 284, 285, 286], "aka": [283, 344], "average_reward": [283, 284, 285], "tdestim": [283, 284, 286], "infti": 284, "valuefunctionbas": 286, "old_stat": [287, 289, 291, 293, 295, 296, 298], "new_stat": [287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "rolling_gamma": [291, 292, 293, 294, 296, 297, 298, 299], "g1": [291, 292, 293, 294, 296, 297, 298, 299], "g2": [291, 292, 293, 294, 296, 297, 298, 299], "g3": [291, 292, 293, 294, 296, 297, 298, 299], "g4": [291, 292, 293, 294, 296, 297, 298, 299], "v3": [291, 292, 293, 294, 296, 297, 298, 299], "out_file_bas": 300, "skip_reset": 300, "interv": [300, 301, 310, 320, 344, 356], "center_crop": 301, "make_grid": 301, "mp4": [301, 303, 352], "csvlogger": [301, 336, 344, 351, 352], "csv": [301, 303, 305, 344, 351, 352], "wandb": [301, 305, 308, 351, 360], "tensorboard": [301, 305, 307, 351, 360], "exp_nam": [301, 302, 303, 306, 307, 308, 330, 344, 351, 352], "log_dir": [301, 302, 303, 305, 307, 308, 344, 352], "cheetah_video": 301, "video_format": [301, 303, 352], "run_video": 301, "run_video_0": 301, "templat": 302, "pt": [303, 340, 357], "video_fp": 303, "minim": [303, 358], "dependeci": 303, "cur_dir": 303, "csv_log": 303, "video_": 303, "experiment_nam": [304, 305], "uuid": [304, 344, 361], "logger_typ": 305, "logger_nam": 305, "mlflow": [305, 306], "wandb_kwarg": 305, "mlflow_kwarg": 305, "tracking_uri": 306, "uri": 306, "datastor": 306, "tb_log": 307, "tensoarboard": 307, "td_log": 307, "save_dir": 308, "resum": 308, "uncategor": 308, "sub_traj_len": 309, "min_sub_traj_len": 309, "register_op": [309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 340, 344], "process_optim_batch": [309, 315, 316, 340], "td_out": [309, 317], "_process_optim_batch_hook": [309, 340], "batch_subsampl": 309, "clear_cuda": 310, "pre_optim_step": [310, 340], "counter": [311, 340], "log_pbar": [311, 312, 314, 316, 340, 344], "progress": [311, 312, 314, 318, 340, 344, 346, 361], "count_fram": 311, "pre_steps_log": [311, 312, 340], "count_frames_log": 311, "lognam": 312, "r_train": [312, 344], "log_reward": [312, 344], "loss_compon": 313, "appl": 313, "optimizer_hook": 313, "record_interv": [314, 343, 344], "record_fram": [314, 321, 343, 344], "policy_explor": [314, 330, 343, 344, 348, 352], "log_kei": [314, 344], "suffix": 314, "underestim": 314, "set_exploration_typ": [314, 336, 345, 346, 348, 360], "r_evalu": [314, 343], "flatten_tensordict": [315, 344], "max_dim": 315, "rb_trainer": 315, "batch_process": [315, 316, 317, 340], "post_loss": [315, 340], "999": [316, 344], "jitter": 316, "finfo": 316, "default_dtyp": 316, "get_default_dtyp": 316, "reward_norm": 316, "update_reward_stat": 316, "normalize_reward": 316, "make_train": [317, 336], "_process_batch_hook": [317, 340], "select_kei": [317, 340], "versatil": [318, 347], "optim_steps_per_batch": [318, 340, 344], "clip_grad_norm": 318, "clip_norm": 318, "progress_bar": 318, "save_trainer_interv": 318, "log_interv": [318, 344], "save_trainer_fil": [318, 340], "update_weights_interv": [320, 344], "update_weight": 320, "post_step": [320, 340, 344], "cfg": [321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334], "dictconfig": [321, 322, 323, 324, 327, 328, 329, 330, 331, 334], "unknowingli": 321, "annealing_fram": [321, 343], "init_env_step": [321, 322, 343], "proof_environ": [322, 327, 343], "sta": 322, "ot": 322, "actor_model_explor": [323, 324, 343], "make_env_kwarg": [323, 324], "targetnetupdat": [325, 326, 329, 330], "redqloss_deprec": 326, "actor_net_kwarg": 327, "qvalue_net_kwarg": 327, "observation_kei": 327, "parser_env_arg": 327, "parser_model_args_continu": 327, "hydra": 327, "config_stor": 327, "configstor": 327, "config_field": 327, "config_cl": 327, "redqmodelconfig": 327, "envconfig": 327, "make_dataclass": 327, "cls_name": 327, "cs": 327, "config_path": 327, "config_nam": 327, "replayargsconfig": 328, "target_net_updat": [330, 343, 344], "constitu": 330, "tensorboardlogg": [330, 336, 351], "egreedywrapp": 330, "env_proof": 330, "obs_spec": 330, "net_valu": 330, "dir": [330, 340, 344], "gettempdir": 330, "argpars": [331, 334], "namespac": [331, 334], "parser": [331, 334], "transformed_env_constructor": [331, 336], "num_env_per_collector": [332, 333], "video_tag": 334, "norm_obs_onli": 334, "use_env_cr": 334, "custom_env_mak": 334, "custom_env": 334, "return_transformed_env": 334, "action_dim_gsd": 334, "state_dim_gsd": 334, "obs_norm_state_dict": 334, "wheter": 334, "maker": 334, "asyncdatacollector": 336, "distributedsyncdatacollector": 336, "submitit_delayed_launch": 336, "raycollector": 336, "rational": 336, "behind": 336, "footnot": 336, "unboundeddiscretetensorspec": 336, "lazystackedtensorspec": 336, "lazystackedcompositespec": 336, "prompttensordicttoken": 336, "rolloutfrommodel": 336, "tokenizeddatasetload": 336, "create_infinite_iter": 336, "consolidate_spec": 336, "check_no_exclusive_kei": 336, "contains_lazy_spec": 336, "check_marl_group": 336, "tensordictrecord": 336, "videorecord": [336, 345, 351, 352], "get_available_librari": 336, "set_exploration_mod": 336, "make_composite_from_td": [336, 356], "terminated_or_trunc": 336, "braxwrapp": 336, "dmcontrolwrapp": 336, "jumanjienv": 336, "jumanjiwrapp": 336, "mogymenv": 336, "mogymwrapp": 336, "multithreadedenvwrapp": 336, "openmlenv": 336, "pettingzooenv": 336, "robohiveenv": 336, "smacv2env": 336, "smacv2wrapp": 336, "vmaswrapp": 336, "qvaluehook": 336, "distributionalqvaluehook": 336, "reset_nois": 336, "cemplann": 336, "mpcplannerbas": 336, "mppiplann": 336, "independentnorm": 336, "truncatednorm": 336, "maskedonehotcategor": 336, "inv_softplu": 336, "vmapmodul": 336, "distributionaldqnloss": [336, 344], "discretesacloss": 336, "iqlloss": 336, "discreteiqlloss": 336, "cqlloss": 336, "discretecqlloss": 336, "dtloss": 336, "onlinedtloss": 336, "a2closs": 336, "reinforceloss": 336, "dreameractorloss": 336, "dreamermodelloss": 336, "dreamervalueloss": 336, "td0estim": [336, 343], "td1estim": [336, 343], "td0_return_estim": 336, "td0_advantage_estim": 336, "td1_return_estim": 336, "vec_td1_return_estim": 336, "td1_advantage_estim": 336, "vec_td1_advantage_estim": 336, "td_lambda_return_estim": 336, "vec_td_lambda_return_estim": 336, "td_lambda_advantage_estim": 336, "vec_td_lambda_advantage_estim": 336, "generalized_advantage_estim": 336, "vec_generalized_advantage_estim": 336, "reward2go": 336, "distance_loss": [336, 343], "hold_out_net": 336, "hold_out_param": [336, 343], "softupd": [336, 343, 344, 346, 349, 352], "hardupd": [336, 343, 349], "batchsubsampl": [336, 340], "clearcudacach": 336, "countframeslog": 336, "logreward": [336, 340, 344], "optimizerhook": [336, 344], "replaybuffertrain": [336, 340, 344], "rewardnorm": 336, "selectkei": [336, 340], "trainerhookbas": [336, 340, 344], "updateweight": [336, 340, 344], "make_collector_offpolici": 336, "make_collector_onpolici": 336, "make_dqn_loss": 336, "make_redq_loss": 336, "make_redq_model": 336, "make_replay_buff": [336, 343], "make_target_updat": 336, "parallel_env_constructor": [336, 343], "sync_async_collector": 336, "sync_sync_collector": 336, "correct_for_frame_skip": 336, "get_stats_random_rollout": 336, "mlflowlogg": 336, "wandblogg": [336, 351], "get_logg": 336, "generate_exp_nam": 336, "journei": 337, "textbook": 337, "highlight": 337, "ever": [337, 355], "bump": 337, "think": [337, 345, 355, 361], "benefit": [337, 347, 355, 358], "pr": 337, "ground": [338, 343, 356], "recycl": [338, 358], "impos": 338, "violat": 338, "noisier": 338, "Their": [338, 355], "sd": 338, "prob_modul": 338, "pick": [338, 343, 344, 348], "tabl": [338, 344, 348], "hopefulli": [338, 344], "functional_modul": 338, "make_funct": 338, "mathbb": [338, 344], "rightarrow": [338, 344], "soften": 338, "backbon": [338, 346, 348, 354, 360], "make_actor": 338, "make_valu": 338, "shared_param": 338, "make_common": 338, "reusabl": [339, 343, 358], "swappabl": [339, 343], "characterist": [339, 343, 356], "trainabl": [339, 343, 349, 357], "whatev": [339, 343], "smth": [339, 343], "metric": [339, 343], "nutshel": [339, 343], "barto": [339, 355], "chapter": [339, 351], "significantli": [339, 343, 344, 349, 355], "next_stat": 339, "value_net_loss": 339, "pow": [339, 343], "therebi": [339, 343, 344], "room": 339, "signifi": [339, 355], "underperform": 339, "thin": 339, "intric": [339, 348], "believ": 340, "scheme": [340, 361], "substenti": 340, "_pre_steps_log_hook": 340, "_pre_optim_hook": 340, "sub_batch": 340, "_post_loss_hook": 340, "_post_optim_hook": 340, "post_optim": [340, 344], "_post_optim_log": 340, "post_optim_log": 340, "_post_steps_hook": 340, "_post_steps_log_hook": 340, "post_steps_log": 340, "comment": [340, 344, 360], "reserv": 340, "logginghook": 340, "logging_hook": 340, "save_dict": 340, "some_valu": 340, "torchsnapshot": 340, "ckpt_backend": 340, "filepath": 340, "save_train": 340, "load_from_fil": 340, "58": [342, 344, 356, 357, 359], "774": [342, 359], "galleri": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "mem": [342, 359], "mb": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361], "torchrl_demo": [342, 359, 360], "55": [342, 344, 356, 357, 358, 359, 360], "432": [342, 356, 359, 360], "rb_tutori": [342, 358, 359], "070": [342, 358, 359], "4009": [342, 359], "coding_dqn": [342, 344, 359], "055": [342, 344, 356, 359], "719": [342, 344, 359], "736": [342, 344, 356, 359], "dqn_with_rnn": [342, 346, 359], "289": [342, 346, 356, 359, 361], "1917": [342, 359], "multiagent_ppo": [342, 355, 359], "467": [342, 355, 356, 359], "coding_ddpg": [342, 343, 359], "858": [342, 343, 359], "4054": [342, 356, 359], "coding_ppo": [342, 345, 359], "993": [342, 345, 359], "torchrl_env": [342, 359, 361], "391": [342, 356, 359, 361], "3786": [342, 359], "pretrained_model": [342, 357, 359], "54": [342, 344, 356, 357, 359], "039": [342, 357, 359], "3337": [342, 359], "multi_task": [342, 354, 359], "48": [342, 344, 354, 356, 357, 359], "822": [342, 354, 356, 359], "992": [342, 344, 348, 356, 359], "43": [342, 344, 346, 347, 356, 357, 359], "204": [342, 347, 356, 359], "461": [342, 349, 356, 359], "361": [342, 352, 356, 359], "891": [342, 350, 359], "714": [342, 351, 359], "author": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 358, 361], "vincent": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 358, 361], "moen": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 358, 361], "assembl": 343, "focus": [343, 349], "straightforward": [343, 344, 347, 348, 349, 350, 358], "maxim": [343, 349, 356], "transpar": [343, 346], "understood": 343, "illustr": [343, 344, 348, 358], "bash": 343, "is_fork": [343, 344, 345, 346, 355, 357], "get_start_method": [343, 344, 345, 346, 355, 357], "is_avail": [343, 344, 345, 346, 355, 357], "collector_devic": 343, "loss_dict": 343, "oblivi": [343, 345, 358], "elementari": 343, "didact": 343, "dilut": 343, "pessimist": [343, 344, 345], "target_actor_network_param": 343, "actor_in_kei": 343, "actor_crit": 343, "noth": [343, 345], "compromis": 343, "hp": 343, "hasattr": 343, "_value_estim": 343, "elif": [343, 344], "notimplementederror": 343, "unknown": 343, "ifgg": 343, "_loss_actor": 343, "td_copi": 343, "actor_network_param": 343, "value_network_param": 343, "_loss_valu": 343, "pred_val": 343, "target_value_network_param": 343, "glue": 343, "_forward": 343, "ndimens": 343, "remaind": 343, "focu": [343, 344, 345, 348, 349, 350], "env_librari": 343, "env_task": 343, "env_arg": [343, 344], "friendli": 343, "torchr": 343, "rescal": 343, "presum": 343, "make_transformed_env": 343, "reward_sc": 343, "marker": 343, "env_per_collector": 343, "transform_state_dict": 343, "make_t_env": 343, "cheat": 343, "10m": 343, "cautiou": 343, "magnitud": 343, "thousand": [343, 346], "get_env_stat": 343, "proof_env": 343, "5000": [343, 344, 345, 352], "recal": [343, 345, 358], "ddpgmlpactor": 343, "ddpgmlpqnet": 343, "materi": 343, "ornsteinuhlenbeckprocesswrapp": [343, 348], "make_ddpg_actor": 343, "q_net": 343, "tight": 343, "decoupl": [343, 349], "10_000": [343, 345], "traj_len": [343, 346], "make_record": 343, "recorder_obj": 343, "flavor": 343, "circular": 343, "buffer_s": [343, 344], "random_crop_len": 343, "prb": 343, "buffer_scratch_dir": 343, "temporari": 343, "25": [343, 344, 356], "dataflow": 343, "ceil_div": 343, "utd": [343, 346], "update_to_data": 343, "realiz": 343, "_must_": 343, "001": [343, 356], "outdat": 343, "trick": [343, 344], "despit": 343, "adam": [343, 344, 345, 346, 349, 352, 355, 356], "optimizer_actor": 343, "lr": [343, 344, 345, 346, 352, 355, 356], "weight_decai": [343, 344], "optimizer_valu": 343, "total_collection_step": 343, "pretti": [343, 347, 351, 358], "rewards_ev": 343, "collected_fram": 343, "r0": 343, "numel": [343, 345, 346, 352, 357, 358], "current_fram": 343, "sampled_tensordict": 343, "gn1": 343, "clip_grad_norm_": [343, 345, 355, 356], "gn2": 343, "gn": [343, 356], "td_record": 343, "rn": 343, "set_descript": [343, 345, 346, 355, 356], "2f": 343, "traceback": [343, 358, 361], "1126": 343, "1527": [343, 358, 361], "_wrapped_call_impl": [343, 358, 361], "_call_impl": [343, 358, 361], "1577": 343, "forward_cal": [343, 358, 361], "_contextlib": [343, 358, 361], "126": [343, 356, 358, 361], "decorate_context": [343, 358, 361], "364": [343, 356], "342": [343, 356], "1177": 343, "new_func": 343, "_self": [343, 361], "648": 343, "_to_modul": 343, "407": [343, 356], "__dict__": 343, "_modul": 343, "plot": [343, 345, 346, 355, 356], "mention": [343, 346, 358, 361], "matplotlib": [343, 345, 346, 355, 356, 358, 361], "pyplot": [343, 345, 346, 355, 356, 358, 361], "plt": [343, 345, 346, 355, 356, 358, 361], "zip": [343, 353], "legend": 343, "xlabel": [343, 346, 355, 356], "ylabel": [343, 355], "tight_layout": 343, "concret": [343, 345], "takeawai": [343, 344], "distpatch": 343, "4055": 343, "jupyt": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "ipynb": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361], "sphinx": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361], "customis": [344, 355], "road": 344, "aspect": [344, 349], "highest": [344, 348], "prerequisit": [344, 346], "familiar": [344, 355, 361], "lookup": 344, "amort": [344, 345], "cart": 344, "pole": 344, "un": 344, "actuat": 344, "frictionless": 344, "duelingcnndqnet": 344, "egreedymodul": [344, 346, 348, 352], "is_notebook": 344, "shell": 344, "get_ipython": 344, "__class__": 344, "zmqinteractiveshel": 344, "qtconsol": 344, "terminalinteractiveshel": 344, "ipython": [344, 355, 356], "nameerror": 344, "umbrella": 344, "misplac": 344, "misus": 344, "orchestr": [344, 349, 351], "five": 344, "64x64": 344, "motion": [344, 356], "obs_norm_sd": 344, "simpler": [344, 347], "get_norm_stat": 344, "test_env": 344, "make_model": 344, "dummy_env": 344, "init_bia": 344, "exploration_modul": [344, 346, 348, 352], "eps_greedy_v": 344, "eps_greedy_val_env": 344, "actor_explor": 344, "get_replay_buff": 344, "n_optim": [344, 349, 350], "themselv": 344, "parametriz": 344, "simplic": [344, 345, 350, 357, 358], "get_collector": 344, "cl": 344, "data_collector": 344, "bunch": 344, "power": 344, "ubiquit": [344, 347], "get_loss_modul": 344, "target_updat": 344, "995": [344, 356], "variat": 344, "2e": [344, 356], "wd": 344, "upd": 344, "harder": [344, 360], "5_000": 344, "500000": 344, "100000": 344, "005": 344, "mandatori": [344, 345, 355, 356], "fairer": 344, "budget": 344, "dqn_exp_": 344, "uuid1": [344, 361], "9895": 344, "0737": 344, "registr": 344, "cumbersom": 344, "buffer_hook": 344, "weight_updat": 344, "aliv": 344, "total_reward": 344, "07": [344, 355, 356], "34it": [344, 356], "3688": [344, 356], "9434": 344, "90it": 344, "96": [344, 346, 356, 357], "51": [344, 356, 357], "81it": 344, "3353": [344, 356], "87it": [344, 346], "3991": 344, "17it": [344, 346, 356], "192": [344, 356], "09": [344, 356, 357], "27it": [344, 356], "224": [344, 356], "52": [344, 356, 357], "83it": 344, "60": [344, 345, 355, 356, 357, 358, 360], "63it": 344, "4082": [344, 356], "288": [344, 356], "67": [344, 354, 356], "86it": 344, "3292": 344, "73": [344, 356, 357], "60it": 344, "3869": 344, "352": [344, 356], "78": [344, 356, 357], "97it": 344, "384": [344, 356], "85": [344, 356, 358], "01it": 344, "416": [344, 356], "67it": [344, 356], "448": [344, 356], "22it": 344, "480": [344, 356, 357], "89": [344, 356], "49": [344, 355, 356, 357], "90": [344, 345, 355, 356], "3808": 344, "544": [344, 356], "92": [344, 356, 357], "77it": 344, "3475": 344, "576": [344, 356], "47": [344, 345, 356], "93": [344, 356], "66it": 344, "608": [344, 356], "26it": [344, 356], "640": 344, "85it": 344, "4295": [344, 356], "672": 344, "02it": 344, "3748": 344, "704": 344, "91": [344, 356], "20it": [344, 346, 356], "3566": 344, "768": 344, "68it": 344, "800": 344, "18it": [344, 356], "832": 344, "45": [344, 346, 356, 357], "3778": 344, "864": 344, "57it": 344, "896": 344, "62it": 344, "928": 344, "99it": 344, "960": 344, "42it": [344, 356], "37it": [344, 356], "1056": 344, "1088": 344, "93it": 344, "1120": 344, "65it": [344, 345], "1152": 344, "43it": [344, 356], "1184": [344, 361], "73it": [344, 345, 356], "1216": 344, "3596": 344, "1248": 344, "1280": 344, "94it": [344, 345], "1344": 344, "15it": [344, 356], "1376": 344, "1408": 344, "1440": 344, "54it": [344, 345, 356], "1472": 344, "29it": [344, 356], "1504": 344, "80it": [344, 356], "1536": [344, 358, 361], "08it": [344, 356], "1568": 344, "1600": 344, "39it": [344, 356], "4173": 344, "1632": 344, "1696": 344, "96it": [344, 356], "1728": 344, "91it": 344, "1760": 344, "1792": 344, "50it": [344, 356], "1824": 344, "61it": 344, "1856": 344, "95it": [344, 356], "1888": 344, "79it": 344, "1920": 344, "1952": 344, "21it": 344, "4051": 344, "1984": 344, "78it": [344, 356], "2016": 344, "06it": [344, 345], "2048": [344, 357], "36it": [344, 356], "3960": 344, "2080": 344, "2112": [344, 356], "2144": 344, "2176": 344, "2208": 344, "2240": 344, "25it": 344, "2272": 344, "53it": 344, "69it": 344, "2336": 344, "97": [344, 356], "2368": 344, "41it": [344, 356], "2400": 344, "92it": 344, "2432": 344, "70it": 344, "2464": 344, "2496": 344, "2528": [344, 356], "2560": 344, "23it": [344, 345, 356], "2624": 344, "4021": 344, "53": [344, 356, 357], "2656": [344, 356], "74it": 344, "2688": 344, "2720": [344, 356], "2752": 344, "56": [344, 355, 356], "2784": 344, "05it": 344, "2816": 344, "57": [344, 355, 356, 357], "2848": 344, "76it": [344, 356], "2880": 344, "04it": 344, "2912": 344, "59": [344, 346, 356, 357], "2944": [344, 356], "2976": [344, 356], "19it": 344, "28it": [344, 356], "61": [344, 356, 357], "3040": 344, "3072": 344, "62": [344, 356, 357], "3104": 344, "14it": [344, 356], "63": [344, 356, 357], "3136": 344, "3168": 344, "35it": [344, 356], "3200": 344, "24it": [344, 356], "65": [344, 356, 357, 358], "3232": [344, 356], "0909": 344, "3264": 344, "66": [344, 346, 356, 357], "3296": 344, "3328": 344, "3360": 344, "00it": [344, 346, 356], "68": [344, 356, 357], "3392": 344, "3424": 344, "69": [344, 356], "3456": [344, 356], "70": [344, 345, 355, 356, 357], "3488": 344, "72": [344, 356, 357], "3520": 344, "77": [344, 356, 358], "71": [344, 356, 357], "3552": 344, "79": [344, 356, 357], "3584": 344, "3616": 344, "3648": 344, "74": [344, 356, 357], "3680": 344, "89it": 344, "3712": 344, "3744": 344, "98it": [344, 356], "76": [344, 356, 357], "3776": 344, "3840": 344, "3872": 344, "71it": 344, "3904": 344, "45it": [344, 356], "3936": 344, "3968": 344, "4000": [344, 345], "55it": 344, "4032": 344, "72it": [344, 356], "4064": 344, "82": [344, 356], "4096": 344, "83": [344, 356, 357], "4128": [344, 356], "4160": 344, "4192": 344, "47it": [344, 356], "4224": 344, "44it": [344, 356], "4256": [344, 356], "30it": [344, 356], "4288": [344, 356], "4320": 344, "4352": 344, "4384": 344, "4416": 344, "4448": 344, "4480": 344, "4512": 344, "4544": 344, "64it": [344, 356], "4576": 344, "4608": 344, "82it": [344, 345], "4640": 344, "4672": [344, 356], "4704": 344, "4736": 344, "4768": 344, "4800": [344, 356], "4832": 344, "4864": 344, "4896": 344, "4928": 344, "4960": 344, "13it": [344, 356], "4992": 344, "5024it": 344, "print_csv_files_in_fold": 344, "folder_path": 344, "csv_file": 344, "output_str": 344, "dirpath": 344, "endswith": 344, "strip": 344, "tmp": [344, 358], "tmp5saf0wch": 344, "dqn_exp_4d85e7f0": 344, "e5c9": 344, "11ee": 344, "b6d9": 344, "0242ac110002": 344, "38084372878074646": 344, "42945271730422974": 344, "39912936091423035": 344, "39597463607788086": 344, "40213119983673096": 344, "24700170755386353": 344, "2665286362171173": 344, "18117977678775787": 344, "33343908190727234": 344, "32720568776130676": 344, "38536861538887024": 344, "250482439994812": 344, "4022514224052429": 344, "33235251903533936": 344, "grad_norm_0": 344, "5261435508728027": 344, "4899020195007324": 344, "299511432647705": 344, "058140754699707": 344, "204347610473633": 344, "8998782634735107": 344, "459251880645752": 344, "809017181396484": 344, "313878536224365": 344, "10000000894069672": 344, "090909004211426": 344, "qvaluenetwork": 344, "worst": 344, "accuraci": 344, "fanci": [344, 350], "talk": 345, "repetit": [345, 347, 350], "six": 345, "sophist": [345, 355], "invent": 345, "overview": [345, 349, 355, 360], "theta_k": 345, "pi_": 345, "exceed": 345, "discourag": [345, 356], "indispens": 345, "analyz": 345, "lingua": 345, "franca": 345, "defaultdict": [345, 356], "3e": [345, 346, 355], "max_grad_norm": [345, 355], "sub_batch_s": 345, "num_epoch": [345, 355], "entropy_ep": [345, 355], "interchang": [345, 347, 351, 357, 358], "charact": 345, "inverteddoublependulum": 345, "transmit": 345, "stai": 345, "supplementari": [345, 361], "told": 345, "confid": [345, 355], "ran": 345, "f_": 345, "mu_": 345, "difficulti": [345, 361], "d_ob": 345, "d_action": 345, "policy_modul": [345, 355], "That": 345, "said": 345, "briefli": [345, 355], "refil": [345, 355], "conveni": [345, 355, 356, 358], "easiest": [345, 349, 355], "mathemat": [345, 355], "tradeoff": [345, 355], "advantage_modul": 345, "lr_schedul": [345, 356], "cosineannealinglr": [345, 356], "eval_str": 345, "tensordict_data": [345, 355], "data_view": [345, 355], "subdata": [345, 355], "cum_reward_str": 345, "4f": [345, 346, 356], "stepcount_str": 345, "param_group": 345, "lr_str": 345, "eval_rollout": 345, "nice": [345, 347, 350], "479": [345, 356], "6646": 345, "0977": [345, 356], "0003": [345, 346, 356], "481": [345, 356], "1285": 345, "3000": 345, "485": [345, 356], "33it": [345, 356], "1677": 345, "488": [345, 356], "75it": 345, "2014": 345, "0002": [345, 356], "490": [345, 356], "2050": 345, "6000": 345, "492": [345, 356], "2274": [345, 356], "7000": 345, "493": [345, 356], "2384": 345, "8000": 345, "482": [345, 356], "2379": 345, "9000": 345, "2490": 345, "491": [345, 356], "2615": 345, "cap": [345, 358], "figsiz": [345, 356], "subplot": [345, 356, 361], "titl": [345, 346, 355, 356], "bit": [345, 346, 347, 355, 358], "84x84": 346, "accessori": 346, "stamp": 346, "assist": 346, "emb": 346, "n_cell": 346, "customiz": 346, "wouldn": 346, "make_tensordict_prim": 346, "qval": 346, "stoch_polici": 346, "opportun": 346, "uniniti": 346, "again": [346, 347, 348, 350, 355, 357, 358, 361], "redund": 346, "strongli": 346, "sake": [346, 357, 358], "20_000": [346, 356], "longest": 346, "npai": 346, "action_spread": 346, "123": [346, 356], "0005": 346, "150": [346, 356], "1918": 346, "topic": [347, 348, 349], "straight": 347, "backtrack": 347, "encapsul": [347, 348, 349], "reset_with_act": 347, "6190": 347, "tp": 347, "stepped_data": 347, "tediou": 347, "spatial": 347, "useless": 347, "policyless": 347, "appreci": 347, "monitor": 347, "examin": 347, "tackl": 348, "delv": 348, "bypass": 348, "extractor": 348, "palliat": 348, "additivegaussianwrapp": 348, "had": [348, 350], "exploration_polici": 348, "greedili": 348, "innov": [348, 349], "rollout_explor": 348, "sole": 349, "tradit": 349, "supervis": [349, 350, 358, 361], "n_collect": 349, "get_next_batch": 349, "novel": 349, "ddpg_loss": 349, "total_loss": 349, "prove": 349, "reliev": 349, "concern": 349, "accustom": 350, "surprisingli": 350, "fundament": 350, "augment": [350, 352, 358], "art": 350, "pseudo": [350, 356], "multirpocess": 350, "countless": 350, "yourself": [350, 355], "lightweight": 351, "portabl": 351, "everywher": 351, "hyperapamet": 351, "my_exp": 351, "log_scalar": 351, "elaps": 351, "my_scalar": 351, "saw": [351, 356, 358], "my_video": 351, "record_env": [351, 352], "uncom": 351, "lesson": 352, "voluntarili": 352, "refresh": [352, 355], "value_mlp": 352, "100_000": 352, "init_rand_step": 352, "training_loop": 352, "video_record": 352, "arbitrarili": 352, "total_count": 352, "total_episod": 352, "t0": 352, "t1": 352, "conclud": [352, 357], "tutorials_python": 353, "tutorials_jupyt": 353, "env1_obs_kei": 354, "observation_stand": 354, "env2_obs_kei": 354, "observation_walk": 354, "tdreset1": 354, "tdreset2": 354, "policy_common": 354, "policy_stand": 354, "policy_walk": 354, "But": 354, "env1_mak": 354, "env2_mak": 354, "_single_task": 354, "td_rollout": 354, "matteo": 355, "bettini": 355, "benchmarl": 355, "maddpg": 355, "lidar": 355, "sensor": 355, "collis": 355, "tie": 355, "mappo": 355, "ippo": 355, "phase": [355, 358], "mathbf": 355, "pi": [355, 356], "fed": [355, 358], "literatur": 355, "overcom": 355, "stationari": 355, "concurr": 355, "analys": 355, "gui": 355, "visualis": 355, "multiagentmlp": 355, "vmas_devic": 355, "6_000": 355, "team": [355, 360], "n_iter": 355, "minibatch_s": 355, "generalis": 355, "simd": 355, "parallelis": 355, "warp": 355, "todai": 355, "circl": 355, "surround": 355, "dot": [355, 356], "collid": 355, "drag": 355, "elast": 355, "acceler": 355, "penalis": 355, "num_vmas_env": 355, "scenario_nam": 355, "four": [355, 356], "environmnet": 355, "final_rew": 355, "agent_collis": 355, "stress": 355, "paramount": 355, "n_rollout_step": 355, "evolut": 355, "utilis": 355, "n_actions_per_ag": 355, "n_obs_per_ag": 355, "share_parameters_polici": 355, "policy_net": 355, "denot": 355, "carefulli": [355, 361], "grant": 355, "converg": 355, "cooper": 355, "share_parameters_crit": 355, "critic_net": 355, "fantast": 355, "minibatch": 355, "desc": 355, "episode_reward_mean": 355, "episode_reward_mean_list": 355, "get_item_shap": 355, "critic_network_param": 355, "target_critic_network_param": 355, "4579917788505554": 355, "39507877826690674": 355, "2842429876327515": 355, "5311583280563354": 355, "0912442207336426": 355, "4949307441711426": 355, "478776454925537": 355, "7761335372924805": 355, "738668441772461": 355, "9966132640838623": 355, "xvfb": 355, "pyvirtualdisplai": 355, "1400": [355, 356], "900": 355, "pil": 355, "rendering_callback": 355, "fromarrai": 355, "rgb_arrai": [355, 356], "gif": 355, "save_al": 355, "append_imag": 355, "profici": 355, "master": 355, "freeli": 356, "touch": 356, "undertaken": 356, "broader": 356, "wider": 356, "algebra": 356, "acquaint": 356, "avenu": 356, "_apply_to_composit": 356, "default_x": 356, "default_i": 356, "torqu": 356, "upward": 356, "angular": 356, "sin": 356, "rad": 356, "sec": 356, "gravit": 356, "angl": 356, "deleg": 356, "new_th": 356, "new_thdot": 356, "thdot": 356, "g_forc": 356, "max_torqu": 356, "angle_norm": 356, "max_spe": 356, "albeit": 356, "gen_param": 356, "high_th": 356, "high_thdot": 356, "low_th": 356, "low_thdot": 356, "trivial": 356, "shortcut": [356, 361], "irrelev": 356, "_make_spec": 356, "td_param": 356, "render_mod": 356, "render_fp": 356, "random_": 356, "_make_step": 356, "staticmethod": 356, "showcas": 356, "skeleton": 356, "_apply_transform": [356, 361], "_inv_apply_transform": [356, 361], "subset": [356, 357], "sine": 356, "cosin": 356, "sintransform": 356, "tensordict_reset": 356, "costransform": 356, "t_sin": 356, "t_co": 356, "cat_transform": 356, "simple_rollout": 356, "unexplor": 356, "init_td": 356, "traj_return": 356, "last_reward": 356, "is_ipython": 356, "inlin": 356, "get_backend": 356, "ion": 356, "gcf": 356, "clear_output": 356, "625": 356, "0748": 356, "519": 356, "0499": 356, "4472": 356, "073": 356, "0685": 356, "0408": 356, "552": 356, "5154": 356, "9086": 356, "9385": 356, "155": 356, "2568": 356, "4981": 356, "223": 356, "8929": 356, "4491": 356, "581": 356, "3233": 356, "0664": 356, "596": 356, "1021": 356, "5263": 356, "9579": 356, "5807": 356, "8075": 356, "212": 356, "2009": 356, "5525": 356, "914": 356, "32it": 356, "2894": 356, "0115": 356, "1845": 356, "1830": 356, "4858": 356, "233": 356, "2863": 356, "0297": 356, "464": 356, "4617": 356, "5997": 356, "904": 356, "1647": 356, "0777": 356, "901": 356, "4709": 356, "6813": 356, "8317": 356, "3221": 356, "5554": 356, "276": 356, "701": 356, "8570": 356, "6656": 356, "463": 356, "31it": 356, "7779": 356, "6911": 356, "875": 356, "0796": 356, "7082": 356, "308": 356, "0421": 356, "1496": 356, "5037": 356, "1755": 356, "5029": 356, "9454": 356, "665": 356, "9330": 356, "2118": 356, "444": 356, "0995": 356, "6294": 356, "3146": 356, "2909": 356, "9720": 356, "1298": 356, "9923": 356, "0345": 356, "3438": 356, "424": 356, "6953": 356, "5233": 356, "411": 356, "8011": 356, "5329": 356, "2677": 356, "6969": 356, "7010": 356, "376": 356, "9352": 356, "7707": 356, "6178": 356, "5646": 356, "348": 356, "7304": 356, "9407": 356, "942": 356, "3882": 356, "7604": 356, "3507": 356, "8928": 356, "258": 356, "6978": 356, "4641": 356, "549": 356, "6047": 356, "5005": 356, "4136": 356, "2993": 356, "3222": 356, "4046": 356, "7314": 356, "275": 356, "6331": 356, "9318": 356, "961": 356, "8331": 356, "1604": 356, "4099": 356, "4761": 356, "125": 356, "4262": 356, "6363": 356, "382": 356, "3593": 356, "7377": 356, "2847": 356, "3443": 356, "867": 356, "3592": 356, "4760": 356, "441": 356, "9950": 356, "8021": 356, "3528": 356, "1214": 356, "708": 356, "4023": 356, "3583": 356, "041": 356, "3801": 356, "0310": 356, "120": 356, "4244": 356, "2039": 356, "4850": 356, "8748": 356, "706": 356, "4897": 356, "9210": 356, "8964": 356, "0832": 356, "3934": 356, "456": 356, "8971": 356, "2933": 356, "3377": 356, "6996": 356, "8916": 356, "098": 356, "2660": 356, "9110": 356, "4503": 356, "6956": 356, "9172": 356, "4026": 356, "946": 356, "9229": 356, "5205": 356, "294": 356, "8872": 356, "6637": 356, "019": 356, "38it": 356, "9281": 356, "2082": 356, "724": 356, "8561": 356, "6574": 356, "357": 356, "4138": 356, "5230": 356, "385": 356, "4065": 356, "5642": 356, "921": 356, "9786": 356, "4129": 356, "5831": 356, "266": 356, "7723": 356, "4152": 356, "0898": 356, "389": 356, "5155": 356, "5376": 356, "5616": 356, "4094": 356, "283": 356, "5333": 356, "4803": 356, "895": 356, "6566": 356, "2588": 356, "662": 356, "4732": 356, "7503": 356, "068": 356, "0714": 356, "3370": 356, "059": 356, "8612": 356, "1915": 356, "3855": 356, "0349": 356, "9644": 356, "4538": 356, "445": 356, "0392": 356, "4080": 356, "1648": 356, "9599": 356, "143": 356, "4284": 356, "5946": 356, "2590": 356, "9181": 356, "4621": 356, "9075": 356, "674": 356, "1772": 356, "9444": 356, "351": 356, "9391": 356, "5595": 356, "8673": 356, "6240": 356, "5919": 356, "1071": 356, "9127": 356, "251": 356, "9799": 356, "3131": 356, "9612": 356, "9705": 356, "8741": 356, "2230": 356, "0972": 356, "0337": 356, "0350": 356, "0654": 356, "102": 356, "2441": 356, "4596": 356, "362": 356, "103": 356, "4362": 356, "171": 356, "104": 356, "4041": 356, "6907": 356, "105": 356, "4664": 356, "2760": 356, "0299": 356, "9712": 356, "349": 356, "107": 356, "3332": 356, "4479": 356, "772": 356, "108": 356, "4357": 356, "9591": 356, "543": 356, "109": [356, 358], "6216": 356, "1353": 356, "692": 356, "110": 356, "6261": 356, "7086": 356, "496": 356, "111": 356, "7758": 356, "9818": 356, "112": 356, "46it": 356, "7772": 356, "5055": 356, "113": 356, "5840": 356, "3180": 356, "2083": 356, "115": 356, "48it": 356, "5275": 356, "6873": 356, "116": 356, "4107": 356, "1624": 356, "117": 356, "6372": 356, "2571": 356, "118": 356, "4039": 356, "4428": 356, "119": 356, "4728": 356, "5628": 356, "6767": 356, "2466": 356, "522": 356, "121": [356, 361], "5873": 356, "5072": 356, "07it": 356, "6548": 356, "3766": 356, "5134": 356, "1955": 356, "124": 356, "11it": 356, "2481": 356, "0591": 356, "4500": 356, "3368": 356, "9708": 356, "7059": 356, "127": 356, "3031": 356, "2534": 356, "843": 356, "12it": 356, "3327": 356, "6193": 356, "129": 356, "4831": 356, "1172": 356, "2593": 356, "4219": 356, "962": 356, "8380": 356, "899": 356, "132": 356, "2721": 356, "9048": 356, "166": 356, "133": 356, "2419": 356, "5248": 356, "2139": 356, "4278": 356, "135": 356, "0690": 356, "5140": 356, "136": 356, "1140": 356, "7402": 356, "137": 356, "5356": 356, "1636": 356, "138": 356, "0671": 356, "8798": 356, "139": 356, "8918": 356, "3298": 356, "307": 356, "140": 356, "49it": 356, "1779": 356, "141": 356, "1771": 356, "3624": 356, "936": 356, "142": 356, "1683": 356, "4810": 356, "9373": 356, "4435": 356, "144": 356, "4396": 356, "8092": 356, "145": [356, 361], "2572": 356, "146": 356, "4212": 356, "0260": 356, "147": 356, "0939": 356, "6478": 356, "605": 356, "148": 356, "6606": 356, "7289": 356, "149": 356, "9300": 356, "7193": 356, "563": 356, "1166": 356, "8514": 356, "151": 356, "9108": 356, "0672": 356, "292": 356, "152": 356, "8591": 356, "3768": 356, "153": 356, "9976": 356, "154": 356, "0576": 356, "0067": 356, "935": 356, "4199": 356, "1722": 356, "156": 356, "8310": 356, "3466": 356, "157": 356, "8631": 356, "2492": 356, "158": 356, "8763": 356, "1277": 356, "159": [356, 358], "5562": 356, "7446": 356, "1082": 356, "9830": 356, "161": 356, "0946": 356, "5229": 356, "162": 356, "4574": 356, "6900": 356, "163": [356, 357], "2229": 356, "0318": 356, "164": 356, "0543": 356, "0817": 356, "761": 356, "165": 356, "2809": 356, "5118": 356, "366": 356, "1142": 356, "5635": 356, "167": 356, "1949": 356, "2327": 356, "982": 356, "168": 356, "0967": 356, "0387": 356, "457": 356, "169": 356, "0782": 356, "2150": 356, "170": 356, "5222": 356, "3725": 356, "9288": 356, "9837": 356, "1416": 356, "1099": 356, "173": 356, "8620": 356, "8475": 356, "174": 356, "1807": 356, "4375": 356, "175": 356, "1148": 356, "0645": 356, "2751": 356, "8313": 356, "177": 356, "9286": 356, "9770": 356, "178": 356, "5735": 356, "2837": 356, "179": 356, "2926": 356, "9489": 356, "180": 356, "1507": 356, "181": 356, "8724": 356, "3567": 356, "182": 356, "3574": 356, "6140": 356, "183": 356, "7895": 356, "2518": 356, "184": 356, "6146": 356, "185": [356, 358], "8776": 356, "7358": 356, "186": 356, "3722": 356, "8428": 356, "187": 356, "7955": 356, "188": 356, "0092": 356, "7106": 356, "829": 356, "189": 356, "2264": 356, "6919": 356, "190": 356, "1438": 356, "1362": 356, "191": 356, "0618": 356, "8217": 356, "9420": 356, "6765": 356, "193": 356, "7745": 356, "0709": 356, "194": [356, 358], "9478": 356, "6867": 356, "195": 356, "6507": 356, "6225": 356, "196": 356, "2244": 356, "2195": 356, "197": 356, "5385": 356, "9263": 356, "198": 356, "1878": 356, "2374": 356, "8054": 356, "3504": 356, "557": 356, "0766": 356, "201": 356, "2011": 356, "8393": 356, "202": 356, "0803": 356, "7815": 356, "203": 356, "8363": 356, "2460": 356, "8643": 356, "2191": 356, "593": 356, "205": [356, 361], "0773": 356, "1343": 356, "206": 356, "8657": 356, "207": 356, "9304": 356, "7584": 356, "208": 356, "8752": 356, "2307": 356, "209": 356, "5250": 356, "4869": 356, "7837": 356, "5762": 356, "211": 356, "6661": 356, "8600": 356, "2502": 356, "1752": 356, "3075": 356, "8871": 356, "214": 356, "9406": 356, "8090": 356, "215": 356, "6291": 356, "8923": 356, "876": 356, "216": 356, "9504": 356, "21e": 356, "217": 356, "7431": 356, "7880": 356, "218": 356, "4463": 356, "5432": 356, "219": 356, "3793": 356, "3313": 356, "220": 356, "8843": 356, "0369": 356, "065": 356, "221": 356, "4828": 356, "8391": 356, "222": 356, "6265": 356, "2913": 356, "947": 356, "5541": 356, "1252": 356, "7342": 356, "2396": 356, "225": 356, "5936": 356, "1924": 356, "226": 356, "9975": 356, "2045": 356, "227": 356, "8367": 356, "9540": 356, "228": [356, 358], "40it": 356, "7259": 356, "6743": 356, "229": 356, "4827": 356, "7528": 356, "230": 356, "7361": 356, "8756": 356, "231": 356, "7646": 356, "1116": 356, "232": 356, "5426": 356, "8385": 356, "5662": 356, "8585": 356, "234": 356, "8234": 356, "7930": 356, "235": 356, "2648": 356, "9309": 356, "236": 356, "6817": 356, "237": [356, 358], "0943": 356, "1533": 356, "238": 356, "3045": 356, "0483": 356, "239": 356, "6415": 356, "0201": 356, "241": 356, "4437": 356, "4365": 356, "242": 356, "0358": 356, "4943": 356, "243": 356, "1272": 356, "5003": 356, "1180": 356, "2637": 356, "245": 356, "7197": 356, "0873": 356, "246": 356, "2917": 356, "247": 356, "0160": 356, "0738": 356, "248": 356, "3689": 356, "0120": 356, "249": 356, "5570": 356, "0475": 356, "250": 356, "4423": 356, "2220": 356, "6803": 356, "252": 356, "1465": 356, "7214": 356, "253": 356, "8801": 356, "7034": 356, "254": 356, "9136": 356, "4076": 356, "7589": 356, "5013": 356, "8150": 356, "2241": 356, "257": 356, "0753": 356, "8081": 356, "1951": 356, "8314": 356, "259": 356, "0038": 356, "260": 356, "0889": 356, "4616": 356, "261": [356, 361], "0655": 356, "262": 356, "8333": 356, "9476": 356, "263": 356, "7554": 356, "3798": 356, "264": 356, "3717": 356, "3947": 356, "529": 356, "265": 356, "3060": 356, "6495": 356, "7467": 356, "8889": 356, "267": 356, "8457": 356, "591": 356, "7137": 356, "0536": 356, "771": 356, "269": 356, "1651": 356, "388": 356, "270": 356, "8246": 356, "5709": 356, "281": 356, "271": 356, "7502": 356, "0521": 356, "032": 356, "272": 356, "5475": 356, "7253": 356, "273": 356, "2856": 356, "7130": 356, "274": 356, "2778": 356, "4122": 356, "8368": 356, "1841": 356, "9622": 356, "1603": 356, "003e": 356, "277": 356, "0247": 356, "346": 356, "278": 356, "2238": 356, "6418": 356, "279": 356, "0626": 356, "2538": 356, "280": 356, "0149": 356, "7380": 356, "2167": 356, "8911": 356, "282": 356, "8725": 356, "1983": 356, "8142": 356, "3709": 356, "284": 356, "4989": 356, "285": 356, "6464": 356, "6210": 356, "286": 356, "9726": 356, "0820": 356, "287": 356, "6975": 356, "9091": 356, "4926": 356, "4791": 356, "0905": 356, "3500": 356, "290": 356, "2287": 356, "291": 356, "9918": 356, "5543": 356, "9245": 356, "6444": 356, "631": 356, "293": 356, "0448": 356, "4769": 356, "8566": 356, "7208": 356, "295": 356, "0966": 356, "296": 356, "5303": 356, "1537": 356, "023": 356, "297": 356, "2682": 356, "564": 356, "298": 356, "16it": 356, "4318": 356, "5063": 356, "299": 356, "52it": 356, "7475": 356, "4190": 356, "8186": 356, "5077": 356, "301": 356, "1883": 356, "5291": 356, "472": 356, "302": 356, "3998": 356, "303": 356, "3622": 356, "0930": 356, "626": 356, "304": 356, "9500": 356, "5664": 356, "305": 356, "5697": 356, "3024": 356, "306": 356, "3117": 356, "0052": 356, "006": 356, "0981": 356, "9312": 356, "3873": 356, "309": 356, "0411": 356, "2650": 356, "1656": 356, "0228": 356, "004": 356, "311": 356, "1196": 356, "2478": 356, "312": 356, "7353": 356, "0812": 356, "313": 356, "3022": 356, "758": 356, "314": 356, "1406": 356, "4626": 356, "315": 356, "2156": 356, "851": 356, "316": 356, "1953": 356, "3774": 356, "317": 356, "6385": 356, "9917": 356, "318": 356, "2764": 356, "905": 356, "319": 356, "6391": 356, "9317": 356, "9748": 356, "2679": 356, "321": 356, "8495": 356, "5125": 356, "8177": 356, "6602": 356, "323": 356, "0704": 356, "5776": 356, "324": 356, "9833": [356, 360], "1339": 356, "402": 356, "325": 356, "1238": 356, "326": 356, "9299": 356, "0227": 356, "327": 356, "7727": 356, "1607": 356, "336": 356, "328": 356, "3958": 356, "3223": 356, "763": 356, "329": 356, "4742": 356, "1797": 356, "330": 356, "0144": 356, "0085": 356, "791": 356, "331": 356, "8284": 356, "0428": 356, "332": 356, "7365": 356, "333": 356, "4566": 356, "0781": 356, "086": 356, "334": 356, "3355": 356, "0230": 356, "335": 356, "9346": 356, "0423": 356, "076": 356, "3711": 356, "1335": 356, "6855": 356, "337": 356, "0304": 356, "0023": 356, "8459": 356, "338": 356, "9998": 356, "4399": 356, "339": 356, "2303": 356, "1346": 356, "340": 356, "2915": 356, "7116": 356, "341": 356, "5560": 356, "0487": 356, "5119": 356, "061": 356, "343": 356, "3305": 356, "3705": 356, "957": 356, "344": 356, "6068": 356, "345": 356, "5731": 356, "3897": 356, "0376": 356, "347": 356, "0434": 356, "012": 356, "1300": 356, "1215": 356, "0968": 356, "0885": 356, "350": 356, "1348": 356, "0073": 356, "5052": 356, "4184": 356, "2817": 356, "8887": 356, "353": 356, "4779": 356, "1009": 356, "354": 356, "0604": 356, "599": 356, "355": 356, "4486": 356, "1176": 356, "656": 356, "356": 356, "2436": 356, "0668": 356, "8849": 356, "0012": 356, "358": 356, "7511": 356, "8804": 356, "359": 356, "8870": 356, "6728": 356, "360": 356, "8841": 356, "5508": 356, "5242": 356, "0013": 356, "6185": 356, "363": 356, "1378": 356, "0204": 356, "0355": 356, "685": 356, "365": 356, "09it": 356, "4884": 356, "0231": 356, "0014": 356, "6793": 356, "367": 356, "9834": 356, "863": 356, "368": 356, "6709": 356, "462": 356, "369": 356, "5199": 356, "9790": 356, "370": 356, "9401": 356, "7802": 356, "371": 356, "6723": 356, "372": 356, "2678": 356, "6201": 356, "373": 356, "2184": 356, "7385": 356, "374": 356, "6344": 356, "617": 356, "375": 356, "9945": 356, "0772": 356, "567": 356, "7576": 356, "0398": 356, "377": 356, "3396": 356, "0022": 356, "094": 356, "378": 356, "3073": 356, "4018": 356, "379": 356, "1869": 356, "380": 356, "0481": 356, "1117": 356, "381": 356, "6823": 356, "981": 356, "8305": 356, "0210": 356, "383": 356, "4908": 356, "0272": 356, "538": 356, "3267": 356, "0111": 356, "7965": 356, "1796": 356, "0039": 356, "5396": 356, "386": 356, "3757": 356, "0490": 356, "387": 356, "1394": 356, "4187": 356, "2986": 356, "7954": 356, "1274": 356, "0063": 356, "813": 356, "390": 356, "8706": 356, "0114": 356, "6922": 356, "2423": 356, "392": 356, "9115": 356, "2602": 356, "393": 356, "2449": 356, "0783": 356, "394": 356, "0631": 356, "0057": 356, "7444": 356, "395": 356, "3339": 356, "0167": 356, "396": 356, "4806": 356, "397": 356, "4171": 356, "067": 356, "398": 356, "2618": 356, "5809": 356, "399": 356, "0054": 356, "3364": 356, "8733": 356, "0184": 356, "401": 356, "9137": 356, "0113": 356, "025": 356, "0386": 356, "0625": 356, "403": 356, "1332": 356, "0582": 356, "7816": 356, "404": 356, "8341": 356, "0941": 356, "854": 356, "405": 356, "8615": 356, "588": 356, "406": 356, "3849": 356, "008": 356, "9395": 356, "0765": 356, "408": 356, "2685": 356, "2235": 356, "688": 356, "409": 356, "3052": 356, "4249": 356, "410": 356, "6806": 356, "6383": 356, "3721": 356, "9981": 356, "412": 356, "1862": 356, "413": 356, "9811": 356, "0171": 356, "013": 356, "414": 356, "0252": 356, "0049": 356, "6205": 356, "415": 356, "1108": 356, "4921": 356, "9142": 356, "8130": 356, "417": 356, "1725": 356, "0036": 356, "3196": 356, "418": 356, "7795": 356, "0242": 356, "799": 356, "419": 356, "7737": 356, "0138": 356, "420": 356, "1462": 356, "0053": 356, "421": 356, "9226": 356, "6139": 356, "422": 356, "9889": 356, "0403": 356, "423": 356, "6194": 356, "0032": 356, "3989": 356, "0104": 356, "425": 356, "9960": 356, "0009": 356, "6009": 356, "426": 356, "2697": 356, "0914": 356, "427": 356, "1114": 356, "428": 356, "9862": 356, "1932": 356, "429": 356, "0637": 356, "0623": 356, "082": 356, "430": 356, "9906": 356, "2031": 356, "431": 356, "9948": 356, "0895": 356, "1970": 356, "0256": 356, "4231": 356, "0449": 356, "644": 356, "434": 356, "1039": 356, "1973": 356, "435": 356, "4561": 356, "1225": 356, "436": 356, "0211": 356, "2125": 356, "437": 356, "3866": 356, "0050": 356, "7202": 356, "438": 356, "6388": 356, "0072": 356, "439": 356, "1187": 356, "0015": 356, "5116": 356, "440": 356, "0432": 356, "0025": 356, "7809": 356, "1925": 356, "0103": 356, "442": 356, "9570": 356, "443": 356, "0871": 356, "5601": 356, "0165": 356, "0047": 356, "6061": 356, "2746": 356, "0027": 356, "7887": 356, "446": 356, "1835": 356, "0035": 356, "855": 356, "447": 356, "8420": 356, "548": 356, "2653": 356, "0126": 356, "9736": 356, "449": 356, "0594": 356, "0119": 356, "6196": 356, "450": 356, "4509": 356, "0373": 356, "451": 356, "0620": 356, "452": 356, "6898": 356, "3235": 356, "687": 356, "453": 356, "5879": 356, "454": 356, "8406": 356, "0694": 356, "455": 356, "8259": 356, "0235": 356, "8500": 356, "0024": 356, "458": 356, "2027": 356, "0894": 356, "459": 356, "5966": 356, "460": 356, "6942": 356, "0016": 356, "4254": 356, "6703": 356, "0145": 356, "8124": 356, "0218": 356, "9196": 356, "0188": 356, "8986": 356, "0884": 356, "0084": 356, "5624": 356, "465": 356, "8862": 356, "0006": 356, "5384": 356, "466": 356, "5837": 356, "8954": 356, "0101": 356, "6751": 356, "468": 356, "8063": 356, "0122": 356, "9635": 356, "469": 356, "0692": 356, "4216": 356, "470": 356, "1227": 356, "0586": 356, "162e": 356, "471": 356, "9690": 356, "4166": 356, "6324": 356, "473": 356, "0778": 356, "474": 356, "8548": 356, "0017": 356, "4408": 356, "475": 356, "8125": 356, "1515": 356, "476": 356, "2733": 356, "0044": 356, "2836": 356, "477": 356, "7497": 356, "7681": 356, "478": 356, "8547": 356, "0105": 356, "7212": 356, "9848": 356, "0019": 356, "6498": 356, "1987": 356, "0011": 356, "5473": 356, "8991": 356, "6091": 356, "9189": 356, "5771": 356, "483": 356, "6781": 356, "7542": 356, "484": 356, "5959": 356, "0064": 356, "2547": 356, "486": 356, "0636": 356, "547": 356, "487": 356, "0065": 356, "1694": 356, "0083": 356, "5759": 356, "489": 356, "0493": 356, "0021": 356, "7805": 356, "0950": 356, "497": 356, "9717": 356, "3672": 356, "0207": 356, "8266": 356, "5365": 356, "494": 356, "2623": 356, "5078": 356, "495": 356, "4545": 356, "09636": 356, "8754": 356, "0010": 356, "498": 356, "0031": 356, "8269": 356, "499": 356, "6642": 356, "2284": 356, "501": 356, "9130": 356, "0008": 356, "502": 356, "503": 356, "7624": 356, "0056": 356, "3858": 356, "504": 356, "0890": 356, "0042": 356, "505": 356, "7505": 356, "2157": 356, "506": 356, "8394": 356, "3413": 356, "507": 356, "9609": 356, "0041": 356, "6905": 356, "508": 356, "8467": 356, "4409": 356, "509": 356, "510": 356, "8128": 356, "3559": 356, "511": 356, "1479": 356, "0264": 356, "1589": 356, "566": 356, "513": 356, "2756": 356, "0046": 356, "5266": 356, "514": 356, "9873": 356, "0112": 356, "9314": 356, "515": 356, "3791": 356, "0721": 356, "516": 356, "4580": 356, "0758": 356, "6114": 356, "517": 356, "2431": 356, "518": 356, "1958": 356, "5553": 356, "8924": 356, "0097": 356, "520": 356, "3737": 356, "0234": 356, "521": 356, "9125": 356, "4623": 356, "3230": 356, "0589": 356, "3784": 356, "523": 356, "9482": 356, "0051": 356, "524": 356, "1979": 356, "0045": 356, "6401": 356, "525": 356, "1588": 356, "0048": 356, "6255": 356, "526": 356, "6084": 356, "3477": 356, "1475": 356, "0209": 356, "528": 356, "7611": 356, "1040": 356, "0099": 356, "0173": 356, "643": 356, "530": 356, "8189": 356, "4358": 356, "531": 356, "9897": 356, "532": 356, "1548": 356, "9751": 356, "533": 356, "6362": 356, "7495": 356, "534": 356, "1749": 356, "9513": 356, "535": 356, "7708": 356, "0371": 356, "536": 356, "2649": 356, "0437": 356, "537": 356, "5491": 356, "0276": 356, "6426": 356, "7294": 356, "078e": 356, "539": 356, "9928": 356, "540": 356, "7937": 356, "0124": 356, "9664": 356, "541": 356, "3342": 356, "542": 356, "2046": 356, "5496": 356, "0956": 356, "0059": 356, "545": 356, "9028": 356, "5843": 356, "546": 356, "0674": 356, "0178": 356, "797": 356, "2815": 356, "0599": 356, "1587": 356, "9276": 356, "8228": 356, "6164": 356, "551": 356, "6850": 356, "9167": 356, "3092": 356, "0670": 356, "9177": 356, "553": 356, "1599": 356, "0043": 356, "554": 356, "6367": 356, "555": 356, "3657": 356, "556": 356, "6694": 356, "2622": 356, "0372": 356, "4841": 356, "558": 356, "2707": 356, "757": 356, "559": 356, "2267": 356, "5415": 356, "560": 356, "4556": 356, "0163": 356, "561": 356, "1839": 356, "0809": 356, "6262": 356, "562": 356, "0278": 356, "1112": 356, "6155": 356, "565": 356, "1427": 356, "3582": 356, "624": 356, "7870": 356, "9490": 356, "0439": 356, "8796": 356, "568": 356, "8026": 356, "612": 356, "569": 356, "3147": 356, "8486": 356, "570": 356, "7917": 356, "0129": 356, "571": 356, "9553": 356, "0020": 356, "6871": 356, "572": 356, "3132": 356, "0159": 356, "8646": 356, "573": 356, "5320": 356, "0269": 356, "574": 356, "2955": 356, "0245": 356, "575": 356, "3347": 356, "0179": 356, "9718": 356, "1629": 356, "804": 356, "577": 356, "4164": 356, "0070": 356, "4335": 356, "578": 356, "579": 356, "3049": 356, "9063": 356, "580": 356, "8785": 356, "3295": 356, "5184": 356, "0546": 356, "582": 356, "4589": 356, "583": 356, "4697": 356, "2476": 356, "584": 356, "2397": 356, "585": 356, "4953": 356, "1775": 356, "586": 356, "2258": 356, "0110": 356, "7671": 356, "587": 356, "3981": 356, "8590": 356, "0007": 356, "589": 356, "9820": 356, "4221": 356, "590": 356, "1293": 356, "0116": 356, "868": 356, "1675": 356, "5931": 356, "592": 356, "2910": 356, "5219": 356, "2124": 356, "1730": 356, "737": 356, "594": 356, "2914": 356, "0206": 356, "595": 356, "0172": 356, "3982": 356, "0945": 356, "0121": 356, "4789": 356, "597": [356, 358], "3805": 356, "4074": 356, "598": 356, "3310": 356, "5065": 356, "6028": 356, "6316": 356, "6724": 356, "6523": 356, "601": 356, "0136": 356, "4298": 356, "602": 356, "3524": 356, "2629": 356, "603": 356, "2635": 356, "7839": 356, "604": 356, "6041": 356, "8027": 356, "4170": 356, "4675": 356, "606": 356, "3153": 356, "9316": 356, "607": 356, "0649": 356, "9722": 356, "7989": 356, "0329": 356, "609": 356, "1976": 356, "6852": 356, "610": 356, "4793": 356, "1255": 356, "611": 356, "4581": 356, "0394": 356, "2047": 356, "0326": 356, "613": 356, "8967": 356, "8619": 356, "614": 356, "5906": 356, "6491": 356, "615": 356, "6634": 356, "4394": 356, "616": 356, "0624": 356, "0061": 356, "5676": 356, "3259": 356, "0131": 356, "7733": 356, "618": 356, "7515": 356, "0189": 356, "5575": 356, "619": 356, "9313": 356, "6286": 356, "620": 356, "4325": 356, "7832": 356, "621": 356, "1134": 356, "622": 356, "4572": 356, "0500": 356, "5838": 356, "623": 356, "3818": 356, "8623": 356, "1253": 356, "6622": 356, "subject": 356, "explain": 357, "semat": 357, "r3mtransform": 357, "env_transform": [357, 361], "s3": 357, "amazonaw": 357, "r3m_50": 357, "374m": 357, "9m": 357, "6mb": 357, "4m": 357, "5mb": 357, "7mb": 357, "2m": 357, "1mb": 357, "0m": 357, "2mb": 357, "5m": 357, "4mb": 357, "3mb": 357, "9mb": 357, "115m": 357, "0mb": 357, "130m": 357, "138m": 357, "148m": 357, "162m": 357, "170m": 357, "179m": 357, "184m": 357, "195m": 357, "200m": 357, "212m": 357, "218m": 357, "229m": 357, "246m": 357, "262m": 357, "267m": 357, "279m": 357, "293m": 357, "299m": 357, "310m": 357, "316m": 357, "328m": 357, "342m": 357, "350m": 357, "8mb": 357, "360m": 357, "373m": 357, "wiser": 357, "_storag": [357, 358], "3338": 357, "pull": 358, "batteri": 358, "filesystem": 358, "buffer_list": 358, "lowest": 358, "medium": 358, "buffer_lazytensor": 358, "buffer_lazymemmap": 358, "tempdir": 358, "tmp52pecbyz": 358, "fullest": 358, "mydata": 358, "background": 358, "question": [358, 360], "_i": 358, "artifici": 358, "0893e": 358, "hamper": 358, "she": 358, "pars": 358, "proport": 358, "hist": 358, "barcontain": 358, "artist": 358, "reappear": 358, "unfold": 358, "problemat": 358, "4th": 358, "794": 358, "1104": 358, "ret": 358, "_sampl": 358, "decorated_fun": 358, "1144": 358, "_transform": 358, "976": 358, "2888": 358, "3013": 358, "rep": 358, "tensorlist": 358, "prioritizedslicesampl": 358, "tensordictmaxvaluewrit": 358, "4010": 358, "demo": 360, "icml": 360, "vmoen": 360, "fb": 360, "invest": 360, "platform": 360, "media": 360, "predominantli": 360, "tensordict1": 360, "tensordict2": 360, "tensordict_sampl": 360, "_sampler": 360, "_sum_tre": 360, "modulenotfounderror": 360, "06984967738389969": 360, "28791671991348267": 360, "noopresetenv": [360, 361], "6400": 360, "backbone_modul": 360, "params_expand": 360, "exec_sequ": 360, "tensordict_exp": 360, "base_modul": 360, "0137": 360, "1524": 360, "0641": 360, "viewbackward0": 360, "asstridedbackward0": 360, "8728": 360, "1334": 360, "3494": 360, "6887": 360, "6402": 360, "_safetanhbackward": 360, "1132": 360, "1762": 360, "3430": 360, "2668": 360, "2918": 360, "6239": 360, "roughli": 360, "tensordicts_prealloc": 360, "tensordicts_stack": 360, "tensordict_rollout": [360, 361], "disclaim": 360, "concatmodul": 360, "loss_td": 360, "year": 360, "roadmap": 360, "compris": 360, "contributor": 360, "curiou": 360, "nascent": 360, "unsupervis": 361, "unifi": 361, "_build_env": 361, "amidar": 361, "assault": 361, "1945": 361, "deserv": 361, "__episode__": 361, "__trajectory__": 361, "void": 361, "reproduct": 361, "tensordict_tprim": 361, "2503": 361, "_rollout_stop_earli": 361, "2542": 361, "1224": 361, "err": 361, "1198": 361, "_call_modul": 361, "1141": 361, "1449": 361, "imshow": 361, "wrapper1": 361, "wrapper2": 361, "obviou": 361, "truth": 361, "env0": 361, "env_transformed_bi": 361, "stanc": 361, "transformeddistribut": 361, "base_dist": 361, "concat": 361, "mofidi": 361, "transformedenviron": 361, "moderet": 361, "computation": 361, "legitim": 361, "incom": 361, "amongst": 361, "has_cuda": 361, "wor": 361, "convention": 361, "markovian": 361, "constain": 361, "bar_": 361, "get_someth": 361, "aargh": 361, "foo_list": 361, "parallen": 361, "particularili": 361, "evolv": 361, "steadi": 361, "approx": 361, "_extra_st": 361, "observation_ssq": 361, "observation_sum": 361, "dispach": 361, "absor": 361, "3787": 361}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "OneHotDiscreteTensorSpec"], [33, 0, 1, "", "PairwiseDataset"], [34, 0, 1, "", "PrioritizedReplayBuffer"], [35, 0, 1, "", "PromptData"], [36, 0, 1, "", "PromptTensorDictTokenizer"], [37, 0, 1, "", "ReplayBuffer"], [38, 0, 1, "", "RewardData"], [39, 0, 1, "", "RolloutFromModel"], [40, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [41, 0, 1, "", "TensorDictReplayBuffer"], [42, 0, 1, "", "TensorDictTokenizer"], [43, 0, 1, "", "TensorSpec"], [44, 0, 1, "", "TokenizedDatasetLoader"], [45, 0, 1, "", "UnboundedContinuousTensorSpec"], [46, 0, 1, "", "UnboundedDiscreteTensorSpec"], [47, 0, 1, "", "check_no_exclusive_keys"], [48, 0, 1, "", "consolidate_spec"], [49, 0, 1, "", "contains_lazy_spec"], [50, 0, 1, "", "create_infinite_iterator"], [60, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[33, 3, 1, "", "batch_size"], [33, 3, 1, "", "device"], [33, 1, 1, "", "from_dataset"], [33, 1, 1, "", "from_tensordict"], [33, 1, 1, "", "get"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "memmap"], [33, 1, 1, "", "memmap_"], [33, 1, 1, "", "memmap_like"], [33, 3, 1, "", "names"], [33, 1, 1, "", "set"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to_tensordict"], [33, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "dumps"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "loads"], [34, 1, 1, "", "sample"], [34, 3, 1, "", "sampler"], [34, 1, 1, "", "set_sampler"], [34, 1, 1, "", "set_storage"], [34, 1, 1, "", "set_writer"], [34, 3, 1, "", "storage"], [34, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[35, 3, 1, "", "batch_size"], [35, 3, 1, "", "device"], [35, 1, 1, "", "from_dataset"], [35, 1, 1, "", "from_tensordict"], [35, 1, 1, "", "get"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "memmap"], [35, 1, 1, "", "memmap_"], [35, 1, 1, "", "memmap_like"], [35, 3, 1, "", "names"], [35, 1, 1, "", "set"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to_tensordict"], [35, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 3, 1, "", "sampler"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"], [37, 3, 1, "", "storage"], [37, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[39, 1, 1, "", "create_rollout_td"], [39, 1, 1, "", "generate"], [39, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 3, 1, "", "sampler"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"], [40, 3, 1, "", "storage"], [40, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[44, 1, 1, "", "dataset_to_tensordict"], [44, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "AtariDQNExperienceReplay"], [52, 0, 1, "", "BaseDatasetExperienceReplay"], [53, 0, 1, "", "D4RLExperienceReplay"], [54, 0, 1, "", "GenDGRLExperienceReplay"], [55, 0, 1, "", "MinariExperienceReplay"], [56, 0, 1, "", "OpenMLExperienceReplay"], [57, 0, 1, "", "OpenXExperienceReplay"], [58, 0, 1, "", "RobosetExperienceReplay"], [59, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 3, 1, "", "data_path"], [51, 3, 1, "", "data_path_root"], [51, 1, 1, "", "delete"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "preprocess"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 3, 1, "", "data_path"], [52, 3, 1, "", "data_path_root"], [52, 1, 1, "", "delete"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "preprocess"], [52, 1, 1, "", "sample"], [52, 3, 1, "", "sampler"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 3, 1, "", "storage"], [52, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 3, 1, "", "data_path"], [53, 3, 1, "", "data_path_root"], [53, 1, 1, "", "delete"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "preprocess"], [53, 1, 1, "", "sample"], [53, 3, 1, "", "sampler"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 3, 1, "", "storage"], [53, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[61, 0, 1, "", "ImmutableDatasetWriter"], [62, 0, 1, "", "LazyMemmapStorage"], [63, 0, 1, "", "LazyTensorStorage"], [64, 0, 1, "", "ListStorage"], [65, 0, 1, "", "PrioritizedSampler"], [66, 0, 1, "", "PrioritizedSliceSampler"], [67, 0, 1, "", "RandomSampler"], [68, 0, 1, "", "ReplayBufferEnsemble"], [69, 0, 1, "", "RoundRobinWriter"], [70, 0, 1, "", "Sampler"], [71, 0, 1, "", "SamplerEnsemble"], [72, 0, 1, "", "SamplerWithoutReplacement"], [73, 0, 1, "", "SliceSampler"], [74, 0, 1, "", "SliceSamplerWithoutReplacement"], [75, 0, 1, "", "Storage"], [76, 0, 1, "", "StorageEnsemble"], [77, 0, 1, "", "TensorDictMaxValueWriter"], [78, 0, 1, "", "TensorDictRoundRobinWriter"], [79, 0, 1, "", "TensorStorage"], [80, 0, 1, "", "Writer"], [81, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[61, 1, 1, "", "add"], [61, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[66, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[69, 1, 1, "", "add"], [69, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[79, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.envs": [[82, 2, 1, "", "BraxEnv"], [83, 2, 1, "", "BraxWrapper"], [84, 2, 1, "", "DMControlEnv"], [85, 2, 1, "", "DMControlWrapper"], [86, 0, 1, "", "EnvBase"], [87, 0, 1, "", "EnvCreator"], [88, 0, 1, "", "EnvMetaData"], [89, 2, 1, "", "GymEnv"], [90, 0, 1, "", "GymLikeEnv"], [91, 2, 1, "", "GymWrapper"], [92, 2, 1, "", "HabitatEnv"], [93, 2, 1, "", "IsaacGymEnv"], [94, 2, 1, "", "IsaacGymWrapper"], [95, 2, 1, "", "JumanjiEnv"], [96, 2, 1, "", "JumanjiWrapper"], [97, 2, 1, "", "MOGymEnv"], [98, 2, 1, "", "MOGymWrapper"], [99, 2, 1, "", "MarlGroupMapType"], [100, 2, 1, "", "ModelBasedEnvBase"], [101, 2, 1, "", "MultiThreadedEnv"], [102, 2, 1, "", "MultiThreadedEnvWrapper"], [103, 2, 1, "", "OpenMLEnv"], [104, 0, 1, "", "ParallelEnv"], [105, 2, 1, "", "PettingZooEnv"], [106, 2, 1, "", "PettingZooWrapper"], [107, 2, 1, "", "RoboHiveEnv"], [108, 2, 1, "", "SMACv2Env"], [109, 2, 1, "", "SMACv2Wrapper"], [110, 0, 1, "", "SerialEnv"], [111, 2, 1, "", "VmasEnv"], [112, 2, 1, "", "VmasWrapper"], [113, 2, 1, "", "check_marl_grouping"], [114, 2, 1, "", "gym_backend"], [100, 1, 1, "", "rand_step"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "rollout"], [116, 2, 1, "", "set_gym_backend"], [100, 1, 1, "", "set_seed"], [100, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[86, 3, 1, "", "action_key"], [86, 3, 1, "", "action_keys"], [86, 3, 1, "", "action_spec"], [86, 1, 1, "", "add_module"], [86, 1, 1, "", "apply"], [86, 3, 1, "", "batch_locked"], [86, 3, 1, "", "batch_size"], [86, 1, 1, "", "bfloat16"], [86, 1, 1, "", "buffers"], [86, 1, 1, "", "children"], [86, 1, 1, "", "compile"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 3, 1, "", "done_key"], [86, 3, 1, "", "done_keys"], [86, 3, 1, "", "done_keys_groups"], [86, 3, 1, "", "done_spec"], [86, 1, 1, "", "double"], [86, 1, 1, "", "empty_cache"], [86, 1, 1, "", "eval"], [86, 1, 1, "", "extra_repr"], [86, 1, 1, "", "fake_tensordict"], [86, 1, 1, "", "float"], [86, 1, 1, "", "forward"], [86, 3, 1, "", "full_action_spec"], [86, 3, 1, "", "full_done_spec"], [86, 3, 1, "", "full_reward_spec"], [86, 3, 1, "", "full_state_spec"], [86, 1, 1, "", "get_buffer"], [86, 1, 1, "", "get_extra_state"], [86, 1, 1, "", "get_parameter"], [86, 1, 1, "", "get_submodule"], [86, 1, 1, "", "half"], [86, 3, 1, "", "input_spec"], [86, 1, 1, "", "ipu"], [86, 1, 1, "", "load_state_dict"], [86, 1, 1, "", "maybe_reset"], [86, 1, 1, "", "modules"], [86, 1, 1, "", "named_buffers"], [86, 1, 1, "", "named_children"], [86, 1, 1, "", "named_modules"], [86, 1, 1, "", "named_parameters"], [86, 3, 1, "", "observation_spec"], [86, 3, 1, "", "output_spec"], [86, 1, 1, "", "parameters"], [86, 1, 1, "", "rand_action"], [86, 1, 1, "id0", "rand_step"], [86, 1, 1, "", "register_backward_hook"], [86, 1, 1, "", "register_buffer"], [86, 1, 1, "", "register_forward_hook"], [86, 1, 1, "", "register_forward_pre_hook"], [86, 1, 1, "", "register_full_backward_hook"], [86, 1, 1, "", "register_full_backward_pre_hook"], [86, 1, 1, "", "register_gym"], [86, 1, 1, "", "register_load_state_dict_post_hook"], [86, 1, 1, "", "register_module"], [86, 1, 1, "", "register_parameter"], [86, 1, 1, "", "register_state_dict_pre_hook"], [86, 1, 1, "", "requires_grad_"], [86, 1, 1, "id1", "reset"], [86, 3, 1, "", "reset_keys"], [86, 3, 1, "", "reward_key"], [86, 3, 1, "", "reward_keys"], [86, 3, 1, "", "reward_spec"], [86, 1, 1, "id2", "rollout"], [86, 1, 1, "", "set_extra_state"], [86, 1, 1, "id3", "set_seed"], [86, 3, 1, "", "shape"], [86, 1, 1, "", "share_memory"], [86, 3, 1, "", "specs"], [86, 1, 1, "", "state_dict"], [86, 3, 1, "", "state_spec"], [86, 1, 1, "id4", "step"], [86, 1, 1, "", "step_and_maybe_reset"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_empty"], [86, 1, 1, "", "train"], [86, 1, 1, "", "type"], [86, 1, 1, "", "xpu"], [86, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[90, 3, 1, "", "action_key"], [90, 3, 1, "", "action_keys"], [90, 3, 1, "", "action_spec"], [90, 1, 1, "", "add_module"], [90, 1, 1, "", "apply"], [90, 1, 1, "", "auto_register_info_dict"], [90, 3, 1, "", "batch_locked"], [90, 3, 1, "", "batch_size"], [90, 1, 1, "", "bfloat16"], [90, 1, 1, "", "buffers"], [90, 1, 1, "", "children"], [90, 1, 1, "", "close"], [90, 1, 1, "", "compile"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 3, 1, "", "done_key"], [90, 3, 1, "", "done_keys"], [90, 3, 1, "", "done_keys_groups"], [90, 3, 1, "", "done_spec"], [90, 1, 1, "", "double"], [90, 1, 1, "", "empty_cache"], [90, 1, 1, "", "eval"], [90, 1, 1, "", "extra_repr"], [90, 1, 1, "", "fake_tensordict"], [90, 1, 1, "", "float"], [90, 1, 1, "", "forward"], [90, 3, 1, "", "full_action_spec"], [90, 3, 1, "", "full_done_spec"], [90, 3, 1, "", "full_reward_spec"], [90, 3, 1, "", "full_state_spec"], [90, 1, 1, "", "get_buffer"], [90, 1, 1, "", "get_extra_state"], [90, 1, 1, "", "get_parameter"], [90, 1, 1, "", "get_submodule"], [90, 1, 1, "", "half"], [90, 3, 1, "", "input_spec"], [90, 1, 1, "", "ipu"], [90, 1, 1, "", "load_state_dict"], [90, 1, 1, "", "maybe_reset"], [90, 1, 1, "", "modules"], [90, 1, 1, "", "named_buffers"], [90, 1, 1, "", "named_children"], [90, 1, 1, "", "named_modules"], [90, 1, 1, "", "named_parameters"], [90, 3, 1, "", "observation_spec"], [90, 3, 1, "", "output_spec"], [90, 1, 1, "", "parameters"], [90, 1, 1, "", "rand_action"], [90, 1, 1, "", "rand_step"], [90, 1, 1, "", "read_action"], [90, 1, 1, "", "read_done"], [90, 1, 1, "", "read_obs"], [90, 1, 1, "", "read_reward"], [90, 1, 1, "", "register_backward_hook"], [90, 1, 1, "", "register_buffer"], [90, 1, 1, "", "register_forward_hook"], [90, 1, 1, "", "register_forward_pre_hook"], [90, 1, 1, "", "register_full_backward_hook"], [90, 1, 1, "", "register_full_backward_pre_hook"], [90, 1, 1, "", "register_gym"], [90, 1, 1, "", "register_load_state_dict_post_hook"], [90, 1, 1, "", "register_module"], [90, 1, 1, "", "register_parameter"], [90, 1, 1, "", "register_state_dict_pre_hook"], [90, 1, 1, "", "requires_grad_"], [90, 1, 1, "", "reset"], [90, 3, 1, "", "reset_keys"], [90, 3, 1, "", "reward_key"], [90, 3, 1, "", "reward_keys"], [90, 3, 1, "", "reward_spec"], [90, 1, 1, "", "rollout"], [90, 1, 1, "", "set_extra_state"], [90, 1, 1, "", "set_info_dict_reader"], [90, 1, 1, "", "set_seed"], [90, 3, 1, "", "shape"], [90, 1, 1, "", "share_memory"], [90, 3, 1, "", "specs"], [90, 1, 1, "", "state_dict"], [90, 3, 1, "", "state_spec"], [90, 1, 1, "", "step"], [90, 1, 1, "", "step_and_maybe_reset"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_empty"], [90, 1, 1, "", "train"], [90, 1, 1, "", "type"], [90, 1, 1, "", "xpu"], [90, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[104, 3, 1, "", "action_key"], [104, 3, 1, "", "action_keys"], [104, 3, 1, "", "action_spec"], [104, 1, 1, "", "add_module"], [104, 1, 1, "", "apply"], [104, 3, 1, "", "batch_locked"], [104, 3, 1, "", "batch_size"], [104, 1, 1, "", "bfloat16"], [104, 1, 1, "", "buffers"], [104, 1, 1, "", "children"], [104, 1, 1, "", "compile"], [104, 1, 1, "", "cpu"], [104, 1, 1, "", "cuda"], [104, 3, 1, "", "done_key"], [104, 3, 1, "", "done_keys"], [104, 3, 1, "", "done_keys_groups"], [104, 3, 1, "", "done_spec"], [104, 1, 1, "", "double"], [104, 1, 1, "", "empty_cache"], [104, 1, 1, "", "eval"], [104, 1, 1, "", "extra_repr"], [104, 1, 1, "", "fake_tensordict"], [104, 1, 1, "", "float"], [104, 1, 1, "", "forward"], [104, 3, 1, "", "full_action_spec"], [104, 3, 1, "", "full_done_spec"], [104, 3, 1, "", "full_reward_spec"], [104, 3, 1, "", "full_state_spec"], [104, 1, 1, "", "get_buffer"], [104, 1, 1, "", "get_extra_state"], [104, 1, 1, "", "get_parameter"], [104, 1, 1, "", "get_submodule"], [104, 1, 1, "", "half"], [104, 3, 1, "", "input_spec"], [104, 1, 1, "", "ipu"], [104, 1, 1, "", "load_state_dict"], [104, 1, 1, "", "maybe_reset"], [104, 1, 1, "", "modules"], [104, 1, 1, "", "named_buffers"], [104, 1, 1, "", "named_children"], [104, 1, 1, "", "named_modules"], [104, 1, 1, "", "named_parameters"], [104, 3, 1, "", "observation_spec"], [104, 3, 1, "", "output_spec"], [104, 1, 1, "", "parameters"], [104, 1, 1, "", "rand_action"], [104, 1, 1, "", "rand_step"], [104, 1, 1, "", "register_backward_hook"], [104, 1, 1, "", "register_buffer"], [104, 1, 1, "", "register_forward_hook"], [104, 1, 1, "", "register_forward_pre_hook"], [104, 1, 1, "", "register_full_backward_hook"], [104, 1, 1, "", "register_full_backward_pre_hook"], [104, 1, 1, "", "register_gym"], [104, 1, 1, "", "register_load_state_dict_post_hook"], [104, 1, 1, "", "register_module"], [104, 1, 1, "", "register_parameter"], [104, 1, 1, "", "register_state_dict_pre_hook"], [104, 1, 1, "", "requires_grad_"], [104, 1, 1, "", "reset"], [104, 3, 1, "", "reset_keys"], [104, 3, 1, "", "reward_key"], [104, 3, 1, "", "reward_keys"], [104, 3, 1, "", "reward_spec"], [104, 1, 1, "", "rollout"], [104, 1, 1, "", "set_extra_state"], [104, 1, 1, "", "set_seed"], [104, 3, 1, "", "shape"], [104, 1, 1, "", "share_memory"], [104, 3, 1, "", "specs"], [104, 1, 1, "", "state_dict"], [104, 3, 1, "", "state_spec"], [104, 1, 1, "", "step"], [104, 1, 1, "", "step_and_maybe_reset"], [104, 1, 1, "", "to"], [104, 1, 1, "", "to_empty"], [104, 1, 1, "", "train"], [104, 1, 1, "", "type"], [104, 1, 1, "", "update_kwargs"], [104, 1, 1, "", "xpu"], [104, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[110, 3, 1, "", "action_key"], [110, 3, 1, "", "action_keys"], [110, 3, 1, "", "action_spec"], [110, 1, 1, "", "add_module"], [110, 1, 1, "", "apply"], [110, 3, 1, "", "batch_locked"], [110, 3, 1, "", "batch_size"], [110, 1, 1, "", "bfloat16"], [110, 1, 1, "", "buffers"], [110, 1, 1, "", "children"], [110, 1, 1, "", "compile"], [110, 1, 1, "", "cpu"], [110, 1, 1, "", "cuda"], [110, 3, 1, "", "done_key"], [110, 3, 1, "", "done_keys"], [110, 3, 1, "", "done_keys_groups"], [110, 3, 1, "", "done_spec"], [110, 1, 1, "", "double"], [110, 1, 1, "", "empty_cache"], [110, 1, 1, "", "eval"], [110, 1, 1, "", "extra_repr"], [110, 1, 1, "", "fake_tensordict"], [110, 1, 1, "", "float"], [110, 1, 1, "", "forward"], [110, 3, 1, "", "full_action_spec"], [110, 3, 1, "", "full_done_spec"], [110, 3, 1, "", "full_reward_spec"], [110, 3, 1, "", "full_state_spec"], [110, 1, 1, "", "get_buffer"], [110, 1, 1, "", "get_extra_state"], [110, 1, 1, "", "get_parameter"], [110, 1, 1, "", "get_submodule"], [110, 1, 1, "", "half"], [110, 3, 1, "", "input_spec"], [110, 1, 1, "", "ipu"], [110, 1, 1, "", "load_state_dict"], [110, 1, 1, "", "maybe_reset"], [110, 1, 1, "", "modules"], [110, 1, 1, "", "named_buffers"], [110, 1, 1, "", "named_children"], [110, 1, 1, "", "named_modules"], [110, 1, 1, "", "named_parameters"], [110, 3, 1, "", "observation_spec"], [110, 3, 1, "", "output_spec"], [110, 1, 1, "", "parameters"], [110, 1, 1, "", "rand_action"], [110, 1, 1, "", "rand_step"], [110, 1, 1, "", "register_backward_hook"], [110, 1, 1, "", "register_buffer"], [110, 1, 1, "", "register_forward_hook"], [110, 1, 1, "", "register_forward_pre_hook"], [110, 1, 1, "", "register_full_backward_hook"], [110, 1, 1, "", "register_full_backward_pre_hook"], [110, 1, 1, "", "register_gym"], [110, 1, 1, "", "register_load_state_dict_post_hook"], [110, 1, 1, "", "register_module"], [110, 1, 1, "", "register_parameter"], [110, 1, 1, "", "register_state_dict_pre_hook"], [110, 1, 1, "", "requires_grad_"], [110, 1, 1, "", "reset"], [110, 3, 1, "", "reset_keys"], [110, 3, 1, "", "reward_key"], [110, 3, 1, "", "reward_keys"], [110, 3, 1, "", "reward_spec"], [110, 1, 1, "", "rollout"], [110, 1, 1, "", "set_extra_state"], [110, 1, 1, "", "set_seed"], [110, 3, 1, "", "shape"], [110, 1, 1, "", "share_memory"], [110, 3, 1, "", "specs"], [110, 1, 1, "", "state_dict"], [110, 3, 1, "", "state_spec"], [110, 1, 1, "", "step"], [110, 1, 1, "", "step_and_maybe_reset"], [110, 1, 1, "", "to"], [110, 1, 1, "", "to_empty"], [110, 1, 1, "", "train"], [110, 1, 1, "", "type"], [110, 1, 1, "", "update_kwargs"], [110, 1, 1, "", "xpu"], [110, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[115, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[117, 0, 1, "", "ActionMask"], [118, 0, 1, "", "BinarizeReward"], [119, 0, 1, "", "BurnInTransform"], [120, 0, 1, "", "CatFrames"], [121, 0, 1, "", "CatTensors"], [122, 0, 1, "", "CenterCrop"], [123, 0, 1, "", "ClipTransform"], [124, 0, 1, "", "Compose"], [125, 0, 1, "", "DTypeCastTransform"], [126, 0, 1, "", "DeviceCastTransform"], [127, 0, 1, "", "DiscreteActionProjection"], [128, 0, 1, "", "DoubleToFloat"], [129, 0, 1, "", "EndOfLifeTransform"], [130, 0, 1, "", "ExcludeTransform"], [131, 0, 1, "", "FiniteTensorDictCheck"], [132, 0, 1, "", "FlattenObservation"], [133, 0, 1, "", "FrameSkipTransform"], [134, 0, 1, "", "GrayScale"], [135, 0, 1, "", "InitTracker"], [136, 0, 1, "", "KLRewardTransform"], [137, 0, 1, "", "NoopResetEnv"], [138, 0, 1, "", "ObservationNorm"], [139, 0, 1, "", "ObservationTransform"], [140, 0, 1, "", "PermuteTransform"], [141, 0, 1, "", "PinMemoryTransform"], [142, 0, 1, "", "R3MTransform"], [143, 0, 1, "", "RandomCropTensorDict"], [144, 0, 1, "", "RemoveEmptySpecs"], [145, 0, 1, "", "RenameTransform"], [146, 0, 1, "", "Resize"], [147, 0, 1, "", "Reward2GoTransform"], [148, 0, 1, "", "RewardClipping"], [149, 0, 1, "", "RewardScaling"], [150, 0, 1, "", "RewardSum"], [151, 0, 1, "", "SelectTransform"], [152, 0, 1, "", "SignTransform"], [153, 0, 1, "", "SqueezeTransform"], [154, 0, 1, "", "StepCounter"], [155, 0, 1, "", "TargetReturn"], [156, 0, 1, "", "TensorDictPrimer"], [157, 0, 1, "", "TimeMaxPool"], [158, 0, 1, "", "ToTensorImage"], [159, 0, 1, "", "Transform"], [160, 0, 1, "", "TransformedEnv"], [161, 0, 1, "", "UnsqueezeTransform"], [162, 0, 1, "", "VC1Transform"], [163, 0, 1, "", "VIPRewardTransform"], [164, 0, 1, "", "VIPTransform"], [165, 0, 1, "", "VecGymEnvTransform"], [166, 0, 1, "", "VecNorm"], [167, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[118, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[119, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[123, 1, 1, "", "transform_observation_spec"], [123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "to"], [124, 1, 1, "", "transform_env_device"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"], [124, 1, 1, "", "transform_output_spec"], [124, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"], [125, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "transform_done_spec"], [126, 1, 1, "", "transform_env_device"], [126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_observation_spec"], [126, 1, 1, "", "transform_output_spec"], [126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[127, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "register_keys"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[131, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[133, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[138, 1, 1, "", "init_stats"], [138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[141, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[142, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[143, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_input_spec"], [144, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[147, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[149, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[152, 1, 1, "", "transform_observation_spec"], [152, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_observation_spec"], [154, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "transform_input_spec"], [155, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "to"], [156, 1, 1, "", "transform_input_spec"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[159, 3, 1, "", "container"], [159, 1, 1, "", "forward"], [159, 3, 1, "", "parent"], [159, 1, 1, "", "to"], [159, 1, 1, "", "transform_done_spec"], [159, 1, 1, "", "transform_env_device"], [159, 1, 1, "", "transform_input_spec"], [159, 1, 1, "", "transform_observation_spec"], [159, 1, 1, "", "transform_output_spec"], [159, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[160, 3, 1, "", "batch_locked"], [160, 3, 1, "", "batch_size"], [160, 1, 1, "", "empty_cache"], [160, 1, 1, "", "eval"], [160, 3, 1, "", "input_spec"], [160, 1, 1, "", "load_state_dict"], [160, 3, 1, "", "output_spec"], [160, 1, 1, "", "set_missing_tolerance"], [160, 1, 1, "", "set_seed"], [160, 1, 1, "", "state_dict"], [160, 1, 1, "", "to"], [160, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[161, 1, 1, "", "transform_input_spec"], [161, 1, 1, "", "transform_observation_spec"], [161, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[162, 1, 1, "", "forward"], [162, 1, 1, "", "make_noload_model"], [162, 1, 1, "", "to"], [162, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[163, 1, 1, "", "forward"], [163, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[164, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[166, 1, 1, "", "build_td_for_shared_vecnorm"], [166, 1, 1, "", "forward"], [166, 1, 1, "", "get_extra_state"], [166, 1, 1, "", "set_extra_state"], [166, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.rb_transforms": [[168, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[168, 1, 1, "", "add_module"], [168, 1, 1, "", "apply"], [168, 1, 1, "", "bfloat16"], [168, 1, 1, "", "buffers"], [168, 1, 1, "", "children"], [168, 1, 1, "", "compile"], [168, 3, 1, "", "container"], [168, 1, 1, "", "cpu"], [168, 1, 1, "", "cuda"], [168, 1, 1, "", "double"], [168, 1, 1, "", "eval"], [168, 1, 1, "", "extra_repr"], [168, 1, 1, "", "float"], [168, 1, 1, "", "forward"], [168, 1, 1, "", "get_buffer"], [168, 1, 1, "", "get_extra_state"], [168, 1, 1, "", "get_parameter"], [168, 1, 1, "", "get_submodule"], [168, 1, 1, "", "half"], [168, 1, 1, "", "ipu"], [168, 1, 1, "", "load_state_dict"], [168, 1, 1, "", "modules"], [168, 3, 1, "", "n_steps"], [168, 1, 1, "", "named_buffers"], [168, 1, 1, "", "named_children"], [168, 1, 1, "", "named_modules"], [168, 1, 1, "", "named_parameters"], [168, 1, 1, "", "parameters"], [168, 3, 1, "", "parent"], [168, 1, 1, "", "register_backward_hook"], [168, 1, 1, "", "register_buffer"], [168, 1, 1, "", "register_forward_hook"], [168, 1, 1, "", "register_forward_pre_hook"], [168, 1, 1, "", "register_full_backward_hook"], [168, 1, 1, "", "register_full_backward_pre_hook"], [168, 1, 1, "", "register_load_state_dict_post_hook"], [168, 1, 1, "", "register_module"], [168, 1, 1, "", "register_parameter"], [168, 1, 1, "", "register_state_dict_pre_hook"], [168, 1, 1, "", "requires_grad_"], [168, 1, 1, "", "set_extra_state"], [168, 1, 1, "", "share_memory"], [168, 1, 1, "", "state_dict"], [168, 1, 1, "", "to"], [168, 1, 1, "", "to_empty"], [168, 1, 1, "", "train"], [168, 1, 1, "", "transform_done_spec"], [168, 1, 1, "", "transform_env_device"], [168, 1, 1, "", "transform_input_spec"], [168, 1, 1, "", "transform_observation_spec"], [168, 1, 1, "", "transform_output_spec"], [168, 1, 1, "", "transform_reward_spec"], [168, 1, 1, "", "type"], [168, 1, 1, "", "xpu"], [168, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[169, 2, 1, "", "check_env_specs"], [170, 2, 1, "", "exploration_mode"], [171, 2, 1, "", "exploration_type"], [172, 2, 1, "", "get_available_libraries"], [173, 2, 1, "", "make_composite_from_td"], [174, 2, 1, "", "set_exploration_mode"], [175, 2, 1, "", "set_exploration_type"], [176, 2, 1, "", "step_mdp"], [177, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[178, 0, 1, "", "CEMPlanner"], [179, 0, 1, "", "Conv3dNet"], [180, 0, 1, "", "ConvNet"], [181, 0, 1, "", "DTActor"], [182, 0, 1, "", "DdpgCnnActor"], [183, 0, 1, "", "DdpgCnnQNet"], [184, 0, 1, "", "DdpgMlpActor"], [185, 0, 1, "", "DdpgMlpQNet"], [186, 0, 1, "", "DecisionTransformer"], [187, 0, 1, "", "Delta"], [188, 0, 1, "", "DistributionalDQNnet"], [189, 0, 1, "", "DistributionalQValueHook"], [190, 0, 1, "", "DreamerActor"], [191, 0, 1, "", "DuelingCnnDQNet"], [192, 0, 1, "", "GRU"], [193, 0, 1, "", "GRUCell"], [194, 0, 1, "", "GRUModule"], [195, 0, 1, "", "IndependentNormal"], [196, 0, 1, "", "LSTM"], [197, 0, 1, "", "LSTMCell"], [198, 0, 1, "", "LSTMModule"], [199, 0, 1, "", "LSTMNet"], [200, 0, 1, "", "MLP"], [201, 0, 1, "", "MPCPlannerBase"], [202, 0, 1, "", "MPPIPlanner"], [203, 0, 1, "", "MaskedCategorical"], [204, 0, 1, "", "MaskedOneHotCategorical"], [205, 0, 1, "", "MultiAgentConvNet"], [206, 0, 1, "", "MultiAgentMLP"], [207, 0, 1, "", "NoisyLazyLinear"], [208, 0, 1, "", "NoisyLinear"], [209, 0, 1, "", "NormalParamWrapper"], [210, 0, 1, "", "ObsDecoder"], [211, 0, 1, "", "ObsEncoder"], [212, 0, 1, "", "OneHotCategorical"], [213, 0, 1, "", "OnlineDTActor"], [214, 0, 1, "", "QMixer"], [215, 0, 1, "", "QValueHook"], [216, 0, 1, "", "RSSMPosterior"], [217, 0, 1, "", "RSSMPrior"], [218, 0, 1, "", "Squeeze2dLayer"], [219, 0, 1, "", "SqueezeLayer"], [220, 0, 1, "", "TanhDelta"], [221, 0, 1, "", "TanhNormal"], [222, 0, 1, "", "TruncatedNormal"], [223, 0, 1, "", "VDNMixer"], [224, 0, 1, "", "VmapModule"], [225, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[178, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[179, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[180, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[181, 1, 1, "", "default_config"], [181, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[182, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[183, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[184, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[185, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[186, 0, 1, "", "DTConfig"], [186, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[187, 1, 1, "", "log_prob"], [187, 3, 1, "", "mean"], [187, 3, 1, "", "mode"], [187, 1, 1, "", "rsample"], [187, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[188, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[190, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[191, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[192, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[193, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[194, 1, 1, "", "forward"], [194, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[195, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[196, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[197, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[198, 1, 1, "", "forward"], [198, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[199, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[200, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[202, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[203, 1, 1, "", "log_prob"], [203, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[204, 1, 1, "", "log_prob"], [204, 1, 1, "", "rsample"], [204, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[207, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[209, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[210, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[211, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[212, 1, 1, "", "log_prob"], [212, 3, 1, "", "mode"], [212, 1, 1, "", "rsample"], [212, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[213, 1, 1, "", "default_config"], [213, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[214, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[216, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[217, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[219, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[220, 3, 1, "", "mean"], [220, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[221, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[222, 1, 1, "", "log_prob"], [222, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[223, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[224, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[226, 0, 1, "", "Actor"], [227, 0, 1, "", "ActorCriticOperator"], [228, 0, 1, "", "ActorCriticWrapper"], [229, 0, 1, "", "ActorValueOperator"], [230, 0, 1, "", "AdditiveGaussianWrapper"], [231, 0, 1, "", "DecisionTransformerInferenceWrapper"], [232, 0, 1, "", "DistributionalQValueActor"], [233, 0, 1, "", "DistributionalQValueModule"], [234, 0, 1, "", "EGreedyModule"], [235, 0, 1, "", "EGreedyWrapper"], [236, 0, 1, "", "LMHeadActorValueOperator"], [237, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [238, 0, 1, "", "ProbabilisticActor"], [239, 0, 1, "", "QValueActor"], [240, 0, 1, "", "QValueModule"], [241, 0, 1, "", "SafeModule"], [242, 0, 1, "", "SafeProbabilisticModule"], [243, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [244, 0, 1, "", "SafeSequential"], [245, 0, 1, "", "TanhModule"], [246, 0, 1, "", "ValueOperator"], [247, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[227, 1, 1, "", "get_critic_operator"], [227, 1, 1, "", "get_policy_head"], [227, 1, 1, "", "get_value_head"], [227, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[228, 1, 1, "", "get_policy_head"], [228, 1, 1, "", "get_policy_operator"], [228, 1, 1, "", "get_value_head"], [228, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[229, 1, 1, "", "get_policy_head"], [229, 1, 1, "", "get_policy_operator"], [229, 1, 1, "", "get_value_head"], [229, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "mask_context"], [231, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[233, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[240, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[241, 1, 1, "", "random"], [241, 1, 1, "", "random_sample"], [241, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[242, 1, 1, "", "random"], [242, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[245, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[247, 1, 1, "", "get_reward_operator"], [247, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[248, 0, 1, "", "biased_softplus"], [249, 0, 1, "", "inv_softplus"], [250, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[248, 1, 1, "", "forward"]], "torchrl.objectives": [[251, 0, 1, "", "A2CLoss"], [252, 0, 1, "", "CQLLoss"], [253, 0, 1, "", "ClipPPOLoss"], [254, 0, 1, "", "DDPGLoss"], [255, 0, 1, "", "DQNLoss"], [256, 0, 1, "", "DTLoss"], [257, 0, 1, "", "DiscreteCQLLoss"], [258, 0, 1, "", "DiscreteIQLLoss"], [259, 0, 1, "", "DiscreteSACLoss"], [260, 0, 1, "", "DistributionalDQNLoss"], [261, 0, 1, "", "DreamerActorLoss"], [262, 0, 1, "", "DreamerModelLoss"], [263, 0, 1, "", "DreamerValueLoss"], [264, 0, 1, "", "HardUpdate"], [265, 0, 1, "", "IQLLoss"], [266, 0, 1, "", "KLPENPPOLoss"], [267, 0, 1, "", "LossModule"], [268, 0, 1, "", "OnlineDTLoss"], [269, 0, 1, "", "PPOLoss"], [270, 0, 1, "", "REDQLoss"], [271, 0, 1, "", "ReinforceLoss"], [272, 0, 1, "", "SACLoss"], [273, 0, 1, "", "SoftUpdate"], [274, 0, 1, "", "TD3Loss"], [275, 0, 1, "", "ValueEstimators"], [276, 0, 1, "", "default_value_kwargs"], [277, 0, 1, "", "distance_loss"], [278, 0, 1, "", "hold_out_net"], [279, 0, 1, "", "hold_out_params"], [281, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[253, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[256, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[258, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[262, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[263, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "loss_value_diff"], [265, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[266, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[267, 1, 1, "", "convert_to_functional"], [267, 1, 1, "", "forward"], [267, 1, 1, "", "make_value_estimator"], [267, 1, 1, "", "named_parameters"], [267, 1, 1, "", "parameters"], [267, 1, 1, "", "set_keys"], [267, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[268, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "load_state_dict"], [272, 1, 1, "", "make_value_estimator"], [272, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[280, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[280, 1, 1, "", "forward"], [280, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[282, 0, 1, "", "GAE"], [283, 0, 1, "", "TD0Estimator"], [284, 0, 1, "", "TD1Estimator"], [285, 0, 1, "", "TDLambdaEstimator"], [286, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[282, 1, 1, "", "forward"], [282, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[283, 1, 1, "", "forward"], [283, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[285, 1, 1, "", "forward"], [285, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "set_keys"], [286, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[287, 0, 1, "", "generalized_advantage_estimate"], [288, 0, 1, "", "reward2go"], [289, 0, 1, "", "td0_advantage_estimate"], [290, 0, 1, "", "td0_return_estimate"], [291, 0, 1, "", "td1_advantage_estimate"], [292, 0, 1, "", "td1_return_estimate"], [293, 0, 1, "", "td_lambda_advantage_estimate"], [294, 0, 1, "", "td_lambda_return_estimate"], [295, 0, 1, "", "vec_generalized_advantage_estimate"], [296, 0, 1, "", "vec_td1_advantage_estimate"], [297, 0, 1, "", "vec_td1_return_estimate"], [298, 0, 1, "", "vec_td_lambda_advantage_estimate"], [299, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[300, 2, 1, "", "TensorDictRecorder"], [301, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[302, 2, 1, "", "Logger"], [304, 2, 1, "", "generate_exp_name"], [305, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[303, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[306, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[307, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[308, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[309, 0, 1, "", "BatchSubSampler"], [310, 0, 1, "", "ClearCudaCache"], [311, 0, 1, "", "CountFramesLog"], [312, 0, 1, "", "LogReward"], [313, 0, 1, "", "OptimizerHook"], [314, 0, 1, "", "Recorder"], [315, 0, 1, "", "ReplayBufferTrainer"], [316, 0, 1, "", "RewardNormalizer"], [317, 0, 1, "", "SelectKeys"], [318, 0, 1, "", "Trainer"], [319, 0, 1, "", "TrainerHookBase"], [320, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[309, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[310, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[311, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[312, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[313, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[314, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[315, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[316, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[317, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[319, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[320, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[321, 2, 1, "", "correct_for_frame_skip"], [322, 2, 1, "", "get_stats_random_rollout"], [323, 2, 1, "", "make_collector_offpolicy"], [324, 2, 1, "", "make_collector_onpolicy"], [325, 2, 1, "", "make_dqn_loss"], [326, 2, 1, "", "make_redq_loss"], [327, 2, 1, "", "make_redq_model"], [328, 2, 1, "", "make_replay_buffer"], [329, 2, 1, "", "make_target_updater"], [330, 2, 1, "", "make_trainer"], [331, 2, 1, "", "parallel_env_constructor"], [332, 2, 1, "", "sync_async_collector"], [333, 2, 1, "", "sync_sync_collector"], [334, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 338, 339, 340, 341, 343, 344, 345, 348, 355, 356, 360, 361], "instal": [0, 6, 7, 360], "get": [0, 347, 348, 349, 350, 351, 352], "start": [0, 347, 348, 349, 350, 351, 352], "tutori": [0, 345, 355], "basic": [0, 358], "intermedi": [0, 8], "advanc": 0, "refer": [0, 336], "knowledg": [0, 337], "base": [0, 2, 7, 337], "indic": 0, "tabl": 0, "collector": [1, 343, 344, 345, 346, 350, 352, 355, 360], "packag": [1, 2, 3, 338, 339, 340, 341], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 343, 344, 345, 350, 352, 355, 360], "distribut": [1, 338], "helper": [1, 3], "function": [1, 4, 339, 344, 345, 349, 355, 360], "replai": [2, 343, 344, 345, 346, 350, 352, 355, 358, 360], "buffer": [2, 343, 344, 345, 346, 350, 352, 355, 358, 360], "compos": [2, 124], "support": 2, "type": 2, "choos": 2, "storag": [2, 75, 343, 350, 358], "sampl": [2, 358], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 344, 358], "trajectori": [2, 358], "checkpoint": [2, 340], "episod": [2, 4], "format": 2, "ted": [2, 347], "The": [2, 343], "rational": 2, "behind": 2, "structur": [2, 358], "dimension": [2, 4], "tensordict": [2, 338, 358, 360], "special": [2, 348, 360], "case": 2, "footnot": 2, "multi": [2, 3, 338, 339, 354, 355], "agent": [2, 3, 4, 338, 339, 355], "present": 2, "memori": 2, "polici": [2, 4, 343, 345, 346, 348, 352, 354, 355, 356], "rnn": 2, "transform": [2, 3, 159, 343, 345, 347, 355, 356, 358, 360, 361], "step": [2, 343, 345, 347, 350, 355, 358, 361], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 43], "reinforc": [2, 339, 345, 355], "learn": [2, 4, 345, 355], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 338, 339, 340], "env": [3, 356, 360, 361], "vector": [3, 360], "environ": [3, 4, 6, 7, 343, 344, 345, 346, 347, 352, 354, 355, 356, 360, 361], "clone": [3, 7], "mask": 3, "action": [3, 4, 346, 356], "record": [3, 314, 340, 343, 351], "domain": [3, 338], "specif": [3, 338, 354], "librari": [3, 360], "thing": [4, 343, 356], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 347, 349, 360], "gener": [4, 338], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 343, 352, 356], "algorithm": [4, 338], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 343, 344, 349, 352], "return": [4, 339], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 360], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 354], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 343, 344, 345], "standard": 4, "explor": [4, 338, 343, 344, 348], "valu": [4, 338, 339, 343, 345, 346, 348], "loss": [4, 343, 344, 345, 346, 352, 355], "earli": 4, "train": [4, 8, 339, 343, 345, 346, 349, 352, 355, 356], "roughli": 4, "uniformli": 4, "random": [4, 355], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 344], "increas": 4, "an": [4, 345, 346, 347, 356], "dynam": [4, 358], "can": 4, "low": 4, "forward": [4, 343], "model": [4, 338, 343, 344, 346, 349, 357, 360], "also": 4, "us": [4, 6, 9, 346, 357, 358, 360], "offlin": 4, "observ": [4, 343], "space": 4, "effect": [4, 356], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 361], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 343], "render": [7, 352, 355, 361], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 343], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 356], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "onehotdiscretetensorspec": 32, "pairwisedataset": 33, "prioritizedreplaybuff": 34, "promptdata": 35, "prompttensordicttoken": 36, "replaybuff": 37, "rewarddata": 38, "rolloutfrommodel": 39, "tensordictprioritizedreplaybuff": 40, "tensordictreplaybuff": 41, "tensordicttoken": 42, "tokenizeddatasetload": 44, "unboundedcontinuoustensorspec": 45, "unboundeddiscretetensorspec": 46, "check_no_exclusive_kei": 47, "consolidate_spec": 48, "contains_lazy_spec": 49, "create_infinite_iter": 50, "ataridqnexperiencereplai": 51, "basedatasetexperiencereplai": 52, "d4rlexperiencereplai": 53, "gendgrlexperiencereplai": 54, "minariexperiencereplai": 55, "openmlexperiencereplai": 56, "openxexperiencereplai": 57, "robosetexperiencereplai": 58, "vd4rlexperiencereplai": 59, "get_dataload": 60, "immutabledatasetwrit": 61, "lazymemmapstorag": 62, "lazytensorstorag": 63, "liststorag": 64, "prioritizedsampl": 65, "prioritizedslicesampl": 66, "randomsampl": 67, "replaybufferensembl": 68, "roundrobinwrit": 69, "sampler": 70, "samplerensembl": 71, "samplerwithoutreplac": 72, "slicesampl": 73, "slicesamplerwithoutreplac": 74, "storageensembl": 76, "tensordictmaxvaluewrit": 77, "tensordictroundrobinwrit": 78, "tensorstorag": 79, "writer": 80, "writerensembl": 81, "braxenv": 82, "braxwrapp": 83, "dmcontrolenv": 84, "dmcontrolwrapp": 85, "envbas": [86, 356], "envcreat": 87, "envmetadata": 88, "gymenv": 89, "gymlikeenv": 90, "gymwrapp": 91, "habitatenv": 92, "isaacgymenv": 93, "isaacgymwrapp": 94, "jumanjienv": 95, "jumanjiwrapp": 96, "mogymenv": 97, "mogymwrapp": 98, "marlgroupmaptyp": 99, "modelbasedenvbas": 100, "multithreadedenv": 101, "multithreadedenvwrapp": 102, "openmlenv": 103, "parallelenv": 104, "pettingzooenv": 105, "pettingzoowrapp": 106, "robohiveenv": 107, "smacv2env": 108, "smacv2wrapp": 109, "serialenv": 110, "vmasenv": 111, "vmaswrapp": 112, "check_marl_group": 113, "gym_backend": 114, "dreamerenv": 115, "set_gym_backend": 116, "actionmask": 117, "binarizereward": 118, "burnintransform": 119, "catfram": [120, 358], "cattensor": 121, "centercrop": 122, "cliptransform": 123, "dtypecasttransform": 125, "devicecasttransform": 126, "discreteactionproject": 127, "doubletofloat": 128, "endoflifetransform": 129, "excludetransform": 130, "finitetensordictcheck": 131, "flattenobserv": 132, "frameskiptransform": 133, "grayscal": 134, "inittrack": 135, "klrewardtransform": 136, "noopresetenv": 137, "observationnorm": 138, "observationtransform": 139, "permutetransform": 140, "pinmemorytransform": 141, "r3mtransform": 142, "randomcroptensordict": 143, "removeemptyspec": 144, "renametransform": 145, "resiz": 146, "reward2gotransform": 147, "rewardclip": 148, "rewardsc": 149, "rewardsum": 150, "selecttransform": 151, "signtransform": 152, "squeezetransform": 153, "stepcount": 154, "targetreturn": 155, "tensordictprim": 156, "timemaxpool": 157, "totensorimag": 158, "transformedenv": 160, "unsqueezetransform": 161, "vc1transform": 162, "viprewardtransform": 163, "viptransform": 164, "vecgymenvtransform": 165, "vecnorm": [166, 361], "gsdenois": 167, "multisteptransform": 168, "check_env_spec": 169, "exploration_mod": 170, "exploration_typ": 171, "get_available_librari": 172, "make_composite_from_td": 173, "set_exploration_mod": 174, "set_exploration_typ": 175, "step_mdp": 176, "terminated_or_trunc": 177, "cemplann": 178, "conv3dnet": 179, "convnet": 180, "dtactor": 181, "ddpgcnnactor": 182, "ddpgcnnqnet": 183, "ddpgmlpactor": 184, "ddpgmlpqnet": 185, "decisiontransform": 186, "delta": 187, "distributionaldqnnet": 188, "distributionalqvaluehook": 189, "dreameractor": 190, "duelingcnndqnet": 191, "gru": 192, "grucel": 193, "grumodul": 194, "independentnorm": 195, "lstm": [196, 346], "lstmcell": 197, "lstmmodul": 198, "lstmnet": 199, "mlp": [200, 346], "mpcplannerbas": 201, "mppiplann": 202, "maskedcategor": 203, "maskedonehotcategor": 204, "multiagentconvnet": 205, "multiagentmlp": 206, "noisylazylinear": 207, "noisylinear": 208, "normalparamwrapp": 209, "obsdecod": 210, "obsencod": 211, "onehotcategor": 212, "onlinedtactor": 213, "qmixer": [214, 339], "qvaluehook": 215, "rssmposterior": 216, "rssmprior": 217, "squeeze2dlay": 218, "squeezelay": 219, "tanhdelta": 220, "tanhnorm": 221, "truncatednorm": 222, "vdnmixer": 223, "vmapmodul": 224, "reset_nois": 225, "actor": [226, 338, 343, 348], "actorcriticoper": 227, "actorcriticwrapp": 228, "actorvalueoper": 229, "additivegaussianwrapp": 230, "decisiontransformerinferencewrapp": 231, "distributionalqvalueactor": 232, "distributionalqvaluemodul": 233, "egreedymodul": 234, "egreedywrapp": 235, "lmheadactorvalueoper": 236, "ornsteinuhlenbeckprocesswrapp": 237, "probabilisticactor": 238, "qvalueactor": 239, "qvaluemodul": 240, "safemodul": [241, 338], "safeprobabilisticmodul": 242, "safeprobabilistictensordictsequenti": 243, "safesequenti": 244, "tanhmodul": 245, "valueoper": 246, "worldmodelwrapp": 247, "biased_softplu": 248, "inv_softplu": 249, "map": 250, "a2closs": 251, "cqlloss": 252, "clipppoloss": 253, "ddpgloss": 254, "dqnloss": 255, "dtloss": 256, "discretecqlloss": 257, "discreteiqlloss": 258, "discretesacloss": 259, "distributionaldqnloss": 260, "dreameractorloss": 261, "dreamermodelloss": 262, "dreamervalueloss": 263, "hardupd": 264, "iqlloss": 265, "klpenppoloss": 266, "lossmodul": [267, 343, 349], "onlinedtloss": 268, "ppoloss": 269, "redqloss": 270, "reinforceloss": 271, "sacloss": 272, "softupd": 273, "td3loss": 274, "valueestim": 275, "default_value_kwarg": 276, "distance_loss": 277, "hold_out_net": 278, "hold_out_param": 279, "qmixerloss": 280, "next_state_valu": 281, "gae": 282, "td0estim": 283, "td1estim": 284, "tdlambdaestim": 285, "valueestimatorbas": 286, "generalized_advantage_estim": 287, "reward2go": 288, "td0_advantage_estim": 289, "td0_return_estim": 290, "td1_advantage_estim": 291, "td1_return_estim": 292, "td_lambda_advantage_estim": 293, "td_lambda_return_estim": 294, "vec_generalized_advantage_estim": 295, "vec_td1_advantage_estim": 296, "vec_td1_return_estim": 297, "vec_td_lambda_advantage_estim": 298, "vec_td_lambda_return_estim": 299, "tensordictrecord": 300, "videorecord": 301, "logger": [302, 340, 351, 352], "csvlogger": 303, "generate_exp_nam": 304, "get_logg": 305, "mlflowlogg": 306, "tensorboardlogg": 307, "wandblogg": 308, "batchsubsampl": 309, "clearcudacach": 310, "countframeslog": 311, "logreward": 312, "optimizerhook": 313, "replaybuffertrain": 315, "rewardnorm": 316, "selectkei": 317, "trainer": [318, 340, 344], "trainerhookbas": 319, "updateweight": 320, "correct_for_frame_skip": 321, "get_stats_random_rollout": 322, "make_collector_offpolici": 323, "make_collector_onpolici": 324, "make_dqn_loss": 325, "make_redq_loss": 326, "make_redq_model": 327, "make_replay_buff": 328, "make_target_updat": 329, "make_train": 330, "parallel_env_constructor": 331, "sync_async_collector": 332, "sync_sync_collector": 333, "transformed_env_constructor": 334, "readm": [335, 353], "tuto": [335, 353], "api": 336, "contribut": [337, 360], "content": 337, "modul": [338, 343, 346, 348, 352, 360], "wrapper": [338, 348], "probabilist": [338, 348], "q": [338, 344, 346, 348], "oper": 338, "join": 338, "hook": [338, 340, 344], "regular": 338, "planner": 338, "object": [339, 343, 349, 360], "dqn": [339, 344, 346], "ddpg": [339, 343], "sac": 339, "redq": 339, "iql": 339, "cql": 339, "dt": 339, "td3": 339, "ppo": [339, 345, 355], "a2c": 339, "dreamer": 339, "builder": 340, "_util": 341, "comput": [342, 344, 356, 359], "time": [342, 343, 359], "code": [343, 356], "overview": [343, 346], "setup": [343, 346], "__init__": 343, "method": 343, "estim": 343, "put": 343, "togeth": [343, 356], "call": 343, "parallel": [343, 354, 361], "execut": [343, 354, 356], "stat": 343, "build": [343, 344, 352, 358], "evalu": 343, "batch": [343, 356, 358], "size": [343, 358], "construct": 343, "target": [343, 344, 349], "network": [343, 344, 345, 346, 348, 355], "updat": 343, "experi": [343, 356], "result": [343, 345, 355], "conclus": [343, 344, 345, 346, 355, 356, 358], "next": [343, 345, 347, 350, 355, 358], "A": [344, 358], "exampl": [344, 358], "deep": 344, "collect": [344, 345, 350], "paramet": [344, 345, 349], "hyperparamet": [344, 345, 355], "regist": 344, "possibl": 344, "improv": 344, "defin": [345, 355], "loop": [345, 346, 352, 355, 356], "recurr": 346, "convolut": 346, "select": 346, "further": [346, 349], "read": 346, "creat": 347, "run": [347, 361], "rollout": [347, 354, 355, 356, 361], "s": [348, 349], "tensordictmodul": [348, 360], "output": 349, "consider": 349, "log": 351, "video": 351, "own": 352, "first": 352, "design": 352, "divers": 354, "critic": 355, "pendulum": 356, "write": 356, "_step": 356, "reset": [356, 361], "simul": 356, "_reset": 356, "metadata": 356, "_spec": 356, "spec": [356, 361], "shape": 356, "seed": [356, 361], "wrap": 356, "class": [356, 360], "test": 356, "our": 356, "custom": [356, 358], "simpl": 356, "pretrain": 357, "vanilla": 358, "integr": 358, "tensorclass": 358, "other": 358, "tensor": 358, "pytre": 358, "iter": 358, "over": 358, "fix": 358, "priorit": 358, "save": 358, "raw": 358, "imag": 358, "more": 358, "complex": 358, "introduct": 360, "config": 360, "sequenc": 360, "program": 360, "ensembl": 360, "meta": 360, "state": 360, "frame_skip": 361, "deepmind": 361, "control": 361, "devic": 361, "close": 361, "access": 361, "attribut": 361, "kwarg": 361}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})