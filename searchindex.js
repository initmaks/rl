Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.AutoResetEnv", "reference/generated/torchrl.envs.transforms.AutoResetTransform", "reference/generated/torchrl.envs.transforms.BatchSizeTransform", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SignTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteIQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/getting-started-0", "tutorials/getting-started-1", "tutorials/getting-started-2", "tutorials/getting-started-3", "tutorials/getting-started-4", "tutorials/getting-started-5", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.AtariDQNExperienceReplay.rst", "reference/generated/torchrl.data.datasets.BaseDatasetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.GenDGRLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.AutoResetEnv.rst", "reference/generated/torchrl.envs.transforms.AutoResetTransform.rst", "reference/generated/torchrl.envs.transforms.BatchSizeTransform.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RemoveEmptySpecs.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SignTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.transforms.rb_transforms.MultiStepTransform.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.MultiStepActorWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteIQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/getting-started-0.rst", "tutorials/getting-started-1.rst", "tutorials/getting-started-2.rst", "tutorials/getting-started-3.rst", "tutorials/getting-started-4.rst", "tutorials/getting-started-5.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "AtariDQNExperienceReplay", "BaseDatasetExperienceReplay", "D4RLExperienceReplay", "GenDGRLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "PrioritizedSliceSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "AutoResetEnv", "AutoResetTransform", "BatchSizeTransform", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RemoveEmptySpecs", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SignTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "MultiStepTransform", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "MultiStepActorWrapper", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteIQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "Get started with Environments, TED and transforms", "Get started with TorchRL\u2019s modules", "Getting started with model optimization", "Get started with data collection and storage", "Get started with logging", "Get started with your own first training loop", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 71, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 100, 101, 103, 104, 105, 106, 107, 110, 113, 117, 119, 120, 122, 123, 125, 128, 130, 131, 134, 140, 141, 145, 146, 147, 148, 150, 158, 159, 160, 161, 162, 163, 165, 168, 169, 171, 172, 182, 183, 185, 186, 187, 188, 195, 197, 199, 201, 202, 203, 204, 208, 209, 210, 214, 221, 222, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 246, 247, 251, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 305, 308, 312, 317, 318, 322, 323, 326, 335, 336, 337, 338, 341, 342, 343, 347, 348, 352, 353, 354, 355, 356, 358, 359, 361, 362, 364, 365], "open": [0, 5, 7, 11, 57, 348, 359, 364], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "reinforc": [0, 3, 9, 54, 123, 185, 186, 187, 188, 192, 236, 241, 255, 256, 260, 261, 262, 264, 268, 269, 275, 276, 277, 340, 346, 348, 351, 352, 357, 360, 363, 364], "learn": [0, 3, 7, 8, 9, 17, 31, 54, 55, 56, 58, 59, 103, 123, 185, 186, 187, 188, 192, 205, 211, 236, 241, 255, 256, 260, 261, 262, 264, 268, 269, 274, 275, 276, 277, 340, 342, 343, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 15, 16, 51, 100, 158, 211, 229, 242, 250, 255, 257, 270, 271, 273, 275, 313, 339, 341, 342, 343, 344, 347, 348, 349, 354, 357, 359, 361, 362, 365], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 13, 14, 17, 18, 19, 36, 42, 84, 85, 94, 101, 175, 340, 341, 342, 345, 347, 348, 349, 351, 352, 354, 359, 360, 365], "pytorch": [0, 1, 2, 3, 55, 111, 112, 161, 172, 195, 199, 210, 211, 322, 339, 341, 344, 347, 349, 350, 353, 357, 359, 360, 361, 362, 364, 365], "you": [0, 2, 3, 5, 6, 7, 8, 9, 10, 31, 42, 54, 86, 90, 94, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 169, 171, 199, 312, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 94, 95, 96, 99, 104, 105, 106, 108, 109, 110, 111, 112, 116, 117, 119, 120, 122, 123, 126, 127, 128, 130, 131, 132, 140, 141, 145, 146, 150, 153, 157, 158, 159, 162, 163, 165, 167, 169, 171, 172, 180, 181, 182, 183, 185, 195, 197, 198, 199, 201, 204, 205, 208, 209, 211, 212, 225, 227, 229, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 305, 312, 318, 331, 336, 337, 338, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "directli": [0, 3, 4, 8, 22, 51, 68, 82, 83, 86, 89, 90, 100, 104, 110, 150, 168, 271, 338, 342, 348, 349, 351, 359, 360, 362], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 176, 179, 180, 181, 182, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 212, 215, 216, 217, 218, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 278, 280, 284, 285, 286, 287, 288, 289, 292, 304, 305, 313, 319, 322, 325, 326, 331, 332, 334, 335, 338, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365], "pypi": [0, 2, 364], "see": [0, 1, 2, 3, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 86, 90, 93, 101, 104, 105, 106, 107, 110, 111, 112, 127, 145, 159, 161, 162, 163, 165, 167, 170, 171, 182, 183, 195, 198, 199, 203, 209, 210, 217, 225, 226, 230, 232, 245, 246, 305, 312, 319, 347, 348, 349, 350, 351, 352, 353, 354, 355, 359, 360, 362, 365], "more": [0, 1, 2, 3, 4, 6, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 77, 86, 90, 93, 94, 104, 105, 106, 107, 110, 111, 112, 161, 165, 170, 171, 192, 199, 203, 210, 212, 229, 233, 235, 236, 245, 250, 255, 264, 271, 273, 286, 291, 299, 312, 317, 341, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 365], "about": [0, 3, 5, 7, 9, 17, 18, 19, 42, 55, 58, 59, 343, 347, 348, 349, 351, 352, 353, 354, 355, 356, 359, 360, 362, 364, 365], "instruct": [0, 6, 7, 10, 21, 53, 130, 132, 347, 348, 349, 350, 359, 362], "dedic": [0, 1, 2, 3, 17, 18, 19, 20, 104, 110, 230, 231, 232, 342, 347, 351, 353, 354, 356, 358, 359], "section": [0, 2, 3, 4, 195, 199, 348, 351, 356, 359], "below": [0, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 60, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 182, 183, 195, 198, 199, 203, 209, 225, 245, 319, 347, 348, 349, 350, 351, 360], "pip": [0, 10, 56, 351, 352, 353, 354, 355, 356, 359, 364, 365], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 31, 32, 34, 37, 40, 41, 44, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 71, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 120, 122, 123, 124, 125, 126, 128, 131, 135, 140, 141, 143, 145, 146, 149, 150, 153, 154, 158, 159, 160, 163, 165, 167, 168, 169, 171, 180, 182, 183, 189, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 227, 229, 233, 236, 237, 238, 240, 241, 242, 243, 244, 249, 255, 256, 257, 258, 259, 261, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 309, 313, 319, 326, 331, 334, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 364, 365], "python": [0, 3, 5, 6, 7, 10, 20, 102, 116, 195, 196, 197, 199, 200, 201, 206, 207, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "first": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 86, 90, 104, 110, 119, 120, 123, 124, 135, 141, 145, 146, 161, 163, 165, 183, 195, 197, 199, 201, 203, 208, 209, 210, 214, 229, 234, 235, 236, 242, 243, 245, 246, 257, 266, 270, 271, 273, 304, 305, 321, 342, 346, 347, 348, 349, 350, 351, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365], "low": [0, 24, 86, 90, 104, 110, 126, 130, 176, 236, 242, 249, 347, 348, 349, 359, 360, 364, 365], "high": [0, 9, 24, 33, 35, 38, 40, 86, 90, 104, 110, 126, 130, 140, 176, 236, 242, 249, 286, 291, 299, 347, 348, 349, 359, 360, 362, 364, 365], "level": [0, 2, 3, 4, 21, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 123, 157, 270, 347, 348, 354, 364], "abstract": [0, 3, 8, 23, 24, 25, 26, 27, 28, 29, 43, 45, 46, 51, 52, 56, 80, 86, 142, 204, 290, 314, 323, 344, 349, 360, 364], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 68, 71, 72, 74, 75, 76, 77, 79, 86, 87, 89, 90, 91, 99, 100, 103, 104, 105, 106, 107, 110, 111, 112, 118, 119, 120, 122, 123, 126, 127, 128, 130, 131, 132, 134, 135, 139, 140, 143, 145, 150, 153, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 176, 179, 180, 181, 188, 190, 195, 196, 197, 199, 200, 201, 202, 204, 206, 207, 208, 211, 215, 217, 220, 234, 235, 237, 240, 241, 242, 243, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 281, 284, 285, 286, 287, 288, 289, 290, 312, 319, 334, 338, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "intend": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 44, 122, 130, 227, 271, 342, 364], "effici": [0, 1, 2, 4, 8, 195, 211, 342, 347, 348, 349, 350, 353, 354, 356, 358, 359, 361, 362, 364], "modular": [0, 51, 248, 362, 364], "document": [0, 2, 5, 7, 17, 18, 20, 31, 57, 86, 90, 104, 110, 163, 171, 339, 348, 350, 351, 354, 357, 364], "properli": [0, 1, 86, 90, 104, 110, 179, 349, 355, 359, 360, 364], "test": [0, 3, 5, 82, 83, 95, 96, 165, 172, 197, 201, 202, 318, 334, 349, 350, 364], "The": [0, 1, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 73, 74, 75, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 119, 120, 122, 123, 127, 128, 131, 132, 133, 141, 143, 145, 150, 152, 153, 154, 157, 158, 159, 162, 163, 165, 167, 168, 171, 172, 179, 180, 181, 185, 186, 187, 188, 189, 192, 195, 196, 197, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 218, 219, 220, 229, 230, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 292, 305, 307, 310, 311, 312, 313, 317, 334, 336, 337, 340, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 364, 365], "code": [0, 3, 5, 7, 8, 57, 86, 90, 104, 110, 145, 163, 165, 195, 196, 197, 199, 200, 201, 248, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365], "aim": [0, 2, 3, 7, 27, 28, 145, 165, 167, 203, 325, 341, 342, 343, 347, 348, 364], "support": [0, 1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 56, 59, 60, 62, 63, 75, 76, 79, 81, 82, 83, 91, 95, 96, 101, 103, 104, 105, 107, 120, 123, 132, 141, 159, 160, 162, 175, 192, 227, 235, 236, 242, 245, 248, 264, 286, 287, 288, 289, 310, 340, 342, 344, 349, 350, 351, 352, 359, 360, 362, 364], "research": [0, 7, 9, 364], "most": [0, 1, 2, 3, 7, 8, 13, 14, 31, 73, 74, 86, 90, 104, 110, 130, 168, 172, 347, 349, 351, 352, 353, 354, 355, 356, 360, 362, 364, 365], "written": [0, 1, 3, 11, 33, 35, 38, 44, 53, 54, 57, 62, 66, 68, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 123, 132, 139, 153, 157, 160, 168, 171, 179, 180, 229, 241, 242, 245, 246, 250, 255, 257, 270, 273, 275, 285, 304, 305, 342, 343, 344, 347, 350, 352, 358, 360, 364], "highli": [0, 2, 351, 364, 365], "wai": [0, 1, 2, 3, 4, 51, 55, 68, 77, 94, 145, 148, 167, 168, 199, 273, 286, 287, 288, 289, 342, 347, 348, 349, 351, 353, 354, 358, 359, 360, 361, 362, 364, 365], "easili": [0, 1, 2, 3, 7, 86, 90, 104, 110, 331, 343, 347, 348, 349, 351, 352, 353, 356, 359, 364, 365], "swap": [0, 1, 3, 89, 168, 349, 361, 364], "compon": [0, 1, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 192, 218, 235, 236, 244, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 317, 322, 347, 348, 349, 350, 352, 353, 356, 358, 359, 360, 361, 364], "transform": [0, 1, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 87, 90, 104, 105, 106, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 179, 184, 185, 189, 192, 193, 216, 217, 218, 226, 234, 239, 240, 249, 252, 254, 260, 272, 305, 319, 331, 338, 340, 346, 348, 350, 352, 354, 355, 356, 357, 361, 363], "them": [0, 2, 3, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 81, 86, 87, 90, 94, 99, 104, 105, 106, 110, 111, 112, 128, 131, 163, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 226, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 270, 305, 347, 348, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 364, 365], "write": [0, 2, 3, 8, 22, 31, 33, 35, 36, 38, 44, 66, 68, 73, 76, 81, 86, 90, 126, 143, 144, 153, 155, 157, 161, 180, 229, 245, 246, 248, 250, 258, 259, 261, 262, 263, 269, 274, 276, 278, 285, 290, 305, 342, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365], "new": [0, 2, 3, 4, 8, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 90, 101, 104, 108, 109, 110, 120, 153, 162, 169, 171, 179, 180, 195, 197, 201, 241, 245, 246, 251, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 312, 347, 349, 350, 351, 353, 359, 360, 364, 365], "ones": [0, 2, 22, 25, 31, 34, 37, 40, 41, 86, 90, 104, 105, 106, 110, 124, 127, 128, 129, 131, 141, 145, 150, 159, 162, 163, 165, 167, 171, 206, 207, 227, 245, 255, 256, 258, 269, 273, 274, 276, 278, 292, 347, 349, 359, 360, 362, 364, 365], "littl": [0, 1, 3, 42, 86, 90, 104, 110, 163, 255, 257, 270, 273, 275, 349, 350, 354, 362, 364, 365], "effort": [0, 3, 360, 362, 364], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 110, 111, 112, 116, 117, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 145, 146, 147, 148, 150, 153, 154, 155, 157, 159, 160, 162, 163, 165, 166, 167, 168, 169, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 284, 286, 287, 288, 289, 290, 304, 312, 313, 315, 318, 319, 322, 324, 325, 326, 331, 334, 338, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "repo": [0, 6, 53, 123, 160, 165, 341, 359, 364], "attempt": [0, 13, 14, 15, 16, 17, 18, 19, 20, 73, 74, 84, 85, 89, 91, 92, 107, 233, 238, 241, 259, 262, 269, 284, 353, 364], "align": [0, 195, 199, 364], "exist": [0, 2, 3, 4, 11, 17, 20, 31, 33, 35, 38, 44, 86, 90, 104, 110, 124, 129, 163, 171, 276, 326, 338, 359, 364, 365], "ecosystem": [0, 354, 364], "ha": [0, 1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 45, 46, 51, 57, 62, 63, 68, 71, 73, 77, 79, 86, 87, 90, 94, 104, 110, 111, 112, 120, 123, 157, 158, 159, 160, 163, 171, 195, 197, 199, 201, 208, 233, 236, 238, 240, 241, 246, 270, 305, 347, 348, 349, 350, 351, 354, 355, 358, 359, 360, 361, 362, 364, 365], "dataset": [0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 71, 73, 74, 103, 169, 305, 340, 347, 348, 351, 361, 362, 364, 365], "pillar": [0, 364], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 119, 120, 122, 123, 124, 128, 129, 130, 131, 136, 140, 141, 145, 146, 147, 150, 153, 157, 158, 159, 160, 162, 163, 165, 168, 169, 172, 181, 197, 201, 202, 204, 205, 233, 240, 241, 261, 265, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 315, 318, 325, 326, 327, 328, 331, 334, 335, 336, 337, 338, 340, 341, 342, 346, 352, 353, 354, 355, 357, 361, 362, 363], "model": [0, 1, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 44, 86, 90, 100, 104, 110, 128, 145, 159, 165, 167, 170, 171, 182, 183, 184, 189, 191, 197, 201, 203, 204, 205, 209, 216, 217, 226, 230, 231, 232, 239, 245, 251, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 284, 322, 327, 328, 329, 330, 331, 340, 341, 344, 346, 349, 351, 354, 357, 359, 360, 362, 363, 365], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 117, 120, 122, 123, 128, 129, 131, 133, 139, 141, 147, 150, 157, 163, 168, 171, 172, 176, 180, 181, 192, 197, 201, 202, 205, 208, 209, 218, 227, 229, 235, 237, 238, 240, 241, 242, 243, 245, 248, 249, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 305, 312, 313, 319, 322, 324, 327, 334, 336, 337, 338, 340, 342, 343, 344, 346, 350, 351, 352, 353, 357, 360, 361, 362, 363, 365], "util": [0, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 37, 39, 83, 86, 90, 95, 96, 104, 105, 106, 110, 113, 123, 145, 150, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 189, 195, 199, 252, 253, 254, 271, 334, 340, 345, 347, 349, 352, 353, 354, 359, 360, 362, 364, 365], "e": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 32, 33, 35, 38, 62, 63, 65, 66, 77, 79, 86, 87, 90, 104, 110, 111, 120, 122, 124, 127, 135, 141, 145, 153, 159, 162, 163, 165, 167, 171, 172, 195, 197, 198, 199, 201, 205, 209, 212, 218, 224, 225, 234, 236, 240, 242, 244, 245, 246, 276, 285, 286, 287, 288, 289, 313, 325, 337, 342, 348, 349, 352, 353, 355, 359, 361, 362, 364, 365], "g": [0, 1, 2, 3, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 35, 38, 77, 86, 87, 90, 104, 110, 111, 120, 122, 124, 127, 135, 141, 145, 153, 159, 162, 163, 165, 167, 171, 172, 195, 197, 198, 199, 200, 201, 205, 209, 224, 225, 234, 242, 245, 246, 276, 285, 295, 296, 297, 298, 300, 301, 302, 303, 337, 342, 348, 349, 352, 355, 359, 360, 361, 362, 364, 365], "collector": [0, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 31, 39, 51, 57, 120, 123, 150, 157, 171, 241, 319, 322, 324, 327, 328, 334, 336, 337, 340, 344, 362, 365], "contain": [0, 2, 3, 7, 12, 13, 14, 15, 16, 18, 19, 25, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 71, 73, 74, 75, 78, 80, 81, 86, 90, 100, 104, 110, 127, 128, 131, 145, 159, 162, 163, 165, 167, 168, 169, 171, 179, 180, 181, 182, 183, 195, 196, 199, 200, 203, 205, 209, 229, 235, 236, 242, 244, 245, 250, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 292, 309, 313, 325, 331, 334, 335, 336, 337, 338, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 364, 365], "etc": [0, 2, 3, 7, 8, 11, 31, 45, 46, 57, 86, 90, 104, 110, 139, 163, 171, 203, 209, 348, 349, 354, 362, 364, 365], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 75, 86, 90, 104, 105, 106, 110, 119, 123, 128, 131, 132, 139, 140, 141, 157, 162, 163, 169, 171, 172, 180, 182, 183, 202, 203, 208, 209, 227, 240, 247, 248, 255, 257, 270, 273, 275, 281, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 322, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "few": [0, 2, 8, 90, 305, 313, 349, 350, 352, 359, 362, 364, 365], "depend": [0, 1, 2, 3, 4, 7, 8, 33, 35, 89, 91, 92, 107, 111, 112, 128, 131, 250, 273, 342, 347, 349, 350, 359, 360, 364, 365], "possibl": [0, 2, 3, 4, 22, 26, 28, 31, 32, 54, 57, 59, 77, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 182, 183, 195, 196, 199, 200, 245, 318, 322, 342, 347, 349, 350, 352, 354, 355, 359, 360, 362, 364, 365], "standard": [0, 3, 141, 152, 169, 181, 193, 205, 210, 211, 216, 233, 234, 278, 286, 287, 288, 289, 347, 348, 351, 352, 359, 362, 364], "numpi": [0, 11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 161, 322, 360, 362, 364, 365], "common": [0, 2, 3, 4, 90, 95, 117, 230, 231, 232, 239, 255, 256, 257, 262, 263, 269, 270, 273, 274, 275, 276, 278, 334, 341, 342, 344, 347, 349, 352, 355, 358, 359, 360, 361, 364, 365], "openai": [0, 7, 89, 91, 107, 349, 360, 364, 365], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 15, 16, 20, 21, 86, 87, 89, 90, 91, 92, 94, 101, 102, 104, 107, 110, 111, 112, 114, 116, 119, 123, 126, 132, 138, 139, 141, 143, 148, 150, 153, 159, 162, 168, 169, 171, 331, 334, 341, 347, 348, 349, 350, 351, 355, 356, 360, 361, 362, 364], "onli": [0, 1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 84, 85, 86, 89, 90, 91, 92, 94, 101, 102, 104, 105, 106, 107, 110, 119, 123, 124, 126, 127, 128, 130, 131, 135, 141, 145, 146, 150, 157, 158, 159, 160, 162, 163, 165, 167, 169, 171, 199, 201, 202, 208, 209, 229, 234, 235, 242, 243, 245, 246, 247, 248, 255, 257, 258, 262, 263, 269, 270, 271, 273, 274, 275, 276, 277, 278, 286, 287, 288, 289, 290, 305, 312, 326, 344, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 362, 364, 365], "option": [0, 1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 135, 136, 138, 139, 140, 141, 145, 146, 148, 149, 150, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 227, 229, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 307, 310, 312, 313, 315, 316, 317, 318, 319, 320, 322, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 338, 342, 350, 351, 354, 359, 360, 362, 364], "On": [0, 3, 7, 17, 18, 19, 20, 25, 54, 196, 200, 342, 348, 359], "end": [0, 2, 3, 13, 14, 16, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 104, 110, 132, 143, 157, 158, 163, 171, 182, 183, 195, 196, 199, 200, 204, 240, 276, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "come": [0, 1, 2, 3, 8, 31, 77, 86, 90, 99, 104, 110, 128, 131, 229, 230, 231, 232, 242, 250, 255, 257, 270, 273, 275, 305, 347, 348, 349, 350, 353, 354, 355, 356, 359, 362, 364, 365], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 72, 75, 79, 86, 88, 90, 100, 104, 105, 106, 110, 111, 112, 116, 117, 119, 120, 123, 124, 127, 128, 131, 138, 139, 145, 150, 157, 158, 159, 160, 162, 163, 165, 167, 169, 171, 172, 177, 178, 180, 195, 197, 199, 201, 204, 208, 209, 233, 234, 245, 263, 271, 273, 276, 290, 313, 318, 319, 328, 338, 341, 342, 343, 345, 347, 348, 349, 350, 352, 353, 354, 358, 359, 360, 361, 362, 364, 365], "re": [0, 2, 3, 8, 31, 72, 86, 90, 104, 110, 171, 201, 206, 207, 242, 246, 312, 344, 347, 349, 350, 351, 353, 358, 360, 364, 365], "usabl": [0, 344, 350, 364], "function": [0, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 68, 75, 76, 79, 86, 87, 90, 104, 110, 116, 119, 120, 128, 131, 163, 169, 171, 172, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 212, 213, 214, 215, 216, 219, 220, 222, 225, 227, 230, 231, 232, 233, 234, 236, 237, 240, 241, 242, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 331, 334, 340, 342, 347, 350, 351, 352, 355, 358, 360, 362, 365], "cost": [0, 2, 26, 57, 255, 257, 270, 273, 275, 347, 348, 359, 360, 362], "return": [0, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 68, 69, 71, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 114, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 179, 180, 181, 184, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 215, 216, 217, 219, 220, 223, 224, 225, 226, 229, 230, 231, 232, 234, 240, 242, 244, 245, 246, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 281, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 309, 322, 325, 327, 331, 334, 335, 336, 337, 338, 340, 342, 344, 347, 348, 349, 350, 352, 353, 355, 358, 359, 360, 361, 362, 364, 365], "process": [0, 1, 3, 4, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 42, 44, 51, 54, 58, 59, 65, 66, 73, 86, 87, 90, 94, 99, 101, 104, 105, 106, 110, 122, 128, 131, 161, 169, 171, 208, 209, 236, 241, 244, 340, 344, 347, 348, 350, 351, 359, 360, 361, 362, 364, 365], "good": [0, 1, 4, 9, 104, 347, 349, 350, 352, 359, 364, 365], "runtim": [0, 2, 3, 31, 86, 90, 104, 110, 171, 360], "perform": [0, 2, 3, 4, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 113, 128, 131, 140, 163, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 257, 266, 273, 276, 318, 322, 343, 347, 348, 349, 350, 351, 354, 356, 358, 359, 360, 365], "To": [0, 2, 3, 4, 6, 7, 8, 9, 17, 18, 19, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 76, 81, 82, 83, 86, 89, 90, 91, 95, 96, 99, 104, 105, 106, 107, 108, 109, 110, 111, 157, 169, 171, 230, 231, 232, 241, 263, 271, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 364, 365], "read": [0, 2, 3, 7, 22, 36, 39, 57, 62, 63, 64, 65, 68, 75, 76, 79, 86, 89, 90, 91, 104, 110, 117, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 143, 144, 146, 147, 148, 150, 153, 154, 155, 157, 158, 159, 160, 162, 165, 166, 168, 169, 171, 180, 215, 229, 230, 231, 232, 235, 240, 242, 245, 246, 248, 250, 251, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 305, 318, 322, 331, 342, 347, 348, 349, 351, 352, 358, 359, 360, 361, 365], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 344, 347, 351, 354, 358, 361, 365], "beyond": 0, "api": [0, 2, 3, 5, 105, 106, 107, 145, 167, 343, 344, 351, 352, 353, 354, 355, 359, 360, 362, 364, 365], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 45, 46, 47, 49, 73, 86, 87, 90, 100, 104, 110, 113, 123, 124, 134, 139, 146, 161, 163, 171, 172, 197, 201, 229, 235, 236, 242, 243, 244, 245, 246, 305, 339, 342, 343, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 365], "paper": [0, 54, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 107, 111, 112, 145, 165, 167, 195, 217, 226, 261, 268, 331, 347, 349, 359], "releas": [0, 4, 7, 10, 31, 86, 90, 104, 110, 163, 171, 276, 364], "sync": [0, 13, 14, 16, 17, 18, 19, 20, 324, 334, 344, 347, 364], "so": [0, 2, 3, 4, 6, 7, 10, 31, 33, 35, 38, 39, 86, 90, 104, 110, 159, 169, 171, 247, 248, 347, 349, 350, 353, 356, 359, 360, 365], "make": [0, 2, 3, 4, 7, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 75, 76, 81, 86, 90, 91, 94, 96, 98, 102, 104, 110, 133, 141, 145, 146, 150, 157, 165, 171, 172, 195, 196, 199, 200, 208, 209, 210, 235, 246, 255, 257, 270, 273, 275, 286, 287, 288, 289, 319, 328, 338, 342, 343, 347, 348, 349, 350, 351, 352, 353, 355, 356, 358, 359, 360, 361, 362, 364, 365], "sure": [0, 3, 4, 7, 56, 75, 90, 94, 150, 235, 338, 342, 347, 349, 350, 353, 359, 360, 362, 364, 365], "alwai": [0, 2, 3, 13, 14, 19, 25, 27, 31, 51, 60, 86, 90, 104, 110, 139, 140, 171, 264, 271, 342, 343, 348, 349, 350, 359, 360, 362], "enjoi": [0, 2, 3, 57, 354], "latest": [0, 2, 3, 10, 101, 105, 106, 319, 349, 359, 360, 364], "featur": [0, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 32, 44, 55, 66, 73, 74, 86, 90, 99, 104, 105, 106, 108, 109, 110, 120, 123, 135, 139, 143, 159, 160, 164, 169, 172, 182, 183, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 210, 211, 246, 255, 257, 270, 273, 275, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 338, 342, 347, 348, 349, 350, 352, 353, 354, 356, 360, 362, 365], "recent": [0, 7, 11, 168, 347, 362, 365], "version": [0, 1, 2, 3, 6, 11, 31, 33, 35, 39, 54, 59, 73, 86, 89, 90, 91, 92, 101, 102, 104, 105, 107, 110, 111, 112, 168, 171, 179, 232, 255, 257, 270, 271, 273, 275, 276, 286, 289, 341, 342, 347, 349, 350, 351, 353, 356, 359, 360, 361, 365], "although": [0, 1, 3, 8, 86, 90, 104, 110, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 344, 347, 348, 354, 362], "core": [0, 3, 8, 331, 344, 350, 352, 364], "guarante": [0, 2, 31, 33, 35, 38, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 169, 171, 354, 364], "backward": [0, 8, 31, 82, 83, 86, 90, 104, 110, 169, 171, 195, 196, 199, 200, 255, 256, 258, 262, 263, 269, 273, 274, 275, 276, 278, 347, 349, 350, 353, 354, 356, 359, 360], "compat": [0, 2, 3, 7, 11, 13, 14, 31, 53, 68, 71, 73, 74, 75, 77, 86, 90, 92, 103, 104, 110, 123, 157, 165, 169, 171, 195, 196, 197, 199, 200, 201, 243, 255, 256, 258, 259, 261, 262, 263, 269, 271, 273, 274, 275, 276, 278, 281, 347, 350, 362, 364], "1": [0, 1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 141, 143, 145, 146, 147, 148, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 171, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 252, 255, 256, 257, 258, 259, 261, 262, 263, 266, 269, 270, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 292, 294, 295, 296, 300, 301, 303, 305, 313, 318, 319, 320, 331, 334, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365], "13": [0, 2, 5, 10, 11, 73, 74, 107, 168, 171, 346, 348, 349, 350, 355, 359, 360, 361, 362, 363], "nightli": [0, 6], "via": [0, 1, 4, 7, 8, 34, 37, 40, 41, 53, 55, 56, 57, 58, 59, 90, 104, 145, 162, 167, 260, 271, 343, 344, 347, 348, 349, 350, 352, 354, 362, 365], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 71, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 176, 179, 180, 181, 191, 192, 197, 201, 202, 204, 205, 217, 218, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 304, 313, 317, 318, 319, 321, 322, 331, 340, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 365], "git": [0, 6, 7, 10], "clone": [0, 2, 4, 8, 25, 27, 139, 147, 230, 231, 232, 245, 262, 269, 331, 340, 347, 360, 364], "willing": 0, "contribut": [0, 2], "cd": [0, 7], "path": [0, 3, 6, 7, 31, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 68, 86, 90, 104, 110, 116, 145, 167, 171, 205, 307, 312, 322, 344, 348, 356], "root": [0, 2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 104, 123, 160, 179, 198, 224, 225, 350, 351, 359, 360, 361, 362, 365], "http": [0, 2, 5, 6, 7, 10, 17, 18, 19, 34, 42, 51, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 103, 105, 106, 107, 111, 112, 123, 145, 165, 184, 185, 186, 187, 188, 189, 192, 193, 194, 199, 205, 206, 207, 211, 213, 214, 217, 219, 220, 226, 236, 241, 255, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 286, 291, 299, 331, 339, 357, 361, 364], "github": [0, 2, 5, 6, 7, 10, 17, 18, 19, 51, 54, 55, 57, 82, 83, 84, 85, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 120, 165, 352, 356, 364], "com": [0, 2, 5, 6, 7, 10, 17, 18, 19, 54, 57, 58, 82, 83, 84, 85, 92, 94, 95, 96, 101, 102, 105, 106, 107, 111, 112, 361, 364], "setup": [0, 7, 82, 83, 94, 95, 96], "py": [0, 3, 116, 217, 226, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365], "develop": [0, 3, 4, 7, 94, 347, 364], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 72, 75, 77, 78, 79, 80, 86, 88, 90, 92, 93, 104, 107, 110, 118, 119, 120, 122, 126, 130, 136, 139, 145, 146, 148, 155, 159, 162, 163, 165, 166, 168, 169, 170, 171, 172, 179, 181, 182, 183, 192, 195, 196, 197, 199, 200, 201, 203, 205, 206, 207, 209, 211, 212, 227, 233, 234, 235, 236, 237, 240, 242, 243, 246, 248, 249, 252, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 281, 284, 286, 287, 288, 289, 290, 292, 306, 307, 310, 312, 315, 322, 324, 331, 334, 343, 346, 347, 349, 352, 353, 354, 357, 359, 360, 363, 365], "seri": [0, 2, 7, 8, 32, 61, 69, 77, 78, 80, 81, 110, 140, 162, 305, 342, 343, 347, 348, 349, 355, 356, 359, 362, 365], "quick": [0, 51], "ramp": 0, "up": [0, 1, 2, 3, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 26, 39, 53, 59, 86, 90, 104, 110, 119, 122, 160, 162, 171, 273, 341, 342, 343, 347, 348, 349, 350, 352, 356, 359, 360, 362, 365], "If": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 71, 72, 73, 74, 77, 79, 84, 85, 86, 87, 89, 90, 91, 92, 94, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 114, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 133, 135, 139, 140, 141, 145, 146, 149, 150, 153, 154, 158, 159, 160, 161, 162, 163, 165, 167, 169, 171, 179, 180, 182, 183, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 227, 229, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 269, 270, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 300, 301, 302, 303, 309, 312, 317, 319, 322, 324, 326, 331, 334, 338, 341, 347, 348, 349, 350, 351, 353, 356, 358, 359, 360, 362, 364, 365], "hurri": [0, 351], "last": [0, 1, 2, 3, 4, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 43, 45, 46, 53, 72, 73, 74, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 119, 122, 135, 141, 146, 158, 160, 161, 182, 183, 195, 197, 199, 201, 202, 203, 206, 207, 213, 221, 227, 233, 234, 237, 240, 246, 286, 288, 289, 347, 348, 349, 350, 351, 352, 359, 360, 361, 362, 364, 365], "item": [0, 8, 13, 25, 27, 37, 44, 60, 72, 77, 134, 206, 207, 258, 259, 261, 313, 343, 344, 347, 349, 350, 353, 354, 359, 360, 362], "navig": [0, 359], "previou": [0, 3, 4, 10, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 159, 171, 180, 195, 199, 220, 234, 349, 350, 351, 352, 356, 360, 365], "whenev": [0, 1, 2, 3, 22, 31, 34, 37, 40, 41, 51, 57, 66, 73, 74, 84, 85, 89, 91, 92, 107, 111, 112, 116, 138, 163, 168, 271, 286, 287, 288, 289, 324, 342, 362], "want": [0, 2, 3, 6, 7, 8, 74, 141, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 342, 347, 348, 349, 350, 351, 353, 354, 355, 359, 360, 361, 362, 364, 365], "ted": [0, 51, 53, 54, 55, 56, 57, 58, 59, 340, 346, 357, 363], "s": [0, 1, 2, 3, 6, 7, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 74, 77, 82, 83, 86, 90, 94, 95, 96, 101, 104, 105, 106, 110, 111, 112, 123, 127, 145, 157, 159, 161, 162, 163, 165, 167, 169, 171, 172, 182, 183, 197, 201, 207, 208, 209, 211, 217, 226, 230, 232, 233, 236, 237, 240, 242, 245, 246, 249, 256, 262, 269, 271, 276, 286, 287, 288, 289, 290, 331, 342, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "modul": [0, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 77, 82, 83, 86, 90, 99, 100, 103, 104, 110, 116, 122, 127, 130, 132, 139, 145, 146, 158, 159, 162, 163, 165, 167, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 282, 284, 286, 287, 288, 289, 290, 322, 329, 330, 334, 340, 343, 344, 346, 348, 349, 351, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365], "optim": [0, 1, 2, 8, 31, 39, 82, 83, 86, 90, 104, 110, 163, 171, 181, 205, 210, 211, 256, 271, 272, 273, 276, 317, 322, 334, 343, 344, 346, 349, 350, 351, 352, 354, 357, 359, 360, 363], "collect": [0, 1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 104, 107, 110, 120, 123, 141, 145, 167, 172, 240, 241, 256, 258, 261, 263, 274, 276, 278, 305, 313, 319, 322, 324, 325, 326, 334, 344, 346, 347, 350, 351, 352, 353, 356, 357, 359, 360, 361, 362, 363, 364, 365], "storag": [0, 1, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 72, 73, 74, 76, 77, 79, 86, 88, 90, 104, 110, 122, 123, 128, 131, 150, 171, 340, 344, 346, 348, 349, 350, 351, 353, 356, 357, 359, 361, 363], "log": [0, 3, 4, 8, 39, 190, 191, 192, 206, 207, 215, 225, 235, 236, 242, 246, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 312, 315, 316, 318, 322, 334, 342, 343, 344, 346, 347, 348, 349, 351, 352, 356, 357, 359, 360, 363, 364], "your": [0, 2, 3, 7, 8, 10, 17, 31, 86, 90, 94, 99, 104, 105, 106, 110, 169, 171, 338, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 362, 363, 364], "own": [0, 1, 3, 13, 14, 16, 21, 31, 86, 90, 104, 105, 106, 110, 171, 305, 346, 348, 349, 351, 357, 359, 360, 363], "train": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 33, 35, 38, 39, 44, 51, 54, 60, 86, 90, 104, 105, 106, 110, 128, 136, 145, 158, 163, 165, 167, 171, 172, 185, 187, 197, 201, 233, 237, 238, 241, 255, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 322, 324, 334, 340, 344, 346, 348, 351, 354, 355, 357, 361, 362, 363, 365], "loop": [0, 8, 33, 35, 38, 86, 90, 104, 110, 179, 233, 237, 238, 241, 273, 322, 344, 346, 347, 348, 351, 353, 354, 355, 357, 358, 362, 363], "ppo": [0, 4, 8, 242, 246, 257, 270, 273, 340, 342, 346, 347, 348, 352, 353, 357, 363], "pendulum": [0, 3, 13, 14, 15, 16, 20, 21, 77, 84, 85, 86, 87, 89, 90, 91, 101, 104, 110, 123, 126, 127, 133, 138, 139, 141, 148, 150, 155, 157, 159, 160, 162, 163, 169, 171, 197, 201, 334, 342, 346, 348, 349, 351, 352, 353, 357, 363, 364, 365], "introduct": [0, 343, 346, 351, 357, 359, 363, 365], "multi": [0, 1, 7, 9, 27, 28, 31, 34, 37, 40, 41, 86, 90, 104, 108, 109, 110, 163, 171, 195, 197, 199, 201, 202, 203, 208, 209, 240, 284, 286, 287, 288, 289, 340, 346, 347, 348, 349, 350, 351, 352, 357, 360, 363, 364], "agent": [0, 9, 27, 28, 99, 105, 106, 108, 109, 111, 112, 113, 157, 158, 206, 207, 208, 209, 211, 217, 226, 284, 340, 346, 351, 357, 360, 363], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 197, 201, 204, 205, 240, 245, 271, 304, 305, 326, 327, 328, 331, 334, 336, 337, 338, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 117, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 138, 139, 141, 145, 146, 147, 148, 150, 153, 154, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 211, 212, 215, 216, 217, 218, 224, 225, 226, 227, 229, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 299, 305, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 332, 334, 338, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365], "pretrain": [0, 346, 357, 363], "recurr": [0, 2, 122, 195, 196, 197, 199, 201, 220, 346, 348, 352, 357, 362, 363], "dqn": [0, 2, 51, 132, 192, 235, 236, 255, 256, 258, 259, 261, 263, 264, 265, 268, 269, 271, 273, 274, 275, 276, 277, 278, 284, 329, 340, 342, 346, 352, 353, 356, 357, 363], "polici": [0, 1, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 82, 83, 86, 90, 100, 104, 110, 130, 139, 158, 177, 178, 192, 197, 201, 208, 209, 211, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 249, 255, 256, 257, 258, 262, 263, 269, 270, 272, 273, 274, 275, 276, 278, 318, 324, 327, 328, 334, 336, 337, 342, 343, 344, 346, 348, 351, 353, 354, 357, 361, 362, 363, 364, 365], "replai": [0, 8, 15, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 67, 68, 69, 70, 72, 74, 75, 76, 77, 78, 81, 122, 123, 130, 146, 150, 159, 171, 258, 259, 261, 262, 263, 269, 274, 276, 278, 319, 322, 332, 334, 340, 344, 346, 357, 360, 361, 363], "buffer": [0, 3, 4, 8, 15, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 86, 90, 100, 104, 110, 122, 123, 127, 130, 145, 146, 150, 159, 162, 163, 165, 167, 171, 245, 248, 258, 259, 261, 262, 263, 269, 274, 276, 278, 319, 322, 332, 334, 340, 344, 346, 355, 357, 360, 361, 363, 365], "task": [0, 2, 3, 9, 27, 28, 39, 44, 54, 57, 84, 85, 86, 90, 93, 104, 105, 106, 107, 110, 111, 112, 145, 157, 163, 165, 167, 262, 269, 346, 347, 348, 349, 350, 351, 352, 357, 359, 360, 363, 364, 365], "specif": [0, 1, 2, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 90, 104, 110, 111, 189, 234, 305, 322, 340, 343, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 362, 363], "object": [0, 2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 44, 62, 63, 64, 68, 71, 75, 76, 79, 81, 86, 90, 95, 104, 110, 128, 131, 132, 141, 145, 162, 163, 165, 169, 171, 205, 217, 226, 229, 230, 242, 245, 246, 247, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 326, 327, 328, 333, 334, 338, 340, 342, 344, 346, 348, 349, 350, 354, 356, 357, 359, 360, 362, 363, 365], "ddpg": [0, 185, 186, 187, 188, 258, 268, 277, 340, 342, 346, 348, 353, 357, 363], "loss": [0, 3, 8, 35, 132, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 286, 317, 322, 329, 330, 331, 334, 343, 344, 346, 351, 353, 354, 355, 357, 360, 362, 363, 364], "trainer": [0, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 346, 347, 357, 363], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 141, 143, 145, 147, 148, 149, 150, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 208, 209, 212, 215, 216, 217, 218, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 279, 280, 284, 286, 287, 288, 289, 292, 305, 313, 314, 315, 316, 317, 319, 320, 321, 324, 331, 334, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365], "packag": [0, 6, 7, 10, 116, 340, 341, 347, 362, 365], "batch": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 103, 104, 110, 111, 112, 120, 123, 127, 135, 141, 143, 146, 150, 159, 162, 163, 164, 168, 169, 171, 180, 190, 195, 196, 197, 199, 200, 201, 202, 206, 207, 208, 209, 210, 215, 217, 223, 227, 240, 241, 245, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 316, 319, 320, 321, 322, 324, 336, 337, 338, 340, 344, 348, 349, 350, 351, 354, 356, 358, 359, 361, 364, 365], "size": [0, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 122, 124, 127, 128, 131, 132, 133, 135, 143, 145, 147, 148, 150, 154, 156, 157, 159, 161, 162, 163, 164, 167, 169, 171, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 215, 216, 217, 218, 219, 220, 223, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 269, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 305, 313, 319, 331, 340, 342, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 364, 365], "interoper": [0, 13, 14, 340], "singl": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 37, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 86, 89, 90, 104, 110, 111, 112, 123, 124, 145, 150, 163, 167, 171, 182, 183, 195, 196, 197, 199, 200, 201, 202, 203, 209, 244, 248, 257, 259, 261, 263, 264, 270, 273, 274, 278, 286, 287, 288, 289, 295, 296, 297, 298, 300, 301, 302, 303, 331, 338, 340, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362], "node": [0, 2, 17, 18, 19, 20, 21, 33, 35, 38, 59, 331, 340, 354], "distribut": [0, 2, 3, 4, 9, 10, 17, 18, 19, 20, 21, 105, 106, 139, 141, 181, 190, 191, 192, 193, 198, 205, 206, 207, 212, 215, 216, 219, 220, 223, 224, 225, 233, 234, 235, 236, 242, 246, 247, 255, 256, 257, 262, 263, 264, 269, 270, 273, 274, 275, 276, 278, 340, 344, 348, 349, 352, 354, 359, 360, 364, 365], "helper": [0, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 347, 348, 350, 360], "compos": [0, 3, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 77, 78, 86, 90, 104, 110, 123, 149, 162, 163, 169, 171, 239, 240, 266, 276, 305, 331, 340, 347, 348, 349, 350, 354, 358, 359, 362, 364, 365], "episod": [0, 3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 86, 90, 104, 110, 119, 150, 153, 158, 179, 181, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 340, 348, 351, 356, 359, 362], "format": [0, 30, 31, 32, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 77, 86, 90, 104, 105, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 305, 340, 347, 348, 351, 353, 355, 365], "tensorspec": [0, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 45, 46, 47, 48, 49, 86, 90, 100, 104, 110, 111, 112, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 141, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 180, 220, 229, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 249, 256, 259, 262, 263, 274, 276, 278, 284, 340, 360], "human": [0, 55, 340, 360], "feedback": [0, 340, 356, 364], "rlhf": [0, 39, 44, 60, 139, 340, 342], "envbas": [0, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 87, 90, 104, 110, 117, 120, 128, 131, 140, 147, 148, 162, 163, 169, 171, 172, 181, 204, 205, 318, 326, 327, 328, 331, 334, 336, 337, 338, 340, 351], "gymlikeenv": [0, 89, 91, 340], "envmetadata": [0, 340], "vector": [0, 1, 8, 23, 26, 32, 82, 83, 95, 96, 99, 105, 106, 107, 111, 112, 130, 168, 185, 187, 195, 196, 199, 200, 203, 286, 289, 299, 300, 301, 302, 303, 340, 347, 348, 350, 358, 359, 360, 361, 365], "auto": [0, 63, 79, 118, 119, 168, 241, 256, 263, 272, 274, 276, 278, 340, 343, 359], "reset": [0, 1, 2, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 118, 119, 120, 123, 132, 135, 138, 140, 145, 153, 157, 158, 159, 160, 162, 163, 165, 168, 169, 171, 172, 180, 195, 197, 201, 228, 240, 241, 304, 331, 340, 347, 348, 349, 350, 351, 354, 358, 359, 364], "mask": [0, 1, 4, 22, 26, 29, 30, 32, 105, 106, 117, 146, 171, 192, 206, 207, 218, 234, 235, 236, 237, 238, 243, 244, 319, 340, 348, 350, 365], "action": [0, 2, 8, 9, 13, 14, 15, 16, 20, 26, 32, 39, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 126, 128, 130, 131, 132, 133, 136, 139, 140, 143, 147, 148, 150, 154, 157, 163, 168, 176, 179, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 201, 203, 204, 205, 206, 207, 208, 216, 217, 218, 220, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 246, 249, 250, 255, 256, 258, 259, 261, 262, 263, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 331, 334, 338, 340, 342, 343, 344, 347, 348, 349, 351, 352, 353, 354, 355, 358, 359, 361, 362, 364, 365], "record": [0, 2, 31, 86, 90, 104, 110, 139, 171, 273, 304, 305, 306, 307, 308, 309, 310, 311, 312, 334, 340, 348, 349, 352, 356], "domain": [0, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 130, 159, 176, 229, 235, 236, 242, 243, 244, 245, 246, 247, 248, 340, 349, 350, 352, 353, 359, 360, 364, 365], "actor": [0, 3, 4, 20, 139, 181, 184, 185, 187, 192, 193, 205, 216, 218, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 284, 331, 340, 343, 348, 350, 351, 353, 356, 361, 364], "explor": [0, 1, 170, 211, 229, 233, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 255, 318, 327, 328, 334, 340, 349, 350, 351, 353, 354, 356, 359, 360], "valu": [0, 1, 2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 86, 90, 99, 104, 110, 116, 119, 121, 123, 124, 126, 128, 130, 131, 132, 140, 141, 145, 146, 149, 150, 151, 153, 155, 159, 160, 162, 163, 167, 169, 171, 176, 180, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 217, 218, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 315, 316, 317, 318, 319, 322, 331, 334, 340, 344, 348, 353, 354, 355, 358, 359, 360, 362, 364, 365], "gener": [0, 1, 2, 3, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 72, 86, 87, 90, 100, 103, 104, 105, 106, 108, 109, 110, 120, 127, 128, 129, 133, 139, 141, 147, 148, 153, 154, 157, 162, 168, 171, 180, 190, 206, 207, 215, 229, 242, 246, 250, 251, 274, 280, 286, 291, 299, 308, 322, 340, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "hook": [0, 31, 86, 90, 104, 110, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 218, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 340], "planner": [0, 181, 205, 340], "sac": [0, 263, 274, 276, 340], "redq": [0, 274, 330, 331, 340], "iql": [0, 262, 269, 340, 347, 359], "cql": [0, 256, 261, 340], "dt": [0, 241, 340, 360], "td3": [0, 278, 340], "a2c": [0, 255, 340], "dreamer": [0, 115, 193, 265, 266, 267, 340, 342], "checkpoint": [0, 340, 361], "builder": [0, 340, 348, 365], "logger": [0, 305, 307, 308, 309, 310, 311, 312, 316, 322, 334, 338, 340, 348], "_util": [0, 3, 11, 340, 356], "implement_for": [0, 3, 340], "thing": [0, 3, 7, 8, 86, 90, 104, 110, 341, 349, 350, 351, 352, 353, 354, 355, 359, 362, 365], "consid": [0, 1, 2, 3, 8, 19, 31, 34, 37, 40, 41, 62, 63, 79, 86, 90, 104, 110, 130, 169, 171, 190, 208, 223, 286, 288, 289, 341, 347, 351, 352, 353, 360, 362], "when": [0, 1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 72, 73, 74, 75, 76, 79, 86, 87, 90, 99, 101, 103, 104, 105, 106, 110, 111, 112, 117, 119, 122, 123, 127, 128, 130, 131, 139, 140, 141, 145, 146, 153, 159, 162, 163, 165, 167, 168, 169, 171, 177, 178, 179, 181, 192, 195, 196, 199, 200, 203, 204, 205, 206, 207, 210, 218, 224, 240, 242, 245, 246, 248, 252, 257, 259, 264, 270, 273, 276, 279, 284, 285, 286, 287, 288, 289, 304, 305, 319, 338, 341, 342, 344, 347, 348, 349, 350, 352, 354, 355, 359, 360, 361, 362, 365], "debug": [0, 6, 8, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 341, 365], "work": [0, 1, 2, 3, 4, 8, 11, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 71, 73, 74, 76, 81, 86, 89, 90, 91, 94, 104, 107, 110, 124, 139, 145, 165, 168, 169, 171, 179, 182, 183, 202, 203, 236, 244, 249, 257, 270, 273, 322, 341, 342, 347, 348, 349, 350, 351, 354, 358, 359, 360, 361, 362, 364, 365], "habitat": [0, 3, 92, 341, 361], "lab": [0, 3, 84, 85, 92, 341], "mujoco": [0, 6, 8, 107, 341, 347, 349, 350], "error": [0, 1, 3, 7, 10, 11, 28, 31, 33, 35, 38, 86, 90, 104, 110, 113, 146, 171, 172, 341, 347, 349, 359, 365], "solut": [0, 2, 3, 6, 7, 9, 20, 341, 342, 344, 364], "resourc": [0, 1, 20, 92, 341, 347, 349, 359], "issu": [0, 4, 5, 8, 51, 55, 62, 63, 79, 94, 123, 146, 160, 179, 229, 235, 236, 242, 243, 244, 245, 246, 341, 364], "index": [0, 3, 7, 8, 10, 15, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 71, 76, 77, 78, 79, 80, 81, 86, 90, 104, 110, 111, 112, 118, 123, 127, 130, 163, 179, 206, 207, 340, 351, 358, 359, 362, 364], "search": [0, 103, 180, 348], "page": [0, 7, 312, 353], "somewhat": [1, 2, 343, 352, 365], "equival": [1, 3, 23, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 120, 129, 132, 163, 171, 192, 199, 203, 218, 235, 236, 243, 244, 273, 319, 354, 364, 365], "dataload": [1, 60, 72, 74, 348, 354, 362], "except": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 104, 110, 123, 134, 150, 158, 159, 160, 163, 171, 195, 197, 199, 201, 215, 233, 237, 238, 241, 276, 305, 342, 348, 351, 362, 364, 365], "thei": [1, 2, 3, 4, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 99, 104, 105, 106, 110, 111, 112, 119, 122, 134, 139, 145, 154, 162, 163, 167, 171, 201, 202, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 319, 322, 342, 343, 344, 347, 348, 349, 350, 353, 358, 359, 360, 361, 362, 364, 365], "over": [1, 2, 3, 4, 8, 13, 14, 31, 37, 41, 42, 44, 50, 51, 57, 72, 86, 90, 104, 110, 130, 141, 153, 160, 171, 179, 227, 248, 264, 266, 271, 292, 325, 344, 347, 348, 349, 351, 352, 353, 354, 359, 360, 365], "non": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 38, 40, 41, 57, 64, 86, 90, 104, 105, 106, 110, 120, 121, 127, 135, 145, 159, 162, 163, 164, 165, 167, 171, 179, 195, 197, 199, 201, 208, 245, 246, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 342, 347, 350, 359, 360, 362, 365], "static": [1, 11, 39, 44, 66, 73, 74, 92, 169, 269, 351, 360, 362], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 25, 27, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 119, 120, 122, 124, 127, 128, 129, 130, 131, 139, 141, 143, 145, 147, 150, 153, 157, 158, 159, 162, 163, 165, 167, 169, 171, 176, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 208, 209, 212, 216, 227, 234, 235, 236, 237, 238, 240, 241, 245, 249, 250, 255, 256, 257, 258, 262, 263, 269, 270, 273, 274, 275, 276, 278, 285, 286, 287, 288, 289, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 342, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365], "like": [1, 2, 3, 4, 7, 20, 25, 27, 31, 34, 37, 40, 41, 44, 64, 68, 74, 86, 90, 92, 99, 104, 105, 106, 110, 132, 161, 171, 172, 195, 199, 209, 239, 255, 257, 270, 273, 274, 275, 343, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 365], "being": [1, 2, 3, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 60, 77, 86, 89, 90, 91, 92, 104, 107, 110, 122, 128, 130, 131, 140, 148, 163, 171, 177, 178, 197, 201, 237, 241, 257, 270, 273, 276, 305, 319, 324, 336, 337, 338, 342, 347, 348, 349, 350, 354, 359, 360, 362], "accept": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 37, 54, 55, 58, 59, 60, 86, 90, 100, 104, 110, 118, 123, 127, 135, 145, 153, 159, 162, 163, 164, 165, 167, 171, 203, 227, 245, 246, 247, 276, 305, 344, 349, 351, 355, 362, 365], "two": [1, 2, 3, 4, 8, 10, 31, 34, 37, 39, 40, 41, 57, 68, 72, 74, 86, 90, 104, 110, 120, 141, 145, 167, 171, 188, 195, 197, 199, 201, 221, 246, 270, 281, 318, 322, 331, 343, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 360, 362, 364, 365], "main": [1, 2, 3, 5, 19, 21, 59, 87, 246, 322, 342, 343, 347, 348, 358, 365], "argument": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 68, 71, 72, 73, 74, 76, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 107, 110, 111, 112, 119, 120, 124, 126, 127, 145, 153, 154, 157, 159, 161, 162, 163, 165, 167, 171, 179, 182, 183, 195, 197, 199, 201, 202, 203, 206, 207, 208, 209, 210, 227, 229, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 268, 269, 270, 272, 273, 274, 275, 276, 278, 280, 284, 286, 287, 288, 289, 290, 294, 304, 305, 312, 315, 325, 331, 334, 335, 338, 347, 348, 349, 350, 351, 352, 354, 359, 360, 362, 365], "list": [1, 2, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 71, 72, 73, 74, 75, 76, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 113, 121, 122, 126, 128, 131, 139, 141, 143, 145, 153, 155, 161, 163, 165, 167, 169, 171, 179, 182, 183, 185, 191, 194, 197, 201, 203, 206, 207, 213, 218, 236, 240, 243, 244, 246, 248, 249, 250, 271, 276, 283, 286, 289, 304, 318, 319, 336, 337, 342, 347, 349, 351, 352, 353, 354, 358, 360, 361, 362, 364, 365], "constructor": [1, 2, 15, 17, 18, 19, 20, 37, 44, 57, 65, 77, 86, 90, 101, 104, 110, 111, 119, 162, 182, 183, 203, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 331, 335, 338, 342, 347, 348, 349, 351, 354, 359, 362], "iter": [1, 2, 3, 11, 14, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 68, 72, 82, 83, 86, 90, 95, 96, 104, 110, 133, 141, 154, 171, 182, 183, 203, 208, 209, 222, 229, 235, 242, 243, 245, 247, 248, 250, 271, 283, 318, 321, 322, 331, 343, 344, 347, 349, 350, 354, 356, 359, 360], "execut": [1, 2, 3, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 36, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 87, 90, 91, 92, 94, 95, 96, 100, 101, 104, 107, 110, 117, 163, 171, 195, 197, 199, 201, 237, 240, 247, 248, 326, 338, 342, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 359, 362, 363, 365], "step": [1, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 51, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 117, 122, 135, 138, 141, 157, 158, 159, 160, 163, 168, 171, 179, 180, 181, 193, 195, 197, 199, 201, 202, 204, 205, 233, 237, 238, 240, 241, 242, 246, 255, 265, 273, 285, 286, 287, 288, 289, 292, 293, 294, 304, 307, 313, 318, 322, 344, 348, 350, 352, 353, 355, 356, 358, 360, 361, 364], "queri": [1, 3, 13, 31, 33, 35, 38, 86, 90, 104, 110, 145, 162, 165, 169, 171, 248, 347, 353, 360, 364], "defin": [1, 2, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 86, 90, 104, 110, 146, 158, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 259, 261, 271, 286, 287, 288, 289, 290, 304, 335, 347, 348, 350, 353, 356, 360, 362, 365], "number": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 122, 123, 130, 136, 140, 141, 152, 157, 160, 163, 169, 171, 181, 182, 183, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 212, 213, 214, 217, 219, 220, 223, 224, 225, 226, 229, 233, 234, 237, 238, 240, 241, 242, 245, 246, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 272, 273, 274, 275, 276, 278, 313, 315, 318, 322, 324, 325, 326, 336, 337, 338, 342, 347, 348, 349, 350, 351, 352, 354, 356, 359, 360, 361, 362, 365], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 44, 56, 72, 77, 86, 90, 104, 110, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 171, 172, 195, 197, 201, 203, 210, 211, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 287, 288, 289, 319, 347, 349, 350, 354, 355, 359, 360, 362, 365], "deliv": [1, 2, 3, 15, 57, 347, 348, 351, 354, 364], "stack": [1, 2, 3, 7, 8, 13, 14, 17, 19, 20, 27, 28, 33, 34, 35, 37, 38, 40, 41, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 86, 90, 99, 104, 105, 106, 110, 169, 195, 197, 199, 200, 201, 240, 247, 248, 304, 313, 342, 348, 351, 358, 360, 362, 364], "user": [1, 2, 3, 5, 8, 31, 51, 53, 57, 59, 74, 86, 90, 104, 110, 124, 158, 163, 171, 172, 189, 202, 273, 276, 305, 335, 343, 344, 347, 348, 351, 353, 354, 360, 364, 365], "reach": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 39, 72, 86, 90, 104, 110, 111, 112, 157, 233, 237, 238, 241, 347, 349, 356, 359, 364, 365], "done": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 123, 128, 129, 131, 132, 133, 140, 141, 143, 147, 148, 150, 152, 154, 157, 159, 160, 162, 163, 169, 171, 179, 180, 181, 195, 197, 201, 205, 240, 255, 256, 257, 258, 259, 261, 262, 263, 269, 270, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 331, 343, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "state": [1, 2, 3, 4, 13, 14, 15, 16, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 104, 105, 106, 107, 108, 109, 110, 119, 122, 123, 124, 126, 132, 141, 148, 157, 158, 162, 163, 169, 171, 172, 179, 180, 181, 184, 189, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 213, 216, 217, 219, 220, 226, 230, 240, 245, 251, 255, 257, 261, 270, 271, 273, 274, 275, 276, 284, 285, 286, 287, 288, 289, 290, 338, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 359, 360, 365], "after": [1, 2, 3, 8, 13, 14, 16, 17, 19, 20, 25, 31, 39, 51, 68, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 179, 195, 197, 201, 210, 233, 235, 237, 243, 266, 276, 348, 349, 350, 351, 352, 354, 356, 359, 360, 361, 362, 365], "predefin": [1, 348, 350, 354, 362], "becaus": [1, 3, 4, 7, 33, 35, 38, 39, 51, 86, 90, 104, 110, 132, 139, 157, 162, 168, 171, 188, 202, 209, 229, 235, 236, 240, 242, 243, 244, 245, 246, 347, 348, 350, 352, 353, 354, 358, 359, 360, 362, 365], "potenti": [1, 2, 360, 362], "comput": [1, 3, 4, 8, 13, 15, 20, 26, 31, 39, 82, 83, 86, 90, 95, 96, 104, 110, 141, 155, 163, 166, 171, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 212, 213, 214, 215, 216, 219, 220, 222, 224, 225, 227, 230, 233, 234, 236, 237, 240, 241, 242, 244, 246, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 326, 343, 347, 349, 350, 351, 352, 358, 359, 361, 362], "heavi": [1, 8, 51, 362], "crucial": [1, 2, 233, 237, 238, 241, 262, 269, 271, 347, 348, 349, 350, 351, 353, 355, 359, 360, 365], "configur": [1, 8, 20, 21, 39, 139, 184, 189, 216, 271, 273, 331, 342, 347, 348, 349, 353, 359, 360], "hyperparamet": [1, 71, 171, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 347, 360, 362], "appropri": [1, 3, 4, 7, 61, 69, 77, 78, 80, 81, 104, 110, 132, 335, 338, 347, 355, 362], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 335, 336, 337, 338, 342, 343, 347, 350, 352, 356, 359, 360, 361, 364], "take": [1, 2, 3, 8, 22, 39, 54, 82, 83, 86, 90, 95, 96, 104, 110, 126, 157, 160, 162, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 249, 252, 254, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 324, 342, 344, 347, 348, 349, 351, 352, 353, 359, 360, 362, 365], "consider": [1, 2, 3, 8, 348, 359, 362], "whether": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 105, 106, 110, 111, 112, 119, 128, 131, 158, 163, 171, 180, 182, 183, 197, 201, 203, 250, 255, 256, 257, 258, 259, 261, 263, 264, 270, 271, 273, 274, 275, 276, 278, 284, 286, 289, 347, 348, 349, 351, 359, 360, 365], "should": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 73, 74, 75, 77, 84, 85, 86, 89, 90, 91, 92, 99, 100, 104, 105, 106, 110, 111, 112, 119, 120, 123, 126, 127, 128, 129, 132, 133, 135, 139, 141, 146, 147, 148, 150, 153, 154, 157, 158, 160, 162, 163, 168, 169, 171, 172, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 242, 244, 245, 246, 249, 252, 255, 257, 263, 268, 270, 271, 273, 274, 275, 277, 285, 286, 287, 288, 289, 290, 305, 307, 317, 318, 319, 322, 334, 336, 337, 338, 342, 344, 347, 348, 349, 350, 352, 354, 355, 358, 359, 360, 361, 362, 364, 365], "occur": [1, 8, 14, 27, 28, 51, 86, 90, 92, 104, 110, 124, 141, 146, 168, 180, 229, 235, 236, 242, 243, 244, 245, 246, 266, 362, 365], "serial": [1, 2, 3, 31, 86, 90, 104, 110, 169, 171], "parallel": [1, 3, 8, 86, 89, 90, 91, 104, 105, 106, 110, 163, 168, 172, 255, 335, 336, 337, 338, 348, 349, 359], "syncdatacollector": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 31, 120, 123, 150, 334, 337, 340, 347, 348, 349, 350, 354, 356, 359, 362], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 99, 100, 103, 104, 105, 106, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 336, 337, 338, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 359, 362, 365], "worker": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 33, 35, 38, 44, 54, 59, 60, 87, 101, 104, 110, 169, 336, 337, 338, 347, 349, 364, 365], "multisyncdatacollector": [1, 14, 17, 18, 19, 20, 337, 340, 349, 354, 364], "split": [1, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 73, 74, 99, 105, 106, 195, 199, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 342, 344, 349, 352, 362, 364], "workload": 1, "across": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 37, 40, 41, 66, 73, 74, 82, 83, 84, 85, 89, 91, 92, 94, 95, 96, 101, 102, 104, 107, 169, 171, 208, 241, 324, 340, 342, 347, 351, 355, 359, 360], "aggreg": [1, 3, 51, 77, 105, 106, 180, 182, 183, 185, 186, 248], "result": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 87, 90, 104, 110, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 179, 180, 195, 197, 199, 201, 203, 208, 218, 234, 236, 237, 244, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 286, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 324, 342, 348, 350, 351, 352, 355, 356, 360, 361, 364, 365], "final": [1, 2, 3, 4, 20, 33, 35, 38, 39, 168, 195, 197, 199, 201, 208, 233, 237, 238, 239, 241, 247, 286, 318, 342, 347, 348, 349, 355, 356, 359, 360, 365], "multiasyncdatacollector": [1, 16, 17, 18, 19, 20, 336, 340, 347, 348, 349, 354, 364], "sever": [1, 2, 8, 29, 31, 44, 54, 86, 90, 104, 110, 124, 126, 163, 171, 273, 347, 349, 355, 356, 362, 365], "gather": [1, 3, 17, 19, 20, 44, 60, 62, 63, 79, 146, 207, 215, 285, 326, 341, 348, 349, 350, 354, 359, 360, 362, 365], "continu": [1, 9, 24, 45, 74, 86, 90, 104, 105, 106, 110, 111, 112, 176, 185, 186, 187, 188, 241, 248, 255, 256, 263, 269, 273, 274, 275, 276, 277, 278, 286, 291, 299, 342, 347, 349, 350, 352, 359, 360, 362, 364, 365], "concomitantli": 1, "network": [1, 4, 8, 31, 86, 90, 99, 104, 105, 106, 110, 171, 182, 183, 185, 186, 187, 188, 191, 193, 194, 199, 203, 208, 209, 211, 213, 214, 217, 219, 220, 221, 226, 230, 231, 232, 234, 245, 249, 256, 257, 258, 259, 261, 262, 263, 264, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 282, 284, 286, 287, 288, 289, 290, 333, 334, 342, 343, 344, 353, 356, 358, 360, 365], "impli": [1, 365], "weight": [1, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 39, 66, 68, 71, 82, 83, 86, 90, 104, 108, 109, 110, 127, 145, 159, 162, 163, 165, 167, 171, 195, 196, 197, 199, 200, 201, 208, 211, 245, 255, 256, 257, 263, 266, 276, 324, 333, 342, 344, 347, 348, 349, 350, 358, 360, 362, 364], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 31, 33, 35, 38, 53, 59, 86, 89, 90, 91, 92, 104, 107, 110, 139, 141, 154, 163, 164, 169, 171, 172, 203, 208, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 359, 360, 361, 362, 364, 365], "slightli": [1, 51, 342, 343, 350, 360, 361, 362, 365], "lag": [1, 347, 348, 349], "therefor": [1, 2, 3, 7, 34, 37, 40, 41, 58, 59, 86, 90, 104, 110, 150, 273, 284, 353, 365], "fastest": 1, "price": [1, 2], "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 99, 100, 103, 104, 105, 106, 110, 117, 120, 123, 132, 139, 145, 150, 153, 157, 158, 160, 162, 164, 167, 168, 179, 180, 195, 196, 199, 200, 202, 206, 207, 208, 233, 237, 238, 241, 242, 245, 246, 254, 255, 256, 257, 262, 263, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 343, 344, 347, 348, 349, 351, 358, 359, 360, 362, 365], "asynchron": [1, 9, 14, 20, 31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 255, 336, 347, 348, 349], "off": [1, 2, 4, 198, 225, 235, 276, 318, 327, 342, 344, 347, 348, 349, 352, 353, 359, 361, 365], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 79, 86, 90, 104, 105, 106, 110, 111, 128, 131, 135, 141, 158, 163, 168, 171, 172, 192, 195, 197, 199, 201, 209, 210, 230, 232, 234, 236, 243, 255, 262, 264, 269, 273, 318, 342, 344, 347, 348, 349, 350, 351, 352, 354, 355, 359, 360, 361, 362, 365], "remot": [1, 2, 17, 18, 19, 20, 104, 110, 365], "rollout": [1, 2, 3, 13, 14, 15, 16, 20, 22, 39, 77, 82, 83, 86, 90, 92, 93, 95, 96, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 123, 126, 128, 131, 132, 133, 139, 143, 147, 148, 153, 154, 155, 157, 158, 160, 171, 172, 181, 197, 201, 205, 240, 241, 255, 305, 326, 342, 347, 349, 350, 352, 353, 354, 355, 356, 361, 362, 364], "necessari": [1, 4, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 111, 112, 154, 274, 286, 287, 288, 289, 290, 343, 347, 349, 352, 353, 354], "synchronis": [1, 87, 359], "either": [1, 2, 5, 21, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 86, 90, 104, 110, 157, 158, 171, 251, 278, 309, 344, 347, 348, 350, 361, 362, 364, 365], "update_policy_weights_": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 347, 359, 364], "update_at_each_batch": [1, 13, 14, 16], "true": [1, 2, 3, 4, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 122, 123, 124, 127, 130, 135, 138, 139, 140, 141, 145, 146, 148, 149, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 167, 169, 171, 172, 176, 179, 180, 181, 182, 183, 185, 186, 187, 188, 194, 195, 196, 197, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 224, 225, 229, 230, 231, 232, 233, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 286, 287, 288, 289, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 312, 315, 316, 318, 319, 322, 338, 342, 343, 344, 347, 348, 349, 350, 351, 352, 355, 356, 358, 359, 360, 361, 362, 364, 365], "second": [1, 3, 8, 51, 54, 77, 120, 195, 197, 199, 201, 236, 257, 270, 273, 276, 307, 321, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 127, 128, 129, 131, 132, 133, 139, 143, 144, 145, 147, 148, 150, 154, 157, 159, 161, 162, 163, 165, 167, 171, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 216, 217, 218, 226, 229, 230, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 319, 324, 331, 332, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364], "oper": [1, 2, 3, 4, 7, 8, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 43, 44, 45, 46, 66, 73, 86, 90, 104, 110, 120, 135, 139, 162, 171, 191, 192, 196, 200, 212, 230, 231, 232, 235, 236, 239, 245, 251, 255, 257, 258, 259, 264, 270, 273, 275, 284, 285, 286, 287, 288, 289, 322, 331, 340, 344, 347, 348, 349, 350, 351, 352, 358, 359, 360, 365], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 85, 86, 87, 90, 100, 104, 110, 123, 141, 159, 162, 163, 169, 171, 176, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 247, 248, 249, 252, 259, 262, 263, 271, 284, 286, 287, 288, 289, 305, 309, 318, 326, 327, 328, 331, 334, 336, 337, 342, 343, 344, 347, 349, 350, 351, 352, 360, 362, 365], "cpu": [1, 2, 3, 8, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 31, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 127, 128, 129, 131, 132, 133, 143, 145, 147, 148, 150, 154, 157, 159, 162, 163, 165, 167, 171, 176, 179, 181, 191, 195, 196, 197, 199, 200, 201, 205, 210, 211, 217, 218, 226, 229, 230, 231, 232, 234, 235, 236, 240, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 319, 331, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "slower": [1, 202], "than": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 53, 57, 66, 73, 74, 76, 77, 86, 90, 94, 104, 107, 110, 148, 188, 197, 199, 201, 203, 212, 227, 229, 233, 235, 245, 250, 271, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 341, 343, 347, 348, 349, 351, 353, 354, 359, 360, 362, 364, 365], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 66, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 120, 123, 126, 128, 129, 130, 131, 140, 141, 145, 150, 153, 156, 158, 159, 160, 162, 163, 164, 167, 169, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 209, 212, 213, 214, 215, 216, 218, 219, 220, 222, 227, 229, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 269, 270, 271, 273, 274, 275, 276, 277, 278, 284, 286, 287, 288, 289, 293, 294, 307, 315, 317, 318, 322, 326, 331, 338, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 365], "cuda": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 92, 93, 94, 104, 110, 127, 139, 144, 145, 159, 162, 163, 165, 167, 171, 195, 196, 199, 200, 245, 314, 347, 348, 349, 350, 359, 361, 365], "multipl": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 26, 42, 68, 82, 83, 95, 96, 104, 110, 124, 126, 130, 140, 150, 153, 157, 162, 169, 195, 199, 201, 202, 208, 210, 211, 229, 235, 242, 243, 245, 246, 249, 257, 263, 270, 273, 274, 278, 292, 331, 338, 342, 344, 347, 348, 349, 351, 353, 354, 359, 360, 362, 364], "infer": [1, 104, 110, 123, 169, 197, 201, 210, 234, 261, 347, 349, 354, 356, 362], "run": [1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 20, 31, 51, 54, 66, 73, 74, 82, 83, 84, 85, 86, 89, 90, 95, 96, 100, 101, 102, 104, 110, 140, 141, 163, 169, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 247, 248, 249, 252, 276, 305, 312, 318, 336, 337, 338, 341, 344, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364], "dispatch": [1, 17, 18, 19, 20, 227, 240, 305, 347], "avail": [1, 3, 4, 6, 20, 34, 37, 40, 41, 51, 54, 59, 66, 72, 73, 74, 84, 85, 94, 104, 105, 106, 107, 111, 112, 119, 122, 139, 192, 218, 242, 246, 271, 305, 336, 337, 342, 347, 348, 349, 350, 351, 352, 359, 360, 362, 365], "speed": [1, 2, 4, 8, 26, 86, 90, 104, 110, 343, 347, 348, 349, 350, 359, 360, 362], "avoid": [1, 2, 31, 62, 63, 79, 86, 90, 104, 110, 116, 163, 169, 171, 229, 245, 250, 257, 270, 273, 276, 325, 349, 359], "oom": [1, 33, 35, 38, 62, 63, 79], "choic": [1, 2, 53, 59, 104, 212, 342, 343, 347, 348, 353, 359], "pass": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 27, 31, 34, 37, 39, 40, 41, 44, 51, 54, 55, 57, 58, 59, 62, 63, 66, 68, 73, 74, 77, 79, 86, 87, 88, 90, 99, 101, 104, 105, 106, 110, 111, 119, 120, 128, 131, 148, 162, 164, 169, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 209, 210, 212, 213, 214, 216, 217, 219, 220, 222, 226, 227, 229, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 257, 270, 271, 273, 286, 287, 288, 289, 290, 319, 336, 337, 338, 342, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 362, 365], "ie": [1, 3, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 40, 43, 44, 45, 46, 57, 65, 74, 86, 90, 94, 103, 104, 110, 123, 135, 164, 169, 180, 197, 201, 234, 255, 257, 258, 262, 263, 269, 270, 273, 274, 275, 276, 278, 286, 287, 288, 289, 342, 343, 348, 359], "store": [1, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 77, 79, 86, 90, 104, 110, 168, 169, 171, 181, 202, 205, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 312, 331, 340, 344, 347, 349, 350, 352, 354, 356, 359, 361, 365], "while": [1, 2, 3, 7, 8, 31, 86, 90, 104, 110, 150, 163, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 262, 269, 270, 273, 276, 342, 347, 349, 350, 352, 354, 355, 359, 360, 361, 362, 364], "wait": [1, 19, 20, 21, 350, 360], "also": [1, 2, 3, 8, 9, 11, 13, 14, 22, 31, 33, 35, 37, 38, 40, 51, 54, 55, 57, 58, 59, 60, 62, 63, 66, 68, 73, 74, 77, 79, 86, 90, 104, 105, 106, 110, 111, 112, 116, 119, 120, 122, 123, 130, 141, 148, 150, 153, 154, 157, 159, 163, 171, 179, 182, 183, 195, 199, 220, 240, 242, 247, 248, 249, 255, 256, 258, 259, 261, 262, 263, 269, 273, 276, 286, 293, 294, 305, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 362, 365], "impact": [1, 57, 128, 131, 255, 257, 270, 273, 275, 348, 350, 359], "memori": [1, 3, 8, 20, 26, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 86, 87, 90, 94, 104, 110, 123, 127, 145, 159, 162, 163, 165, 167, 169, 171, 199, 200, 245, 338, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "manag": [1, 8, 282, 283, 286, 287, 288, 289, 318, 353], "kei": [1, 2, 3, 7, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 65, 66, 68, 71, 73, 74, 77, 86, 90, 95, 96, 104, 105, 106, 110, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 146, 147, 148, 150, 153, 154, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 179, 180, 181, 191, 192, 197, 201, 204, 205, 218, 229, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 305, 316, 317, 318, 320, 321, 322, 326, 331, 343, 344, 347, 349, 350, 351, 353, 358, 359, 360, 362, 364, 365], "control": [1, 3, 5, 8, 15, 84, 85, 86, 90, 99, 104, 105, 106, 110, 130, 179, 185, 186, 187, 188, 197, 201, 204, 205, 220, 227, 241, 245, 246, 247, 255, 257, 270, 273, 277, 286, 291, 299, 342, 344, 347, 348, 349, 351, 352, 353, 359, 360, 362], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 71, 72, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 101, 102, 104, 107, 110, 111, 112, 123, 124, 128, 131, 136, 139, 140, 141, 145, 146, 157, 159, 160, 162, 163, 165, 171, 172, 191, 195, 196, 198, 199, 200, 201, 206, 207, 208, 225, 230, 231, 232, 234, 240, 242, 245, 246, 248, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 281, 284, 286, 287, 288, 289, 305, 313, 317, 331, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 358, 359, 360, 361, 362, 365], "storing_devic": [1, 13, 14, 15, 16, 17, 18, 19, 20, 348, 359], "dure": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 34, 35, 37, 39, 40, 41, 44, 51, 53, 54, 55, 56, 57, 58, 59, 60, 64, 66, 68, 71, 73, 86, 90, 104, 105, 106, 110, 119, 120, 123, 126, 128, 131, 136, 143, 155, 163, 171, 197, 201, 209, 286, 288, 289, 318, 322, 343, 347, 348, 349, 350, 352, 353, 354, 356, 359, 360, 362, 365], "heurist": [1, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 240, 241, 347, 354, 365], "usual": [1, 2, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 53, 71, 77, 82, 83, 86, 90, 95, 96, 104, 110, 211, 273, 286, 287, 288, 289, 290, 304, 331, 341, 342, 344, 347, 348, 349, 350, 352, 354, 355, 359, 362, 365], "same": [1, 2, 3, 4, 11, 15, 17, 18, 19, 20, 25, 27, 28, 31, 33, 35, 38, 42, 44, 53, 57, 72, 73, 76, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 123, 128, 130, 131, 136, 140, 141, 162, 163, 169, 171, 182, 183, 196, 197, 200, 201, 203, 206, 207, 208, 209, 234, 241, 249, 276, 347, 348, 349, 351, 352, 354, 358, 359, 361, 362, 365], "default": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 77, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 128, 130, 131, 132, 135, 139, 140, 141, 143, 145, 146, 150, 152, 153, 154, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 222, 223, 224, 225, 229, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 249, 250, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 334, 338, 344, 347, 348, 349, 350, 352, 361, 362, 364, 365], "behaviour": [1, 3, 13, 14, 20, 57, 90, 124, 128, 131, 141, 146, 158, 179, 197, 198, 201, 225, 318, 342, 348, 362], "besid": 1, "those": [1, 2, 3, 5, 7, 25, 27, 86, 90, 104, 110, 123, 128, 131, 141, 159, 160, 201, 242, 246, 247, 248, 324, 336, 337, 342, 347, 348, 351, 352, 359, 360, 365], "choos": [1, 99, 197, 201, 273, 340, 342, 343, 347, 348, 349, 359, 362], "follow": [1, 2, 3, 6, 7, 8, 31, 33, 35, 36, 38, 39, 51, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 86, 90, 95, 96, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 119, 139, 145, 165, 171, 182, 183, 195, 197, 199, 201, 203, 236, 243, 244, 254, 255, 256, 257, 258, 262, 263, 269, 270, 273, 274, 275, 276, 278, 305, 322, 331, 342, 343, 344, 347, 348, 349, 350, 353, 354, 358, 359, 360, 362, 364, 365], "max_frames_per_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 325, 347, 349, 364], "frame": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 123, 136, 171, 233, 237, 240, 241, 304, 305, 307, 315, 318, 322, 325, 326, 347, 348, 349, 350, 352, 359, 362, 364, 365], "call": [1, 2, 3, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 72, 73, 75, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 103, 104, 107, 110, 119, 120, 123, 126, 127, 130, 135, 138, 139, 141, 143, 144, 145, 153, 155, 159, 162, 163, 165, 167, 168, 169, 171, 172, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 209, 210, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 238, 240, 241, 244, 245, 246, 248, 249, 252, 257, 270, 273, 276, 285, 286, 287, 288, 289, 304, 318, 344, 348, 349, 350, 351, 352, 354, 355, 359, 360, 362, 364, 365], "frames_per_batch": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 120, 123, 150, 325, 347, 348, 349, 350, 354, 356, 359, 362, 364], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 31, 37, 39, 40, 51, 53, 54, 57, 68, 71, 73, 74, 77, 86, 87, 90, 104, 105, 106, 110, 111, 112, 145, 150, 153, 157, 158, 159, 160, 167, 169, 171, 192, 195, 196, 197, 199, 201, 208, 209, 213, 217, 218, 226, 233, 235, 236, 237, 244, 248, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 318, 319, 336, 337, 342, 347, 348, 349, 350, 352, 353, 354, 356, 359, 360, 361, 362, 364, 365], "init_random_fram": [1, 13, 14, 15, 16, 17, 18, 19, 20, 325, 347, 348, 356], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 39, 43, 45, 46, 57, 59, 67, 77, 86, 90, 100, 104, 110, 130, 140, 141, 159, 172, 195, 197, 199, 201, 237, 242, 245, 246, 256, 274, 318, 326, 342, 347, 348, 349, 350, 351, 352, 354, 360, 361, 362, 364, 365], "rand_step": [1, 3, 84, 85, 86, 87, 89, 90, 91, 97, 98, 100, 101, 102, 104, 110, 138, 159, 169, 360, 364, 365], "reset_at_each_it": [1, 13, 14, 15, 16, 17, 18, 19, 20, 347], "split_traj": [1, 13, 14, 15, 16, 17, 18, 19, 20, 53, 55, 57, 58, 59, 347, 348, 349], "trajectori": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 22, 31, 40, 51, 53, 54, 55, 57, 58, 59, 65, 66, 73, 74, 77, 82, 83, 86, 90, 95, 96, 104, 110, 146, 157, 162, 171, 181, 201, 205, 241, 273, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 313, 340, 343, 347, 348, 349, 350, 351, 354, 356, 360, 364, 365], "pad": [1, 2, 3, 22, 36, 42, 53, 55, 57, 58, 59, 123, 182, 183, 185, 186, 201, 202, 206, 207, 208, 319], "along": [1, 2, 3, 13, 14, 22, 27, 28, 33, 35, 38, 39, 44, 53, 55, 57, 58, 59, 63, 66, 68, 73, 74, 77, 79, 122, 123, 124, 141, 143, 146, 153, 161, 201, 203, 206, 207, 211, 235, 242, 245, 246, 271, 342, 347, 348, 350, 351, 353, 359, 360, 362], "point": [1, 2, 3, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 56, 61, 65, 66, 69, 77, 78, 80, 81, 86, 90, 104, 110, 119, 122, 123, 127, 145, 158, 159, 161, 162, 163, 165, 167, 171, 204, 245, 254, 264, 322, 341, 348, 349, 358, 359, 360, 362, 365], "boolean": [1, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 66, 73, 74, 90, 119, 146, 157, 180, 206, 207, 233, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 344, 350], "repres": [1, 2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 40, 55, 84, 85, 86, 90, 104, 110, 111, 112, 136, 146, 169, 171, 192, 206, 207, 218, 235, 236, 243, 244, 246, 281, 286, 319, 347, 349, 350, 351, 352, 353, 359], "valid": [1, 2, 3, 22, 33, 35, 36, 44, 60, 77, 113, 119, 146, 163, 171, 182, 183, 203, 206, 207, 233, 241, 270, 286, 287, 288, 289, 319, 344, 365], "exploration_typ": [1, 13, 14, 15, 16, 17, 18, 19, 20, 318, 340, 347, 348], "strategi": [1, 2, 15, 57, 71, 99, 207, 215, 237, 342, 344, 347, 348, 352, 359, 362], "reset_when_don": [1, 13, 14, 15, 16], "its": [1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 43, 45, 46, 48, 68, 86, 90, 100, 104, 105, 106, 110, 111, 113, 120, 122, 123, 132, 139, 157, 158, 162, 163, 168, 169, 171, 182, 183, 206, 207, 208, 209, 233, 235, 242, 243, 246, 249, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 305, 322, 334, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 365], "organ": [1, 2, 360, 362], "within": [1, 2, 13, 14, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 107, 110, 120, 123, 128, 131, 132, 150, 157, 168, 169, 171, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 259, 264, 284, 305, 342, 348, 351, 352, 353, 354, 355, 356, 360, 364], "differ": [1, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 44, 45, 46, 53, 54, 57, 71, 82, 83, 86, 90, 95, 96, 99, 104, 105, 106, 110, 119, 123, 130, 141, 148, 163, 164, 171, 192, 195, 196, 197, 199, 200, 201, 203, 205, 208, 209, 218, 269, 273, 281, 286, 287, 288, 292, 293, 294, 318, 322, 324, 336, 337, 342, 343, 344, 347, 348, 349, 351, 353, 355, 358, 359, 360, 361, 362, 365], "how": [1, 2, 3, 17, 18, 19, 31, 34, 40, 57, 65, 66, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 105, 106, 107, 110, 111, 112, 171, 255, 257, 268, 270, 273, 305, 307, 322, 341, 342, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 364, 365], "tabl": [1, 342, 348, 352], "summar": [1, 3, 360], "what": [1, 3, 8, 34, 43, 51, 86, 90, 104, 110, 132, 159, 172, 179, 243, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 364, 365], "expect": [1, 2, 3, 4, 7, 25, 31, 37, 43, 44, 66, 72, 73, 86, 90, 100, 103, 104, 110, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 141, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 195, 196, 197, 199, 200, 201, 208, 209, 236, 241, 245, 248, 255, 256, 257, 258, 259, 261, 262, 263, 269, 270, 271, 273, 274, 275, 276, 278, 284, 326, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 354, 359, 360, 362, 365], "n": [1, 2, 3, 6, 7, 23, 26, 31, 32, 39, 86, 90, 104, 110, 123, 130, 135, 164, 171, 195, 196, 199, 205, 240, 241, 246, 255, 263, 271, 285, 319, 342, 344, 348, 350, 352, 359, 362, 365], "b": [1, 2, 3, 7, 8, 22, 25, 27, 33, 35, 37, 38, 39, 40, 41, 77, 195, 196, 199, 200, 208, 209, 210, 211, 217, 226, 249, 286, 287, 288, 289, 290, 292, 305, 342, 348, 361, 362], "cat_result": [1, 13, 14], "na": 1, "0": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 16, 20, 21, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 79, 82, 83, 86, 89, 90, 92, 93, 95, 96, 100, 101, 102, 104, 107, 108, 109, 110, 117, 119, 121, 123, 124, 126, 127, 129, 130, 139, 140, 141, 145, 150, 153, 155, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 171, 181, 182, 183, 185, 186, 187, 188, 189, 193, 194, 195, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 215, 219, 220, 223, 224, 225, 227, 229, 233, 234, 236, 237, 238, 241, 244, 245, 248, 249, 252, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 284, 285, 286, 287, 288, 289, 292, 293, 294, 313, 320, 334, 338, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365], "t": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 72, 77, 86, 87, 89, 90, 101, 102, 104, 110, 119, 123, 128, 131, 132, 145, 149, 150, 158, 160, 167, 169, 171, 172, 179, 195, 199, 235, 241, 245, 277, 286, 287, 288, 289, 290, 292, 305, 312, 322, 324, 338, 341, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "p": [1, 2, 4, 68, 71, 87, 108, 109], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 51, 53, 55, 57, 58, 59, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 127, 128, 129, 131, 145, 150, 154, 158, 159, 161, 162, 163, 165, 167, 168, 171, 195, 198, 199, 203, 208, 220, 224, 225, 245, 248, 254, 255, 256, 258, 259, 261, 262, 263, 269, 271, 273, 274, 275, 276, 278, 324, 336, 337, 338, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 365], "case": [1, 3, 4, 5, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 77, 86, 90, 104, 110, 128, 129, 131, 161, 163, 172, 201, 203, 209, 242, 245, 246, 248, 249, 254, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 286, 287, 288, 289, 305, 313, 324, 336, 337, 338, 340, 342, 344, 347, 348, 349, 350, 351, 352, 354, 355, 359, 360, 362, 365], "dimens": [1, 2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 43, 44, 45, 46, 53, 55, 57, 58, 59, 62, 63, 66, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 104, 110, 111, 112, 122, 123, 124, 135, 141, 143, 146, 153, 156, 161, 164, 169, 182, 183, 184, 189, 197, 199, 201, 203, 206, 207, 208, 210, 211, 216, 217, 221, 222, 223, 224, 227, 235, 240, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 338, 342, 347, 348, 349, 350, 351, 359, 360, 362], "time": [1, 2, 3, 4, 7, 8, 13, 14, 15, 17, 18, 19, 20, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 86, 87, 90, 95, 96, 99, 103, 104, 105, 106, 107, 110, 116, 122, 124, 146, 153, 159, 160, 163, 169, 171, 179, 193, 195, 199, 201, 202, 240, 241, 257, 263, 266, 270, 271, 273, 274, 278, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 322, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "adapt": [1, 117, 157, 270, 347, 360], "equal": [1, 13, 14, 16, 51, 66, 73, 74, 101, 104, 110, 140, 141, 182, 183, 195, 197, 199, 201, 203, 209, 277, 281, 313, 336, 337, 347, 349, 361], "introduc": [1, 2, 104, 110, 195, 197, 199, 201, 241, 347], "some": [1, 2, 3, 4, 7, 8, 9, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 37, 43, 44, 45, 46, 53, 59, 62, 63, 68, 77, 79, 82, 83, 86, 90, 95, 96, 104, 105, 106, 110, 111, 112, 119, 145, 163, 165, 171, 172, 185, 197, 201, 222, 246, 247, 248, 305, 313, 325, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 359, 360, 362, 364, 365], "confus": [1, 31, 86, 90, 104, 110, 163, 171], "other": [1, 2, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 31, 33, 34, 35, 38, 40, 41, 44, 51, 53, 55, 57, 58, 59, 62, 63, 64, 68, 71, 72, 73, 74, 75, 76, 79, 86, 89, 90, 91, 100, 104, 110, 126, 129, 130, 147, 154, 161, 165, 169, 171, 195, 197, 201, 211, 212, 234, 236, 237, 244, 246, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 319, 331, 336, 337, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 359, 360, 361, 364, 365], "better": [1, 3, 8, 9, 13, 14, 197, 201, 343, 349, 351, 360], "consist": [1, 2, 3, 31, 34, 37, 40, 41, 54, 57, 86, 90, 104, 110, 139, 168, 171, 183, 203, 347, 348, 349, 360, 361, 365], "interact": [1, 2, 4, 5, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 57, 86, 90, 104, 110, 163, 242, 246, 347, 349, 351, 352, 354, 359, 360, 365], "keep": [1, 3, 4, 7, 8, 14, 34, 37, 40, 41, 72, 77, 104, 110, 141, 145, 167, 169, 171, 179, 241, 315, 322, 347, 348, 349, 350, 354, 355, 356, 359, 360, 362, 364, 365], "separ": [1, 2, 4, 8, 13, 14, 16, 17, 19, 20, 22, 51, 54, 145, 167, 256, 258, 261, 263, 274, 276, 278, 347, 348, 352, 353, 359, 362, 365], "interchang": [1, 349, 351, 355, 361, 362], "between": [1, 2, 3, 4, 5, 13, 14, 16, 20, 31, 33, 34, 35, 37, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 72, 73, 74, 86, 90, 104, 110, 111, 112, 130, 140, 151, 163, 171, 172, 182, 183, 191, 195, 197, 201, 203, 208, 209, 236, 242, 246, 255, 257, 258, 261, 262, 263, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 281, 286, 318, 322, 343, 347, 348, 350, 354, 359, 360, 362, 365], "wherea": [1, 2, 21, 57, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 130, 171, 271, 344, 355], "correspond": [1, 2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 46, 54, 57, 59, 65, 66, 86, 90, 100, 104, 110, 145, 159, 163, 167, 169, 171, 197, 199, 201, 206, 207, 237, 238, 241, 242, 246, 259, 262, 263, 276, 284, 286, 287, 288, 289, 290, 347, 348, 349, 351, 353, 354, 355, 359, 360, 361], "sub": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 51, 57, 66, 73, 77, 86, 90, 104, 110, 146, 247, 248, 313, 322, 342, 347, 348, 349, 354, 358, 364, 365], "doesn": [1, 4, 11, 77, 101, 128, 131, 351], "understood": [1, 347], "serv": [1, 17, 19, 20, 92, 362, 365], "basi": [1, 77, 208, 362], "simplest": [1, 77, 249, 347, 349, 350, 352, 359, 362, 365], "scenario": [1, 2, 104, 111, 112, 347, 352, 359, 360], "transit": [1, 31, 53, 57, 74, 77, 86, 90, 104, 110, 171, 251, 347, 350, 351, 352, 354, 360, 362], "sampl": [1, 4, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 39, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 79, 86, 90, 100, 103, 104, 110, 122, 123, 146, 150, 173, 174, 177, 178, 181, 190, 198, 205, 206, 207, 215, 216, 219, 224, 225, 229, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 255, 256, 257, 258, 259, 261, 270, 272, 273, 278, 313, 319, 322, 325, 340, 342, 347, 348, 349, 350, 351, 352, 354, 356, 359, 361, 364, 365], "attent": [1, 2, 8, 347, 350, 365], "given": [1, 2, 3, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 86, 90, 100, 104, 110, 127, 130, 141, 145, 159, 162, 163, 165, 167, 171, 179, 181, 192, 193, 195, 199, 205, 218, 222, 229, 235, 236, 237, 240, 241, 244, 245, 246, 247, 248, 250, 254, 258, 259, 261, 285, 286, 287, 288, 289, 290, 292, 314, 318, 334, 342, 344, 347, 348, 349, 351, 352, 353, 354, 355, 359, 360, 365], "built": [1, 2, 3, 5, 7, 68, 82, 83, 89, 95, 96, 103, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 279, 284, 332, 334, 335, 338, 347, 348, 349, 350, 353, 355, 362, 365], "flatten": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 77, 120, 135, 319, 350, 359], "suffici": [1, 3, 4, 347], "preprocess": [1, 2, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 348], "popul": [1, 2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 138, 159, 347, 349, 350, 352, 354, 360, 362], "replaybuff": [1, 2, 34, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 80, 123, 146, 150, 171, 259, 264, 284, 332, 334, 340, 349, 354, 356, 359, 361, 362, 364], "lazytensorstorag": [1, 2, 34, 37, 40, 41, 65, 77, 150, 171, 349, 356, 359, 362], "lambda": [1, 2, 11, 13, 14, 15, 16, 20, 21, 37, 77, 86, 87, 90, 104, 110, 116, 120, 139, 159, 171, 227, 235, 240, 243, 265, 267, 286, 289, 297, 298, 302, 303, 334, 343, 347, 348, 359, 362, 364, 365], "reshap": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 73, 77, 120, 197, 201, 203, 349, 359], "extend": [1, 2, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 68, 69, 73, 74, 76, 77, 78, 80, 81, 122, 150, 171, 319, 344, 347, 348, 349, 350, 354, 356, 359, 361, 362, 364], "slice": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 122, 362], "recommend": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 77, 94, 354, 359], "achiev": [1, 2, 3, 4, 31, 86, 90, 94, 104, 110, 158, 171, 180, 319, 344, 347, 348, 349, 350, 359, 360, 362, 365], "creat": [1, 2, 3, 4, 5, 6, 7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 44, 57, 59, 60, 77, 86, 87, 90, 94, 104, 105, 110, 111, 112, 120, 123, 145, 162, 163, 165, 168, 169, 171, 176, 179, 182, 183, 185, 186, 187, 188, 189, 194, 197, 201, 203, 204, 208, 209, 234, 246, 259, 264, 274, 276, 284, 305, 319, 326, 327, 328, 334, 336, 337, 342, 347, 348, 349, 350, 352, 355, 359, 360, 361, 362, 364, 365], "multidimension": [1, 2, 40, 65, 66, 362], "slicesampl": [1, 2, 51, 66, 362], "sampler": [1, 2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 146, 259, 264, 284, 347, 349, 359, 362], "One": [1, 2, 4, 8, 30, 32, 44, 77, 82, 83, 104, 110, 123, 150, 165, 215, 233, 245, 249, 277, 281, 309, 347, 348, 362, 365], "must": [1, 2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 68, 73, 74, 75, 76, 77, 79, 82, 86, 87, 90, 95, 104, 105, 106, 107, 110, 111, 119, 120, 123, 126, 132, 136, 139, 141, 143, 154, 158, 159, 160, 163, 164, 169, 171, 182, 183, 192, 197, 201, 203, 206, 207, 208, 209, 218, 229, 235, 236, 240, 242, 243, 244, 245, 246, 249, 250, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 277, 278, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 347, 348, 349, 350, 352, 358, 360, 362], "ensur": [1, 2, 3, 31, 34, 40, 65, 66, 72, 86, 90, 104, 110, 123, 145, 157, 163, 165, 169, 171, 235, 342, 348, 349, 360, 362], "shape": [1, 2, 3, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 68, 77, 79, 84, 85, 86, 89, 90, 91, 95, 96, 99, 103, 104, 105, 106, 108, 109, 110, 111, 112, 120, 122, 124, 128, 131, 132, 133, 139, 141, 143, 147, 148, 150, 154, 157, 159, 161, 169, 170, 171, 172, 176, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 223, 226, 229, 230, 231, 232, 234, 235, 236, 240, 242, 243, 244, 245, 248, 249, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 313, 319, 322, 334, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 361, 362, 364, 365], "clearli": [1, 2], "practic": [1, 2, 3, 4, 5, 8, 51, 198, 224, 225, 254, 341, 347, 348, 349, 350, 353, 359, 361, 365], "need": [1, 2, 3, 4, 7, 8, 10, 11, 17, 18, 19, 20, 31, 33, 35, 75, 77, 86, 90, 94, 99, 104, 105, 106, 110, 123, 126, 135, 145, 148, 160, 163, 167, 169, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 210, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 243, 244, 245, 249, 252, 254, 263, 274, 275, 276, 278, 285, 290, 305, 322, 338, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 364, 365], "dimension": [1, 34, 37, 40, 41, 130, 197, 201, 286, 291, 299, 359], "num_slic": [1, 2, 51, 57, 66, 73, 74, 362], "4": [1, 2, 3, 7, 23, 25, 26, 27, 31, 32, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 73, 74, 79, 82, 83, 84, 85, 86, 90, 95, 96, 97, 98, 99, 100, 102, 104, 108, 109, 110, 117, 119, 120, 123, 132, 150, 157, 158, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 202, 203, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 226, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 304, 342, 346, 347, 348, 349, 350, 352, 354, 355, 359, 360, 361, 362, 363, 364, 365], "trajectory_kei": [1, 22], "traj_id": [1, 2, 3, 13, 14, 15, 22, 120, 150, 350, 354, 362, 364], "total_fram": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 120, 123, 150, 322, 325, 334, 344, 347, 348, 349, 350, 354, 356, 359, 362, 364], "dim": [1, 2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 123, 124, 143, 159, 164, 169, 200, 202, 222, 227, 240, 338, 348, 349, 360, 362], "requir": [1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 43, 44, 45, 46, 53, 55, 57, 66, 73, 74, 86, 90, 94, 101, 104, 107, 110, 120, 127, 145, 159, 162, 163, 165, 167, 171, 203, 227, 245, 247, 248, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 305, 307, 342, 344, 347, 348, 349, 350, 351, 352, 353, 355, 359, 360, 362, 365], "ndim": [1, 2, 34, 37, 40, 41, 62, 63, 77, 79, 86, 90, 104, 110, 171, 240], "parallelenv": [1, 2, 3, 13, 14, 15, 16, 19, 77, 86, 90, 101, 105, 106, 107, 110, 335, 340, 347, 348, 349, 351, 358, 364, 365], "make_env": [1, 3, 104, 110, 112, 169, 327, 328, 347, 348, 365], "regular": [1, 2, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 65, 71, 86, 90, 104, 110, 163, 191, 218, 236, 243, 244, 245, 246, 264, 324, 340, 344, 347, 348, 351, 352, 356, 362, 365], "behav": [1, 3, 92, 100, 195, 199, 215, 262, 269, 361], "iif": 1, "accordingli": [1, 157, 158, 199, 243, 350], "3": [1, 2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 77, 79, 84, 85, 86, 89, 90, 91, 92, 93, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 117, 119, 120, 123, 127, 130, 132, 133, 139, 141, 143, 145, 147, 148, 150, 153, 154, 157, 158, 159, 161, 162, 163, 165, 167, 171, 176, 181, 182, 183, 185, 186, 187, 189, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 208, 209, 212, 215, 217, 227, 229, 230, 231, 232, 235, 236, 242, 244, 245, 248, 249, 250, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 292, 295, 296, 297, 298, 300, 301, 302, 303, 305, 321, 342, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 359, 360, 361, 362, 363, 364, 365], "isn": [1, 2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 57, 65, 77, 119, 132, 172, 235, 245, 352, 353, 355, 359], "current": [1, 2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 74, 86, 90, 92, 101, 104, 110, 119, 120, 123, 146, 158, 159, 160, 162, 163, 171, 173, 174, 179, 193, 202, 220, 240, 241, 255, 257, 264, 270, 273, 275, 276, 308, 344, 347, 348, 349, 350, 353, 359, 360, 362, 364, 365], "fulli": [1, 8, 31, 86, 90, 104, 110, 171, 196, 200, 348, 353, 360, 362], "ani": [1, 2, 3, 5, 8, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 90, 101, 104, 105, 106, 110, 111, 112, 117, 119, 135, 145, 146, 150, 163, 165, 169, 171, 172, 180, 182, 183, 189, 203, 211, 234, 240, 245, 246, 247, 248, 255, 256, 258, 259, 261, 262, 263, 269, 271, 273, 274, 275, 276, 278, 286, 288, 289, 310, 322, 341, 347, 348, 349, 352, 353, 359, 360, 362, 364, 365], "consecut": [1, 3, 51, 72, 94, 201, 241, 305, 350, 351, 354, 359, 362, 365], "won": [1, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 57, 86, 87, 89, 90, 101, 102, 104, 110, 145, 167, 171, 322, 338, 348, 349, 351, 352], "therebi": [1, 343, 347, 348], "interrupt": [1, 2, 90, 240, 292], "These": [1, 2, 7, 31, 39, 54, 59, 86, 90, 104, 110, 111, 145, 167, 171, 342, 343, 347, 349, 359, 360, 362, 365], "tool": [1, 2, 3, 5, 350, 351, 360, 362, 365], "backend": [1, 3, 7, 11, 17, 18, 20, 21, 86, 89, 90, 104, 110, 114, 116, 202, 344, 347, 349, 350, 351, 354, 355, 360], "gloo": [1, 17, 18, 21], "nccl": [1, 17, 18], "mpi": [1, 17, 18], "distributeddatacollector": [1, 21, 340], "rpc": [1, 19, 21], "rpcdatacollector": [1, 21, 340], "launcher": [1, 17, 18, 19, 21], "rai": [1, 20], "submitit": [1, 17, 18, 19, 21], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69, 72, 73, 74, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 133, 139, 141, 143, 145, 147, 148, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 217, 218, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 253, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 313, 320, 321, 331, 334, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "multiprocess": [1, 2, 3, 17, 18, 19, 51, 59, 87, 88, 104, 110, 169, 347, 348, 349, 350, 359, 360, 361, 365], "synchron": [1, 13, 18, 20, 101, 336, 337, 348, 349], "mode": [1, 6, 13, 14, 15, 16, 17, 18, 19, 20, 31, 86, 90, 101, 104, 110, 128, 131, 158, 163, 169, 171, 173, 177, 178, 190, 197, 198, 201, 215, 223, 224, 225, 242, 246, 271, 318, 347, 348, 350, 359, 364, 365], "find": [1, 4, 6, 7, 17, 18, 19, 34, 36, 42, 73, 74, 199, 233, 241, 316, 320, 347, 348, 352, 353, 359], "folder": [1, 2, 33, 35, 38, 111, 348], "all": [1, 2, 3, 4, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 87, 89, 90, 91, 92, 100, 104, 105, 106, 110, 111, 112, 113, 122, 123, 126, 127, 128, 129, 131, 134, 139, 140, 141, 145, 153, 155, 159, 160, 162, 163, 165, 167, 169, 171, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 209, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 245, 246, 248, 249, 252, 266, 271, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 317, 322, 325, 336, 337, 338, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 362, 364, 365], "variou": [1, 2, 3, 197, 201, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 279, 284, 305, 336, 337, 347, 348, 349, 351, 352, 353, 355, 359, 362, 365], "machin": [1, 2, 7, 17, 18, 19, 31, 56, 94, 359], "wonder": 1, "why": [1, 2, 3, 179, 360, 365], "instead": [1, 4, 7, 8, 11, 26, 31, 57, 86, 90, 104, 110, 135, 159, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 255, 257, 259, 262, 263, 264, 269, 270, 273, 274, 275, 276, 284, 286, 290, 294, 338, 342, 351, 352, 356, 360, 362, 365], "lower": [1, 2, 3, 20, 24, 126, 169, 219, 220, 249, 349, 360], "io": [1, 51, 57, 95, 96, 101, 199, 200], "footprint": [1, 2, 362], "commun": [1, 2, 3, 104, 341, 349, 365], "yet": [1, 82, 83, 95, 96, 361], "spec": [1, 2, 3, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 47, 48, 49, 53, 82, 83, 86, 88, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 107, 110, 111, 112, 117, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 176, 179, 180, 192, 218, 220, 229, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 248, 249, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 331, 342, 347, 348, 349, 350, 351, 352, 358, 359, 364], "plai": [1, 3, 105, 106, 123, 348, 349, 353, 362, 365], "role": [1, 3, 348, 353, 365], "opposit": 1, "direct": [1, 2, 31, 86, 90, 104, 110, 171, 195, 199, 271, 348, 353], "sinc": [1, 2, 3, 4, 5, 7, 31, 34, 37, 40, 41, 51, 59, 74, 77, 86, 90, 104, 105, 106, 107, 110, 171, 172, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 249, 252, 305, 347, 348, 349, 350, 351, 352, 353, 360, 361, 362, 364, 365], "faster": [1, 2, 4, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 58, 59, 101, 286, 287, 288, 289, 350, 359], "share": [1, 3, 6, 8, 22, 33, 35, 38, 62, 63, 64, 66, 73, 75, 76, 79, 87, 104, 110, 169, 197, 201, 208, 209, 230, 231, 232, 255, 257, 258, 262, 263, 269, 270, 273, 274, 275, 276, 278, 338, 340, 342, 349, 350, 356, 358, 359, 364, 365], "among": [1, 3, 105, 106, 359], "prohibit": [1, 3, 77], "slow": [1, 3, 4, 33, 35, 38], "compar": [1, 3, 57, 77, 318, 343, 347, 349, 352, 353, 359, 362, 365], "gpu": [1, 7, 8, 31, 62, 63, 79, 86, 90, 94, 104, 110, 171, 347, 349, 350, 359, 365], "nativ": [1, 7, 9, 55, 86, 90, 104, 110, 123, 305, 350, 362], "driver": [1, 7], "mean": [1, 2, 3, 4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 40, 51, 65, 66, 77, 82, 83, 90, 119, 141, 169, 181, 190, 193, 195, 197, 199, 201, 202, 205, 216, 223, 233, 242, 246, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 276, 278, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 342, 343, 347, 348, 349, 352, 359, 360, 362, 364, 365], "keyword": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 71, 73, 74, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 119, 120, 124, 126, 127, 145, 153, 154, 159, 161, 162, 163, 165, 167, 171, 197, 201, 202, 206, 207, 208, 229, 233, 234, 235, 237, 238, 240, 241, 242, 243, 245, 246, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 268, 269, 270, 272, 273, 274, 275, 276, 278, 280, 284, 286, 287, 288, 289, 290, 294, 312, 335, 347, 348, 349, 352, 355, 359, 362, 365], "build": [1, 3, 7, 22, 25, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 91, 92, 95, 96, 101, 104, 107, 110, 111, 112, 150, 169, 171, 181, 197, 201, 205, 239, 242, 246, 322, 329, 330, 332, 333, 342, 344, 349, 350, 352, 353, 354, 355, 359, 360, 361, 364, 365], "mani": [1, 2, 3, 4, 37, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107, 255, 257, 263, 270, 273, 274, 278, 342, 347, 348, 349, 351, 352, 354, 356, 359, 360, 362, 365], "eg": [1, 2, 3, 11, 33, 35, 38, 62, 63, 64, 75, 76, 79, 84, 85, 86, 89, 90, 91, 92, 94, 104, 107, 110, 130, 157, 163, 208, 234, 305], "gymnasium": [1, 3, 5, 11, 86, 89, 90, 91, 97, 98, 104, 110, 114, 116, 133, 154, 157, 168, 348, 349, 360, 364], "warn": [1, 3, 233, 237, 238, 241, 348], "quickli": [1, 3, 348, 359, 365], "becom": [1, 3, 4, 20, 195, 199, 359, 365], "quit": [1, 3, 51, 86, 90, 104, 110, 342, 347, 348, 349, 352, 359, 365], "annoi": [1, 3], "By": [1, 2, 3, 32, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 107, 110, 111, 112, 227, 246, 271, 318, 338, 347, 361, 362, 365], "filter": [1, 2, 3, 4, 44, 66, 73, 74, 255, 256, 258, 262, 263, 269, 273, 274, 276, 351], "out": [1, 2, 3, 4, 5, 9, 20, 31, 44, 53, 57, 66, 73, 74, 86, 90, 104, 105, 106, 110, 159, 171, 172, 195, 196, 199, 206, 207, 210, 211, 229, 234, 235, 236, 241, 242, 243, 244, 245, 246, 282, 283, 344, 347, 348, 349, 350, 351, 352, 354, 359, 360, 362, 364, 365], "still": [1, 2, 3, 9, 57, 82, 83, 86, 90, 95, 96, 104, 110, 233, 270, 271, 347, 348, 350, 358, 360, 362, 365], "wish": [1, 3, 13, 14, 16, 57, 116, 353, 362], "displai": [1, 3, 7, 86, 90, 104, 110, 322, 344, 347, 348, 359, 360], "filter_warnings_subprocess": [1, 3], "fals": [1, 2, 3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 71, 72, 73, 74, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 123, 124, 127, 128, 131, 132, 133, 135, 138, 139, 140, 141, 143, 145, 146, 147, 148, 150, 152, 153, 154, 157, 159, 161, 162, 163, 164, 165, 167, 169, 171, 172, 179, 180, 181, 182, 183, 185, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 217, 218, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 284, 286, 287, 288, 289, 295, 296, 297, 298, 300, 301, 302, 303, 305, 312, 315, 316, 318, 319, 320, 322, 331, 338, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "central": [2, 208, 347, 348, 351, 359, 362], "part": [2, 4, 8, 31, 39, 51, 54, 55, 57, 58, 59, 82, 86, 90, 95, 104, 110, 122, 141, 150, 153, 171, 179, 197, 201, 250, 313, 338, 347, 349, 350, 356, 360, 365], "algorithm": [2, 3, 8, 9, 100, 255, 273, 274, 276, 340, 343, 344, 347, 348, 349, 350, 353, 354, 355, 359, 361, 362], "implement": [2, 3, 9, 11, 13, 14, 15, 31, 75, 86, 90, 100, 101, 104, 110, 120, 127, 128, 129, 133, 136, 139, 147, 148, 154, 157, 162, 163, 169, 171, 182, 195, 196, 197, 198, 199, 200, 201, 223, 224, 225, 255, 256, 260, 261, 262, 269, 271, 272, 273, 275, 276, 313, 327, 331, 342, 344, 347, 348, 349, 350, 352, 353, 354, 359, 360, 364], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 25, 31, 34, 37, 39, 40, 41, 51, 53, 57, 59, 72, 74, 77, 82, 83, 86, 87, 90, 94, 95, 96, 104, 110, 123, 139, 145, 148, 165, 168, 169, 171, 172, 181, 201, 202, 208, 209, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 305, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "give": [2, 3, 7, 40, 54, 86, 90, 100, 104, 110, 123, 341, 343, 347, 348, 359, 360, 361, 364], "abil": [2, 271, 360, 362], "panel": [2, 349], "usag": [2, 5, 7, 13, 14, 15, 16, 17, 18, 19, 20, 53, 59, 77, 120, 123, 132, 197, 201, 262, 269, 276, 279, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "includ": [2, 3, 4, 7, 9, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 76, 79, 86, 90, 100, 104, 110, 158, 163, 169, 171, 271, 276, 325, 342, 344, 347, 348, 349, 350, 359, 360, 362, 365], "almost": [2, 350], "physic": [2, 6, 7, 104, 107, 344, 347, 359, 360], "theori": 2, "crude": 2, "made": [2, 3, 31, 37, 51, 62, 63, 64, 75, 76, 79, 86, 90, 104, 110, 171, 241, 259, 284, 347, 348, 350, 359, 361, 362], "liststorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 362], "veri": [2, 3, 95, 96, 348, 351, 354, 360, 362, 364, 365], "ineffici": [2, 4], "allow": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 31, 32, 33, 35, 38, 51, 57, 66, 68, 71, 73, 74, 82, 83, 86, 90, 95, 96, 104, 110, 119, 120, 148, 171, 179, 203, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 279, 281, 284, 342, 344, 347, 349, 350, 351, 352, 353, 359, 360, 362, 365], "complex": [2, 31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 347, 348, 351, 352], "tensor": [2, 3, 8, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 119, 120, 122, 123, 124, 127, 128, 130, 131, 132, 133, 135, 138, 141, 143, 145, 146, 147, 148, 150, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 255, 256, 258, 259, 261, 262, 263, 266, 267, 269, 271, 273, 274, 275, 276, 278, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 331, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 364, 365], "contigu": [2, 8, 54, 57, 58, 86, 90, 104, 110, 176, 349, 359, 360, 362, 364, 365], "tensorstorag": [2, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 354, 362], "lazymemmapstorag": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 73, 74, 122, 123, 347, 348, 350, 354, 361, 362], "citizen": 2, "pytre": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68], "tupl": [2, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 76, 77, 84, 85, 86, 90, 104, 110, 117, 130, 132, 138, 139, 141, 146, 154, 171, 179, 185, 191, 192, 197, 200, 201, 202, 203, 212, 216, 217, 218, 235, 236, 240, 243, 244, 249, 255, 256, 258, 262, 263, 265, 269, 271, 273, 274, 275, 276, 278, 286, 287, 288, 289, 316, 318, 320, 329, 330, 362], "dictionari": [2, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 33, 35, 38, 44, 66, 71, 73, 74, 86, 89, 90, 91, 104, 110, 111, 112, 159, 163, 171, 242, 246, 276, 318, 336, 337, 338, 344, 348, 349, 351, 353, 360, 365], "nest": [2, 3, 25, 27, 31, 33, 35, 37, 38, 47, 62, 63, 68, 79, 86, 89, 90, 91, 104, 110, 123, 157, 160, 171, 180, 240, 286, 287, 288, 289, 290, 344, 348, 349, 359, 360, 362, 364], "construct": [2, 3, 5, 31, 34, 37, 40, 41, 51, 68, 86, 89, 90, 104, 105, 110, 128, 131, 171, 172, 197, 201, 220, 246, 322, 342, 348, 349, 350, 352, 360, 362, 365], "ram": [2, 89, 91, 362, 365], "prealloc": [2, 3, 360], "ve": [2, 39, 347, 350, 356], "been": [2, 3, 5, 7, 8, 17, 19, 20, 39, 68, 72, 86, 90, 94, 104, 110, 139, 157, 158, 162, 195, 199, 233, 238, 240, 241, 347, 348, 349, 350, 358, 359, 360, 362, 365], "here": [2, 3, 4, 7, 8, 9, 10, 58, 59, 77, 84, 85, 86, 90, 94, 104, 105, 106, 110, 123, 312, 342, 343, 347, 348, 349, 350, 351, 352, 354, 356, 359, 360, 362, 364, 365], "start": [2, 3, 4, 5, 13, 20, 44, 51, 59, 66, 73, 74, 87, 99, 104, 110, 179, 317, 346, 347, 348, 357, 359, 360, 362, 363, 365], "replay_buff": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 319, 334, 347, 348, 349, 354, 359, 362], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 20, 21, 22, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 119, 120, 122, 123, 126, 132, 133, 138, 139, 141, 143, 145, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 162, 167, 169, 171, 176, 179, 180, 181, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 199, 200, 201, 203, 205, 208, 209, 212, 217, 218, 226, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 305, 315, 318, 331, 334, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "rb": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 123, 150, 171, 348, 350, 354, 356, 359, 361, 362, 364], "10": [2, 7, 21, 22, 25, 31, 34, 37, 39, 40, 41, 42, 44, 62, 63, 65, 68, 73, 74, 77, 79, 82, 83, 86, 87, 90, 95, 96, 100, 104, 105, 106, 108, 109, 110, 111, 112, 117, 120, 122, 123, 158, 160, 161, 171, 181, 184, 185, 187, 189, 191, 195, 196, 199, 200, 202, 205, 216, 227, 237, 238, 241, 242, 249, 256, 259, 261, 263, 273, 274, 275, 278, 284, 286, 287, 288, 289, 292, 305, 313, 344, 346, 347, 348, 349, 350, 351, 352, 356, 358, 359, 360, 361, 362, 363, 364, 365], "add": [2, 3, 4, 6, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 65, 68, 69, 77, 78, 80, 81, 86, 90, 104, 110, 123, 139, 163, 171, 197, 201, 210, 239, 255, 317, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 364], "string": [2, 17, 18, 19, 31, 36, 44, 60, 86, 90, 104, 110, 116, 145, 157, 167, 171, 197, 201, 235, 240, 242, 243, 254, 304, 321, 331, 343, 347, 349, 350, 362], "element": [2, 13, 14, 15, 16, 17, 18, 19, 20, 22, 29, 30, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 73, 74, 77, 79, 103, 104, 110, 123, 146, 155, 158, 182, 183, 195, 196, 199, 229, 233, 235, 240, 245, 246, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 276, 278, 313, 347, 349, 352, 354, 362, 365], "30": [2, 3, 37, 55, 119, 140, 219, 220, 307, 348, 349, 354, 359, 360, 362], "none": [2, 3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 73, 74, 75, 76, 77, 79, 86, 87, 89, 90, 99, 100, 104, 105, 106, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 135, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 316, 317, 318, 319, 320, 321, 322, 326, 327, 328, 331, 334, 336, 337, 338, 342, 344, 347, 348, 349, 350, 353, 354, 359, 360, 362, 364, 365], "int": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 118, 119, 120, 122, 123, 124, 125, 127, 130, 135, 136, 140, 141, 143, 145, 146, 149, 156, 157, 160, 163, 164, 165, 167, 171, 172, 176, 181, 182, 183, 184, 185, 187, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 233, 234, 235, 236, 237, 238, 240, 241, 242, 244, 245, 246, 255, 256, 257, 263, 265, 266, 270, 271, 272, 273, 274, 278, 286, 288, 289, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 313, 314, 315, 318, 319, 322, 324, 331, 332, 336, 337, 338, 360, 362], "tell": [2, 3, 4, 7, 105, 106, 347, 350, 354, 359], "our": [2, 3, 7, 8, 17, 37, 123, 305, 342, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 361, 362, 364], "far": [2, 39, 198, 224, 225, 356, 360, 365], "restrict": [2, 3, 348, 361, 362, 365], "empti": [2, 3, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 64, 68, 86, 90, 103, 104, 110, 128, 131, 145, 147, 160, 163, 165, 167, 309, 347, 360, 362], "64": [2, 3, 33, 35, 38, 51, 57, 68, 123, 149, 185, 186, 194, 197, 201, 209, 217, 284, 347, 348, 349, 350, 352, 356, 358, 360, 362, 364, 365], "dtype": [2, 3, 13, 14, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 73, 74, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 117, 120, 121, 127, 128, 129, 130, 131, 132, 133, 139, 141, 143, 145, 147, 148, 150, 154, 157, 159, 161, 162, 163, 165, 167, 171, 172, 176, 179, 180, 181, 191, 192, 195, 196, 197, 199, 200, 201, 205, 210, 211, 217, 218, 226, 229, 230, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 292, 331, 342, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "unit8": 2, "img": 2, "randint": [2, 44, 68, 161, 362], "255": [2, 68, 161, 360, 362], "uint8": [2, 3, 33, 35, 38, 46, 51, 57, 84, 85, 132, 143, 161, 348, 355, 361, 362, 364], "next": [2, 3, 4, 8, 13, 14, 15, 22, 25, 27, 31, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 100, 104, 108, 109, 110, 111, 112, 119, 120, 122, 123, 128, 131, 132, 133, 138, 139, 143, 147, 148, 150, 153, 154, 157, 159, 168, 169, 171, 176, 179, 181, 196, 197, 200, 201, 205, 220, 240, 251, 255, 256, 258, 259, 261, 262, 263, 264, 269, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 305, 316, 318, 320, 348, 350, 352, 355, 356, 358, 360, 361, 364, 365], "ask": [2, 8, 51, 57, 66, 73, 74, 305, 349, 350, 351, 352, 359, 361, 365], "do": [2, 3, 4, 7, 59, 86, 90, 104, 110, 111, 112, 146, 168, 169, 179, 209, 210, 231, 286, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 364, 365], "automat": [2, 3, 5, 59, 62, 63, 68, 79, 86, 89, 90, 91, 104, 105, 106, 110, 119, 128, 131, 141, 168, 182, 229, 240, 242, 342, 347, 349, 351, 352, 359, 360, 362, 364], "hand": [2, 3, 7, 20, 25, 359, 360], "look": [2, 3, 5, 7, 8, 31, 86, 90, 99, 104, 105, 106, 110, 145, 146, 165, 171, 242, 246, 247, 248, 343, 349, 350, 351, 352, 353, 354, 356, 359, 360, 361, 362, 364, 365], "assum": [2, 3, 6, 25, 32, 39, 40, 41, 53, 55, 57, 58, 59, 73, 86, 90, 104, 110, 122, 125, 135, 145, 146, 153, 159, 163, 165, 167, 176, 197, 201, 202, 227, 249, 259, 264, 276, 284, 295, 296, 297, 298, 300, 301, 302, 303, 305, 347, 349, 350, 358, 360], "lead": [2, 3, 4, 8, 10, 11, 22, 25, 27, 31, 34, 37, 40, 41, 53, 72, 84, 85, 86, 89, 91, 92, 159, 198, 217, 224, 225, 347, 350, 359, 360, 362, 364], "leav": [2, 25, 33, 35, 37, 38, 86, 172, 180, 347, 354, 362], "tree": [2, 33, 35, 38, 86, 90, 104, 110, 362], "match": [2, 3, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 84, 85, 86, 87, 89, 90, 91, 92, 104, 110, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 141, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 182, 183, 190, 197, 201, 203, 208, 209, 223, 229, 234, 235, 242, 243, 245, 246, 249, 250, 256, 263, 270, 272, 274, 276, 319, 324, 342, 347, 349, 358, 359, 360, 362, 365], "don": [2, 3, 4, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 123, 348, 349, 354, 362, 364, 365], "throw": [2, 31, 33, 35, 38, 86, 90, 104, 110, 171, 365], "rb_td": 2, "batch_siz": [2, 3, 8, 13, 14, 15, 22, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 73, 74, 77, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 122, 123, 127, 128, 131, 132, 133, 143, 147, 148, 150, 154, 157, 159, 162, 163, 171, 179, 180, 181, 189, 191, 192, 197, 201, 205, 217, 218, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 305, 313, 319, 331, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "max": [2, 22, 32, 35, 40, 44, 60, 65, 66, 77, 130, 160, 223, 224, 225, 234, 241, 256, 257, 263, 272, 274, 276, 347, 349, 350, 356, 359], "label": [2, 35, 36, 39, 44, 347, 362], "100": [2, 13, 14, 15, 16, 31, 34, 37, 40, 41, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 82, 83, 86, 90, 95, 96, 104, 110, 126, 132, 141, 150, 155, 157, 171, 208, 236, 240, 305, 314, 334, 348, 349, 350, 351, 353, 356, 358, 359, 360, 361, 362, 364, 365], "rb_pytre": 2, "randn": [2, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 68, 73, 74, 79, 122, 141, 176, 184, 185, 189, 191, 192, 195, 196, 199, 200, 202, 206, 207, 208, 212, 215, 216, 218, 229, 230, 231, 232, 234, 235, 242, 243, 245, 248, 249, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 286, 287, 288, 289, 321, 342, 362, 364, 365], "c": [2, 3, 6, 7, 25, 33, 35, 37, 38, 40, 41, 56, 141, 161, 199, 200, 348, 362], "zero": [2, 3, 4, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 53, 63, 73, 74, 77, 79, 86, 90, 104, 110, 120, 122, 124, 128, 130, 131, 141, 147, 150, 171, 176, 179, 181, 186, 187, 188, 194, 195, 196, 197, 199, 200, 201, 202, 206, 207, 209, 217, 226, 237, 238, 241, 244, 252, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 292, 350, 362, 364], "assert": [2, 3, 6, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 90, 93, 104, 110, 116, 120, 123, 126, 128, 131, 139, 148, 155, 169, 172, 176, 209, 212, 227, 286, 287, 288, 289, 313, 321, 354, 358, 362, 365], "len": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 79, 143, 182, 183, 203, 209, 347, 354, 356, 360, 361, 362, 364], "ambigu": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "signatur": [2, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 76, 86, 90, 104, 110, 120, 127, 145, 159, 162, 163, 165, 167, 171, 245, 343, 347, 351, 360], "deal": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 347, 349, 359, 362], "interpret": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 348], "put": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 90, 111, 112, 169, 312, 338, 342, 348, 349, 350, 351, 360], "solv": [2, 4, 9, 10, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 341, 347, 348, 349, 354, 356, 359, 360, 362], "clear": [2, 25, 27, 28, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 94, 104, 110, 171, 314, 351, 354], "cut": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "distinct": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 120, 353, 358], "view": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 171, 192, 195, 199, 203, 351, 360, 362, 364, 365], "indic": [2, 3, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 111, 112, 123, 124, 157, 158, 159, 160, 163, 171, 180, 182, 183, 203, 206, 207, 209, 240, 241, 243, 244, 252, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 326, 338, 341, 344, 349, 350, 354, 355, 356, 360, 362, 365], "through": [2, 3, 4, 5, 8, 11, 13, 14, 15, 16, 17, 19, 20, 25, 27, 57, 82, 83, 86, 90, 94, 95, 96, 99, 104, 105, 106, 110, 119, 128, 131, 146, 203, 217, 240, 242, 246, 247, 248, 252, 286, 287, 288, 289, 342, 347, 348, 349, 351, 353, 358, 359, 360, 361, 362, 365], "collate_fn": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 362, 364], "__init__": [2, 3, 7, 86, 100, 116, 117, 120, 128, 131, 147, 181, 192, 195, 199, 205, 250, 256, 258, 263, 269, 274, 276, 278, 344, 360, 365], "major": 2, "worri": [2, 42], "even": [2, 3, 4, 8, 14, 17, 18, 19, 20, 62, 63, 64, 66, 73, 75, 76, 79, 86, 87, 90, 94, 104, 110, 119, 180, 347, 349, 351, 359, 360, 365], "though": [2, 4, 86, 90, 104, 110, 203, 349, 359], "too": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 39, 43, 45, 46, 86, 90, 104, 110, 140, 159, 198, 224, 225, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 348, 352, 355, 360, 362, 365], "latter": [2, 17, 18, 19, 31, 53, 86, 90, 104, 110, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 273, 336, 337], "inv": [2, 3, 126, 130, 143, 150, 155, 360], "method": [2, 3, 4, 11, 15, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 77, 79, 86, 89, 90, 91, 92, 104, 107, 110, 119, 120, 123, 127, 128, 129, 132, 133, 135, 139, 141, 145, 147, 148, 149, 150, 154, 157, 159, 162, 163, 165, 167, 171, 181, 202, 229, 230, 231, 232, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 290, 304, 335, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 360, 362, 365], "obvious": 2, "ignor": [2, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 42, 43, 45, 46, 86, 90, 104, 110, 130, 133, 154, 161, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 286, 362], "multithread": [2, 3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 101, 102, 354, 362], "thread": [2, 13, 14, 16, 33, 35, 38, 82, 83, 95, 96, 104, 110], "prefetch": [2, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 60, 347, 348, 350, 362], "advis": [2, 54, 365], "benchmark": [2, 3, 9, 83, 95, 96, 359], "techniqu": [2, 8, 104, 110, 348, 354, 362], "real": [2, 5, 57, 246, 343, 350, 360], "life": [2, 132], "adopt": [2, 3, 5, 347, 365], "throughput": [2, 9, 347], "constant": [2, 123, 141, 158, 344, 347, 349, 350, 365], "throughout": [2, 3, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 349, 365], "further": [2, 3, 5, 347, 349, 351], "refin": [2, 57, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284], "coupl": [2, 350, 352, 353, 360, 362], "get": [2, 3, 4, 6, 7, 8, 9, 25, 27, 33, 34, 35, 37, 38, 51, 53, 57, 62, 63, 66, 73, 74, 75, 76, 77, 79, 86, 87, 90, 104, 110, 117, 122, 124, 128, 130, 131, 139, 141, 146, 158, 159, 161, 163, 169, 229, 237, 238, 242, 243, 246, 286, 287, 288, 289, 290, 305, 309, 342, 346, 347, 348, 349, 350, 357, 359, 360, 362, 363, 364, 365], "first_elt": 2, "128": [2, 51, 53, 57, 74, 82, 83, 95, 96, 186, 189, 348, 350, 356, 360, 361, 362], "wa": [2, 3, 5, 7, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 86, 90, 104, 110, 163, 172, 180, 199, 255, 257, 268, 270, 273, 275, 277, 292, 343, 348, 349, 351, 352, 358, 362, 364], "print": [2, 3, 6, 7, 13, 14, 15, 20, 21, 22, 23, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 116, 119, 120, 123, 124, 128, 129, 130, 131, 138, 141, 147, 148, 150, 153, 157, 159, 160, 161, 169, 171, 176, 179, 180, 182, 183, 185, 186, 187, 188, 189, 192, 194, 197, 203, 206, 207, 208, 209, 212, 215, 218, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 243, 245, 248, 250, 271, 331, 334, 342, 344, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "influenti": 2, "latenc": 2, "especi": [2, 3, 7, 8, 124], "larger": [2, 4, 262, 269], "volum": 2, "due": [2, 3, 5, 353, 361, 362, 365], "serialis": [2, 33, 35, 38], "memorymappedtensor": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 307, 354, 361], "well": [2, 3, 8, 20, 22, 31, 34, 36, 37, 40, 41, 71, 75, 86, 90, 104, 110, 163, 171, 185, 199, 219, 220, 271, 290, 347, 348, 350, 351, 352, 353, 355, 361, 362, 364, 365], "specifi": [2, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 105, 106, 110, 111, 112, 128, 129, 131, 153, 156, 158, 164, 171, 181, 199, 245, 246, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 312, 342, 347, 349, 350, 354], "file": [2, 6, 7, 8, 33, 35, 38, 51, 53, 54, 55, 57, 58, 59, 111, 304, 305, 307, 344, 346, 347, 348, 362, 363, 365], "locat": [2, 7, 33, 35, 38, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 132, 141, 152, 198, 212, 224, 225, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 347, 348, 349, 355, 359, 362], "improv": [2, 4, 136, 255, 343, 359, 362], "failur": [2, 4], "recoveri": 2, "were": [2, 7, 13, 14, 15, 16, 17, 18, 19, 20, 104, 110, 349, 362], "found": [2, 3, 6, 7, 10, 13, 14, 15, 16, 20, 22, 25, 31, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 94, 104, 110, 117, 123, 150, 153, 160, 169, 171, 180, 237, 238, 242, 246, 270, 271, 273, 347, 348, 350, 351, 353, 355, 362], "rough": 2, "1x": 2, "83x": 2, "44x": 2, "long": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36, 43, 45, 46, 66, 130, 199, 200, 262, 350, 354, 362], "sharabl": [2, 104, 110], "collabor": [2, 57], "rather": [2, 4, 76, 148, 347, 348, 349, 351, 353, 359, 362], "incur": [2, 82, 83, 95, 96], "transmiss": 2, "overhead": [2, 82, 83, 95, 96, 104, 110], "subclass": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 68, 86, 90, 104, 110, 118, 119, 162, 168, 172, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 245, 246, 247, 249, 252, 271, 273, 348, 350, 354, 360, 362], "instanti": [2, 3, 20, 33, 34, 35, 37, 38, 40, 41, 94, 119, 162, 202, 209, 347, 348, 352, 353, 355, 359, 360, 362, 365], "content": [2, 8, 15, 25, 27, 33, 34, 35, 37, 38, 40, 41, 72, 86, 89, 90, 91, 101, 104, 110, 147, 182, 183, 203, 208, 209, 242, 271, 349, 360, 364], "map": [2, 3, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 86, 90, 99, 104, 105, 106, 108, 109, 110, 111, 112, 113, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 141, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 171, 176, 192, 212, 229, 230, 231, 232, 235, 242, 243, 245, 246, 248, 249, 250, 251, 276, 284, 318, 340, 342, 343, 347, 348, 349, 350, 352, 353, 361, 364], "writer": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 66, 68, 69, 73, 77, 78, 81, 349, 362], "tensordictroundrobinwrit": [2, 68], "goe": [2, 4, 105, 106, 347, 349, 359, 365], "prioritizedsampl": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 68, 259, 264, 284, 347, 362], "access": [2, 3, 7, 8, 31, 34, 54, 56, 86, 90, 104, 110, 145, 165, 171, 338, 341, 347, 351, 359, 360, 362], "show": [2, 31, 86, 90, 104, 110, 171, 209, 305, 342, 347, 349, 350, 359, 360, 362, 364], "tensordictreplaybuff": [2, 34, 37, 40, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 73, 74, 77, 122, 123, 319, 334, 340, 347, 348, 350, 362], "mp": [2, 17, 18, 19, 51, 52, 53, 54, 55, 56, 57, 58, 59, 87, 169], "def": [2, 3, 11, 21, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 87, 90, 100, 104, 110, 116, 117, 119, 120, 128, 131, 147, 163, 171, 181, 192, 195, 196, 199, 200, 205, 240, 242, 250, 256, 258, 263, 269, 271, 274, 276, 278, 344, 347, 348, 358, 359, 360, 362, 364, 365], "updat": [2, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 38, 39, 40, 65, 66, 86, 90, 100, 104, 105, 106, 110, 117, 119, 120, 128, 130, 131, 147, 157, 158, 163, 166, 169, 171, 180, 181, 195, 197, 201, 205, 233, 237, 238, 241, 242, 243, 244, 245, 246, 255, 256, 257, 258, 259, 261, 263, 264, 265, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 284, 286, 287, 288, 289, 290, 318, 322, 324, 327, 328, 333, 334, 344, 348, 349, 350, 353, 356, 359, 360, 362, 364, 365], "td": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 77, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 97, 98, 104, 110, 117, 120, 122, 124, 128, 129, 130, 131, 138, 139, 141, 150, 153, 159, 161, 163, 169, 179, 181, 191, 192, 197, 201, 204, 205, 217, 218, 226, 229, 230, 231, 232, 234, 235, 237, 238, 241, 242, 243, 245, 248, 250, 284, 287, 288, 289, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 313, 321, 331, 342, 343, 347, 350, 359, 360, 364, 365], "__name__": [2, 21, 87, 348], "__main__": [2, 21, 87], "21": [2, 57, 58, 74, 104, 105, 106, 110, 346, 348, 350, 358, 359, 360, 363], "proc": 2, "target": [2, 4, 8, 20, 31, 86, 87, 90, 104, 110, 158, 162, 171, 245, 246, 255, 256, 257, 258, 259, 261, 263, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 286, 287, 288, 289, 290, 325, 333, 334, 343, 344, 350, 356, 360], "arg": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 127, 145, 147, 156, 159, 162, 163, 164, 166, 167, 171, 181, 182, 183, 191, 197, 201, 203, 204, 205, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 312, 315, 319, 322, 338, 347, 348, 362, 365], "join": [2, 87, 340, 348, 349], "now": [2, 3, 7, 34, 104, 123, 209, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 361, 362, 365], "length": [2, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 39, 42, 43, 44, 45, 46, 51, 57, 60, 66, 73, 74, 76, 86, 90, 95, 96, 104, 110, 146, 169, 181, 182, 183, 185, 187, 189, 195, 199, 203, 205, 208, 209, 229, 245, 250, 313, 319, 347, 349, 350, 354, 356, 360, 362, 365], "20": [2, 44, 58, 73, 74, 77, 86, 90, 94, 104, 110, 158, 171, 194, 195, 196, 199, 200, 234, 313, 346, 348, 349, 350, 356, 359, 360, 362, 363, 364, 365], "_data": [2, 360], "It": [2, 3, 4, 7, 22, 31, 36, 39, 40, 42, 44, 53, 59, 68, 71, 77, 81, 86, 90, 92, 100, 101, 104, 105, 106, 110, 111, 112, 120, 122, 132, 139, 141, 146, 158, 163, 168, 171, 172, 185, 187, 193, 208, 209, 217, 219, 220, 226, 227, 236, 237, 240, 241, 244, 246, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 284, 285, 286, 312, 318, 331, 341, 342, 343, 347, 348, 350, 351, 359, 360, 361, 362, 364, 365], "difficult": [2, 4, 104, 355], "pai": [2, 8, 347, 350], "word": [2, 3, 39, 51, 53, 55, 57, 58, 59, 271, 347, 354, 360, 365], "1m": [2, 51, 57, 325, 347, 349, 350, 361], "doe": [2, 3, 17, 33, 34, 35, 38, 40, 44, 51, 53, 57, 65, 66, 73, 75, 76, 81, 86, 90, 104, 110, 111, 112, 189, 195, 196, 197, 199, 200, 201, 210, 227, 234, 247, 248, 255, 257, 264, 270, 273, 285, 322, 342, 344, 347, 348, 349, 350, 351, 354, 360, 362, 365], "howev": [2, 3, 5, 7, 31, 86, 90, 104, 110, 123, 153, 158, 163, 171, 255, 257, 270, 273, 275, 276, 342, 347, 348, 350, 353, 360, 362, 365], "capac": [2, 34, 37, 40, 41, 62, 63, 65, 73, 79, 349, 354], "There": [2, 10, 68, 197, 201, 342, 344, 349, 350, 352, 354, 359, 360, 362, 365], "circumv": 2, "account": [2, 62, 63, 79, 119, 123, 206, 207, 342, 348, 350, 362, 365], "save": [2, 8, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 168, 171, 304, 305, 307, 312, 322, 344, 354, 355, 356, 359], "convent": [2, 3, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 111, 112, 343, 347, 350, 359, 360], "overridden": [2, 3, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 286, 288, 289, 350], "dim_extend": [2, 34, 37, 40, 41], "obtain": [2, 7, 39, 51, 86, 90, 104, 110, 122, 145, 158, 167, 181, 217, 319, 347, 349, 351, 352, 353, 359], "counterpart": 2, "desir": [2, 3, 31, 86, 90, 104, 110, 118, 120, 127, 141, 143, 145, 146, 159, 162, 163, 165, 167, 171, 177, 178, 182, 183, 203, 209, 229, 235, 236, 242, 243, 244, 245, 246, 342, 347, 359, 360, 362], "diversifi": 2, "offer": [2, 3, 7, 82, 83, 86, 90, 95, 96, 104, 110, 342, 347, 348, 351, 353, 354, 360, 362, 365], "accomplish": [2, 172, 351], "anoth": [2, 3, 8, 57, 66, 73, 86, 89, 90, 91, 94, 104, 110, 120, 128, 129, 131, 159, 162, 203, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 342, 343, 347, 349, 350, 352, 353, 358, 359, 360, 365], "__especially__": 2, "offlin": [2, 8, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 54, 123, 172, 256, 261, 262, 269, 312, 344, 351, 361, 362, 364], "docstr": [2, 31, 86, 90, 104, 110, 171, 351, 352], "extens": [2, 34, 37, 40, 41, 74, 344, 362], "detail": [2, 3, 5, 6, 7, 31, 86, 90, 104, 105, 106, 110, 161, 163, 171, 192, 195, 199, 236, 255, 264, 273, 341, 348, 354, 358, 362], "note": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 86, 90, 104, 110, 128, 131, 169, 171, 180, 195, 197, 199, 201, 241, 242, 246, 264, 348, 352, 358, 359, 365], "without": [2, 3, 7, 9, 31, 39, 51, 53, 57, 73, 74, 86, 90, 104, 110, 111, 112, 117, 119, 128, 131, 161, 171, 195, 196, 199, 200, 231, 232, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 285, 286, 287, 288, 289, 290, 334, 341, 342, 347, 348, 349, 351, 352, 353, 354, 359, 360, 362, 365], "happi": 2, "concaten": [2, 8, 13, 14, 20, 29, 30, 57, 123, 124, 141, 162, 199, 203, 248, 347, 348, 352, 359, 360, 362, 365], "schedul": [2, 4, 7, 39, 318, 349, 360], "transformedenv": [2, 3, 13, 31, 86, 87, 90, 104, 110, 117, 120, 123, 126, 127, 128, 131, 132, 133, 135, 138, 139, 140, 141, 143, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 162, 169, 171, 197, 201, 240, 305, 331, 347, 348, 349, 350, 351, 355, 356, 358, 359, 360, 361, 362, 364, 365], "stepcount": [2, 13, 31, 86, 90, 104, 110, 111, 112, 162, 171, 347, 348, 349, 350, 351, 356, 359, 364], "gymenv": [2, 3, 5, 13, 14, 15, 16, 20, 21, 31, 77, 86, 87, 90, 92, 104, 110, 119, 120, 123, 126, 127, 132, 138, 139, 141, 143, 148, 149, 150, 153, 155, 158, 159, 160, 162, 163, 169, 171, 197, 201, 240, 305, 331, 334, 340, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 361, 362, 364, 365], "randompolici": [2, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 123, 150, 354, 362], "cartpol": [2, 3, 31, 84, 85, 86, 90, 104, 110, 119, 120, 123, 153, 158, 171, 240, 348, 350, 352, 354, 355, 356, 362, 365], "v1": [2, 3, 13, 14, 15, 16, 20, 21, 31, 53, 55, 77, 86, 87, 89, 90, 91, 95, 96, 101, 104, 110, 119, 120, 123, 126, 133, 138, 139, 141, 148, 150, 153, 155, 157, 158, 159, 160, 162, 171, 197, 201, 240, 281, 295, 296, 297, 298, 300, 301, 302, 303, 342, 348, 350, 351, 352, 353, 354, 355, 356, 360, 362, 364, 365], "action_spec": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 82, 83, 86, 90, 95, 96, 100, 104, 105, 106, 110, 117, 120, 123, 128, 131, 139, 147, 150, 181, 192, 205, 218, 220, 229, 235, 242, 243, 256, 259, 261, 274, 276, 278, 334, 342, 347, 348, 349, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 365], "8": [2, 3, 6, 7, 31, 37, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 73, 74, 82, 83, 84, 85, 86, 90, 104, 110, 119, 158, 182, 183, 185, 186, 194, 203, 230, 231, 232, 242, 245, 248, 269, 346, 347, 348, 352, 354, 359, 360, 361, 362, 363, 364, 365], "traj_kei": [2, 66, 73, 74, 362], "truncated_kei": [2, 66, 73, 74, 150, 157], "strict_length": [2, 51, 57, 66, 73, 74, 305], "i": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 34, 37, 41, 42, 62, 63, 65, 66, 74, 79, 86, 90, 104, 110, 145, 150, 153, 163, 167, 171, 196, 200, 212, 218, 236, 240, 242, 244, 245, 246, 286, 287, 288, 289, 313, 325, 347, 348, 349, 350, 352, 353, 354, 356, 359, 360, 362, 364, 365], "enumer": [2, 13, 14, 15, 20, 31, 37, 41, 74, 86, 90, 104, 110, 171, 279, 343, 347, 348, 349, 350, 356, 362, 364], "break": [2, 5, 13, 14, 15, 20, 31, 37, 41, 51, 54, 55, 57, 58, 59, 60, 66, 73, 74, 77, 86, 90, 104, 110, 120, 123, 150, 169, 171, 305, 348, 354, 356, 362, 364], "step_count": [2, 13, 14, 15, 31, 86, 90, 95, 96, 104, 110, 157, 171, 349, 350, 351, 356, 364], "32": [2, 21, 25, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 74, 108, 109, 111, 112, 182, 183, 184, 185, 186, 188, 189, 194, 203, 208, 209, 213, 214, 216, 217, 226, 284, 348, 349, 350, 352, 353, 360, 361, 362, 364, 365], "33": [2, 25, 31, 68, 86, 90, 104, 110, 171, 182, 183, 203, 346, 348, 350, 359, 360, 362, 363], "34": [2, 182, 183, 203, 348, 360, 362], "35": [2, 182, 183, 203, 348, 359, 360, 361], "36": [2, 348, 360, 361, 362], "37": [2, 122, 348, 360, 361], "38": [2, 7, 346, 348, 350, 360, 362, 363], "39": [2, 55, 95, 96, 348, 349, 350, 360, 361], "40": [2, 95, 96, 348, 349, 350, 359, 360], "41": [2, 348, 360], "11": [2, 10, 22, 26, 32, 44, 62, 63, 65, 74, 79, 87, 161, 171, 181, 205, 346, 348, 349, 359, 360, 362, 363], "12": [2, 10, 58, 62, 63, 74, 79, 95, 96, 104, 108, 109, 110, 171, 348, 349, 350, 360, 362], "14": [2, 6, 11, 51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74, 86, 90, 104, 110, 141, 171, 346, 348, 349, 350, 359, 360, 361, 362, 363, 364], "15": [2, 22, 51, 52, 53, 54, 55, 56, 57, 58, 59, 74, 86, 90, 104, 110, 171, 234, 241, 265, 348, 360, 362], "16": [2, 3, 31, 58, 66, 74, 82, 83, 86, 90, 95, 96, 104, 110, 123, 171, 348, 349, 350, 360, 362], "17": [2, 58, 74, 104, 171, 331, 346, 348, 350, 359, 360, 363], "could": [2, 3, 4, 6, 22, 348, 349, 355, 359, 361, 365], "sai": [2, 31, 86, 90, 104, 110, 171, 208, 361, 365], "interleav": 2, "cannot": [2, 3, 4, 7, 21, 25, 26, 27, 30, 32, 64, 66, 73, 74, 86, 89, 90, 91, 94, 104, 110, 128, 131, 146, 153, 243, 348, 349, 350, 359, 360], "handl": [2, 3, 20, 31, 86, 90, 104, 110, 168, 169, 171, 201, 203, 322, 336, 337, 347, 348, 349, 351, 353, 359, 362], "suggest": [2, 284, 347, 359], "serialenv": [2, 3, 86, 90, 104, 159, 171, 240, 340, 365], "squeez": [2, 3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 119, 120, 123, 156, 158, 182, 183, 221, 222, 347, 360, 362], "6": [2, 3, 7, 13, 14, 15, 16, 22, 31, 37, 51, 58, 59, 66, 74, 84, 85, 104, 108, 109, 119, 141, 143, 158, 182, 183, 185, 186, 187, 190, 194, 196, 202, 203, 208, 209, 213, 223, 240, 242, 250, 331, 346, 348, 354, 359, 360, 362, 363, 364], "5": [2, 3, 13, 14, 22, 23, 25, 27, 31, 34, 37, 40, 41, 51, 68, 73, 74, 77, 86, 87, 90, 95, 96, 101, 104, 108, 109, 110, 111, 112, 119, 120, 122, 150, 157, 158, 171, 181, 182, 183, 185, 186, 191, 192, 193, 194, 195, 198, 199, 202, 203, 205, 208, 209, 213, 218, 224, 225, 234, 235, 240, 243, 249, 270, 273, 275, 278, 342, 346, 347, 348, 352, 354, 356, 359, 360, 362, 363, 364, 365], "7": [2, 3, 6, 10, 26, 31, 32, 34, 37, 40, 66, 74, 86, 90, 104, 110, 119, 158, 181, 182, 183, 186, 202, 203, 205, 208, 292, 346, 347, 348, 350, 354, 359, 360, 361, 362, 363, 364], "9": [2, 3, 7, 22, 31, 34, 37, 40, 58, 59, 66, 74, 77, 84, 85, 99, 105, 106, 119, 158, 169, 171, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 279, 284, 343, 346, 347, 348, 349, 350, 351, 354, 359, 360, 362, 363], "18": [2, 58, 74, 108, 109, 111, 112, 171, 209, 346, 348, 349, 350, 354, 359, 360, 361, 363], "19": [2, 58, 73, 74, 77, 171, 348, 350, 359, 360], "independ": [2, 13, 14, 15, 16, 17, 18, 19, 20, 54, 104, 110, 162, 164, 209, 343, 344, 347, 348, 359, 362, 364], "congruent": 2, "custom": [2, 3, 5, 31, 86, 90, 104, 110, 165, 171, 208, 209, 249, 264, 273, 279, 338, 342, 347, 348, 349, 350, 352, 353, 355, 359], "name": [2, 3, 6, 7, 11, 15, 31, 33, 35, 38, 44, 51, 54, 56, 59, 60, 82, 84, 86, 90, 95, 99, 101, 104, 105, 106, 107, 110, 111, 112, 113, 130, 133, 148, 153, 154, 157, 163, 165, 168, 171, 180, 197, 201, 235, 243, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 286, 288, 289, 290, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 331, 344, 347, 348, 349, 350, 353, 355, 359, 360, 365], "randomcroptensordict": [2, 347], "unlik": [2, 72, 111, 112, 240, 264, 273, 305, 348, 352, 354, 364], "stop": [2, 3, 15, 20, 39, 59, 66, 73, 74, 86, 90, 104, 110, 349, 354, 359, 364, 365], "signal": [2, 3, 13, 14, 15, 16, 22, 51, 53, 55, 57, 58, 59, 66, 73, 74, 77, 90, 111, 112, 123, 132, 157, 160, 180, 343, 347, 349, 359, 362, 365], "disk": [2, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 322, 344, 347, 348, 350, 354, 355, 362], "dump": [2, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 304, 305, 355, 356], "load": [2, 6, 7, 13, 14, 15, 16, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 85, 86, 90, 104, 110, 116, 169, 171, 338, 344, 347, 349, 362], "json": 2, "metadata": [2, 51, 53, 349, 351, 353, 354, 359, 365], "anticip": [2, 128, 131], "compli": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 57], "back": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 43, 45, 46, 53, 168, 172, 229, 235, 236, 242, 243, 244, 245, 246, 349, 359, 360, 362], "exact": [2, 3, 104, 199], "statu": [2, 3, 86], "prioriti": [2, 4, 34, 40, 41, 62, 63, 64, 65, 66, 75, 76, 79, 258, 259, 261, 262, 263, 264, 269, 274, 276, 278, 284, 344, 347, 348, 362], "heap": 2, "under": [2, 3, 4, 20, 31, 39, 51, 53, 54, 55, 57, 58, 59, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 171, 229, 235, 236, 242, 243, 244, 245, 246, 271, 286, 287, 288, 289, 290, 305, 343, 347, 348, 352, 360, 365], "hood": [2, 20, 51, 86, 90, 104, 110, 360], "just": [2, 3, 4, 11, 76, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 119, 126, 180, 209, 313, 342, 344, 347, 348, 349, 350, 351, 352, 354, 359, 360, 362, 364, 365], "public": [2, 56, 145, 167], "serializ": 2, "altern": [2, 4, 26, 101, 189, 206, 207, 208, 254, 347, 349, 359], "state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 104, 110, 163, 169, 171, 276, 338, 344, 347, 348, 365], "load_state_dict": [2, 13, 14, 15, 16, 20, 31, 33, 35, 38, 86, 90, 104, 110, 163, 169, 171, 276, 344, 347], "drawback": 2, "struggl": 2, "big": [2, 349, 354, 362, 365], "sequenti": [2, 9, 31, 86, 90, 104, 110, 122, 139, 171, 247, 248, 273, 342, 349, 350, 352, 359, 360, 361, 365], "known": [2, 3, 5, 7, 8, 293, 294, 347, 348, 351], "seamless": [2, 203], "integr": [2, 31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 188, 197, 201, 205, 245, 342, 351, 352, 354, 359, 360, 361], "indiffer": 2, "particularli": 2, "heavili": 2, "smooth": [2, 347, 348, 353], "essenti": [2, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 348, 351, 360, 362], "understand": [2, 3, 8, 347, 348, 351, 352, 359], "purpos": [2, 3, 7, 86, 90, 104, 110, 123, 195, 255, 257, 270, 273, 275, 334, 347, 349, 350, 353, 355, 359, 361, 365], "guid": [2, 105, 106, 108, 109, 158, 341, 347, 359], "explan": [2, 31, 86, 90, 104, 110, 171], "effect": [2, 3, 25, 31, 34, 37, 40, 41, 51, 57, 66, 68, 71, 73, 74, 86, 90, 104, 110, 119, 123, 163, 171, 322, 347, 352, 362, 365], "realm": [2, 352], "As": [2, 3, 4, 31, 51, 86, 90, 99, 104, 105, 106, 110, 150, 246, 286, 342, 347, 348, 349, 350, 351, 353, 354, 359, 360, 361, 362, 364, 365], "practition": 2, "often": [2, 3, 8, 268, 322, 347, 348, 351, 353, 360, 362, 365], "encount": [2, 4, 57, 240, 341, 348, 352, 360], "situat": 2, "sometim": [2, 3, 350, 365], "discard": [2, 3, 44, 53, 55, 90, 165, 179, 304, 362, 365], "variabl": [2, 4, 7, 8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 54, 55, 58, 59, 82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 102, 103, 107, 111, 112, 195, 196, 197, 199, 200, 201, 205, 230, 231, 232, 271, 274, 344, 348], "observ": [2, 3, 8, 13, 14, 15, 16, 20, 31, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 137, 138, 139, 141, 142, 143, 147, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 179, 184, 185, 186, 187, 188, 189, 192, 197, 201, 202, 208, 213, 214, 216, 218, 219, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 250, 251, 255, 256, 257, 258, 259, 261, 262, 263, 266, 269, 270, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 305, 331, 334, 342, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 362, 364, 365], "immedi": [2, 25, 27, 31, 86, 90, 104, 110, 171, 285, 359], "200": [2, 13, 14, 15, 20, 31, 51, 86, 89, 90, 91, 104, 110, 111, 112, 150, 171, 185, 186, 193, 219, 220, 305, 347, 350, 354, 356, 360, 362], "199": [2, 360], "info": [2, 3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 71, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 105, 106, 108, 109, 110, 111, 112, 165, 168, 170, 312, 351, 356, 359, 362], "At": [2, 204, 237, 348, 349, 350, 354, 358, 360, 361], "glanc": [2, 351], "seem": [2, 347, 350, 351], "togeth": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 39, 86, 90, 99, 104, 105, 106, 110, 123, 146, 195, 197, 199, 201, 226, 230, 231, 232, 251, 342, 348, 350, 351], "less": [2, 101, 227, 336, 337, 343, 349, 350, 362, 364], "omit": [2, 317, 349, 353, 360, 362], "proper": [2, 3, 4, 6, 7, 286, 287, 288, 289, 348, 349, 359, 362], "imposs": [2, 77, 172, 255, 257, 270, 273, 275], "determin": [2, 34, 40, 53, 65, 66, 86, 90, 104, 110, 111, 112, 145, 167, 208, 241, 348, 352, 359], "complic": [2, 360, 362, 365], "matter": [2, 354], "inconsist": [2, 365], "miss": [2, 3, 4, 6, 7, 11, 25, 31, 86, 90, 104, 110, 163, 171, 179, 247, 248, 276, 341, 347, 350], "behavior": [2, 4, 31, 86, 90, 104, 110, 163, 171, 262, 269, 350, 359, 360], "primari": [2, 354], "elimin": [2, 3, 351], "represent": [2, 27, 28, 31, 86, 90, 104, 110, 145, 165, 167, 171, 347, 360, 361, 365], "upon": [2, 8, 360], "canon": 2, "definit": [2, 32, 75, 208], "markov": [2, 3, 351, 365], "decis": [2, 3, 184, 216, 234, 260, 272, 350, 351, 352, 359, 362, 365], "mdp": [2, 351, 360], "context": [2, 3, 5, 8, 31, 86, 87, 90, 103, 104, 110, 159, 164, 171, 209, 210, 234, 282, 283, 286, 287, 288, 289, 291, 299, 305, 318, 342, 343, 347, 348, 349, 359, 360, 361, 362], "condit": [2, 44, 158, 235, 236, 240, 243, 244, 254, 347, 360, 362], "complet": [2, 7, 9, 72, 86, 90, 104, 110, 123, 157, 341, 343, 347, 349, 351, 358], "termin": [2, 3, 7, 13, 14, 15, 16, 31, 39, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 89, 90, 91, 95, 96, 104, 105, 106, 108, 109, 110, 111, 112, 119, 120, 132, 147, 171, 180, 181, 197, 201, 205, 240, 247, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 364, 365], "truncat": [2, 3, 13, 14, 15, 16, 31, 36, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 104, 105, 106, 110, 111, 112, 132, 133, 140, 147, 150, 157, 163, 171, 180, 197, 201, 225, 240, 292, 347, 349, 350, 351, 352, 354, 355, 358, 361, 362, 364, 365], "reward": [2, 3, 13, 14, 15, 31, 33, 38, 39, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 77, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 117, 120, 121, 126, 127, 128, 129, 131, 132, 133, 139, 143, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 162, 163, 164, 166, 167, 169, 171, 176, 179, 181, 197, 205, 234, 240, 251, 255, 256, 258, 259, 261, 262, 263, 266, 269, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 318, 320, 338, 343, 344, 347, 348, 349, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 364, 365], "imit": [2, 3], "addit": [2, 3, 4, 31, 53, 86, 90, 104, 110, 111, 127, 145, 159, 162, 163, 165, 167, 171, 195, 233, 234, 240, 245, 254, 271, 286, 343, 347, 348, 351, 359, 362], "inform": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 42, 43, 45, 46, 57, 86, 87, 90, 93, 104, 110, 171, 182, 183, 203, 209, 343, 344, 347, 348, 349, 350, 351, 359, 360, 362], "stateless": [2, 3, 86, 90, 104, 110, 120, 162, 271, 347, 351, 360, 365], "simul": [2, 3, 5, 7, 8, 82, 83, 92, 95, 96, 107, 111, 112, 115, 181, 205, 342, 347, 349, 351, 355, 359], "furthermor": [2, 359], "certain": [2, 4, 17, 18, 19, 20, 31, 44, 86, 90, 104, 110, 116, 136, 157, 163, 171, 196, 200, 237, 270, 342, 347, 348, 349, 356, 359, 365], "composit": [2, 3, 25, 27, 71, 76, 81, 86, 90, 104, 110, 349, 352, 360], "accommod": [2, 3, 351, 352], "uniform": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 43, 45, 46, 65, 66], "unambigu": 2, "distinguish": [2, 111, 112], "happen": [2, 3, 86, 90, 104, 110, 233, 348, 353, 354, 355, 361, 365], "limit": [2, 39, 86, 90, 100, 104, 110, 123, 139, 255, 257, 270, 273, 275, 347, 348, 350, 359, 360], "everyth": [2, 348, 349, 350, 355, 356], "belong": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 57, 168, 169, 342, 347, 354, 359], "rule": [2, 104, 128, 131, 246, 342, 349], "entri": [2, 3, 13, 14, 16, 22, 25, 27, 31, 33, 35, 36, 38, 44, 48, 53, 54, 55, 56, 58, 59, 73, 74, 84, 85, 86, 89, 90, 91, 92, 104, 107, 110, 111, 112, 119, 123, 125, 126, 128, 131, 132, 135, 138, 141, 143, 145, 148, 150, 153, 155, 157, 158, 159, 167, 169, 171, 179, 180, 197, 206, 207, 234, 235, 240, 243, 244, 256, 276, 286, 287, 288, 289, 342, 347, 349, 350, 351, 352, 353, 355, 359, 360, 361, 362, 365], "field": [2, 3, 13, 14, 15, 16, 22, 25, 31, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 120, 128, 131, 132, 133, 143, 147, 148, 150, 154, 157, 159, 163, 171, 179, 181, 191, 192, 197, 201, 205, 217, 218, 226, 229, 230, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 326, 331, 341, 342, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "taken": [2, 3, 86, 90, 104, 110, 149, 206, 207, 238, 343, 347, 349, 350, 352, 359, 360], "is_shar": [2, 3, 13, 14, 15, 22, 25, 33, 35, 36, 39, 40, 41, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 99, 100, 103, 104, 105, 106, 108, 109, 110, 111, 112, 120, 128, 131, 132, 133, 143, 147, 148, 150, 154, 157, 159, 169, 179, 181, 191, 192, 197, 201, 205, 217, 218, 226, 229, 230, 231, 232, 234, 235, 236, 240, 241, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 331, 342, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "brought": [2, 349, 350, 352], "step_mdp": [2, 3, 86, 90, 104, 110, 197, 201, 340, 350, 351, 360, 364, 365], "count": [2, 3, 31, 86, 87, 157, 241, 318, 322, 325, 347, 348, 349, 350, 362, 365], "trigger": [2, 7], "partial": [2, 3, 86, 90, 104, 110, 122, 123, 158, 159, 160, 322, 350], "turn": [2, 17, 18, 19, 20, 33, 35, 38, 137, 164, 168, 235, 318, 343, 347, 348, 350, 352, 360, 361], "retain": 2, "regard": [2, 53, 59, 192, 236, 255, 264, 273, 347, 349, 360], "posit": [2, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 84, 85, 86, 90, 104, 110, 135, 136, 156, 157, 160, 163, 164, 171, 212, 276, 343, 349, 359, 360, 362], "both": [2, 3, 7, 31, 34, 37, 40, 41, 57, 86, 87, 89, 90, 104, 105, 106, 110, 123, 148, 163, 171, 180, 182, 183, 197, 200, 201, 203, 208, 209, 230, 231, 232, 236, 244, 255, 257, 258, 262, 263, 269, 270, 271, 273, 274, 275, 276, 278, 318, 342, 347, 349, 351, 353, 359, 360, 361, 362, 365], "mark": [2, 3, 15, 59, 86, 90, 104, 110, 197, 201, 286, 288, 289, 354, 362], "identifi": [2, 36], "marl": [2, 99, 113, 123, 160, 208, 351, 359], "abov": [2, 3, 7, 31, 86, 90, 104, 110, 171, 198, 224, 225, 254, 343, 344, 347, 349, 351, 352, 359, 360, 365], "output": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 66, 73, 74, 84, 85, 86, 89, 90, 91, 92, 100, 103, 104, 105, 106, 107, 110, 111, 112, 120, 121, 123, 126, 127, 128, 129, 131, 133, 139, 141, 145, 147, 148, 153, 154, 157, 160, 162, 163, 165, 167, 168, 171, 172, 180, 182, 183, 184, 185, 186, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 208, 209, 212, 218, 227, 229, 230, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 305, 313, 342, 343, 347, 348, 349, 350, 351, 352, 355, 358, 359, 360, 361, 362, 364, 365], "typic": [2, 3, 4, 8, 31, 86, 90, 104, 110, 132, 158, 171, 242, 256, 271, 273, 276, 342, 343, 344, 349, 351, 353, 354, 359, 360], "adjust": [2, 347, 359, 360], "grumodul": [2, 122], "lstmmodul": [2, 350], "skip": [2, 3, 31, 51, 86, 90, 104, 110, 136, 163, 171, 172, 242, 246, 271, 276, 286, 287, 288, 289, 304, 305, 315, 318, 347, 348, 360], "accumul": [2, 8, 171], "upcom": [2, 271, 295, 296, 297, 298, 300, 301, 302, 303, 347], "popular": [2, 3, 342, 350, 353, 359], "rainbow": 2, "multistep": [2, 13, 14, 15, 16, 17, 18, 19, 20, 171, 340, 348], "fail": [2, 7, 21, 25, 27, 104, 117, 172], "shift": [2, 31, 252, 286, 287, 288, 289, 349], "naiv": [2, 165, 351], "consum": [2, 72, 74, 240, 348, 349, 354, 359, 362], "approxim": [2, 359, 365], "twice": [2, 8], "flat": [2, 77], "would": [2, 3, 31, 39, 86, 90, 104, 110, 171, 195, 197, 199, 201, 203, 208, 344, 348, 349, 350, 351, 353, 354, 360, 362, 365], "intens": [2, 3, 8], "ataridqnexperiencereplai": 2, "onlin": [2, 8, 13, 16, 123, 189, 216, 255, 260, 272, 273, 313, 338, 349, 350, 359, 362], "2x": 2, "small": [2, 165, 347, 349, 359, 365], "clearer": [2, 352], "lazi": [2, 27, 28, 48, 49, 86, 90, 104, 110, 111, 112, 145, 165, 182, 208, 210, 247, 248, 347, 348, 352, 354, 358, 362, 365], "certainli": 2, "benefici": 2, "welcom": [2, 351], "wrapper": [2, 3, 11, 16, 33, 35, 38, 39, 40, 41, 82, 83, 84, 85, 86, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 168, 212, 227, 233, 234, 238, 240, 241, 246, 251, 286, 310, 311, 312, 338, 340, 349, 350, 351, 359, 361, 365], "around": [2, 5, 7, 16, 40, 41, 100, 240, 246, 286, 347, 348, 359, 365], "selecttransform": [2, 86, 90, 104, 110], "excludetransform": [2, 58, 154, 362], "promptli": 2, "virtual": [2, 3, 89], "instal": [2, 3, 5, 10, 17, 18, 19, 53, 56, 86, 90, 104, 105, 106, 108, 109, 110, 307, 322, 341, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 365], "respons": [2, 3, 8, 66, 73, 322, 353, 354, 365], "d4rl": [2, 53, 59], "repositori": [2, 7, 54, 55, 56, 59, 112], "wheel": [2, 349], "publish": 2, "openml": [2, 56, 103], "scikit": [2, 56, 103], "panda": [2, 56], "raw": [2, 3, 4, 39, 198, 224, 225, 348, 354, 360], "go": [2, 3, 7, 99, 104, 146, 150, 234, 292, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "natur": [2, 3, 347, 350, 352, 353, 354, 362], "modifi": [2, 3, 7, 8, 25, 27, 31, 44, 86, 90, 104, 110, 120, 127, 135, 139, 145, 159, 162, 163, 165, 167, 171, 234, 241, 245, 325, 331, 347, 348, 349, 351, 359, 360], "fly": [2, 169, 270, 343, 349, 360, 362, 365], "extra": [2, 10, 31, 86, 90, 104, 110, 123, 169, 171, 179, 312, 342, 349, 350, 362], "least": [2, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 126, 355, 365], "pre": [2, 7, 21, 31, 44, 57, 63, 86, 90, 104, 110, 145, 165, 167, 171, 365], "appli": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 42, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 117, 119, 120, 122, 123, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 144, 146, 147, 148, 150, 153, 154, 157, 158, 159, 160, 162, 163, 165, 166, 168, 169, 171, 195, 199, 224, 235, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 276, 278, 286, 317, 344, 347, 348, 349, 354, 360, 364, 365], "conisder": 2, "space": [2, 9, 32, 43, 86, 90, 104, 110, 126, 130, 176, 189, 192, 208, 214, 218, 229, 233, 235, 236, 238, 241, 242, 243, 244, 245, 246, 248, 249, 250, 259, 261, 262, 263, 278, 284, 342, 348, 349, 350, 351, 352, 353, 359, 360, 364, 365], "per": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 54, 77, 94, 95, 96, 104, 105, 106, 126, 153, 182, 183, 193, 208, 209, 237, 240, 307, 322, 336, 337, 347, 348, 349, 350, 352, 353, 356, 359, 362, 364], "pipelin": [2, 3, 7, 342, 349], "replac": [2, 3, 6, 7, 25, 27, 31, 51, 57, 66, 73, 74, 119, 130, 132, 179, 237, 342, 362], "onc": [2, 3, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 57, 68, 86, 90, 104, 110, 119, 150, 163, 171, 233, 238, 240, 241, 320, 344, 348, 349, 350, 352, 355, 360, 362, 365], "produc": [2, 119, 120, 182, 183, 203, 209, 215, 230, 232, 234, 305, 349, 350, 351, 352, 354, 362, 365], "unless": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 57, 72, 86, 90, 104, 105, 106, 110, 163, 171, 276, 349], "download": [2, 7, 10, 51, 53, 54, 55, 57, 58, 59, 94, 145, 167, 305, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "forc": [2, 3, 6, 7, 13, 14, 16, 17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 348, 359, 360], "robosetexperiencereplai": [2, 73, 74], "fk1": [2, 58], "v4": [2, 58, 90, 104, 149, 295, 296, 297, 298, 300, 301, 302, 303, 331, 347, 349, 361], "expert": [2, 58], "fk1_microopenrandom_v2d": [2, 58], "func": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 170, 347, 362, 365], "obs_norm": 2, "norm": [2, 4, 8, 82, 83, 322, 347, 348, 349, 359, 360], "num_work": [2, 33, 35, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 101, 104, 110, 347, 348], "os": [2, 35, 44, 60, 348], "cpu_count": [2, 35, 44, 60], "num_chunk": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59], "1000": [2, 4, 37, 65, 73, 74, 86, 90, 104, 110, 123, 169, 237, 241, 242, 246, 268, 347, 348, 349, 350, 352, 354, 356, 361, 362], "mp_start_method": [2, 51, 52, 53, 54, 55, 56, 57, 58, 59, 104, 110], "fork": [2, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 347, 348, 349, 350, 359, 361], "recreat": [2, 360], "customari": [2, 342], "moreov": [2, 3], "fine": [2, 3, 86, 90, 104, 110, 120, 139, 354, 361], "grain": [2, 3, 86, 90, 104, 110, 120], "nomenclatur": 2, "compact": 2, "propos": [2, 123, 132, 204, 268, 277, 331, 342, 350, 362], "replaybufferensembl": [2, 51, 71, 76, 81], "primit": [2, 3, 4, 57, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278], "individu": [2, 4, 17, 18, 19, 20, 31, 44, 68, 77, 86, 90, 104, 110, 171, 347, 359], "dummi": [2, 331, 347, 354, 365], "semant": [2, 27, 28, 342], "ident": [2, 3, 13, 14, 15, 31, 33, 35, 38, 73, 86, 90, 101, 104, 110, 132, 208, 209, 286, 287, 288, 289, 336, 337, 348, 351, 359], "another_kei": [2, 68], "renam": [2, 33, 35, 38, 68, 148, 150, 179, 347], "resiz": [2, 3, 59, 68, 123, 348, 350, 351, 362, 365], "imag": [2, 4, 7, 57, 125, 145, 161, 167, 203, 305, 347, 348, 351, 355, 359, 361, 365], "comops": 2, "totensorimag": [2, 3, 59, 68, 123, 149, 348, 350, 362, 364, 365], "renametransform": [2, 68, 86, 90, 104, 110], "rb0": [2, 68], "in_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 100, 104, 110, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 137, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 160, 161, 162, 163, 165, 167, 169, 181, 191, 197, 201, 205, 217, 226, 227, 229, 230, 231, 232, 234, 235, 240, 242, 243, 245, 246, 248, 249, 250, 255, 256, 257, 258, 259, 261, 262, 263, 269, 270, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 304, 305, 331, 334, 342, 347, 348, 349, 350, 352, 353, 356, 358, 359, 360, 361, 362, 364, 365], "pixel": [2, 3, 7, 25, 59, 68, 84, 85, 89, 91, 92, 107, 123, 125, 132, 135, 137, 141, 143, 145, 149, 161, 165, 167, 185, 213, 214, 305, 331, 342, 347, 348, 350, 355, 361, 362, 364, 365], "rb1": [2, 68], "out_kei": [2, 3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 86, 90, 100, 104, 110, 121, 122, 123, 124, 125, 126, 128, 129, 131, 135, 137, 139, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 155, 158, 160, 161, 162, 165, 167, 169, 181, 191, 192, 197, 201, 205, 217, 218, 226, 227, 229, 230, 231, 232, 234, 236, 240, 242, 243, 244, 245, 246, 248, 249, 250, 255, 256, 257, 262, 263, 269, 270, 273, 274, 275, 276, 284, 286, 287, 288, 289, 305, 318, 334, 342, 347, 348, 349, 350, 352, 356, 358, 359, 360, 361, 362, 364, 365], "pixels33": [2, 68], "data0": [2, 68], "244": [2, 68, 145, 167, 360], "data1": [2, 68], "_": [2, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 87, 94, 111, 112, 124, 128, 130, 131, 139, 141, 148, 161, 169, 171, 229, 245, 250, 254, 255, 256, 258, 262, 263, 269, 273, 274, 276, 278, 286, 287, 288, 289, 307, 347, 348, 349, 350, 356, 359, 360, 362, 364], "rang": [2, 3, 4, 8, 11, 26, 34, 37, 39, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 68, 77, 86, 87, 90, 104, 110, 150, 161, 169, 171, 196, 200, 270, 278, 343, 344, 347, 349, 350, 353, 354, 356, 359, 360, 362, 364], "parent": [2, 3, 20, 25, 27, 43, 52, 68, 76, 81, 86, 90, 104, 110, 120, 123, 124, 127, 129, 132, 135, 136, 141, 145, 153, 157, 158, 159, 160, 162, 164, 165, 171, 230, 271, 273, 290, 305, 347, 354, 360, 364, 365], "basic": [2, 100, 342, 349, 353, 354, 356, 365], "properti": [2, 3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 110, 119, 162, 163, 171, 190, 198, 210, 215, 223, 224, 225, 240, 271, 276, 352, 354, 360, 362], "input": [2, 3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 43, 45, 46, 86, 90, 100, 103, 104, 105, 106, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 150, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 179, 180, 182, 183, 185, 186, 187, 188, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 208, 209, 210, 211, 218, 219, 220, 221, 222, 227, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 316, 320, 325, 334, 342, 343, 344, 347, 348, 349, 350, 351, 359, 360, 364, 365], "send": [2, 3, 8, 312, 364], "receiv": [2, 3, 31, 39, 86, 90, 104, 110, 162, 163, 171, 203, 292, 343, 347, 349, 353, 358, 360], "spawn": [2, 3, 4, 17, 21, 94, 101, 104, 110, 348, 359], "check_env_spec": [2, 3, 90, 104, 147, 340, 349, 359, 360], "saniti": [2, 3, 7, 172, 349], "utmost": 2, "commonli": [2, 66, 73, 74, 365], "emploi": [2, 211], "languag": [2, 39], "scarc": 2, "address": [2, 362], "subdomain": 2, "facilit": [2, 3, 7, 144, 145, 165, 167, 230, 231, 232, 342, 347, 350, 352, 360], "extern": [2, 3, 128, 131, 365], "token": [2, 35, 36, 39, 42, 44, 60], "manner": [2, 90, 145, 165, 342, 347, 348, 349, 354, 358, 360, 362], "dm": [3, 347, 365], "base": [3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33, 34, 35, 37, 38, 40, 41, 44, 57, 70, 77, 78, 80, 82, 83, 86, 90, 94, 95, 96, 100, 101, 102, 104, 110, 111, 150, 159, 165, 166, 208, 230, 239, 255, 256, 258, 259, 261, 262, 263, 265, 269, 273, 274, 275, 276, 278, 312, 322, 331, 342, 343, 344, 347, 348, 350, 351, 352, 353, 359, 360, 362, 365], "goal": [3, 4, 51, 52, 53, 54, 55, 56, 57, 58, 59, 158, 347, 348, 349, 350, 359, 360], "abl": [3, 99, 105, 106, 347, 349, 350, 352, 358, 359, 360, 362, 364], "experi": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 65, 66, 172, 307, 308, 309, 310, 311, 312, 341, 348, 349, 354, 355, 359, 362], "box": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 20, 21, 86, 87, 90, 104, 105, 106, 108, 109, 110, 123, 126, 132, 138, 139, 141, 143, 148, 150, 153, 159, 162, 168, 169, 171, 331, 334, 347, 348, 349, 350, 358, 359, 361, 362, 364, 365], "hope": 3, "nn": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 82, 83, 86, 90, 100, 104, 110, 127, 130, 132, 139, 145, 159, 162, 163, 165, 167, 171, 181, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 205, 207, 208, 209, 212, 217, 218, 226, 229, 230, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 250, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 331, 334, 342, 343, 347, 348, 349, 350, 352, 353, 356, 358, 359, 360, 361, 362, 364, 365], "organis": [3, 58, 86, 90, 104, 110, 163, 348], "arbitrari": [3, 32, 37, 86, 90, 104, 110, 119, 342, 347, 348, 360, 362], "structur": [3, 7, 33, 34, 35, 37, 38, 39, 40, 41, 44, 77, 86, 90, 104, 110, 128, 131, 180, 208, 241, 286, 287, 288, 289, 290, 340, 343, 347, 349, 350, 351, 354, 359, 360, 361], "attribut": [3, 4, 31, 33, 35, 38, 44, 57, 86, 89, 90, 91, 104, 110, 132, 145, 165, 171, 197, 201, 246, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 347, 350, 360], "live": [3, 12, 13, 14, 15, 16, 18, 19, 31, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 100, 104, 110, 132, 171], "actual": [3, 4, 7, 51, 53, 54, 55, 57, 58, 59, 86, 90, 104, 110, 168, 325, 343, 347, 349, 359, 360], "retriev": [3, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 71, 86, 89, 90, 91, 104, 110, 124, 129, 132, 141, 179, 181, 182, 202, 205, 240, 242, 246, 249, 255, 256, 257, 259, 270, 273, 274, 276, 278, 284, 286, 287, 288, 289, 331, 338, 344, 348, 349, 352, 360, 365], "care": [3, 8, 86, 90, 104, 110, 162, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 305, 347, 349, 359, 360, 362], "parametr": [3, 211, 246, 256, 262, 269, 276, 347, 349], "hardwar": 3, "observation_spec": [3, 86, 90, 100, 104, 110, 117, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 135, 137, 138, 139, 141, 143, 145, 147, 149, 153, 155, 157, 158, 159, 160, 161, 162, 164, 165, 168, 171, 181, 197, 201, 205, 326, 334, 347, 349, 353, 358, 359, 360, 365], "compositespec": [3, 27, 28, 48, 86, 88, 90, 100, 104, 110, 117, 120, 128, 129, 130, 131, 133, 139, 147, 148, 154, 157, 159, 162, 171, 176, 180, 181, 205, 229, 233, 242, 248, 249, 340, 347, 349, 350, 359, 360, 365], "pair": [3, 31, 33, 35, 38, 53, 84, 85, 86, 90, 104, 110, 150, 159, 197, 230, 242, 246, 271, 286, 287, 288, 289, 290, 342, 343, 347, 348, 349, 352, 353, 358, 360, 365], "state_spec": [3, 86, 90, 100, 104, 110, 117, 181, 205, 360, 365], "reward_spec": [3, 86, 90, 100, 104, 110, 117, 120, 121, 126, 127, 128, 129, 131, 147, 151, 152, 153, 155, 162, 164, 171, 181, 205, 349, 359, 360, 365], "done_spec": [3, 86, 90, 104, 110, 128, 129, 131, 132, 147, 162, 171, 180, 359, 360, 365], "flag": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 111, 112, 241, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 342, 359, 360, 361], "input_spec": [3, 86, 90, 100, 104, 110, 120, 127, 128, 129, 130, 141, 143, 147, 148, 153, 154, 157, 158, 159, 162, 163, 164, 166, 171, 349, 360], "full_action_spec": [3, 86, 90, 104, 110, 181, 205, 349, 359], "full_state_spec": [3, 86, 90, 104, 110, 181, 205, 349], "lock": [3, 25, 27, 33, 35, 38, 86, 90, 104, 110, 120, 159, 169, 360], "output_spec": [3, 86, 90, 104, 110, 120, 127, 128, 129, 133, 139, 147, 148, 154, 157, 162, 163, 171, 360], "full_observation_spec": [3, 86, 90, 104, 110, 181, 205], "full_reward_spec": [3, 86, 90, 104, 110, 120, 129, 147, 359], "full_done_spec": [3, 86, 90, 104, 110, 120, 129, 147, 180, 359], "importantli": [3, 242, 246], "action_s": 3, "help": [3, 4, 31, 86, 90, 104, 110, 132, 171, 255, 257, 270, 273, 275, 341, 343, 347, 348, 349, 350, 359], "With": [3, 95, 96, 99, 158, 344, 348, 359, 362, 365], "necessarili": [3, 86, 90, 104, 110, 365], "present": [3, 31, 33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 72, 86, 89, 90, 104, 110, 133, 150, 154, 163, 171, 179, 180, 184, 185, 186, 187, 188, 194, 199, 211, 216, 240, 241, 245, 246, 247, 248, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 338, 344, 347, 356, 358, 359, 362, 364], "0s": [3, 51, 57, 159, 350], "step_and_maybe_reset": [3, 86, 90, 104, 110, 351], "done_kei": [3, 22, 86, 90, 104, 110, 119, 123, 132, 150, 157, 171, 179, 359], "assign": [3, 4, 13, 14, 16, 31, 33, 35, 38, 86, 90, 104, 110, 163, 171, 258, 259, 261, 276, 349, 352, 359, 362], "_reset": [3, 86, 90, 100, 104, 110, 117, 119, 120, 123, 128, 131, 147, 180, 181, 205], "data_": [3, 86, 90, 104, 110], "append": [3, 8, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 104, 110, 119, 126, 127, 150, 159, 163, 168, 196, 197, 200, 201, 235, 243, 347, 348, 349, 350, 359, 360, 361, 362, 364], "set_se": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 95, 96, 100, 104, 110, 119, 141, 148, 153, 158, 160, 163, 171, 354, 356, 360, 364, 365], "seed": [3, 13, 14, 15, 16, 20, 58, 86, 90, 100, 104, 105, 106, 110, 111, 112, 117, 120, 128, 131, 147, 163, 172, 322], "determinist": [3, 31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 184, 193, 213, 220, 229, 238, 245, 246, 249, 256, 342, 347, 348, 350, 352, 353, 356, 360, 365], "preced": [3, 31, 202, 350], "risk": [3, 146], "overlap": [3, 40, 77], "reproduc": [3, 123, 172, 347, 349, 359], "maximum": [3, 4, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 36, 39, 42, 44, 60, 62, 63, 64, 65, 79, 86, 90, 104, 110, 130, 151, 157, 158, 160, 223, 224, 225, 249, 256, 262, 263, 269, 271, 272, 276, 305, 319, 347, 348, 349, 350, 352, 359, 362], "max_step": [3, 13, 77, 86, 90, 100, 104, 110, 111, 112, 157, 171, 351, 352, 353, 355, 356, 359, 364, 365], "tensordictmodul": [3, 13, 14, 15, 16, 17, 18, 19, 20, 39, 82, 83, 86, 90, 100, 104, 110, 122, 139, 192, 197, 201, 205, 217, 218, 226, 227, 230, 231, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 256, 258, 262, 263, 265, 266, 267, 269, 271, 274, 276, 278, 284, 285, 286, 287, 288, 289, 318, 334, 340, 347, 349, 350, 353, 356, 358, 359, 360, 361], "trail": [3, 169], "treat": [3, 31, 352, 353], "figur": [3, 347, 349, 350, 359, 360, 365], "brief": [3, 349, 351, 353, 362], "deliveri": 3, "design": [3, 31, 32, 71, 76, 81, 86, 90, 104, 110, 123, 146, 163, 171, 234, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 347, 348, 349, 350, 351, 352, 353, 358, 359, 360, 362, 365], "metaclass": 3, "everi": [3, 8, 25, 27, 31, 32, 75, 86, 90, 104, 110, 157, 158, 169, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 208, 209, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 322, 344, 347, 348, 349, 350, 351, 352, 359, 360], "flank": [3, 350], "dual": 3, "strictli": [3, 8, 31, 86, 90, 104, 110, 163, 171, 276, 347, 349], "refer": [3, 7, 8, 9, 20, 31, 39, 86, 89, 90, 91, 104, 110, 163, 169, 171, 181, 192, 193, 205, 206, 207, 208, 213, 214, 219, 220, 236, 255, 264, 265, 266, 267, 273, 276, 286, 291, 299, 346, 347, 349, 352, 353, 354, 355, 359, 362, 365], "union": [3, 11, 13, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 65, 66, 86, 90, 104, 110, 117, 130, 132, 138, 141, 145, 146, 150, 152, 154, 165, 167, 169, 171, 179, 183, 190, 192, 206, 207, 208, 209, 210, 211, 215, 217, 218, 223, 224, 225, 226, 240, 245, 261, 263, 268, 274, 277, 299, 316, 318, 319, 327, 328, 331, 332, 334, 335, 336, 337, 338], "carri": [3, 20, 44, 86, 90, 104, 110, 159, 271, 348, 350, 359, 360, 362], "assess": [3, 13, 14, 15, 16, 17, 18, 19, 20, 113, 347], "split_trajectori": [3, 13, 14, 15, 16, 17, 18, 19, 20, 51, 57, 66, 73, 74, 340], "adjac": [3, 22, 135, 240], "reli": [3, 195, 196, 199, 200, 255, 343, 347, 349, 352, 354, 360, 365], "junction": 3, "inittrack": [3, 197, 201, 240, 347, 350], "tutori": [3, 339, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365], "scratch": [3, 8, 348, 360], "gym3": 3, "envpool": [3, 101, 102], "interfac": [3, 93, 103, 203, 210, 342, 347, 349, 355, 360, 362], "simultan": [3, 19, 101, 102, 104, 110, 360], "competit": [3, 359], "advantag": [3, 8, 194, 255, 257, 270, 273, 275, 286, 287, 288, 289, 290, 291, 293, 295, 297, 299, 300, 302, 343, 344, 347, 348, 349, 350, 359, 360, 365], "scale": [3, 4, 53, 86, 90, 104, 110, 123, 139, 141, 152, 158, 161, 193, 198, 212, 219, 220, 224, 225, 230, 231, 232, 242, 246, 248, 255, 256, 269, 273, 274, 275, 276, 320, 326, 331, 338, 342, 347, 348, 349, 350, 352, 359, 364], "varieti": 3, "inherit": [3, 86, 90, 104, 110, 204, 271, 344, 349, 359], "Of": [3, 7, 341, 360, 365], "cours": [3, 4, 341, 360, 365], "from_pixel": [3, 82, 83, 84, 85, 89, 91, 92, 95, 96, 107, 123, 149, 305, 331, 347, 348, 350, 351, 355, 356, 361, 362, 364, 365], "81": [3, 348, 360, 361], "simpli": [3, 6, 33, 35, 38, 44, 76, 77, 81, 133, 154, 168, 271, 342, 343, 347, 349, 353, 359, 365], "d": [3, 34, 37, 40, 41, 54, 56, 58, 59, 60, 65, 66, 195, 199, 242, 246, 364], "privat": [3, 86, 90, 104, 110, 168, 360, 365], "absenc": 3, "total": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 51, 74, 77, 257, 270, 273, 313, 315, 318, 322, 325, 326, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365], "accord": [3, 13, 14, 15, 16, 17, 18, 19, 20, 33, 35, 38, 39, 68, 71, 141, 152, 198, 210, 219, 224, 225, 284, 342, 352, 353, 360, 362], "inner": [3, 86, 90, 104, 110, 130, 344, 348, 349, 359, 365], "logic": 3, "nevertheless": [3, 349, 351, 362], "kept": [3, 22, 72, 74, 130, 154, 162, 172, 179, 198, 224, 225, 353], "mind": [3, 51, 57, 66, 73, 74, 86, 90, 104, 110, 359], "desig": 3, "wherev": 3, "expos": [3, 107, 128, 131, 247, 348], "modif": [3, 5, 25, 27, 31, 86, 90, 104, 110, 135, 171, 180, 271, 349, 360], "lost": [3, 8, 168], "eras": [3, 66, 73, 86, 90, 104, 110, 163], "intern": [3, 345], "face": [3, 5, 8, 9, 351, 365], "NOT": [3, 146], "outsid": [3, 15, 355, 359, 360], "right": [3, 6, 7, 22, 39, 202, 348, 349, 359, 360, 365], "preliminari": 3, "warranti": 3, "affect": [3, 8, 31, 86, 90, 104, 110, 162, 163, 171, 172, 286, 287, 288, 289], "assumpt": [3, 360, 362], "preclud": 3, "presenc": [3, 353], "annihil": 3, "reason": [3, 4, 8, 31, 57, 86, 90, 104, 105, 106, 110, 145, 165, 171, 201, 343, 347, 348, 349, 353, 354, 360, 362], "advanc": [3, 20, 34, 37, 40, 41, 351, 354, 362], "explicitli": [3, 4, 119, 348, 350, 354, 359, 362], "place": [3, 25, 27, 31, 33, 35, 38, 62, 63, 68, 71, 79, 86, 87, 90, 104, 110, 111, 112, 119, 127, 132, 145, 159, 162, 163, 165, 167, 168, 169, 171, 180, 234, 240, 245, 319, 324, 325, 348, 349, 352, 355, 359, 360, 362], "superse": 3, "pettingzoowrapp": [3, 340], "group": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 86, 90, 99, 104, 105, 106, 110, 111, 112, 113, 342, 348, 352, 354, 359, 362], "associ": [3, 31, 33, 35, 38, 86, 90, 104, 110, 171, 219, 338, 347, 362], "environemtn": 3, "__not__": 3, "constrain": [3, 139, 197, 201, 273], "li": 3, "fact": [3, 7, 8, 347, 349, 351, 359, 360, 361, 362, 365], "predict": [3, 31, 39, 191, 193, 204, 205, 234, 251, 255, 257, 261, 264, 266, 267, 270, 273, 275, 285, 342, 347, 348, 353], "know": [3, 4, 9, 34, 37, 40, 41, 233, 274, 318, 347, 348, 349, 350, 351, 352, 353, 354, 359, 362], "meaning": 3, "perfectli": [3, 344, 347, 360], "meaningless": 3, "val": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 353, 364], "agent0": 3, "agent1": 3, "overrid": [3, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 43, 45, 46, 51, 86, 90, 104, 110, 119, 338, 342], "bool": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 71, 72, 73, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 119, 120, 123, 124, 128, 130, 131, 132, 133, 135, 139, 140, 141, 143, 145, 147, 148, 150, 152, 153, 154, 157, 159, 161, 163, 164, 165, 167, 169, 171, 172, 179, 180, 181, 182, 183, 185, 186, 195, 196, 197, 198, 199, 200, 201, 203, 205, 208, 209, 210, 211, 224, 225, 229, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 284, 286, 287, 288, 289, 292, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 312, 315, 316, 318, 319, 320, 322, 331, 338, 348, 349, 350, 351, 352, 354, 355, 358, 359, 360, 361, 362, 364, 365], "500": [3, 347, 348, 360, 364], "launch": [3, 13, 14, 16, 17, 18, 19, 21, 51, 54, 104, 110], "bottleneck": [3, 8, 66, 73, 74], "great": [3, 7, 8, 364], "speedup": [3, 8, 365], "precis": [3, 128, 131, 179, 196, 200, 347, 349], "misspecifi": 3, "caus": [3, 7, 8, 62, 63, 79, 86, 90, 94, 104, 110, 146, 365], "breakag": 3, "rais": [3, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 57, 86, 90, 104, 110, 113, 123, 134, 140, 150, 158, 159, 160, 163, 171, 172, 233, 237, 238, 241, 276, 347, 349, 359, 362, 365], "mismatch": [3, 348], "mostli": [3, 16, 305, 343, 355, 362, 365], "subprocess": [3, 13, 14, 16, 87, 104, 110], "multithreadedenv": [3, 340], "underneath": 3, "higher": [3, 4, 126, 249, 347, 348, 349, 362, 365], "flexibl": [3, 9, 101, 279, 343, 344, 347, 362, 365], "cover": [3, 341, 349, 351, 354, 355, 360, 364], "type": [3, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 59, 60, 68, 86, 90, 99, 100, 103, 104, 105, 106, 110, 120, 127, 128, 129, 132, 133, 139, 145, 147, 148, 154, 157, 159, 162, 163, 165, 167, 169, 171, 174, 178, 182, 183, 203, 208, 209, 211, 217, 226, 233, 235, 242, 245, 246, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 280, 284, 292, 331, 336, 340, 342, 347, 348, 349, 354, 359, 360, 362, 365], "atari": [3, 4, 51, 123, 305, 355, 365], "classic": [3, 100, 106, 348], "benchmark_batched_env": 3, "seamlessli": [3, 360], "infrastructur": [3, 359], "act": [3, 4, 73, 74, 105, 106, 163, 191, 209, 256, 258, 269, 274, 276, 278, 350, 359, 362], "world": [3, 5, 100, 251, 266, 355, 359, 360, 365], "paradigm": [3, 16, 359], "decpodp": 3, "game": [3, 4, 5, 51, 305, 355], "thank": [3, 347, 351], "carrier": [3, 349, 350, 351, 362], "particular": [3, 31, 44, 53, 54, 86, 90, 104, 110, 163, 171, 343, 344, 348, 350, 351, 358, 359, 362], "thu": [3, 270, 359], "let": [3, 6, 7, 31, 34, 37, 40, 41, 42, 86, 90, 104, 105, 106, 110, 123, 171, 197, 201, 208, 209, 235, 318, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "vma": [3, 111, 112, 359], "robot": [3, 5, 7, 57, 145, 165, 167, 359], "vmasenv": [3, 340, 359], "balanc": [3, 84, 85, 347, 348], "num_env": [3, 20, 89, 93, 102, 111, 112, 359], "n_agent": [3, 111, 112, 208, 209, 217, 226, 284, 359], "ground_rew": 3, "pos_rew": [3, 359], "style": [3, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59], "relat": [3, 4, 10, 34, 104, 135, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 348, 356, 360], "vari": [3, 89, 91, 92, 105, 106, 107, 111, 146, 359], "creation": [3, 104, 110, 365], "info_spec": [3, 104], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 32, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 117, 147, 180, 259, 262, 263, 284, 340, 359, 365], "simpl": [3, 9, 31, 32, 86, 90, 104, 110, 171, 185, 240, 246, 259, 261, 271, 275, 286, 342, 343, 347, 348, 349, 351, 352, 353, 359, 362, 365], "prefix": [3, 22, 31, 33, 35, 38, 44, 86, 90, 104, 110, 163, 171, 271, 276, 304, 350, 353, 365], "exactli": [3, 31, 86, 90, 92, 104, 110, 163, 171, 195, 199, 276, 347, 350, 354, 359], "action_kei": [3, 13, 14, 15, 16, 17, 18, 19, 20, 86, 90, 104, 110, 117, 130, 179, 181, 204, 205, 233, 237, 238, 240, 241, 359], "reward_kei": [3, 86, 90, 104, 110, 171, 179, 181, 205, 316, 320, 359], "set_kei": [3, 132, 255, 257, 259, 262, 263, 264, 269, 270, 271, 273, 274, 275, 276, 284, 290, 347, 359], "awai": [3, 349, 351, 359], "eas": [3, 359], "leaf": [3, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110, 157, 246], "full": [3, 86, 90, 104, 110, 197, 201, 236, 313, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "autoresettransform": 3, "copi": [3, 11, 17, 18, 19, 20, 31, 33, 35, 38, 39, 44, 57, 86, 90, 104, 110, 119, 148, 158, 163, 171, 179, 197, 201, 234, 271, 276, 343, 347, 348, 350, 351, 362], "invalid": [3, 31, 77, 86, 90, 104, 110, 113, 171, 206, 207], "nan": [3, 119, 168], "auto_reset": [3, 86, 90, 104, 110, 119, 171, 360], "auto_reset_replac": [3, 119], "placehold": [3, 92, 132, 163], "set_gym_backend": [3, 86, 89, 90, 104, 110, 114, 119, 340, 351], "manual_se": [3, 34, 37, 40, 41, 54, 58, 59, 73, 74, 82, 83, 86, 90, 104, 110, 117, 119, 130, 141, 150, 153, 158, 160, 171, 206, 207, 215, 229, 236, 237, 238, 241, 249, 255, 256, 258, 262, 269, 276, 354, 356, 359, 360, 364, 365], "autoresettinggymenv": [3, 119], "_step": [3, 86, 90, 104, 110, 117, 119, 120, 128, 131, 135, 147, 148], "self": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 33, 35, 38, 86, 90, 100, 104, 110, 117, 119, 120, 127, 128, 131, 145, 147, 159, 162, 163, 165, 167, 171, 181, 192, 205, 217, 226, 233, 237, 242, 245, 250, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 344, 347, 360, 362, 364, 365], "super": [3, 100, 117, 119, 120, 128, 131, 147, 181, 192, 205, 250, 256, 258, 263, 269, 274, 276, 278, 347, 360, 362, 364], "td_reset": [3, 119], "exclud": [3, 8, 53, 58, 86, 90, 104, 110, 119, 123, 133, 179, 217, 359, 362], "r": [3, 4, 31, 117, 119, 126, 141, 155, 196, 246, 254, 285, 342, 348, 360, 365], "break_when_any_don": [3, 86, 90, 104, 110, 119, 171, 240, 359], "3633e": [3, 119], "02": [3, 86, 90, 104, 110, 119, 346, 348, 349, 356, 360, 361, 363], "4877e": [3, 119], "01": [3, 119, 141, 241, 252, 257, 270, 273, 346, 348, 350, 359, 360, 361, 363], "2849e": [3, 119], "7584e": [3, 119], "6609e": [3, 119], "6166e": [3, 119], "8366e": [3, 119], "2761e": [3, 119], "5685e": [3, 119], "4102e": [3, 119], "8111e": [3, 119], "9959e": [3, 119], "0865e": [3, 119], "5644e": [3, 119], "2119e": [3, 119], "2542e": [3, 119], "03": [3, 86, 90, 104, 110, 119, 141, 346, 348, 360, 361, 363], "9952e": [3, 119], "4059e": [3, 119], "2094e": [3, 119], "9009e": [3, 119], "5140e": [3, 119], "3554e": [3, 119], "2920e": [3, 119], "7893e": [3, 119], "6429e": [3, 119], "3057e": [3, 119], "2867e": [3, 119], "6963e": [3, 119], "3818e": [3, 119], "2576e": [3, 119], "2679e": [3, 119], "1640e": [3, 119], "00": [3, 82, 83, 119, 346, 348, 349, 350, 359, 360, 361, 363], "6972e": [3, 119], "0212e": [3, 119], "5959e": [3, 119], "4637e": [3, 119], "3121e": [3, 119], "2168e": [3, 119], "5232e": [3, 119], "7704e": [3, 119], "7457e": [3, 119], "4127e": [3, 119], "1064e": [3, 119], "0854e": [3, 119], "5712e": [3, 119], "2189e": [3, 119], "5235e": [3, 119], "8289e": [3, 119], "0009e": [3, 119], "0257e": [3, 119], "8893e": [3, 119], "5872e": [3, 119], "9405e": [3, 119], "7766e": [3, 119], "0403e": [3, 119], "0626e": [3, 119], "2959e": [3, 119], "7263e": [3, 119], "2775e": [3, 119], "9564e": [3, 119], "0411e": [3, 119], "6769e": [3, 119], "6354e": [3, 119], "8698e": [3, 119], "1765e": [3, 119], "6292e": [3, 119], "5375e": [3, 119], "1820e": [3, 119], "7023e": [3, 119], "5836e": [3, 119], "9016e": [3, 119], "4826e": [3, 119], "6191e": [3, 119], "6387e": [3, 119], "8667e": [3, 119], "2056e": [3, 119], "1147e": [3, 119], "5991e": [3, 119], "0278e": [3, 119], "5219e": [3, 119], "3067e": [3, 119], "6617e": [3, 119], "3322e": [3, 119], "2629e": [3, 119], "4599e": [3, 119], "7298e": [3, 119], "5848e": [3, 119], "0148e": [3, 119], "5745e": [3, 119], "6982e": [3, 119], "7877e": [3, 119], "3527e": [3, 119], "7285e": [3, 119], "6668e": [3, 119], "0583e": [3, 119], "6956e": [3, 119], "3962e": [3, 119], "9845e": [3, 119], "5015e": [3, 119], "5903e": [3, 119], "9993e": [3, 119], "9418e": [3, 119], "0196e": [3, 119], "6557e": [3, 119], "2109e": [3, 119], "8997e": [3, 119], "1507e": [3, 119], "7363e": [3, 119], "0310e": [3, 119], "9574e": [3, 119], "8980e": [3, 119], "0090e": [3, 119], "torchvis": [3, 145, 167, 307, 364, 365], "base_env": [3, 83, 86, 90, 91, 96, 104, 110, 117, 120, 126, 128, 130, 131, 139, 143, 147, 149, 155, 157, 159, 160, 163, 171, 305, 347, 348, 349, 361, 364, 365], "callabl": [3, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 40, 41, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 87, 90, 100, 104, 110, 116, 118, 120, 127, 132, 163, 171, 182, 183, 203, 254, 327, 328, 336, 337, 338, 348, 362], "tensordictbas": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 77, 86, 88, 90, 104, 110, 117, 119, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 138, 139, 144, 146, 147, 148, 150, 153, 154, 157, 158, 159, 160, 162, 163, 168, 169, 171, 179, 180, 181, 197, 201, 204, 205, 233, 234, 236, 237, 240, 241, 244, 245, 246, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 285, 286, 287, 288, 289, 290, 322, 347, 360], "appar": [3, 315], "bring": [3, 349, 351, 365], "signific": [3, 5, 8, 349, 365], "kind": [3, 37, 43, 179, 353, 362], "consult": 3, "interest": [3, 242, 246, 342, 348, 349, 351, 359, 360, 365], "resize_par": 3, "easi": [3, 5, 51, 56, 84, 85, 86, 90, 95, 96, 104, 110, 233, 237, 238, 241, 342, 343, 347, 348, 349, 359, 361, 362, 365], "graph": [3, 4, 8, 82, 83, 95, 96, 282, 283, 347, 360], "revers": [3, 199], "order": [3, 15, 31, 32, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 72, 74, 86, 90, 104, 110, 124, 128, 131, 143, 163, 171, 229, 235, 245, 247, 248, 250, 255, 256, 258, 262, 263, 269, 273, 274, 275, 276, 278, 348, 359], "chain": [3, 33, 34, 35, 37, 38, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 127, 130, 182, 183, 248, 365], "invers": [3, 4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 123, 128, 131, 141, 150, 171, 253, 262, 269, 360], "in_keys_inv": [3, 126, 128, 129, 131, 141, 142, 143, 147, 148, 150, 155, 162, 347, 358, 360, 365], "append_transform": [3, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 86, 90, 104, 110, 122, 145, 159, 163, 165, 347, 350, 360, 362, 364, 365], "doubletofloat": [3, 331, 347, 349, 358], "float32": [3, 13, 14, 15, 25, 34, 39, 40, 41, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 79, 82, 83, 86, 89, 90, 91, 95, 96, 100, 103, 104, 108, 109, 110, 111, 112, 120, 128, 131, 132, 133, 141, 143, 147, 148, 150, 154, 157, 159, 161, 176, 179, 181, 191, 192, 197, 201, 205, 217, 218, 226, 229, 230, 231, 232, 234, 235, 240, 241, 242, 243, 244, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 284, 331, 342, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365], "float64": [3, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 84, 85, 86, 90, 104, 110, 127, 128, 131, 145, 159, 162, 163, 165, 167, 171, 245, 358], "regist": [3, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 54, 86, 89, 90, 91, 104, 110, 128, 131, 132, 153, 163, 171, 179, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 344, 347, 349, 351, 362], "manipul": [3, 4, 8, 84, 85, 145, 165], "third_transform": 3, "unexpect": [3, 31, 86, 90, 104, 110, 171, 365], "behviour": 3, "fortun": [3, 350, 351, 352, 355], "alreadi": [3, 8, 11, 31, 33, 35, 38, 44, 51, 86, 90, 104, 110, 159, 171, 180, 246, 286, 287, 288, 289, 347, 349, 355, 359], "chang": [3, 5, 7, 31, 34, 37, 40, 41, 51, 62, 63, 64, 66, 72, 73, 75, 76, 79, 86, 90, 104, 110, 120, 127, 128, 129, 131, 133, 139, 147, 148, 154, 157, 162, 163, 169, 171, 199, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 343, 347, 350, 359, 360, 361, 362, 365], "catfram": [3, 240, 348], "hold": [3, 282, 283, 360, 362], "notic": [3, 77, 123, 349, 356, 360], "parenthood": 3, "henc": [3, 34, 146, 180, 208, 342, 347, 349, 359, 360], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 104, 110, 360], "discret": [3, 23, 26, 29, 30, 32, 46, 86, 90, 104, 105, 106, 110, 111, 112, 130, 215, 218, 261, 262, 263, 264, 342, 348, 352, 359, 360, 365], "might": [3, 33, 35, 36, 38, 309, 341, 347, 351, 365], "action_mask": [3, 95, 96, 105, 106, 108, 109, 117], "unavail": [3, 105, 106], "probabl": [3, 4, 8, 39, 68, 71, 190, 192, 195, 197, 199, 201, 203, 206, 207, 215, 225, 237, 242, 246, 342, 348, 352, 364], "categor": [3, 26, 30, 32, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 132, 192, 215, 218, 235, 236, 242, 243, 244, 259, 262, 263, 284, 350], "probabilistictensordictmodul": [3, 139, 246, 247, 364], "tensordictsequenti": [3, 197, 201, 235, 237, 240, 247, 342, 347, 348, 350, 352, 356, 358, 361, 364], "maskedcategor": [3, 207, 340], "linear": [3, 13, 14, 15, 16, 20, 31, 82, 83, 86, 90, 100, 104, 110, 127, 139, 145, 159, 162, 163, 165, 167, 171, 181, 182, 183, 185, 186, 187, 188, 192, 194, 203, 205, 208, 209, 210, 211, 212, 218, 219, 220, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 245, 248, 250, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 334, 342, 348, 358, 361, 364], "in_feat": 3, "out_feat": 3, "logit": [3, 35, 39, 191, 206, 207, 215, 236, 242, 262, 263, 342], "dist": [3, 10, 206, 207, 215, 352], "distribution_class": [3, 139, 230, 231, 232, 234, 242, 246, 248, 255, 256, 262, 263, 269, 273, 274, 275, 276, 342, 347, 349, 352, 359, 364], "wrap": [3, 5, 13, 14, 15, 16, 17, 18, 19, 20, 31, 39, 55, 82, 83, 86, 90, 91, 95, 96, 102, 104, 105, 106, 110, 112, 171, 172, 197, 201, 227, 230, 231, 232, 233, 238, 240, 241, 243, 251, 284, 342, 347, 348, 349, 350, 353, 356, 359, 365], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 117, 146, 171], "enviorn": [3, 105, 106, 111, 112, 359], "itself": [3, 31, 86, 90, 104, 110, 114, 119, 171, 271, 349, 351], "mission": 3, "irrespect": [3, 245, 246], "dmcontrol": [3, 86, 90, 104, 110], "jumanji": [3, 86, 90, 95, 96, 104, 110], "special": [3, 340, 342, 347, 350, 365], "framework": [3, 4, 9, 21, 82, 83, 86, 90, 95, 96, 100, 104, 110, 195, 364, 365], "Its": [3, 31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 169, 171, 245, 290], "success": [3, 51, 52, 53, 54, 55, 56, 57, 58, 59, 123, 162, 237, 348, 354, 356, 360, 362, 364], "foundat": [3, 5, 105, 106, 349, 359], "inspir": [3, 360], "gone": [3, 4, 5, 240], "hard": [3, 7, 77, 84, 85, 104, 268, 348, 365], "prefer": [3, 13, 14, 16, 19, 22, 34, 37, 40, 41, 146, 154, 273, 319, 342, 349, 359, 362], "maintain": [3, 5, 9, 360], "concomittantli": 3, "problem": [3, 7, 8, 9, 15, 348, 349, 350, 354, 359, 360, 362, 365], "decor": [3, 8, 11, 116, 271, 286, 287, 288, 289], "relev": [3, 39, 286, 287, 288, 289, 290, 312, 360], "gym_backend": [3, 116, 340], "env1": [3, 358], "venv": 3, "python3": [3, 6, 7, 10, 347, 362, 365], "site": [3, 6, 7, 58, 116, 347, 362, 365], "env2": [3, 358], "_env": [3, 6, 89, 365], "classic_control": 3, "pendulumenv": [3, 360], "0x15147e190": 3, "0x1629916a0": 3, "mo_gymnasium": [3, 98, 114], "handi": [3, 86, 90, 104, 110, 355], "side": [3, 4, 365], "v0": [3, 13, 14, 86, 90, 92, 95, 96, 97, 98, 104, 110, 127, 163, 169, 334], "26": [3, 86, 90, 104, 110, 346, 347, 348, 360, 361, 363], "fun": [3, 11, 116, 349, 359, 362], "reveal": 4, "bug": [4, 364], "curv": 4, "exploit": [4, 352], "video": [4, 9, 305, 307, 318, 338, 356, 359], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 139, 359, 361], "coeffici": [4, 39, 139, 359], "bonu": [4, 255, 257, 270, 273], "beta": [4, 34, 40, 65, 66, 262, 269, 270, 347, 348, 362, 364], "reduc": [4, 6, 26, 77, 158, 348], "downstream": [4, 347], "formul": [4, 359], "ob": [4, 8, 22, 25, 27, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 73, 74, 77, 86, 90, 104, 110, 117, 119, 128, 129, 131, 141, 155, 161, 176, 179, 185, 186, 187, 188, 208, 209, 243, 250, 256, 258, 263, 269, 274, 276, 278, 286, 287, 288, 289, 348, 358, 360, 362, 364, 365], "rate": [4, 51, 169, 285, 348, 349, 359], "gradient": [4, 31, 86, 90, 104, 110, 163, 171, 198, 207, 211, 215, 224, 225, 255, 257, 258, 262, 263, 269, 270, 271, 273, 274, 275, 276, 278, 285, 286, 287, 288, 289, 322, 347, 349, 359, 360], "easier": [4, 342, 347], "local": [4, 7, 10, 15, 20, 31, 66, 73, 86, 90, 104, 110, 163, 171, 208, 209, 217, 226, 284, 310, 312, 355, 356, 359], "optima": 4, "sens": [4, 354, 360], "product": [4, 9, 195, 196, 199, 200, 336, 337], "sum": [4, 20, 30, 32, 77, 82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 122, 153, 206, 207, 226, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 272, 273, 274, 275, 276, 278, 285, 292, 343, 347, 348, 349, 350, 353, 356, 359, 360, 365], "track": [4, 13, 14, 15, 16, 17, 18, 19, 20, 41, 72, 153, 169, 171, 240, 241, 310, 315, 348, 350, 351, 354, 359, 360, 362], "stat": [4, 141, 326, 338, 348, 349], "w": [4, 68, 123, 125, 149, 161, 195, 241, 305, 348, 350, 362], "yield": [4, 15, 20, 31, 86, 90, 104, 110, 171, 271, 347, 353], "insight": 4, "auxiliari": [4, 353], "credit": 4, "futur": [4, 31, 33, 35, 38, 86, 90, 104, 110, 145, 163, 167, 171, 203, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 341, 364], "past": [4, 240, 348, 362], "spars": [4, 350], "ad": [4, 15, 22, 31, 34, 37, 40, 41, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 86, 90, 104, 110, 153, 163, 171, 210, 211, 241, 255, 257, 259, 264, 270, 273, 276, 284, 348, 350, 352, 362, 365], "intermedi": [4, 13, 14, 122, 197, 201, 236, 347, 361], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 347], "discov": 4, "score": [4, 39], "undesir": 4, "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 364], "select": [4, 34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 105, 106, 111, 112, 117, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 144, 146, 147, 148, 150, 153, 154, 157, 158, 159, 160, 162, 165, 166, 168, 169, 171, 181, 197, 201, 235, 243, 321, 347, 351, 362], "fall": [4, 53], "explicit": [4, 11, 44, 68, 202, 362], "mechan": [4, 31, 86, 90, 104, 110, 163, 171, 348, 353, 360], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 86, 90, 104, 110, 199, 262, 269, 349, 359], "addition": 4, "timestep": [4, 39, 53, 150, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 359], "realli": 4, "larg": [4, 26, 33, 35, 38, 128, 131, 165, 255, 257, 270, 273, 275, 348, 349, 359, 362], "huge": [4, 209, 350], "std": [4, 141, 169, 212, 216, 233, 347, 365], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 350, 351, 353, 354, 355, 356, 357, 358, 361, 362, 363], "initi": [4, 7, 13, 14, 15, 16, 17, 18, 19, 20, 31, 33, 35, 38, 39, 77, 86, 90, 104, 110, 122, 141, 145, 159, 162, 163, 165, 170, 171, 181, 195, 196, 199, 200, 205, 210, 211, 233, 237, 238, 240, 241, 255, 256, 258, 259, 261, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 331, 338, 347, 348, 350, 351, 352, 354, 360, 365], "estim": [4, 51, 66, 73, 74, 132, 139, 185, 230, 231, 232, 255, 256, 257, 258, 259, 261, 263, 264, 265, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "unseen": 4, "extrins": 4, "wrong": [4, 66, 73], "bonus": 4, "denser": 4, "prior": [4, 220, 266, 359], "freshli": 4, "drop": [4, 72, 74, 179], "meant": [4, 31, 100], "encourag": [4, 104, 347, 348, 362], "measur": [4, 62, 63, 79, 82, 83, 95, 96, 349, 354], "novelti": 4, "revisit": 4, "previous": [4, 349, 365], "diminish": 4, "decreas": [4, 352], "ideal": [4, 141, 360], "down": [4, 13, 14, 15, 16, 350, 351], "anyth": [4, 13, 14, 15, 16, 17, 18, 19, 20], "try": [4, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 33, 35, 38, 348, 349, 350, 353, 354, 359, 360, 364, 365], "distil": 4, "nois": [4, 170, 211, 228, 241, 274, 278, 318, 338, 347], "exploratori": [4, 255, 257, 270, 273], "misalign": 4, "trade": [4, 352], "unavoid": 4, "divers": [4, 104, 110], "bootstrap": [4, 264, 287, 293, 294, 347, 350], "noisi": [4, 210, 211, 228, 342], "unstabl": [4, 198, 224, 225], "inher": 4, "stochast": [4, 139, 193, 211, 213, 220, 256, 260, 262, 263, 269, 272, 274, 276, 342, 349, 352, 359], "enemi": 4, "pomdp": [4, 362], "loos": [4, 342, 348, 349], "nonexist": 4, "architectur": [4, 189, 353, 359], "sequenc": [4, 13, 14, 15, 16, 25, 27, 29, 30, 34, 36, 37, 39, 42, 44, 57, 60, 61, 68, 69, 71, 76, 78, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 121, 122, 123, 124, 125, 128, 130, 131, 135, 137, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 158, 160, 161, 162, 169, 182, 183, 190, 192, 195, 199, 203, 206, 207, 208, 209, 215, 218, 222, 234, 247, 248, 260, 304, 305, 317, 318, 319, 321, 322, 331, 342, 347, 349, 350, 358, 359, 365], "lstm": [4, 200, 201, 202, 212], "rel": [4, 68, 159, 190, 223, 347, 348, 359, 362], "tend": 4, "stabl": [4, 9, 10, 103], "compens": 4, "descent": [4, 211], "minimum": [4, 104, 110, 151, 193, 212, 223, 224, 225, 249, 252, 254, 256, 263, 271, 272, 276, 313, 347, 349, 356, 359], "manual": [4, 17, 19, 20, 90, 347, 350, 362], "deviat": [4, 141, 169, 181, 193, 205, 210, 211, 216, 233, 273, 278, 347, 352, 359], "radic": 4, "begin": [4, 13, 14, 15, 16, 17, 18, 19, 20, 73, 119, 195, 196, 199, 200, 351, 352, 353, 354, 355, 356], "stabil": [4, 136, 255, 257, 270, 273, 275], "stage": [4, 347, 360], "never": [4, 13, 14, 16, 354], "prevent": [4, 25, 27, 198, 224, 225, 255, 257, 270, 273, 275, 320, 362], "entir": [4, 57, 86, 90, 104, 110, 208, 349, 351, 360, 362], "submit": [4, 120, 341, 364], "system": [4, 5, 349, 359, 360], "adequ": [4, 172, 349, 359], "infeas": 4, "allevi": [4, 342], "prune": 4, "fire": [4, 31, 86, 90, 104, 110, 171], "illeg": 4, "move": [4, 31, 59, 86, 90, 104, 110, 127, 129, 145, 159, 162, 163, 165, 167, 169, 171, 179, 203, 245, 320, 347, 348, 350, 351, 364, 365], "chess": 4, "combin": [4, 162, 348, 355, 362], "grasp": 4, "top": [4, 77, 82, 83, 95, 96, 181, 205, 352], "wherein": 4, "cumul": [4, 153, 158, 181, 292, 349], "q": [4, 9, 86, 90, 104, 110, 185, 186, 187, 188, 191, 192, 194, 217, 218, 226, 232, 236, 243, 244, 256, 258, 259, 261, 262, 263, 264, 268, 269, 274, 276, 278, 284, 331, 340, 347, 353], "flow": [4, 347, 349, 359, 360, 362], "reparameter": [4, 190, 207, 215], "soft": [4, 268, 276, 277], "critic": [4, 8, 230, 239, 255, 257, 258, 262, 263, 269, 270, 273, 274, 275, 276, 278, 347, 353], "clip": [4, 39, 126, 151, 255, 257, 270, 273, 275, 278, 322, 349, 359, 360], "oppos": [4, 44], "incorrect": 4, "thought": [4, 86, 90, 104, 110], "bound": [4, 20, 24, 25, 31, 86, 90, 104, 110, 126, 140, 169, 171, 219, 220, 229, 235, 236, 241, 242, 243, 244, 245, 246, 249, 278, 342, 347, 348, 349, 365], "region": 4, "squash": [4, 350, 364], "tanh": [4, 182, 183, 195, 196, 198, 199, 200, 203, 209, 223, 224, 225, 249, 349, 352, 359, 360, 361, 364], "correct": [4, 33, 35, 38, 86, 90, 104, 110, 139, 325, 349, 350], "prob": [4, 206, 207, 215, 349, 359], "rememb": 4, "remap": 4, "origin": [4, 8, 33, 35, 38, 39, 94, 129, 130, 139, 145, 163, 167, 171, 195, 242, 245, 246, 268, 271, 273, 331, 347, 358, 360, 365], "histor": 5, "ceas": 5, "farama": [5, 55, 97, 98, 105, 106, 349, 360], "bc": [5, 364], "against": [5, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 86, 90, 104, 110, 171, 172, 229, 235, 236, 242, 243, 244, 245, 246, 349, 359], "best": [5, 9, 94, 197, 201, 359, 362, 364], "gymwrapp": [5, 86, 90, 104, 110, 133, 154, 157, 168, 340, 349, 364], "feel": [5, 341, 356, 364], "free": [5, 7, 128, 131, 255, 266, 273, 344, 349, 356, 359, 364], "gladli": 5, "prepar": [6, 54, 349], "conda": [6, 7, 341], "cmake": 6, "activ": [6, 7, 9, 182, 183, 189, 193, 203, 208, 209, 257, 270, 273, 342, 360, 364], "sim": 6, "bullet": 6, "headless": [6, 7], "cluster": [6, 7, 8, 17, 20, 54, 341], "withbullet": 6, "forg": [6, 7], "aihabitat": [6, 92], "y": [6, 7, 37, 103, 194, 202, 208, 227, 347, 359, 362], "facebookresearch": [6, 54, 92], "subdirectori": 6, "verbos": [6, 356], "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 43, 45, 46, 48, 86, 90, 104, 110, 147, 156, 171, 271, 359, 365], "command": [6, 7, 10, 349, 359, 360, 365], "readm": [6, 7, 111], "md": [6, 7], "habitatenv": [6, 340], "_has_habitat": 6, "available_env": [6, 82, 83, 84, 85, 86, 89, 90, 91, 92, 95, 96, 97, 103, 104, 107, 108, 109, 110, 111, 112, 365], "startswith": [6, 343, 347, 353], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 87, 271, 347], "env_nam": [6, 82, 84, 86, 89, 90, 92, 95, 97, 101, 104, 107, 110, 347, 349, 365], "llvmlite": 6, "config": [6, 7, 145, 167, 184, 189, 216, 326, 327, 328, 331, 332, 335], "var": [6, 7, 31, 86, 90, 104, 110, 163, 171, 271, 276], "ld_preload": [6, 7], "bind": 6, "deactiv": [6, 7, 235], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 31, 86, 90, 104, 110, 163, 171, 271, 276, 362], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 86, 348, 356], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 53], "stand": [7, 84, 85, 104, 110, 358, 360], "joint": [7, 348], "dynam": [7, 54, 57, 59, 171, 262, 269, 349, 351, 360], "contact": [7, 36], "engin": [7, 107, 360], "biomechan": 7, "graphic": 7, "anim": [7, 359], "area": 7, "demand": [7, 355, 365], "fast": [7, 9, 82, 83, 148, 179, 274, 347, 348, 349], "accur": [7, 53, 59, 348, 360, 362], "articul": 7, "acquir": [7, 349], "deepmind": [7, 8, 9, 57, 84, 85, 86, 90, 104, 110, 132, 349, 351], "whomev": 7, "licenc": 7, "incorpor": [7, 86, 90, 104, 110, 233, 237, 238, 241, 350, 352, 360], "relianc": 7, "obsolet": 7, "legaci": [7, 22], "pro": [7, 341], "tip": [7, 341], "glfw": [7, 347], "osmesa": 7, "egl": 7, "advic": [7, 57, 365], "sudo": [7, 341], "enabl": [7, 8, 53, 62, 63, 72, 79, 120, 197, 201, 240, 241, 305, 318, 349, 351, 359, 360, 362], "apt": [7, 359], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 62, 63, 64, 75, 76, 79, 348, 350], "workflow": [7, 230, 231, 232], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "binari": [7, 23, 26, 32, 121, 192, 218, 235, 236, 243, 244, 259, 262, 263, 284], "mkdir": 7, "tag": [7, 305, 307, 310, 338, 355, 356], "earlier": [7, 347, 349, 350, 359, 362], "roboti": 7, "html": [7, 101, 103], "wget": 7, "mujoco210": 7, "tar": [7, 54], "gz": 7, "xf": 7, "charg": [7, 13, 14, 16, 104, 110], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 33, 35, 44, 60], "bin": [7, 192, 236, 342], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 188, 242, 246, 347, 349, 362], "nvidia": [7, 94], "older": [7, 11], "hack": [7, 347], "line": [7, 31, 51, 86, 90, 104, 110, 171, 347, 348, 355, 359, 362, 365], "adatp": 7, "script": [7, 54, 172, 331, 334, 338, 342, 343, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "unnot": [7, 146], "until": [7, 20, 160, 162, 171, 349, 350, 356, 359], "mujoco_pi": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 348, 362], "troubleshoot": 7, "gl": 7, "h": [7, 68, 123, 125, 149, 161, 195, 196, 197, 199, 200, 201, 205, 305, 348, 350, 362], "eglshim": 7, "fatal": 7, "No": [7, 13, 14, 15, 16, 17, 18, 19, 20], "directori": [7, 33, 35, 38, 44, 51, 53, 54, 55, 57, 58, 59, 62, 310, 312, 344, 347, 352, 355], "devel": 7, "ubuntu": [7, 94], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "disappear": [7, 348, 350, 358], "libstdc": 7, "glibcxx_3": 7, "29": [7, 348, 360], "compil": [7, 31, 66, 73, 74, 86, 90, 104, 110, 171, 195, 196, 199, 200, 202], "libosmesa": 7, "libgcc": 7, "Then": [7, 13, 14, 15, 16, 17, 18, 19, 20, 168, 349, 358], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 25, 27, 31, 86, 90, 104, 110, 140, 163, 171, 276, 362, 365], "job": [7, 17, 18, 19, 21, 37, 362], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 82, 83, 346, 348, 350, 358, 360, 361, 363], "114": [7, 360], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 360], "offscreenopenglcontext": 7, "opengl": [7, 359], "global": [7, 31, 86, 90, 104, 105, 106, 110, 171, 217, 226, 242, 246, 284, 344, 347, 359], "cuda_visible_devic": 7, "id": [7, 22, 39, 66, 68, 73, 74, 86, 89, 90, 104, 110, 241, 274, 308, 312, 331, 354, 362], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 360, 362], "correctli": [7, 31, 86, 90, 104, 110, 171], "lgl": 7, "libegl": 7, "x11": [7, 359], "xlib": 7, "libx11": 7, "xorg": 7, "sketch": [8, 344], "n_training_step": 8, "datapoint": [8, 44, 362], "n_data_per_train": 8, "no_grad": [8, 31, 86, 90, 104, 110, 139, 171, 195, 196, 199, 200, 286, 287, 288, 289, 349, 350, 359], "loss_fn": [8, 350, 353, 354, 364], "zero_grad": [8, 31, 86, 90, 104, 110, 171, 344, 347, 349, 350, 353, 356, 359, 360], "backpropag": [8, 82, 83, 95, 96, 104, 255, 256, 257, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 284, 353, 359, 360], "differenti": [8, 44, 82, 83, 139, 286, 287, 288, 289, 350, 352, 353, 359, 360], "denomin": 8, "artifact": 8, "numer": [8, 37, 90, 169, 198, 224, 225, 229, 235, 236, 242, 243, 244, 245, 246, 320, 349, 362, 365], "misconcept": 8, "freed": 8, "appear": [8, 32, 51, 57, 66, 73, 74, 360, 362], "compuat": 8, "fix": [8, 104, 159, 256, 272, 276, 348, 356, 360, 365], "retain_graph": [8, 82, 83], "discuss": [8, 9, 354, 359], "inplac": [8, 31, 33, 35, 38, 86, 90, 104, 110, 171, 347], "onto": [8, 32, 33, 35, 38, 176, 229, 233, 235, 236, 241, 242, 243, 244, 245, 246, 350, 360], "forward": [8, 13, 14, 15, 16, 17, 18, 19, 20, 31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 117, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 144, 145, 146, 147, 148, 150, 153, 154, 157, 158, 159, 160, 162, 165, 166, 168, 169, 171, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 208, 209, 210, 212, 213, 214, 216, 217, 219, 220, 222, 226, 227, 233, 234, 236, 237, 240, 241, 242, 244, 245, 246, 249, 250, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 284, 286, 287, 288, 289, 290, 343, 360, 362, 364, 365], "submodul": [8, 31, 86, 90, 104, 110, 114, 171, 271], "param": [8, 31, 39, 86, 90, 100, 104, 110, 120, 127, 128, 129, 133, 139, 147, 148, 154, 157, 162, 171, 190, 192, 223, 234, 242, 245, 248, 271, 280, 283, 286, 287, 288, 289, 290, 347, 356, 359, 360, 361, 364], "grad": [8, 31, 82, 83, 86, 90, 104, 110, 171, 347, 349], "whose": [8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 86, 90, 104, 105, 106, 110, 127, 145, 159, 162, 163, 165, 167, 171, 212, 217, 245], "neg": [8, 13, 14, 15, 16, 17, 18, 19, 20, 34, 40, 65, 66, 123, 135, 146, 164, 265, 286, 288, 289, 343, 349, 359, 360], "much": [8, 13, 14, 16, 34, 40, 57, 65, 66, 104, 110, 270, 273, 349, 351, 355, 359, 360, 362, 365], "render": [8, 111, 305, 318, 347, 348, 349, 351, 355], "factor": [8, 31, 150, 171, 198, 211, 224, 225, 233, 237, 238, 241, 256, 261, 264, 265, 267, 277, 292, 347, 348, 352, 356, 359, 362, 365], "fit": [8, 11, 141, 343, 344, 347], "bottlneck": 8, "brax": [8, 82, 83, 86, 90, 104, 110, 148, 351, 365], "jax": [8, 11, 82, 83, 95, 96], "improperli": 8, "underli": [8, 86, 90, 104, 110, 271, 351, 353, 355, 360], "tedeiou": 8, "priorit": [8, 34, 40, 65, 66, 258, 259, 261, 262, 263, 269, 274, 276, 278, 347, 348, 354], "amount": [8, 241, 348, 362], "costli": [8, 360], "constitut": [8, 348, 359, 360], "plain": [8, 351], "profil": 8, "frequent": [8, 362], "program": [8, 262, 269, 365], "functorch": [8, 10], "incl": 8, "suit": [8, 85, 349, 351, 365], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 73, 74, 120, 245, 248, 271, 359, 360, 362, 364], "new_shap": 8, "permut": [8, 72, 143, 364, 365], "idea": [9, 274, 344, 350, 352, 359], "introductori": 9, "intro": [9, 349, 350], "dai": [9, 364], "2022": [9, 10, 360, 364], "spin": [9, 84, 85], "deep": [9, 123, 185, 186, 187, 188, 191, 241, 255, 268, 276, 277, 347], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": [9, 352], "summari": [9, 141, 169, 347, 348, 349, 350], "reddit": 9, "reagent": 9, "orient": [9, 59, 365], "baselines3": 9, "tf": 9, "bandit": [9, 103], "tensorflow": [9, 206, 207], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": [9, 356], "salina": 9, "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 364], "grade": 9, "factori": [9, 42, 347], "cherri": 9, "jaxrl": 9, "mbrl": [9, 100, 342], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 360], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 349, 350, 359], "notebook": [10, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "24": [10, 58, 74, 89, 101, 102, 240, 346, 348, 360, 363], "pip3": [10, 347, 349, 350, 359], "url": [10, 92], "org": [10, 34, 54, 55, 57, 59, 65, 66, 82, 83, 84, 85, 92, 95, 96, 101, 102, 103, 107, 111, 112, 123, 145, 165, 184, 185, 186, 187, 188, 189, 192, 193, 194, 199, 205, 206, 207, 211, 213, 214, 217, 219, 220, 226, 236, 241, 255, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 273, 275, 276, 277, 286, 291, 299, 339, 357, 361], "whl": 10, "u": [10, 56, 195, 196, 199, 200, 360], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 271], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 68, 77, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 117, 119, 123, 130, 132, 138, 139, 141, 145, 146, 149, 154, 157, 158, 163, 165, 167, 168, 169, 171, 173, 177, 179, 180, 181, 191, 192, 197, 201, 202, 204, 205, 208, 209, 210, 211, 212, 217, 218, 226, 229, 235, 236, 240, 242, 243, 244, 245, 246, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 284, 285, 286, 287, 288, 289, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 331, 332, 338, 348, 349], "from_vers": 11, "to_vers": 11, "class_method": 11, "intersect": 11, "vs": [11, 197, 201, 202, 364], "longer": [11, 348, 356, 359, 362], "x": [11, 22, 25, 31, 37, 39, 57, 74, 139, 161, 183, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 205, 208, 209, 227, 235, 242, 243, 252, 254, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 322, 347, 360, 362, 364], "23": [11, 58, 74, 346, 348, 349, 350, 353, 359, 360, 363], "import_modul": 11, "get_class_that_defined_method": 11, "f": [11, 58, 82, 83, 90, 95, 96, 200, 254, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 347, 348, 349, 350, 356, 359, 360, 362, 365], "otherwis": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 66, 68, 73, 74, 82, 83, 86, 89, 90, 91, 92, 95, 96, 99, 101, 102, 104, 105, 106, 107, 110, 111, 112, 123, 124, 130, 141, 158, 159, 160, 163, 169, 171, 195, 198, 199, 208, 209, 224, 225, 235, 243, 249, 256, 266, 271, 272, 276, 286, 288, 289, 318, 319, 344, 347, 348, 349, 350, 360, 365], "classmethod": [11, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 38, 43, 45, 46, 86, 90, 104, 110, 165, 184, 216], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 33, 35, 37, 38, 58, 66, 73, 74, 86, 87, 88, 90, 101, 104, 105, 106, 110, 111, 112, 113, 139, 159, 163, 168, 169, 171, 182, 183, 184, 185, 186, 187, 188, 189, 194, 202, 203, 216, 242, 246, 276, 309, 310, 318, 327, 328, 331, 336, 337, 338, 347, 348, 349, 362, 365], "setter": 11, "setter_dict": 11, "kwd": 12, "policy_weight": [12, 13, 14, 15, 16, 18, 19], "udpdat": [12, 13, 14, 15, 16, 18, 19], "create_env_fn": [13, 14, 15, 16, 17, 18, 19, 20, 87, 104, 110, 347, 364], "device_typ": [13, 15, 16, 26, 29, 32, 182, 183, 184, 185, 186, 187, 188, 194, 202, 203, 208, 209, 210, 211, 216], "env_devic": [13, 14, 15, 16, 17, 18, 19, 20, 348], "policy_devic": [13, 14, 15, 16, 17, 18, 19, 20, 348], "create_env_kwarg": [13, 14, 15, 16, 20, 87, 101, 104, 110, 347, 365], "postproc": [13, 14, 15, 16, 17, 18, 19, 20, 31, 150, 348, 362], "explorationtyp": [13, 14, 15, 16, 17, 18, 19, 20, 271, 318, 347, 348, 349, 350, 352, 364], "interactiontyp": [13, 15, 16, 17, 18, 19, 20, 174, 178, 242, 246, 318], "exploration_mod": [13, 15, 16, 17, 18, 19, 340, 342], "preemptive_threshold": [13, 14, 16], "float": [13, 14, 16, 24, 26, 31, 32, 34, 39, 40, 45, 57, 65, 66, 68, 86, 90, 104, 110, 119, 123, 127, 128, 131, 139, 141, 145, 150, 151, 152, 158, 159, 161, 162, 163, 165, 167, 169, 171, 190, 193, 195, 198, 199, 203, 206, 207, 210, 211, 219, 220, 223, 225, 233, 245, 249, 252, 253, 254, 255, 256, 257, 261, 262, 263, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 285, 291, 292, 293, 294, 295, 296, 297, 298, 299, 320, 347, 348, 362, 365], "num_thread": [13, 14, 16, 33, 35, 38, 104, 110], "num_sub_thread": [13, 14, 16, 104, 110], "set_trunc": [13, 14, 15, 16, 86, 90, 104, 110], "datacollector": [13, 14, 15, 16, 31, 246, 273, 349, 354, 362], "recept": 13, "safe": [13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 66, 73, 229, 233, 235, 236, 241, 242, 243, 244, 245, 246, 248, 342, 364], "sota": [13, 14, 100, 136, 275, 313, 327, 347, 348, 349, 352, 353, 354, 359, 364], "env_mak": [13, 14, 15, 20, 334, 365], "50": [13, 14, 15, 20, 36, 39, 51, 59, 73, 74, 171, 348, 349, 350, 359, 360, 362], "2000": [13, 14, 15, 31, 44, 93, 305, 349, 362], "int64": [13, 14, 15, 22, 26, 29, 33, 35, 36, 38, 39, 40, 42, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 86, 90, 99, 103, 104, 105, 106, 108, 109, 110, 120, 132, 143, 150, 157, 192, 218, 235, 236, 241, 242, 243, 244, 342, 349, 350, 351, 352, 354, 355, 360, 362, 364], "shutdown": [13, 14, 15, 16, 20, 120, 347, 364], "del": [13, 14, 15, 347, 349, 358, 364, 365], "tensordictmodulebas": [13, 14, 15, 16, 17, 18, 19, 20, 122, 227, 235, 240, 243, 350], "undergon": [13, 14, 15, 16, 17, 18, 19, 20, 44], "env_obs_kei": [13, 14, 15, 16, 17, 18, 19, 20], "lifespan": [13, 14, 15, 16, 17, 18, 19, 348], "divis": [13, 14, 15, 16, 17, 18, 19, 51, 57, 66, 73, 74, 359], "endless": [13, 14, 15, 16, 17, 18, 19], "fill": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 51, 90, 119, 159, 168, 201, 350, 360, 361], "sit": [13, 14, 15, 16, 17, 18, 19, 20, 324, 348], "cast": [13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 60, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96, 101, 102, 104, 107, 110, 127, 128, 131, 139, 145, 159, 162, 163, 165, 167, 169, 171, 245, 331, 365], "span": [13, 14, 15, 16, 17, 18, 19, 20, 57, 73], "n_step": [13, 14, 15, 16, 17, 18, 19, 20, 31, 171, 240, 348, 349, 359], "mainli": [13, 14, 15, 16, 17, 18, 19, 20, 39, 312, 342, 359, 360], "round": [13, 14, 15, 16, 17, 18, 19, 20, 51], "closest": [13, 14, 15, 16, 17, 18, 19, 20], "post": [13, 14, 15, 16, 17, 18, 19, 20, 31, 55, 86, 90, 104, 110, 171], "boolm": [13, 14, 16], "update_policy_weight_": [13, 14, 16], "async": [13, 14, 16, 17, 18, 19, 20, 168, 364], "ratio": [13, 14, 16, 39, 347, 349], "finish": [13, 14, 16, 20, 90, 150, 365], "rest": [13, 14, 16, 342, 349, 350, 360, 364], "earli": [13, 14, 16, 31, 90, 157, 364], "plu": [13, 14, 16, 39, 104, 110, 360], "safeti": [13, 14, 16, 100, 104, 110], "harm": [13, 14, 16, 104, 110], "exclus": [13, 14, 47, 48, 51, 57, 66, 73, 74, 120, 135, 195, 197, 199, 201, 206, 207, 235, 236, 243, 244, 277, 278, 286, 287, 288, 289, 290, 312, 338, 342], "add_truncated_kei": [13, 14, 15, 16, 86, 90, 104, 110, 163], "ordereddict": [13, 14, 15, 16, 20, 31, 86, 90, 104, 110, 163, 169, 171, 276, 348], "form": [13, 14, 16, 31, 34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 169, 171, 195, 197, 199, 201, 254, 255, 257, 270, 273, 322, 342, 352, 359], "worker0": [13, 14, 16], "state_dict0": [13, 14, 16], "worker1": [13, 14, 16], "state_dict1": [13, 14, 16], "reset_idx": [13, 14, 16], "static_se": [13, 14, 15, 16, 20, 86, 90, 104, 110, 163], "integ": [13, 14, 15, 16, 22, 29, 30, 31, 32, 39, 46, 66, 73, 74, 75, 86, 90, 104, 110, 119, 132, 136, 141, 157, 182, 183, 203, 208, 209, 262, 269, 276, 362], "increment": [13, 14, 15, 16, 86, 90, 104, 110, 270], "env_fn": [13, 14, 15, 16, 87, 336, 337], "env_fn_parallel": [13, 14, 15, 16], "300": [13, 14, 15, 16, 73, 74, 187, 188, 360], "out_se": [13, 14, 15, 16, 365], "shut": [13, 14, 15, 16], "irrevers": [13, 14, 16], "kwarg": [14, 15, 16, 20, 24, 25, 31, 45, 51, 53, 54, 65, 66, 68, 73, 74, 77, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 120, 127, 145, 147, 156, 159, 162, 163, 164, 166, 167, 170, 171, 181, 182, 183, 185, 186, 187, 188, 191, 194, 197, 198, 201, 203, 204, 205, 208, 209, 215, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 284, 285, 286, 287, 288, 289, 290, 305, 309, 310, 312, 315, 322, 327, 328, 331, 335, 336, 337, 343, 347, 349, 359, 362], "envcreat": [15, 21, 104, 110, 334, 335, 338, 340, 347, 348, 364, 365], "return_same_td": 15, "interruptor": 15, "cautious": [15, 273], "whole": [15, 25, 27, 31, 44, 86, 90, 104, 110, 163, 171, 242, 276, 313, 347, 349], "_interruptor": 15, "start_collect": 15, "stop_collect": 15, "preeptiv": 15, "chunk": [15, 352], "policy_state_dict": 15, "env_state_dict": 15, "close": [15, 90, 101, 139, 255, 257, 270, 273, 347, 348, 351, 358, 360, 364], "mere": 16, "exporationtyp": [17, 18, 19], "collector_class": [17, 18, 19, 20], "collector_kwarg": [17, 18, 19, 20], "num_workers_per_collector": [17, 18, 19, 20], "slurm_kwarg": [17, 18, 19], "update_after_each_batch": [17, 18, 19, 20], "max_weight_update_interv": [17, 18, 19, 20], "tcp_port": [17, 18, 19, 21], "deriv": [17, 18, 19, 20, 322], "respect": [17, 18, 19, 31, 86, 90, 104, 110, 121, 127, 128, 131, 145, 146, 155, 159, 162, 163, 165, 167, 171, 195, 199, 208, 220, 245, 250, 255, 257, 270, 273, 275, 286, 288, 289, 317, 349, 350, 359], "subnod": [17, 18, 19, 20], "readi": [17, 19, 20, 341, 348, 349, 352, 355, 358, 362], "fashion": [17, 19, 20, 33, 35, 38, 74], "executor": [17, 18, 19], "distributed_back": [17, 18], "ucc": [17, 18], "overwritten": [17, 18, 19, 20, 51, 54, 55, 57, 58, 59, 86, 90, 104, 110, 135], "seen": [17, 18, 19, 20, 86, 90, 104, 110, 343, 347, 348, 350, 353, 359, 362], "submitit_delai": [17, 21], "former": [17, 18, 19, 34, 37, 40, 41, 53, 86, 90, 104, 110, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 347], "whilst": [17, 18, 19], "homonym": [17, 18, 19, 360], "visit": [17, 18, 19], "facebookincub": [17, 18, 19], "tcp": [17, 18, 19, 21], "port": [17, 18, 19, 21], "10003": [17, 18, 19, 21], "worker_rank": [17, 18, 20], "update_interv": 18, "frequenc": [18, 347], "visible_devic": 19, "tensorpipe_opt": 19, "experiment": [19, 32, 51, 242, 246], "tensorpiperpcbackendopt": 19, "ray_init_config": 20, "remote_config": 20, "num_collector": [20, 336, 337, 347, 348], "coordin": 20, "init": [20, 31, 86, 90, 104, 110, 171, 312, 348, 349], "autodetect": 20, "similarli": [20, 31, 72, 76, 86, 90, 104, 110, 171, 208, 247, 248, 262, 269, 365], "num_cpu": 20, "num_gpu": 20, "1024": [20, 189, 348, 362], "equat": [20, 57, 90, 241, 254, 257, 277, 349, 351, 360], "exce": [20, 362], "indefinit": [20, 50], "raydistributedcollector": 20, "distributed_collector": 20, "10000": [20, 322, 349, 350], "add_collector": 20, "local_polici": 20, "remote_collector": 20, "stop_remote_collector": 20, "num_job": 21, "tcpport": 21, "submitit_main_conf": 21, "slurm_cpus_per_task": 21, "slurm_gpus_per_nod": 21, "slurm_partit": 21, "timeout_min": 21, "submitit_collection_conf": 21, "delai": [21, 353], "jump": [21, 351], "host": [21, 31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "satellit": 21, "rendezv": 21, "hang": 21, "forev": 21, "default_config": [21, 184, 189, 216, 234], "default_slurm_conf_main": 21, "default_slurm_conf": 21, "boundedtensorspec": [21, 25, 86, 90, 104, 110, 237, 238, 241, 242, 249, 255, 256, 258, 269, 273, 274, 276, 278, 340, 349, 359, 360, 364, 365], "rollout_tensordict": 22, "nestedkei": [22, 44, 66, 73, 74, 86, 90, 104, 110, 117, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 135, 137, 138, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 165, 169, 171, 179, 180, 233, 234, 237, 238, 240, 241, 246, 259, 284, 305], "durat": [22, 359], "meta": [22, 43, 53, 88, 92, 255, 257, 270, 273, 275, 344, 349, 359, 362], "aren": [22, 158, 350], "deprec": [22, 31, 86, 90, 104, 110, 163, 171, 173, 177, 238, 255, 257, 259, 262, 263, 264, 269, 270, 273, 274, 275, 276, 284, 286, 287, 288, 289, 294, 365], "eventu": [22, 217, 350, 360], "supersed": 22, "recov": [22, 53, 55, 57, 58, 59, 73, 74, 233, 238, 241, 247, 262, 269, 358], "cat": [22, 250, 256, 258, 269, 274, 276, 278, 362, 364], "arang": [22, 26, 32, 66, 192, 207, 235, 313, 342, 362], "obs_": 22, "trajectory_id": 22, "int32": [22, 41, 51, 57, 73, 95, 96, 176, 240], "data_split": 22, "got": [22, 354], "int8": [23, 86, 99, 105, 106, 121], "assert_is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "clear_device_": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "op": [23, 24, 26, 29, 30, 32, 43, 45, 46, 140, 168, 233, 237, 305, 324], "encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 40, 41, 43, 45, 46, 82, 83, 86, 89, 91, 92, 95, 96, 101, 102, 107, 130, 214, 215, 219, 254, 342, 348, 349, 350, 352, 360, 362], "ndarrai": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 241, 249], "ignore_devic": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "np": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 90, 249, 360], "complient": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "singleton": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 182, 183, 203, 221, 222], "start_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "end_dim": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "implements_for_spec": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "torch_funct": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "tensor_to_index": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "is_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 365], "project": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 130, 199, 229, 233, 235, 236, 241, 242, 243, 244, 245, 246, 312, 342, 364, 365], "rand": [23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 37, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 82, 83, 95, 96, 100, 117, 120, 128, 131, 147, 181, 205, 242, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 276, 278, 360, 364, 365], "unbound": [23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 159, 176, 360, 362], "to_numpi": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 86, 90, 104, 110], "transformed_in": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 162, 163, 212, 223, 338], "check_spec_encod": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "to_one_hot": [23, 26, 29], "hot": [23, 26, 29, 30, 32, 82, 83, 89, 91, 92, 95, 96, 101, 102, 105, 106, 107, 111, 112, 117, 130, 192, 215, 218, 235, 236, 243, 244, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 350], "to_one_hot_spec": [23, 26, 29], "onehotdiscretetensorspec": [23, 26, 192, 218, 235, 243, 259, 261, 262, 263, 284, 340, 342, 352], "convert": [23, 26, 29, 30, 31, 32, 33, 35, 38, 44, 82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110, 127, 128, 131, 145, 159, 162, 163, 165, 167, 169, 171, 245, 254, 271, 347, 348, 349, 360, 362], "type_check": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46], "unflatten": [23, 24, 25, 26, 27, 28, 29, 30, 32, 43, 45, 46, 120, 240], "upper": [24, 71, 140], "unnam": 25, "constraint": [25, 100, 349, 359], "pixels_spec": 25, "observation_vector_spec": 25, "composite_spec": 25, "observation_vector": [25, 124, 331, 347], "td_project": 25, "absent": [25, 27, 53, 86, 90, 104, 110, 163], "is_empti": [25, 27, 360], "include_nest": [25, 27], "leaves_onli": [25, 27], "itemsview": 25, "children": [25, 27, 31, 86, 90, 104, 110, 171], "keysview": [25, 27], "reflect": [25, 27, 91, 105, 106, 168, 179, 271, 325, 348, 349, 350, 359], "lock_": [25, 27], "recurs": [25, 27, 31, 47, 48, 86, 90, 104, 110, 171, 271], "succeed": [25, 27], "selected_kei": [25, 27, 154, 347], "unlock_": [25, 27], "unlock": [25, 27, 33, 35, 38], "valuesview": 25, "onehottensorspec": [26, 82, 83, 89, 91, 92, 95, 96, 101, 102, 107], "action_valu": [26, 32, 191, 192, 218, 235, 236, 243, 244, 263, 271, 284, 342, 350, 352, 356], "argmax": [26, 86, 90, 104, 110, 192, 218, 236, 244, 352], "chosen_action_valu": [26, 32, 217, 218, 226, 243, 244, 284, 342, 350, 352], "outcom": [26, 32, 190, 223], "drawn": [27, 28, 159, 237, 242, 246, 349, 359], "lazystackedtensordict": [27, 51, 86, 90, 100, 104, 110, 358], "heterogen": [27, 28, 99, 105, 106, 172, 208, 209, 347, 348], "thrown": [28, 31, 86, 90, 104, 110, 171, 362], "nvec": [29, 30], "cardin": [29, 30, 192, 218, 235, 236, 244, 349], "ax": [29, 210, 211], "m": [29, 31, 86, 90, 104, 110, 130, 171, 246, 342, 348, 360], "ts": [29, 30], "multionehotdiscretetensorspec": [29, 259, 262, 263, 284, 340], "use_regist": [30, 32], "to_categor": [30, 32], "to_categorical_spec": [30, 32], "multidiscretetensorspec": [30, 340], "gamma": [31, 150, 171, 205, 255, 256, 258, 259, 261, 263, 264, 265, 267, 269, 271, 273, 274, 275, 276, 278, 279, 280, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 334, 343, 347, 348, 349, 359, 364], "sutton": [31, 343, 359], "1988": 31, "tempor": [31, 197, 201, 205, 287, 288, 293, 294], "44": [31, 346, 348, 349, 352, 360, 363], "discount": [31, 57, 87, 150, 171, 256, 261, 264, 265, 267, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 343, 348, 349, 359], "ahead": [31, 171, 365], "bias": [31, 195, 196, 199, 200, 252, 343, 347], "mitig": 31, "pleas": [31, 55, 86, 90, 104, 105, 106, 110, 120, 123, 160, 163, 171, 276, 341], "multisteptransform": [31, 340], "99": [31, 150, 169, 205, 267, 280, 285, 292, 334, 347, 348, 349, 353, 356, 360, 362, 364], "add_modul": [31, 86, 90, 104, 110, 171], "child": [31, 86, 90, 104, 110, 171, 347], "fn": [31, 36, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 171, 212, 336, 337], "init_weight": [31, 86, 90, 104, 110, 171], "fill_": [31, 86, 90, 104, 110, 171, 348, 350, 365], "net": [31, 86, 90, 104, 110, 171, 186, 188, 191, 194, 202, 209, 255, 256, 263, 269, 273, 274, 275, 276, 331, 334, 348, 360, 361, 364], "in_featur": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 182, 183, 185, 186, 187, 188, 194, 202, 203, 208, 209, 210, 211, 230, 245, 259, 261, 352, 353, 364], "out_featur": [31, 86, 90, 100, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 181, 182, 183, 185, 186, 187, 188, 193, 194, 197, 201, 202, 203, 205, 208, 209, 210, 211, 230, 235, 245, 259, 261, 342, 347, 350, 352, 353, 356, 364], "bia": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 182, 183, 185, 186, 187, 188, 193, 194, 195, 196, 197, 199, 200, 201, 203, 209, 210, 211, 212, 237, 238, 241, 245, 252, 253, 254, 271, 276, 343, 347, 348, 349, 350, 359, 364], "requires_grad": [31, 82, 83, 86, 90, 104, 110, 139, 163, 171, 276], "bfloat16": [31, 86, 90, 104, 110, 171], "datatyp": [31, 86, 90, 104, 110, 171, 362], "member": [31, 86, 90, 104, 110, 171, 271, 305], "xdoctest": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 271, 276], "buf": [31, 86, 90, 104, 110, 171], "20l": [31, 86, 90, 104, 110, 171, 271], "1l": [31, 86, 90, 104, 110, 171, 271], "5l": [31, 86, 90, 104, 110, 171, 271], "__call__": [31, 36, 86, 90, 104, 110, 171, 246, 344, 365], "doubl": [31, 45, 86, 90, 104, 110, 127, 128, 129, 131, 145, 159, 162, 163, 165, 167, 171, 245, 259, 264, 268, 274, 277, 284, 347, 348, 349, 350, 365], "eval": [31, 86, 90, 104, 110, 163, 169, 171, 347, 348, 349], "evalu": [31, 86, 90, 104, 110, 163, 171, 190, 206, 207, 215, 225, 274, 327, 328, 348, 349, 356], "dropout": [31, 86, 90, 104, 110, 163, 171, 195, 197, 199, 201, 203, 350], "batchnorm": [31, 86, 90, 104, 110, 163, 171], "disabl": [31, 86, 90, 104, 110, 163, 171, 198, 225, 347], "comparison": [31, 86, 90, 104, 110, 163, 171, 271, 347, 348], "similar": [31, 33, 35, 37, 38, 57, 86, 90, 104, 105, 106, 110, 127, 145, 159, 162, 163, 165, 166, 167, 169, 171, 230, 232, 242, 245, 246, 343, 347, 348, 349, 350, 352, 353, 354, 355, 360, 362, 365], "extra_repr": [31, 86, 90, 104, 110, 171], "nontermin": 31, "original_reward": 31, "newli": [31, 86, 90, 104, 110], "OR": 31, "get_buff": [31, 86, 90, 104, 110, 171], "get_submodul": [31, 86, 90, 104, 110, 171], "qualifi": [31, 86, 90, 104, 110, 171], "referenc": [31, 86, 90, 104, 110, 171], "attributeerror": [31, 86, 90, 104, 110, 171, 365], "resolv": [31, 86, 90, 104, 110, 171], "someth": [31, 86, 90, 99, 104, 110, 171, 341, 348, 349, 360, 365], "get_extra_st": [31, 86, 90, 104, 110, 169, 171], "set_extra_st": [31, 86, 90, 104, 110, 169, 171], "picklabl": [31, 86, 90, 104, 110, 169, 171], "pickl": [31, 86, 90, 104, 110, 169, 171], "get_paramet": [31, 86, 90, 104, 110, 171], "net_b": [31, 86, 90, 104, 110, 171], "net_c": [31, 86, 90, 104, 110, 171], "conv": [31, 86, 90, 104, 110, 171, 182, 183, 348], "conv2d": [31, 86, 90, 104, 110, 171, 183, 185, 186, 194, 208, 364], "kernel_s": [31, 86, 90, 104, 110, 171, 182, 183, 185, 186, 194, 208, 213, 348, 364], "stride": [31, 86, 90, 104, 110, 171, 182, 183, 185, 186, 194, 208, 348, 364], "diagram": [31, 86, 90, 104, 110, 171], "degre": [31, 86, 90, 104, 110, 171], "named_modul": [31, 86, 90, 104, 110, 171], "o": [31, 86, 90, 104, 110, 171, 200], "half": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 347], "ipu": [31, 86, 90, 104, 110, 171], "strict": [31, 33, 35, 38, 86, 90, 104, 110, 163, 171, 276], "descend": [31, 86, 90, 104, 110, 163, 171, 276], "get_swap_module_params_on_convers": [31, 86, 90, 104, 110, 163, 171, 276], "persist": [31, 86, 90, 104, 110, 163, 171, 179, 276], "enforc": [31, 72, 86, 90, 104, 110, 163, 171, 247, 276, 360], "preserv": [31, 86, 90, 104, 110, 163, 171, 276], "missing_kei": [31, 86, 90, 104, 110, 163, 171, 276], "unexpected_kei": [31, 86, 90, 104, 110, 163, 171, 276], "namedtupl": [31, 86, 90, 104, 110, 163, 171, 276], "duplic": [31, 72, 86, 90, 104, 110, 171, 259, 264, 271, 284], "l": [31, 86, 90, 104, 110, 171, 195, 199, 285, 349, 360], "idx": [31, 86, 90, 104, 110, 171], "named_buff": [31, 86, 90, 104, 110, 171], "remove_dupl": [31, 86, 90, 104, 110, 171, 271], "prepend": [31, 86, 90, 104, 110, 171, 271], "running_var": [31, 86, 90, 104, 110, 171], "named_children": [31, 86, 90, 104, 110, 171], "conv4": [31, 86, 90, 104, 110, 171], "conv5": [31, 86, 90, 104, 110, 171], "memo": [31, 86, 90, 104, 110, 171], "named_paramet": [31, 86, 90, 104, 110, 139, 171, 271], "register_backward_hook": [31, 86, 90, 104, 110, 171], "removablehandl": [31, 86, 90, 104, 110, 171], "favor": [31, 86, 90, 104, 110, 171, 349], "register_full_backward_hook": [31, 86, 90, 104, 110, 171], "register_buff": [31, 86, 90, 104, 110, 171], "running_mean": [31, 86, 90, 104, 110, 171], "alongsid": [31, 86, 90, 104, 110, 171, 355, 359], "num_featur": [31, 86, 90, 104, 110, 171], "register_forward_hook": [31, 86, 90, 104, 110, 171, 192, 218], "with_kwarg": [31, 86, 90, 104, 110, 171], "always_cal": [31, 86, 90, 104, 110, 171], "register_module_forward_hook": [31, 86, 90, 104, 110, 171], "regardless": [31, 86, 90, 104, 110, 171, 257, 270, 273], "register_forward_pre_hook": [31, 86, 90, 104, 110, 171], "invok": [31, 86, 90, 104, 110, 171], "And": [31, 86, 90, 104, 110, 171, 353], "forward_pr": [31, 86, 90, 104, 110, 171], "register_module_forward_pre_hook": [31, 86, 90, 104, 110, 171], "grad_input": [31, 86, 90, 104, 110, 171], "grad_output": [31, 86, 90, 104, 110, 171], "subsequ": [31, 51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 119, 171, 350], "technic": [31, 86, 90, 104, 110, 171, 348, 350, 352], "caller": [31, 86, 90, 104, 110, 171], "register_module_full_backward_hook": [31, 86, 90, 104, 110, 171], "register_full_backward_pre_hook": [31, 86, 90, 104, 110, 171], "backward_pr": [31, 86, 90, 104, 110, 171], "register_module_full_backward_pre_hook": [31, 86, 90, 104, 110, 171], "register_load_state_dict_post_hook": [31, 86, 90, 104, 110, 171], "incompatible_kei": [31, 86, 90, 104, 110, 171], "register_modul": [31, 86, 90, 104, 110, 171, 344], "alia": [31, 86, 90, 104, 110, 171], "register_paramet": [31, 86, 90, 104, 110, 171], "register_state_dict_pre_hook": [31, 86, 90, 104, 110, 171], "keep_var": [31, 33, 35, 38, 86, 90, 104, 110, 163, 171, 276], "requires_grad_": [31, 86, 90, 104, 110, 171], "autograd": [31, 86, 90, 104, 110, 163, 171, 276], "freez": [31, 86, 90, 104, 110, 171], "finetun": [31, 86, 90, 104, 110, 171], "gan": [31, 86, 90, 104, 110, 171], "share_memori": [31, 86, 87, 90, 104, 110, 171, 347], "share_memory_": [31, 86, 90, 104, 110, 171, 364], "destin": [31, 33, 35, 38, 86, 90, 104, 110, 122, 128, 129, 131, 163, 165, 169, 171, 179, 276, 305], "averag": [31, 86, 90, 104, 110, 163, 169, 171, 241, 265, 266, 276, 320, 347, 349], "shallow": [31, 86, 90, 104, 110, 163, 171, 276, 350], "detach": [31, 86, 90, 104, 110, 163, 171, 271, 276, 286, 287, 288, 289, 347], "non_block": [31, 33, 35, 38, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 350], "memory_format": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "channels_last": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "unchang": [31, 86, 90, 104, 110, 127, 130, 145, 159, 162, 163, 165, 167, 171, 237, 245, 319, 347, 362], "tri": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 355], "pin": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "4d": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "ignore_w": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "1913": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "3420": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "5113": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "2325": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "torch_doctest_cuda1": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "gpu1": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "1914": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "5112": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 360], "2324": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "float16": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 196, 200, 245], "cdoubl": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "3741": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "j": [31, 34, 65, 66, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 344, 353], "2382": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "5593": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245, 360], "4443": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "complex128": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "6122": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "1150": [31, 86, 90, 104, 110, 127, 145, 159, 162, 163, 165, 167, 171, 245], "to_empti": [31, 86, 90, 104, 110, 171], "dst_type": [31, 86, 90, 104, 110, 171], "xpu": [31, 86, 90, 104, 110, 171], "set_to_non": [31, 86, 90, 104, 110, 171], "unidimension": 32, "keepdim": 32, "user_regist": 32, "priori": 32, "uniqu": [32, 73, 74, 123, 132, 158, 159, 160, 240, 312, 354, 362], "discretebox": [32, 86, 90, 104, 110, 352, 359, 365], "chosen_data": [33, 60], "rewarddata": [33, 60, 340], "rejected_data": [33, 60], "from_dataset": [33, 35, 60], "dataset_nam": [33, 35, 39, 44, 60, 103], "max_length": [33, 35, 36, 42, 44, 60, 356], "550": [33, 35, 39, 44, 60, 73, 74, 360], "root_dir": [33, 35, 44, 60], "from_disk": [33, 35, 44, 60], "carperai": [33, 35, 39, 44], "openai_summarize_comparison": [33, 35, 44], "sequen": [33, 35], "cach": [33, 35, 44, 51, 53, 54, 55, 57, 58, 59, 60, 66, 73, 86, 90, 104, 110, 119, 128, 131, 145, 163, 167, 179, 314, 361], "load_from_disk": [33, 35, 44, 60], "load_dataset": [33, 35, 44, 60], "attention_mask": [33, 35, 36, 38, 39, 42, 44, 60], "92534": 33, "input_id": [33, 35, 36, 38, 39, 42, 44, 60], "end_scor": [33, 38, 39, 60], "sub_data": [33, 35], "from_tensordict": [33, 35, 38], "non_tensordict": [33, 35, 38], "_nodefault": [33, 35, 38], "getattr": [33, 35, 38], "tensorclass": [33, 35, 38, 60, 62, 63, 79], "load_memmap": [33, 35, 38], "fetch": [33, 35, 38, 82, 83, 84, 85, 139, 352, 361, 362], "fromkei": [33, 35, 38], "memmap": [33, 35, 38, 62, 104, 110, 169, 305, 307, 319, 362], "saved_td": [33, 35, 38], "td_load": [33, 35, 38], "from_flatten": [33, 35, 38], "attemptedli": [33, 35, 38], "copy_exist": [33, 35, 38], "return_earli": [33, 35, 38], "share_non_tensor": [33, 35, 38], "mimic": [33, 35, 38, 86, 90, 104, 110], "cross": [33, 35, 38, 181], "anymor": [33, 35, 38, 163, 245], "tensordictfutur": [33, 35, 38], "deepli": [33, 35, 38], "insid": [33, 35, 38, 104, 365], "memmap_": [33, 35, 38, 169], "memmap_lik": [33, 35, 38], "contentless": [33, 35, 38], "1_000_000": [33, 34, 35, 37, 38, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 73, 347, 350], "alloc": [33, 35, 38, 63, 206, 207, 347], "setattr": [33, 35, 38], "tent": [33, 35, 38, 44], "to_tensordict": [33, 35, 38, 350], "unbind": [33, 34, 35, 37, 38, 40, 41, 197, 201], "alpha": [34, 40, 65, 66, 182, 183, 185, 186, 187, 188, 194, 208, 256, 263, 272, 274, 276, 347, 362, 364], "ep": [34, 40, 65, 66, 169, 241, 257, 277, 320, 347, 348, 350, 353, 356], "1e": [34, 40, 65, 66, 169, 190, 193, 212, 223, 347, 348, 349, 359], "08": [34, 40, 65, 66, 346, 348, 349, 360, 363], "pin_memori": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 144, 347, 364], "schaul": [34, 65, 66], "quan": [34, 65, 66], "antonogl": [34, 65, 66], "silver": [34, 65, 66], "2015": [34, 65, 66], "arxiv": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 123, 145, 165, 184, 185, 186, 187, 188, 189, 192, 193, 194, 199, 205, 211, 213, 214, 217, 219, 220, 226, 236, 241, 255, 256, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 272, 273, 276, 277, 286, 291, 299, 361], "ab": [34, 54, 57, 59, 65, 66, 82, 83, 84, 85, 95, 96, 101, 102, 107, 111, 112, 122, 145, 165, 169, 184, 189, 193, 194, 199, 205, 211, 213, 214, 217, 219, 220, 226, 255, 256, 259, 260, 261, 262, 265, 266, 267, 268, 269, 272, 273, 276, 361], "1511": [34, 65, 66, 194], "05952": [34, 65, 66], "expon": [34, 40, 65, 66], "\u03b1": [34, 40, 65, 66], "delta": [34, 40, 65, 66, 195, 199, 223, 242, 246, 340, 343], "null": [34, 40, 65, 66, 121], "max_siz": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 75, 77, 79, 349, 354], "1_000": [34, 37, 40, 41, 362], "merg": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 360], "mini": [34, 37, 40, 41, 51, 53, 54, 55, 56, 57, 58, 59, 359], "decid": [34, 37, 40, 41, 364], "meth": [34, 37, 40, 41, 271, 360], "incompat": [34, 37, 40, 41, 275, 362], "drop_last": [34, 37, 40, 41, 72, 74], "notion": [34, 37, 40, 41], "caution": [34, 37, 40, 41, 72, 172, 365], "codebas": [34, 37, 40, 41, 360], "approach": [34, 37, 40, 41, 141, 347, 349, 353, 354, 365], "return_info": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 362], "tensordictprioritizedreplaybuff": [34, 340, 364], "simplifi": [34, 352, 360, 362], "_weight": [34, 40, 65, 66, 362, 364], "arrai": [34, 39, 65, 86, 90, 104, 110, 132, 195, 196, 199, 200, 347, 362], "update_prior": [34, 65, 66, 319, 344, 348, 362, 364], "36278465": 34, "tempfil": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 334, 347, 348, 362], "tqdm": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 322, 347, 349, 350, 359, 360], "randomsampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 347], "td_error": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 258, 259, 261, 262, 263, 264, 269, 271, 274, 276, 278, 284, 347, 353, 362, 364], "update_tensordict_prior": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 347, 362, 364], "temporarydirectori": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 347, 348, 362], "tmpdir": [34, 37, 40, 41, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 347, 348], "rb_load": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "cursor": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "insert_transform": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 118, 163], "insert": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 68, 69, 77, 78, 80, 81, 118, 127, 163, 164], "set_sampl": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_storag": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "set_writ": [34, 37, 40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68], "prompt_rindex": [35, 36, 39], "promptdatatldr": 35, "116722": 35, "prompt": [36, 39], "return_tensordict": [36, 42], "recip": [36, 86, 90, 104, 110, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252], "text": [36, 39, 42, 55, 195, 196, 199, 200, 241, 349], "tensodict": [36, 42], "orign": [36, 42], "valid_sampl": 36, "eough": 36, "toknen": 36, "meet": 36, "criterion": 36, "autotoken": [36, 42, 44], "from_pretrain": [36, 39, 42], "gpt2": [36, 39, 42, 44, 184, 189, 216], "pad_token": [36, 42], "eos_token": 36, "enough": [36, 362], "inde": [36, 130, 349, 360], "roundrobinwrit": [37, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "Not": [37, 82, 83, 95, 96], "depth": [37, 86, 90, 100, 104, 110, 181, 182, 183, 185, 186, 187, 188, 193, 194, 203, 205, 208, 209, 213, 214, 235, 342, 348, 351, 353, 354, 358, 359, 362], "_pytre": [37, 362], "tree_map": [37, 362], "did": [37, 168, 292, 348, 349, 354, 362, 365], "assert0": [37, 362], "ref_model": 39, "reward_model": [39, 251], "kl_coef": 39, "max_new_token": 39, "score_clip": 39, "kl_schedul": 39, "klcontrollerbas": 39, "num_step": 39, "causal": 39, "sentenc": 39, "frozen": [39, 139], "kl": [39, 139, 266, 270], "penalti": [39, 270], "strai": 39, "calcul": [39, 150, 195, 255, 257, 261, 270, 273, 275], "gpt2rewardmodel": 39, "get_dataload": [39, 340], "promptdata": [39, 340], "gpt2lmheadmodel": 39, "dl": 39, "block_siz": [39, 60], "tensorclass_typ": [39, 60], "openai_summarize_tldr": 39, "config_class": 39, "model_path": 39, "rollout_from_model": 39, "rollout_from_data": 39, "600": [39, 355, 360, 362], "reward_kl": [39, 139], "reward_raw": 39, "sample_log_prob": [39, 230, 231, 232, 242, 246, 248, 273, 331, 349, 352, 359, 364], "create_rollout_td": 39, "log_prob": [39, 190, 206, 207, 215, 225, 246], "log_ratio": 39, "replic": 39, "rindex": 39, "eo": 39, "term": [39, 139, 199, 200, 210, 211, 254, 255, 263, 324, 348, 349, 351, 352, 359], "generation_config": 39, "generationconfig": 39, "ti": [39, 295, 296, 297, 298, 300, 301, 302, 303, 348], "log_probs_gen": 39, "logprobs_of_label": 39, "priority_kei": [40, 41, 52, 65, 259, 262, 263, 264, 269, 271, 274, 276, 278, 284, 362, 364], "reduct": [40, 65, 66, 77, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 276, 278], "prioritizedreplaybuff": [40, 340, 364], "min": [40, 65, 66, 77, 223, 224, 225, 234, 241, 256, 257, 263, 272, 274, 276, 348, 349, 359], "median": [40, 65, 66, 77, 95, 96, 242, 246], "include_info": [40, 41, 51, 52, 53, 54, 55, 56, 57, 58, 59], "kw": [41, 52, 69, 78], "huggingfac": [42, 54, 59, 239], "co": [42, 132, 360], "doc": [42, 92, 95, 96, 103, 107, 312, 347, 348, 359, 362, 365], "pad_trunc": 42, "am": 42, "me": 42, "reassur": 42, "ok": 42, "describ": [43, 124, 162, 223, 224, 259, 308, 343, 347, 349, 359, 360, 365], "tokenizer_fn": 44, "tensordicttoken": [44, 340], "pre_tokenization_hook": 44, "valid_s": 44, "tokenizer_class": 44, "tokenizer_model_nam": 44, "tokein": 44, "elementwis": 44, "vocabulari": 44, "loader": [44, 349], "185068": 44, "dataset_to_tensordict": 44, "data_dir": 44, "batch_dim": [44, 338], "valid_mask_kei": 44, "conver": 44, "batch_dimens": 44, "filder": 44, "from_dict": 44, "data_memmap": 44, "recurse_through_entri": 48, "recurse_through_stack": 48, "consolid": 48, "dataset_id": [51, 53, 54, 55, 57, 58, 59], "num_proc": 51, "slice_len": [51, 57, 66, 73, 74, 305], "strict_len": 51, "arari": 51, "2600": 51, "million": [51, 350], "consequ": [51, 199, 354], "50x10": 51, "available_dataset": [51, 52, 53, 54, 55, 56, 57, 58, 59, 73, 74], "ataridqn": 51, "immutabledatasetwrit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "greater": [51, 66, 73, 74, 197, 201, 347, 348, 364], "shorter": [51, 57, 66, 73, 74], "Be": [51, 57, 66, 73, 74], "game_nam": 51, "pong": [51, 102, 143, 365], "krull": 51, "1d": [51, 66, 73, 74, 77], "cheapli": 51, "nontensordata": [51, 57], "invalid_rang": 51, "999998": 51, "999999": 51, "add_count": 51, "84": [51, 149, 348, 350, 360, 361], "valueestim": [51, 255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 280, 284, 340, 343, 347, 359], "convolut": [51, 182, 183, 185, 186, 208, 221, 352], "2657628": 51, "2657629": 51, "2657630": 51, "2657631": 51, "2657632": 51, "2657633": 51, "2657634": 51, "2657635": 51, "2657636": 51, "2657637": 51, "2657638": 51, "2657639": 51, "2657640": 51, "2657641": 51, "2657642": 51, "2657643": 51, "2657644": 51, "2657645": 51, "2657646": 51, "2657647": 51, "2657648": 51, "2657649": 51, "2657650": 51, "2657651": 51, "2657652": 51, "2657653": 51, "2657654": 51, "2657655": 51, "2657656": 51, "2657657": 51, "2657658": 51, "2657659": 51, "2657660": 51, "2657661": 51, "2657662": 51, "2657663": 51, "2657664": 51, "2657665": 51, "2657666": 51, "2657667": 51, "2657668": 51, "2657669": 51, "2657670": 51, "2657671": 51, "2657672": 51, "2657673": 51, "2657674": 51, "2657675": 51, "2657676": 51, "2657677": 51, "2657678": 51, "2657679": 51, "2657680": 51, "2657681": 51, "2657682": 51, "2657683": 51, "2657684": 51, "2657685": 51, "2657686": 51, "2657687": 51, "2657688": 51, "2657689": 51, "2657690": 51, "2657691": 51, "1995687": 51, "1995688": 51, "1995689": 51, "1995690": 51, "1995691": 51, "1995692": 51, "1995693": 51, "1995694": 51, "1995695": 51, "1995696": 51, "1995697": 51, "1995698": 51, "1995699": 51, "1995700": 51, "1995701": 51, "1995702": 51, "1995703": 51, "1995704": 51, "1995705": 51, "1995706": 51, "1995707": 51, "1995708": 51, "1995709": 51, "1995710": 51, "1995711": 51, "1995712": 51, "1995713": 51, "1995714": 51, "1995715": 51, "1995716": 51, "1995717": 51, "1995718": 51, "1995719": 51, "1995720": 51, "1995721": 51, "1995722": 51, "1995723": 51, "1995724": 51, "1995725": 51, "1995726": 51, "1995727": 51, "1995728": 51, "1995729": 51, "1995730": 51, "1995731": 51, "1995732": 51, "1995733": 51, "1995734": 51, "1995735": 51, "1995736": 51, "1995737": 51, "1995738": 51, "1995739": 51, "1995740": 51, "1995741": 51, "1995742": 51, "1995743": 51, "1995744": 51, "1995745": 51, "1995746": 51, "1995747": 51, "1995748": 51, "1995749": 51, "1995750": 51, "left": [51, 53, 57, 120, 127, 128, 129, 133, 139, 145, 147, 148, 154, 157, 160, 162, 165, 167, 171, 208, 237, 348, 349, 354, 355], "untouch": [51, 57, 120, 127, 128, 129, 133, 139, 147, 148, 154, 157, 162, 171], "_max_run": 51, "dataset_asterix": 51, "asterix": 51, "dataset_pong": 51, "sample_from_al": [51, 68, 71], "buffer_id": [51, 71, 76], "hidden": [51, 104, 110, 122, 185, 193, 195, 196, 197, 199, 200, 201, 202, 213, 214, 219, 220, 230, 231, 232, 234, 245, 248, 257, 270, 273, 342, 350, 358, 364], "exclusive_field": [51, 358], "stack_dim": [51, 358], "data_path": [51, 52, 53, 54, 55, 56, 57, 58, 59], "data_path_root": [51, 52, 53, 54, 55, 56, 57, 58, 59], "delet": [51, 52, 53, 54, 55, 56, 57, 58, 59, 124, 312], "chunksiz": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pool": [51, 52, 53, 54, 55, 56, 57, 58, 59, 160], "max_tasks_per_child": [51, 52, 53, 54, 55, 56, 57, 58, 59], "worker_thread": [51, 52, 53, 54, 55, 56, 57, 58, 59], "index_with_gener": [51, 52, 53, 54, 55, 56, 57, 58, 59], "pbar": [51, 52, 53, 54, 55, 56, 57, 58, 59, 347, 349, 350, 359, 360], "dest": [51, 52, 53, 54, 55, 56, 57, 58, 59, 145, 165, 167, 245], "num_fram": [51, 52, 53, 54, 55, 56, 57, 58, 59], "unitari": [51, 52, 53, 54, 55, 56, 57, 58, 59, 360], "minariexperiencereplai": [51, 52, 53, 54, 56, 57, 58, 59], "1000000": [51, 52, 53, 54, 55, 56, 57, 58, 59, 350], "distance_from_origin": [51, 52, 53, 54, 55, 56, 57, 58, 59], "forward_reward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qpo": [51, 52, 53, 54, 55, 56, 57, 58, 59], "qvel": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_ctrl": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "reward_forward": [51, 52, 53, 54, 55, 56, 57, 58, 59], "reward_surv": [51, 52, 53, 54, 55, 56, 57, 58, 59], "x_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "x_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59, 104], "y_posit": [51, 52, 53, 54, 55, 56, 57, 58, 59], "y_veloc": [51, 52, 53, 54, 55, 56, 57, 58, 59], "achieved_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "desired_go": [51, 52, 53, 54, 55, 56, 57, 58, 59], "27": [51, 52, 53, 54, 55, 56, 57, 58, 59, 82, 83, 104, 110, 346, 348, 349, 350, 360, 361, 363], "_collate_id": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x120e21dc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cattensor": [51, 52, 53, 54, 55, 56, 57, 58, 59, 86, 90, 104, 110, 331, 347, 358, 360, 365], "cat_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "cat_next_tensor": [51, 52, 53, 54, 55, 56, 57, 58, 59], "new_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "31": [51, 52, 53, 54, 55, 56, 57, 58, 59, 95, 96, 346, 348, 350, 360, 361, 363], "full_storag": [51, 52, 53, 54, 55, 56, 57, 58, 59], "0x168406fc0": [51, 52, 53, 54, 55, 56, 57, 58, 59], "from_env": 53, "use_truncated_as_don": 53, "direct_download": 53, "terminate_on_end": 53, "env_kwarg": [53, 58, 59, 120, 336, 337, 347], "reconstruct": [53, 73, 74, 266, 347, 365], "get_dataset": 53, "qlearning_dataset": 53, "fewer": 53, "possess": 53, "unexpectedli": 53, "traj_split": 53, "observationnorm": [53, 169, 338, 347, 348, 349, 350, 364], "maze2d": 53, "umaz": 53, "loc": [53, 86, 90, 104, 110, 139, 141, 152, 198, 212, 224, 225, 230, 231, 232, 242, 246, 248, 255, 256, 269, 273, 274, 275, 276, 326, 331, 338, 342, 347, 348, 349, 350, 352, 359, 364], "gen": 54, "dgrl": 54, "accompani": [54, 120, 157], "gap": 54, "2312": 54, "05742": 54, "gen_dgrl": 54, "procgen": 54, "bigfish": 54, "bossfight": 54, "categori": [54, 342, 344], "1m_e": 54, "1m_": 54, "comma": 54, "npy": 54, "extract": [54, 119, 239, 347, 349, 364], "mmap": [54, 58, 59], "minut": [54, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "internet": [54, 59], "connect": [54, 59], "minari": 55, "websit": [55, 57], "currenrtli": 55, "minari_data": 55, "door": 55, "torchrl_logg": [55, 356], "28": [55, 208, 348, 354, 359, 360, 361], "door_body_po": 55, "dua": 56, "graff": 56, "2017": 56, "uci": 56, "archiv": 56, "ic": 56, "edu": 56, "ml": 56, "sklearn": [56, 103], "adult_num": [56, 103], "adult_onehot": [56, 103], "mushroom_num": [56, 103], "mushroom_onehot": [56, 103], "covertyp": [56, 103], "shuttl": [56, 103], "magic": [56, 103, 351], "shuffl": [57, 72, 74, 359], "stream": 57, "embodi": [57, 361], "22": [57, 73, 74, 168, 348, 353, 360, 361], "institut": 57, "demonstr": [57, 349, 354, 359, 360, 362, 365], "527": [57, 360], "skill": 57, "160266": 57, "googl": [57, 58, 82, 83, 349, 350, 359], "open_x_embodi": 57, "2310": [57, 107], "08864": 57, "language_instruct": 57, "get_non_tensor": 57, "neither": [57, 360], "nor": 57, "insuffici": 57, "chosen": [57, 111, 112, 158, 159, 217, 218, 226, 244, 305, 331, 342, 355], "openx": 57, "__will": 57, "change__": 57, "randomli": [57, 72, 140, 141, 159, 237, 242, 246, 352, 359, 360, 362], "crop": [57, 125, 146, 305], "modal": [57, 347], "cmu_stretch": [57, 305], "is_init": [57, 59, 122, 138, 197, 201, 240, 241, 350], "language_embed": 57, "512": [57, 194, 348, 360], "lift": 57, "green": 57, "garbag": 57, "lid": 57, "roboset": 58, "h5": [58, 59], "roboh": [58, 107], "concis": [58, 353], "75": [58, 348, 360, 361], "totensor": 59, "image_s": 59, "v": [59, 169, 195, 196, 199, 200, 230, 262, 269, 276, 342, 347, 348], "npz": 59, "2206": [59, 101, 102], "04779": [59, 256, 261], "vd4rl": 59, "detect": 59, "squar": [59, 125, 198, 224, 225, 305], "rectangular": [59, 182, 183], "walker_walk": 59, "64px": 59, "height": [59, 125, 149], "veloc": [59, 84, 85, 86, 90, 104, 110, 123, 359, 360, 365], "infinit": [60, 111, 112, 354, 362], "three": [60, 342, 344, 349, 351, 352, 359, 360, 362, 365], "block": [60, 61, 81, 342, 350], "pairwisedataset": [60, 340], "256": [60, 189, 348, 349, 359, 360], "immut": [61, 86, 90, 104, 110, 148, 163], "piec": [61, 69, 78, 80, 81, 347, 348, 349, 355, 359, 360, 362], "scratch_dir": [62, 347, 362], "sent": [62, 63, 79, 169], "mistak": [62, 63, 79], "myclass": [62, 63, 79], "foo": [62, 63, 79, 234, 362, 365], "bar": [62, 63, 79, 234, 315, 316, 318, 322, 344, 348], "attach": [62, 63, 64, 75, 76, 79, 348], "entiti": [62, 63, 64, 75, 76, 79], "zero_": [63, 79, 176], "max_capac": [65, 66, 347, 362], "data_0": 65, "data_1": 65, "smoothen": 65, "tdrb": 65, "pack": [65, 195, 199, 349, 351, 365], "end_kei": [66, 73, 74], "cache_valu": [66, 73, 74], "expens": [66, 73, 74, 362], "readili": [66, 73, 74], "conjunct": [66, 73, 74, 348], "Will": [66, 73, 86, 101, 305], "buffer0": [66, 73], "immutablewrit": [66, 73], "buffer1": [66, 73], "other_sampl": [66, 73], "short": [66, 73, 74, 82, 83, 95, 96, 104, 172, 199, 200, 348, 349, 351, 352, 359, 362], "unsqueez": [66, 117, 120, 123, 124, 161, 164, 202, 347, 350, 359, 360], "tolist": 66, "120110917137936e": 66, "06": [66, 190, 223, 348, 349, 360], "uniformli": [67, 271, 365], "storageensembl": [68, 71], "samplerensembl": 68, "writerensembl": [68, 76], "num_buffer_sampl": [68, 71], "ensembl": [68, 71, 76, 81, 245, 274], "forbidden": 68, "collat": 68, "0x13a2ef430": 68, "0x13a2f9310": 68, "interpol": [68, 149, 348, 350], "interpolationmod": [68, 350], "bilinear": [68, 149, 350], "0x13a2f9220": 68, "0x13a2f9f70": 68, "0x13a2d9b50": 68, "0x13a2f95b0": 68, "0x128648260": 68, "roundrobin": [69, 78], "incomplet": [72, 74], "fresh": 72, "haven": [72, 361], "remain": [72, 122, 129, 130, 139, 158, 211, 353], "draw": [72, 237], "slicesamplerwithoutreplac": [73, 362], "320": [73, 74, 84, 85, 348, 360], "700": [73, 74], "dataid": [73, 74], "__len__": 75, "rank_kei": 77, "rank": [77, 181], "samplerwithoutreplac": [77, 349, 359, 362], "get_insert_index": 77, "convers": [82, 83, 95, 96, 343], "2106": [82, 83, 260], "13281": [82, 83], "categorical_action_encod": [82, 83, 86, 89, 90, 91, 92, 95, 96, 101, 102, 104, 107, 110], "frame_skip": [82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 101, 102, 107, 136, 315, 318, 325, 344, 347, 348, 349, 364], "repeat": [82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 181, 349, 359, 360], "allow_done_after_reset": [82, 83, 84, 85, 86, 89, 91, 92, 95, 96, 101, 102, 107], "toler": [82, 83, 84, 85, 89, 91, 92, 95, 96, 101, 102, 107, 190, 223], "availalb": [82, 83, 95, 96], "ant": [82, 83, 86, 90, 93, 104, 110, 361], "87": [82, 83, 348, 360, 361], "acrobot": [82, 83, 84, 85, 365], "advant": [82, 83, 95, 96], "report": [82, 83, 95, 96, 355], "timer": [82, 83, 95, 96], "timeit": [82, 83, 95, 96], "310": [82, 83, 360], "ms": [82, 83, 95, 96], "268": [82, 83, 360], "433": [82, 83, 360], "80": [82, 83, 348, 349, 359, 360], "213": [82, 83, 360, 362], "8605": [82, 83], "pipelineenv": 83, "get_environ": 83, "dm_control": [84, 85, 347, 358, 365], "2006": [84, 85, 256, 261, 360], "12983": [84, 85], "task_nam": [84, 86, 90, 104, 110], "pixels_onli": [84, 85, 89, 91, 92, 107, 347, 348, 355, 356, 364, 365], "cheetah": [84, 85, 86, 90, 104, 110, 305, 347], "240": [84, 85, 360, 364], "swingup": [84, 85, 365], "swingup_spars": [84, 85], "ball_in_cup": [84, 85], "catch": [84, 85], "balance_spars": [84, 85], "three_pol": [84, 85], "two_pol": [84, 85], "finger": [84, 85], "turn_easi": [84, 85], "turn_hard": [84, 85], "fish": [84, 85], "upright": [84, 85, 348], "swim": [84, 85], "hopper": [84, 85], "hop": [84, 85], "humanoid": [84, 85, 104, 110, 358], "walk": [84, 85, 104, 110, 348, 358], "run_pure_st": [84, 85], "bring_bal": [84, 85], "bring_peg": [84, 85], "insert_bal": [84, 85], "insert_peg": [84, 85], "point_mass": [84, 85], "reacher": [84, 85], "swimmer": [84, 85], "swimmer6": [84, 85], "swimmer15": [84, 85], "walker": [84, 85], "dog": [84, 85], "trot": [84, 85], "humanoid_cmu": [84, 85], "lqr": [84, 85], "lqr_2_1": [84, 85], "lqr_6_2": [84, 85], "quadrup": [84, 85], "escap": [84, 85], "stacker": [84, 85], "stack_2": [84, 85], "stack_4": [84, 85], "deviceless": 86, "run_type_check": [86, 100], "counterenv": 86, "unboundedcontinuoustensorspec": [86, 90, 100, 104, 110, 117, 120, 128, 131, 147, 159, 176, 181, 205, 229, 245, 248, 250, 275, 340, 349, 350, 359, 360, 365], "continuousbox": [86, 90, 104, 110, 176, 349, 359, 360, 364, 365], "sort": [86, 90, 104, 110, 124, 241], "another_act": [86, 90, 104, 110], "mutabl": [86, 90, 104, 110], "_callabletransform": [86, 90, 104, 110], "batch_lock": [86, 88, 90, 104, 110, 120, 159, 163, 360], "done_keys_group": [86, 90, 104, 110], "outer": [86, 90, 104, 110, 344, 347, 348, 365], "another_don": [86, 90, 104, 110], "empty_cach": [86, 90, 104, 110, 163], "fake_tensordict": [86, 90, 104, 110, 348], "fake": [86, 90, 104, 110, 347, 348], "afterward": [86, 90, 104, 110, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252, 365], "silent": [86, 90, 104, 110, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 212, 213, 214, 216, 219, 220, 222, 227, 233, 234, 236, 237, 240, 241, 244, 249, 252], "braxenv": [86, 90, 104, 110, 148, 340, 351], "envnam": [86, 90, 104, 110], "pipeline_st": [86, 90, 104, 110], "attibut": [86, 90, 104, 110], "maybe_reset": [86, 90, 104, 110], "speak": [86, 90, 104, 110, 347], "rand_act": [86, 90, 99, 104, 105, 106, 110, 120, 351], "register_gym": [86, 90, 104, 110, 351], "entry_point": [86, 90, 104, 110], "info_kei": [86, 90, 104, 110], "reward_threshold": [86, 90, 104, 110], "nondeterminist": [86, 90, 104, 110], "max_episode_step": [86, 89, 90, 91, 104, 110], "order_enforc": [86, 90, 104, 110], "autoreset": [86, 90, 104, 110], "disable_env_check": [86, 89, 90, 101, 102, 104, 110], "apply_api_compat": [86, 90, 104, 110], "nasium": [86, 90, 104, 110], "scope": [86, 90, 104, 110, 365], "dmcontrolenv": [86, 90, 104, 110, 305, 340, 347, 351, 358, 365], "dmc": [86, 90, 104, 110], "removeemptyspec": [86, 90, 104, 110], "threshold": [86, 90, 104, 110, 237, 256, 257, 349], "learnt": [86, 90, 104, 110, 334], "knowledg": [86, 90, 104, 110, 353], "checker": [86, 89, 90, 101, 102, 104, 110], "stepapicompat": [86, 90, 104, 110], "concept": [86, 90, 104, 110, 348, 362], "deem": [86, 90, 104, 110, 111, 112], "envgym": [86, 90, 104, 110], "0855": [86, 90, 104, 110], "0215": [86, 90, 104, 110], "0881": [86, 90, 104, 110], "0412": [86, 90, 104, 110], "1101": [86, 90, 104, 110], "0080": [86, 90, 104, 110], "0254": [86, 90, 104, 110], "0424": [86, 90, 104, 110], "9609e": [86, 90, 104, 110], "9776e": [86, 90, 104, 110], "04": [86, 90, 94, 104, 110, 348, 349, 359, 360, 361], "6347e": [86, 90, 104, 110], "3842e": [86, 90, 104, 110], "5338e": [86, 90, 104, 110], "3064e": [86, 90, 104, 110], "0381e": [86, 90, 104, 110], "6656e": [86, 90, 104, 110], "05": [86, 90, 104, 110, 348, 359, 360, 361], "0204e": [86, 90, 104, 110], "action_spac": [86, 90, 104, 110, 132, 192, 218, 235, 236, 243, 244, 255, 256, 258, 259, 261, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 350, 352, 356], "0833": [86, 90, 104, 110, 349], "0275": [86, 90, 104, 110], "0612": [86, 90, 104, 110], "0770": [86, 90, 104, 110, 360], "1256": [86, 90, 104, 110, 360], "0082": [86, 90, 104, 110], "0186": [86, 90, 104, 110], "0476": [86, 90, 104, 110], "2221": [86, 90, 104, 110], "2256": [86, 90, 104, 110], "5930": [86, 90, 104, 110], "6937": [86, 90, 104, 110], "5865": [86, 90, 104, 110], "5479": [86, 90, 104, 110], "0187": [86, 90, 104, 110], "6825": [86, 90, 104, 110, 360], "5224": [86, 90, 104, 110], "0018": [86, 90, 104, 110, 360], "1005": [86, 90, 104, 110], "0335": [86, 90, 104, 110], "0268": [86, 90, 104, 110, 360], "0133": [86, 90, 104, 110], "0627": [86, 90, 104, 110], "0074": [86, 90, 104, 110, 360], "0488": [86, 90, 104, 110, 360], "0353": [86, 90, 104, 110], "0075": [86, 90, 104, 110, 360], "0069": [86, 90, 104, 110, 360], "0098": [86, 90, 104, 110, 360], "0058": [86, 90, 104, 110, 360], "0033": [86, 90, 104, 110, 360], "0157": [86, 90, 104, 110], "0004": [86, 90, 104, 110, 360], "0381": [86, 90, 104, 110], "0452": [86, 90, 104, 110], "11355747": [86, 90, 104, 110], "04257728": [86, 90, 104, 110], "00408397": [86, 90, 104, 110], "04155852": [86, 90, 104, 110], "0389733": [86, 90, 104, 110], "01409826": [86, 90, 104, 110], "0978704": [86, 90, 104, 110], "08808327": [86, 90, 104, 110], "03970837": [86, 90, 104, 110], "00535434": [86, 90, 104, 110], "02353762": [86, 90, 104, 110], "05116226": [86, 90, 104, 110], "02788907": [86, 90, 104, 110], "06848346": [86, 90, 104, 110], "05154399": [86, 90, 104, 110], "0371798": [86, 90, 104, 110], "05128025": [86, 90, 104, 110], "dydact": [86, 90, 104, 110], "gym_env": [86, 90, 104, 110, 364], "reset_kei": [86, 90, 104, 110, 123, 153, 158, 159, 160], "multitask": [86, 90, 104, 110], "multiag": [86, 90, 99, 104, 105, 106, 110, 180, 209, 217, 226, 284], "another_reward": [86, 90, 104, 110], "callback": [86, 90, 104, 110, 359], "auto_cast_to_devic": [86, 90, 104, 110, 359], "return_contigu": [86, 90, 104, 110, 172, 358], "soon": [86, 90, 104, 105, 106, 110], "__sort": [86, 90, 104, 110], "as__": [86, 90, 104, 110], "normal": [86, 90, 104, 110, 141, 169, 182, 183, 198, 203, 206, 207, 212, 224, 225, 233, 242, 246, 257, 270, 273, 318, 320, 338, 342, 344, 350, 352, 359, 365], "argmaxmodul": [86, 90, 104, 110], "n_ob": [86, 90, 104, 110, 139, 240, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 353], "n_act": [86, 90, 104, 110, 139, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 353], "ourselv": [86, 90, 104, 110, 349, 365], "emul": [86, 90, 104, 110], "epoch": [86, 90, 104, 110, 322, 349, 359], "input_td": [86, 90, 104, 110], "rollout_td": [86, 90, 104, 110], "concomitt": [86, 90, 104, 110], "workspac": [86, 90, 104, 110], "prevail": [86, 90, 104, 110, 124, 153, 180], "creator": [87, 327, 328, 336, 337, 338], "substitut": [87, 158, 169, 352], "vecnorm": [87, 338], "env_creat": [87, 347], "test_env1": 87, "_td": [87, 347], "observation_count": [87, 365], "test_env2": 87, "sleep": [87, 365], "ps": 87, "p1": 87, "p2": 87, "9934": 87, "env_str": 88, "device_map": 88, "accross": [89, 91], "registri": 89, "asyncvectorenv": 89, "involv": [89, 91, 92, 107, 120, 351, 353], "pixel_observ": [89, 91, 92, 107], "pixelobservationwrapp": [89, 91, 92, 107], "al": [89, 91, 132, 143, 181, 365], "adventur": [89, 91, 365], "v5": [89, 91, 102, 132, 143, 365], "airraid": [89, 91, 365], "alien": [89, 91, 365], "time_limit": 89, "timelimit": [89, 111, 112], "default_info_dict_read": [89, 90, 91, 104], "reader": [89, 90, 91, 104, 348], "set_info_dict_read": [89, 90, 91, 104, 351], "info_dict": [89, 90, 91, 104], "auto_register_info_dict": [89, 90, 91, 104], "info_dict_read": [90, 104], "succe": [90, 104], "halfcheetah": [90, 104, 149, 331, 347], "register_info_dict": 90, "read_act": 90, "read_don": 90, "nonsens": 90, "fallback": 90, "broken": [90, 172], "read_ob": 90, "dictat": [90, 242, 246, 273, 347, 360], "read_reward": 90, "baseinfodictread": 90, "hoc": [90, 104, 352], "dict_read": 90, "my_info_kei": 90, "some_env": 90, "vecenv": 91, "vectorenv": 91, "secur": 92, "habitat3": 92, "ai": [92, 361], "habitatrenderpick": 92, "isaacgym": [93, 94], "isaacgymwrapp": [93, 340], "isaacgymenv": [94, 340], "webpag": 94, "isaac": 94, "essenc": [94, 351], "instadeepai": [95, 96], "2306": [95, 96], "09884": [95, 96], "snake": [95, 96], "grid": [95, 96, 305], "bodi": [95, 96], "body_st": [95, 96], "fruit_posit": [95, 96], "col": [95, 96], "row": [95, 96], "head_posit": [95, 96], "tail": [95, 96], "game2048": [95, 96], "maze": [95, 96], "cleaner": [95, 96], "cvrp": [95, 96], "multicvrp": [95, 96], "minesweep": [95, 96], "rubikscub": [95, 96], "knapsack": [95, 96], "sudoku": [95, 96], "tsp": [95, 96], "connector": [95, 96], "v2": [95, 96, 108, 109, 281, 295, 296, 297, 298, 300, 301, 302, 303, 350], "mmst": [95, 96], "graphcolor": [95, 96], "partli": [95, 96], "scrambl": [95, 96], "robotwarehous": [95, 96], "tetri": [95, 96], "binpack": [95, 96], "jobshop": [95, 96], "0x1fca91910": 95, "122": [95, 96, 360, 365], "0x1ff9baee0": 95, "134": [95, 96, 360], "0x1ff9ba7c0": 95, "172": [95, 96, 360], "rubric": [96, 141, 248], "mo": [97, 98], "minecart": [97, 98], "mo_gym": 98, "qualnam": 99, "leverag": [99, 105, 106, 347, 359, 365], "neural": [99, 105, 106, 182, 183, 221, 245, 342, 348, 349, 350, 352, 359, 360, 365], "group_map": [99, 105, 106, 111, 112, 113], "constructiuon": [99, 105, 106], "premad": [99, 105, 106, 111, 112, 284], "all_in_one_group": [99, 113], "agent_0": [99, 105, 106, 113], "agent_1": [99, 105, 106, 113], "agent_2": [99, 105, 106, 113], "agent_3": 99, "one_group_per_ag": [99, 105, 106], "environn": 100, "mymbenv": [100, 181, 205], "world_model": [100, 181, 205, 266], "hidden_observ": [100, 181, 205], "mlp": [100, 181, 182, 183, 185, 186, 187, 188, 194, 197, 201, 202, 205, 209, 230, 235, 259, 261, 331, 342, 348, 352, 353, 356, 358, 361, 364], "worldmodelwrapp": [100, 181, 205], "activation_class": [100, 181, 182, 183, 185, 186, 187, 188, 193, 194, 203, 205, 208, 209, 348, 352, 359, 364], "relu": [100, 181, 189, 205, 212, 254], "activate_last_lay": [100, 181, 188, 203, 205], "sail": [101, 102], "sg": [101, 102], "10558": [101, 102], "readthedoc": 101, "en": 101, "python_interfac": 101, "envpoolmixin": 102, "env_bas": 102, "task_id": 102, "env_typ": 102, "gym_reset_return_info": 102, "envpool_env": 102, "www": [103, 206, 207], "fetch_openml": 103, "106": [103, 360], "my_env_fun": [104, 110], "custom_attribute_list": [104, 110], "custom_attribut": [104, 110], "custom_method_list": [104, 110], "custom_method": [104, 110], "deploi": [104, 110, 120], "slight": [104, 110, 348], "share_individual_td": [104, 110], "shared_memori": [104, 110], "policy_proof": [104, 110], "ll": [104, 110, 195, 196, 199, 200, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 365], "serial_for_singl": [104, 110], "list_of_kwarg": [104, 110], "com_veloc": [104, 110], "extrem": [104, 110, 255, 257, 270, 273, 275], "head_height": [104, 110], "joint_angl": [104, 110], "torso_vert": [104, 110], "stringent": [104, 349, 359], "inter": 104, "penv": 104, "tensordictprim": [104, 350], "reward_run": 104, "env_fix": 104, "drastic": [104, 362], "influenc": 104, "thumb": [104, 349], "suppos": [104, 318, 344, 365], "myenv": [104, 120, 128, 131], "pipe": 104, "update_kwarg": [104, 110], "pettingzoo": [105, 106], "pet": [105, 106], "zoo": [105, 106], "__": [105, 106], "aecenv": [105, 106], "use_mask": [105, 106], "dead": [105, 106], "done_on_ani": [105, 106], "compulsori": [105, 106], "adversary_0": [105, 106], "adversari": [105, 106], "marlgroupmaptyp": [105, 106, 111, 112, 113, 340], "vectoris": [105, 106, 195, 196, 199, 200], "sisl": 105, "multiwalker_v9": 105, "return_st": [105, 106], "categorical_act": [105, 106, 108, 109, 111, 112], "aec": [105, 106], "n_piston": [105, 106], "pistonball_v6": [105, 106], "piston": [105, 106], "piston_0": [105, 106], "piston_1": [105, 106], "piston_20": [105, 106], "tictactoe_v3": [105, 106], "player": [105, 106], "player_1": [105, 106], "player_2": [105, 106], "butterfli": 106, "parallel_env": [106, 347, 364, 365], "vikashplu": 107, "wiki": 107, "06828": 107, "smacv2": [108, 109], "starcraft": [108, 109], "challeng": [108, 109, 351, 360, 361], "10gen_terran": [108, 109], "10gen_zerg": [108, 109], "10gen_protoss": [108, 109], "3m": [108, 109], "8m": [108, 109, 361], "25m": [108, 109], "5m_vs_6m": [108, 109], "8m_vs_9m": [108, 109], "10m_vs_11m": [108, 109], "27m_vs_30m": [108, 109], "mmm": [108, 109], "mmm2": [108, 109], "2s3z": [108, 109], "3s5z": [108, 109], "3s5z_vs_3s6z": [108, 109], "3s_vs_3z": [108, 109], "3s_vs_4z": [108, 109], "3s_vs_5z": [108, 109], "1c3s5z": [108, 109], "2m_vs_1z": [108, 109], "corridor": [108, 109], "6h_vs_8z": [108, 109], "2s_vs_1sc": [108, 109], "so_many_banel": [108, 109], "bane_vs_ban": [108, 109], "2c_vs_64zg": [108, 109], "old": [108, 109, 270, 365], "smac": [108, 109], "map_nam": [108, 109], "176": [108, 109, 360], "battle_won": [108, 109], "dead_al": [108, 109], "dead_enemi": [108, 109], "episode_limit": [108, 109], "322": [108, 109, 360], "Or": [108, 109, 208], "procedur": [108, 109], "distribution_config": [108, 109], "n_unit": [108, 109], "n_enemi": [108, 109], "team_gen": [108, 109], "dist_typ": [108, 109], "weighted_team": [108, 109], "unit_typ": [108, 109], "marin": [108, 109], "maraud": [108, 109], "medivac": [108, 109], "exception_unit_typ": [108, 109], "start_posit": [108, 109], "surrounded_and_reflect": [108, 109], "map_x": [108, 109], "map_i": [108, 109], "capability_config": [108, 109], "88": [108, 109, 348, 360, 361], "131": [108, 109, 360], "starcraft2env": 109, "proroklab": [111, 112], "vectorizedmultiagentsimul": [111, 112], "2207": [111, 112], "03530": [111, 112], "basescenario": 111, "descript": [111, 119, 348, 349], "perfrom": [111, 112], "defaultt": 111, "continuous_act": [111, 112, 359], "repositiori": 111, "horizon": [111, 112, 181, 205, 349], "sparsiti": 111, "agent_nam": [111, 112, 113], "agent_names_to_indices_map": [111, 112], "unbatched_action_spec": [111, 112, 359], "unbatched_observation_spec": [111, 112], "unbatched_reward_spec": [111, 112], "het_spec": [111, 112], "het_specs_map": [111, 112], "flock": [111, 112], "agent_collision_rew": [111, 112], "agent_distance_rew": [111, 112], "ca": 113, "environment4": 113, "get_group_map": 113, "sumbodul": 114, "model_bas": [115, 181, 205], "masker": 117, "tensor_spec": [117, 180, 262, 263, 273, 275], "binarydiscretetensorspec": [117, 259, 262, 263, 284, 340], "maskedenv": 117, "ones_lik": 117, "scatter": 117, "_set_se": [117, 120, 128, 131, 147, 360], "fill_float": 119, "fill_int": 119, "fill_bool": 119, "someenvclass": 119, "autoresetenv": 119, "argumet": 119, "fooenv": 119, "sign": [119, 155, 286], "envtyp": 119, "reshape_fn": 120, "reset_func": 120, "environmt": 120, "request": [120, 146], "tensordict_batch_s": 120, "els": [120, 195, 196, 199, 200, 213, 342, 344, 347, 348, 349, 350, 359, 360, 361], "tensordict_reset": [120, 360], "transform_env_batch_s": [120, 127, 162, 171], "transform_input_spec": [120, 127, 128, 129, 130, 141, 143, 147, 148, 153, 157, 158, 159, 162, 164, 166, 171], "transform_output_spec": [120, 127, 128, 129, 133, 139, 147, 148, 154, 157, 162, 171], "transform_observation_spec": [120, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 137, 138, 139, 141, 143, 147, 148, 149, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 168, 171, 360], "transform_reward_spec": [120, 121, 126, 127, 128, 129, 133, 139, 147, 148, 151, 152, 153, 154, 155, 157, 162, 164, 171], "transformfull_done_spec": [120, 127, 128, 129, 133, 139, 147, 148, 154, 157, 162, 171], "biner": 121, "burn_in": 122, "burn": 122, "date": [122, 308], "retur": 122, "burnt": 122, "gru_modul": [122, 197], "input_s": [122, 195, 196, 197, 199, 200, 201, 202, 350], "hidden_s": [122, 195, 196, 197, 199, 200, 201, 202, 350], "set_recurrent_mod": [122, 197, 201, 350], "burn_in_transform": 122, "gru": [122, 196, 197], "num_lay": [122, 195, 197, 199, 201, 213, 214], "86": [122, 348, 350, 360], "3008": [122, 348], "0344": 122, "padding_valu": [123, 206, 207], "as_invers": 123, "movement": 123, "pdf": [123, 184, 185, 186, 187, 188, 192, 236, 241, 264, 274, 277, 286, 291, 299, 331], "1312": [123, 348], "5602": 123, "unsqueezetransform": [123, 360, 362], "consumpt": 123, "followin": 123, "pictur": 123, "pixels_trsf": [123, 362], "grayscal": [123, 348, 350, 362, 365], "data_exclud": [123, 362], "del_kei": [124, 165, 358, 360], "unsqueeze_if_oor": 124, "observation_posit": 124, "observation_veloc": 124, "key1": [124, 313, 321], "key2": [124, 313, 321], "center": [125, 305], "width": [125, 149], "out_keys_inv": [126, 128, 129, 131, 141, 142, 143, 147, 148, 155, 162, 360], "scalar": [126, 151, 186, 188, 210, 211, 233, 237, 238, 241, 252, 255, 256, 257, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 284, 286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 342, 348, 353, 360], "permit": [126, 135, 164, 255, 257, 270, 273, 275], "rewardsc": [127, 163, 347, 348, 350], "rewardclip": 127, "transformed_env": [127, 162, 163, 351], "transform_env_devic": [127, 129, 162, 171], "dtype_in": 128, "dtype_out": 128, "scan": [128, 131, 247, 248], "resp": [128, 131], "not_transform": [128, 131], "constructedw": [128, 131], "orig_devic": 129, "unspecifi": 129, "transform_done_spec": [129, 162, 171], "num_actions_effect": 130, "max_act": 130, "include_forward": 130, "num_act": [130, 263, 352], "action_out": 130, "_call": [130, 135, 360], "eol_kei": 132, "lives_kei": 132, "eol_attribut": 132, "unwrap": 132, "breakout": 132, "210": [132, 143, 360], "160": [132, 143, 348, 360], "eol_transform": 132, "eol": 132, "dqnloss": [132, 255, 256, 258, 261, 263, 264, 265, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 284, 329, 340, 343, 348, 350, 356], "register_kei": 132, "loss_or_advantag": 132, "lossmodul": [132, 322, 333, 334, 340], "valueestimatorbas": [132, 271, 340], "excluded_kei": 133, "finit": [134, 352, 362], "first_dim": 135, "last_dim": 135, "allow_positive_dim": [135, 164], "th": [135, 164, 195, 199, 360], "frameskip": 135, "repeatedli": [136, 349, 359], "init_kei": [138, 240], "tracker": 138, "coef": 139, "pi_curr": 139, "pi_0": 139, "overfit": 139, "probabilist": [139, 242, 340, 349, 364], "get_dist": [139, 246, 247], "mod": [139, 197, 201, 240, 249, 350, 356], "normalparamextractor": [139, 342, 349, 352, 359], "probabilisticactor": [139, 230, 231, 232, 234, 255, 256, 260, 262, 263, 269, 272, 273, 274, 275, 276, 278, 342, 347, 349, 352, 359], "tanhnorm": [139, 230, 231, 232, 242, 248, 255, 256, 269, 273, 274, 275, 276, 278, 340, 349, 359, 364], "return_log_prob": [139, 230, 231, 232, 242, 246, 248, 275, 342, 349, 352, 359, 364], "apply_": 139, "copy_": [139, 347], "formulat": 139, "diverg": [139, 197, 201, 242, 246, 266, 270], "noop": [140, 364], "trial": 140, "standard_norm": [141, 152, 347, 348, 350], "affin": [141, 152], "layer": [141, 169, 182, 183, 185, 186, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 208, 209, 210, 211, 213, 214, 221, 222, 228, 239, 249, 342, 348, 349, 350, 352, 361], "set_default_tensor_typ": 141, "doubletensor": 141, "isclos": 141, "next_ob": [141, 286, 287, 288, 289, 364], "init_stat": [141, 347, 348, 349, 350], "3752e": 141, "5087e": 141, "9294e": 141, "9636": 141, "5608": 141, "6408": 141, "num_it": [141, 348, 349], "reduce_dim": [141, 347, 348, 349, 350], "cat_dim": [141, 347, 348, 349, 350], "keep_dim": [141, 348, 350], "statist": [141, 169, 275, 338, 347, 348, 349, 365], "gaussian": [141, 159, 181, 205, 210, 211, 216, 233, 349], "empir": [141, 181, 205, 242, 246, 347, 349, 359], "3d": [141, 182], "third": [141, 236, 359], "reorder": 143, "in_keys_in": 143, "channel": [143, 161, 208, 213, 214, 348], "r3m": [145, 361], "resnet": [145, 165, 167], "visual": [145, 165, 167, 305, 349, 360], "embed": [145, 165, 166, 167, 185, 217, 229, 230, 231, 232, 245, 250, 361], "ego4d": [145, 165, 167], "univers": [145, 165, 167, 351], "suraj": [145, 165], "nair": [145, 165], "aravind": [145, 165], "rajeswaran": [145, 165], "vikash": [145, 165, 167], "kumar": [145, 165, 167], "chelsea": [145, 165], "finn": [145, 165], "abhinav": [145, 165], "gupta": [145, 165], "2203": [145, 165, 205, 361], "12601": [145, 165, 361], "_init": [145, 165, 347], "snippet": [145, 165, 347], "resnet50": [145, 167, 361], "model_nam": [145, 165, 167, 308], "resnet34": 145, "resnet18": 145, "r3m_vec": [145, 361], "feed": [145, 167, 271, 342, 347, 359, 362], "stack_imag": [145, 167], "tread": [145, 167], "separet": [145, 167], "hub": [145, 167, 351, 361], "resnet50_weight": [145, 167], "imagenet1k_v1": [145, 167], "download_path": [145, 167], "tensor_pixels_kei": [145, 167], "sub_seq_len": 146, "sample_dim": [146, 347], "primarili": [146, 352], "hesit": 146, "robust": 146, "mix": [146, 217, 226, 284, 347, 359], "improp": 146, "dummyenv": 147, "another_oth": 147, "other_reward": 147, "create_copi": 148, "stuff": [148, 354], "newnam": 148, "r2g": 150, "reward_to_go": 150, "bernoulli_": 150, "9010": 150, "9404": [150, 292], "9701": [150, 292], "9900": [150, 292], "0000": [150, 160, 237, 238, 249, 292, 349, 350, 360, 364], "crash": 150, "clamp_min": 151, "clamp_max": 151, "clip_min": 151, "clip_max": 151, "episode_": 153, "reward1": 153, "reward2": 153, "episode_reward": [153, 359], "keep_reward": 154, "keep_don": 154, "logical_or": 155, "squeeze_dim": 156, "step_count_kei": 157, "update_don": 157, "disjunct": 157, "recognis": 157, "target_return": 158, "subtract": 158, "primer": [159, 350], "default_valu": [159, 350], "unit": [159, 181, 193, 195, 196, 213, 214, 219, 220, 349], "transfomedenv": 159, "mykei": 159, "__unless": 159, "exists__": 159, "increas": [160, 241, 359], "10th": 160, "0216": 160, "1149": 160, "1990": 160, "2749": 160, "3281": 160, "9290": 160, "3702": 160, "8978": 160, "from_int": 161, "shape_toler": 161, "permuat": 161, "ri": 161, "principl": 162, "cattransform": 162, "notabl": 162, "rewardsum": [162, 171, 179, 359], "smoothli": 163, "add_1": 163, "cache_spec": 163, "set_missing_toler": 163, "keyerror": [163, 347], "unsqueeze_dim": [164, 360], "danger": 164, "vc1": 165, "vc1_vec": 165, "untrain": 165, "make_noload_model": 165, "vip": [166, 167, 361], "toward": 167, "implicit": [167, 262, 269, 362], "jason": 167, "ma": 167, "shagun": 167, "sodhani": 167, "dinesh": 167, "jayaraman": 167, "osbert": 167, "bastani": 167, "ami": 167, "zhang": 167, "vip_vec": 167, "final_nam": 168, "sb3": 168, "terminal_obs_read": 168, "truli": [168, 364], "till": 168, "shared_td": 169, "decai": [169, 233, 237, 277, 320, 347, 348, 350, 365], "9999": [169, 360], "0001": [169, 193, 212, 349, 360], "to_observation_norm": 169, "underflow": [169, 320], "build_td_for_shared_vecnorm": 169, "memmori": 169, "queue": [169, 362], "td_share": 169, "state_dim": [170, 184, 189, 216, 219, 220, 234], "action_dim": [170, 184, 185, 187, 189, 216, 234, 347, 358], "gsde": [170, 274, 338], "gsdemodul": 170, "rb_transform": 171, "resist": 171, "insensit": 171, "sensit": [171, 348], "_orig": 171, "95": [171, 205, 280, 348, 349, 350, 360, 361], "tdreset": [171, 358], "window": [171, 240, 362], "edit": [171, 354], "check_dtyp": 172, "discrep": [172, 255, 257, 258, 259, 270, 273, 275, 284], "temporarili": [172, 354, 362], "rng": [172, 360], "revert": [172, 352, 362], "probabilistictdmodul": [177, 178, 203, 242, 246, 285, 318], "next_tensordict": 179, "keep_oth": [179, 360], "exclude_reward": 179, "exclude_don": 179, "exclude_act": 179, "next_": 179, "funtion": 179, "_stepmdp": 179, "write_full_fals": 180, "_terminated_or_trunc": 180, "entropi": [181, 255, 256, 257, 262, 263, 269, 270, 272, 273, 274, 276, 278, 359], "botev": 181, "et": 181, "2013": 181, "cem": 181, "plan": [181, 204, 205], "varianc": [181, 198, 212, 224, 225, 343, 347, 349, 359], "k": [181, 195, 196, 199, 200], "maximis": [181, 185, 187, 205, 342, 348, 349, 359], "modelbasedenv": [181, 205], "planning_horizon": [181, 205], "optim_step": [181, 205, 348, 356], "mpc": [181, 204, 205], "num_candid": [181, 205], "candid": [181, 205], "top_k": [181, 205], "modelbasedenvbas": [181, 204, 205, 340], "safemodul": [181, 204, 230, 232, 246, 255, 256, 262, 263, 269, 273, 274, 275, 276, 278, 327, 328, 334, 340, 364], "num_cel": [182, 183, 185, 186, 187, 188, 193, 194, 197, 201, 203, 208, 209, 230, 348, 349, 350, 352, 353, 356, 359, 364], "elu": [182, 183, 185, 186, 187, 188, 193, 194, 208, 348, 364], "activation_kwarg": [182, 183, 203], "norm_class": [182, 183, 185, 186, 203], "norm_kwarg": [182, 183, 203], "bias_last_lay": [182, 183, 185, 186, 187, 188, 194, 203], "aggregator_class": [182, 183, 185, 186, 348, 350, 364], "squashdim": [182, 183, 185, 194, 208, 364], "aggregator_kwarg": [182, 183, 185, 186, 348, 350], "squeeze_output": [182, 183, 185, 186, 348, 350], "cell": [182, 183, 195, 196, 197, 199, 200, 201, 203, 208, 209, 349, 351, 352, 353, 354, 355, 356], "kernel": [182, 183, 194, 202, 208], "cnet": [182, 183], "conv3d": 182, "lazyconv2d": [183, 185, 186, 194, 208, 364], "transformer_config": [184, 216, 234], "decisiontransform": [184, 216], "dtconfig": [184, 189, 216], "2202": [184, 189, 272], "05607": [184, 189, 272], "return_to_go": [184, 189, 216, 234], "conv_net_kwarg": [185, 186], "mlp_net_kwarg": [185, 186, 187], "use_avg_pool": [185, 186], "WITH": [185, 186, 187, 188, 241, 277], "1509": [185, 186, 187, 188, 205, 241, 259, 268, 277, 360], "02971": [185, 186, 187, 188, 241, 277], "reus": [185, 312], "convnet": [185, 186, 194, 208, 350, 352, 364], "ndims_in": 185, "avgpool": [185, 186], "lazylinear": [185, 186, 187, 188, 194, 203, 342, 349, 352, 360, 361, 364], "2304": [185, 348], "adaptiveavgpool2d": [186, 348, 350], "output_s": [186, 348, 350], "squeeze2dlay": 186, "400": [187, 188, 355, 359, 360, 362], "mlp_net_kwargs_net1": 188, "mlp_net_kwargs_net2": 188, "mlp1": 188, "mlp2": 188, "decion": 189, "desdescrib": 189, "n_embd": 189, "n_layer": [189, 195, 199], "n_head": 189, "n_inner": 189, "n_posit": 189, "resid_pdrop": 189, "attn_pdrop": 189, "gpt2config": 189, "atol": [190, 223], "rtol": [190, 223], "batch_shap": [190, 223], "event_shap": [190, 223], "absolut": [190, 223, 347], "densiti": [190, 206, 207, 215, 225], "mass": [190, 206, 207, 215, 225, 360], "rsampl": [190, 207, 215, 246], "sample_shap": [190, 206, 207, 215], "softmax": [191, 207, 215, 235, 236], "var_num": [192, 218, 235, 236, 244], "action_value_kei": [192, 218, 235, 236, 243, 244, 271, 284], "action_mask_kei": [192, 218, 235, 236, 237, 238, 243, 244], "perspect": [192, 236, 264, 349], "1707": [192, 236, 264, 273], "06887": [192, 236, 264], "mult": [192, 209, 218, 235, 236, 243, 244], "tensordict_modul": [192, 195, 196, 199, 200, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 258, 262, 263, 269, 273, 274, 275, 276, 278, 342], "nbin": [192, 235, 342], "customdistributionalqv": 192, "log_softmax": [192, 235], "from_modul": [192, 245, 248, 364], "one_hot": [192, 207, 218], "qvalue_actor": [192, 218, 235, 243, 342], "to_modul": [192, 245, 248, 347, 364], "std_bia": 193, "std_min_val": 193, "belief": [193, 213, 219, 220], "1912": [193, 265, 266, 267], "01603": [193, 265, 266, 267], "softplu": [193, 212, 252, 253, 254], "out_features_valu": 194, "cnn_kwarg": [194, 348], "mlp_kwarg": [194, 202, 348], "duel": 194, "cnn": [194, 208, 348, 352, 364], "06581": 194, "batch_first": [195, 197, 199, 201, 350], "bidirect": [195, 199, 350], "cudnn": [195, 196, 199, 200, 350], "vmap": [195, 196, 199, 200, 202, 227, 245, 248, 364], "rnn": [195, 196, 199, 200, 350, 352], "device_count": [195, 196, 199, 200, 365], "n_in": [195, 196, 199, 200], "n_out": [195, 196, 199, 200], "h0": [195, 196, 199, 200], "h1": [195, 196, 199, 200], "call_gru": [195, 196], "h_out": [195, 196, 199, 200], "batched_cal": [195, 196, 199, 200], "gate": [195, 196, 199], "r_t": 195, "sigma": [195, 196, 198, 199, 200, 224, 225, 233, 241, 349], "w_": [195, 196, 199, 200], "ir": [195, 196], "x_t": [195, 199], "b_": [195, 196, 199, 200], "hr": [195, 196, 199], "h_": [195, 196, 199], "z_t": 195, "iz": [195, 196], "hz": [195, 196], "n_t": 195, "odot": [195, 196, 199, 200], "hn": [195, 196, 199], "h_t": [195, 199], "sigmoid": [195, 196, 199, 200], "hadamard": [195, 196, 199, 200], "multilay": [195, 199], "_t": [195, 199, 359, 360], "ge": [195, 199], "multipli": [195, 199, 256, 257, 263, 270, 272, 273, 274, 276, 320, 347], "bernoulli": [195, 199], "b_ih": [195, 196, 199, 200, 201], "b_hh": [195, 196, 199, 200, 201], "seq": [195, 197, 199, 201, 240, 350, 356, 358], "h_0": [195, 199, 200], "unbatch": [195, 199], "pack_padded_sequ": [195, 199], "pack_sequ": [195, 199], "num": [195, 199, 356], "_layer": [195, 199], "_size": [195, 196, 199, 200], "h_n": [195, 199], "packedsequ": [195, 199], "weight_ih_l": [195, 199], "learnabl": [195, 196, 199, 200], "w_ir": 195, "w_iz": 195, "w_in": 195, "num_direct": [195, 199], "weight_hh_l": [195, 199], "w_hr": 195, "w_hz": 195, "w_hn": 195, "bias_ih_l": [195, 199], "b_ir": 195, "b_iz": 195, "b_in": 195, "bias_hh_l": [195, 199], "b_hr": 195, "b_hz": 195, "b_hn": 195, "mathcal": [195, 196, 199, 200], "sqrt": [195, 196, 199, 200, 241], "frac": [195, 196, 199, 200, 349], "seq_len": [195, 199], "subtli": 195, "matrix": [195, 199, 210, 211], "contrast": [195, 268, 362], "hx": [195, 196, 199, 200], "lstmcell": [196, 201], "gru_cel": 196, "z": 196, "weight_ih": [196, 200], "weight_hh": [196, 200], "bias_ih": [196, 200], "bias_hh": [196, 200], "rocm": [196, 200], "embedd": [197, 201, 202], "grucel": [197, 245], "python_bas": [197, 201], "recurrent_st": [197, 350], "custom_kei": [197, 201], "recurrent_mod": [197, 201], "rs": [197, 347], "gru_module_train": 197, "policy_train": [197, 201], "traj_td": [197, 201], "policy_infer": [197, 201], "td_inf": [197, 201], "assert_clos": [197, 201], "upscal": [198, 224, 225], "tanh_loc": [198, 224, 225], "event_dim": [198, 223, 224], "ultim": [198, 224, 225], "poor": [198, 224, 225], "explos": [198, 224, 225], "switch": [198, 225], "formula": [198, 224, 225, 255, 257, 270, 273, 343, 349], "proj_siz": 199, "c0": [199, 200], "c1": [199, 200], "call_lstm": [199, 200], "c_out": [199, 200], "i_t": 199, "ii": [199, 200], "hi": [199, 200], "f_t": 199, "hf": [199, 200], "g_t": 199, "ig": [199, 200], "hg": [199, 200], "o_t": 199, "ho": [199, 200], "c_t": 199, "c_": 199, "forget": 199, "1402": 199, "1128": 199, "c_0": [199, 200], "proj": 199, "c_n": 199, "w_ii": 199, "w_if": 199, "w_ig": 199, "w_io": 199, "w_hi": 199, "w_hf": 199, "w_hg": 199, "w_ho": 199, "b_ii": 199, "b_if": 199, "b_ig": 199, "b_io": 199, "b_hi": 199, "b_hf": 199, "b_hg": 199, "b_ho": 199, "weight_hr_l": 199, "_revers": 199, "analog": [199, 352], "cn": 199, "lstm_cell": 200, "h_1": 200, "c_1": 200, "time_step": [200, 202, 240], "cx": 200, "trust": 201, "correspont": 201, "recurrent_state_h": [201, 350], "recurrent_state_c": [201, 350], "triplet": [201, 243, 244], "lstm_modul": 201, "rs_h": 201, "rs_c": 201, "hidden0": 201, "hidden1": 201, "lstm_kwarg": 202, "lstm_backend": 202, "next_observ": [202, 255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 358], "2d": [202, 352, 359], "indeic": 202, "hidden0_in": 202, "hidden1_in": 202, "hidden0_out": 202, "hidden1_out": 202, "single_bias_last_lay": 203, "layer_class": 203, "layer_kwarg": 203, "perceptron": [203, 352], "aslo": 203, "42": [203, 255, 256, 258, 262, 269, 276, 346, 348, 349, 360, 362, 363, 364], "noisylinear": [203, 210, 340, 348], "noisylazylinear": [203, 340], "mpcplanner": 204, "tensordict_out": [204, 365], "mppi": 205, "covari": 205, "william": [205, 275], "aldrich": 205, "theodor": 205, "01149": 205, "hansen": 205, "wang": 205, "su": 205, "04955": 205, "valueoper": [205, 230, 231, 232, 255, 256, 257, 258, 263, 269, 270, 273, 274, 275, 276, 278, 334, 342, 347, 349, 353], "tdlambdaestim": [205, 340, 347], "value_net": [205, 259, 261, 275, 286, 287, 288, 289, 349, 352, 353, 356], "adv": 205, "lmbda": [205, 280, 286, 289, 291, 297, 298, 299, 302, 303, 343, 347, 349, 359], "value_network": [205, 258, 259, 261, 262, 264, 269, 276, 286, 287, 288, 289, 343, 347, 349, 353, 356], "temperatur": [205, 256, 262, 269], "neg_inf": [206, 207], "inf": [206, 207], "api_doc": [206, 207], "tf_agent": [206, 207], "event": [206, 207, 215, 295, 296, 297, 298, 300, 301, 302, 303, 362], "unnorm": [206, 207, 215], "sparse_mask": [206, 207], "dens": [206, 207], "0831": [206, 207], "1203": [206, 207], "0928": [206, 207], "1972": [206, 207], "grad_method": [207, 215], "reparamgradientstrategi": [207, 215], "passthrough": [207, 215], "proxi": [207, 215, 343], "relaxedonehot": [207, 215], "zeros_lik": [207, 360], "sample_non_valid": 207, "centralis": [208, 209, 359], "share_param": [208, 209, 359], "homogen": [208, 209, 359], "agent_network": [208, 209], "modulelist": [208, 209, 331, 364], "2592": [208, 348], "decentralis": [208, 359], "n_agent_input": [209, 359], "n_agent_output": [209, 359], "lazili": [209, 360], "toech": 209, "centalis": 209, "shown": [209, 342, 358, 359, 362], "std_init": [210, 211], "initialize_paramet": 210, "isol": [210, 271], "1706": [211, 226], "10295v3": 211, "induc": 211, "aid": 211, "scale_map": 212, "biased_softplus_1": 212, "scale_lb": [212, 219, 220], "exp": [212, 254], "module_norm": 212, "decod": 213, "1803": [213, 214, 217], "10122": [213, 214], "rnn_hidden": 213, "latent": 214, "excacli": 215, "inres": 216, "mu": [216, 241, 349], "state_shap": [217, 284], "mixing_embed_dim": [217, 284], "qmix": [217, 359], "mixer": [217, 226, 284], "monoton": 217, "hyper": 217, "11485": 217, "qmixerloss": [217, 226], "qmix_vdn": [217, 226], "vdn": [217, 226], "greedi": [218, 236, 237, 238, 244, 348, 350, 352], "hidden_dim": [219, 220], "posterior": [219, 266], "rssm": [219, 220, 266], "1811": [219, 220], "04551": [219, 220], "obs_embed": 219, "rnn_hidden_dim": 220, "dream": 220, "tanhtransform": 224, "decomposit": 226, "05296": 226, "hide": [227, 349, 359], "satisfi": [227, 342], "vmap_dim": 227, "lam": 227, "sample_in": 227, "sample_in_td": 227, "vm": 227, "translat": [229, 242], "character": [229, 235, 242, 243, 245, 362], "overflow": [229, 235, 236, 242, 243, 244, 245, 246], "td_modul": [229, 230, 231, 232, 242, 245, 246, 248, 250, 352, 364], "3635": 229, "0340": 229, "1476": 229, "3911": [229, 360], "1664": [229, 348, 360], "5455": 229, "2247": [229, 346, 361, 363], "4583": 229, "2916": 229, "2160": 229, "5337": 229, "5193": 229, "grad_fn": [229, 237, 238, 364], "addmmbackward0": 229, "actorvalueoper": [230, 342, 352], "get_policy_oper": [230, 231, 232, 257, 270, 273, 342], "standalon": [230, 231, 232, 352], "tdmodul": [230, 231, 232, 334], "get_critic_oper": 230, "common_oper": [230, 232], "policy_oper": [230, 231, 232], "value_oper": [230, 231, 232], "normalparamwrapp": [230, 231, 232, 242, 248, 255, 256, 263, 269, 273, 274, 275, 276, 278, 340, 364], "module_hidden": [230, 232], "td_module_hidden": [230, 232], "module_act": [230, 232], "td_module_act": [230, 231, 232], "module_valu": [230, 231, 232], "td_module_valu": [230, 231, 232], "state_action_valu": [230, 250, 256, 262, 269, 276, 285, 331, 334, 342, 347, 364], "td_clone": [230, 231, 232], "tensordictmodulewrapp": [230, 327, 328, 334], "get_policy_head": [230, 231, 232], "safesequenti": [230, 231, 232, 284], "head": [230, 232, 257, 270, 273], "get_value_head": [230, 231, 232], "get_value_oper": [230, 231, 232, 257, 270, 273], "action_modul": 231, "state_valu": [231, 232, 250, 257, 262, 269, 270, 273, 274, 276, 286, 287, 288, 289, 291, 293, 295, 297, 299, 300, 302, 342, 347, 349, 359], "qualiti": [232, 342], "actorcriticoper": [232, 257, 270, 273, 342, 352], "embeddig": 232, "refet": 232, "actorcriticwrapp": [232, 342, 347], "po": [233, 238], "sigma_init": 233, "epsilon": [233, 237, 238, 241, 277, 320, 348, 349, 350, 352], "sigma_end": 233, "annealing_num_step": [233, 237, 238, 241, 347, 348, 350, 352, 356], "captur": [233, 237, 238, 241], "omiss": [233, 237, 238, 241], "ommit": [233, 237, 238, 241], "inferec": 234, "set_tensor_kei": 234, "dt_inference_wrapp": 234, "baz": 234, "inference_context": 234, "obs_dim": 234, "tanhdelta": [234, 340, 347], "dtactor": 234, "actor_modul": [234, 364], "dist_class": 234, "dist_kwarg": 234, "distribution_kwarg": [234, 242, 246, 349, 359], "inference_actor": 234, "sequence_length": 234, "mask_context": 234, "out_act": 234, "qvaluemodul": [235, 243, 284, 350, 352, 356], "distributionaldqnnet": 235, "make_log_softmax": 235, "my_action_valu": [236, 244], "chanc": 236, "thid": 236, "eps_init": [237, 238, 241, 348, 350, 352, 356], "eps_end": [237, 238, 241, 348], "explorative_polici": [237, 238, 241], "9055": [237, 238, 360], "9277": [237, 238], "6295": [237, 238], "2532": [237, 238], "addbackward0": [237, 238], "lmheadmodel": 239, "actor_head": [239, 257, 270, 273], "base_model": 239, "lm_head": 239, "macro": 240, "lookahead": 240, "n_action": [240, 256, 259, 261, 272, 276], "reshape_cat": 240, "actor_bas": 240, "obs_cat": 240, "obs_cat_reshap": 240, "action_orig": 240, "counter": [240, 315, 344], "ornstein": [241, 347], "uhlenbeck": [241, 347], "ou": [241, 347], "correl": 241, "noise_t": 241, "noise_": 241, "theta": [241, 349, 360], "sigma_t": 241, "sigma_": 241, "anneal": [241, 348, 352], "ou_prev_nois": 241, "ou_step": 241, "x0": 241, "sigma_min": 241, "n_steps_ann": 241, "is_init_kei": 241, "_ou_prev_nois": 241, "_ou_step": 241, "default_interaction_typ": [242, 246, 352], "interaction_typ": [242, 246], "datacollectorbas": [242, 324, 327, 328, 334, 340], "set_interaction_typ": [242, 246], "cache_dist": [242, 246], "n_empirical_estim": [242, 246], "compound": [242, 352], "compositedistribut": [242, 352], "categ": 242, "distribution_map": 242, "chose": 244, "functionalmodul": 245, "functionalmodulewithbuff": 245, "td_fmodul": 245, "td_function": 245, "td_state": 245, "params_repeat": 245, "td_vmap": [245, 248], "random_sampl": [245, 246], "suppli": 246, "fist": 246, "log_prob_kei": [246, 359], "probabilistictensordictsequenti": [247, 255, 257, 270, 273, 275, 327, 328, 364], "partial_toler": [247, 248, 358], "who": [247, 248], "AND": [247, 248], "tensordictsequenci": 248, "tensordictsequ": 248, "safeprobabilisticmodul": [248, 342], "spec1": 248, "net1": 248, "module1": 248, "td_module1": 248, "spec2": 248, "module2": 248, "td_module2": 248, "clamp": [249, 266, 322, 360], "boundari": [249, 349, 359], "resolut": 249, "9944": 249, "9991": 249, "3020": 249, "2299": [249, 360], "5418": 249, "2989": 249, "6849": 249, "3169": 249, "2690": 249, "9649": [249, 360], "5686": 249, "8602": 249, "0315": 249, "8455": [249, 360], "6027": 249, "4746": 249, "7843": 249, "7782": 249, "2111": 249, "5115": 249, "4687": 249, "5760": 249, "custommodul": 250, "imaginari": 251, "imagin": 251, "transition_model": 251, "get_reward_oper": 251, "get_transition_model_oper": 251, "min_val": [252, 254], "_bia": 252, "invert": [253, 349], "surject": 254, "expln": 254, "biased_softplu": [254, 340], "beggin": 254, "biased_softplus_": 254, "syntax": [254, 347], "met": [254, 360], "1602": 255, "01783v2": 255, "actor_network": [255, 256, 257, 258, 260, 262, 263, 269, 270, 272, 273, 274, 275, 276, 278, 347, 349, 353, 359], "critic_network": [255, 257, 270, 273, 275, 349, 359], "entropy_bonu": [255, 257, 270, 273, 349], "favour": [255, 257, 270, 273], "samples_mc_entropi": [255, 257, 270, 272, 273], "mont": [255, 257, 270, 273, 347], "carlo": [255, 257, 270, 273, 347], "entropy_coef": [255, 257, 270, 273, 349, 359], "critic_coef": [255, 257, 270, 273, 349], "loss_critic_typ": [255, 257, 270, 273, 275, 349], "l1": [255, 257, 258, 259, 263, 270, 273, 274, 275, 278, 281, 284, 342, 347], "l2": [255, 257, 258, 259, 260, 261, 263, 266, 267, 270, 273, 274, 275, 278, 281, 284, 347], "smooth_l1": [255, 256, 257, 258, 259, 262, 263, 269, 270, 273, 274, 275, 276, 278, 281, 284, 349], "separate_loss": [255, 257, 258, 262, 263, 269, 270, 273, 274, 275, 276, 278], "propag": [255, 257, 258, 262, 263, 269, 270, 273, 274, 275, 276, 278, 286, 287, 288, 289, 349, 359], "advantage_kei": [255, 257, 270, 273, 275, 286, 287, 288, 289], "value_target_kei": [255, 257, 270, 273, 275, 286, 287, 288, 289], "value_target": [255, 257, 270, 273, 275, 286, 287, 288, 289, 349, 359], "ddp": [255, 257, 270, 273, 275], "fsdp": [255, 257, 270, 273, 275], "divid": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 269, 270, 272, 273, 274, 275, 276, 278, 325, 342, 347, 359, 360], "clip_valu": [255, 257, 270, 273, 275], "loss_crit": [255, 273, 349, 359], "loss_entropi": [255, 273, 349, 359], "loss_object": [255, 273, 349, 359], "recur": [255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 286, 287, 288, 289, 290, 352], "next_reward": [255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 286, 287, 288, 289], "next_don": [255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 286, 287, 288, 289], "next_termin": [255, 256, 258, 259, 261, 262, 263, 269, 273, 274, 275, 276, 278, 286, 287, 288, 289], "loss_obj": 255, "sacloss": [255, 268, 277, 340], "select_out_kei": [255, 256, 258, 262, 263, 269, 273, 274, 276, 278], "make_value_estim": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 279, 284, 343, 347, 348, 359, 364], "value_typ": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 280, 284, 347], "hyperparam": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 347], "enum": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 280, 284, 347], "default_value_estim": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 347, 364], "default_value_kwarg": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 340, 347], "dqn_loss": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 279, 284], "td1": [255, 256, 258, 259, 261, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 284, 347], "conserv": [256, 261], "qvalue_network": [256, 262, 263, 269, 274, 276, 278], "loss_funct": [256, 258, 259, 260, 261, 262, 263, 269, 274, 276, 278, 281, 284, 347], "alpha_init": [256, 263, 272, 274, 276], "min_alpha": [256, 263, 272, 274, 276], "max_alpha": [256, 263, 272, 274, 276], "fixed_alpha": [256, 263, 272, 274, 276], "target_entropi": [256, 263, 272, 274, 276], "prod": [256, 272, 276], "delay_actor": [256, 258, 276, 278], "delay_qvalu": [256, 263, 274, 276, 278], "min_q_weight": 256, "max_q_backup": 256, "backup": 256, "deterministic_backup": 256, "num_random": 256, "with_lagrang": 256, "lagrang": 256, "lagrange_thresh": 256, "valueclass": [256, 258, 263, 274, 276, 278], "qvalu": [256, 262, 263, 269, 274, 276, 278, 331], "loss_actor": [256, 258, 262, 263, 269, 274, 275, 276, 278, 317, 347, 353, 364], "loss_actor_bc": 256, "loss_alpha": [256, 263, 274, 276], "loss_cql": [256, 261], "loss_qvalu": [256, 261, 262, 263, 269, 274, 276, 278], "loss_alpha_prim": 256, "clip_epsilon": [257, 349, 359], "normalize_advantag": [257, 270, 273, 359], "value_kei": [257, 270, 273, 286, 287, 288, 289, 347], "somemodul": [257, 270, 273], "someactor": [257, 270, 273], "value_head": [257, 270, 273], "somevalu": [257, 270, 273], "loss_modul": [257, 268, 270, 271, 273, 277, 322, 333, 334, 343, 344, 347, 348, 349, 359, 362], "ppoloss": [257, 270, 340], "delay_valu": [258, 259, 261, 264, 275, 276, 284, 348, 350, 356], "loss_valu": [258, 262, 269, 275, 276, 347, 349, 353, 359, 364], "pred_valu": [258, 261, 278, 347, 353, 364], "pred_value_max": [258, 347, 353, 364], "target_valu": [258, 261, 274, 278, 285, 343, 347, 353, 364], "target_value_max": [258, 347, 353, 364], "qvalueactor": [259, 261, 284, 342, 348, 350], "double_dqn": 259, "06461": [259, 268], "mult_one_hot": [259, 262, 263, 284], "loss_val": [259, 261, 343, 347, 349, 350, 353, 354, 356, 359, 362], "01345": 260, "distanc": [261, 270, 281, 285, 286, 359], "dcql_loss": 261, "2110": [262, 269], "06169": [262, 269], "num_qvalue_net": [262, 263, 269, 274, 276, 278], "expectil": [262, 269], "tau": [262, 269, 277, 347, 348], "antmaz": [262, 269], "sticht": [262, 269], "onehotcategor": [262, 263, 340], "target_entropy_weight": 263, "disctount": 264, "distributionalqvalueactor": [264, 342], "input_tensordict": [264, 347], "actor_model": 265, "value_model": [265, 267], "model_based_env": 265, "dreamerenv": [265, 340], "imagination_horizon": 265, "unrol": [265, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303], "discount_loss": [265, 267], "lambda_kl": 266, "lambda_reco": 266, "lambda_reward": 266, "reco_loss": 266, "reward_loss": 266, "free_nat": 266, "nat": 266, "delayed_clamp": 266, "global_averag": 266, "value_loss": 267, "fake_data": 267, "ddpgloss": [268, 277, 334, 340, 347, 353, 364], "td3loss": [268, 277, 340], "value_network_update_interv": 268, "qvalueclass": 269, "loss_value_diff": 269, "diff": 269, "old_polici": 270, "new_polici": 270, "apart": [270, 359], "dtarg": 270, "samples_mc_kl": 270, "analyt": 270, "decrement": 270, "loss_": [271, 317, 343, 347, 353], "equip": [271, 350, 352], "gh": 271, "_acceptedkei": 271, "dataclass": [271, 331], "_forward_value_estimator_kei": 271, "alter": [271, 342], "value_estim": [271, 286, 287, 288, 289, 290, 343, 347, 359], "myloss": 271, "action2": 271, "convert_to_funct": [271, 347], "expand_dim": 271, "create_target_param": [271, 347], "compare_against": [271, 347], "_param": 271, "expans": 271, "resampl": 271, "_target_param": 271, "blend": 271, "proxim": [273, 349, 359], "optimis": [273, 318, 349, 359], "flavour": [273, 359, 364], "clipppoloss": [273, 340, 349, 359], "klpenppoloss": [273, 340], "regularis": 273, "06347": 273, "gae": [273, 340, 343, 347, 349, 359], "ppo_loss": 273, "tdlambda": [273, 280, 343, 347], "base_lay": 273, "randn_lik": 273, "samplelogprob": 273, "openreview": [274, 331], "ay8zfzm0tdd": [274, 331], "sub_sample_len": 274, "subsampl": [274, 313, 344], "action_log_prob_actor": 274, "state_action_value_actor": [274, 278], "connectionist": 275, "1992": 275, "doi": 275, "1007": 275, "bf00992696": 275, "actor_net": [275, 347, 349], "1801": 276, "01290": 276, "applic": [276, 284, 351, 352, 360], "1812": 276, "05905": 276, "redqloss": [277, 340], "math": 277, "theta_t": [277, 360], "theta_": [277, 360], "polyak": 277, "policy_nois": 278, "noise_clip": 278, "next_state_valu": [278, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 340], "td0": [279, 347], "strict_shap": 281, "view_a": 281, "qmixer": [284, 340], "local_valu": 284, "visibl": [284, 359], "dafault": 284, "acceptedkei": 284, "global_valu": 284, "penultim": 284, "local_value_network": 284, "mixer_network": 284, "value_modul": [284, 349, 364], "qnet": [284, 347], "next_val_kei": 285, "pred_next_v": 285, "usus": 285, "mse": 285, "q_valu": 285, "n_steps_to_next": 285, "value_next_st": 285, "1506": [286, 291, 299], "02438": [286, 291, 299], "exponenti": [286, 287, 288, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 320], "average_ga": [286, 349], "skip_exist": [286, 287, 288, 289], "time_dim": [286, 288, 289, 291, 292, 295, 296, 297, 298, 299, 300, 301, 302, 303], "advang": 286, "gradient_mod": 286, "value_error": [286, 287, 288, 289, 290], "target_param": [286, 287, 288, 289, 290, 347, 359], "98": [286, 287, 288, 289, 348, 360, 361], "94": [286, 289, 348, 360], "unpack": [286, 287, 288, 289], "tensor_kei": [286, 287, 288, 289, 290], "next_valu": [286, 287, 288, 289, 290], "aka": [287, 348], "average_reward": [287, 288, 289], "tdestim": [287, 288, 290], "infti": 288, "valuefunctionbas": 290, "old_stat": [291, 293, 295, 297, 299, 300, 302], "new_stat": [291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "rolling_gamma": [295, 296, 297, 298, 300, 301, 302, 303], "g1": [295, 296, 297, 298, 300, 301, 302, 303], "g2": [295, 296, 297, 298, 300, 301, 302, 303], "g3": [295, 296, 297, 298, 300, 301, 302, 303], "g4": [295, 296, 297, 298, 300, 301, 302, 303], "v3": [295, 296, 297, 298, 300, 301, 302, 303], "out_file_bas": 304, "skip_reset": 304, "interv": [304, 305, 314, 324, 348, 360], "center_crop": 305, "make_grid": 305, "mp4": [305, 307, 356], "csvlogger": [305, 340, 348, 355, 356], "csv": [305, 307, 309, 348, 355, 356], "wandb": [305, 309, 312, 355, 364], "tensorboard": [305, 309, 311, 355, 364], "exp_nam": [305, 306, 307, 310, 311, 312, 334, 348, 355, 356], "log_dir": [305, 306, 307, 309, 311, 312, 348, 356], "cheetah_video": 305, "video_format": [305, 307, 356], "run_video": 305, "openxexperiencereplai": 305, "run_video_0": 305, "templat": 306, "pt": [307, 344, 361], "video_fp": 307, "minim": [307, 362], "dependeci": 307, "cur_dir": 307, "csv_log": 307, "video_": 307, "experiment_nam": [308, 309], "uuid": [308, 348, 365], "logger_typ": 309, "logger_nam": 309, "mlflow": [309, 310], "wandb_kwarg": 309, "mlflow_kwarg": 309, "tracking_uri": 310, "uri": 310, "datastor": 310, "tb_log": 311, "tensoarboard": 311, "td_log": 311, "save_dir": 312, "resum": 312, "uncategor": 312, "sub_traj_len": 313, "min_sub_traj_len": 313, "register_op": [313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 344, 348], "process_optim_batch": [313, 319, 320, 344], "td_out": [313, 321], "_process_optim_batch_hook": [313, 344], "batch_subsampl": 313, "clear_cuda": 314, "pre_optim_step": [314, 344], "log_pbar": [315, 316, 318, 320, 344, 348], "progress": [315, 316, 318, 322, 344, 348, 350, 365], "count_fram": 315, "pre_steps_log": [315, 316, 344], "count_frames_log": 315, "lognam": 316, "r_train": [316, 348], "log_reward": [316, 348], "loss_compon": 317, "appl": 317, "optimizer_hook": 317, "record_interv": [318, 347, 348], "record_fram": [318, 325, 347, 348], "policy_explor": [318, 334, 347, 348, 352, 356], "log_kei": [318, 348], "suffix": 318, "underestim": 318, "set_exploration_typ": [318, 340, 349, 350, 352, 364], "r_evalu": [318, 347], "flatten_tensordict": [319, 348], "max_dim": 319, "rb_trainer": 319, "batch_process": [319, 320, 321, 344], "post_loss": [319, 344], "999": [320, 348], "jitter": 320, "finfo": 320, "default_dtyp": 320, "get_default_dtyp": 320, "reward_norm": 320, "update_reward_stat": 320, "normalize_reward": 320, "make_train": [321, 340], "_process_batch_hook": [321, 344], "select_kei": [321, 344], "versatil": [322, 351], "optim_steps_per_batch": [322, 344, 348], "clip_grad_norm": 322, "clip_norm": 322, "progress_bar": 322, "save_trainer_interv": 322, "log_interv": [322, 348], "save_trainer_fil": [322, 344], "update_weights_interv": [324, 348], "update_weight": 324, "post_step": [324, 344, 348], "cfg": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338], "dictconfig": [325, 326, 327, 328, 331, 332, 333, 334, 335, 338], "unknowingli": 325, "annealing_fram": [325, 347], "init_env_step": [325, 326, 347], "proof_environ": [326, 331, 347], "sta": 326, "ot": 326, "actor_model_explor": [327, 328, 347], "make_env_kwarg": [327, 328], "targetnetupdat": [329, 330, 333, 334], "redqloss_deprec": 330, "actor_net_kwarg": 331, "qvalue_net_kwarg": 331, "observation_kei": 331, "parser_env_arg": 331, "parser_model_args_continu": 331, "hydra": 331, "config_stor": 331, "configstor": 331, "config_field": 331, "config_cl": 331, "redqmodelconfig": 331, "envconfig": 331, "make_dataclass": 331, "cls_name": 331, "cs": 331, "config_path": 331, "config_nam": 331, "replayargsconfig": 332, "target_net_updat": [334, 347, 348], "constitu": 334, "tensorboardlogg": [334, 340, 355], "egreedywrapp": 334, "env_proof": 334, "obs_spec": 334, "net_valu": 334, "dir": [334, 344, 348], "gettempdir": 334, "argpars": [335, 338], "namespac": [335, 338], "parser": [335, 338], "transformed_env_constructor": [335, 340], "num_env_per_collector": [336, 337], "video_tag": 338, "norm_obs_onli": 338, "use_env_cr": 338, "custom_env_mak": 338, "custom_env": 338, "return_transformed_env": 338, "action_dim_gsd": 338, "state_dim_gsd": 338, "obs_norm_state_dict": 338, "wheter": 338, "maker": 338, "asyncdatacollector": 340, "distributedsyncdatacollector": 340, "submitit_delayed_launch": 340, "raycollector": 340, "rational": 340, "behind": 340, "footnot": 340, "unboundeddiscretetensorspec": 340, "lazystackedtensorspec": 340, "lazystackedcompositespec": 340, "prompttensordicttoken": 340, "rolloutfrommodel": 340, "tokenizeddatasetload": 340, "create_infinite_iter": 340, "consolidate_spec": 340, "check_no_exclusive_kei": 340, "contains_lazy_spec": 340, "check_marl_group": 340, "tensordictrecord": 340, "videorecord": [340, 349, 355, 356], "get_available_librari": 340, "set_exploration_mod": 340, "make_composite_from_td": [340, 360], "terminated_or_trunc": 340, "braxwrapp": 340, "dmcontrolwrapp": 340, "jumanjienv": 340, "jumanjiwrapp": 340, "mogymenv": 340, "mogymwrapp": 340, "multithreadedenvwrapp": 340, "openmlenv": 340, "pettingzooenv": 340, "robohiveenv": 340, "smacv2env": 340, "smacv2wrapp": 340, "vmaswrapp": 340, "qvaluehook": 340, "distributionalqvaluehook": 340, "reset_nois": 340, "cemplann": 340, "mpcplannerbas": 340, "mppiplann": 340, "independentnorm": 340, "truncatednorm": 340, "maskedonehotcategor": 340, "inv_softplu": 340, "vmapmodul": 340, "distributionaldqnloss": [340, 348], "discretesacloss": 340, "iqlloss": 340, "discreteiqlloss": 340, "cqlloss": 340, "discretecqlloss": 340, "dtloss": 340, "onlinedtloss": 340, "a2closs": 340, "reinforceloss": 340, "dreameractorloss": 340, "dreamermodelloss": 340, "dreamervalueloss": 340, "td0estim": [340, 347], "td1estim": [340, 347], "td0_return_estim": 340, "td0_advantage_estim": 340, "td1_return_estim": 340, "vec_td1_return_estim": 340, "td1_advantage_estim": 340, "vec_td1_advantage_estim": 340, "td_lambda_return_estim": 340, "vec_td_lambda_return_estim": 340, "td_lambda_advantage_estim": 340, "vec_td_lambda_advantage_estim": 340, "generalized_advantage_estim": 340, "vec_generalized_advantage_estim": 340, "reward2go": 340, "distance_loss": [340, 347], "hold_out_net": 340, "hold_out_param": [340, 347], "softupd": [340, 347, 348, 350, 353, 356], "hardupd": [340, 347, 353], "batchsubsampl": [340, 344], "clearcudacach": 340, "countframeslog": 340, "logreward": [340, 344, 348], "optimizerhook": [340, 348], "replaybuffertrain": [340, 344, 348], "rewardnorm": 340, "selectkei": [340, 344], "trainerhookbas": [340, 344, 348], "updateweight": [340, 344, 348], "make_collector_offpolici": 340, "make_collector_onpolici": 340, "make_dqn_loss": 340, "make_redq_loss": 340, "make_redq_model": 340, "make_replay_buff": [340, 347], "make_target_updat": 340, "parallel_env_constructor": [340, 347], "sync_async_collector": 340, "sync_sync_collector": 340, "correct_for_frame_skip": 340, "get_stats_random_rollout": 340, "mlflowlogg": 340, "wandblogg": [340, 355], "get_logg": 340, "generate_exp_nam": 340, "journei": 341, "textbook": 341, "highlight": 341, "ever": [341, 359], "bump": 341, "think": [341, 349, 359, 365], "benefit": [341, 351, 359, 362], "pr": 341, "ground": [342, 347, 360], "recycl": [342, 362], "impos": 342, "violat": 342, "noisier": 342, "Their": [342, 359], "sd": 342, "prob_modul": 342, "pick": [342, 347, 348, 352], "hopefulli": [342, 348], "functional_modul": 342, "make_funct": 342, "mathbb": [342, 348], "rightarrow": [342, 348], "soften": 342, "backbon": [342, 350, 352, 358, 364], "make_actor": 342, "make_valu": 342, "shared_param": 342, "make_common": 342, "reusabl": [343, 347, 362], "swappabl": [343, 347], "characterist": [343, 347, 360], "trainabl": [343, 347, 353, 361], "whatev": [343, 347], "smth": [343, 347], "metric": [343, 347], "nutshel": [343, 347], "barto": [343, 359], "chapter": [343, 355], "significantli": [343, 347, 348, 353, 359], "next_stat": 343, "value_net_loss": 343, "pow": [343, 347], "room": 343, "signifi": [343, 359], "underperform": 343, "thin": 343, "intric": [343, 352], "believ": 344, "scheme": [344, 365], "substenti": 344, "_pre_steps_log_hook": 344, "_pre_optim_hook": 344, "sub_batch": 344, "_post_loss_hook": 344, "_post_optim_hook": 344, "post_optim": [344, 348], "_post_optim_log": 344, "post_optim_log": 344, "_post_steps_hook": 344, "_post_steps_log_hook": 344, "post_steps_log": 344, "comment": [344, 348, 364], "reserv": 344, "logginghook": 344, "logging_hook": 344, "save_dict": 344, "some_valu": 344, "torchsnapshot": 344, "ckpt_backend": 344, "filepath": 344, "save_train": 344, "load_from_fil": 344, "675": [346, 363], "galleri": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "mem": [346, 363], "mb": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365], "torchrl_demo": [346, 363, 364], "031": [346, 363, 364], "rb_tutori": [346, 362, 363], "370": [346, 360, 362, 363], "2758": [346, 363], "coding_dqn": [346, 348, 363], "861": [346, 348, 363], "755": [346, 348, 363], "541": [346, 360, 363], "dqn_with_rnn": [346, 350, 363], "458": [346, 350, 360, 363], "1919": [346, 350, 363], "multiagent_ppo": [346, 359, 363], "764": [346, 359, 363], "coding_ddpg": [346, 347, 363], "913": [346, 347, 363], "2726": [346, 347, 363], "coding_ppo": [346, 349, 363], "155": [346, 349, 360, 363], "torchrl_env": [346, 363, 365], "56": [346, 348, 360, 361, 363, 365], "866": [346, 363, 365], "2486": [346, 363], "pretrained_model": [346, 361, 363], "51": [346, 348, 360, 361, 363], "339": [346, 360, 361, 363], "multi_task": [346, 358, 363], "105": [346, 358, 360, 362, 363], "252": [346, 352, 360, 363], "43": [346, 348, 350, 351, 355, 359, 360, 361, 363], "175": [346, 351, 360, 363], "568": [346, 353, 360, 363], "676": [346, 356, 363], "74": [346, 348, 356, 360, 361, 363], "886": [346, 354, 363], "715": [346, 355, 363], "author": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 362, 365], "vincent": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 362, 365], "moen": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 360, 362, 365], "assembl": 347, "focus": [347, 353], "straightforward": [347, 348, 351, 352, 353, 354, 362], "maxim": [347, 353, 360], "transpar": [347, 350], "illustr": [347, 348, 352, 362], "bash": 347, "is_fork": [347, 348, 349, 350, 359, 361], "get_start_method": [347, 348, 349, 350, 359, 361], "is_avail": [347, 348, 349, 350, 359, 361], "collector_devic": 347, "loss_dict": 347, "oblivi": [347, 349, 362], "elementari": 347, "didact": 347, "dilut": 347, "pessimist": [347, 348, 349], "target_actor_network_param": 347, "actor_in_kei": 347, "actor_crit": 347, "noth": [347, 349], "compromis": 347, "hp": 347, "hasattr": 347, "_value_estim": 347, "elif": [347, 348], "notimplementederror": 347, "unknown": 347, "ifgg": 347, "_loss_actor": 347, "td_copi": 347, "actor_network_param": 347, "value_network_param": 347, "_loss_valu": 347, "pred_val": 347, "target_value_network_param": 347, "glue": 347, "_forward": 347, "ndimens": 347, "remaind": 347, "focu": [347, 348, 349, 352, 353, 354], "env_librari": 347, "env_task": 347, "env_arg": [347, 348], "friendli": 347, "torchr": 347, "rescal": 347, "presum": 347, "make_transformed_env": 347, "reward_sc": 347, "marker": 347, "env_per_collector": 347, "transform_state_dict": 347, "make_t_env": 347, "cheat": 347, "10m": 347, "cautiou": 347, "magnitud": 347, "thousand": [347, 350], "get_env_stat": 347, "proof_env": 347, "5000": [347, 348, 349, 356], "recal": [347, 349, 362], "ddpgmlpactor": 347, "ddpgmlpqnet": 347, "materi": 347, "ornsteinuhlenbeckprocesswrapp": [347, 352], "make_ddpg_actor": 347, "q_net": 347, "tight": 347, "decoupl": [347, 353], "10_000": [347, 349], "traj_len": [347, 350], "make_record": 347, "recorder_obj": 347, "flavor": 347, "circular": 347, "buffer_s": [347, 348], "random_crop_len": 347, "prb": 347, "buffer_scratch_dir": 347, "temporari": 347, "25": [347, 348, 349, 350, 360], "dataflow": 347, "ceil_div": 347, "utd": [347, 350], "update_to_data": 347, "realiz": 347, "_must_": 347, "001": [347, 360], "outdat": 347, "trick": [347, 348], "despit": 347, "adam": [347, 348, 349, 350, 353, 356, 359, 360], "optimizer_actor": 347, "lr": [347, 348, 349, 350, 356, 359, 360], "weight_decai": [347, 348], "optimizer_valu": 347, "total_collection_step": 347, "pretti": [347, 351, 355, 362], "rewards_ev": 347, "collected_fram": 347, "r0": 347, "numel": [347, 349, 350, 356, 361, 362], "current_fram": 347, "sampled_tensordict": 347, "gn1": 347, "clip_grad_norm_": [347, 349, 359, 360], "gn2": 347, "gn": [347, 360], "td_record": 347, "rn": 347, "set_descript": [347, 349, 350, 359, 360], "2f": 347, "traceback": [347, 362, 365], "1126": 347, "1532": [347, 362, 365], "_wrapped_call_impl": [347, 362, 365], "_call_impl": [347, 362, 365], "1582": 347, "forward_cal": [347, 362, 365], "_contextlib": [347, 362, 365], "126": [347, 360, 362, 365], "decorate_context": [347, 362, 365], "364": [347, 360], "342": [347, 360], "1179": 347, "new_func": 347, "_self": [347, 365], "727": 347, "_to_modul": 347, "413": [347, 360], "__dict__": 347, "_modul": 347, "plot": [347, 349, 350, 359, 360], "mention": [347, 350, 362, 365], "matplotlib": [347, 349, 350, 359, 360, 362, 365], "pyplot": [347, 349, 350, 359, 360, 362, 365], "plt": [347, 349, 350, 359, 360, 362, 365], "zip": [347, 357], "legend": 347, "xlabel": [347, 350, 359, 360], "ylabel": [347, 359], "tight_layout": 347, "concret": [347, 349], "takeawai": [347, 348], "distpatch": 347, "jupyt": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "ipynb": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365], "sphinx": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365], "customis": [348, 359], "road": 348, "aspect": [348, 353], "highest": [348, 352], "prerequisit": [348, 350], "familiar": [348, 359, 365], "lookup": 348, "amort": [348, 349], "cart": 348, "pole": 348, "un": 348, "actuat": 348, "frictionless": 348, "duelingcnndqnet": 348, "egreedymodul": [348, 350, 352, 356], "is_notebook": 348, "shell": 348, "get_ipython": 348, "__class__": 348, "zmqinteractiveshel": 348, "qtconsol": 348, "terminalinteractiveshel": 348, "ipython": [348, 359, 360], "nameerror": 348, "umbrella": 348, "misplac": 348, "misus": 348, "orchestr": [348, 353, 355], "five": 348, "64x64": 348, "motion": [348, 360], "obs_norm_sd": 348, "simpler": [348, 351], "get_norm_stat": 348, "test_env": 348, "make_model": 348, "dummy_env": 348, "init_bia": 348, "exploration_modul": [348, 350, 352, 356], "eps_greedy_v": 348, "eps_greedy_val_env": 348, "actor_explor": 348, "get_replay_buff": 348, "n_optim": [348, 353, 354], "themselv": 348, "parametriz": 348, "simplic": [348, 349, 354, 361, 362], "get_collector": 348, "cl": 348, "data_collector": 348, "bunch": 348, "power": 348, "ubiquit": [348, 351], "get_loss_modul": 348, "target_updat": 348, "995": [348, 360], "variat": 348, "2e": [348, 360], "wd": 348, "upd": 348, "harder": [348, 364], "5_000": 348, "500000": 348, "100000": 348, "005": 348, "mandatori": [348, 349, 359, 360], "fairer": 348, "budget": 348, "dqn_exp_": 348, "uuid1": [348, 365], "9895": 348, "0737": 348, "registr": 348, "cumbersom": 348, "buffer_hook": 348, "weight_updat": 348, "aliv": 348, "total_reward": 348, "07": [348, 359, 360], "25it": [348, 360], "3718": 348, "9346": [348, 360], "68it": 348, "3688": [348, 360], "96": [348, 350, 360, 361], "59": [348, 350, 360], "37it": 348, "3566": 348, "21it": [348, 360], "18it": [348, 350, 360], "4173": 348, "192": [348, 360], "09": [348, 360], "53": [348, 360], "29it": 348, "224": [348, 360], "44it": 348, "3475": 348, "93it": 348, "288": [348, 360], "67": [348, 358, 360, 361], "32it": [348, 349], "3445": 348, "72": [348, 360, 361], "75it": [348, 360], "3657": [348, 360], "352": [348, 360], "77": [348, 360, 361], "98it": [348, 349], "384": [348, 360], "82": [348, 360, 361, 362], "3778": 348, "416": [348, 360], "54": [348, 360, 361], "36it": 348, "4295": [348, 360], "448": [348, 360], "01it": [348, 360], "480": [348, 360, 361], "08it": [348, 360], "92it": [348, 349, 360], "544": [348, 360], "49": [348, 360, 361], "89": [348, 360, 361], "73it": 348, "576": [348, 360], "90": [348, 349, 359, 360, 361], "16it": [348, 360], "3415": 348, "608": [348, 360], "4021": 348, "640": 348, "48": [348, 360, 361], "06it": [348, 360], "672": 348, "47": [348, 360], "91": [348, 360, 361], "3991": 348, "704": 348, "63it": 348, "736": 348, "72it": 348, "768": 348, "45": [348, 360], "93": [348, 360, 362], "800": 348, "92": [348, 349, 360, 361, 362], "64it": 348, "3869": 348, "832": 348, "81it": [348, 360], "864": 348, "26it": [348, 360], "896": 348, "40it": 348, "3899": 348, "928": 348, "4082": [348, 360], "960": 348, "31it": 348, "992": [348, 360], "62it": [348, 360], "79it": 348, "1056": 348, "46it": [348, 360], "1088": 348, "04it": [348, 360], "1120": 348, "20it": [348, 360], "3505": 348, "1152": 348, "05it": [348, 360], "3960": 348, "1184": [348, 365], "1216": 348, "53it": 348, "1248": 348, "58it": [348, 349], "1280": 348, "56it": 348, "1344": 348, "1376": 348, "1408": 348, "1440": 348, "1472": 348, "1504": 348, "02it": 348, "1536": 348, "91it": 348, "1568": 348, "19it": [348, 350, 360], "1600": 348, "83it": [348, 360], "3808": 348, "1632": 348, "23it": [348, 360], "1696": 348, "1728": 348, "1760": 348, "76it": [348, 360], "1792": 348, "1824": 348, "1856": 348, "60it": [348, 360], "1888": 348, "77it": 348, "1920": 348, "59it": 348, "1952": 348, "13it": [348, 360], "1984": 348, "2016": 348, "2048": [348, 361], "2080": 348, "33it": 348, "2112": [348, 360], "2144": 348, "2176": 348, "67it": 348, "2208": 348, "87it": [348, 349, 360], "2240": 348, "42it": [348, 360], "2272": 348, "70it": 348, "2336": 348, "88it": [348, 350], "2368": 348, "22it": [348, 360], "2400": 348, "2432": 348, "30it": 348, "2464": 348, "2496": 348, "2528": [348, 360], "2560": 348, "52": [348, 360, 361], "2624": 348, "2656": [348, 360], "85it": [348, 349], "2688": 348, "2720": [348, 360], "55it": 348, "55": [348, 360, 361, 362], "2752": 348, "2784": 348, "61it": [348, 360], "2816": 348, "24it": [348, 360], "57": [348, 359, 360, 361], "2848": 348, "03it": [348, 360], "58": [348, 360, 361], "2880": 348, "2912": 348, "2944": [348, 360], "96it": [348, 360], "60": [348, 349, 359, 360, 364], "2976": [348, 360], "61": [348, 360, 361], "3040": 348, "3072": 348, "94it": [348, 360], "62": [348, 360, 361], "3104": 348, "63": [348, 359, 360, 361], "3136": 348, "52it": 348, "3168": 348, "3200": 348, "27it": 348, "65": [348, 360, 361], "3232": [348, 360], "86it": [348, 360], "5556": 348, "3264": 348, "66": [348, 350, 360], "3296": 348, "3328": 348, "57it": 348, "3360": 348, "68": [348, 360, 361], "3392": 348, "3424": 348, "69": [348, 360], "3456": [348, 360], "70": [348, 349, 359, 360, 361], "3488": 348, "3520": 348, "12it": [348, 360], "71": [348, 360, 361], "3552": 348, "3584": 348, "3616": 348, "73": [348, 360, 361], "3648": 348, "85": [348, 360, 361], "3680": 348, "3712": 348, "10it": [348, 360], "3744": 348, "49it": 348, "76": [348, 360, 361], "3776": 348, "50it": 348, "97": [348, 360, 361], "3840": 348, "48it": 348, "3872": 348, "78": [348, 360], "3904": 348, "78it": 348, "79": [348, 360, 361], "3936": 348, "3968": 348, "4000": [348, 349], "4032": 348, "4064": 348, "4096": 348, "83": [348, 360, 362], "4128": [348, 360], "4160": 348, "4192": 348, "89it": 348, "4224": 348, "4256": [348, 360], "4288": [348, 360], "39it": 348, "4320": 348, "00it": [348, 360], "4352": 348, "4384": 348, "4416": 348, "4448": 348, "4480": 348, "4512": 348, "4544": 348, "4576": 348, "4608": 348, "4640": 348, "4672": [348, 360], "4704": 348, "4736": 348, "28it": [348, 360], "4768": 348, "66it": 348, "4800": [348, 360], "4832": 348, "4864": 348, "4896": 348, "4928": 348, "4960": 348, "4992": 348, "5024it": 348, "65it": 348, "print_csv_files_in_fold": 348, "folder_path": 348, "csv_file": 348, "output_str": 348, "dirpath": 348, "endswith": 348, "strip": 348, "tmp": [348, 362], "tmp1z3b_h4t": 348, "dqn_exp_a6ddc88a": 348, "fc13": 348, "11ee": 348, "bb46": 348, "0242ac110002": 348, "35655441880226135": 348, "3869387209415436": 348, "40816524624824524": 348, "42945271730422974": 348, "40213119983673096": 348, "39912933111190796": 348, "241279736161232": 348, "15694060921669006": 348, "16186174750328064": 348, "37849023938179016": 348, "25916069746017456": 348, "25747236609458923": 348, "35361072421073914": 348, "38433530926704407": 348, "31461772322654724": 348, "grad_norm_0": 348, "16915225982666": 348, "4919049739837646": 348, "7092366218566895": 348, "374946355819702": 348, "519989490509033": 348, "6788172721862793": 348, "3422229290008545": 348, "4406328201293945": 348, "3295106887817383": 348, "10000000894069672": 348, "55555534362793": 348, "qvaluenetwork": 348, "worst": 348, "accuraci": 348, "fanci": [348, 354], "talk": 349, "repetit": [349, 351, 354], "six": 349, "sophist": [349, 359], "invent": 349, "overview": [349, 353, 359, 364], "theta_k": 349, "pi_": 349, "exceed": 349, "discourag": [349, 360], "indispens": 349, "analyz": 349, "lingua": 349, "franca": 349, "defaultdict": [349, 360], "3e": [349, 350, 359], "max_grad_norm": [349, 359], "sub_batch_s": 349, "num_epoch": [349, 359], "entropy_ep": [349, 359], "charact": 349, "inverteddoublependulum": 349, "transmit": 349, "stai": 349, "supplementari": [349, 365], "told": 349, "confid": [349, 359], "ran": 349, "f_": 349, "mu_": 349, "difficulti": [349, 365], "d_ob": 349, "d_action": 349, "policy_modul": [349, 359], "That": 349, "said": 349, "briefli": [349, 359], "refil": [349, 359], "conveni": [349, 359, 360, 362], "easiest": [349, 353, 359], "mathemat": [349, 359], "tradeoff": [349, 359], "advantage_modul": 349, "lr_schedul": [349, 360], "cosineannealinglr": [349, 360], "eval_str": 349, "tensordict_data": [349, 359], "data_view": [349, 359], "subdata": [349, 359], "cum_reward_str": 349, "4f": [349, 350, 360], "stepcount_str": 349, "param_group": 349, "lr_str": 349, "eval_rollout": 349, "nice": [349, 351, 354], "475": [349, 360], "4468": 349, "0003": [349, 360], "481": [349, 360], "1095": 349, "3000": 349, "485": [349, 360], "97it": [349, 360], "1488": 349, "489": [349, 360], "38it": [349, 360], "1892": 349, "0002": [349, 360], "491": [349, 360], "2100": 349, "6000": 349, "493": [349, 360], "34it": 349, "2239": 349, "7000": 349, "494": [349, 360], "2332": 349, "8000": 349, "482": [349, 360], "2316": 349, "9000": 349, "488": [349, 360], "17it": [349, 360], "2552": 349, "2435": 349, "cap": [349, 362], "figsiz": [349, 360], "subplot": [349, 360, 365], "titl": [349, 350, 359, 360], "bit": [349, 350, 351, 359, 362], "84x84": 350, "accessori": 350, "stamp": 350, "assist": 350, "emb": 350, "n_cell": 350, "customiz": 350, "wouldn": 350, "make_tensordict_prim": 350, "qval": 350, "stoch_polici": 350, "opportun": 350, "uniniti": 350, "again": [350, 351, 352, 354, 359, 361, 362, 365], "redund": 350, "strongli": 350, "sake": [350, 361, 362], "20_000": [350, 360], "longest": 350, "npai": 350, "action_spread": 350, "124": [350, 360], "80it": 350, "0006": [350, 360], "150": [350, 360], "0005": 350, "topic": [351, 352, 353], "straight": 351, "backtrack": 351, "encapsul": [351, 352, 353], "reset_with_act": 351, "4296": 351, "tp": 351, "stepped_data": 351, "tediou": 351, "spatial": 351, "useless": 351, "policyless": 351, "appreci": 351, "monitor": 351, "examin": 351, "tackl": 352, "delv": 352, "bypass": 352, "extractor": 352, "palliat": 352, "additivegaussianwrapp": 352, "had": [352, 354], "exploration_polici": 352, "greedili": 352, "innov": [352, 353], "rollout_explor": 352, "sole": 353, "tradit": 353, "supervis": [353, 354, 362, 365], "n_collect": 353, "get_next_batch": 353, "novel": 353, "ddpg_loss": 353, "total_loss": 353, "prove": 353, "reliev": 353, "concern": 353, "accustom": 354, "surprisingli": 354, "fundament": 354, "augment": [354, 356, 362], "art": 354, "pseudo": [354, 360], "multirpocess": 354, "countless": 354, "yourself": [354, 359], "lightweight": 355, "portabl": 355, "everywher": 355, "hyperapamet": 355, "my_exp": 355, "log_scalar": 355, "elaps": 355, "my_scalar": 355, "saw": [355, 360, 362], "my_video": 355, "record_env": [355, 356], "uncom": 355, "lesson": 356, "voluntarili": 356, "refresh": [356, 359], "value_mlp": 356, "100_000": 356, "init_rand_step": 356, "training_loop": 356, "video_record": 356, "arbitrarili": 356, "total_count": 356, "total_episod": 356, "t0": 356, "t1": 356, "conclud": [356, 361], "tutorials_python": 357, "tutorials_jupyt": 357, "env1_obs_kei": 358, "observation_stand": 358, "env2_obs_kei": 358, "observation_walk": 358, "tdreset1": 358, "tdreset2": 358, "policy_common": 358, "policy_stand": 358, "policy_walk": 358, "But": 358, "env1_mak": 358, "env2_mak": 358, "_single_task": 358, "td_rollout": 358, "matteo": 359, "bettini": 359, "benchmarl": 359, "maddpg": 359, "lidar": 359, "sensor": 359, "collis": 359, "tie": 359, "mappo": 359, "ippo": 359, "phase": [359, 362], "mathbf": 359, "pi": [359, 360], "fed": [359, 362], "literatur": 359, "overcom": 359, "stationari": 359, "concurr": 359, "analys": 359, "gui": 359, "visualis": 359, "multiagentmlp": 359, "vmas_devic": 359, "6_000": 359, "team": [359, 364], "n_iter": 359, "minibatch_s": 359, "generalis": 359, "simd": 359, "parallelis": 359, "warp": 359, "todai": 359, "circl": 359, "surround": 359, "dot": [359, 360], "collid": 359, "drag": 359, "elast": 359, "acceler": 359, "penalis": 359, "num_vmas_env": 359, "scenario_nam": 359, "four": [359, 360], "environmnet": 359, "final_rew": 359, "agent_collis": 359, "stress": 359, "paramount": 359, "n_rollout_step": 359, "evolut": 359, "utilis": 359, "n_actions_per_ag": 359, "n_obs_per_ag": 359, "share_parameters_polici": 359, "policy_net": 359, "denot": 359, "carefulli": [359, 365], "grant": 359, "converg": 359, "cooper": 359, "share_parameters_crit": 359, "critic_net": 359, "fantast": 359, "minibatch": 359, "desc": 359, "episode_reward_mean": 359, "episode_reward_mean_list": 359, "get_item_shap": 359, "critic_network_param": 359, "target_critic_network_param": 359, "4579917788505554": 359, "39507877826690674": 359, "2842429876327515": 359, "5311583280563354": 359, "0912442207336426": 359, "4949307441711426": 359, "478776454925537": 359, "7761335372924805": 359, "738668441772461": 359, "9966132640838623": 359, "xvfb": 359, "pyvirtualdisplai": 359, "1400": [359, 360], "900": 359, "pil": 359, "rendering_callback": 359, "fromarrai": 359, "rgb_arrai": [359, 360], "gif": 359, "save_al": 359, "append_imag": 359, "profici": 359, "master": 359, "freeli": 360, "touch": 360, "undertaken": 360, "broader": 360, "wider": 360, "algebra": 360, "acquaint": 360, "avenu": 360, "_apply_to_composit": 360, "default_x": 360, "default_i": 360, "torqu": 360, "upward": 360, "angular": 360, "sin": 360, "rad": 360, "sec": 360, "gravit": 360, "angl": 360, "deleg": 360, "new_th": 360, "new_thdot": 360, "thdot": 360, "g_forc": 360, "max_torqu": 360, "angle_norm": 360, "max_spe": 360, "albeit": 360, "gen_param": 360, "high_th": 360, "high_thdot": 360, "low_th": 360, "low_thdot": 360, "trivial": 360, "shortcut": [360, 365], "irrelev": 360, "_make_spec": 360, "td_param": 360, "render_mod": 360, "render_fp": 360, "random_": 360, "_make_step": 360, "staticmethod": 360, "showcas": 360, "skeleton": 360, "_apply_transform": [360, 365], "_inv_apply_transform": [360, 365], "subset": [360, 361], "sine": 360, "cosin": 360, "sintransform": 360, "costransform": 360, "t_sin": 360, "t_co": 360, "cat_transform": 360, "simple_rollout": 360, "unexplor": 360, "init_td": 360, "traj_return": 360, "last_reward": 360, "is_ipython": 360, "inlin": 360, "get_backend": 360, "ion": 360, "gcf": 360, "clear_output": 360, "625": 360, "0748": 360, "519": 360, "0499": 360, "4472": 360, "073": 360, "0685": 360, "0408": 360, "552": 360, "95it": 360, "5154": 360, "9086": 360, "9385": 360, "15it": 360, "2568": 360, "4981": 360, "223": 360, "8929": 360, "4491": 360, "581": 360, "3233": 360, "0664": 360, "596": 360, "1021": 360, "5263": 360, "9579": 360, "5807": 360, "8075": 360, "212": 360, "2009": 360, "5525": 360, "914": 360, "2894": 360, "0115": 360, "0977": 360, "1845": 360, "1830": 360, "4858": 360, "233": 360, "2863": 360, "0297": 360, "464": 360, "4617": 360, "5997": 360, "904": 360, "1647": 360, "0777": 360, "901": 360, "4709": 360, "6813": 360, "8317": 360, "3221": 360, "5554": 360, "276": 360, "3353": 360, "701": 360, "8570": 360, "6656": 360, "463": 360, "7779": 360, "6911": 360, "875": 360, "0796": 360, "7082": 360, "308": 360, "0421": 360, "1496": 360, "5037": 360, "1755": 360, "5029": 360, "9454": 360, "665": 360, "9330": 360, "2118": 360, "444": 360, "0995": 360, "6294": 360, "3146": 360, "2909": 360, "461": 360, "9720": 360, "1298": 360, "9923": 360, "0345": 360, "3438": 360, "424": 360, "6953": 360, "5233": 360, "411": 360, "8011": 360, "5329": 360, "2677": 360, "6969": 360, "7010": 360, "376": 360, "14it": 360, "9352": 360, "7707": 360, "6178": 360, "5646": 360, "348": 360, "7304": 360, "9407": 360, "942": 360, "3882": 360, "7604": 360, "11it": 360, "3507": 360, "8928": 360, "258": 360, "6978": 360, "4641": 360, "549": 360, "6047": 360, "5005": 360, "4136": 360, "2993": 360, "3222": 360, "4046": 360, "7314": 360, "275": 360, "6331": 360, "9318": 360, "961": 360, "8331": 360, "1604": 360, "4099": 360, "4761": 360, "125": 360, "4262": 360, "6363": 360, "382": 360, "3593": 360, "7377": 360, "2847": 360, "3443": 360, "867": 360, "3592": 360, "4760": 360, "441": 360, "9950": 360, "8021": 360, "3528": 360, "1214": 360, "708": 360, "4023": 360, "3583": 360, "041": 360, "3801": 360, "0310": 360, "120": 360, "4244": 360, "2039": 360, "4850": 360, "8748": 360, "706": 360, "4897": 360, "9210": 360, "8964": 360, "0832": 360, "3934": 360, "456": 360, "8971": 360, "2933": 360, "3377": 360, "6996": 360, "2274": 360, "8916": 360, "098": 360, "2660": 360, "9110": 360, "4503": 360, "6956": 360, "9172": 360, "4026": 360, "946": 360, "9229": 360, "5205": 360, "294": 360, "8872": 360, "6637": 360, "019": 360, "9281": 360, "2082": 360, "724": 360, "8561": 360, "6574": 360, "357": 360, "09it": 360, "4138": 360, "5230": 360, "385": 360, "4065": 360, "5642": 360, "921": 360, "9786": 360, "4129": 360, "5831": 360, "266": 360, "7723": 360, "4152": 360, "0898": 360, "389": 360, "5155": 360, "5376": 360, "5616": 360, "4094": 360, "283": 360, "5333": 360, "4803": 360, "895": 360, "6566": 360, "2588": 360, "662": 360, "4732": 360, "7503": 360, "068": 360, "0714": 360, "3370": 360, "059": 360, "8612": 360, "1915": 360, "3855": 360, "0349": 360, "9644": 360, "4538": 360, "445": 360, "0392": 360, "4080": 360, "1648": 360, "9599": 360, "143": [360, 362], "4284": 360, "5946": 360, "2590": 360, "9181": 360, "4621": 360, "9075": 360, "674": 360, "1772": 360, "9444": 360, "351": 360, "9391": 360, "5595": 360, "8673": 360, "6240": 360, "5919": 360, "1071": 360, "9127": 360, "251": 360, "9799": 360, "3131": 360, "9612": 360, "9705": 360, "8741": 360, "2230": 360, "0972": 360, "0337": 360, "0350": 360, "0654": 360, "102": 360, "2441": 360, "4596": 360, "362": 360, "103": 360, "4362": 360, "171": 360, "104": 360, "4041": 360, "6907": 360, "4664": 360, "2760": 360, "0299": 360, "9712": 360, "349": 360, "107": 360, "3332": 360, "4479": 360, "772": 360, "108": 360, "4357": 360, "9591": 360, "543": 360, "109": 360, "6216": 360, "1353": 360, "692": 360, "110": 360, "6261": 360, "7086": 360, "496": 360, "111": 360, "7758": 360, "9818": 360, "112": 360, "7772": 360, "5055": 360, "113": 360, "5840": 360, "3180": 360, "2083": 360, "115": 360, "5275": 360, "6873": 360, "116": 360, "4107": 360, "1624": 360, "117": 360, "6372": 360, "2571": 360, "118": 360, "4039": 360, "4428": 360, "119": 360, "4728": 360, "5628": 360, "6767": 360, "2466": 360, "522": 360, "121": [360, 365], "5873": 360, "5072": 360, "6548": 360, "3766": 360, "123": 360, "5134": 360, "1955": 360, "2481": 360, "0591": 360, "4500": 360, "3368": 360, "9708": 360, "7059": 360, "127": 360, "3031": 360, "2534": 360, "843": 360, "3327": 360, "6193": 360, "129": [360, 362], "4831": 360, "1172": 360, "2593": 360, "4219": 360, "962": 360, "8380": 360, "899": 360, "132": 360, "2721": 360, "9048": 360, "166": 360, "133": 360, "2419": 360, "5248": 360, "2139": 360, "4278": 360, "135": 360, "07it": 360, "0690": 360, "5140": 360, "136": 360, "1140": 360, "7402": 360, "137": 360, "5356": 360, "1636": 360, "138": 360, "0671": 360, "8798": 360, "139": 360, "8918": 360, "3298": 360, "307": 360, "140": 360, "1779": 360, "141": 360, "1771": 360, "3624": 360, "936": 360, "142": 360, "1683": 360, "4810": 360, "9373": 360, "4435": 360, "144": 360, "4396": 360, "8092": 360, "145": [360, 365], "2572": 360, "146": 360, "4212": 360, "0260": 360, "147": 360, "0939": 360, "6478": 360, "605": 360, "148": 360, "6606": 360, "7289": 360, "149": 360, "9300": 360, "7193": 360, "563": 360, "1166": 360, "8514": 360, "151": 360, "9108": 360, "0672": 360, "292": 360, "152": 360, "8591": 360, "3768": 360, "153": 360, "9976": 360, "154": 360, "0576": 360, "0067": 360, "935": 360, "4199": 360, "1722": 360, "156": 360, "8310": 360, "3466": 360, "157": 360, "8631": 360, "2492": 360, "158": 360, "8763": 360, "1277": 360, "159": 360, "5562": 360, "7446": 360, "1082": 360, "9830": 360, "161": 360, "0946": 360, "5229": 360, "162": 360, "4574": 360, "6900": 360, "163": [360, 361], "2229": 360, "0318": 360, "164": 360, "0543": 360, "0817": 360, "761": 360, "165": 360, "2809": 360, "5118": 360, "366": 360, "1142": 360, "5635": 360, "167": 360, "1949": 360, "2327": 360, "982": 360, "168": 360, "0967": 360, "0387": 360, "457": 360, "169": 360, "0782": 360, "2150": 360, "170": 360, "5222": 360, "3725": 360, "9288": 360, "9837": 360, "1416": 360, "1099": 360, "173": 360, "8620": 360, "8475": 360, "174": 360, "1807": 360, "4375": 360, "1148": 360, "0645": 360, "2751": 360, "8313": 360, "177": 360, "9286": 360, "9770": 360, "178": 360, "5735": 360, "2837": 360, "179": 360, "2926": 360, "9489": 360, "180": 360, "1507": 360, "181": 360, "8724": 360, "3567": 360, "182": 360, "3574": 360, "6140": 360, "183": 360, "7895": 360, "2518": 360, "184": [360, 362], "6146": 360, "185": 360, "8776": 360, "7358": 360, "186": 360, "3722": 360, "8428": 360, "187": 360, "7955": 360, "188": 360, "0092": 360, "7106": 360, "829": 360, "189": 360, "2264": 360, "6919": 360, "190": 360, "1438": 360, "1362": 360, "191": 360, "0618": 360, "8217": 360, "9420": 360, "6765": 360, "193": 360, "7745": 360, "0709": 360, "194": 360, "9478": 360, "6867": 360, "195": 360, "6507": 360, "6225": 360, "196": 360, "2244": 360, "2195": 360, "197": 360, "5385": 360, "9263": 360, "198": 360, "1878": 360, "2374": 360, "8054": 360, "3504": 360, "557": 360, "0766": 360, "201": 360, "2011": 360, "8393": 360, "202": 360, "0803": 360, "7815": 360, "203": 360, "8363": 360, "2460": 360, "204": 360, "8643": 360, "2191": 360, "593": 360, "205": [360, 365], "0773": 360, "1343": 360, "206": 360, "8657": 360, "207": 360, "9304": 360, "7584": 360, "208": 360, "8752": 360, "2307": 360, "209": 360, "5250": 360, "4869": 360, "7837": 360, "5762": 360, "211": 360, "6661": 360, "8600": 360, "2502": 360, "1752": 360, "3075": 360, "8871": 360, "214": 360, "9406": 360, "8090": 360, "215": 360, "6291": 360, "8923": 360, "876": 360, "216": 360, "9504": 360, "21e": 360, "217": 360, "7431": 360, "7880": 360, "218": 360, "4463": 360, "5432": 360, "219": 360, "3793": 360, "3313": 360, "220": 360, "90it": 360, "8843": 360, "0369": 360, "065": 360, "221": 360, "4828": 360, "8391": 360, "222": 360, "51it": 360, "6265": 360, "2913": 360, "947": 360, "71it": 360, "5541": 360, "1252": 360, "7342": 360, "2396": 360, "225": 360, "5936": 360, "1924": 360, "226": 360, "9975": 360, "2045": 360, "227": 360, "8367": 360, "9540": 360, "228": 360, "7259": 360, "6743": 360, "229": 360, "4827": 360, "7528": 360, "230": 360, "7361": 360, "8756": 360, "231": [360, 362], "7646": 360, "1116": 360, "232": 360, "5426": 360, "8385": 360, "5662": 360, "8585": 360, "234": 360, "8234": 360, "7930": 360, "235": 360, "2648": 360, "9309": 360, "236": 360, "6817": 360, "237": 360, "0943": 360, "1533": 360, "238": 360, "3045": 360, "0483": 360, "239": 360, "6415": 360, "0201": 360, "241": 360, "4437": 360, "4365": 360, "242": 360, "0358": 360, "4943": 360, "243": 360, "1272": 360, "5003": 360, "1180": 360, "2637": 360, "245": 360, "7197": 360, "0873": 360, "246": 360, "2917": 360, "247": 360, "0160": 360, "0738": 360, "248": 360, "3689": 360, "0120": 360, "249": 360, "5570": 360, "0475": 360, "250": 360, "4423": 360, "2220": 360, "6803": 360, "1465": 360, "7214": 360, "253": 360, "8801": 360, "7034": 360, "254": 360, "9136": 360, "4076": 360, "7589": 360, "5013": 360, "8150": 360, "2241": 360, "257": 360, "0753": 360, "8081": 360, "1951": 360, "8314": 360, "259": 360, "0038": 360, "260": 360, "0889": 360, "4616": 360, "261": [360, 365], "0655": 360, "262": 360, "8333": 360, "9476": 360, "263": 360, "7554": 360, "3798": 360, "264": 360, "3717": 360, "3947": 360, "529": 360, "265": 360, "3060": 360, "6495": 360, "7467": 360, "8889": 360, "267": 360, "8457": 360, "591": 360, "7137": 360, "0536": 360, "771": 360, "269": 360, "1651": 360, "388": 360, "270": 360, "8246": 360, "5709": 360, "281": 360, "271": 360, "7502": 360, "0521": 360, "032": 360, "272": 360, "5475": 360, "7253": 360, "273": 360, "2856": 360, "7130": 360, "274": 360, "2778": 360, "4122": 360, "8368": 360, "1841": 360, "9622": 360, "1603": 360, "003e": 360, "277": 360, "0247": 360, "346": 360, "278": 360, "2238": 360, "6418": 360, "279": 360, "0626": 360, "2538": 360, "280": 360, "0149": 360, "7380": 360, "2167": 360, "8911": 360, "282": 360, "8725": 360, "1983": 360, "8142": 360, "3709": 360, "284": 360, "4989": 360, "285": 360, "6464": 360, "6210": 360, "286": 360, "9726": 360, "0820": 360, "287": 360, "6975": 360, "9091": 360, "4926": 360, "4791": 360, "289": [360, 365], "0905": 360, "3500": 360, "290": 360, "2287": 360, "291": 360, "9918": 360, "5543": 360, "9245": 360, "6444": 360, "631": 360, "293": 360, "0448": 360, "4769": 360, "8566": 360, "7208": 360, "295": 360, "0966": 360, "296": 360, "5303": 360, "1537": 360, "023": 360, "297": 360, "2682": 360, "564": 360, "298": 360, "4318": 360, "5063": 360, "299": 360, "7475": 360, "4190": 360, "8186": 360, "5077": 360, "301": 360, "1883": 360, "5291": 360, "472": 360, "302": 360, "3998": 360, "303": 360, "3622": 360, "0930": 360, "626": 360, "304": 360, "9500": 360, "5664": 360, "305": 360, "5697": 360, "3024": 360, "306": 360, "3117": 360, "0052": 360, "006": 360, "0981": 360, "9312": 360, "3873": 360, "309": 360, "0411": 360, "2650": 360, "1656": 360, "0228": 360, "004": 360, "311": 360, "1196": 360, "2478": 360, "312": 360, "7353": 360, "0812": 360, "313": 360, "3022": 360, "758": 360, "314": 360, "1406": 360, "4626": 360, "315": 360, "2156": 360, "851": 360, "316": 360, "1953": 360, "3774": 360, "317": 360, "6385": 360, "9917": 360, "318": 360, "2764": 360, "905": 360, "319": 360, "6391": 360, "9317": 360, "9748": 360, "2679": 360, "321": 360, "8495": 360, "5125": 360, "8177": 360, "6602": 360, "323": 360, "0704": 360, "5776": 360, "324": 360, "9833": [360, 364], "1339": 360, "402": 360, "325": 360, "1238": 360, "326": 360, "9299": 360, "0227": 360, "327": 360, "7727": 360, "1607": 360, "336": 360, "328": 360, "3958": 360, "3223": 360, "763": 360, "329": 360, "4742": 360, "1797": 360, "330": 360, "0144": 360, "0085": 360, "791": 360, "331": 360, "8284": 360, "0428": 360, "332": 360, "7365": 360, "333": 360, "4566": 360, "0781": 360, "086": 360, "334": 360, "3355": 360, "0230": 360, "335": 360, "0423": 360, "076": 360, "3711": 360, "1335": 360, "6855": 360, "337": 360, "0304": 360, "0023": 360, "8459": 360, "338": 360, "9998": 360, "4399": 360, "2303": 360, "1346": 360, "340": 360, "2915": 360, "7116": 360, "341": 360, "5560": 360, "0487": 360, "5119": 360, "061": 360, "343": 360, "3305": 360, "3705": 360, "957": 360, "344": 360, "6068": 360, "345": 360, "5731": 360, "3897": 360, "0376": 360, "347": 360, "0434": 360, "012": 360, "1300": 360, "1215": 360, "0968": 360, "0885": 360, "350": 360, "1348": 360, "0073": 360, "5052": 360, "4184": 360, "2817": 360, "8887": 360, "353": 360, "4779": 360, "1009": 360, "354": 360, "0604": 360, "599": 360, "355": 360, "4486": 360, "1176": 360, "656": 360, "356": 360, "2436": 360, "0668": 360, "8849": 360, "0012": 360, "358": 360, "7511": 360, "8804": 360, "359": 360, "8870": 360, "6728": 360, "360": 360, "8841": 360, "5508": 360, "361": 360, "5242": 360, "0013": 360, "6185": 360, "363": 360, "1378": 360, "0204": 360, "41it": 360, "0355": 360, "685": 360, "365": 360, "4884": 360, "0231": 360, "0014": 360, "6793": 360, "367": 360, "9834": 360, "863": 360, "368": 360, "6709": 360, "462": 360, "369": 360, "5199": 360, "9790": 360, "9401": 360, "7802": 360, "371": 360, "6723": 360, "372": 360, "2678": 360, "6201": 360, "373": 360, "2184": 360, "7385": 360, "374": 360, "6344": 360, "617": 360, "375": 360, "9945": 360, "0772": 360, "567": 360, "7576": 360, "0398": 360, "377": 360, "3396": 360, "0022": 360, "094": 360, "378": 360, "3073": 360, "4018": 360, "379": 360, "1869": 360, "380": 360, "0481": 360, "1117": 360, "381": 360, "6823": 360, "981": 360, "8305": 360, "0210": 360, "383": 360, "4908": 360, "0272": 360, "538": 360, "3267": 360, "0111": 360, "7965": 360, "1796": 360, "0039": 360, "5396": 360, "386": 360, "3757": 360, "0490": 360, "387": 360, "1394": 360, "4187": 360, "2986": 360, "7954": 360, "1274": 360, "0063": 360, "813": 360, "390": 360, "8706": 360, "0114": 360, "391": 360, "6922": 360, "2423": 360, "392": 360, "9115": 360, "2602": 360, "393": 360, "2449": 360, "0783": 360, "394": 360, "0631": 360, "0057": 360, "7444": 360, "395": 360, "3339": 360, "0167": 360, "396": 360, "4806": 360, "397": 360, "4171": 360, "067": 360, "398": 360, "2618": 360, "5809": 360, "399": 360, "0054": 360, "3364": 360, "8733": 360, "0184": 360, "401": 360, "9137": 360, "0113": 360, "025": 360, "0386": 360, "0625": 360, "403": 360, "1332": 360, "0582": 360, "7816": 360, "404": 360, "8341": 360, "0941": 360, "854": 360, "405": 360, "8615": 360, "588": 360, "406": 360, "3849": 360, "008": 360, "407": 360, "9395": 360, "0765": 360, "055": 360, "408": 360, "2685": 360, "2235": 360, "688": 360, "409": 360, "3052": 360, "4249": 360, "410": 360, "6806": 360, "6383": 360, "3721": 360, "9981": 360, "412": 360, "1862": 360, "822": 360, "9811": 360, "0171": 360, "013": 360, "414": 360, "0252": 360, "0049": 360, "6205": 360, "415": 360, "1108": 360, "4921": 360, "9142": 360, "8130": 360, "417": 360, "1725": 360, "0036": 360, "3196": 360, "418": 360, "7795": 360, "0242": 360, "799": 360, "419": 360, "7737": 360, "0138": 360, "420": 360, "1462": 360, "0053": 360, "421": 360, "9226": 360, "6139": 360, "422": 360, "9889": 360, "0403": 360, "423": 360, "6194": 360, "0032": 360, "3989": 360, "0104": 360, "425": 360, "9960": 360, "0009": 360, "6009": 360, "426": 360, "2697": 360, "0914": 360, "427": 360, "1114": 360, "428": 360, "9862": 360, "1932": 360, "429": 360, "0637": 360, "0623": 360, "082": 360, "430": 360, "9906": 360, "2031": 360, "431": 360, "9948": 360, "0895": 360, "432": 360, "1970": 360, "0256": 360, "4231": 360, "0449": 360, "644": 360, "434": 360, "1039": 360, "1973": 360, "435": 360, "4561": 360, "1225": 360, "436": 360, "0211": 360, "2125": 360, "437": 360, "3866": 360, "0050": 360, "7202": 360, "438": 360, "6388": 360, "0072": 360, "439": 360, "1187": 360, "0015": 360, "5116": 360, "440": 360, "0432": 360, "0025": 360, "7809": 360, "1925": 360, "0103": 360, "442": 360, "9570": 360, "443": 360, "0871": 360, "5601": 360, "0165": 360, "0047": 360, "6061": 360, "2746": 360, "0027": 360, "7887": 360, "446": 360, "1835": 360, "0035": 360, "855": 360, "447": 360, "8420": 360, "548": 360, "2653": 360, "0126": 360, "9736": 360, "449": 360, "0594": 360, "0119": 360, "6196": 360, "450": 360, "4509": 360, "0373": 360, "451": 360, "0620": 360, "452": 360, "6898": 360, "3235": 360, "687": 360, "453": 360, "5879": 360, "454": 360, "8406": 360, "0694": 360, "455": 360, "8259": 360, "0235": 360, "8500": 360, "0024": 360, "4054": 360, "2027": 360, "0894": 360, "459": 360, "5966": 360, "460": 360, "6942": 360, "0016": 360, "4254": 360, "6703": 360, "0145": 360, "8124": 360, "0218": 360, "9196": 360, "0188": 360, "8986": 360, "0884": 360, "0084": 360, "5624": 360, "465": 360, "8862": 360, "5384": 360, "466": 360, "5837": 360, "467": 360, "8954": 360, "0101": 360, "6751": 360, "468": 360, "8063": 360, "0122": 360, "9635": 360, "469": 360, "0692": 360, "4216": 360, "470": 360, "1227": 360, "0586": 360, "162e": 360, "471": 360, "9690": 360, "4166": 360, "6324": 360, "473": 360, "0778": 360, "474": 360, "8548": 360, "0017": 360, "4408": 360, "8125": 360, "1515": 360, "476": 360, "2733": 360, "0044": 360, "2836": 360, "477": 360, "7497": 360, "7681": 360, "478": 360, "8547": 360, "0105": 360, "7212": 360, "479": 360, "9848": 360, "0019": 360, "6498": 360, "1987": 360, "0011": 360, "5473": 360, "8991": 360, "6091": 360, "9189": 360, "5771": 360, "483": 360, "6781": 360, "7542": 360, "484": 360, "5959": 360, "0064": 360, "2547": 360, "486": 360, "0636": 360, "547": 360, "487": 360, "0065": 360, "1694": 360, "0083": 360, "5759": 360, "0493": 360, "0021": 360, "7805": 360, "490": 360, "0950": 360, "497": 360, "9717": 360, "3672": 360, "492": 360, "0207": 360, "8266": 360, "5365": 360, "2623": 360, "5078": 360, "495": 360, "4545": 360, "09636": 360, "8754": 360, "0010": 360, "498": 360, "0031": 360, "8269": 360, "499": 360, "6642": 360, "2284": 360, "501": 360, "9130": 360, "0008": 360, "502": 360, "503": 360, "7624": 360, "0056": 360, "3858": 360, "504": 360, "0890": 360, "0042": 360, "505": 360, "7505": 360, "2157": 360, "506": 360, "8394": 360, "3413": 360, "507": 360, "9609": 360, "0041": 360, "6905": 360, "508": 360, "8467": 360, "4409": 360, "509": 360, "510": 360, "8128": 360, "3559": 360, "511": 360, "1479": 360, "0264": 360, "1589": 360, "566": 360, "513": 360, "2756": 360, "0046": 360, "5266": 360, "514": 360, "9873": 360, "0112": 360, "9314": 360, "515": 360, "3791": 360, "0721": 360, "516": 360, "4580": 360, "0758": 360, "6114": 360, "517": 360, "2431": 360, "518": 360, "1958": 360, "5553": 360, "8924": 360, "0097": 360, "520": 360, "3737": 360, "0234": 360, "521": 360, "9125": 360, "4623": 360, "3230": 360, "0589": 360, "3784": 360, "523": 360, "9482": 360, "0051": 360, "524": 360, "1979": 360, "0045": 360, "6401": 360, "525": 360, "1588": 360, "0048": 360, "6255": 360, "526": 360, "6084": 360, "3477": 360, "1475": 360, "0209": 360, "528": 360, "7611": 360, "1040": 360, "0099": 360, "0173": 360, "643": 360, "530": 360, "8189": 360, "4358": 360, "531": 360, "9897": 360, "532": 360, "1548": 360, "9751": 360, "533": 360, "6362": 360, "7495": 360, "534": 360, "1749": 360, "9513": 360, "535": 360, "7708": 360, "0371": 360, "536": 360, "2649": 360, "0437": 360, "537": 360, "5491": 360, "0276": 360, "6426": 360, "7294": 360, "078e": 360, "539": 360, "9928": 360, "540": 360, "7937": 360, "0124": 360, "9664": 360, "3342": 360, "542": 360, "2046": 360, "5496": 360, "0956": 360, "0059": 360, "545": 360, "9028": 360, "5843": 360, "546": 360, "0674": 360, "0178": 360, "797": 360, "2815": 360, "0599": 360, "1587": 360, "9276": 360, "8228": 360, "6164": 360, "551": 360, "6850": 360, "9167": 360, "3092": 360, "0670": 360, "9177": 360, "553": 360, "1599": 360, "0043": 360, "554": 360, "6367": 360, "555": 360, "556": 360, "6694": 360, "2622": 360, "0372": 360, "4841": 360, "558": 360, "2707": 360, "757": 360, "559": 360, "2267": 360, "5415": 360, "560": 360, "4556": 360, "0163": 360, "561": 360, "1839": 360, "0809": 360, "6262": 360, "562": 360, "0278": 360, "1112": 360, "6155": 360, "565": 360, "1427": 360, "3582": 360, "624": 360, "7870": 360, "9490": 360, "0439": 360, "8796": 360, "8026": 360, "612": 360, "569": 360, "3147": 360, "8486": 360, "570": 360, "7917": 360, "0129": 360, "571": 360, "9553": 360, "0020": 360, "6871": 360, "572": 360, "3132": 360, "0159": 360, "8646": 360, "573": 360, "5320": 360, "0269": 360, "574": 360, "2955": 360, "0245": 360, "575": 360, "3347": 360, "0179": 360, "9718": 360, "1629": 360, "804": 360, "577": 360, "4164": 360, "0070": 360, "4335": 360, "578": 360, "579": 360, "3049": 360, "9063": 360, "580": 360, "8785": 360, "3295": 360, "5184": 360, "0546": 360, "582": 360, "4589": 360, "583": 360, "4697": 360, "2476": 360, "584": 360, "2397": 360, "585": 360, "4953": 360, "1775": 360, "586": 360, "2258": 360, "0110": 360, "7671": 360, "587": 360, "3981": 360, "8590": 360, "0007": 360, "589": 360, "9820": 360, "4221": 360, "590": 360, "1293": 360, "0116": 360, "868": 360, "1675": 360, "5931": 360, "592": 360, "2910": 360, "5219": 360, "2124": 360, "1730": 360, "737": 360, "594": 360, "2914": 360, "0206": 360, "595": 360, "0172": 360, "3982": 360, "0945": 360, "0121": 360, "4789": 360, "597": 360, "3805": 360, "4074": 360, "598": 360, "3310": 360, "5065": 360, "6028": 360, "6316": 360, "6724": 360, "6523": 360, "601": 360, "0136": 360, "4298": 360, "602": 360, "3524": 360, "2629": 360, "603": 360, "2635": 360, "7839": 360, "604": 360, "6041": 360, "8027": 360, "4170": 360, "4675": 360, "606": 360, "3153": 360, "9316": 360, "607": 360, "0649": 360, "9722": 360, "7989": 360, "0329": 360, "609": 360, "1976": 360, "6852": 360, "610": 360, "4793": 360, "1255": 360, "611": 360, "4581": 360, "0394": 360, "2047": 360, "0326": 360, "613": 360, "8967": 360, "8619": 360, "614": 360, "5906": 360, "6491": 360, "615": 360, "6634": 360, "4394": 360, "616": 360, "0624": 360, "0061": 360, "5676": 360, "3259": 360, "0131": 360, "7733": 360, "618": 360, "7515": 360, "0189": 360, "5575": 360, "619": 360, "9313": 360, "6286": 360, "620": 360, "4325": 360, "7832": 360, "621": 360, "1134": 360, "622": 360, "4572": 360, "0500": 360, "5838": 360, "623": 360, "3818": 360, "8623": 360, "1253": 360, "6622": 360, "subject": 360, "explain": 361, "semat": 361, "r3mtransform": 361, "env_transform": [361, 365], "s3": 361, "amazonaw": 361, "r3m_50": 361, "374m": 361, "9m": 361, "128mb": 361, "1mb": 361, "4mb": 361, "2m": 361, "6m": 361, "2mb": 361, "0m": 361, "7mb": 361, "106m": 361, "115m": 361, "130m": 361, "5mb": 361, "140m": 361, "148m": 361, "0mb": 361, "162m": 361, "171m": 361, "180m": 361, "195m": 361, "203m": 361, "212m": 361, "219m": 361, "8mb": 361, "229m": 361, "244m": 361, "251m": 361, "9mb": 361, "262m": 361, "277m": 361, "283m": 361, "295m": 361, "6mb": 361, "308m": 361, "316m": 361, "3mb": 361, "326m": 361, "333m": 361, "344m": 361, "360m": 361, "373m": 361, "wiser": 361, "_storag": [361, 362], "pull": 362, "batteri": 362, "filesystem": 362, "buffer_list": 362, "lowest": 362, "medium": 362, "buffer_lazytensor": 362, "buffer_lazymemmap": 362, "tempdir": 362, "tmp7h5399w7": 362, "fullest": 362, "mydata": 362, "background": 362, "question": [362, 364], "_i": 362, "artifici": 362, "0893e": 362, "hamper": 362, "she": 362, "pars": 362, "proport": 362, "hist": 362, "barcontain": 362, "artist": 362, "reappear": 362, "unfold": 362, "problemat": 362, "4th": 362, "794": 362, "1106": 362, "ret": 362, "_sampl": 362, "decorated_fun": 362, "1146": 362, "_transform": 362, "1541": [362, 365], "1051": 362, "2988": 362, "3113": 362, "rep": 362, "tensorlist": 362, "prioritizedslicesampl": 362, "tensordictmaxvaluewrit": 362, "2759": 362, "demo": 364, "icml": 364, "vmoen": 364, "fb": 364, "invest": 364, "platform": 364, "media": 364, "predominantli": 364, "tensordict1": 364, "tensordict2": 364, "tensordict_sampl": 364, "_sampler": 364, "_sum_tre": 364, "modulenotfounderror": 364, "28791671991348267": 364, "06984967738389969": 364, "noopresetenv": [364, 365], "6400": 364, "backbone_modul": 364, "params_expand": 364, "exec_sequ": 364, "tensordict_exp": 364, "base_modul": 364, "0137": 364, "1524": 364, "0641": 364, "viewbackward0": 364, "asstridedbackward0": 364, "8728": 364, "1334": 364, "3494": 364, "6887": 364, "6402": 364, "_safetanhbackward": 364, "1132": 364, "1762": 364, "3430": 364, "2668": 364, "2918": 364, "6239": 364, "roughli": 364, "tensordicts_prealloc": 364, "tensordicts_stack": 364, "tensordict_rollout": [364, 365], "disclaim": 364, "concatmodul": 364, "loss_td": 364, "year": 364, "roadmap": 364, "compris": 364, "contributor": 364, "curiou": 364, "nascent": 364, "unsupervis": 365, "unifi": 365, "_build_env": 365, "amidar": 365, "assault": 365, "1945": 365, "deserv": 365, "__episode__": 365, "__trajectory__": 365, "void": 365, "reproduct": 365, "tensordict_tprim": 365, "2562": 365, "_rollout_stop_earli": 365, "2630": 365, "1224": 365, "err": 365, "1198": 365, "_call_modul": 365, "1141": 365, "1525": 365, "imshow": 365, "wrapper1": 365, "wrapper2": 365, "obviou": 365, "truth": 365, "env0": 365, "env_transformed_bi": 365, "stanc": 365, "transformeddistribut": 365, "base_dist": 365, "concat": 365, "mofidi": 365, "transformedenviron": 365, "moderet": 365, "computation": 365, "legitim": 365, "incom": 365, "amongst": 365, "has_cuda": 365, "wor": 365, "convention": 365, "markovian": 365, "constain": 365, "bar_": 365, "get_someth": 365, "aargh": 365, "foo_list": 365, "parallen": 365, "particularili": 365, "evolv": 365, "steadi": 365, "approx": 365, "_extra_st": 365, "observation_ssq": 365, "observation_sum": 365, "dispach": 365, "absor": 365, "2487": 365}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "SyncDataCollector"], [16, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[15, 1, 1, "", "iterator"], [15, 1, 1, "", "load_state_dict"], [15, 1, 1, "", "reset"], [15, 1, 1, "", "rollout"], [15, 1, 1, "", "set_seed"], [15, 1, 1, "", "shutdown"], [15, 1, 1, "", "state_dict"], [15, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[17, 0, 1, "", "DistributedDataCollector"], [18, 0, 1, "", "DistributedSyncDataCollector"], [19, 0, 1, "", "RPCDataCollector"], [20, 0, 1, "", "RayCollector"], [21, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[20, 1, 1, "", "add_collectors"], [20, 1, 1, "", "load_state_dict"], [20, 1, 1, "", "local_policy"], [20, 1, 1, "", "remote_collectors"], [20, 1, 1, "", "set_seed"], [20, 1, 1, "", "shutdown"], [20, 1, 1, "", "state_dict"], [20, 1, 1, "", "stop_remote_collectors"], [20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[22, 2, 1, "", "split_trajectories"]], "torchrl.data": [[23, 0, 1, "", "BinaryDiscreteTensorSpec"], [24, 0, 1, "", "BoundedTensorSpec"], [25, 0, 1, "", "CompositeSpec"], [26, 0, 1, "", "DiscreteTensorSpec"], [27, 0, 1, "", "LazyStackedCompositeSpec"], [28, 0, 1, "", "LazyStackedTensorSpec"], [29, 0, 1, "", "MultiDiscreteTensorSpec"], [30, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [31, 0, 1, "", "MultiStep"], [32, 0, 1, "", "OneHotDiscreteTensorSpec"], [33, 0, 1, "", "PairwiseDataset"], [34, 0, 1, "", "PrioritizedReplayBuffer"], [35, 0, 1, "", "PromptData"], [36, 0, 1, "", "PromptTensorDictTokenizer"], [37, 0, 1, "", "ReplayBuffer"], [38, 0, 1, "", "RewardData"], [39, 0, 1, "", "RolloutFromModel"], [40, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [41, 0, 1, "", "TensorDictReplayBuffer"], [42, 0, 1, "", "TensorDictTokenizer"], [43, 0, 1, "", "TensorSpec"], [44, 0, 1, "", "TokenizedDatasetLoader"], [45, 0, 1, "", "UnboundedContinuousTensorSpec"], [46, 0, 1, "", "UnboundedDiscreteTensorSpec"], [47, 0, 1, "", "check_no_exclusive_keys"], [48, 0, 1, "", "consolidate_spec"], [49, 0, 1, "", "contains_lazy_spec"], [50, 0, 1, "", "create_infinite_iterator"], [60, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[23, 1, 1, "", "assert_is_in"], [23, 1, 1, "", "clear_device_"], [23, 1, 1, "", "encode"], [23, 1, 1, "", "expand"], [23, 1, 1, "", "flatten"], [23, 1, 1, "", "implements_for_spec"], [23, 1, 1, "", "index"], [23, 1, 1, "", "is_in"], [23, 1, 1, "", "project"], [23, 1, 1, "", "rand"], [23, 1, 1, "", "reshape"], [23, 1, 1, "", "squeeze"], [23, 1, 1, "", "to_numpy"], [23, 1, 1, "", "to_one_hot"], [23, 1, 1, "", "to_one_hot_spec"], [23, 1, 1, "", "type_check"], [23, 1, 1, "", "unflatten"], [23, 1, 1, "", "view"], [23, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "clear_device_"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "flatten"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "reshape"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "unflatten"], [24, 1, 1, "", "view"], [24, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "clear_device_"], [25, 1, 1, "", "empty"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "flatten"], [25, 1, 1, "", "get"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_empty"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "items"], [25, 1, 1, "", "keys"], [25, 1, 1, "", "lock_"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "reshape"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "unflatten"], [25, 1, 1, "", "unlock_"], [25, 1, 1, "", "values"], [25, 1, 1, "", "view"], [25, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "clear_device_"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "flatten"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "reshape"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "to_one_hot"], [26, 1, 1, "", "to_one_hot_spec"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unflatten"], [26, 1, 1, "", "view"], [26, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "clear_device_"], [27, 1, 1, "", "empty"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "flatten"], [27, 1, 1, "", "get"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_empty"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "items"], [27, 1, 1, "", "keys"], [27, 1, 1, "", "lock_"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "reshape"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "unflatten"], [27, 1, 1, "", "unlock_"], [27, 1, 1, "", "values"], [27, 1, 1, "", "view"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "clear_device_"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "flatten"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "reshape"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unflatten"], [28, 1, 1, "", "view"], [28, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "clear_device_"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "flatten"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "reshape"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "to_one_hot"], [29, 1, 1, "", "to_one_hot_spec"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "unflatten"], [29, 1, 1, "", "view"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "clear_device_"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "flatten"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "reshape"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_categorical"], [30, 1, 1, "", "to_categorical_spec"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "unflatten"], [30, 1, 1, "", "view"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[31, 1, 1, "", "add_module"], [31, 1, 1, "", "apply"], [31, 1, 1, "", "bfloat16"], [31, 1, 1, "", "buffers"], [31, 1, 1, "", "children"], [31, 1, 1, "", "compile"], [31, 1, 1, "", "cpu"], [31, 1, 1, "", "cuda"], [31, 1, 1, "", "double"], [31, 1, 1, "", "eval"], [31, 1, 1, "", "extra_repr"], [31, 1, 1, "", "float"], [31, 1, 1, "", "forward"], [31, 1, 1, "", "get_buffer"], [31, 1, 1, "", "get_extra_state"], [31, 1, 1, "", "get_parameter"], [31, 1, 1, "", "get_submodule"], [31, 1, 1, "", "half"], [31, 1, 1, "", "ipu"], [31, 1, 1, "", "load_state_dict"], [31, 1, 1, "", "modules"], [31, 1, 1, "", "named_buffers"], [31, 1, 1, "", "named_children"], [31, 1, 1, "", "named_modules"], [31, 1, 1, "", "named_parameters"], [31, 1, 1, "", "parameters"], [31, 1, 1, "", "register_backward_hook"], [31, 1, 1, "", "register_buffer"], [31, 1, 1, "", "register_forward_hook"], [31, 1, 1, "", "register_forward_pre_hook"], [31, 1, 1, "", "register_full_backward_hook"], [31, 1, 1, "", "register_full_backward_pre_hook"], [31, 1, 1, "", "register_load_state_dict_post_hook"], [31, 1, 1, "", "register_module"], [31, 1, 1, "", "register_parameter"], [31, 1, 1, "", "register_state_dict_pre_hook"], [31, 1, 1, "", "requires_grad_"], [31, 1, 1, "", "set_extra_state"], [31, 1, 1, "", "share_memory"], [31, 1, 1, "", "state_dict"], [31, 1, 1, "", "to"], [31, 1, 1, "", "to_empty"], [31, 1, 1, "", "train"], [31, 1, 1, "", "type"], [31, 1, 1, "", "xpu"], [31, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[32, 1, 1, "", "assert_is_in"], [32, 1, 1, "", "clear_device_"], [32, 1, 1, "", "encode"], [32, 1, 1, "", "expand"], [32, 1, 1, "", "flatten"], [32, 1, 1, "", "implements_for_spec"], [32, 1, 1, "", "index"], [32, 1, 1, "", "is_in"], [32, 1, 1, "", "project"], [32, 1, 1, "", "rand"], [32, 1, 1, "", "reshape"], [32, 1, 1, "", "squeeze"], [32, 1, 1, "", "to_categorical"], [32, 1, 1, "", "to_categorical_spec"], [32, 1, 1, "", "to_numpy"], [32, 1, 1, "", "type_check"], [32, 1, 1, "", "unflatten"], [32, 1, 1, "", "view"], [32, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[33, 3, 1, "", "batch_size"], [33, 3, 1, "", "device"], [33, 1, 1, "", "from_dataset"], [33, 1, 1, "", "from_tensordict"], [33, 1, 1, "", "get"], [33, 1, 1, "", "load_memmap"], [33, 1, 1, "", "load_state_dict"], [33, 1, 1, "", "memmap"], [33, 1, 1, "", "memmap_"], [33, 1, 1, "", "memmap_like"], [33, 3, 1, "", "names"], [33, 1, 1, "", "set"], [33, 1, 1, "", "state_dict"], [33, 1, 1, "", "to_tensordict"], [33, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[34, 1, 1, "", "add"], [34, 1, 1, "", "append_transform"], [34, 1, 1, "", "dumps"], [34, 1, 1, "", "empty"], [34, 1, 1, "", "extend"], [34, 1, 1, "", "insert_transform"], [34, 1, 1, "", "loads"], [34, 1, 1, "", "sample"], [34, 3, 1, "", "sampler"], [34, 1, 1, "", "set_sampler"], [34, 1, 1, "", "set_storage"], [34, 1, 1, "", "set_writer"], [34, 3, 1, "", "storage"], [34, 3, 1, "", "writer"]], "torchrl.data.PromptData": [[35, 3, 1, "", "batch_size"], [35, 3, 1, "", "device"], [35, 1, 1, "", "from_dataset"], [35, 1, 1, "", "from_tensordict"], [35, 1, 1, "", "get"], [35, 1, 1, "", "load_memmap"], [35, 1, 1, "", "load_state_dict"], [35, 1, 1, "", "memmap"], [35, 1, 1, "", "memmap_"], [35, 1, 1, "", "memmap_like"], [35, 3, 1, "", "names"], [35, 1, 1, "", "set"], [35, 1, 1, "", "state_dict"], [35, 1, 1, "", "to_tensordict"], [35, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[37, 1, 1, "", "add"], [37, 1, 1, "", "append_transform"], [37, 1, 1, "", "dumps"], [37, 1, 1, "", "empty"], [37, 1, 1, "", "extend"], [37, 1, 1, "", "insert_transform"], [37, 1, 1, "", "loads"], [37, 1, 1, "", "sample"], [37, 3, 1, "", "sampler"], [37, 1, 1, "", "set_sampler"], [37, 1, 1, "", "set_storage"], [37, 1, 1, "", "set_writer"], [37, 3, 1, "", "storage"], [37, 3, 1, "", "writer"]], "torchrl.data.RewardData": [[38, 3, 1, "", "batch_size"], [38, 3, 1, "", "device"], [38, 1, 1, "", "from_tensordict"], [38, 1, 1, "", "get"], [38, 1, 1, "", "load_memmap"], [38, 1, 1, "", "load_state_dict"], [38, 1, 1, "", "memmap"], [38, 1, 1, "", "memmap_"], [38, 1, 1, "", "memmap_like"], [38, 3, 1, "", "names"], [38, 1, 1, "", "set"], [38, 1, 1, "", "state_dict"], [38, 1, 1, "", "to_tensordict"], [38, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[39, 1, 1, "", "create_rollout_td"], [39, 1, 1, "", "generate"], [39, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[40, 1, 1, "", "add"], [40, 1, 1, "", "append_transform"], [40, 1, 1, "", "dumps"], [40, 1, 1, "", "empty"], [40, 1, 1, "", "extend"], [40, 1, 1, "", "insert_transform"], [40, 1, 1, "", "loads"], [40, 1, 1, "", "sample"], [40, 3, 1, "", "sampler"], [40, 1, 1, "", "set_sampler"], [40, 1, 1, "", "set_storage"], [40, 1, 1, "", "set_writer"], [40, 3, 1, "", "storage"], [40, 3, 1, "", "writer"]], "torchrl.data.TensorDictReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"], [41, 3, 1, "", "sampler"], [41, 1, 1, "", "set_sampler"], [41, 1, 1, "", "set_storage"], [41, 1, 1, "", "set_writer"], [41, 3, 1, "", "storage"], [41, 3, 1, "", "writer"]], "torchrl.data.TensorSpec": [[43, 1, 1, "", "assert_is_in"], [43, 1, 1, "", "clear_device_"], [43, 1, 1, "", "encode"], [43, 1, 1, "", "expand"], [43, 1, 1, "", "flatten"], [43, 1, 1, "", "implements_for_spec"], [43, 1, 1, "", "index"], [43, 1, 1, "", "is_in"], [43, 1, 1, "", "project"], [43, 1, 1, "", "rand"], [43, 1, 1, "", "reshape"], [43, 1, 1, "", "squeeze"], [43, 1, 1, "", "to_numpy"], [43, 1, 1, "", "type_check"], [43, 1, 1, "", "unflatten"], [43, 1, 1, "", "view"], [43, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[44, 1, 1, "", "dataset_to_tensordict"], [44, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[45, 1, 1, "", "assert_is_in"], [45, 1, 1, "", "clear_device_"], [45, 1, 1, "", "encode"], [45, 1, 1, "", "expand"], [45, 1, 1, "", "flatten"], [45, 1, 1, "", "implements_for_spec"], [45, 1, 1, "", "index"], [45, 1, 1, "", "is_in"], [45, 1, 1, "", "project"], [45, 1, 1, "", "rand"], [45, 1, 1, "", "reshape"], [45, 1, 1, "", "squeeze"], [45, 1, 1, "", "to_numpy"], [45, 1, 1, "", "type_check"], [45, 1, 1, "", "unflatten"], [45, 1, 1, "", "view"], [45, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "clear_device_"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "flatten"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "reshape"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "unflatten"], [46, 1, 1, "", "view"], [46, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "AtariDQNExperienceReplay"], [52, 0, 1, "", "BaseDatasetExperienceReplay"], [53, 0, 1, "", "D4RLExperienceReplay"], [54, 0, 1, "", "GenDGRLExperienceReplay"], [55, 0, 1, "", "MinariExperienceReplay"], [56, 0, 1, "", "OpenMLExperienceReplay"], [57, 0, 1, "", "OpenXExperienceReplay"], [58, 0, 1, "", "RobosetExperienceReplay"], [59, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.AtariDQNExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 3, 1, "", "data_path"], [51, 3, 1, "", "data_path_root"], [51, 1, 1, "", "delete"], [51, 1, 1, "", "dumps"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "loads"], [51, 1, 1, "", "preprocess"], [51, 1, 1, "", "sample"], [51, 3, 1, "", "sampler"], [51, 1, 1, "", "set_sampler"], [51, 1, 1, "", "set_storage"], [51, 1, 1, "", "set_writer"], [51, 3, 1, "", "storage"], [51, 3, 1, "", "writer"]], "torchrl.data.datasets.BaseDatasetExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 3, 1, "", "data_path"], [52, 3, 1, "", "data_path_root"], [52, 1, 1, "", "delete"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "preprocess"], [52, 1, 1, "", "sample"], [52, 3, 1, "", "sampler"], [52, 1, 1, "", "set_sampler"], [52, 1, 1, "", "set_storage"], [52, 1, 1, "", "set_writer"], [52, 3, 1, "", "storage"], [52, 3, 1, "", "writer"]], "torchrl.data.datasets.D4RLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 3, 1, "", "data_path"], [53, 3, 1, "", "data_path_root"], [53, 1, 1, "", "delete"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "preprocess"], [53, 1, 1, "", "sample"], [53, 3, 1, "", "sampler"], [53, 1, 1, "", "set_sampler"], [53, 1, 1, "", "set_storage"], [53, 1, 1, "", "set_writer"], [53, 3, 1, "", "storage"], [53, 3, 1, "", "writer"]], "torchrl.data.datasets.GenDGRLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 3, 1, "", "data_path"], [54, 3, 1, "", "data_path_root"], [54, 1, 1, "", "delete"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "preprocess"], [54, 1, 1, "", "sample"], [54, 3, 1, "", "sampler"], [54, 1, 1, "", "set_sampler"], [54, 1, 1, "", "set_storage"], [54, 1, 1, "", "set_writer"], [54, 3, 1, "", "storage"], [54, 3, 1, "", "writer"]], "torchrl.data.datasets.MinariExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 3, 1, "", "data_path"], [55, 3, 1, "", "data_path_root"], [55, 1, 1, "", "delete"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "preprocess"], [55, 1, 1, "", "sample"], [55, 3, 1, "", "sampler"], [55, 1, 1, "", "set_sampler"], [55, 1, 1, "", "set_storage"], [55, 1, 1, "", "set_writer"], [55, 3, 1, "", "storage"], [55, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 3, 1, "", "data_path"], [56, 3, 1, "", "data_path_root"], [56, 1, 1, "", "delete"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "preprocess"], [56, 1, 1, "", "sample"], [56, 3, 1, "", "sampler"], [56, 1, 1, "", "set_sampler"], [56, 1, 1, "", "set_storage"], [56, 1, 1, "", "set_writer"], [56, 3, 1, "", "storage"], [56, 3, 1, "", "writer"]], "torchrl.data.datasets.OpenXExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 3, 1, "", "data_path"], [57, 3, 1, "", "data_path_root"], [57, 1, 1, "", "delete"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "preprocess"], [57, 1, 1, "", "sample"], [57, 3, 1, "", "sampler"], [57, 1, 1, "", "set_sampler"], [57, 1, 1, "", "set_storage"], [57, 1, 1, "", "set_writer"], [57, 3, 1, "", "storage"], [57, 3, 1, "", "writer"]], "torchrl.data.datasets.RobosetExperienceReplay": [[58, 1, 1, "", "add"], [58, 1, 1, "", "append_transform"], [58, 3, 1, "", "data_path"], [58, 3, 1, "", "data_path_root"], [58, 1, 1, "", "delete"], [58, 1, 1, "", "dumps"], [58, 1, 1, "", "empty"], [58, 1, 1, "", "extend"], [58, 1, 1, "", "insert_transform"], [58, 1, 1, "", "loads"], [58, 1, 1, "", "preprocess"], [58, 1, 1, "", "sample"], [58, 3, 1, "", "sampler"], [58, 1, 1, "", "set_sampler"], [58, 1, 1, "", "set_storage"], [58, 1, 1, "", "set_writer"], [58, 3, 1, "", "storage"], [58, 3, 1, "", "writer"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[59, 1, 1, "", "add"], [59, 1, 1, "", "append_transform"], [59, 3, 1, "", "data_path"], [59, 3, 1, "", "data_path_root"], [59, 1, 1, "", "delete"], [59, 1, 1, "", "dumps"], [59, 1, 1, "", "empty"], [59, 1, 1, "", "extend"], [59, 1, 1, "", "insert_transform"], [59, 1, 1, "", "loads"], [59, 1, 1, "", "preprocess"], [59, 1, 1, "", "sample"], [59, 3, 1, "", "sampler"], [59, 1, 1, "", "set_sampler"], [59, 1, 1, "", "set_storage"], [59, 1, 1, "", "set_writer"], [59, 3, 1, "", "storage"], [59, 3, 1, "", "writer"]], "torchrl.data.replay_buffers": [[61, 0, 1, "", "ImmutableDatasetWriter"], [62, 0, 1, "", "LazyMemmapStorage"], [63, 0, 1, "", "LazyTensorStorage"], [64, 0, 1, "", "ListStorage"], [65, 0, 1, "", "PrioritizedSampler"], [66, 0, 1, "", "PrioritizedSliceSampler"], [67, 0, 1, "", "RandomSampler"], [68, 0, 1, "", "ReplayBufferEnsemble"], [69, 0, 1, "", "RoundRobinWriter"], [70, 0, 1, "", "Sampler"], [71, 0, 1, "", "SamplerEnsemble"], [72, 0, 1, "", "SamplerWithoutReplacement"], [73, 0, 1, "", "SliceSampler"], [74, 0, 1, "", "SliceSamplerWithoutReplacement"], [75, 0, 1, "", "Storage"], [76, 0, 1, "", "StorageEnsemble"], [77, 0, 1, "", "TensorDictMaxValueWriter"], [78, 0, 1, "", "TensorDictRoundRobinWriter"], [79, 0, 1, "", "TensorStorage"], [80, 0, 1, "", "Writer"], [81, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[61, 1, 1, "", "add"], [61, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[65, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.PrioritizedSliceSampler": [[66, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[68, 1, 1, "", "add"], [68, 1, 1, "", "append_transform"], [68, 1, 1, "", "dumps"], [68, 1, 1, "", "empty"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "insert_transform"], [68, 1, 1, "", "loads"], [68, 1, 1, "", "sample"], [68, 3, 1, "", "sampler"], [68, 1, 1, "", "set_sampler"], [68, 1, 1, "", "set_storage"], [68, 1, 1, "", "set_writer"], [68, 3, 1, "", "storage"], [68, 3, 1, "", "writer"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[69, 1, 1, "", "add"], [69, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[75, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"], [77, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[79, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[80, 1, 1, "", "add"], [80, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[81, 1, 1, "", "add"], [81, 1, 1, "", "extend"]], "torchrl.envs": [[82, 2, 1, "", "BraxEnv"], [83, 2, 1, "", "BraxWrapper"], [84, 2, 1, "", "DMControlEnv"], [85, 2, 1, "", "DMControlWrapper"], [86, 0, 1, "", "EnvBase"], [87, 0, 1, "", "EnvCreator"], [88, 0, 1, "", "EnvMetaData"], [89, 2, 1, "", "GymEnv"], [90, 0, 1, "", "GymLikeEnv"], [91, 2, 1, "", "GymWrapper"], [92, 2, 1, "", "HabitatEnv"], [93, 2, 1, "", "IsaacGymEnv"], [94, 2, 1, "", "IsaacGymWrapper"], [95, 2, 1, "", "JumanjiEnv"], [96, 2, 1, "", "JumanjiWrapper"], [97, 2, 1, "", "MOGymEnv"], [98, 2, 1, "", "MOGymWrapper"], [99, 2, 1, "", "MarlGroupMapType"], [100, 2, 1, "", "ModelBasedEnvBase"], [101, 2, 1, "", "MultiThreadedEnv"], [102, 2, 1, "", "MultiThreadedEnvWrapper"], [103, 2, 1, "", "OpenMLEnv"], [104, 0, 1, "", "ParallelEnv"], [105, 2, 1, "", "PettingZooEnv"], [106, 2, 1, "", "PettingZooWrapper"], [107, 2, 1, "", "RoboHiveEnv"], [108, 2, 1, "", "SMACv2Env"], [109, 2, 1, "", "SMACv2Wrapper"], [110, 0, 1, "", "SerialEnv"], [111, 2, 1, "", "VmasEnv"], [112, 2, 1, "", "VmasWrapper"], [113, 2, 1, "", "check_marl_grouping"], [114, 2, 1, "", "gym_backend"], [100, 1, 1, "", "rand_step"], [100, 1, 1, "", "reset"], [100, 1, 1, "", "rollout"], [116, 2, 1, "", "set_gym_backend"], [100, 1, 1, "", "set_seed"], [100, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[86, 3, 1, "", "action_key"], [86, 3, 1, "", "action_keys"], [86, 3, 1, "", "action_spec"], [86, 1, 1, "", "add_module"], [86, 1, 1, "", "add_truncated_keys"], [86, 1, 1, "", "append_transform"], [86, 1, 1, "", "apply"], [86, 3, 1, "", "batch_locked"], [86, 3, 1, "", "batch_size"], [86, 1, 1, "", "bfloat16"], [86, 1, 1, "", "buffers"], [86, 1, 1, "", "children"], [86, 1, 1, "", "compile"], [86, 1, 1, "", "cpu"], [86, 1, 1, "", "cuda"], [86, 3, 1, "", "done_key"], [86, 3, 1, "", "done_keys"], [86, 3, 1, "", "done_keys_groups"], [86, 3, 1, "", "done_spec"], [86, 1, 1, "", "double"], [86, 1, 1, "", "empty_cache"], [86, 1, 1, "", "eval"], [86, 1, 1, "", "extra_repr"], [86, 1, 1, "", "fake_tensordict"], [86, 1, 1, "", "float"], [86, 1, 1, "", "forward"], [86, 3, 1, "", "full_action_spec"], [86, 3, 1, "", "full_done_spec"], [86, 3, 1, "", "full_reward_spec"], [86, 3, 1, "", "full_state_spec"], [86, 1, 1, "", "get_buffer"], [86, 1, 1, "", "get_extra_state"], [86, 1, 1, "", "get_parameter"], [86, 1, 1, "", "get_submodule"], [86, 1, 1, "", "half"], [86, 3, 1, "", "input_spec"], [86, 1, 1, "", "ipu"], [86, 1, 1, "", "load_state_dict"], [86, 1, 1, "", "maybe_reset"], [86, 1, 1, "", "modules"], [86, 1, 1, "", "named_buffers"], [86, 1, 1, "", "named_children"], [86, 1, 1, "", "named_modules"], [86, 1, 1, "", "named_parameters"], [86, 3, 1, "", "observation_spec"], [86, 3, 1, "", "output_spec"], [86, 1, 1, "", "parameters"], [86, 1, 1, "", "rand_action"], [86, 1, 1, "id0", "rand_step"], [86, 1, 1, "", "register_backward_hook"], [86, 1, 1, "", "register_buffer"], [86, 1, 1, "", "register_forward_hook"], [86, 1, 1, "", "register_forward_pre_hook"], [86, 1, 1, "", "register_full_backward_hook"], [86, 1, 1, "", "register_full_backward_pre_hook"], [86, 1, 1, "", "register_gym"], [86, 1, 1, "", "register_load_state_dict_post_hook"], [86, 1, 1, "", "register_module"], [86, 1, 1, "", "register_parameter"], [86, 1, 1, "", "register_state_dict_pre_hook"], [86, 1, 1, "", "requires_grad_"], [86, 1, 1, "id1", "reset"], [86, 3, 1, "", "reset_keys"], [86, 3, 1, "", "reward_key"], [86, 3, 1, "", "reward_keys"], [86, 3, 1, "", "reward_spec"], [86, 1, 1, "id2", "rollout"], [86, 1, 1, "", "set_extra_state"], [86, 1, 1, "id3", "set_seed"], [86, 3, 1, "", "shape"], [86, 1, 1, "", "share_memory"], [86, 3, 1, "", "specs"], [86, 1, 1, "", "state_dict"], [86, 3, 1, "", "state_spec"], [86, 1, 1, "id4", "step"], [86, 1, 1, "", "step_and_maybe_reset"], [86, 1, 1, "", "to"], [86, 1, 1, "", "to_empty"], [86, 1, 1, "", "train"], [86, 1, 1, "", "type"], [86, 1, 1, "", "xpu"], [86, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[90, 3, 1, "", "action_key"], [90, 3, 1, "", "action_keys"], [90, 3, 1, "", "action_spec"], [90, 1, 1, "", "add_module"], [90, 1, 1, "", "add_truncated_keys"], [90, 1, 1, "", "append_transform"], [90, 1, 1, "", "apply"], [90, 1, 1, "", "auto_register_info_dict"], [90, 3, 1, "", "batch_locked"], [90, 3, 1, "", "batch_size"], [90, 1, 1, "", "bfloat16"], [90, 1, 1, "", "buffers"], [90, 1, 1, "", "children"], [90, 1, 1, "", "close"], [90, 1, 1, "", "compile"], [90, 1, 1, "", "cpu"], [90, 1, 1, "", "cuda"], [90, 3, 1, "", "done_key"], [90, 3, 1, "", "done_keys"], [90, 3, 1, "", "done_keys_groups"], [90, 3, 1, "", "done_spec"], [90, 1, 1, "", "double"], [90, 1, 1, "", "empty_cache"], [90, 1, 1, "", "eval"], [90, 1, 1, "", "extra_repr"], [90, 1, 1, "", "fake_tensordict"], [90, 1, 1, "", "float"], [90, 1, 1, "", "forward"], [90, 3, 1, "", "full_action_spec"], [90, 3, 1, "", "full_done_spec"], [90, 3, 1, "", "full_reward_spec"], [90, 3, 1, "", "full_state_spec"], [90, 1, 1, "", "get_buffer"], [90, 1, 1, "", "get_extra_state"], [90, 1, 1, "", "get_parameter"], [90, 1, 1, "", "get_submodule"], [90, 1, 1, "", "half"], [90, 3, 1, "", "input_spec"], [90, 1, 1, "", "ipu"], [90, 1, 1, "", "load_state_dict"], [90, 1, 1, "", "maybe_reset"], [90, 1, 1, "", "modules"], [90, 1, 1, "", "named_buffers"], [90, 1, 1, "", "named_children"], [90, 1, 1, "", "named_modules"], [90, 1, 1, "", "named_parameters"], [90, 3, 1, "", "observation_spec"], [90, 3, 1, "", "output_spec"], [90, 1, 1, "", "parameters"], [90, 1, 1, "", "rand_action"], [90, 1, 1, "", "rand_step"], [90, 1, 1, "", "read_action"], [90, 1, 1, "", "read_done"], [90, 1, 1, "", "read_obs"], [90, 1, 1, "", "read_reward"], [90, 1, 1, "", "register_backward_hook"], [90, 1, 1, "", "register_buffer"], [90, 1, 1, "", "register_forward_hook"], [90, 1, 1, "", "register_forward_pre_hook"], [90, 1, 1, "", "register_full_backward_hook"], [90, 1, 1, "", "register_full_backward_pre_hook"], [90, 1, 1, "", "register_gym"], [90, 1, 1, "", "register_load_state_dict_post_hook"], [90, 1, 1, "", "register_module"], [90, 1, 1, "", "register_parameter"], [90, 1, 1, "", "register_state_dict_pre_hook"], [90, 1, 1, "", "requires_grad_"], [90, 1, 1, "", "reset"], [90, 3, 1, "", "reset_keys"], [90, 3, 1, "", "reward_key"], [90, 3, 1, "", "reward_keys"], [90, 3, 1, "", "reward_spec"], [90, 1, 1, "", "rollout"], [90, 1, 1, "", "set_extra_state"], [90, 1, 1, "", "set_info_dict_reader"], [90, 1, 1, "", "set_seed"], [90, 3, 1, "", "shape"], [90, 1, 1, "", "share_memory"], [90, 3, 1, "", "specs"], [90, 1, 1, "", "state_dict"], [90, 3, 1, "", "state_spec"], [90, 1, 1, "", "step"], [90, 1, 1, "", "step_and_maybe_reset"], [90, 1, 1, "", "to"], [90, 1, 1, "", "to_empty"], [90, 1, 1, "", "train"], [90, 1, 1, "", "type"], [90, 1, 1, "", "xpu"], [90, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[104, 3, 1, "", "action_key"], [104, 3, 1, "", "action_keys"], [104, 3, 1, "", "action_spec"], [104, 1, 1, "", "add_module"], [104, 1, 1, "", "add_truncated_keys"], [104, 1, 1, "", "append_transform"], [104, 1, 1, "", "apply"], [104, 3, 1, "", "batch_locked"], [104, 3, 1, "", "batch_size"], [104, 1, 1, "", "bfloat16"], [104, 1, 1, "", "buffers"], [104, 1, 1, "", "children"], [104, 1, 1, "", "compile"], [104, 1, 1, "", "cpu"], [104, 1, 1, "", "cuda"], [104, 3, 1, "", "done_key"], [104, 3, 1, "", "done_keys"], [104, 3, 1, "", "done_keys_groups"], [104, 3, 1, "", "done_spec"], [104, 1, 1, "", "double"], [104, 1, 1, "", "empty_cache"], [104, 1, 1, "", "eval"], [104, 1, 1, "", "extra_repr"], [104, 1, 1, "", "fake_tensordict"], [104, 1, 1, "", "float"], [104, 1, 1, "", "forward"], [104, 3, 1, "", "full_action_spec"], [104, 3, 1, "", "full_done_spec"], [104, 3, 1, "", "full_reward_spec"], [104, 3, 1, "", "full_state_spec"], [104, 1, 1, "", "get_buffer"], [104, 1, 1, "", "get_extra_state"], [104, 1, 1, "", "get_parameter"], [104, 1, 1, "", "get_submodule"], [104, 1, 1, "", "half"], [104, 3, 1, "", "input_spec"], [104, 1, 1, "", "ipu"], [104, 1, 1, "", "load_state_dict"], [104, 1, 1, "", "maybe_reset"], [104, 1, 1, "", "modules"], [104, 1, 1, "", "named_buffers"], [104, 1, 1, "", "named_children"], [104, 1, 1, "", "named_modules"], [104, 1, 1, "", "named_parameters"], [104, 3, 1, "", "observation_spec"], [104, 3, 1, "", "output_spec"], [104, 1, 1, "", "parameters"], [104, 1, 1, "", "rand_action"], [104, 1, 1, "", "rand_step"], [104, 1, 1, "", "register_backward_hook"], [104, 1, 1, "", "register_buffer"], [104, 1, 1, "", "register_forward_hook"], [104, 1, 1, "", "register_forward_pre_hook"], [104, 1, 1, "", "register_full_backward_hook"], [104, 1, 1, "", "register_full_backward_pre_hook"], [104, 1, 1, "", "register_gym"], [104, 1, 1, "", "register_load_state_dict_post_hook"], [104, 1, 1, "", "register_module"], [104, 1, 1, "", "register_parameter"], [104, 1, 1, "", "register_state_dict_pre_hook"], [104, 1, 1, "", "requires_grad_"], [104, 1, 1, "", "reset"], [104, 3, 1, "", "reset_keys"], [104, 3, 1, "", "reward_key"], [104, 3, 1, "", "reward_keys"], [104, 3, 1, "", "reward_spec"], [104, 1, 1, "", "rollout"], [104, 1, 1, "", "set_extra_state"], [104, 1, 1, "", "set_seed"], [104, 3, 1, "", "shape"], [104, 1, 1, "", "share_memory"], [104, 3, 1, "", "specs"], [104, 1, 1, "", "state_dict"], [104, 3, 1, "", "state_spec"], [104, 1, 1, "", "step"], [104, 1, 1, "", "step_and_maybe_reset"], [104, 1, 1, "", "to"], [104, 1, 1, "", "to_empty"], [104, 1, 1, "", "train"], [104, 1, 1, "", "type"], [104, 1, 1, "", "update_kwargs"], [104, 1, 1, "", "xpu"], [104, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[110, 3, 1, "", "action_key"], [110, 3, 1, "", "action_keys"], [110, 3, 1, "", "action_spec"], [110, 1, 1, "", "add_module"], [110, 1, 1, "", "add_truncated_keys"], [110, 1, 1, "", "append_transform"], [110, 1, 1, "", "apply"], [110, 3, 1, "", "batch_locked"], [110, 3, 1, "", "batch_size"], [110, 1, 1, "", "bfloat16"], [110, 1, 1, "", "buffers"], [110, 1, 1, "", "children"], [110, 1, 1, "", "compile"], [110, 1, 1, "", "cpu"], [110, 1, 1, "", "cuda"], [110, 3, 1, "", "done_key"], [110, 3, 1, "", "done_keys"], [110, 3, 1, "", "done_keys_groups"], [110, 3, 1, "", "done_spec"], [110, 1, 1, "", "double"], [110, 1, 1, "", "empty_cache"], [110, 1, 1, "", "eval"], [110, 1, 1, "", "extra_repr"], [110, 1, 1, "", "fake_tensordict"], [110, 1, 1, "", "float"], [110, 1, 1, "", "forward"], [110, 3, 1, "", "full_action_spec"], [110, 3, 1, "", "full_done_spec"], [110, 3, 1, "", "full_reward_spec"], [110, 3, 1, "", "full_state_spec"], [110, 1, 1, "", "get_buffer"], [110, 1, 1, "", "get_extra_state"], [110, 1, 1, "", "get_parameter"], [110, 1, 1, "", "get_submodule"], [110, 1, 1, "", "half"], [110, 3, 1, "", "input_spec"], [110, 1, 1, "", "ipu"], [110, 1, 1, "", "load_state_dict"], [110, 1, 1, "", "maybe_reset"], [110, 1, 1, "", "modules"], [110, 1, 1, "", "named_buffers"], [110, 1, 1, "", "named_children"], [110, 1, 1, "", "named_modules"], [110, 1, 1, "", "named_parameters"], [110, 3, 1, "", "observation_spec"], [110, 3, 1, "", "output_spec"], [110, 1, 1, "", "parameters"], [110, 1, 1, "", "rand_action"], [110, 1, 1, "", "rand_step"], [110, 1, 1, "", "register_backward_hook"], [110, 1, 1, "", "register_buffer"], [110, 1, 1, "", "register_forward_hook"], [110, 1, 1, "", "register_forward_pre_hook"], [110, 1, 1, "", "register_full_backward_hook"], [110, 1, 1, "", "register_full_backward_pre_hook"], [110, 1, 1, "", "register_gym"], [110, 1, 1, "", "register_load_state_dict_post_hook"], [110, 1, 1, "", "register_module"], [110, 1, 1, "", "register_parameter"], [110, 1, 1, "", "register_state_dict_pre_hook"], [110, 1, 1, "", "requires_grad_"], [110, 1, 1, "", "reset"], [110, 3, 1, "", "reset_keys"], [110, 3, 1, "", "reward_key"], [110, 3, 1, "", "reward_keys"], [110, 3, 1, "", "reward_spec"], [110, 1, 1, "", "rollout"], [110, 1, 1, "", "set_extra_state"], [110, 1, 1, "", "set_seed"], [110, 3, 1, "", "shape"], [110, 1, 1, "", "share_memory"], [110, 3, 1, "", "specs"], [110, 1, 1, "", "state_dict"], [110, 3, 1, "", "state_spec"], [110, 1, 1, "", "step"], [110, 1, 1, "", "step_and_maybe_reset"], [110, 1, 1, "", "to"], [110, 1, 1, "", "to_empty"], [110, 1, 1, "", "train"], [110, 1, 1, "", "type"], [110, 1, 1, "", "update_kwargs"], [110, 1, 1, "", "xpu"], [110, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[115, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[117, 0, 1, "", "ActionMask"], [118, 0, 1, "", "AutoResetEnv"], [119, 0, 1, "", "AutoResetTransform"], [120, 0, 1, "", "BatchSizeTransform"], [121, 0, 1, "", "BinarizeReward"], [122, 0, 1, "", "BurnInTransform"], [123, 0, 1, "", "CatFrames"], [124, 0, 1, "", "CatTensors"], [125, 0, 1, "", "CenterCrop"], [126, 0, 1, "", "ClipTransform"], [127, 0, 1, "", "Compose"], [128, 0, 1, "", "DTypeCastTransform"], [129, 0, 1, "", "DeviceCastTransform"], [130, 0, 1, "", "DiscreteActionProjection"], [131, 0, 1, "", "DoubleToFloat"], [132, 0, 1, "", "EndOfLifeTransform"], [133, 0, 1, "", "ExcludeTransform"], [134, 0, 1, "", "FiniteTensorDictCheck"], [135, 0, 1, "", "FlattenObservation"], [136, 0, 1, "", "FrameSkipTransform"], [137, 0, 1, "", "GrayScale"], [138, 0, 1, "", "InitTracker"], [139, 0, 1, "", "KLRewardTransform"], [140, 0, 1, "", "NoopResetEnv"], [141, 0, 1, "", "ObservationNorm"], [142, 0, 1, "", "ObservationTransform"], [143, 0, 1, "", "PermuteTransform"], [144, 0, 1, "", "PinMemoryTransform"], [145, 0, 1, "", "R3MTransform"], [146, 0, 1, "", "RandomCropTensorDict"], [147, 0, 1, "", "RemoveEmptySpecs"], [148, 0, 1, "", "RenameTransform"], [149, 0, 1, "", "Resize"], [150, 0, 1, "", "Reward2GoTransform"], [151, 0, 1, "", "RewardClipping"], [152, 0, 1, "", "RewardScaling"], [153, 0, 1, "", "RewardSum"], [154, 0, 1, "", "SelectTransform"], [155, 0, 1, "", "SignTransform"], [156, 0, 1, "", "SqueezeTransform"], [157, 0, 1, "", "StepCounter"], [158, 0, 1, "", "TargetReturn"], [159, 0, 1, "", "TensorDictPrimer"], [160, 0, 1, "", "TimeMaxPool"], [161, 0, 1, "", "ToTensorImage"], [162, 0, 1, "", "Transform"], [163, 0, 1, "", "TransformedEnv"], [164, 0, 1, "", "UnsqueezeTransform"], [165, 0, 1, "", "VC1Transform"], [166, 0, 1, "", "VIPRewardTransform"], [167, 0, 1, "", "VIPTransform"], [168, 0, 1, "", "VecGymEnvTransform"], [169, 0, 1, "", "VecNorm"], [170, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.AutoResetEnv": [[118, 1, 1, "", "insert_transform"]], "torchrl.envs.transforms.AutoResetTransform": [[119, 1, 1, "", "forward"]], "torchrl.envs.transforms.BatchSizeTransform": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "transform_env_batch_size"], [120, 1, 1, "", "transform_input_spec"], [120, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.BinarizeReward": [[121, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[122, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[126, 1, 1, "", "transform_observation_spec"], [126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[127, 1, 1, "", "append"], [127, 1, 1, "", "forward"], [127, 1, 1, "", "insert"], [127, 1, 1, "", "to"], [127, 1, 1, "", "transform_env_batch_size"], [127, 1, 1, "", "transform_env_device"], [127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_observation_spec"], [127, 1, 1, "", "transform_output_spec"], [127, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "transform_input_spec"], [128, 1, 1, "", "transform_observation_spec"], [128, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_done_spec"], [129, 1, 1, "", "transform_env_device"], [129, 1, 1, "", "transform_input_spec"], [129, 1, 1, "", "transform_observation_spec"], [129, 1, 1, "", "transform_output_spec"], [129, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[130, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "register_keys"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[134, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[136, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[141, 1, 1, "", "init_stats"], [141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[144, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[145, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[146, 1, 1, "", "forward"]], "torchrl.envs.transforms.RemoveEmptySpecs": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.RenameTransform": [[148, 1, 1, "", "forward"], [148, 1, 1, "", "transform_input_spec"], [148, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[150, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[151, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[152, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "transform_input_spec"], [153, 1, 1, "", "transform_observation_spec"], [153, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.SelectTransform": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.SignTransform": [[155, 1, 1, "", "transform_observation_spec"], [155, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.StepCounter": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "transform_input_spec"], [157, 1, 1, "", "transform_observation_spec"], [157, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_input_spec"], [158, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[159, 1, 1, "", "forward"], [159, 1, 1, "", "to"], [159, 1, 1, "", "transform_input_spec"], [159, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[161, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[162, 3, 1, "", "container"], [162, 1, 1, "", "forward"], [162, 3, 1, "", "parent"], [162, 1, 1, "", "to"], [162, 1, 1, "", "transform_done_spec"], [162, 1, 1, "", "transform_env_batch_size"], [162, 1, 1, "", "transform_env_device"], [162, 1, 1, "", "transform_input_spec"], [162, 1, 1, "", "transform_observation_spec"], [162, 1, 1, "", "transform_output_spec"], [162, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[163, 1, 1, "", "add_truncated_keys"], [163, 1, 1, "", "append_transform"], [163, 3, 1, "", "batch_locked"], [163, 3, 1, "", "batch_size"], [163, 1, 1, "", "empty_cache"], [163, 1, 1, "", "eval"], [163, 3, 1, "", "input_spec"], [163, 1, 1, "", "insert_transform"], [163, 1, 1, "", "load_state_dict"], [163, 3, 1, "", "output_spec"], [163, 1, 1, "", "set_missing_tolerance"], [163, 1, 1, "", "set_seed"], [163, 1, 1, "", "state_dict"], [163, 1, 1, "", "to"], [163, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[164, 1, 1, "", "transform_input_spec"], [164, 1, 1, "", "transform_observation_spec"], [164, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[165, 1, 1, "", "forward"], [165, 1, 1, "", "make_noload_model"], [165, 1, 1, "", "to"], [165, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[166, 1, 1, "", "forward"], [166, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[167, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[168, 1, 1, "", "forward"], [168, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[169, 1, 1, "", "build_td_for_shared_vecnorm"], [169, 1, 1, "", "forward"], [169, 1, 1, "", "get_extra_state"], [169, 1, 1, "", "set_extra_state"], [169, 1, 1, "", "to_observation_norm"]], "torchrl.envs.transforms.rb_transforms": [[171, 0, 1, "", "MultiStepTransform"]], "torchrl.envs.transforms.rb_transforms.MultiStepTransform": [[171, 1, 1, "", "add_module"], [171, 1, 1, "", "apply"], [171, 1, 1, "", "bfloat16"], [171, 1, 1, "", "buffers"], [171, 1, 1, "", "children"], [171, 1, 1, "", "compile"], [171, 3, 1, "", "container"], [171, 1, 1, "", "cpu"], [171, 1, 1, "", "cuda"], [171, 1, 1, "", "double"], [171, 1, 1, "", "eval"], [171, 1, 1, "", "extra_repr"], [171, 1, 1, "", "float"], [171, 1, 1, "", "forward"], [171, 1, 1, "", "get_buffer"], [171, 1, 1, "", "get_extra_state"], [171, 1, 1, "", "get_parameter"], [171, 1, 1, "", "get_submodule"], [171, 1, 1, "", "half"], [171, 1, 1, "", "ipu"], [171, 1, 1, "", "load_state_dict"], [171, 1, 1, "", "modules"], [171, 3, 1, "", "n_steps"], [171, 1, 1, "", "named_buffers"], [171, 1, 1, "", "named_children"], [171, 1, 1, "", "named_modules"], [171, 1, 1, "", "named_parameters"], [171, 1, 1, "", "parameters"], [171, 3, 1, "", "parent"], [171, 1, 1, "", "register_backward_hook"], [171, 1, 1, "", "register_buffer"], [171, 1, 1, "", "register_forward_hook"], [171, 1, 1, "", "register_forward_pre_hook"], [171, 1, 1, "", "register_full_backward_hook"], [171, 1, 1, "", "register_full_backward_pre_hook"], [171, 1, 1, "", "register_load_state_dict_post_hook"], [171, 1, 1, "", "register_module"], [171, 1, 1, "", "register_parameter"], [171, 1, 1, "", "register_state_dict_pre_hook"], [171, 1, 1, "", "requires_grad_"], [171, 1, 1, "", "set_extra_state"], [171, 1, 1, "", "share_memory"], [171, 1, 1, "", "state_dict"], [171, 1, 1, "", "to"], [171, 1, 1, "", "to_empty"], [171, 1, 1, "", "train"], [171, 1, 1, "", "transform_done_spec"], [171, 1, 1, "", "transform_env_batch_size"], [171, 1, 1, "", "transform_env_device"], [171, 1, 1, "", "transform_input_spec"], [171, 1, 1, "", "transform_observation_spec"], [171, 1, 1, "", "transform_output_spec"], [171, 1, 1, "", "transform_reward_spec"], [171, 1, 1, "", "type"], [171, 1, 1, "", "xpu"], [171, 1, 1, "", "zero_grad"]], "torchrl.envs.utils": [[172, 2, 1, "", "check_env_specs"], [173, 2, 1, "", "exploration_mode"], [174, 2, 1, "", "exploration_type"], [175, 2, 1, "", "get_available_libraries"], [176, 2, 1, "", "make_composite_from_td"], [177, 2, 1, "", "set_exploration_mode"], [178, 2, 1, "", "set_exploration_type"], [179, 2, 1, "", "step_mdp"], [180, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[181, 0, 1, "", "CEMPlanner"], [182, 0, 1, "", "Conv3dNet"], [183, 0, 1, "", "ConvNet"], [184, 0, 1, "", "DTActor"], [185, 0, 1, "", "DdpgCnnActor"], [186, 0, 1, "", "DdpgCnnQNet"], [187, 0, 1, "", "DdpgMlpActor"], [188, 0, 1, "", "DdpgMlpQNet"], [189, 0, 1, "", "DecisionTransformer"], [190, 0, 1, "", "Delta"], [191, 0, 1, "", "DistributionalDQNnet"], [192, 0, 1, "", "DistributionalQValueHook"], [193, 0, 1, "", "DreamerActor"], [194, 0, 1, "", "DuelingCnnDQNet"], [195, 0, 1, "", "GRU"], [196, 0, 1, "", "GRUCell"], [197, 0, 1, "", "GRUModule"], [198, 0, 1, "", "IndependentNormal"], [199, 0, 1, "", "LSTM"], [200, 0, 1, "", "LSTMCell"], [201, 0, 1, "", "LSTMModule"], [202, 0, 1, "", "LSTMNet"], [203, 0, 1, "", "MLP"], [204, 0, 1, "", "MPCPlannerBase"], [205, 0, 1, "", "MPPIPlanner"], [206, 0, 1, "", "MaskedCategorical"], [207, 0, 1, "", "MaskedOneHotCategorical"], [208, 0, 1, "", "MultiAgentConvNet"], [209, 0, 1, "", "MultiAgentMLP"], [210, 0, 1, "", "NoisyLazyLinear"], [211, 0, 1, "", "NoisyLinear"], [212, 0, 1, "", "NormalParamWrapper"], [213, 0, 1, "", "ObsDecoder"], [214, 0, 1, "", "ObsEncoder"], [215, 0, 1, "", "OneHotCategorical"], [216, 0, 1, "", "OnlineDTActor"], [217, 0, 1, "", "QMixer"], [218, 0, 1, "", "QValueHook"], [219, 0, 1, "", "RSSMPosterior"], [220, 0, 1, "", "RSSMPrior"], [221, 0, 1, "", "Squeeze2dLayer"], [222, 0, 1, "", "SqueezeLayer"], [223, 0, 1, "", "TanhDelta"], [224, 0, 1, "", "TanhNormal"], [225, 0, 1, "", "TruncatedNormal"], [226, 0, 1, "", "VDNMixer"], [227, 0, 1, "", "VmapModule"], [228, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[181, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[182, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[183, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[184, 1, 1, "", "default_config"], [184, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[185, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[186, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[187, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[188, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[189, 0, 1, "", "DTConfig"], [189, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[190, 1, 1, "", "log_prob"], [190, 3, 1, "", "mean"], [190, 3, 1, "", "mode"], [190, 1, 1, "", "rsample"], [190, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[191, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[193, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[194, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[195, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[196, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[197, 1, 1, "", "forward"], [197, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[198, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[199, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[200, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[201, 1, 1, "", "forward"], [201, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[202, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[203, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[205, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[206, 1, 1, "", "log_prob"], [206, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[207, 1, 1, "", "log_prob"], [207, 1, 1, "", "rsample"], [207, 1, 1, "", "sample"]], "torchrl.modules.NoisyLazyLinear": [[210, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[212, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[213, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[214, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[215, 1, 1, "", "log_prob"], [215, 3, 1, "", "mode"], [215, 1, 1, "", "rsample"], [215, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[216, 1, 1, "", "default_config"], [216, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[217, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[219, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[220, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[222, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[223, 3, 1, "", "mean"], [223, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[224, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[225, 1, 1, "", "log_prob"], [225, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[226, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[227, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[229, 0, 1, "", "Actor"], [230, 0, 1, "", "ActorCriticOperator"], [231, 0, 1, "", "ActorCriticWrapper"], [232, 0, 1, "", "ActorValueOperator"], [233, 0, 1, "", "AdditiveGaussianWrapper"], [234, 0, 1, "", "DecisionTransformerInferenceWrapper"], [235, 0, 1, "", "DistributionalQValueActor"], [236, 0, 1, "", "DistributionalQValueModule"], [237, 0, 1, "", "EGreedyModule"], [238, 0, 1, "", "EGreedyWrapper"], [239, 0, 1, "", "LMHeadActorValueOperator"], [240, 0, 1, "", "MultiStepActorWrapper"], [241, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [242, 0, 1, "", "ProbabilisticActor"], [243, 0, 1, "", "QValueActor"], [244, 0, 1, "", "QValueModule"], [245, 0, 1, "", "SafeModule"], [246, 0, 1, "", "SafeProbabilisticModule"], [247, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [248, 0, 1, "", "SafeSequential"], [249, 0, 1, "", "TanhModule"], [250, 0, 1, "", "ValueOperator"], [251, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[230, 1, 1, "", "get_critic_operator"], [230, 1, 1, "", "get_policy_head"], [230, 1, 1, "", "get_value_head"], [230, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[231, 1, 1, "", "get_policy_head"], [231, 1, 1, "", "get_policy_operator"], [231, 1, 1, "", "get_value_head"], [231, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[232, 1, 1, "", "get_policy_head"], [232, 1, 1, "", "get_policy_operator"], [232, 1, 1, "", "get_value_head"], [232, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[233, 1, 1, "", "forward"], [233, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "mask_context"], [234, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[236, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.MultiStepActorWrapper": [[240, 1, 1, "", "forward"], [240, 3, 1, "", "init_key"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[244, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[245, 1, 1, "", "random"], [245, 1, 1, "", "random_sample"], [245, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[246, 1, 1, "", "random"], [246, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[249, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[251, 1, 1, "", "get_reward_operator"], [251, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[252, 0, 1, "", "biased_softplus"], [253, 0, 1, "", "inv_softplus"], [254, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[252, 1, 1, "", "forward"]], "torchrl.objectives": [[255, 0, 1, "", "A2CLoss"], [256, 0, 1, "", "CQLLoss"], [257, 0, 1, "", "ClipPPOLoss"], [258, 0, 1, "", "DDPGLoss"], [259, 0, 1, "", "DQNLoss"], [260, 0, 1, "", "DTLoss"], [261, 0, 1, "", "DiscreteCQLLoss"], [262, 0, 1, "", "DiscreteIQLLoss"], [263, 0, 1, "", "DiscreteSACLoss"], [264, 0, 1, "", "DistributionalDQNLoss"], [265, 0, 1, "", "DreamerActorLoss"], [266, 0, 1, "", "DreamerModelLoss"], [267, 0, 1, "", "DreamerValueLoss"], [268, 0, 1, "", "HardUpdate"], [269, 0, 1, "", "IQLLoss"], [270, 0, 1, "", "KLPENPPOLoss"], [271, 0, 1, "", "LossModule"], [272, 0, 1, "", "OnlineDTLoss"], [273, 0, 1, "", "PPOLoss"], [274, 0, 1, "", "REDQLoss"], [275, 0, 1, "", "ReinforceLoss"], [276, 0, 1, "", "SACLoss"], [277, 0, 1, "", "SoftUpdate"], [278, 0, 1, "", "TD3Loss"], [279, 0, 1, "", "ValueEstimators"], [280, 0, 1, "", "default_value_kwargs"], [281, 0, 1, "", "distance_loss"], [282, 0, 1, "", "hold_out_net"], [283, 0, 1, "", "hold_out_params"], [285, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[257, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[260, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteIQLLoss": [[262, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[266, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[267, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "loss_value_diff"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[270, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[271, 1, 1, "", "convert_to_functional"], [271, 1, 1, "", "forward"], [271, 1, 1, "", "make_value_estimator"], [271, 1, 1, "", "named_parameters"], [271, 1, 1, "", "parameters"], [271, 1, 1, "", "set_keys"], [271, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[272, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "load_state_dict"], [276, 1, 1, "", "make_value_estimator"], [276, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[284, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[284, 1, 1, "", "forward"], [284, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[286, 0, 1, "", "GAE"], [287, 0, 1, "", "TD0Estimator"], [288, 0, 1, "", "TD1Estimator"], [289, 0, 1, "", "TDLambdaEstimator"], [290, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[286, 1, 1, "", "forward"], [286, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[287, 1, 1, "", "forward"], [287, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[288, 1, 1, "", "forward"], [288, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[289, 1, 1, "", "forward"], [289, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[290, 1, 1, "", "forward"], [290, 1, 1, "", "set_keys"], [290, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[291, 0, 1, "", "generalized_advantage_estimate"], [292, 0, 1, "", "reward2go"], [293, 0, 1, "", "td0_advantage_estimate"], [294, 0, 1, "", "td0_return_estimate"], [295, 0, 1, "", "td1_advantage_estimate"], [296, 0, 1, "", "td1_return_estimate"], [297, 0, 1, "", "td_lambda_advantage_estimate"], [298, 0, 1, "", "td_lambda_return_estimate"], [299, 0, 1, "", "vec_generalized_advantage_estimate"], [300, 0, 1, "", "vec_td1_advantage_estimate"], [301, 0, 1, "", "vec_td1_return_estimate"], [302, 0, 1, "", "vec_td_lambda_advantage_estimate"], [303, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[304, 2, 1, "", "TensorDictRecorder"], [305, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[306, 2, 1, "", "Logger"], [308, 2, 1, "", "generate_exp_name"], [309, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[307, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[310, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[311, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[312, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[313, 0, 1, "", "BatchSubSampler"], [314, 0, 1, "", "ClearCudaCache"], [315, 0, 1, "", "CountFramesLog"], [316, 0, 1, "", "LogReward"], [317, 0, 1, "", "OptimizerHook"], [318, 0, 1, "", "Recorder"], [319, 0, 1, "", "ReplayBufferTrainer"], [320, 0, 1, "", "RewardNormalizer"], [321, 0, 1, "", "SelectKeys"], [322, 0, 1, "", "Trainer"], [323, 0, 1, "", "TrainerHookBase"], [324, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[313, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[314, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[315, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[316, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[317, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[318, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[319, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[320, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[321, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[323, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[324, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[325, 2, 1, "", "correct_for_frame_skip"], [326, 2, 1, "", "get_stats_random_rollout"], [327, 2, 1, "", "make_collector_offpolicy"], [328, 2, 1, "", "make_collector_onpolicy"], [329, 2, 1, "", "make_dqn_loss"], [330, 2, 1, "", "make_redq_loss"], [331, 2, 1, "", "make_redq_model"], [332, 2, 1, "", "make_replay_buffer"], [333, 2, 1, "", "make_target_updater"], [334, 2, 1, "", "make_trainer"], [335, 2, 1, "", "parallel_env_constructor"], [336, 2, 1, "", "sync_async_collector"], [337, 2, 1, "", "sync_sync_collector"], [338, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 342, 343, 344, 345, 347, 348, 349, 352, 359, 360, 364, 365], "instal": [0, 6, 7, 364], "get": [0, 351, 352, 353, 354, 355, 356], "start": [0, 351, 352, 353, 354, 355, 356], "tutori": [0, 349, 359], "basic": [0, 362], "intermedi": [0, 8], "advanc": 0, "refer": [0, 340], "knowledg": [0, 341], "base": [0, 2, 7, 341], "indic": 0, "tabl": 0, "collector": [1, 347, 348, 349, 350, 354, 356, 359, 364], "packag": [1, 2, 3, 342, 343, 344, 345], "batch": [1, 347, 360, 362], "size": [1, 347, 362], "replai": [1, 2, 347, 348, 349, 350, 354, 356, 359, 362, 364], "buffer": [1, 2, 347, 348, 349, 350, 354, 356, 359, 362, 364], "interoper": 1, "singl": [1, 4], "node": 1, "data": [1, 2, 4, 347, 348, 349, 354, 356, 359, 364], "distribut": [1, 342], "helper": [1, 3], "function": [1, 4, 343, 348, 349, 353, 359, 364], "compos": [2, 127], "support": 2, "type": 2, "choos": 2, "storag": [2, 75, 347, 354, 362], "sampl": [2, 362], "index": 2, "share": 2, "across": 2, "process": 2, "store": [2, 348, 362], "trajectori": [2, 362], "checkpoint": [2, 344], "episod": [2, 4], "format": 2, "ted": [2, 351], "The": [2, 347], "rational": 2, "behind": 2, "structur": [2, 362], "dimension": [2, 4], "tensordict": [2, 342, 362, 364], "special": [2, 352, 364], "case": 2, "footnot": 2, "multi": [2, 3, 342, 343, 358, 359], "agent": [2, 3, 4, 342, 343, 359], "present": 2, "memori": 2, "polici": [2, 4, 347, 349, 350, 352, 356, 358, 359, 360], "rnn": 2, "transform": [2, 3, 162, 347, 349, 351, 359, 360, 362, 364, 365], "step": [2, 347, 349, 351, 354, 359, 362, 365], "what": [2, 5], "about": 2, "requir": 2, "dataset": 2, "tensorspec": [2, 43], "reinforc": [2, 343, 349, 359], "learn": [2, 4, 349, 359], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 342, 343, 344], "env": [3, 360, 364, 365], "vector": [3, 364], "environ": [3, 4, 6, 7, 347, 348, 349, 350, 351, 356, 358, 359, 360, 364, 365], "auto": 3, "reset": [3, 360, 365], "clone": [3, 7], "mask": 3, "action": [3, 4, 350, 360], "record": [3, 318, 344, 347, 355], "domain": [3, 342], "specif": [3, 342, 358], "librari": [3, 364], "thing": [4, 347, 360], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 351, 353, 364], "gener": [4, 342], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 347, 356, 360], "algorithm": [4, 342], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 347, 348, 353, 356], "return": [4, 343], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 364], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 358], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 347, 348, 349], "standard": 4, "explor": [4, 342, 347, 348, 352], "valu": [4, 342, 343, 347, 349, 350, 352], "loss": [4, 347, 348, 349, 350, 356, 359], "earli": 4, "train": [4, 8, 343, 347, 349, 350, 353, 356, 359, 360], "roughli": 4, "uniformli": 4, "random": [4, 359], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "remain": 4, "constant": [4, 348], "increas": 4, "an": [4, 349, 350, 351, 360], "dynam": [4, 362], "can": 4, "low": 4, "forward": [4, 347], "model": [4, 342, 347, 348, 350, 353, 361, 364], "also": 4, "us": [4, 6, 9, 350, 361, 362, 364], "offlin": 4, "observ": [4, 347], "space": 4, "effect": [4, 360], "dramat": 4, "dure": [4, 7], "high": 4, "work": [5, 6, 7], "gym": [5, 365], "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": [7, 347], "render": [7, 356, 359, 365], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 347], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 360], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "syncdatacollector": 15, "asyncdatacollector": 16, "distributeddatacollector": 17, "distributedsyncdatacollector": 18, "rpcdatacollector": 19, "raycollector": 20, "submitit_delayed_launch": 21, "split_trajectori": 22, "binarydiscretetensorspec": 23, "boundedtensorspec": 24, "compositespec": 25, "discretetensorspec": 26, "lazystackedcompositespec": 27, "lazystackedtensorspec": 28, "multidiscretetensorspec": 29, "multionehotdiscretetensorspec": 30, "multistep": 31, "onehotdiscretetensorspec": 32, "pairwisedataset": 33, "prioritizedreplaybuff": 34, "promptdata": 35, "prompttensordicttoken": 36, "replaybuff": 37, "rewarddata": 38, "rolloutfrommodel": 39, "tensordictprioritizedreplaybuff": 40, "tensordictreplaybuff": 41, "tensordicttoken": 42, "tokenizeddatasetload": 44, "unboundedcontinuoustensorspec": 45, "unboundeddiscretetensorspec": 46, "check_no_exclusive_kei": 47, "consolidate_spec": 48, "contains_lazy_spec": 49, "create_infinite_iter": 50, "ataridqnexperiencereplai": 51, "basedatasetexperiencereplai": 52, "d4rlexperiencereplai": 53, "gendgrlexperiencereplai": 54, "minariexperiencereplai": 55, "openmlexperiencereplai": 56, "openxexperiencereplai": 57, "robosetexperiencereplai": 58, "vd4rlexperiencereplai": 59, "get_dataload": 60, "immutabledatasetwrit": 61, "lazymemmapstorag": 62, "lazytensorstorag": 63, "liststorag": 64, "prioritizedsampl": 65, "prioritizedslicesampl": 66, "randomsampl": 67, "replaybufferensembl": 68, "roundrobinwrit": 69, "sampler": 70, "samplerensembl": 71, "samplerwithoutreplac": 72, "slicesampl": 73, "slicesamplerwithoutreplac": 74, "storageensembl": 76, "tensordictmaxvaluewrit": 77, "tensordictroundrobinwrit": 78, "tensorstorag": 79, "writer": 80, "writerensembl": 81, "braxenv": 82, "braxwrapp": 83, "dmcontrolenv": 84, "dmcontrolwrapp": 85, "envbas": [86, 360], "envcreat": 87, "envmetadata": 88, "gymenv": 89, "gymlikeenv": 90, "gymwrapp": 91, "habitatenv": 92, "isaacgymenv": 93, "isaacgymwrapp": 94, "jumanjienv": 95, "jumanjiwrapp": 96, "mogymenv": 97, "mogymwrapp": 98, "marlgroupmaptyp": 99, "modelbasedenvbas": 100, "multithreadedenv": 101, "multithreadedenvwrapp": 102, "openmlenv": 103, "parallelenv": 104, "pettingzooenv": 105, "pettingzoowrapp": 106, "robohiveenv": 107, "smacv2env": 108, "smacv2wrapp": 109, "serialenv": 110, "vmasenv": 111, "vmaswrapp": 112, "check_marl_group": 113, "gym_backend": 114, "dreamerenv": 115, "set_gym_backend": 116, "actionmask": 117, "autoresetenv": 118, "autoresettransform": 119, "batchsizetransform": 120, "binarizereward": 121, "burnintransform": 122, "catfram": [123, 362], "cattensor": 124, "centercrop": 125, "cliptransform": 126, "dtypecasttransform": 128, "devicecasttransform": 129, "discreteactionproject": 130, "doubletofloat": 131, "endoflifetransform": 132, "excludetransform": 133, "finitetensordictcheck": 134, "flattenobserv": 135, "frameskiptransform": 136, "grayscal": 137, "inittrack": 138, "klrewardtransform": 139, "noopresetenv": 140, "observationnorm": 141, "observationtransform": 142, "permutetransform": 143, "pinmemorytransform": 144, "r3mtransform": 145, "randomcroptensordict": 146, "removeemptyspec": 147, "renametransform": 148, "resiz": 149, "reward2gotransform": 150, "rewardclip": 151, "rewardsc": 152, "rewardsum": 153, "selecttransform": 154, "signtransform": 155, "squeezetransform": 156, "stepcount": 157, "targetreturn": 158, "tensordictprim": 159, "timemaxpool": 160, "totensorimag": 161, "transformedenv": 163, "unsqueezetransform": 164, "vc1transform": 165, "viprewardtransform": 166, "viptransform": 167, "vecgymenvtransform": 168, "vecnorm": [169, 365], "gsdenois": 170, "multisteptransform": 171, "check_env_spec": 172, "exploration_mod": 173, "exploration_typ": 174, "get_available_librari": 175, "make_composite_from_td": 176, "set_exploration_mod": 177, "set_exploration_typ": 178, "step_mdp": 179, "terminated_or_trunc": 180, "cemplann": 181, "conv3dnet": 182, "convnet": 183, "dtactor": 184, "ddpgcnnactor": 185, "ddpgcnnqnet": 186, "ddpgmlpactor": 187, "ddpgmlpqnet": 188, "decisiontransform": 189, "delta": 190, "distributionaldqnnet": 191, "distributionalqvaluehook": 192, "dreameractor": 193, "duelingcnndqnet": 194, "gru": 195, "grucel": 196, "grumodul": 197, "independentnorm": 198, "lstm": [199, 350], "lstmcell": 200, "lstmmodul": 201, "lstmnet": 202, "mlp": [203, 350], "mpcplannerbas": 204, "mppiplann": 205, "maskedcategor": 206, "maskedonehotcategor": 207, "multiagentconvnet": 208, "multiagentmlp": 209, "noisylazylinear": 210, "noisylinear": 211, "normalparamwrapp": 212, "obsdecod": 213, "obsencod": 214, "onehotcategor": 215, "onlinedtactor": 216, "qmixer": [217, 343], "qvaluehook": 218, "rssmposterior": 219, "rssmprior": 220, "squeeze2dlay": 221, "squeezelay": 222, "tanhdelta": 223, "tanhnorm": 224, "truncatednorm": 225, "vdnmixer": 226, "vmapmodul": 227, "reset_nois": 228, "actor": [229, 342, 347, 352], "actorcriticoper": 230, "actorcriticwrapp": 231, "actorvalueoper": 232, "additivegaussianwrapp": 233, "decisiontransformerinferencewrapp": 234, "distributionalqvalueactor": 235, "distributionalqvaluemodul": 236, "egreedymodul": 237, "egreedywrapp": 238, "lmheadactorvalueoper": 239, "multistepactorwrapp": 240, "ornsteinuhlenbeckprocesswrapp": 241, "probabilisticactor": 242, "qvalueactor": 243, "qvaluemodul": 244, "safemodul": [245, 342], "safeprobabilisticmodul": 246, "safeprobabilistictensordictsequenti": 247, "safesequenti": 248, "tanhmodul": 249, "valueoper": 250, "worldmodelwrapp": 251, "biased_softplu": 252, "inv_softplu": 253, "map": 254, "a2closs": 255, "cqlloss": 256, "clipppoloss": 257, "ddpgloss": 258, "dqnloss": 259, "dtloss": 260, "discretecqlloss": 261, "discreteiqlloss": 262, "discretesacloss": 263, "distributionaldqnloss": 264, "dreameractorloss": 265, "dreamermodelloss": 266, "dreamervalueloss": 267, "hardupd": 268, "iqlloss": 269, "klpenppoloss": 270, "lossmodul": [271, 347, 353], "onlinedtloss": 272, "ppoloss": 273, "redqloss": 274, "reinforceloss": 275, "sacloss": 276, "softupd": 277, "td3loss": 278, "valueestim": 279, "default_value_kwarg": 280, "distance_loss": 281, "hold_out_net": 282, "hold_out_param": 283, "qmixerloss": 284, "next_state_valu": 285, "gae": 286, "td0estim": 287, "td1estim": 288, "tdlambdaestim": 289, "valueestimatorbas": 290, "generalized_advantage_estim": 291, "reward2go": 292, "td0_advantage_estim": 293, "td0_return_estim": 294, "td1_advantage_estim": 295, "td1_return_estim": 296, "td_lambda_advantage_estim": 297, "td_lambda_return_estim": 298, "vec_generalized_advantage_estim": 299, "vec_td1_advantage_estim": 300, "vec_td1_return_estim": 301, "vec_td_lambda_advantage_estim": 302, "vec_td_lambda_return_estim": 303, "tensordictrecord": 304, "videorecord": 305, "logger": [306, 344, 355, 356], "csvlogger": 307, "generate_exp_nam": 308, "get_logg": 309, "mlflowlogg": 310, "tensorboardlogg": 311, "wandblogg": 312, "batchsubsampl": 313, "clearcudacach": 314, "countframeslog": 315, "logreward": 316, "optimizerhook": 317, "replaybuffertrain": 319, "rewardnorm": 320, "selectkei": 321, "trainer": [322, 344, 348], "trainerhookbas": 323, "updateweight": 324, "correct_for_frame_skip": 325, "get_stats_random_rollout": 326, "make_collector_offpolici": 327, "make_collector_onpolici": 328, "make_dqn_loss": 329, "make_redq_loss": 330, "make_redq_model": 331, "make_replay_buff": 332, "make_target_updat": 333, "make_train": 334, "parallel_env_constructor": 335, "sync_async_collector": 336, "sync_sync_collector": 337, "transformed_env_constructor": 338, "readm": [339, 357], "tuto": [339, 357], "api": 340, "contribut": [341, 364], "content": 341, "modul": [342, 347, 350, 352, 356, 364], "tensordictmodul": [342, 352, 364], "wrapper": [342, 352], "probabilist": [342, 352], "q": [342, 348, 350, 352], "oper": 342, "join": 342, "hook": [342, 344, 348], "regular": 342, "planner": 342, "object": [343, 347, 353, 364], "dqn": [343, 348, 350], "ddpg": [343, 347], "sac": 343, "redq": 343, "iql": 343, "cql": 343, "dt": 343, "td3": 343, "ppo": [343, 349, 359], "a2c": 343, "dreamer": 343, "builder": 344, "_util": 345, "comput": [346, 348, 360, 363], "time": [346, 347, 363], "code": [347, 360], "overview": [347, 350], "setup": [347, 350], "__init__": 347, "method": 347, "estim": 347, "put": 347, "togeth": [347, 360], "call": 347, "parallel": [347, 358, 365], "execut": [347, 358, 360], "stat": 347, "build": [347, 348, 356, 362], "evalu": 347, "construct": 347, "target": [347, 348, 353], "network": [347, 348, 349, 350, 352, 359], "updat": 347, "experi": [347, 360], "result": [347, 349, 359], "conclus": [347, 348, 349, 350, 359, 360, 362], "next": [347, 349, 351, 354, 359, 362], "A": [348, 362], "exampl": [348, 362], "deep": 348, "collect": [348, 349, 354], "paramet": [348, 349, 353], "hyperparamet": [348, 349, 359], "regist": 348, "possibl": 348, "improv": 348, "defin": [349, 359], "loop": [349, 350, 356, 359, 360], "recurr": 350, "convolut": 350, "select": 350, "further": [350, 353], "read": 350, "creat": 351, "run": [351, 365], "rollout": [351, 358, 359, 360, 365], "s": [352, 353], "output": 353, "consider": 353, "log": 355, "video": 355, "own": 356, "first": 356, "design": 356, "divers": 358, "critic": 359, "pendulum": 360, "write": 360, "_step": 360, "simul": 360, "_reset": 360, "metadata": 360, "_spec": 360, "spec": [360, 365], "shape": 360, "seed": [360, 365], "wrap": 360, "class": [360, 364], "test": 360, "our": 360, "custom": [360, 362], "simpl": 360, "pretrain": 361, "vanilla": 362, "integr": 362, "tensorclass": 362, "other": 362, "tensor": 362, "pytre": 362, "iter": 362, "over": 362, "fix": 362, "priorit": 362, "save": 362, "raw": 362, "imag": 362, "more": 362, "complex": 362, "introduct": 364, "config": 364, "sequenc": 364, "program": 364, "ensembl": 364, "meta": 364, "state": 364, "frame_skip": 365, "deepmind": 365, "control": 365, "devic": 365, "close": 365, "access": 365, "attribut": 365, "kwarg": 365}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})